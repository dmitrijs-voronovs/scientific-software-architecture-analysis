id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/issues/7967:1644,safety,Detect,Detected,1644,"l sorts of errors. Consider the following example code:. ```Python. from ROOT import RooArgList,RooArgSet,RooRealVar,TMatrixDSym,RooMultiVarGaussian,RooFit,RooWorkspace,RooStats,RooExtendPdf. . allvars = []. . xvals = RooArgList(). variables = RooArgSet(). muvals = RooArgList(). . for i in range(0,3):. mu = RooRealVar(""mu_{:d}"".format(i),""mu_{:d}"".format(i),1.,-10,10). muvals.add(mu). x = RooRealVar(""x_{:d}"".format(i),""x_{:d}"".format(i),1.). xvals.add(x). variables.add(x). . # side problem: unless these two lines are executed, the python garbage collector deletes mu and x. # causing a segfault in the construction of the RooMultiVarGaussian. allvars.append(mu). allvars.append(x). . covmat = TMatrixDSym(3). covmat[0][0] = 1. covmat[1][1] = 2. covmat[2][2] = 3. covmat[0][1] = 0.2. covmat[1][0] = 0.2. covmat[1][2] = 0.6. covmat[2][1] = 0.6. covmat[2][0] = 0.3. covmat[0][2] = 0.3. . nevents = 1000. mvg = RooMultiVarGaussian(""mvg"",""mvg"",xvals,muvals,covmat). allvars.append(mvg). . ws = RooWorkspace(""ws""). ws.Import(mvg). mc = RooStats.ModelConfig(""model"",""model"",ws). mc.SetObservables(xvals). mc.SetParametersOfInterest(muvals). mc.SetPdf(mvg.GetName()). . # main problem: AsymptoticCalculator doesn't accept RooMultiVarGaussian. data = RooStats.AsymptoticCalculator.MakeAsimovData(mc,muvals,RooArgSet()). ```. . Also, wrapping the Multivariate Gaussian in `RooExtendPdf` doesn't help either, as this results in lots of warnings saying `WARNING::Detected a bin with zero expected events- skip it` - probably that warning should only be emitted once. Also, the resulting asimov dataset has 0 events. norm = RooRealVar(""norm"",""norm"",1000). extmvg = RooExtendPdf(""extPdf"",""extPdf"",mvg,norm). ws.Import(extmvg,RooFit.RecycleConflictNodes()). mc_cnt = RooStats.ModelConfig(""countingModel"",""countingModel"",ws). mc_cnt.SetObservables(xvals). mc_cnt.SetParametersOfInterest(muvals). mc_cnt.SetPdf(extmvg.GetName()). . data = RooStats.AsymptoticCalculator.MakeAsimovData(mc_cnt,muvals,RooArgSet()).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7967
https://github.com/root-project/root/issues/7967:125,security,Model,ModelConfig,125,"[RF] RooStats doesn't like RooMultiVarGaussian; Using `RooMultiVarGaussian` together with `RooStats` objects like `RooStats::ModelConfig` and `RooStats::AsymptoticsCalculator` produces all sorts of errors. Consider the following example code:. ```Python. from ROOT import RooArgList,RooArgSet,RooRealVar,TMatrixDSym,RooMultiVarGaussian,RooFit,RooWorkspace,RooStats,RooExtendPdf. . allvars = []. . xvals = RooArgList(). variables = RooArgSet(). muvals = RooArgList(). . for i in range(0,3):. mu = RooRealVar(""mu_{:d}"".format(i),""mu_{:d}"".format(i),1.,-10,10). muvals.add(mu). x = RooRealVar(""x_{:d}"".format(i),""x_{:d}"".format(i),1.). xvals.add(x). variables.add(x). . # side problem: unless these two lines are executed, the python garbage collector deletes mu and x. # causing a segfault in the construction of the RooMultiVarGaussian. allvars.append(mu). allvars.append(x). . covmat = TMatrixDSym(3). covmat[0][0] = 1. covmat[1][1] = 2. covmat[2][2] = 3. covmat[0][1] = 0.2. covmat[1][0] = 0.2. covmat[1][2] = 0.6. covmat[2][1] = 0.6. covmat[2][0] = 0.3. covmat[0][2] = 0.3. . nevents = 1000. mvg = RooMultiVarGaussian(""mvg"",""mvg"",xvals,muvals,covmat). allvars.append(mvg). . ws = RooWorkspace(""ws""). ws.Import(mvg). mc = RooStats.ModelConfig(""model"",""model"",ws). mc.SetObservables(xvals). mc.SetParametersOfInterest(muvals). mc.SetPdf(mvg.GetName()). . # main problem: AsymptoticCalculator doesn't accept RooMultiVarGaussian. data = RooStats.AsymptoticCalculator.MakeAsimovData(mc,muvals,RooArgSet()). ```. . Also, wrapping the Multivariate Gaussian in `RooExtendPdf` doesn't help either, as this results in lots of warnings saying `WARNING::Detected a bin with zero expected events- skip it` - probably that warning should only be emitted once. Also, the resulting asimov dataset has 0 events. norm = RooRealVar(""norm"",""norm"",1000). extmvg = RooExtendPdf(""extPdf"",""extPdf"",mvg,norm). ws.Import(extmvg,RooFit.RecycleConflictNodes()). mc_cnt = RooStats.ModelConfig(""countingModel"",""countingModel"",ws",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7967
https://github.com/root-project/root/issues/7967:1232,security,Model,ModelConfig,1232,"l sorts of errors. Consider the following example code:. ```Python. from ROOT import RooArgList,RooArgSet,RooRealVar,TMatrixDSym,RooMultiVarGaussian,RooFit,RooWorkspace,RooStats,RooExtendPdf. . allvars = []. . xvals = RooArgList(). variables = RooArgSet(). muvals = RooArgList(). . for i in range(0,3):. mu = RooRealVar(""mu_{:d}"".format(i),""mu_{:d}"".format(i),1.,-10,10). muvals.add(mu). x = RooRealVar(""x_{:d}"".format(i),""x_{:d}"".format(i),1.). xvals.add(x). variables.add(x). . # side problem: unless these two lines are executed, the python garbage collector deletes mu and x. # causing a segfault in the construction of the RooMultiVarGaussian. allvars.append(mu). allvars.append(x). . covmat = TMatrixDSym(3). covmat[0][0] = 1. covmat[1][1] = 2. covmat[2][2] = 3. covmat[0][1] = 0.2. covmat[1][0] = 0.2. covmat[1][2] = 0.6. covmat[2][1] = 0.6. covmat[2][0] = 0.3. covmat[0][2] = 0.3. . nevents = 1000. mvg = RooMultiVarGaussian(""mvg"",""mvg"",xvals,muvals,covmat). allvars.append(mvg). . ws = RooWorkspace(""ws""). ws.Import(mvg). mc = RooStats.ModelConfig(""model"",""model"",ws). mc.SetObservables(xvals). mc.SetParametersOfInterest(muvals). mc.SetPdf(mvg.GetName()). . # main problem: AsymptoticCalculator doesn't accept RooMultiVarGaussian. data = RooStats.AsymptoticCalculator.MakeAsimovData(mc,muvals,RooArgSet()). ```. . Also, wrapping the Multivariate Gaussian in `RooExtendPdf` doesn't help either, as this results in lots of warnings saying `WARNING::Detected a bin with zero expected events- skip it` - probably that warning should only be emitted once. Also, the resulting asimov dataset has 0 events. norm = RooRealVar(""norm"",""norm"",1000). extmvg = RooExtendPdf(""extPdf"",""extPdf"",mvg,norm). ws.Import(extmvg,RooFit.RecycleConflictNodes()). mc_cnt = RooStats.ModelConfig(""countingModel"",""countingModel"",ws). mc_cnt.SetObservables(xvals). mc_cnt.SetParametersOfInterest(muvals). mc_cnt.SetPdf(extmvg.GetName()). . data = RooStats.AsymptoticCalculator.MakeAsimovData(mc_cnt,muvals,RooArgSet()).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7967
https://github.com/root-project/root/issues/7967:1245,security,model,model,1245,"l sorts of errors. Consider the following example code:. ```Python. from ROOT import RooArgList,RooArgSet,RooRealVar,TMatrixDSym,RooMultiVarGaussian,RooFit,RooWorkspace,RooStats,RooExtendPdf. . allvars = []. . xvals = RooArgList(). variables = RooArgSet(). muvals = RooArgList(). . for i in range(0,3):. mu = RooRealVar(""mu_{:d}"".format(i),""mu_{:d}"".format(i),1.,-10,10). muvals.add(mu). x = RooRealVar(""x_{:d}"".format(i),""x_{:d}"".format(i),1.). xvals.add(x). variables.add(x). . # side problem: unless these two lines are executed, the python garbage collector deletes mu and x. # causing a segfault in the construction of the RooMultiVarGaussian. allvars.append(mu). allvars.append(x). . covmat = TMatrixDSym(3). covmat[0][0] = 1. covmat[1][1] = 2. covmat[2][2] = 3. covmat[0][1] = 0.2. covmat[1][0] = 0.2. covmat[1][2] = 0.6. covmat[2][1] = 0.6. covmat[2][0] = 0.3. covmat[0][2] = 0.3. . nevents = 1000. mvg = RooMultiVarGaussian(""mvg"",""mvg"",xvals,muvals,covmat). allvars.append(mvg). . ws = RooWorkspace(""ws""). ws.Import(mvg). mc = RooStats.ModelConfig(""model"",""model"",ws). mc.SetObservables(xvals). mc.SetParametersOfInterest(muvals). mc.SetPdf(mvg.GetName()). . # main problem: AsymptoticCalculator doesn't accept RooMultiVarGaussian. data = RooStats.AsymptoticCalculator.MakeAsimovData(mc,muvals,RooArgSet()). ```. . Also, wrapping the Multivariate Gaussian in `RooExtendPdf` doesn't help either, as this results in lots of warnings saying `WARNING::Detected a bin with zero expected events- skip it` - probably that warning should only be emitted once. Also, the resulting asimov dataset has 0 events. norm = RooRealVar(""norm"",""norm"",1000). extmvg = RooExtendPdf(""extPdf"",""extPdf"",mvg,norm). ws.Import(extmvg,RooFit.RecycleConflictNodes()). mc_cnt = RooStats.ModelConfig(""countingModel"",""countingModel"",ws). mc_cnt.SetObservables(xvals). mc_cnt.SetParametersOfInterest(muvals). mc_cnt.SetPdf(extmvg.GetName()). . data = RooStats.AsymptoticCalculator.MakeAsimovData(mc_cnt,muvals,RooArgSet()).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7967
https://github.com/root-project/root/issues/7967:1253,security,model,model,1253,"l sorts of errors. Consider the following example code:. ```Python. from ROOT import RooArgList,RooArgSet,RooRealVar,TMatrixDSym,RooMultiVarGaussian,RooFit,RooWorkspace,RooStats,RooExtendPdf. . allvars = []. . xvals = RooArgList(). variables = RooArgSet(). muvals = RooArgList(). . for i in range(0,3):. mu = RooRealVar(""mu_{:d}"".format(i),""mu_{:d}"".format(i),1.,-10,10). muvals.add(mu). x = RooRealVar(""x_{:d}"".format(i),""x_{:d}"".format(i),1.). xvals.add(x). variables.add(x). . # side problem: unless these two lines are executed, the python garbage collector deletes mu and x. # causing a segfault in the construction of the RooMultiVarGaussian. allvars.append(mu). allvars.append(x). . covmat = TMatrixDSym(3). covmat[0][0] = 1. covmat[1][1] = 2. covmat[2][2] = 3. covmat[0][1] = 0.2. covmat[1][0] = 0.2. covmat[1][2] = 0.6. covmat[2][1] = 0.6. covmat[2][0] = 0.3. covmat[0][2] = 0.3. . nevents = 1000. mvg = RooMultiVarGaussian(""mvg"",""mvg"",xvals,muvals,covmat). allvars.append(mvg). . ws = RooWorkspace(""ws""). ws.Import(mvg). mc = RooStats.ModelConfig(""model"",""model"",ws). mc.SetObservables(xvals). mc.SetParametersOfInterest(muvals). mc.SetPdf(mvg.GetName()). . # main problem: AsymptoticCalculator doesn't accept RooMultiVarGaussian. data = RooStats.AsymptoticCalculator.MakeAsimovData(mc,muvals,RooArgSet()). ```. . Also, wrapping the Multivariate Gaussian in `RooExtendPdf` doesn't help either, as this results in lots of warnings saying `WARNING::Detected a bin with zero expected events- skip it` - probably that warning should only be emitted once. Also, the resulting asimov dataset has 0 events. norm = RooRealVar(""norm"",""norm"",1000). extmvg = RooExtendPdf(""extPdf"",""extPdf"",mvg,norm). ws.Import(extmvg,RooFit.RecycleConflictNodes()). mc_cnt = RooStats.ModelConfig(""countingModel"",""countingModel"",ws). mc_cnt.SetObservables(xvals). mc_cnt.SetParametersOfInterest(muvals). mc_cnt.SetPdf(extmvg.GetName()). . data = RooStats.AsymptoticCalculator.MakeAsimovData(mc_cnt,muvals,RooArgSet()).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7967
https://github.com/root-project/root/issues/7967:1644,security,Detect,Detected,1644,"l sorts of errors. Consider the following example code:. ```Python. from ROOT import RooArgList,RooArgSet,RooRealVar,TMatrixDSym,RooMultiVarGaussian,RooFit,RooWorkspace,RooStats,RooExtendPdf. . allvars = []. . xvals = RooArgList(). variables = RooArgSet(). muvals = RooArgList(). . for i in range(0,3):. mu = RooRealVar(""mu_{:d}"".format(i),""mu_{:d}"".format(i),1.,-10,10). muvals.add(mu). x = RooRealVar(""x_{:d}"".format(i),""x_{:d}"".format(i),1.). xvals.add(x). variables.add(x). . # side problem: unless these two lines are executed, the python garbage collector deletes mu and x. # causing a segfault in the construction of the RooMultiVarGaussian. allvars.append(mu). allvars.append(x). . covmat = TMatrixDSym(3). covmat[0][0] = 1. covmat[1][1] = 2. covmat[2][2] = 3. covmat[0][1] = 0.2. covmat[1][0] = 0.2. covmat[1][2] = 0.6. covmat[2][1] = 0.6. covmat[2][0] = 0.3. covmat[0][2] = 0.3. . nevents = 1000. mvg = RooMultiVarGaussian(""mvg"",""mvg"",xvals,muvals,covmat). allvars.append(mvg). . ws = RooWorkspace(""ws""). ws.Import(mvg). mc = RooStats.ModelConfig(""model"",""model"",ws). mc.SetObservables(xvals). mc.SetParametersOfInterest(muvals). mc.SetPdf(mvg.GetName()). . # main problem: AsymptoticCalculator doesn't accept RooMultiVarGaussian. data = RooStats.AsymptoticCalculator.MakeAsimovData(mc,muvals,RooArgSet()). ```. . Also, wrapping the Multivariate Gaussian in `RooExtendPdf` doesn't help either, as this results in lots of warnings saying `WARNING::Detected a bin with zero expected events- skip it` - probably that warning should only be emitted once. Also, the resulting asimov dataset has 0 events. norm = RooRealVar(""norm"",""norm"",1000). extmvg = RooExtendPdf(""extPdf"",""extPdf"",mvg,norm). ws.Import(extmvg,RooFit.RecycleConflictNodes()). mc_cnt = RooStats.ModelConfig(""countingModel"",""countingModel"",ws). mc_cnt.SetObservables(xvals). mc_cnt.SetParametersOfInterest(muvals). mc_cnt.SetPdf(extmvg.GetName()). . data = RooStats.AsymptoticCalculator.MakeAsimovData(mc_cnt,muvals,RooArgSet()).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7967
https://github.com/root-project/root/issues/7967:1954,security,Model,ModelConfig,1954,"l sorts of errors. Consider the following example code:. ```Python. from ROOT import RooArgList,RooArgSet,RooRealVar,TMatrixDSym,RooMultiVarGaussian,RooFit,RooWorkspace,RooStats,RooExtendPdf. . allvars = []. . xvals = RooArgList(). variables = RooArgSet(). muvals = RooArgList(). . for i in range(0,3):. mu = RooRealVar(""mu_{:d}"".format(i),""mu_{:d}"".format(i),1.,-10,10). muvals.add(mu). x = RooRealVar(""x_{:d}"".format(i),""x_{:d}"".format(i),1.). xvals.add(x). variables.add(x). . # side problem: unless these two lines are executed, the python garbage collector deletes mu and x. # causing a segfault in the construction of the RooMultiVarGaussian. allvars.append(mu). allvars.append(x). . covmat = TMatrixDSym(3). covmat[0][0] = 1. covmat[1][1] = 2. covmat[2][2] = 3. covmat[0][1] = 0.2. covmat[1][0] = 0.2. covmat[1][2] = 0.6. covmat[2][1] = 0.6. covmat[2][0] = 0.3. covmat[0][2] = 0.3. . nevents = 1000. mvg = RooMultiVarGaussian(""mvg"",""mvg"",xvals,muvals,covmat). allvars.append(mvg). . ws = RooWorkspace(""ws""). ws.Import(mvg). mc = RooStats.ModelConfig(""model"",""model"",ws). mc.SetObservables(xvals). mc.SetParametersOfInterest(muvals). mc.SetPdf(mvg.GetName()). . # main problem: AsymptoticCalculator doesn't accept RooMultiVarGaussian. data = RooStats.AsymptoticCalculator.MakeAsimovData(mc,muvals,RooArgSet()). ```. . Also, wrapping the Multivariate Gaussian in `RooExtendPdf` doesn't help either, as this results in lots of warnings saying `WARNING::Detected a bin with zero expected events- skip it` - probably that warning should only be emitted once. Also, the resulting asimov dataset has 0 events. norm = RooRealVar(""norm"",""norm"",1000). extmvg = RooExtendPdf(""extPdf"",""extPdf"",mvg,norm). ws.Import(extmvg,RooFit.RecycleConflictNodes()). mc_cnt = RooStats.ModelConfig(""countingModel"",""countingModel"",ws). mc_cnt.SetObservables(xvals). mc_cnt.SetParametersOfInterest(muvals). mc_cnt.SetPdf(extmvg.GetName()). . data = RooStats.AsymptoticCalculator.MakeAsimovData(mc_cnt,muvals,RooArgSet()).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7967
https://github.com/root-project/root/issues/7967:198,usability,error,errors,198,"[RF] RooStats doesn't like RooMultiVarGaussian; Using `RooMultiVarGaussian` together with `RooStats` objects like `RooStats::ModelConfig` and `RooStats::AsymptoticsCalculator` produces all sorts of errors. Consider the following example code:. ```Python. from ROOT import RooArgList,RooArgSet,RooRealVar,TMatrixDSym,RooMultiVarGaussian,RooFit,RooWorkspace,RooStats,RooExtendPdf. . allvars = []. . xvals = RooArgList(). variables = RooArgSet(). muvals = RooArgList(). . for i in range(0,3):. mu = RooRealVar(""mu_{:d}"".format(i),""mu_{:d}"".format(i),1.,-10,10). muvals.add(mu). x = RooRealVar(""x_{:d}"".format(i),""x_{:d}"".format(i),1.). xvals.add(x). variables.add(x). . # side problem: unless these two lines are executed, the python garbage collector deletes mu and x. # causing a segfault in the construction of the RooMultiVarGaussian. allvars.append(mu). allvars.append(x). . covmat = TMatrixDSym(3). covmat[0][0] = 1. covmat[1][1] = 2. covmat[2][2] = 3. covmat[0][1] = 0.2. covmat[1][0] = 0.2. covmat[1][2] = 0.6. covmat[2][1] = 0.6. covmat[2][0] = 0.3. covmat[0][2] = 0.3. . nevents = 1000. mvg = RooMultiVarGaussian(""mvg"",""mvg"",xvals,muvals,covmat). allvars.append(mvg). . ws = RooWorkspace(""ws""). ws.Import(mvg). mc = RooStats.ModelConfig(""model"",""model"",ws). mc.SetObservables(xvals). mc.SetParametersOfInterest(muvals). mc.SetPdf(mvg.GetName()). . # main problem: AsymptoticCalculator doesn't accept RooMultiVarGaussian. data = RooStats.AsymptoticCalculator.MakeAsimovData(mc,muvals,RooArgSet()). ```. . Also, wrapping the Multivariate Gaussian in `RooExtendPdf` doesn't help either, as this results in lots of warnings saying `WARNING::Detected a bin with zero expected events- skip it` - probably that warning should only be emitted once. Also, the resulting asimov dataset has 0 events. norm = RooRealVar(""norm"",""norm"",1000). extmvg = RooExtendPdf(""extPdf"",""extPdf"",mvg,norm). ws.Import(extmvg,RooFit.RecycleConflictNodes()). mc_cnt = RooStats.ModelConfig(""countingModel"",""countingModel"",ws",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7967
https://github.com/root-project/root/issues/7967:1578,usability,help,help,1578,"l sorts of errors. Consider the following example code:. ```Python. from ROOT import RooArgList,RooArgSet,RooRealVar,TMatrixDSym,RooMultiVarGaussian,RooFit,RooWorkspace,RooStats,RooExtendPdf. . allvars = []. . xvals = RooArgList(). variables = RooArgSet(). muvals = RooArgList(). . for i in range(0,3):. mu = RooRealVar(""mu_{:d}"".format(i),""mu_{:d}"".format(i),1.,-10,10). muvals.add(mu). x = RooRealVar(""x_{:d}"".format(i),""x_{:d}"".format(i),1.). xvals.add(x). variables.add(x). . # side problem: unless these two lines are executed, the python garbage collector deletes mu and x. # causing a segfault in the construction of the RooMultiVarGaussian. allvars.append(mu). allvars.append(x). . covmat = TMatrixDSym(3). covmat[0][0] = 1. covmat[1][1] = 2. covmat[2][2] = 3. covmat[0][1] = 0.2. covmat[1][0] = 0.2. covmat[1][2] = 0.6. covmat[2][1] = 0.6. covmat[2][0] = 0.3. covmat[0][2] = 0.3. . nevents = 1000. mvg = RooMultiVarGaussian(""mvg"",""mvg"",xvals,muvals,covmat). allvars.append(mvg). . ws = RooWorkspace(""ws""). ws.Import(mvg). mc = RooStats.ModelConfig(""model"",""model"",ws). mc.SetObservables(xvals). mc.SetParametersOfInterest(muvals). mc.SetPdf(mvg.GetName()). . # main problem: AsymptoticCalculator doesn't accept RooMultiVarGaussian. data = RooStats.AsymptoticCalculator.MakeAsimovData(mc,muvals,RooArgSet()). ```. . Also, wrapping the Multivariate Gaussian in `RooExtendPdf` doesn't help either, as this results in lots of warnings saying `WARNING::Detected a bin with zero expected events- skip it` - probably that warning should only be emitted once. Also, the resulting asimov dataset has 0 events. norm = RooRealVar(""norm"",""norm"",1000). extmvg = RooExtendPdf(""extPdf"",""extPdf"",mvg,norm). ws.Import(extmvg,RooFit.RecycleConflictNodes()). mc_cnt = RooStats.ModelConfig(""countingModel"",""countingModel"",ws). mc_cnt.SetObservables(xvals). mc_cnt.SetParametersOfInterest(muvals). mc_cnt.SetPdf(extmvg.GetName()). . data = RooStats.AsymptoticCalculator.MakeAsimovData(mc_cnt,muvals,RooArgSet()).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7967
https://github.com/root-project/root/issues/7968:0,deployability,Build,Build,0,"Build option for Address Sanitizer is broken; ### Describe the bug. `cmake -Dasan=ON` uses `add_compile_options` to add `-fsanitize=address` for all C++ files. This does not affect externally pulled in dependencies, in particular Clad. ### Expected behavior. The option should result in a build where *all* components are built with Address Sanitizer. ### To Reproduce. Configure with `-Dasan=ON` and notice that ASan reports a `use-after-poison` when only starting `./bin/root.exe`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7968
https://github.com/root-project/root/issues/7968:202,deployability,depend,dependencies,202,"Build option for Address Sanitizer is broken; ### Describe the bug. `cmake -Dasan=ON` uses `add_compile_options` to add `-fsanitize=address` for all C++ files. This does not affect externally pulled in dependencies, in particular Clad. ### Expected behavior. The option should result in a build where *all* components are built with Address Sanitizer. ### To Reproduce. Configure with `-Dasan=ON` and notice that ASan reports a `use-after-poison` when only starting `./bin/root.exe`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7968
https://github.com/root-project/root/issues/7968:289,deployability,build,build,289,"Build option for Address Sanitizer is broken; ### Describe the bug. `cmake -Dasan=ON` uses `add_compile_options` to add `-fsanitize=address` for all C++ files. This does not affect externally pulled in dependencies, in particular Clad. ### Expected behavior. The option should result in a build where *all* components are built with Address Sanitizer. ### To Reproduce. Configure with `-Dasan=ON` and notice that ASan reports a `use-after-poison` when only starting `./bin/root.exe`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7968
https://github.com/root-project/root/issues/7968:202,integrability,depend,dependencies,202,"Build option for Address Sanitizer is broken; ### Describe the bug. `cmake -Dasan=ON` uses `add_compile_options` to add `-fsanitize=address` for all C++ files. This does not affect externally pulled in dependencies, in particular Clad. ### Expected behavior. The option should result in a build where *all* components are built with Address Sanitizer. ### To Reproduce. Configure with `-Dasan=ON` and notice that ASan reports a `use-after-poison` when only starting `./bin/root.exe`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7968
https://github.com/root-project/root/issues/7968:307,integrability,compon,components,307,"Build option for Address Sanitizer is broken; ### Describe the bug. `cmake -Dasan=ON` uses `add_compile_options` to add `-fsanitize=address` for all C++ files. This does not affect externally pulled in dependencies, in particular Clad. ### Expected behavior. The option should result in a build where *all* components are built with Address Sanitizer. ### To Reproduce. Configure with `-Dasan=ON` and notice that ASan reports a `use-after-poison` when only starting `./bin/root.exe`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7968
https://github.com/root-project/root/issues/7968:370,integrability,Configur,Configure,370,"Build option for Address Sanitizer is broken; ### Describe the bug. `cmake -Dasan=ON` uses `add_compile_options` to add `-fsanitize=address` for all C++ files. This does not affect externally pulled in dependencies, in particular Clad. ### Expected behavior. The option should result in a build where *all* components are built with Address Sanitizer. ### To Reproduce. Configure with `-Dasan=ON` and notice that ASan reports a `use-after-poison` when only starting `./bin/root.exe`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7968
https://github.com/root-project/root/issues/7968:307,interoperability,compon,components,307,"Build option for Address Sanitizer is broken; ### Describe the bug. `cmake -Dasan=ON` uses `add_compile_options` to add `-fsanitize=address` for all C++ files. This does not affect externally pulled in dependencies, in particular Clad. ### Expected behavior. The option should result in a build where *all* components are built with Address Sanitizer. ### To Reproduce. Configure with `-Dasan=ON` and notice that ASan reports a `use-after-poison` when only starting `./bin/root.exe`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7968
https://github.com/root-project/root/issues/7968:202,modifiability,depend,dependencies,202,"Build option for Address Sanitizer is broken; ### Describe the bug. `cmake -Dasan=ON` uses `add_compile_options` to add `-fsanitize=address` for all C++ files. This does not affect externally pulled in dependencies, in particular Clad. ### Expected behavior. The option should result in a build where *all* components are built with Address Sanitizer. ### To Reproduce. Configure with `-Dasan=ON` and notice that ASan reports a `use-after-poison` when only starting `./bin/root.exe`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7968
https://github.com/root-project/root/issues/7968:307,modifiability,compon,components,307,"Build option for Address Sanitizer is broken; ### Describe the bug. `cmake -Dasan=ON` uses `add_compile_options` to add `-fsanitize=address` for all C++ files. This does not affect externally pulled in dependencies, in particular Clad. ### Expected behavior. The option should result in a build where *all* components are built with Address Sanitizer. ### To Reproduce. Configure with `-Dasan=ON` and notice that ASan reports a `use-after-poison` when only starting `./bin/root.exe`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7968
https://github.com/root-project/root/issues/7968:370,modifiability,Configur,Configure,370,"Build option for Address Sanitizer is broken; ### Describe the bug. `cmake -Dasan=ON` uses `add_compile_options` to add `-fsanitize=address` for all C++ files. This does not affect externally pulled in dependencies, in particular Clad. ### Expected behavior. The option should result in a build where *all* components are built with Address Sanitizer. ### To Reproduce. Configure with `-Dasan=ON` and notice that ASan reports a `use-after-poison` when only starting `./bin/root.exe`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7968
https://github.com/root-project/root/issues/7968:165,reliability,doe,does,165,"Build option for Address Sanitizer is broken; ### Describe the bug. `cmake -Dasan=ON` uses `add_compile_options` to add `-fsanitize=address` for all C++ files. This does not affect externally pulled in dependencies, in particular Clad. ### Expected behavior. The option should result in a build where *all* components are built with Address Sanitizer. ### To Reproduce. Configure with `-Dasan=ON` and notice that ASan reports a `use-after-poison` when only starting `./bin/root.exe`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7968
https://github.com/root-project/root/issues/7968:25,safety,Sanit,Sanitizer,25,"Build option for Address Sanitizer is broken; ### Describe the bug. `cmake -Dasan=ON` uses `add_compile_options` to add `-fsanitize=address` for all C++ files. This does not affect externally pulled in dependencies, in particular Clad. ### Expected behavior. The option should result in a build where *all* components are built with Address Sanitizer. ### To Reproduce. Configure with `-Dasan=ON` and notice that ASan reports a `use-after-poison` when only starting `./bin/root.exe`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7968
https://github.com/root-project/root/issues/7968:202,safety,depend,dependencies,202,"Build option for Address Sanitizer is broken; ### Describe the bug. `cmake -Dasan=ON` uses `add_compile_options` to add `-fsanitize=address` for all C++ files. This does not affect externally pulled in dependencies, in particular Clad. ### Expected behavior. The option should result in a build where *all* components are built with Address Sanitizer. ### To Reproduce. Configure with `-Dasan=ON` and notice that ASan reports a `use-after-poison` when only starting `./bin/root.exe`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7968
https://github.com/root-project/root/issues/7968:341,safety,Sanit,Sanitizer,341,"Build option for Address Sanitizer is broken; ### Describe the bug. `cmake -Dasan=ON` uses `add_compile_options` to add `-fsanitize=address` for all C++ files. This does not affect externally pulled in dependencies, in particular Clad. ### Expected behavior. The option should result in a build where *all* components are built with Address Sanitizer. ### To Reproduce. Configure with `-Dasan=ON` and notice that ASan reports a `use-after-poison` when only starting `./bin/root.exe`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7968
https://github.com/root-project/root/issues/7968:25,security,Sanit,Sanitizer,25,"Build option for Address Sanitizer is broken; ### Describe the bug. `cmake -Dasan=ON` uses `add_compile_options` to add `-fsanitize=address` for all C++ files. This does not affect externally pulled in dependencies, in particular Clad. ### Expected behavior. The option should result in a build where *all* components are built with Address Sanitizer. ### To Reproduce. Configure with `-Dasan=ON` and notice that ASan reports a `use-after-poison` when only starting `./bin/root.exe`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7968
https://github.com/root-project/root/issues/7968:341,security,Sanit,Sanitizer,341,"Build option for Address Sanitizer is broken; ### Describe the bug. `cmake -Dasan=ON` uses `add_compile_options` to add `-fsanitize=address` for all C++ files. This does not affect externally pulled in dependencies, in particular Clad. ### Expected behavior. The option should result in a build where *all* components are built with Address Sanitizer. ### To Reproduce. Configure with `-Dasan=ON` and notice that ASan reports a `use-after-poison` when only starting `./bin/root.exe`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7968
https://github.com/root-project/root/issues/7968:370,security,Configur,Configure,370,"Build option for Address Sanitizer is broken; ### Describe the bug. `cmake -Dasan=ON` uses `add_compile_options` to add `-fsanitize=address` for all C++ files. This does not affect externally pulled in dependencies, in particular Clad. ### Expected behavior. The option should result in a build where *all* components are built with Address Sanitizer. ### To Reproduce. Configure with `-Dasan=ON` and notice that ASan reports a `use-after-poison` when only starting `./bin/root.exe`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7968
https://github.com/root-project/root/issues/7968:202,testability,depend,dependencies,202,"Build option for Address Sanitizer is broken; ### Describe the bug. `cmake -Dasan=ON` uses `add_compile_options` to add `-fsanitize=address` for all C++ files. This does not affect externally pulled in dependencies, in particular Clad. ### Expected behavior. The option should result in a build where *all* components are built with Address Sanitizer. ### To Reproduce. Configure with `-Dasan=ON` and notice that ASan reports a `use-after-poison` when only starting `./bin/root.exe`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7968
https://github.com/root-project/root/issues/7968:249,usability,behavi,behavior,249,"Build option for Address Sanitizer is broken; ### Describe the bug. `cmake -Dasan=ON` uses `add_compile_options` to add `-fsanitize=address` for all C++ files. This does not affect externally pulled in dependencies, in particular Clad. ### Expected behavior. The option should result in a build where *all* components are built with Address Sanitizer. ### To Reproduce. Configure with `-Dasan=ON` and notice that ASan reports a `use-after-poison` when only starting `./bin/root.exe`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7968
https://github.com/root-project/root/pull/7969:115,deployability,build,build-ROOTSYS,115,"[cmake] Fix export of Env{ROOTSYS}:; This fixes issue-7081, as now, with the correct spelling. of the env var, the build-ROOTSYS is picked up by. roottest. (cherry picked from commit f5cb2c1a9e27f9aeb3a124151c15603e11a07b51)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7969
https://github.com/root-project/root/issues/7970:6,availability,error,error,6,"cling error recovery issues; ### Describe the bug. ```. root [1] .rawInput. root [2] std::vector<short> getV() { return {42}; }. root [3] .rawInput. root [4] getV()[0].foo(). ```. and that last line shows an error, good! But now:. ```. root [5] getV()[0]. IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&). Maybe you need to load the corresponding shared library? ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7970
https://github.com/root-project/root/issues/7970:12,availability,recov,recovery,12,"cling error recovery issues; ### Describe the bug. ```. root [1] .rawInput. root [2] std::vector<short> getV() { return {42}; }. root [3] .rawInput. root [4] getV()[0].foo(). ```. and that last line shows an error, good! But now:. ```. root [5] getV()[0]. IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&). Maybe you need to load the corresponding shared library? ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7970
https://github.com/root-project/root/issues/7970:208,availability,error,error,208,"cling error recovery issues; ### Describe the bug. ```. root [1] .rawInput. root [2] std::vector<short> getV() { return {42}; }. root [3] .rawInput. root [4] getV()[0].foo(). ```. and that last line shows an error, good! But now:. ```. root [5] getV()[0]. IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&). Maybe you need to load the corresponding shared library? ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7970
https://github.com/root-project/root/issues/7970:984,availability,Operat,Operating,984,"cling error recovery issues; ### Describe the bug. ```. root [1] .rawInput. root [2] std::vector<short> getV() { return {42}; }. root [3] .rawInput. root [4] getV()[0].foo(). ```. and that last line shows an error, good! But now:. ```. root [5] getV()[0]. IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&). Maybe you need to load the corresponding shared library? ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7970
https://github.com/root-project/root/issues/7970:1059,availability,down,download,1059,"cling error recovery issues; ### Describe the bug. ```. root [1] .rawInput. root [2] std::vector<short> getV() { return {42}; }. root [3] .rawInput. root [4] getV()[0].foo(). ```. and that last line shows an error, good! But now:. ```. root [5] getV()[0]. IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&). Maybe you need to load the corresponding shared library? ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7970
https://github.com/root-project/root/issues/7970:12,deployability,recov,recovery,12,"cling error recovery issues; ### Describe the bug. ```. root [1] .rawInput. root [2] std::vector<short> getV() { return {42}; }. root [3] .rawInput. root [4] getV()[0].foo(). ```. and that last line shows an error, good! But now:. ```. root [5] getV()[0]. IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&). Maybe you need to load the corresponding shared library? ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7970
https://github.com/root-project/root/issues/7970:905,deployability,build,build,905,"cling error recovery issues; ### Describe the bug. ```. root [1] .rawInput. root [2] std::vector<short> getV() { return {42}; }. root [3] .rawInput. root [4] getV()[0].foo(). ```. and that last line shows an error, good! But now:. ```. root [5] getV()[0]. IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&). Maybe you need to load the corresponding shared library? ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7970
https://github.com/root-project/root/issues/7970:972,deployability,version,version,972,"cling error recovery issues; ### Describe the bug. ```. root [1] .rawInput. root [2] std::vector<short> getV() { return {42}; }. root [3] .rawInput. root [4] getV()[0].foo(). ```. and that last line shows an error, good! But now:. ```. root [5] getV()[0]. IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&). Maybe you need to load the corresponding shared library? ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7970
https://github.com/root-project/root/issues/7970:1041,deployability,instal,install,1041,"cling error recovery issues; ### Describe the bug. ```. root [1] .rawInput. root [2] std::vector<short> getV() { return {42}; }. root [3] .rawInput. root [4] getV()[0].foo(). ```. and that last line shows an error, good! But now:. ```. root [5] getV()[0]. IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&). Maybe you need to load the corresponding shared library? ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7970
https://github.com/root-project/root/issues/7970:487,energy efficiency,alloc,allocator,487,"cling error recovery issues; ### Describe the bug. ```. root [1] .rawInput. root [2] std::vector<short> getV() { return {42}; }. root [3] .rawInput. root [4] getV()[0].foo(). ```. and that last line shows an error, good! But now:. ```. root [5] getV()[0]. IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&). Maybe you need to load the corresponding shared library? ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7970
https://github.com/root-project/root/issues/7970:525,energy efficiency,load,load,525,"cling error recovery issues; ### Describe the bug. ```. root [1] .rawInput. root [2] std::vector<short> getV() { return {42}; }. root [3] .rawInput. root [4] getV()[0].foo(). ```. and that last line shows an error, good! But now:. ```. root [5] getV()[0]. IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&). Maybe you need to load the corresponding shared library? ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7970
https://github.com/root-project/root/issues/7970:368,integrability,interfac,interface,368,"cling error recovery issues; ### Describe the bug. ```. root [1] .rawInput. root [2] std::vector<short> getV() { return {42}; }. root [3] .rawInput. root [4] getV()[0].foo(). ```. and that last line shows an error, good! But now:. ```. root [5] getV()[0]. IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&). Maybe you need to load the corresponding shared library? ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7970
https://github.com/root-project/root/issues/7970:972,integrability,version,version,972,"cling error recovery issues; ### Describe the bug. ```. root [1] .rawInput. root [2] std::vector<short> getV() { return {42}; }. root [3] .rawInput. root [4] getV()[0].foo(). ```. and that last line shows an error, good! But now:. ```. root [5] getV()[0]. IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&). Maybe you need to load the corresponding shared library? ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7970
https://github.com/root-project/root/issues/7970:368,interoperability,interfac,interface,368,"cling error recovery issues; ### Describe the bug. ```. root [1] .rawInput. root [2] std::vector<short> getV() { return {42}; }. root [3] .rawInput. root [4] getV()[0].foo(). ```. and that last line shows an error, good! But now:. ```. root [5] getV()[0]. IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&). Maybe you need to load the corresponding shared library? ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7970
https://github.com/root-project/root/issues/7970:548,interoperability,share,shared,548,"cling error recovery issues; ### Describe the bug. ```. root [1] .rawInput. root [2] std::vector<short> getV() { return {42}; }. root [3] .rawInput. root [4] getV()[0].foo(). ```. and that last line shows an error, good! But now:. ```. root [5] getV()[0]. IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&). Maybe you need to load the corresponding shared library? ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7970
https://github.com/root-project/root/issues/7970:368,modifiability,interfac,interface,368,"cling error recovery issues; ### Describe the bug. ```. root [1] .rawInput. root [2] std::vector<short> getV() { return {42}; }. root [3] .rawInput. root [4] getV()[0].foo(). ```. and that last line shows an error, good! But now:. ```. root [5] getV()[0]. IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&). Maybe you need to load the corresponding shared library? ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7970
https://github.com/root-project/root/issues/7970:972,modifiability,version,version,972,"cling error recovery issues; ### Describe the bug. ```. root [1] .rawInput. root [2] std::vector<short> getV() { return {42}; }. root [3] .rawInput. root [4] getV()[0].foo(). ```. and that last line shows an error, good! But now:. ```. root [5] getV()[0]. IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&). Maybe you need to load the corresponding shared library? ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7970
https://github.com/root-project/root/issues/7970:6,performance,error,error,6,"cling error recovery issues; ### Describe the bug. ```. root [1] .rawInput. root [2] std::vector<short> getV() { return {42}; }. root [3] .rawInput. root [4] getV()[0].foo(). ```. and that last line shows an error, good! But now:. ```. root [5] getV()[0]. IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&). Maybe you need to load the corresponding shared library? ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7970
https://github.com/root-project/root/issues/7970:208,performance,error,error,208,"cling error recovery issues; ### Describe the bug. ```. root [1] .rawInput. root [2] std::vector<short> getV() { return {42}; }. root [3] .rawInput. root [4] getV()[0].foo(). ```. and that last line shows an error, good! But now:. ```. root [5] getV()[0]. IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&). Maybe you need to load the corresponding shared library? ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7970
https://github.com/root-project/root/issues/7970:525,performance,load,load,525,"cling error recovery issues; ### Describe the bug. ```. root [1] .rawInput. root [2] std::vector<short> getV() { return {42}; }. root [3] .rawInput. root [4] getV()[0].foo(). ```. and that last line shows an error, good! But now:. ```. root [5] getV()[0]. IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&). Maybe you need to load the corresponding shared library? ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7970
https://github.com/root-project/root/issues/7970:12,reliability,recov,recovery,12,"cling error recovery issues; ### Describe the bug. ```. root [1] .rawInput. root [2] std::vector<short> getV() { return {42}; }. root [3] .rawInput. root [4] getV()[0].foo(). ```. and that last line shows an error, good! But now:. ```. root [5] getV()[0]. IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&). Maybe you need to load the corresponding shared library? ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7970
https://github.com/root-project/root/issues/7970:6,safety,error,error,6,"cling error recovery issues; ### Describe the bug. ```. root [1] .rawInput. root [2] std::vector<short> getV() { return {42}; }. root [3] .rawInput. root [4] getV()[0].foo(). ```. and that last line shows an error, good! But now:. ```. root [5] getV()[0]. IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&). Maybe you need to load the corresponding shared library? ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7970
https://github.com/root-project/root/issues/7970:12,safety,recov,recovery,12,"cling error recovery issues; ### Describe the bug. ```. root [1] .rawInput. root [2] std::vector<short> getV() { return {42}; }. root [3] .rawInput. root [4] getV()[0].foo(). ```. and that last line shows an error, good! But now:. ```. root [5] getV()[0]. IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&). Maybe you need to load the corresponding shared library? ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7970
https://github.com/root-project/root/issues/7970:208,safety,error,error,208,"cling error recovery issues; ### Describe the bug. ```. root [1] .rawInput. root [2] std::vector<short> getV() { return {42}; }. root [3] .rawInput. root [4] getV()[0].foo(). ```. and that last line shows an error, good! But now:. ```. root [5] getV()[0]. IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&). Maybe you need to load the corresponding shared library? ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7970
https://github.com/root-project/root/issues/7970:859,safety,input,input,859,"cling error recovery issues; ### Describe the bug. ```. root [1] .rawInput. root [2] std::vector<short> getV() { return {42}; }. root [3] .rawInput. root [4] getV()[0].foo(). ```. and that last line shows an error, good! But now:. ```. root [5] getV()[0]. IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&). Maybe you need to load the corresponding shared library? ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7970
https://github.com/root-project/root/issues/7970:12,security,recov,recovery,12,"cling error recovery issues; ### Describe the bug. ```. root [1] .rawInput. root [2] std::vector<short> getV() { return {42}; }. root [3] .rawInput. root [4] getV()[0].foo(). ```. and that last line shows an error, good! But now:. ```. root [5] getV()[0]. IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&). Maybe you need to load the corresponding shared library? ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7970
https://github.com/root-project/root/issues/7970:1113,testability,context,context,1113,"cling error recovery issues; ### Describe the bug. ```. root [1] .rawInput. root [2] std::vector<short> getV() { return {42}; }. root [3] .rawInput. root [4] getV()[0].foo(). ```. and that last line shows an error, good! But now:. ```. root [5] getV()[0]. IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&). Maybe you need to load the corresponding shared library? ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7970
https://github.com/root-project/root/issues/7970:1142,testability,context,context,1142,"cling error recovery issues; ### Describe the bug. ```. root [1] .rawInput. root [2] std::vector<short> getV() { return {42}; }. root [3] .rawInput. root [4] getV()[0].foo(). ```. and that last line shows an error, good! But now:. ```. root [5] getV()[0]. IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&). Maybe you need to load the corresponding shared library? ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7970
https://github.com/root-project/root/issues/7970:6,usability,error,error,6,"cling error recovery issues; ### Describe the bug. ```. root [1] .rawInput. root [2] std::vector<short> getV() { return {42}; }. root [3] .rawInput. root [4] getV()[0].foo(). ```. and that last line shows an error, good! But now:. ```. root [5] getV()[0]. IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&). Maybe you need to load the corresponding shared library? ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7970
https://github.com/root-project/root/issues/7970:208,usability,error,error,208,"cling error recovery issues; ### Describe the bug. ```. root [1] .rawInput. root [2] std::vector<short> getV() { return {42}; }. root [3] .rawInput. root [4] getV()[0].foo(). ```. and that last line shows an error, good! But now:. ```. root [5] getV()[0]. IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&). Maybe you need to load the corresponding shared library? ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7970
https://github.com/root-project/root/issues/7970:582,usability,behavi,behavior,582,"cling error recovery issues; ### Describe the bug. ```. root [1] .rawInput. root [2] std::vector<short> getV() { return {42}; }. root [3] .rawInput. root [4] getV()[0].foo(). ```. and that last line shows an error, good! But now:. ```. root [5] getV()[0]. IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&). Maybe you need to load the corresponding shared library? ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7970
https://github.com/root-project/root/issues/7970:600,usability,clear,clear,600,"cling error recovery issues; ### Describe the bug. ```. root [1] .rawInput. root [2] std::vector<short> getV() { return {42}; }. root [3] .rawInput. root [4] getV()[0].foo(). ```. and that last line shows an error, good! But now:. ```. root [5] getV()[0]. IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&). Maybe you need to load the corresponding shared library? ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7970
https://github.com/root-project/root/issues/7970:714,usability,behavi,behavior,714,"cling error recovery issues; ### Describe the bug. ```. root [1] .rawInput. root [2] std::vector<short> getV() { return {42}; }. root [3] .rawInput. root [4] getV()[0].foo(). ```. and that last line shows an error, good! But now:. ```. root [5] getV()[0]. IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&). Maybe you need to load the corresponding shared library? ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7970
https://github.com/root-project/root/issues/7970:859,usability,input,input,859,"cling error recovery issues; ### Describe the bug. ```. root [1] .rawInput. root [2] std::vector<short> getV() { return {42}; }. root [3] .rawInput. root [4] getV()[0].foo(). ```. and that last line shows an error, good! But now:. ```. root [5] getV()[0]. IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&). Maybe you need to load the corresponding shared library? ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7970
https://github.com/root-project/root/issues/7971:2730,availability,error,error,2730,"hSignals(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #5 <signal handler called>. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No segfault, plus either. * Entries are filled correctly. * I get a clear error of what I'm doing wrong. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Everything is shown above. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00. Built on Fedora32 with following cmake command `cmake -GNinja -DCMAKE_BUILD_TYPE=Release`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7971
https://github.com/root-project/root/issues/7971:3105,availability,Operat,Operating,3105,"hSignals(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #5 <signal handler called>. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No segfault, plus either. * Entries are filled correctly. * I get a clear error of what I'm doing wrong. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Everything is shown above. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00. Built on Fedora32 with following cmake command `cmake -GNinja -DCMAKE_BUILD_TYPE=Release`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7971
https://github.com/root-project/root/issues/7971:3180,availability,down,download,3180,"hSignals(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #5 <signal handler called>. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No segfault, plus either. * Entries are filled correctly. * I get a clear error of what I'm doing wrong. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Everything is shown above. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00. Built on Fedora32 with following cmake command `cmake -GNinja -DCMAKE_BUILD_TYPE=Release`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7971
https://github.com/root-project/root/issues/7971:634,deployability,stack,stack,634,"Creating `RH1D` with default constructor leads to segfault while filling; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I get a segfault with the following program. ```cpp. #include <ROOT/RHist.hxx>. #include <TRandom.h>. int main(){. ROOT::Experimental::RH1D myhisto{};. for (auto i = 0; i < 1000; i++){. myhisto.Fill(gRandom->Gaus(10,1));. }. }. ```. ```. $: g++ -o create_rh1d create_rh1d.cpp `root-config --cflags --glibs`. $: ./create_rh1d . *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fbb37f46c8a in __GI___wait4 (pid=74253, stat_loc=stat_loc. entry=0x7fffe5f04fe8, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27. #1 0x00007fbb37f46c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7fffe5f04fe8, options=options. entry=0) at waitpid.c:38. #2 0x00007fbb37ec2897 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007fbb39c9ecdc in TUnixSystem::StackTrace() () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #4 0x00007fbb39c9c2d5 in TUnixSystem::DispatchSignals(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #5 <signal handler called>. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at ht",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7971
https://github.com/root-project/root/issues/7971:1183,deployability,Stack,StackTrace,1183,"ith the following program. ```cpp. #include <ROOT/RHist.hxx>. #include <TRandom.h>. int main(){. ROOT::Experimental::RH1D myhisto{};. for (auto i = 0; i < 1000; i++){. myhisto.Fill(gRandom->Gaus(10,1));. }. }. ```. ```. $: g++ -o create_rh1d create_rh1d.cpp `root-config --cflags --glibs`. $: ./create_rh1d . *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fbb37f46c8a in __GI___wait4 (pid=74253, stat_loc=stat_loc. entry=0x7fffe5f04fe8, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27. #1 0x00007fbb37f46c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7fffe5f04fe8, options=options. entry=0) at waitpid.c:38. #2 0x00007fbb37ec2897 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007fbb39c9ecdc in TUnixSystem::StackTrace() () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #4 0x00007fbb39c9c2d5 in TUnixSystem::DispatchSignals(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #5 <signal handler called>. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7971
https://github.com/root-project/root/issues/7971:2047,deployability,stack,stack,2047,"8. #2 0x00007fbb37ec2897 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007fbb39c9ecdc in TUnixSystem::StackTrace() () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #4 0x00007fbb39c9c2d5 in TUnixSystem::DispatchSignals(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #5 <signal handler called>. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No segfault, plus either. * Entries are filled correctly. * I get a clear error of what I'm doing wrong. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Everythin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7971
https://github.com/root-project/root/issues/7971:2999,deployability,build,build,2999,"hSignals(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #5 <signal handler called>. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No segfault, plus either. * Entries are filled correctly. * I get a clear error of what I'm doing wrong. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Everything is shown above. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00. Built on Fedora32 with following cmake command `cmake -GNinja -DCMAKE_BUILD_TYPE=Release`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7971
https://github.com/root-project/root/issues/7971:3093,deployability,version,version,3093,"hSignals(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #5 <signal handler called>. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No segfault, plus either. * Entries are filled correctly. * I get a clear error of what I'm doing wrong. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Everything is shown above. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00. Built on Fedora32 with following cmake command `cmake -GNinja -DCMAKE_BUILD_TYPE=Release`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7971
https://github.com/root-project/root/issues/7971:3162,deployability,instal,install,3162,"hSignals(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #5 <signal handler called>. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No segfault, plus either. * Entries are filled correctly. * I get a clear error of what I'm doing wrong. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Everything is shown above. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00. Built on Fedora32 with following cmake command `cmake -GNinja -DCMAKE_BUILD_TYPE=Release`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7971
https://github.com/root-project/root/issues/7971:3314,deployability,Releas,Release,3314,"hSignals(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #5 <signal handler called>. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No segfault, plus either. * Entries are filled correctly. * I get a clear error of what I'm doing wrong. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Everything is shown above. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00. Built on Fedora32 with following cmake command `cmake -GNinja -DCMAKE_BUILD_TYPE=Release`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7971
https://github.com/root-project/root/issues/7971:953,energy efficiency,optim,optimized,953,"Creating `RH1D` with default constructor leads to segfault while filling; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I get a segfault with the following program. ```cpp. #include <ROOT/RHist.hxx>. #include <TRandom.h>. int main(){. ROOT::Experimental::RH1D myhisto{};. for (auto i = 0; i < 1000; i++){. myhisto.Fill(gRandom->Gaus(10,1));. }. }. ```. ```. $: g++ -o create_rh1d create_rh1d.cpp `root-config --cflags --glibs`. $: ./create_rh1d . *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fbb37f46c8a in __GI___wait4 (pid=74253, stat_loc=stat_loc. entry=0x7fffe5f04fe8, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27. #1 0x00007fbb37f46c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7fffe5f04fe8, options=options. entry=0) at waitpid.c:38. #2 0x00007fbb37ec2897 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007fbb39c9ecdc in TUnixSystem::StackTrace() () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #4 0x00007fbb39c9c2d5 in TUnixSystem::DispatchSignals(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #5 <signal handler called>. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at ht",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7971
https://github.com/root-project/root/issues/7971:1095,energy efficiency,optim,optimized,1095,". A clear and concise description of what the wrong behavior is. -->. I get a segfault with the following program. ```cpp. #include <ROOT/RHist.hxx>. #include <TRandom.h>. int main(){. ROOT::Experimental::RH1D myhisto{};. for (auto i = 0; i < 1000; i++){. myhisto.Fill(gRandom->Gaus(10,1));. }. }. ```. ```. $: g++ -o create_rh1d create_rh1d.cpp `root-config --cflags --glibs`. $: ./create_rh1d . *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fbb37f46c8a in __GI___wait4 (pid=74253, stat_loc=stat_loc. entry=0x7fffe5f04fe8, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27. #1 0x00007fbb37f46c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7fffe5f04fe8, options=options. entry=0) at waitpid.c:38. #2 0x00007fbb37ec2897 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007fbb39c9ecdc in TUnixSystem::StackTrace() () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #4 0x00007fbb39c9c2d5 in TUnixSystem::DispatchSignals(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #5 <signal handler called>. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7971
https://github.com/root-project/root/issues/7971:1978,integrability,sub,submit,1978,"t_loc. entry=0x7fffe5f04fe8, options=options. entry=0) at waitpid.c:38. #2 0x00007fbb37ec2897 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007fbb39c9ecdc in TUnixSystem::StackTrace() () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #4 0x00007fbb39c9c2d5 in TUnixSystem::DispatchSignals(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #5 <signal handler called>. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No segfault, plus either. * Entries are filled correctly. * I get a clear error of what I'm doing wrong. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run y",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7971
https://github.com/root-project/root/issues/7971:3093,integrability,version,version,3093,"hSignals(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #5 <signal handler called>. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No segfault, plus either. * Entries are filled correctly. * I get a clear error of what I'm doing wrong. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Everything is shown above. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00. Built on Fedora32 with following cmake command `cmake -GNinja -DCMAKE_BUILD_TYPE=Release`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7971
https://github.com/root-project/root/issues/7971:3093,modifiability,version,version,3093,"hSignals(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #5 <signal handler called>. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No segfault, plus either. * Entries are filled correctly. * I get a clear error of what I'm doing wrong. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Everything is shown above. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00. Built on Fedora32 with following cmake command `cmake -GNinja -DCMAKE_BUILD_TYPE=Release`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7971
https://github.com/root-project/root/issues/7971:953,performance,optimiz,optimized,953,"Creating `RH1D` with default constructor leads to segfault while filling; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I get a segfault with the following program. ```cpp. #include <ROOT/RHist.hxx>. #include <TRandom.h>. int main(){. ROOT::Experimental::RH1D myhisto{};. for (auto i = 0; i < 1000; i++){. myhisto.Fill(gRandom->Gaus(10,1));. }. }. ```. ```. $: g++ -o create_rh1d create_rh1d.cpp `root-config --cflags --glibs`. $: ./create_rh1d . *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fbb37f46c8a in __GI___wait4 (pid=74253, stat_loc=stat_loc. entry=0x7fffe5f04fe8, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27. #1 0x00007fbb37f46c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7fffe5f04fe8, options=options. entry=0) at waitpid.c:38. #2 0x00007fbb37ec2897 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007fbb39c9ecdc in TUnixSystem::StackTrace() () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #4 0x00007fbb39c9c2d5 in TUnixSystem::DispatchSignals(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #5 <signal handler called>. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at ht",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7971
https://github.com/root-project/root/issues/7971:1095,performance,optimiz,optimized,1095,". A clear and concise description of what the wrong behavior is. -->. I get a segfault with the following program. ```cpp. #include <ROOT/RHist.hxx>. #include <TRandom.h>. int main(){. ROOT::Experimental::RH1D myhisto{};. for (auto i = 0; i < 1000; i++){. myhisto.Fill(gRandom->Gaus(10,1));. }. }. ```. ```. $: g++ -o create_rh1d create_rh1d.cpp `root-config --cflags --glibs`. $: ./create_rh1d . *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fbb37f46c8a in __GI___wait4 (pid=74253, stat_loc=stat_loc. entry=0x7fffe5f04fe8, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27. #1 0x00007fbb37f46c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7fffe5f04fe8, options=options. entry=0) at waitpid.c:38. #2 0x00007fbb37ec2897 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007fbb39c9ecdc in TUnixSystem::StackTrace() () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #4 0x00007fbb39c9c2d5 in TUnixSystem::DispatchSignals(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #5 <signal handler called>. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7971
https://github.com/root-project/root/issues/7971:2730,performance,error,error,2730,"hSignals(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #5 <signal handler called>. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No segfault, plus either. * Entries are filled correctly. * I get a clear error of what I'm doing wrong. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Everything is shown above. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00. Built on Fedora32 with following cmake command `cmake -GNinja -DCMAKE_BUILD_TYPE=Release`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7971
https://github.com/root-project/root/issues/7971:2730,safety,error,error,2730,"hSignals(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #5 <signal handler called>. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No segfault, plus either. * Entries are filled correctly. * I get a clear error of what I'm doing wrong. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Everything is shown above. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00. Built on Fedora32 with following cmake command `cmake -GNinja -DCMAKE_BUILD_TYPE=Release`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7971
https://github.com/root-project/root/issues/7971:2953,safety,input,input,2953,"hSignals(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #5 <signal handler called>. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No segfault, plus either. * Entries are filled correctly. * I get a clear error of what I'm doing wrong. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Everything is shown above. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00. Built on Fedora32 with following cmake command `cmake -GNinja -DCMAKE_BUILD_TYPE=Release`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7971
https://github.com/root-project/root/issues/7971:1426,security,sign,signal,1426," create_rh1d.cpp `root-config --cflags --glibs`. $: ./create_rh1d . *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fbb37f46c8a in __GI___wait4 (pid=74253, stat_loc=stat_loc. entry=0x7fffe5f04fe8, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27. #1 0x00007fbb37f46c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7fffe5f04fe8, options=options. entry=0) at waitpid.c:38. #2 0x00007fbb37ec2897 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007fbb39c9ecdc in TUnixSystem::StackTrace() () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #4 0x00007fbb39c9c2d5 in TUnixSystem::DispatchSignals(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #5 <signal handler called>. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoord",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7971
https://github.com/root-project/root/issues/7971:640,testability,trace,trace,640,"Creating `RH1D` with default constructor leads to segfault while filling; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I get a segfault with the following program. ```cpp. #include <ROOT/RHist.hxx>. #include <TRandom.h>. int main(){. ROOT::Experimental::RH1D myhisto{};. for (auto i = 0; i < 1000; i++){. myhisto.Fill(gRandom->Gaus(10,1));. }. }. ```. ```. $: g++ -o create_rh1d create_rh1d.cpp `root-config --cflags --glibs`. $: ./create_rh1d . *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fbb37f46c8a in __GI___wait4 (pid=74253, stat_loc=stat_loc. entry=0x7fffe5f04fe8, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27. #1 0x00007fbb37f46c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7fffe5f04fe8, options=options. entry=0) at waitpid.c:38. #2 0x00007fbb37ec2897 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007fbb39c9ecdc in TUnixSystem::StackTrace() () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #4 0x00007fbb39c9c2d5 in TUnixSystem::DispatchSignals(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #5 <signal handler called>. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at ht",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7971
https://github.com/root-project/root/issues/7971:2053,testability,trace,trace,2053,"0x00007fbb37ec2897 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007fbb39c9ecdc in TUnixSystem::StackTrace() () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #4 0x00007fbb39c9c2d5 in TUnixSystem::DispatchSignals(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #5 <signal handler called>. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No segfault, plus either. * Entries are filled correctly. * I get a clear error of what I'm doing wrong. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Everything is s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7971
https://github.com/root-project/root/issues/7971:104,usability,clear,clear,104,"Creating `RH1D` with default constructor leads to segfault while filling; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I get a segfault with the following program. ```cpp. #include <ROOT/RHist.hxx>. #include <TRandom.h>. int main(){. ROOT::Experimental::RH1D myhisto{};. for (auto i = 0; i < 1000; i++){. myhisto.Fill(gRandom->Gaus(10,1));. }. }. ```. ```. $: g++ -o create_rh1d create_rh1d.cpp `root-config --cflags --glibs`. $: ./create_rh1d . *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fbb37f46c8a in __GI___wait4 (pid=74253, stat_loc=stat_loc. entry=0x7fffe5f04fe8, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27. #1 0x00007fbb37f46c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7fffe5f04fe8, options=options. entry=0) at waitpid.c:38. #2 0x00007fbb37ec2897 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007fbb39c9ecdc in TUnixSystem::StackTrace() () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #4 0x00007fbb39c9c2d5 in TUnixSystem::DispatchSignals(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #5 <signal handler called>. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at ht",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7971
https://github.com/root-project/root/issues/7971:152,usability,behavi,behavior,152,"Creating `RH1D` with default constructor leads to segfault while filling; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I get a segfault with the following program. ```cpp. #include <ROOT/RHist.hxx>. #include <TRandom.h>. int main(){. ROOT::Experimental::RH1D myhisto{};. for (auto i = 0; i < 1000; i++){. myhisto.Fill(gRandom->Gaus(10,1));. }. }. ```. ```. $: g++ -o create_rh1d create_rh1d.cpp `root-config --cflags --glibs`. $: ./create_rh1d . *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fbb37f46c8a in __GI___wait4 (pid=74253, stat_loc=stat_loc. entry=0x7fffe5f04fe8, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27. #1 0x00007fbb37f46c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7fffe5f04fe8, options=options. entry=0) at waitpid.c:38. #2 0x00007fbb37ec2897 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007fbb39c9ecdc in TUnixSystem::StackTrace() () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #4 0x00007fbb39c9c2d5 in TUnixSystem::DispatchSignals(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #5 <signal handler called>. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at ht",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7971
https://github.com/root-project/root/issues/7971:1808,usability,hint,hint,1808,"fe8, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27. #1 0x00007fbb37f46c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7fffe5f04fe8, options=options. entry=0) at waitpid.c:38. #2 0x00007fbb37ec2897 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007fbb39c9ecdc in TUnixSystem::StackTrace() () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #4 0x00007fbb39c9c2d5 in TUnixSystem::DispatchSignals(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #5 <signal handler called>. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No segfault, plus either. * Entries are filled correctly. * I get a clear error of what I'm doing wrong. ### To Reproduce. <!--. Steps to reproduce the be",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7971
https://github.com/root-project/root/issues/7971:1852,usability,help,help,1852,"entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27. #1 0x00007fbb37f46c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7fffe5f04fe8, options=options. entry=0) at waitpid.c:38. #2 0x00007fbb37ec2897 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007fbb39c9ecdc in TUnixSystem::StackTrace() () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #4 0x00007fbb39c9c2d5 in TUnixSystem::DispatchSignals(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #5 <signal handler called>. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No segfault, plus either. * Entries are filled correctly. * I get a clear error of what I'm doing wrong. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7971
https://github.com/root-project/root/issues/7971:2129,usability,help,help,2129,"system.c:172. #3 0x00007fbb39c9ecdc in TUnixSystem::StackTrace() () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #4 0x00007fbb39c9c2d5 in TUnixSystem::DispatchSignals(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #5 <signal handler called>. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No segfault, plus either. * Entries are filled correctly. * I get a clear error of what I'm doing wrong. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Everything is shown above. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How y",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7971
https://github.com/root-project/root/issues/7971:2571,usability,behavi,behavior,2571,"hSignals(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #5 <signal handler called>. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No segfault, plus either. * Entries are filled correctly. * I get a clear error of what I'm doing wrong. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Everything is shown above. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00. Built on Fedora32 with following cmake command `cmake -GNinja -DCMAKE_BUILD_TYPE=Release`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7971
https://github.com/root-project/root/issues/7971:2589,usability,clear,clear,2589,"hSignals(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #5 <signal handler called>. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No segfault, plus either. * Entries are filled correctly. * I get a clear error of what I'm doing wrong. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Everything is shown above. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00. Built on Fedora32 with following cmake command `cmake -GNinja -DCMAKE_BUILD_TYPE=Release`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7971
https://github.com/root-project/root/issues/7971:2724,usability,clear,clear,2724,"hSignals(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #5 <signal handler called>. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No segfault, plus either. * Entries are filled correctly. * I get a clear error of what I'm doing wrong. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Everything is shown above. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00. Built on Fedora32 with following cmake command `cmake -GNinja -DCMAKE_BUILD_TYPE=Release`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7971
https://github.com/root-project/root/issues/7971:2730,usability,error,error,2730,"hSignals(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #5 <signal handler called>. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No segfault, plus either. * Entries are filled correctly. * I get a clear error of what I'm doing wrong. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Everything is shown above. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00. Built on Fedora32 with following cmake command `cmake -GNinja -DCMAKE_BUILD_TYPE=Release`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7971
https://github.com/root-project/root/issues/7971:2808,usability,behavi,behavior,2808,"hSignals(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #5 <signal handler called>. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No segfault, plus either. * Entries are filled correctly. * I get a clear error of what I'm doing wrong. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Everything is shown above. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00. Built on Fedora32 with following cmake command `cmake -GNinja -DCMAKE_BUILD_TYPE=Release`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7971
https://github.com/root-project/root/issues/7971:2953,usability,input,input,2953,"hSignals(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #5 <signal handler called>. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No segfault, plus either. * Entries are filled correctly. * I get a clear error of what I'm doing wrong. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Everything is shown above. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00. Built on Fedora32 with following cmake command `cmake -GNinja -DCMAKE_BUILD_TYPE=Release`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7971
https://github.com/root-project/root/issues/7971:3272,usability,command,command,3272,"hSignals(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #5 <signal handler called>. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000000000000000 in ?? (). #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (). #8 0x00000000004021e4 in main (). ===========================================================. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No segfault, plus either. * Entries are filled correctly. * I get a clear error of what I'm doing wrong. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Everything is shown above. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00. Built on Fedora32 with following cmake command `cmake -GNinja -DCMAKE_BUILD_TYPE=Release`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7971
https://github.com/root-project/root/pull/7972:45,performance,memor,memory,45,[v618][RF] Improve MemPoolForRooSets and fix memory leak in ToyMCSampler; Backport of:. * https://github.com/root-project/root/pull/7935. * https://github.com/root-project/root/pull/7954. * second commit in https://github.com/root-project/root/pull/7904,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7972
https://github.com/root-project/root/pull/7972:45,usability,memor,memory,45,[v618][RF] Improve MemPoolForRooSets and fix memory leak in ToyMCSampler; Backport of:. * https://github.com/root-project/root/pull/7935. * https://github.com/root-project/root/pull/7954. * second commit in https://github.com/root-project/root/pull/7904,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7972
https://github.com/root-project/root/pull/7973:45,performance,memor,memory,45,[v620][RF] Improve MemPoolForRooSets and fix memory leak in ToyMCSampler; Backport of:. * https://github.com/root-project/root/pull/7935. * https://github.com/root-project/root/pull/7954. * second commit in https://github.com/root-project/root/pull/7904,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7973
https://github.com/root-project/root/pull/7973:45,usability,memor,memory,45,[v620][RF] Improve MemPoolForRooSets and fix memory leak in ToyMCSampler; Backport of:. * https://github.com/root-project/root/pull/7935. * https://github.com/root-project/root/pull/7954. * second commit in https://github.com/root-project/root/pull/7904,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7973
https://github.com/root-project/root/pull/7974:45,performance,memor,memory,45,[v622][RF] Improve MemPoolForRooSets and fix memory leak in ToyMCSampler; Backport of:. * https://github.com/root-project/root/pull/7935. * https://github.com/root-project/root/pull/7954. * second commit in https://github.com/root-project/root/pull/7904,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7974
https://github.com/root-project/root/pull/7974:45,usability,memor,memory,45,[v622][RF] Improve MemPoolForRooSets and fix memory leak in ToyMCSampler; Backport of:. * https://github.com/root-project/root/pull/7935. * https://github.com/root-project/root/pull/7954. * second commit in https://github.com/root-project/root/pull/7904,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7974
https://github.com/root-project/root/pull/7975:45,performance,memor,memory,45,[v624][RF] Improve MemPoolForRooSets and fix memory leak in ToyMCSampler; Backport of:. * https://github.com/root-project/root/pull/7935. * https://github.com/root-project/root/pull/7954. * second commit in https://github.com/root-project/root/pull/7904,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7975
https://github.com/root-project/root/pull/7975:45,usability,memor,memory,45,[v624][RF] Improve MemPoolForRooSets and fix memory leak in ToyMCSampler; Backport of:. * https://github.com/root-project/root/pull/7935. * https://github.com/root-project/root/pull/7954. * second commit in https://github.com/root-project/root/pull/7904,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7975
https://github.com/root-project/root/pull/7976:331,energy efficiency,alloc,allocated,331,"[RF] Fix memory leak in RooProdPdf::factorizeProduct; This memory leak was reported in https://github.com/root-project/root/issues/7890#issuecomment-820445272. Both `termIntDeps` and `termIntNoNormDeps` are only used again a few lines below the lines with the change, and they are only passed to an owning collection *after* newly allocated memory gets assigned to them again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7976
https://github.com/root-project/root/pull/7976:9,performance,memor,memory,9,"[RF] Fix memory leak in RooProdPdf::factorizeProduct; This memory leak was reported in https://github.com/root-project/root/issues/7890#issuecomment-820445272. Both `termIntDeps` and `termIntNoNormDeps` are only used again a few lines below the lines with the change, and they are only passed to an owning collection *after* newly allocated memory gets assigned to them again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7976
https://github.com/root-project/root/pull/7976:59,performance,memor,memory,59,"[RF] Fix memory leak in RooProdPdf::factorizeProduct; This memory leak was reported in https://github.com/root-project/root/issues/7890#issuecomment-820445272. Both `termIntDeps` and `termIntNoNormDeps` are only used again a few lines below the lines with the change, and they are only passed to an owning collection *after* newly allocated memory gets assigned to them again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7976
https://github.com/root-project/root/pull/7976:341,performance,memor,memory,341,"[RF] Fix memory leak in RooProdPdf::factorizeProduct; This memory leak was reported in https://github.com/root-project/root/issues/7890#issuecomment-820445272. Both `termIntDeps` and `termIntNoNormDeps` are only used again a few lines below the lines with the change, and they are only passed to an owning collection *after* newly allocated memory gets assigned to them again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7976
https://github.com/root-project/root/pull/7976:9,usability,memor,memory,9,"[RF] Fix memory leak in RooProdPdf::factorizeProduct; This memory leak was reported in https://github.com/root-project/root/issues/7890#issuecomment-820445272. Both `termIntDeps` and `termIntNoNormDeps` are only used again a few lines below the lines with the change, and they are only passed to an owning collection *after* newly allocated memory gets assigned to them again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7976
https://github.com/root-project/root/pull/7976:59,usability,memor,memory,59,"[RF] Fix memory leak in RooProdPdf::factorizeProduct; This memory leak was reported in https://github.com/root-project/root/issues/7890#issuecomment-820445272. Both `termIntDeps` and `termIntNoNormDeps` are only used again a few lines below the lines with the change, and they are only passed to an owning collection *after* newly allocated memory gets assigned to them again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7976
https://github.com/root-project/root/pull/7976:341,usability,memor,memory,341,"[RF] Fix memory leak in RooProdPdf::factorizeProduct; This memory leak was reported in https://github.com/root-project/root/issues/7890#issuecomment-820445272. Both `termIntDeps` and `termIntNoNormDeps` are only used again a few lines below the lines with the change, and they are only passed to an owning collection *after* newly allocated memory gets assigned to them again.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7976
https://github.com/root-project/root/issues/7977:170,availability,failur,failures,170,"Changes in Clang do not rebuild Clad; ### Describe the bug. As seen in #7488, changing headers / data structures in Clang doesn't rebuild Clad and causes very weird test failures. ### Expected behavior. The build system should detect the changes and rebuild Clad as well as `libCling.so` as needed. ### To Reproduce. Apply / Revert #7488 to see a crash or just touch Clang header files and observe that Clad isn't rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7977
https://github.com/root-project/root/issues/7977:170,deployability,fail,failures,170,"Changes in Clang do not rebuild Clad; ### Describe the bug. As seen in #7488, changing headers / data structures in Clang doesn't rebuild Clad and causes very weird test failures. ### Expected behavior. The build system should detect the changes and rebuild Clad as well as `libCling.so` as needed. ### To Reproduce. Apply / Revert #7488 to see a crash or just touch Clang header files and observe that Clad isn't rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7977
https://github.com/root-project/root/issues/7977:207,deployability,build,build,207,"Changes in Clang do not rebuild Clad; ### Describe the bug. As seen in #7488, changing headers / data structures in Clang doesn't rebuild Clad and causes very weird test failures. ### Expected behavior. The build system should detect the changes and rebuild Clad as well as `libCling.so` as needed. ### To Reproduce. Apply / Revert #7488 to see a crash or just touch Clang header files and observe that Clad isn't rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7977
https://github.com/root-project/root/issues/7977:390,deployability,observ,observe,390,"Changes in Clang do not rebuild Clad; ### Describe the bug. As seen in #7488, changing headers / data structures in Clang doesn't rebuild Clad and causes very weird test failures. ### Expected behavior. The build system should detect the changes and rebuild Clad as well as `libCling.so` as needed. ### To Reproduce. Apply / Revert #7488 to see a crash or just touch Clang header files and observe that Clad isn't rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7977
https://github.com/root-project/root/issues/7977:170,performance,failur,failures,170,"Changes in Clang do not rebuild Clad; ### Describe the bug. As seen in #7488, changing headers / data structures in Clang doesn't rebuild Clad and causes very weird test failures. ### Expected behavior. The build system should detect the changes and rebuild Clad as well as `libCling.so` as needed. ### To Reproduce. Apply / Revert #7488 to see a crash or just touch Clang header files and observe that Clad isn't rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7977
https://github.com/root-project/root/issues/7977:122,reliability,doe,doesn,122,"Changes in Clang do not rebuild Clad; ### Describe the bug. As seen in #7488, changing headers / data structures in Clang doesn't rebuild Clad and causes very weird test failures. ### Expected behavior. The build system should detect the changes and rebuild Clad as well as `libCling.so` as needed. ### To Reproduce. Apply / Revert #7488 to see a crash or just touch Clang header files and observe that Clad isn't rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7977
https://github.com/root-project/root/issues/7977:170,reliability,fail,failures,170,"Changes in Clang do not rebuild Clad; ### Describe the bug. As seen in #7488, changing headers / data structures in Clang doesn't rebuild Clad and causes very weird test failures. ### Expected behavior. The build system should detect the changes and rebuild Clad as well as `libCling.so` as needed. ### To Reproduce. Apply / Revert #7488 to see a crash or just touch Clang header files and observe that Clad isn't rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7977
https://github.com/root-project/root/issues/7977:165,safety,test,test,165,"Changes in Clang do not rebuild Clad; ### Describe the bug. As seen in #7488, changing headers / data structures in Clang doesn't rebuild Clad and causes very weird test failures. ### Expected behavior. The build system should detect the changes and rebuild Clad as well as `libCling.so` as needed. ### To Reproduce. Apply / Revert #7488 to see a crash or just touch Clang header files and observe that Clad isn't rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7977
https://github.com/root-project/root/issues/7977:227,safety,detect,detect,227,"Changes in Clang do not rebuild Clad; ### Describe the bug. As seen in #7488, changing headers / data structures in Clang doesn't rebuild Clad and causes very weird test failures. ### Expected behavior. The build system should detect the changes and rebuild Clad as well as `libCling.so` as needed. ### To Reproduce. Apply / Revert #7488 to see a crash or just touch Clang header files and observe that Clad isn't rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7977
https://github.com/root-project/root/issues/7977:227,security,detect,detect,227,"Changes in Clang do not rebuild Clad; ### Describe the bug. As seen in #7488, changing headers / data structures in Clang doesn't rebuild Clad and causes very weird test failures. ### Expected behavior. The build system should detect the changes and rebuild Clad as well as `libCling.so` as needed. ### To Reproduce. Apply / Revert #7488 to see a crash or just touch Clang header files and observe that Clad isn't rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7977
https://github.com/root-project/root/issues/7977:165,testability,test,test,165,"Changes in Clang do not rebuild Clad; ### Describe the bug. As seen in #7488, changing headers / data structures in Clang doesn't rebuild Clad and causes very weird test failures. ### Expected behavior. The build system should detect the changes and rebuild Clad as well as `libCling.so` as needed. ### To Reproduce. Apply / Revert #7488 to see a crash or just touch Clang header files and observe that Clad isn't rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7977
https://github.com/root-project/root/issues/7977:390,testability,observ,observe,390,"Changes in Clang do not rebuild Clad; ### Describe the bug. As seen in #7488, changing headers / data structures in Clang doesn't rebuild Clad and causes very weird test failures. ### Expected behavior. The build system should detect the changes and rebuild Clad as well as `libCling.so` as needed. ### To Reproduce. Apply / Revert #7488 to see a crash or just touch Clang header files and observe that Clad isn't rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7977
https://github.com/root-project/root/issues/7977:193,usability,behavi,behavior,193,"Changes in Clang do not rebuild Clad; ### Describe the bug. As seen in #7488, changing headers / data structures in Clang doesn't rebuild Clad and causes very weird test failures. ### Expected behavior. The build system should detect the changes and rebuild Clad as well as `libCling.so` as needed. ### To Reproduce. Apply / Revert #7488 to see a crash or just touch Clang header files and observe that Clad isn't rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7977
https://github.com/root-project/root/issues/7978:0,deployability,Depend,Dependencies,0,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:134,deployability,depend,dependencies,134,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:321,deployability,depend,depends,321,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:446,deployability,depend,depends,446,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:456,deployability,depend,depends,456,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:597,deployability,DEPEND,DEPENDS,597,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:607,deployability,depend,depends,607,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:662,deployability,fail,failing,662,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:0,integrability,Depend,Dependencies,0,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:134,integrability,depend,dependencies,134,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:321,integrability,depend,depends,321,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:446,integrability,depend,depends,446,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:456,integrability,depend,depends,456,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:597,integrability,DEPEND,DEPENDS,597,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:607,integrability,depend,depends,607,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:147,interoperability,specif,specified,147,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:300,interoperability,xml,xml,300,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:425,interoperability,xml,xml,425,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:0,modifiability,Depend,Dependencies,0,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:43,modifiability,variab,variable,43,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:134,modifiability,depend,dependencies,134,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:321,modifiability,depend,depends,321,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:446,modifiability,depend,depends,446,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:456,modifiability,depend,depends,456,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:597,modifiability,DEPEND,DEPENDS,597,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:607,modifiability,depend,depends,607,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:662,reliability,fail,failing,662,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:0,safety,Depend,Dependencies,0,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:129,safety,test,test,129,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:134,safety,depend,dependencies,134,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:321,safety,depend,depends,321,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:446,safety,depend,depends,446,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:456,safety,depend,depends,456,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:597,safety,DEPEND,DEPENDS,597,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:607,safety,depend,depends,607,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:657,safety,test,test,657,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:699,safety,test,tests,699,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:0,testability,Depend,Dependencies,0,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:129,testability,test,test,129,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:134,testability,depend,dependencies,134,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:321,testability,depend,depends,321,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:446,testability,depend,depends,446,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:456,testability,depend,depends,456,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:597,testability,DEPEND,DEPENDS,597,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:607,testability,depend,depends,607,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:657,testability,test,test,657,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7978:699,testability,test,tests,699,"Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest; In roottest (sorry, that repo has issues disabled), test dependencies specified as shown below do not work:. ```cmake. if(NOT MSVC OR win_broken_tests). ROOTTEST_GENERATE_REFLEX_DICTIONARY(One One.h SELECTION One_selection.xml NO_ROOTMAP). set(depends ${GENERATE_REFLEX_TEST}). ROOTTEST_GENERATE_REFLEX_DICTIONARY(Two Two.h SELECTION Two_selection.xml NO_ROOTMAP). set(depends ${depends} ${GENERATE_REFLEX_TEST}). ROOTTEST_ADD_TEST(execLoadLibs. MACRO execLoadLibs.C. OUTREF execLoadLibs.oref. ERRREF execLoadLibs.eref. DEPENDS ${depends}). endif(). ```. I had the `execLoadLibs` test failing for me until I ran all three tests by hand. That's from `roottest/root/meta/ROOT-5694/CMakeLists.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7978
https://github.com/root-project/root/issues/7979:801,availability,operat,operator,801,"Make TRandom compatible with the std UniformRandomBitGenerator interface; Hello,. This is a follow-up to the [discussion on the Forum](https://root-forum.cern.ch/t/is-there-a-wrapper-for-trandom-derivatives-to-provide-the-std-uniformrandombitgenerator-interface/43842). I realised that what I labelled myself as the solution indeed answers to the original problem, but does not solve my actual problem: I have an object of `TRandom`-derived class shared among several other objects and in one place I would like to wrap this object in the std `UniformRandomBitGenerator` interface or preferably use it directly. This cannot be done with `TMVA::RandomGenerator` because it holds its own instance of TRandom-like. So maybe ROOT devs could consider adding the required typedef, 2 static methods and the `operator()` returning `UInt` directly to the base class (`TRandom` or `ROOT::Math::TRandomEngine`) to make it std library compatible out of the box? Cheers,. Antoni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7979
https://github.com/root-project/root/issues/7979:63,integrability,interfac,interface,63,"Make TRandom compatible with the std UniformRandomBitGenerator interface; Hello,. This is a follow-up to the [discussion on the Forum](https://root-forum.cern.ch/t/is-there-a-wrapper-for-trandom-derivatives-to-provide-the-std-uniformrandombitgenerator-interface/43842). I realised that what I labelled myself as the solution indeed answers to the original problem, but does not solve my actual problem: I have an object of `TRandom`-derived class shared among several other objects and in one place I would like to wrap this object in the std `UniformRandomBitGenerator` interface or preferably use it directly. This cannot be done with `TMVA::RandomGenerator` because it holds its own instance of TRandom-like. So maybe ROOT devs could consider adding the required typedef, 2 static methods and the `operator()` returning `UInt` directly to the base class (`TRandom` or `ROOT::Math::TRandomEngine`) to make it std library compatible out of the box? Cheers,. Antoni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7979
https://github.com/root-project/root/issues/7979:175,integrability,wrap,wrapper-for-trandom-derivatives-to-provide-the-std-uniformrandombitgenerator-interface,175,"Make TRandom compatible with the std UniformRandomBitGenerator interface; Hello,. This is a follow-up to the [discussion on the Forum](https://root-forum.cern.ch/t/is-there-a-wrapper-for-trandom-derivatives-to-provide-the-std-uniformrandombitgenerator-interface/43842). I realised that what I labelled myself as the solution indeed answers to the original problem, but does not solve my actual problem: I have an object of `TRandom`-derived class shared among several other objects and in one place I would like to wrap this object in the std `UniformRandomBitGenerator` interface or preferably use it directly. This cannot be done with `TMVA::RandomGenerator` because it holds its own instance of TRandom-like. So maybe ROOT devs could consider adding the required typedef, 2 static methods and the `operator()` returning `UInt` directly to the base class (`TRandom` or `ROOT::Math::TRandomEngine`) to make it std library compatible out of the box? Cheers,. Antoni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7979
https://github.com/root-project/root/issues/7979:515,integrability,wrap,wrap,515,"Make TRandom compatible with the std UniformRandomBitGenerator interface; Hello,. This is a follow-up to the [discussion on the Forum](https://root-forum.cern.ch/t/is-there-a-wrapper-for-trandom-derivatives-to-provide-the-std-uniformrandombitgenerator-interface/43842). I realised that what I labelled myself as the solution indeed answers to the original problem, but does not solve my actual problem: I have an object of `TRandom`-derived class shared among several other objects and in one place I would like to wrap this object in the std `UniformRandomBitGenerator` interface or preferably use it directly. This cannot be done with `TMVA::RandomGenerator` because it holds its own instance of TRandom-like. So maybe ROOT devs could consider adding the required typedef, 2 static methods and the `operator()` returning `UInt` directly to the base class (`TRandom` or `ROOT::Math::TRandomEngine`) to make it std library compatible out of the box? Cheers,. Antoni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7979
https://github.com/root-project/root/issues/7979:571,integrability,interfac,interface,571,"Make TRandom compatible with the std UniformRandomBitGenerator interface; Hello,. This is a follow-up to the [discussion on the Forum](https://root-forum.cern.ch/t/is-there-a-wrapper-for-trandom-derivatives-to-provide-the-std-uniformrandombitgenerator-interface/43842). I realised that what I labelled myself as the solution indeed answers to the original problem, but does not solve my actual problem: I have an object of `TRandom`-derived class shared among several other objects and in one place I would like to wrap this object in the std `UniformRandomBitGenerator` interface or preferably use it directly. This cannot be done with `TMVA::RandomGenerator` because it holds its own instance of TRandom-like. So maybe ROOT devs could consider adding the required typedef, 2 static methods and the `operator()` returning `UInt` directly to the base class (`TRandom` or `ROOT::Math::TRandomEngine`) to make it std library compatible out of the box? Cheers,. Antoni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7979
https://github.com/root-project/root/issues/7979:13,interoperability,compatib,compatible,13,"Make TRandom compatible with the std UniformRandomBitGenerator interface; Hello,. This is a follow-up to the [discussion on the Forum](https://root-forum.cern.ch/t/is-there-a-wrapper-for-trandom-derivatives-to-provide-the-std-uniformrandombitgenerator-interface/43842). I realised that what I labelled myself as the solution indeed answers to the original problem, but does not solve my actual problem: I have an object of `TRandom`-derived class shared among several other objects and in one place I would like to wrap this object in the std `UniformRandomBitGenerator` interface or preferably use it directly. This cannot be done with `TMVA::RandomGenerator` because it holds its own instance of TRandom-like. So maybe ROOT devs could consider adding the required typedef, 2 static methods and the `operator()` returning `UInt` directly to the base class (`TRandom` or `ROOT::Math::TRandomEngine`) to make it std library compatible out of the box? Cheers,. Antoni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7979
https://github.com/root-project/root/issues/7979:63,interoperability,interfac,interface,63,"Make TRandom compatible with the std UniformRandomBitGenerator interface; Hello,. This is a follow-up to the [discussion on the Forum](https://root-forum.cern.ch/t/is-there-a-wrapper-for-trandom-derivatives-to-provide-the-std-uniformrandombitgenerator-interface/43842). I realised that what I labelled myself as the solution indeed answers to the original problem, but does not solve my actual problem: I have an object of `TRandom`-derived class shared among several other objects and in one place I would like to wrap this object in the std `UniformRandomBitGenerator` interface or preferably use it directly. This cannot be done with `TMVA::RandomGenerator` because it holds its own instance of TRandom-like. So maybe ROOT devs could consider adding the required typedef, 2 static methods and the `operator()` returning `UInt` directly to the base class (`TRandom` or `ROOT::Math::TRandomEngine`) to make it std library compatible out of the box? Cheers,. Antoni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7979
https://github.com/root-project/root/issues/7979:175,interoperability,wrapper,wrapper-for-trandom-derivatives-to-provide-the-std-uniformrandombitgenerator-interface,175,"Make TRandom compatible with the std UniformRandomBitGenerator interface; Hello,. This is a follow-up to the [discussion on the Forum](https://root-forum.cern.ch/t/is-there-a-wrapper-for-trandom-derivatives-to-provide-the-std-uniformrandombitgenerator-interface/43842). I realised that what I labelled myself as the solution indeed answers to the original problem, but does not solve my actual problem: I have an object of `TRandom`-derived class shared among several other objects and in one place I would like to wrap this object in the std `UniformRandomBitGenerator` interface or preferably use it directly. This cannot be done with `TMVA::RandomGenerator` because it holds its own instance of TRandom-like. So maybe ROOT devs could consider adding the required typedef, 2 static methods and the `operator()` returning `UInt` directly to the base class (`TRandom` or `ROOT::Math::TRandomEngine`) to make it std library compatible out of the box? Cheers,. Antoni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7979
https://github.com/root-project/root/issues/7979:447,interoperability,share,shared,447,"Make TRandom compatible with the std UniformRandomBitGenerator interface; Hello,. This is a follow-up to the [discussion on the Forum](https://root-forum.cern.ch/t/is-there-a-wrapper-for-trandom-derivatives-to-provide-the-std-uniformrandombitgenerator-interface/43842). I realised that what I labelled myself as the solution indeed answers to the original problem, but does not solve my actual problem: I have an object of `TRandom`-derived class shared among several other objects and in one place I would like to wrap this object in the std `UniformRandomBitGenerator` interface or preferably use it directly. This cannot be done with `TMVA::RandomGenerator` because it holds its own instance of TRandom-like. So maybe ROOT devs could consider adding the required typedef, 2 static methods and the `operator()` returning `UInt` directly to the base class (`TRandom` or `ROOT::Math::TRandomEngine`) to make it std library compatible out of the box? Cheers,. Antoni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7979
https://github.com/root-project/root/issues/7979:571,interoperability,interfac,interface,571,"Make TRandom compatible with the std UniformRandomBitGenerator interface; Hello,. This is a follow-up to the [discussion on the Forum](https://root-forum.cern.ch/t/is-there-a-wrapper-for-trandom-derivatives-to-provide-the-std-uniformrandombitgenerator-interface/43842). I realised that what I labelled myself as the solution indeed answers to the original problem, but does not solve my actual problem: I have an object of `TRandom`-derived class shared among several other objects and in one place I would like to wrap this object in the std `UniformRandomBitGenerator` interface or preferably use it directly. This cannot be done with `TMVA::RandomGenerator` because it holds its own instance of TRandom-like. So maybe ROOT devs could consider adding the required typedef, 2 static methods and the `operator()` returning `UInt` directly to the base class (`TRandom` or `ROOT::Math::TRandomEngine`) to make it std library compatible out of the box? Cheers,. Antoni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7979
https://github.com/root-project/root/issues/7979:923,interoperability,compatib,compatible,923,"Make TRandom compatible with the std UniformRandomBitGenerator interface; Hello,. This is a follow-up to the [discussion on the Forum](https://root-forum.cern.ch/t/is-there-a-wrapper-for-trandom-derivatives-to-provide-the-std-uniformrandombitgenerator-interface/43842). I realised that what I labelled myself as the solution indeed answers to the original problem, but does not solve my actual problem: I have an object of `TRandom`-derived class shared among several other objects and in one place I would like to wrap this object in the std `UniformRandomBitGenerator` interface or preferably use it directly. This cannot be done with `TMVA::RandomGenerator` because it holds its own instance of TRandom-like. So maybe ROOT devs could consider adding the required typedef, 2 static methods and the `operator()` returning `UInt` directly to the base class (`TRandom` or `ROOT::Math::TRandomEngine`) to make it std library compatible out of the box? Cheers,. Antoni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7979
https://github.com/root-project/root/issues/7979:63,modifiability,interfac,interface,63,"Make TRandom compatible with the std UniformRandomBitGenerator interface; Hello,. This is a follow-up to the [discussion on the Forum](https://root-forum.cern.ch/t/is-there-a-wrapper-for-trandom-derivatives-to-provide-the-std-uniformrandombitgenerator-interface/43842). I realised that what I labelled myself as the solution indeed answers to the original problem, but does not solve my actual problem: I have an object of `TRandom`-derived class shared among several other objects and in one place I would like to wrap this object in the std `UniformRandomBitGenerator` interface or preferably use it directly. This cannot be done with `TMVA::RandomGenerator` because it holds its own instance of TRandom-like. So maybe ROOT devs could consider adding the required typedef, 2 static methods and the `operator()` returning `UInt` directly to the base class (`TRandom` or `ROOT::Math::TRandomEngine`) to make it std library compatible out of the box? Cheers,. Antoni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7979
https://github.com/root-project/root/issues/7979:252,modifiability,interfac,interface,252,"Make TRandom compatible with the std UniformRandomBitGenerator interface; Hello,. This is a follow-up to the [discussion on the Forum](https://root-forum.cern.ch/t/is-there-a-wrapper-for-trandom-derivatives-to-provide-the-std-uniformrandombitgenerator-interface/43842). I realised that what I labelled myself as the solution indeed answers to the original problem, but does not solve my actual problem: I have an object of `TRandom`-derived class shared among several other objects and in one place I would like to wrap this object in the std `UniformRandomBitGenerator` interface or preferably use it directly. This cannot be done with `TMVA::RandomGenerator` because it holds its own instance of TRandom-like. So maybe ROOT devs could consider adding the required typedef, 2 static methods and the `operator()` returning `UInt` directly to the base class (`TRandom` or `ROOT::Math::TRandomEngine`) to make it std library compatible out of the box? Cheers,. Antoni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7979
https://github.com/root-project/root/issues/7979:571,modifiability,interfac,interface,571,"Make TRandom compatible with the std UniformRandomBitGenerator interface; Hello,. This is a follow-up to the [discussion on the Forum](https://root-forum.cern.ch/t/is-there-a-wrapper-for-trandom-derivatives-to-provide-the-std-uniformrandombitgenerator-interface/43842). I realised that what I labelled myself as the solution indeed answers to the original problem, but does not solve my actual problem: I have an object of `TRandom`-derived class shared among several other objects and in one place I would like to wrap this object in the std `UniformRandomBitGenerator` interface or preferably use it directly. This cannot be done with `TMVA::RandomGenerator` because it holds its own instance of TRandom-like. So maybe ROOT devs could consider adding the required typedef, 2 static methods and the `operator()` returning `UInt` directly to the base class (`TRandom` or `ROOT::Math::TRandomEngine`) to make it std library compatible out of the box? Cheers,. Antoni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7979
https://github.com/root-project/root/issues/7979:369,reliability,doe,does,369,"Make TRandom compatible with the std UniformRandomBitGenerator interface; Hello,. This is a follow-up to the [discussion on the Forum](https://root-forum.cern.ch/t/is-there-a-wrapper-for-trandom-derivatives-to-provide-the-std-uniformrandombitgenerator-interface/43842). I realised that what I labelled myself as the solution indeed answers to the original problem, but does not solve my actual problem: I have an object of `TRandom`-derived class shared among several other objects and in one place I would like to wrap this object in the std `UniformRandomBitGenerator` interface or preferably use it directly. This cannot be done with `TMVA::RandomGenerator` because it holds its own instance of TRandom-like. So maybe ROOT devs could consider adding the required typedef, 2 static methods and the `operator()` returning `UInt` directly to the base class (`TRandom` or `ROOT::Math::TRandomEngine`) to make it std library compatible out of the box? Cheers,. Antoni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7979
https://github.com/root-project/root/issues/7979:584,usability,prefer,preferably,584,"Make TRandom compatible with the std UniformRandomBitGenerator interface; Hello,. This is a follow-up to the [discussion on the Forum](https://root-forum.cern.ch/t/is-there-a-wrapper-for-trandom-derivatives-to-provide-the-std-uniformrandombitgenerator-interface/43842). I realised that what I labelled myself as the solution indeed answers to the original problem, but does not solve my actual problem: I have an object of `TRandom`-derived class shared among several other objects and in one place I would like to wrap this object in the std `UniformRandomBitGenerator` interface or preferably use it directly. This cannot be done with `TMVA::RandomGenerator` because it holds its own instance of TRandom-like. So maybe ROOT devs could consider adding the required typedef, 2 static methods and the `operator()` returning `UInt` directly to the base class (`TRandom` or `ROOT::Math::TRandomEngine`) to make it std library compatible out of the box? Cheers,. Antoni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7979
https://github.com/root-project/root/issues/7979:824,usability,UI,UInt,824,"Make TRandom compatible with the std UniformRandomBitGenerator interface; Hello,. This is a follow-up to the [discussion on the Forum](https://root-forum.cern.ch/t/is-there-a-wrapper-for-trandom-derivatives-to-provide-the-std-uniformrandombitgenerator-interface/43842). I realised that what I labelled myself as the solution indeed answers to the original problem, but does not solve my actual problem: I have an object of `TRandom`-derived class shared among several other objects and in one place I would like to wrap this object in the std `UniformRandomBitGenerator` interface or preferably use it directly. This cannot be done with `TMVA::RandomGenerator` because it holds its own instance of TRandom-like. So maybe ROOT devs could consider adding the required typedef, 2 static methods and the `operator()` returning `UInt` directly to the base class (`TRandom` or `ROOT::Math::TRandomEngine`) to make it std library compatible out of the box? Cheers,. Antoni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7979
https://github.com/root-project/root/pull/7980:28,deployability,build,build,28,Miscellaneous fixes for the build system and some tests; @vgvassilev Please review the changes to disable optional LLVM components. @Axel-Naumann Please review the commit to fix `TClingTests` when binaries are built as PIE. @etejedor @oshadura Please review the creation of a relative symlink for installing PyROOT and if it works for you too.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7980
https://github.com/root-project/root/pull/7980:297,deployability,instal,installing,297,Miscellaneous fixes for the build system and some tests; @vgvassilev Please review the changes to disable optional LLVM components. @Axel-Naumann Please review the commit to fix `TClingTests` when binaries are built as PIE. @etejedor @oshadura Please review the creation of a relative symlink for installing PyROOT and if it works for you too.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7980
https://github.com/root-project/root/pull/7980:120,integrability,compon,components,120,Miscellaneous fixes for the build system and some tests; @vgvassilev Please review the changes to disable optional LLVM components. @Axel-Naumann Please review the commit to fix `TClingTests` when binaries are built as PIE. @etejedor @oshadura Please review the creation of a relative symlink for installing PyROOT and if it works for you too.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7980
https://github.com/root-project/root/pull/7980:120,interoperability,compon,components,120,Miscellaneous fixes for the build system and some tests; @vgvassilev Please review the changes to disable optional LLVM components. @Axel-Naumann Please review the commit to fix `TClingTests` when binaries are built as PIE. @etejedor @oshadura Please review the creation of a relative symlink for installing PyROOT and if it works for you too.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7980
https://github.com/root-project/root/pull/7980:120,modifiability,compon,components,120,Miscellaneous fixes for the build system and some tests; @vgvassilev Please review the changes to disable optional LLVM components. @Axel-Naumann Please review the commit to fix `TClingTests` when binaries are built as PIE. @etejedor @oshadura Please review the creation of a relative symlink for installing PyROOT and if it works for you too.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7980
https://github.com/root-project/root/pull/7980:50,safety,test,tests,50,Miscellaneous fixes for the build system and some tests; @vgvassilev Please review the changes to disable optional LLVM components. @Axel-Naumann Please review the commit to fix `TClingTests` when binaries are built as PIE. @etejedor @oshadura Please review the creation of a relative symlink for installing PyROOT and if it works for you too.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7980
https://github.com/root-project/root/pull/7980:76,safety,review,review,76,Miscellaneous fixes for the build system and some tests; @vgvassilev Please review the changes to disable optional LLVM components. @Axel-Naumann Please review the commit to fix `TClingTests` when binaries are built as PIE. @etejedor @oshadura Please review the creation of a relative symlink for installing PyROOT and if it works for you too.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7980
https://github.com/root-project/root/pull/7980:153,safety,review,review,153,Miscellaneous fixes for the build system and some tests; @vgvassilev Please review the changes to disable optional LLVM components. @Axel-Naumann Please review the commit to fix `TClingTests` when binaries are built as PIE. @etejedor @oshadura Please review the creation of a relative symlink for installing PyROOT and if it works for you too.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7980
https://github.com/root-project/root/pull/7980:251,safety,review,review,251,Miscellaneous fixes for the build system and some tests; @vgvassilev Please review the changes to disable optional LLVM components. @Axel-Naumann Please review the commit to fix `TClingTests` when binaries are built as PIE. @etejedor @oshadura Please review the creation of a relative symlink for installing PyROOT and if it works for you too.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7980
https://github.com/root-project/root/pull/7980:50,testability,test,tests,50,Miscellaneous fixes for the build system and some tests; @vgvassilev Please review the changes to disable optional LLVM components. @Axel-Naumann Please review the commit to fix `TClingTests` when binaries are built as PIE. @etejedor @oshadura Please review the creation of a relative symlink for installing PyROOT and if it works for you too.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7980
https://github.com/root-project/root/pull/7980:76,testability,review,review,76,Miscellaneous fixes for the build system and some tests; @vgvassilev Please review the changes to disable optional LLVM components. @Axel-Naumann Please review the commit to fix `TClingTests` when binaries are built as PIE. @etejedor @oshadura Please review the creation of a relative symlink for installing PyROOT and if it works for you too.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7980
https://github.com/root-project/root/pull/7980:153,testability,review,review,153,Miscellaneous fixes for the build system and some tests; @vgvassilev Please review the changes to disable optional LLVM components. @Axel-Naumann Please review the commit to fix `TClingTests` when binaries are built as PIE. @etejedor @oshadura Please review the creation of a relative symlink for installing PyROOT and if it works for you too.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7980
https://github.com/root-project/root/pull/7980:251,testability,review,review,251,Miscellaneous fixes for the build system and some tests; @vgvassilev Please review the changes to disable optional LLVM components. @Axel-Naumann Please review the commit to fix `TClingTests` when binaries are built as PIE. @etejedor @oshadura Please review the creation of a relative symlink for installing PyROOT and if it works for you too.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7980
https://github.com/root-project/root/pull/7981:60,interoperability,format,formatting,60,[hist] Port to Win64 (replace Long_t by Longptr_t + pointer formatting);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7981
https://github.com/root-project/root/issues/7982:506,availability,error,error,506,"Trouble with CMake Integration; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation packa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:701,availability,Error,Error,701,"Trouble with CMake Integration; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation packa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1095,availability,fault,faulty,1095,"ttps://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not al",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1373,availability,error,errors,1373,"s master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1613,availability,Error,Error,1613," . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The import",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2007,availability,fault,faulty,2007,"or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not al",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2285,availability,error,errors,2285,"nfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2525,availability,Error,Error,2525," . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The import",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2919,availability,fault,faulty,2919,"or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not al",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3197,availability,error,errors,3197,"nfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3437,availability,Error,Error,3437," . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3831,availability,fault,faulty,3831,"or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:4109,availability,error,errors,4109,"nfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx). target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx). target_link_libraries(Main Event). ```. I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. . ### ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:5145,availability,Operat,Operating,5145,"cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx). target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx). target_link_libraries(Main Event). ```. I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Windows 10. Latest version of root as of April 2021. ### Additional context. <!--. Add any other context about the problem here. -->. I compiled ROOT from source, so this is the latest version as shown on github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:5220,availability,down,download,5220,"cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx). target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx). target_link_libraries(Main Event). ```. I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Windows 10. Latest version of root as of April 2021. ### Additional context. <!--. Add any other context about the problem here. -->. I compiled ROOT from source, so this is the latest version as shown on github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:19,deployability,Integr,Integration,19,"Trouble with CMake Integration; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation packa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:644,deployability,version,version,644,"Trouble with CMake Integration; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation packa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1002,deployability,instal,install,1002,"e with CMake Integration; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1070,deployability,instal,installation,1070,"earch in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1106,deployability,contain,contained,1106,".com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1218,deployability,Stack,Stack,1218," ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1470,deployability,log,log,1470,"havior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK vers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1556,deployability,version,version,1556,"``. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1914,deployability,instal,install,1914,"asons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1982,deployability,instal,installation,1982,"ocation. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2018,deployability,contain,contained,2018,"procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2130,deployability,Stack,Stack,2130,"ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2382,deployability,log,log,2382,"rred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK vers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2468,deployability,version,version,2468,"g"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2826,deployability,instal,install,2826,"asons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2894,deployability,instal,installation,2894,"ocation. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2930,deployability,contain,contained,2930,"procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3042,deployability,Stack,Stack,3042,"ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3294,deployability,log,log,3294,"rred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3380,deployability,version,version,3380,"g"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3738,deployability,instal,install,3738,"asons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3806,deployability,instal,installation,3806,"ocation. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3842,deployability,contain,contained,3842,"procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3954,deployability,Stack,Stack,3954,"ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx). target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx). target_link_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:4516,deployability,build,build,4516,"cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx). target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx). target_link_libraries(Main Event). ```. I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Windows 10. Latest version of root as of April 2021. ### Additional context. <!--. Add any other context about the problem here. -->. I compiled ROOT from source, so this is the latest version as shown on github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:4614,deployability,VERSION,VERSION,4614,"cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx). target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx). target_link_libraries(Main Event). ```. I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Windows 10. Latest version of root as of April 2021. ### Additional context. <!--. Add any other context about the problem here. -->. I compiled ROOT from source, so this is the latest version as shown on github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:5133,deployability,version,version,5133,"cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx). target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx). target_link_libraries(Main Event). ```. I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Windows 10. Latest version of root as of April 2021. ### Additional context. <!--. Add any other context about the problem here. -->. I compiled ROOT from source, so this is the latest version as shown on github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:5202,deployability,instal,install,5202,"cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx). target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx). target_link_libraries(Main Event). ```. I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Windows 10. Latest version of root as of April 2021. ### Additional context. <!--. Add any other context about the problem here. -->. I compiled ROOT from source, so this is the latest version as shown on github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:5278,deployability,version,version,5278,"cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx). target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx). target_link_libraries(Main Event). ```. I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Windows 10. Latest version of root as of April 2021. ### Additional context. <!--. Add any other context about the problem here. -->. I compiled ROOT from source, so this is the latest version as shown on github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:5444,deployability,version,version,5444,"cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx). target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx). target_link_libraries(Main Event). ```. I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Windows 10. Latest version of root as of April 2021. ### Additional context. <!--. Add any other context about the problem here. -->. I compiled ROOT from source, so this is the latest version as shown on github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:596,energy efficiency,Heat,HeatSimulation,596,"Trouble with CMake Integration; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation packa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1095,energy efficiency,fault,faulty,1095,"ttps://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not al",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1432,energy efficiency,Heat,HeatSimulation,1432," description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmak",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1508,energy efficiency,Heat,HeatSimulation,1508,"n I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.190",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2007,energy efficiency,fault,faulty,2007,"or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not al",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2344,energy efficiency,Heat,HeatSimulation,2344,"nfiguring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmak",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2420,energy efficiency,Heat,HeatSimulation,2420,"ding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.190",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2919,energy efficiency,fault,faulty,2919,"or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not al",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3256,energy efficiency,Heat,HeatSimulation,3256,"nfiguring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3332,energy efficiency,Heat,HeatSimulation,3332,"ding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3831,energy efficiency,fault,faulty,3831,"or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:19,integrability,Integr,Integration,19,"Trouble with CMake Integration; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation packa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:644,integrability,version,version,644,"Trouble with CMake Integration; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation packa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:771,integrability,messag,message,771,"Trouble with CMake Integration; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation packa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1349,integrability,Configur,Configuring,1349,"till exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1556,integrability,version,version,1556,"``. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1683,integrability,messag,message,1683,".19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2261,integrability,Configur,Configuring,2261,"OOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2468,integrability,version,version,2468,"g"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2595,integrability,messag,message,2595,".19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3173,integrability,Configur,Configuring,3173,"OOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expecte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3380,integrability,version,version,3380,"g"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3507,integrability,messag,message,3507,".19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:4085,integrability,Configur,Configuring,4085,"OOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx). target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx). target_link_libraries(Main Event). ```. I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:4614,integrability,VERSION,VERSION,4614,"cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx). target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx). target_link_libraries(Main Event). ```. I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Windows 10. Latest version of root as of April 2021. ### Additional context. <!--. Add any other context about the problem here. -->. I compiled ROOT from source, so this is the latest version as shown on github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:4648,integrability,event,event,4648,"cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx). target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx). target_link_libraries(Main Event). ```. I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Windows 10. Latest version of root as of April 2021. ### Additional context. <!--. Add any other context about the problem here. -->. I compiled ROOT from source, so this is the latest version as shown on github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:4674,integrability,COMPON,COMPONENTS,4674,"cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx). target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx). target_link_libraries(Main Event). ```. I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Windows 10. Latest version of root as of April 2021. ### Additional context. <!--. Add any other context about the problem here. -->. I compiled ROOT from source, so this is the latest version as shown on github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:4784,integrability,Event,Event,4784,"cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx). target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx). target_link_libraries(Main Event). ```. I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Windows 10. Latest version of root as of April 2021. ### Additional context. <!--. Add any other context about the problem here. -->. I compiled ROOT from source, so this is the latest version as shown on github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:4800,integrability,Event,EventLinkDef,4800,"cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx). target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx). target_link_libraries(Main Event). ```. I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Windows 10. Latest version of root as of April 2021. ### Additional context. <!--. Add any other context about the problem here. -->. I compiled ROOT from source, so this is the latest version as shown on github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:4829,integrability,Event,Event,4829,"cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx). target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx). target_link_libraries(Main Event). ```. I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Windows 10. Latest version of root as of April 2021. ### Additional context. <!--. Add any other context about the problem here. -->. I compiled ROOT from source, so this is the latest version as shown on github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:4842,integrability,Event,Event,4842,"cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx). target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx). target_link_libraries(Main Event). ```. I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Windows 10. Latest version of root as of April 2021. ### Additional context. <!--. Add any other context about the problem here. -->. I compiled ROOT from source, so this is the latest version as shown on github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:4889,integrability,Event,Event,4889,"cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx). target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx). target_link_libraries(Main Event). ```. I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Windows 10. Latest version of root as of April 2021. ### Additional context. <!--. Add any other context about the problem here. -->. I compiled ROOT from source, so this is the latest version as shown on github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:4895,integrability,PUB,PUBLIC,4895,"cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx). target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx). target_link_libraries(Main Event). ```. I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Windows 10. Latest version of root as of April 2021. ### Additional context. <!--. Add any other context about the problem here. -->. I compiled ROOT from source, so this is the latest version as shown on github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:4972,integrability,Event,Event,4972,"cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx). target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx). target_link_libraries(Main Event). ```. I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Windows 10. Latest version of root as of April 2021. ### Additional context. <!--. Add any other context about the problem here. -->. I compiled ROOT from source, so this is the latest version as shown on github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:5075,integrability,event,event-project,5075,"cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx). target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx). target_link_libraries(Main Event). ```. I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Windows 10. Latest version of root as of April 2021. ### Additional context. <!--. Add any other context about the problem here. -->. I compiled ROOT from source, so this is the latest version as shown on github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:5133,integrability,version,version,5133,"cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx). target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx). target_link_libraries(Main Event). ```. I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Windows 10. Latest version of root as of April 2021. ### Additional context. <!--. Add any other context about the problem here. -->. I compiled ROOT from source, so this is the latest version as shown on github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:5278,integrability,version,version,5278,"cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx). target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx). target_link_libraries(Main Event). ```. I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Windows 10. Latest version of root as of April 2021. ### Additional context. <!--. Add any other context about the problem here. -->. I compiled ROOT from source, so this is the latest version as shown on github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:5444,integrability,version,version,5444,"cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx). target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx). target_link_libraries(Main Event). ```. I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Windows 10. Latest version of root as of April 2021. ### Additional context. <!--. Add any other context about the problem here. -->. I compiled ROOT from source, so this is the latest version as shown on github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:19,interoperability,Integr,Integration,19,"Trouble with CMake Integration; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation packa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:771,interoperability,messag,message,771,"Trouble with CMake Integration; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation packa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1683,interoperability,messag,message,1683,".19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2595,interoperability,messag,message,2595,".19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3507,interoperability,messag,message,3507,".19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:4674,interoperability,COMPON,COMPONENTS,4674,"cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx). target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx). target_link_libraries(Main Event). ```. I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Windows 10. Latest version of root as of April 2021. ### Additional context. <!--. Add any other context about the problem here. -->. I compiled ROOT from source, so this is the latest version as shown on github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:4835,interoperability,SHARE,SHARED,4835,"cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx). target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx). target_link_libraries(Main Event). ```. I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Windows 10. Latest version of root as of April 2021. ### Additional context. <!--. Add any other context about the problem here. -->. I compiled ROOT from source, so this is the latest version as shown on github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:19,modifiability,Integr,Integration,19,"Trouble with CMake Integration; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation packa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:644,modifiability,version,version,644,"Trouble with CMake Integration; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation packa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1083,modifiability,pac,package,1083," [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1349,modifiability,Configur,Configuring,1349,"till exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1556,modifiability,version,version,1556,"``. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1995,modifiability,pac,package,1995,"An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2261,modifiability,Configur,Configuring,2261,"OOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2468,modifiability,version,version,2468,"g"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2907,modifiability,pac,package,2907,"An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3173,modifiability,Configur,Configuring,3173,"OOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expecte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3380,modifiability,version,version,3380,"g"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3819,modifiability,pac,package,3819,"An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:4085,modifiability,Configur,Configuring,4085,"OOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx). target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx). target_link_libraries(Main Event). ```. I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:4614,modifiability,VERSION,VERSION,4614,"cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx). target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx). target_link_libraries(Main Event). ```. I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Windows 10. Latest version of root as of April 2021. ### Additional context. <!--. Add any other context about the problem here. -->. I compiled ROOT from source, so this is the latest version as shown on github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:4674,modifiability,COMPON,COMPONENTS,4674,"cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx). target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx). target_link_libraries(Main Event). ```. I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Windows 10. Latest version of root as of April 2021. ### Additional context. <!--. Add any other context about the problem here. -->. I compiled ROOT from source, so this is the latest version as shown on github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:5133,modifiability,version,version,5133,"cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx). target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx). target_link_libraries(Main Event). ```. I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Windows 10. Latest version of root as of April 2021. ### Additional context. <!--. Add any other context about the problem here. -->. I compiled ROOT from source, so this is the latest version as shown on github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:5278,modifiability,version,version,5278,"cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx). target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx). target_link_libraries(Main Event). ```. I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Windows 10. Latest version of root as of April 2021. ### Additional context. <!--. Add any other context about the problem here. -->. I compiled ROOT from source, so this is the latest version as shown on github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:5444,modifiability,version,version,5444,"cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx). target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx). target_link_libraries(Main Event). ```. I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Windows 10. Latest version of root as of April 2021. ### Additional context. <!--. Add any other context about the problem here. -->. I compiled ROOT from source, so this is the latest version as shown on github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:506,performance,error,error,506,"Trouble with CMake Integration; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation packa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:701,performance,Error,Error,701,"Trouble with CMake Integration; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation packa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1095,performance,fault,faulty,1095,"ttps://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not al",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1373,performance,error,errors,1373,"s master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1613,performance,Error,Error,1613," . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The import",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2007,performance,fault,faulty,2007,"or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not al",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2285,performance,error,errors,2285,"nfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2525,performance,Error,Error,2525," . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The import",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2919,performance,fault,faulty,2919,"or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not al",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3197,performance,error,errors,3197,"nfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3437,performance,Error,Error,3437," . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3831,performance,fault,faulty,3831,"or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:4109,performance,error,errors,4109,"nfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx). target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx). target_link_libraries(Main Event). ```. I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. . ### ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:19,reliability,Integr,Integration,19,"Trouble with CMake Integration; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation packa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:891,reliability,doe,does,891,"Trouble with CMake Integration; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation packa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1095,reliability,fault,faulty,1095,"ttps://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not al",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1803,reliability,doe,does,1803,"OT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to an",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2007,reliability,fault,faulty,2007,"or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not al",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2715,reliability,doe,does,2715,"OT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to an",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2919,reliability,fault,faulty,2919,"or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not al",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3627,reliability,doe,does,3627,"OT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FAT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3831,reliability,fault,faulty,3831,"or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:506,safety,error,error,506,"Trouble with CMake Integration; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation packa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:701,safety,Error,Error,701,"Trouble with CMake Integration; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation packa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1041,safety,compl,complete,1041," for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1095,safety,fault,faulty,1095,"ttps://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not al",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1373,safety,error,errors,1373,"s master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1470,safety,log,log,1470,"havior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK vers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1613,safety,Error,Error,1613," . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The import",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1953,safety,compl,complete,1953," renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2007,safety,fault,faulty,2007,"or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not al",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2285,safety,error,errors,2285,"nfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2382,safety,log,log,2382,"rred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK vers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2525,safety,Error,Error,2525," . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The import",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2865,safety,compl,complete,2865," renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2919,safety,fault,faulty,2919,"or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not al",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3197,safety,error,errors,3197,"nfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3294,safety,log,log,3294,"rred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3437,safety,Error,Error,3437," . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3777,safety,compl,complete,3777," renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Eve",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3831,safety,fault,faulty,3831,"or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:4109,safety,error,errors,4109,"nfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx). target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx). target_link_libraries(Main Event). ```. I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. . ### ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:4470,safety,input,input,4470,"cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx). target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx). target_link_libraries(Main Event). ```. I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Windows 10. Latest version of root as of April 2021. ### Additional context. <!--. Add any other context about the problem here. -->. I compiled ROOT from source, so this is the latest version as shown on github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:19,security,Integr,Integration,19,"Trouble with CMake Integration; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation packa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1041,security,compl,complete,1041," for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1349,security,Configur,Configuring,1349,"till exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1470,security,log,log,1470,"havior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK vers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1953,security,compl,complete,1953," renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2261,security,Configur,Configuring,2261,"OOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2382,security,log,log,2382,"rred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK vers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2865,security,compl,complete,2865," renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3173,security,Configur,Configuring,3173,"OOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expecte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3294,security,log,log,3294,"rred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3777,security,compl,complete,3777," renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Eve",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:4085,security,Configur,Configuring,4085,"OOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx). target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx). target_link_libraries(Main Event). ```. I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:19,testability,Integr,Integration,19,"Trouble with CMake Integration; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation packa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1470,testability,log,log,1470,"havior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK vers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2382,testability,log,log,2382,"rred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK vers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3294,testability,log,log,3294,"rred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:5327,testability,context,context,5327,"cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx). target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx). target_link_libraries(Main Event). ```. I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Windows 10. Latest version of root as of April 2021. ### Additional context. <!--. Add any other context about the problem here. -->. I compiled ROOT from source, so this is the latest version as shown on github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:5356,testability,context,context,5356,"cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx). target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx). target_link_libraries(Main Event). ```. I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Windows 10. Latest version of root as of April 2021. ### Additional context. <!--. Add any other context about the problem here. -->. I compiled ROOT from source, so this is the latest version as shown on github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:422,usability,clear,clear,422,"Trouble with CMake Integration; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation packa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:470,usability,behavi,behavior,470,"Trouble with CMake Integration; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation packa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:506,usability,error,error,506,"Trouble with CMake Integration; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation packa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:567,usability,User,Users,567,"Trouble with CMake Integration; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation packa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:579,usability,Document,Documents,579,"Trouble with CMake Integration; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation packa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:701,usability,Error,Error,701,"Trouble with CMake Integration; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation packa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:713,usability,User,Users,713,"Trouble with CMake Integration; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation packa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:840,usability,User,Users,840,"Trouble with CMake Integration; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation packa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1121,usability,User,Users,1121,"ject/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1254,usability,User,Users,1254," issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1373,usability,error,errors,1373,"s master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1403,usability,User,Users,1403,"he bug. <!--. A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Doc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1415,usability,Document,Documents,1415,"A clear and concise description of what the wrong behavior is. -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1479,usability,User,Users,1479," -->. I am getting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1491,usability,Document,Documents,1491,"ting this error when I try to make a cmake project with ROOT:. ```. C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to targ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1613,usability,Error,Error,1613," . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The import",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1625,usability,User,Users,1625,"ing Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:1752,usability,User,Users,1752,"gets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2033,usability,User,Users,2033," not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2166,usability,User,Users,2166,"make"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2285,usability,error,errors,2285,"nfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2315,usability,User,Users,2315,"Lists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Doc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2327,usability,Document,Documents,2327,"ind_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2391,usability,User,Users,2391,"also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2403,usability,Document,Documents,2403,"/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to targ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2525,usability,Error,Error,2525," . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The import",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2537,usability,User,Users,2537,"ing Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2664,usability,User,Users,2664,"gets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:2945,usability,User,Users,2945," not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3078,usability,User,Users,3078,"make"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3197,usability,error,errors,3197,"nfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3227,usability,User,Users,3227,"Lists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3239,usability,Document,Documents,3239,"ind_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you exp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3303,usability,User,Users,3303,"also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Step",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3315,usability,Document,Documents,3315,"/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3437,usability,Error,Error,3437," . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3449,usability,User,Users,3449,"ing Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to at",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3576,usability,User,Users,3576,"gets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3857,usability,User,Users,3857," not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:3990,usability,User,Users,3990,"make"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx). target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx). target_link_libraries(Main Event). ```. I used [",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:4109,usability,error,errors,4109,"nfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx). target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx). target_link_libraries(Main Event). ```. I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. . ### ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:4181,usability,behavi,behavior,4181,"incomplete, errors occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx). target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx). target_link_libraries(Main Event). ```. I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:4199,usability,clear,clear,4199,"s occurred! See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx). target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx). target_link_libraries(Main Event). ```. I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:4325,usability,behavi,behavior,4325,"ng\HeatSimulation>cmake . -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042. CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx). target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx). target_link_libraries(Main Event). ```. I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Windows 10. Latest version of root as of April 2021. ### Additional co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/issues/7982:4470,usability,input,input,4470,"cmake/ROOTConfig-targets.cmake:872 (message):. The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):. C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include). CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred! ```. Apparently it cant find hadd.exe . . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It working? ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This is my CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR). project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include). ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx). target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx). target_link_libraries(Main Event). ```. I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Windows 10. Latest version of root as of April 2021. ### Additional context. <!--. Add any other context about the problem here. -->. I compiled ROOT from source, so this is the latest version as shown on github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7982
https://github.com/root-project/root/pull/7983:61,interoperability,format,formatting,61,[proof] Port to Win64 (replace Long_t by Longptr_t + pointer formatting);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7983
https://github.com/root-project/root/pull/7984:121,availability,Sla,Slave,121,"[RF] Make RooAbsTestStatistic normalization work for nCPU > 1; If a RooAbsTestStatistic is evaluated with nCPU > 1, the ""Slave"" test. statistic objects don't apply the global normalization factor. It is therefore the responsability of the ""MPMaster"" test statistic. object to apply the global normalization in the end. However, this was. not done before this commit. Fixes Jira issue [ROOT-5557](https://sft.its.cern.ch/jira/browse/ROOT-5557).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7984
https://github.com/root-project/root/pull/7984:121,reliability,Sla,Slave,121,"[RF] Make RooAbsTestStatistic normalization work for nCPU > 1; If a RooAbsTestStatistic is evaluated with nCPU > 1, the ""Slave"" test. statistic objects don't apply the global normalization factor. It is therefore the responsability of the ""MPMaster"" test statistic. object to apply the global normalization in the end. However, this was. not done before this commit. Fixes Jira issue [ROOT-5557](https://sft.its.cern.ch/jira/browse/ROOT-5557).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7984
https://github.com/root-project/root/pull/7984:128,safety,test,test,128,"[RF] Make RooAbsTestStatistic normalization work for nCPU > 1; If a RooAbsTestStatistic is evaluated with nCPU > 1, the ""Slave"" test. statistic objects don't apply the global normalization factor. It is therefore the responsability of the ""MPMaster"" test statistic. object to apply the global normalization in the end. However, this was. not done before this commit. Fixes Jira issue [ROOT-5557](https://sft.its.cern.ch/jira/browse/ROOT-5557).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7984
https://github.com/root-project/root/pull/7984:250,safety,test,test,250,"[RF] Make RooAbsTestStatistic normalization work for nCPU > 1; If a RooAbsTestStatistic is evaluated with nCPU > 1, the ""Slave"" test. statistic objects don't apply the global normalization factor. It is therefore the responsability of the ""MPMaster"" test statistic. object to apply the global normalization in the end. However, this was. not done before this commit. Fixes Jira issue [ROOT-5557](https://sft.its.cern.ch/jira/browse/ROOT-5557).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7984
https://github.com/root-project/root/pull/7984:128,testability,test,test,128,"[RF] Make RooAbsTestStatistic normalization work for nCPU > 1; If a RooAbsTestStatistic is evaluated with nCPU > 1, the ""Slave"" test. statistic objects don't apply the global normalization factor. It is therefore the responsability of the ""MPMaster"" test statistic. object to apply the global normalization in the end. However, this was. not done before this commit. Fixes Jira issue [ROOT-5557](https://sft.its.cern.ch/jira/browse/ROOT-5557).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7984
https://github.com/root-project/root/pull/7984:250,testability,test,test,250,"[RF] Make RooAbsTestStatistic normalization work for nCPU > 1; If a RooAbsTestStatistic is evaluated with nCPU > 1, the ""Slave"" test. statistic objects don't apply the global normalization factor. It is therefore the responsability of the ""MPMaster"" test statistic. object to apply the global normalization in the end. However, this was. not done before this commit. Fixes Jira issue [ROOT-5557](https://sft.its.cern.ch/jira/browse/ROOT-5557).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7984
https://github.com/root-project/root/pull/7985:9,performance,memor,memory,9,[RF] Fix memory leaks; Two more leaks found while looking at #7890,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7985
https://github.com/root-project/root/pull/7985:9,usability,memor,memory,9,[RF] Fix memory leaks; Two more leaks found while looking at #7890,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7985
https://github.com/root-project/root/issues/7986:35,availability,operat,operator,35,"TTreeFormula behaves badly with <= operator and multiple conditions; - [x] Checked for duplicates. ### Describe the bug. Using pyRoot, preparing a selection string to use in TTree.GetEntries(const string * selection), it seems that a string of the type: `_value1_ <= _variable_ <= _value2_""`. should be working but insteads it returns an error: `TTreeFormula bad expression ""=_value2_""`. when other operators work just fine (no error), e.g.:. - `_value1_ < _variable_ < _value2_""`. - `_value1_ <= _variable_ < _value2_""`. - etc. I have tried with and without parentheses around the conditions. The only working solution (for now) to write: `_value1_ <= _variable_ && _variable_ <= _value2_""`. but this sensibly slows the code. ### Expected behavior. Using `_value1_ <= _variable_ <= _value2_""` should not return an error when trying to limit a variable to a closed interval, in the same way it works when limiting a variable to an open interval. ### To Reproduce. Steps to reproduce the behavior:. 1. The code that can reproduce the issue is the following:. ```. import itertools. import numpy as np. import ROOT as rt. paramList = { 'Variable_1' : np.linspace(0,1,4),. 'Variable_2' : np.linspace(0,3,5) }. boundaries = list(itertools.product(*[itertools.combinations(val,2) for val in paramList.values()])). for val in boundaries:. string = 'dmID_signal == <whatever ID for final particle>'. for bounds, key in enumerate(paramList.keys()):. string += "" && ({} <= {} <= {})"".format(val[bounds][0], key, key, val[bounds][1]). signal = sigData.GetEntries(string). ```. 2. I cannot really join a .root file here, but it is just a matter of changing _Variable_1_ and _Variable_2_ of _paramList_ for 2 variables of a TTree. Also, I start the selection string with a selection of dmID but that can be removed, you just need to modify the string so that it doesn't start with _&&_. 3. To run the code, write it in a python file or jupyter notebook and run it using Python 3. ### Setup. 1. JupyROOT 6.22/08. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7986
https://github.com/root-project/root/issues/7986:338,availability,error,error,338,"TTreeFormula behaves badly with <= operator and multiple conditions; - [x] Checked for duplicates. ### Describe the bug. Using pyRoot, preparing a selection string to use in TTree.GetEntries(const string * selection), it seems that a string of the type: `_value1_ <= _variable_ <= _value2_""`. should be working but insteads it returns an error: `TTreeFormula bad expression ""=_value2_""`. when other operators work just fine (no error), e.g.:. - `_value1_ < _variable_ < _value2_""`. - `_value1_ <= _variable_ < _value2_""`. - etc. I have tried with and without parentheses around the conditions. The only working solution (for now) to write: `_value1_ <= _variable_ && _variable_ <= _value2_""`. but this sensibly slows the code. ### Expected behavior. Using `_value1_ <= _variable_ <= _value2_""` should not return an error when trying to limit a variable to a closed interval, in the same way it works when limiting a variable to an open interval. ### To Reproduce. Steps to reproduce the behavior:. 1. The code that can reproduce the issue is the following:. ```. import itertools. import numpy as np. import ROOT as rt. paramList = { 'Variable_1' : np.linspace(0,1,4),. 'Variable_2' : np.linspace(0,3,5) }. boundaries = list(itertools.product(*[itertools.combinations(val,2) for val in paramList.values()])). for val in boundaries:. string = 'dmID_signal == <whatever ID for final particle>'. for bounds, key in enumerate(paramList.keys()):. string += "" && ({} <= {} <= {})"".format(val[bounds][0], key, key, val[bounds][1]). signal = sigData.GetEntries(string). ```. 2. I cannot really join a .root file here, but it is just a matter of changing _Variable_1_ and _Variable_2_ of _paramList_ for 2 variables of a TTree. Also, I start the selection string with a selection of dmID but that can be removed, you just need to modify the string so that it doesn't start with _&&_. 3. To run the code, write it in a python file or jupyter notebook and run it using Python 3. ### Setup. 1. JupyROOT 6.22/08. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7986
https://github.com/root-project/root/issues/7986:399,availability,operat,operators,399,"TTreeFormula behaves badly with <= operator and multiple conditions; - [x] Checked for duplicates. ### Describe the bug. Using pyRoot, preparing a selection string to use in TTree.GetEntries(const string * selection), it seems that a string of the type: `_value1_ <= _variable_ <= _value2_""`. should be working but insteads it returns an error: `TTreeFormula bad expression ""=_value2_""`. when other operators work just fine (no error), e.g.:. - `_value1_ < _variable_ < _value2_""`. - `_value1_ <= _variable_ < _value2_""`. - etc. I have tried with and without parentheses around the conditions. The only working solution (for now) to write: `_value1_ <= _variable_ && _variable_ <= _value2_""`. but this sensibly slows the code. ### Expected behavior. Using `_value1_ <= _variable_ <= _value2_""` should not return an error when trying to limit a variable to a closed interval, in the same way it works when limiting a variable to an open interval. ### To Reproduce. Steps to reproduce the behavior:. 1. The code that can reproduce the issue is the following:. ```. import itertools. import numpy as np. import ROOT as rt. paramList = { 'Variable_1' : np.linspace(0,1,4),. 'Variable_2' : np.linspace(0,3,5) }. boundaries = list(itertools.product(*[itertools.combinations(val,2) for val in paramList.values()])). for val in boundaries:. string = 'dmID_signal == <whatever ID for final particle>'. for bounds, key in enumerate(paramList.keys()):. string += "" && ({} <= {} <= {})"".format(val[bounds][0], key, key, val[bounds][1]). signal = sigData.GetEntries(string). ```. 2. I cannot really join a .root file here, but it is just a matter of changing _Variable_1_ and _Variable_2_ of _paramList_ for 2 variables of a TTree. Also, I start the selection string with a selection of dmID but that can be removed, you just need to modify the string so that it doesn't start with _&&_. 3. To run the code, write it in a python file or jupyter notebook and run it using Python 3. ### Setup. 1. JupyROOT 6.22/08. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7986
https://github.com/root-project/root/issues/7986:428,availability,error,error,428,"TTreeFormula behaves badly with <= operator and multiple conditions; - [x] Checked for duplicates. ### Describe the bug. Using pyRoot, preparing a selection string to use in TTree.GetEntries(const string * selection), it seems that a string of the type: `_value1_ <= _variable_ <= _value2_""`. should be working but insteads it returns an error: `TTreeFormula bad expression ""=_value2_""`. when other operators work just fine (no error), e.g.:. - `_value1_ < _variable_ < _value2_""`. - `_value1_ <= _variable_ < _value2_""`. - etc. I have tried with and without parentheses around the conditions. The only working solution (for now) to write: `_value1_ <= _variable_ && _variable_ <= _value2_""`. but this sensibly slows the code. ### Expected behavior. Using `_value1_ <= _variable_ <= _value2_""` should not return an error when trying to limit a variable to a closed interval, in the same way it works when limiting a variable to an open interval. ### To Reproduce. Steps to reproduce the behavior:. 1. The code that can reproduce the issue is the following:. ```. import itertools. import numpy as np. import ROOT as rt. paramList = { 'Variable_1' : np.linspace(0,1,4),. 'Variable_2' : np.linspace(0,3,5) }. boundaries = list(itertools.product(*[itertools.combinations(val,2) for val in paramList.values()])). for val in boundaries:. string = 'dmID_signal == <whatever ID for final particle>'. for bounds, key in enumerate(paramList.keys()):. string += "" && ({} <= {} <= {})"".format(val[bounds][0], key, key, val[bounds][1]). signal = sigData.GetEntries(string). ```. 2. I cannot really join a .root file here, but it is just a matter of changing _Variable_1_ and _Variable_2_ of _paramList_ for 2 variables of a TTree. Also, I start the selection string with a selection of dmID but that can be removed, you just need to modify the string so that it doesn't start with _&&_. 3. To run the code, write it in a python file or jupyter notebook and run it using Python 3. ### Setup. 1. JupyROOT 6.22/08. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7986
https://github.com/root-project/root/issues/7986:711,availability,slo,slows,711,"TTreeFormula behaves badly with <= operator and multiple conditions; - [x] Checked for duplicates. ### Describe the bug. Using pyRoot, preparing a selection string to use in TTree.GetEntries(const string * selection), it seems that a string of the type: `_value1_ <= _variable_ <= _value2_""`. should be working but insteads it returns an error: `TTreeFormula bad expression ""=_value2_""`. when other operators work just fine (no error), e.g.:. - `_value1_ < _variable_ < _value2_""`. - `_value1_ <= _variable_ < _value2_""`. - etc. I have tried with and without parentheses around the conditions. The only working solution (for now) to write: `_value1_ <= _variable_ && _variable_ <= _value2_""`. but this sensibly slows the code. ### Expected behavior. Using `_value1_ <= _variable_ <= _value2_""` should not return an error when trying to limit a variable to a closed interval, in the same way it works when limiting a variable to an open interval. ### To Reproduce. Steps to reproduce the behavior:. 1. The code that can reproduce the issue is the following:. ```. import itertools. import numpy as np. import ROOT as rt. paramList = { 'Variable_1' : np.linspace(0,1,4),. 'Variable_2' : np.linspace(0,3,5) }. boundaries = list(itertools.product(*[itertools.combinations(val,2) for val in paramList.values()])). for val in boundaries:. string = 'dmID_signal == <whatever ID for final particle>'. for bounds, key in enumerate(paramList.keys()):. string += "" && ({} <= {} <= {})"".format(val[bounds][0], key, key, val[bounds][1]). signal = sigData.GetEntries(string). ```. 2. I cannot really join a .root file here, but it is just a matter of changing _Variable_1_ and _Variable_2_ of _paramList_ for 2 variables of a TTree. Also, I start the selection string with a selection of dmID but that can be removed, you just need to modify the string so that it doesn't start with _&&_. 3. To run the code, write it in a python file or jupyter notebook and run it using Python 3. ### Setup. 1. JupyROOT 6.22/08. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7986
https://github.com/root-project/root/issues/7986:815,availability,error,error,815,"TTreeFormula behaves badly with <= operator and multiple conditions; - [x] Checked for duplicates. ### Describe the bug. Using pyRoot, preparing a selection string to use in TTree.GetEntries(const string * selection), it seems that a string of the type: `_value1_ <= _variable_ <= _value2_""`. should be working but insteads it returns an error: `TTreeFormula bad expression ""=_value2_""`. when other operators work just fine (no error), e.g.:. - `_value1_ < _variable_ < _value2_""`. - `_value1_ <= _variable_ < _value2_""`. - etc. I have tried with and without parentheses around the conditions. The only working solution (for now) to write: `_value1_ <= _variable_ && _variable_ <= _value2_""`. but this sensibly slows the code. ### Expected behavior. Using `_value1_ <= _variable_ <= _value2_""` should not return an error when trying to limit a variable to a closed interval, in the same way it works when limiting a variable to an open interval. ### To Reproduce. Steps to reproduce the behavior:. 1. The code that can reproduce the issue is the following:. ```. import itertools. import numpy as np. import ROOT as rt. paramList = { 'Variable_1' : np.linspace(0,1,4),. 'Variable_2' : np.linspace(0,3,5) }. boundaries = list(itertools.product(*[itertools.combinations(val,2) for val in paramList.values()])). for val in boundaries:. string = 'dmID_signal == <whatever ID for final particle>'. for bounds, key in enumerate(paramList.keys()):. string += "" && ({} <= {} <= {})"".format(val[bounds][0], key, key, val[bounds][1]). signal = sigData.GetEntries(string). ```. 2. I cannot really join a .root file here, but it is just a matter of changing _Variable_1_ and _Variable_2_ of _paramList_ for 2 variables of a TTree. Also, I start the selection string with a selection of dmID but that can be removed, you just need to modify the string so that it doesn't start with _&&_. 3. To run the code, write it in a python file or jupyter notebook and run it using Python 3. ### Setup. 1. JupyROOT 6.22/08. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7986
https://github.com/root-project/root/issues/7986:2032,deployability,Instal,Installed,2032,". ### Describe the bug. Using pyRoot, preparing a selection string to use in TTree.GetEntries(const string * selection), it seems that a string of the type: `_value1_ <= _variable_ <= _value2_""`. should be working but insteads it returns an error: `TTreeFormula bad expression ""=_value2_""`. when other operators work just fine (no error), e.g.:. - `_value1_ < _variable_ < _value2_""`. - `_value1_ <= _variable_ < _value2_""`. - etc. I have tried with and without parentheses around the conditions. The only working solution (for now) to write: `_value1_ <= _variable_ && _variable_ <= _value2_""`. but this sensibly slows the code. ### Expected behavior. Using `_value1_ <= _variable_ <= _value2_""` should not return an error when trying to limit a variable to a closed interval, in the same way it works when limiting a variable to an open interval. ### To Reproduce. Steps to reproduce the behavior:. 1. The code that can reproduce the issue is the following:. ```. import itertools. import numpy as np. import ROOT as rt. paramList = { 'Variable_1' : np.linspace(0,1,4),. 'Variable_2' : np.linspace(0,3,5) }. boundaries = list(itertools.product(*[itertools.combinations(val,2) for val in paramList.values()])). for val in boundaries:. string = 'dmID_signal == <whatever ID for final particle>'. for bounds, key in enumerate(paramList.keys()):. string += "" && ({} <= {} <= {})"".format(val[bounds][0], key, key, val[bounds][1]). signal = sigData.GetEntries(string). ```. 2. I cannot really join a .root file here, but it is just a matter of changing _Variable_1_ and _Variable_2_ of _paramList_ for 2 variables of a TTree. Also, I start the selection string with a selection of dmID but that can be removed, you just need to modify the string so that it doesn't start with _&&_. 3. To run the code, write it in a python file or jupyter notebook and run it using Python 3. ### Setup. 1. JupyROOT 6.22/08. 2. Linux Mint 19.3 Cinnamon. 3. Installed Root using conda. ### Additional context. Using PyRoot.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7986
https://github.com/root-project/root/issues/7986:1475,interoperability,format,format,1475,". ### Describe the bug. Using pyRoot, preparing a selection string to use in TTree.GetEntries(const string * selection), it seems that a string of the type: `_value1_ <= _variable_ <= _value2_""`. should be working but insteads it returns an error: `TTreeFormula bad expression ""=_value2_""`. when other operators work just fine (no error), e.g.:. - `_value1_ < _variable_ < _value2_""`. - `_value1_ <= _variable_ < _value2_""`. - etc. I have tried with and without parentheses around the conditions. The only working solution (for now) to write: `_value1_ <= _variable_ && _variable_ <= _value2_""`. but this sensibly slows the code. ### Expected behavior. Using `_value1_ <= _variable_ <= _value2_""` should not return an error when trying to limit a variable to a closed interval, in the same way it works when limiting a variable to an open interval. ### To Reproduce. Steps to reproduce the behavior:. 1. The code that can reproduce the issue is the following:. ```. import itertools. import numpy as np. import ROOT as rt. paramList = { 'Variable_1' : np.linspace(0,1,4),. 'Variable_2' : np.linspace(0,3,5) }. boundaries = list(itertools.product(*[itertools.combinations(val,2) for val in paramList.values()])). for val in boundaries:. string = 'dmID_signal == <whatever ID for final particle>'. for bounds, key in enumerate(paramList.keys()):. string += "" && ({} <= {} <= {})"".format(val[bounds][0], key, key, val[bounds][1]). signal = sigData.GetEntries(string). ```. 2. I cannot really join a .root file here, but it is just a matter of changing _Variable_1_ and _Variable_2_ of _paramList_ for 2 variables of a TTree. Also, I start the selection string with a selection of dmID but that can be removed, you just need to modify the string so that it doesn't start with _&&_. 3. To run the code, write it in a python file or jupyter notebook and run it using Python 3. ### Setup. 1. JupyROOT 6.22/08. 2. Linux Mint 19.3 Cinnamon. 3. Installed Root using conda. ### Additional context. Using PyRoot.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7986
https://github.com/root-project/root/issues/7986:844,modifiability,variab,variable,844,"TTreeFormula behaves badly with <= operator and multiple conditions; - [x] Checked for duplicates. ### Describe the bug. Using pyRoot, preparing a selection string to use in TTree.GetEntries(const string * selection), it seems that a string of the type: `_value1_ <= _variable_ <= _value2_""`. should be working but insteads it returns an error: `TTreeFormula bad expression ""=_value2_""`. when other operators work just fine (no error), e.g.:. - `_value1_ < _variable_ < _value2_""`. - `_value1_ <= _variable_ < _value2_""`. - etc. I have tried with and without parentheses around the conditions. The only working solution (for now) to write: `_value1_ <= _variable_ && _variable_ <= _value2_""`. but this sensibly slows the code. ### Expected behavior. Using `_value1_ <= _variable_ <= _value2_""` should not return an error when trying to limit a variable to a closed interval, in the same way it works when limiting a variable to an open interval. ### To Reproduce. Steps to reproduce the behavior:. 1. The code that can reproduce the issue is the following:. ```. import itertools. import numpy as np. import ROOT as rt. paramList = { 'Variable_1' : np.linspace(0,1,4),. 'Variable_2' : np.linspace(0,3,5) }. boundaries = list(itertools.product(*[itertools.combinations(val,2) for val in paramList.values()])). for val in boundaries:. string = 'dmID_signal == <whatever ID for final particle>'. for bounds, key in enumerate(paramList.keys()):. string += "" && ({} <= {} <= {})"".format(val[bounds][0], key, key, val[bounds][1]). signal = sigData.GetEntries(string). ```. 2. I cannot really join a .root file here, but it is just a matter of changing _Variable_1_ and _Variable_2_ of _paramList_ for 2 variables of a TTree. Also, I start the selection string with a selection of dmID but that can be removed, you just need to modify the string so that it doesn't start with _&&_. 3. To run the code, write it in a python file or jupyter notebook and run it using Python 3. ### Setup. 1. JupyROOT 6.22/08. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7986
https://github.com/root-project/root/issues/7986:916,modifiability,variab,variable,916,"TTreeFormula behaves badly with <= operator and multiple conditions; - [x] Checked for duplicates. ### Describe the bug. Using pyRoot, preparing a selection string to use in TTree.GetEntries(const string * selection), it seems that a string of the type: `_value1_ <= _variable_ <= _value2_""`. should be working but insteads it returns an error: `TTreeFormula bad expression ""=_value2_""`. when other operators work just fine (no error), e.g.:. - `_value1_ < _variable_ < _value2_""`. - `_value1_ <= _variable_ < _value2_""`. - etc. I have tried with and without parentheses around the conditions. The only working solution (for now) to write: `_value1_ <= _variable_ && _variable_ <= _value2_""`. but this sensibly slows the code. ### Expected behavior. Using `_value1_ <= _variable_ <= _value2_""` should not return an error when trying to limit a variable to a closed interval, in the same way it works when limiting a variable to an open interval. ### To Reproduce. Steps to reproduce the behavior:. 1. The code that can reproduce the issue is the following:. ```. import itertools. import numpy as np. import ROOT as rt. paramList = { 'Variable_1' : np.linspace(0,1,4),. 'Variable_2' : np.linspace(0,3,5) }. boundaries = list(itertools.product(*[itertools.combinations(val,2) for val in paramList.values()])). for val in boundaries:. string = 'dmID_signal == <whatever ID for final particle>'. for bounds, key in enumerate(paramList.keys()):. string += "" && ({} <= {} <= {})"".format(val[bounds][0], key, key, val[bounds][1]). signal = sigData.GetEntries(string). ```. 2. I cannot really join a .root file here, but it is just a matter of changing _Variable_1_ and _Variable_2_ of _paramList_ for 2 variables of a TTree. Also, I start the selection string with a selection of dmID but that can be removed, you just need to modify the string so that it doesn't start with _&&_. 3. To run the code, write it in a python file or jupyter notebook and run it using Python 3. ### Setup. 1. JupyROOT 6.22/08. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7986
https://github.com/root-project/root/issues/7986:1697,modifiability,variab,variables,1697,". ### Describe the bug. Using pyRoot, preparing a selection string to use in TTree.GetEntries(const string * selection), it seems that a string of the type: `_value1_ <= _variable_ <= _value2_""`. should be working but insteads it returns an error: `TTreeFormula bad expression ""=_value2_""`. when other operators work just fine (no error), e.g.:. - `_value1_ < _variable_ < _value2_""`. - `_value1_ <= _variable_ < _value2_""`. - etc. I have tried with and without parentheses around the conditions. The only working solution (for now) to write: `_value1_ <= _variable_ && _variable_ <= _value2_""`. but this sensibly slows the code. ### Expected behavior. Using `_value1_ <= _variable_ <= _value2_""` should not return an error when trying to limit a variable to a closed interval, in the same way it works when limiting a variable to an open interval. ### To Reproduce. Steps to reproduce the behavior:. 1. The code that can reproduce the issue is the following:. ```. import itertools. import numpy as np. import ROOT as rt. paramList = { 'Variable_1' : np.linspace(0,1,4),. 'Variable_2' : np.linspace(0,3,5) }. boundaries = list(itertools.product(*[itertools.combinations(val,2) for val in paramList.values()])). for val in boundaries:. string = 'dmID_signal == <whatever ID for final particle>'. for bounds, key in enumerate(paramList.keys()):. string += "" && ({} <= {} <= {})"".format(val[bounds][0], key, key, val[bounds][1]). signal = sigData.GetEntries(string). ```. 2. I cannot really join a .root file here, but it is just a matter of changing _Variable_1_ and _Variable_2_ of _paramList_ for 2 variables of a TTree. Also, I start the selection string with a selection of dmID but that can be removed, you just need to modify the string so that it doesn't start with _&&_. 3. To run the code, write it in a python file or jupyter notebook and run it using Python 3. ### Setup. 1. JupyROOT 6.22/08. 2. Linux Mint 19.3 Cinnamon. 3. Installed Root using conda. ### Additional context. Using PyRoot.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7986
https://github.com/root-project/root/issues/7986:338,performance,error,error,338,"TTreeFormula behaves badly with <= operator and multiple conditions; - [x] Checked for duplicates. ### Describe the bug. Using pyRoot, preparing a selection string to use in TTree.GetEntries(const string * selection), it seems that a string of the type: `_value1_ <= _variable_ <= _value2_""`. should be working but insteads it returns an error: `TTreeFormula bad expression ""=_value2_""`. when other operators work just fine (no error), e.g.:. - `_value1_ < _variable_ < _value2_""`. - `_value1_ <= _variable_ < _value2_""`. - etc. I have tried with and without parentheses around the conditions. The only working solution (for now) to write: `_value1_ <= _variable_ && _variable_ <= _value2_""`. but this sensibly slows the code. ### Expected behavior. Using `_value1_ <= _variable_ <= _value2_""` should not return an error when trying to limit a variable to a closed interval, in the same way it works when limiting a variable to an open interval. ### To Reproduce. Steps to reproduce the behavior:. 1. The code that can reproduce the issue is the following:. ```. import itertools. import numpy as np. import ROOT as rt. paramList = { 'Variable_1' : np.linspace(0,1,4),. 'Variable_2' : np.linspace(0,3,5) }. boundaries = list(itertools.product(*[itertools.combinations(val,2) for val in paramList.values()])). for val in boundaries:. string = 'dmID_signal == <whatever ID for final particle>'. for bounds, key in enumerate(paramList.keys()):. string += "" && ({} <= {} <= {})"".format(val[bounds][0], key, key, val[bounds][1]). signal = sigData.GetEntries(string). ```. 2. I cannot really join a .root file here, but it is just a matter of changing _Variable_1_ and _Variable_2_ of _paramList_ for 2 variables of a TTree. Also, I start the selection string with a selection of dmID but that can be removed, you just need to modify the string so that it doesn't start with _&&_. 3. To run the code, write it in a python file or jupyter notebook and run it using Python 3. ### Setup. 1. JupyROOT 6.22/08. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7986
https://github.com/root-project/root/issues/7986:428,performance,error,error,428,"TTreeFormula behaves badly with <= operator and multiple conditions; - [x] Checked for duplicates. ### Describe the bug. Using pyRoot, preparing a selection string to use in TTree.GetEntries(const string * selection), it seems that a string of the type: `_value1_ <= _variable_ <= _value2_""`. should be working but insteads it returns an error: `TTreeFormula bad expression ""=_value2_""`. when other operators work just fine (no error), e.g.:. - `_value1_ < _variable_ < _value2_""`. - `_value1_ <= _variable_ < _value2_""`. - etc. I have tried with and without parentheses around the conditions. The only working solution (for now) to write: `_value1_ <= _variable_ && _variable_ <= _value2_""`. but this sensibly slows the code. ### Expected behavior. Using `_value1_ <= _variable_ <= _value2_""` should not return an error when trying to limit a variable to a closed interval, in the same way it works when limiting a variable to an open interval. ### To Reproduce. Steps to reproduce the behavior:. 1. The code that can reproduce the issue is the following:. ```. import itertools. import numpy as np. import ROOT as rt. paramList = { 'Variable_1' : np.linspace(0,1,4),. 'Variable_2' : np.linspace(0,3,5) }. boundaries = list(itertools.product(*[itertools.combinations(val,2) for val in paramList.values()])). for val in boundaries:. string = 'dmID_signal == <whatever ID for final particle>'. for bounds, key in enumerate(paramList.keys()):. string += "" && ({} <= {} <= {})"".format(val[bounds][0], key, key, val[bounds][1]). signal = sigData.GetEntries(string). ```. 2. I cannot really join a .root file here, but it is just a matter of changing _Variable_1_ and _Variable_2_ of _paramList_ for 2 variables of a TTree. Also, I start the selection string with a selection of dmID but that can be removed, you just need to modify the string so that it doesn't start with _&&_. 3. To run the code, write it in a python file or jupyter notebook and run it using Python 3. ### Setup. 1. JupyROOT 6.22/08. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7986
https://github.com/root-project/root/issues/7986:815,performance,error,error,815,"TTreeFormula behaves badly with <= operator and multiple conditions; - [x] Checked for duplicates. ### Describe the bug. Using pyRoot, preparing a selection string to use in TTree.GetEntries(const string * selection), it seems that a string of the type: `_value1_ <= _variable_ <= _value2_""`. should be working but insteads it returns an error: `TTreeFormula bad expression ""=_value2_""`. when other operators work just fine (no error), e.g.:. - `_value1_ < _variable_ < _value2_""`. - `_value1_ <= _variable_ < _value2_""`. - etc. I have tried with and without parentheses around the conditions. The only working solution (for now) to write: `_value1_ <= _variable_ && _variable_ <= _value2_""`. but this sensibly slows the code. ### Expected behavior. Using `_value1_ <= _variable_ <= _value2_""` should not return an error when trying to limit a variable to a closed interval, in the same way it works when limiting a variable to an open interval. ### To Reproduce. Steps to reproduce the behavior:. 1. The code that can reproduce the issue is the following:. ```. import itertools. import numpy as np. import ROOT as rt. paramList = { 'Variable_1' : np.linspace(0,1,4),. 'Variable_2' : np.linspace(0,3,5) }. boundaries = list(itertools.product(*[itertools.combinations(val,2) for val in paramList.values()])). for val in boundaries:. string = 'dmID_signal == <whatever ID for final particle>'. for bounds, key in enumerate(paramList.keys()):. string += "" && ({} <= {} <= {})"".format(val[bounds][0], key, key, val[bounds][1]). signal = sigData.GetEntries(string). ```. 2. I cannot really join a .root file here, but it is just a matter of changing _Variable_1_ and _Variable_2_ of _paramList_ for 2 variables of a TTree. Also, I start the selection string with a selection of dmID but that can be removed, you just need to modify the string so that it doesn't start with _&&_. 3. To run the code, write it in a python file or jupyter notebook and run it using Python 3. ### Setup. 1. JupyROOT 6.22/08. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7986
https://github.com/root-project/root/issues/7986:711,reliability,slo,slows,711,"TTreeFormula behaves badly with <= operator and multiple conditions; - [x] Checked for duplicates. ### Describe the bug. Using pyRoot, preparing a selection string to use in TTree.GetEntries(const string * selection), it seems that a string of the type: `_value1_ <= _variable_ <= _value2_""`. should be working but insteads it returns an error: `TTreeFormula bad expression ""=_value2_""`. when other operators work just fine (no error), e.g.:. - `_value1_ < _variable_ < _value2_""`. - `_value1_ <= _variable_ < _value2_""`. - etc. I have tried with and without parentheses around the conditions. The only working solution (for now) to write: `_value1_ <= _variable_ && _variable_ <= _value2_""`. but this sensibly slows the code. ### Expected behavior. Using `_value1_ <= _variable_ <= _value2_""` should not return an error when trying to limit a variable to a closed interval, in the same way it works when limiting a variable to an open interval. ### To Reproduce. Steps to reproduce the behavior:. 1. The code that can reproduce the issue is the following:. ```. import itertools. import numpy as np. import ROOT as rt. paramList = { 'Variable_1' : np.linspace(0,1,4),. 'Variable_2' : np.linspace(0,3,5) }. boundaries = list(itertools.product(*[itertools.combinations(val,2) for val in paramList.values()])). for val in boundaries:. string = 'dmID_signal == <whatever ID for final particle>'. for bounds, key in enumerate(paramList.keys()):. string += "" && ({} <= {} <= {})"".format(val[bounds][0], key, key, val[bounds][1]). signal = sigData.GetEntries(string). ```. 2. I cannot really join a .root file here, but it is just a matter of changing _Variable_1_ and _Variable_2_ of _paramList_ for 2 variables of a TTree. Also, I start the selection string with a selection of dmID but that can be removed, you just need to modify the string so that it doesn't start with _&&_. 3. To run the code, write it in a python file or jupyter notebook and run it using Python 3. ### Setup. 1. JupyROOT 6.22/08. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7986
https://github.com/root-project/root/issues/7986:1850,reliability,doe,doesn,1850,". ### Describe the bug. Using pyRoot, preparing a selection string to use in TTree.GetEntries(const string * selection), it seems that a string of the type: `_value1_ <= _variable_ <= _value2_""`. should be working but insteads it returns an error: `TTreeFormula bad expression ""=_value2_""`. when other operators work just fine (no error), e.g.:. - `_value1_ < _variable_ < _value2_""`. - `_value1_ <= _variable_ < _value2_""`. - etc. I have tried with and without parentheses around the conditions. The only working solution (for now) to write: `_value1_ <= _variable_ && _variable_ <= _value2_""`. but this sensibly slows the code. ### Expected behavior. Using `_value1_ <= _variable_ <= _value2_""` should not return an error when trying to limit a variable to a closed interval, in the same way it works when limiting a variable to an open interval. ### To Reproduce. Steps to reproduce the behavior:. 1. The code that can reproduce the issue is the following:. ```. import itertools. import numpy as np. import ROOT as rt. paramList = { 'Variable_1' : np.linspace(0,1,4),. 'Variable_2' : np.linspace(0,3,5) }. boundaries = list(itertools.product(*[itertools.combinations(val,2) for val in paramList.values()])). for val in boundaries:. string = 'dmID_signal == <whatever ID for final particle>'. for bounds, key in enumerate(paramList.keys()):. string += "" && ({} <= {} <= {})"".format(val[bounds][0], key, key, val[bounds][1]). signal = sigData.GetEntries(string). ```. 2. I cannot really join a .root file here, but it is just a matter of changing _Variable_1_ and _Variable_2_ of _paramList_ for 2 variables of a TTree. Also, I start the selection string with a selection of dmID but that can be removed, you just need to modify the string so that it doesn't start with _&&_. 3. To run the code, write it in a python file or jupyter notebook and run it using Python 3. ### Setup. 1. JupyROOT 6.22/08. 2. Linux Mint 19.3 Cinnamon. 3. Installed Root using conda. ### Additional context. Using PyRoot.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7986
https://github.com/root-project/root/issues/7986:338,safety,error,error,338,"TTreeFormula behaves badly with <= operator and multiple conditions; - [x] Checked for duplicates. ### Describe the bug. Using pyRoot, preparing a selection string to use in TTree.GetEntries(const string * selection), it seems that a string of the type: `_value1_ <= _variable_ <= _value2_""`. should be working but insteads it returns an error: `TTreeFormula bad expression ""=_value2_""`. when other operators work just fine (no error), e.g.:. - `_value1_ < _variable_ < _value2_""`. - `_value1_ <= _variable_ < _value2_""`. - etc. I have tried with and without parentheses around the conditions. The only working solution (for now) to write: `_value1_ <= _variable_ && _variable_ <= _value2_""`. but this sensibly slows the code. ### Expected behavior. Using `_value1_ <= _variable_ <= _value2_""` should not return an error when trying to limit a variable to a closed interval, in the same way it works when limiting a variable to an open interval. ### To Reproduce. Steps to reproduce the behavior:. 1. The code that can reproduce the issue is the following:. ```. import itertools. import numpy as np. import ROOT as rt. paramList = { 'Variable_1' : np.linspace(0,1,4),. 'Variable_2' : np.linspace(0,3,5) }. boundaries = list(itertools.product(*[itertools.combinations(val,2) for val in paramList.values()])). for val in boundaries:. string = 'dmID_signal == <whatever ID for final particle>'. for bounds, key in enumerate(paramList.keys()):. string += "" && ({} <= {} <= {})"".format(val[bounds][0], key, key, val[bounds][1]). signal = sigData.GetEntries(string). ```. 2. I cannot really join a .root file here, but it is just a matter of changing _Variable_1_ and _Variable_2_ of _paramList_ for 2 variables of a TTree. Also, I start the selection string with a selection of dmID but that can be removed, you just need to modify the string so that it doesn't start with _&&_. 3. To run the code, write it in a python file or jupyter notebook and run it using Python 3. ### Setup. 1. JupyROOT 6.22/08. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7986
https://github.com/root-project/root/issues/7986:428,safety,error,error,428,"TTreeFormula behaves badly with <= operator and multiple conditions; - [x] Checked for duplicates. ### Describe the bug. Using pyRoot, preparing a selection string to use in TTree.GetEntries(const string * selection), it seems that a string of the type: `_value1_ <= _variable_ <= _value2_""`. should be working but insteads it returns an error: `TTreeFormula bad expression ""=_value2_""`. when other operators work just fine (no error), e.g.:. - `_value1_ < _variable_ < _value2_""`. - `_value1_ <= _variable_ < _value2_""`. - etc. I have tried with and without parentheses around the conditions. The only working solution (for now) to write: `_value1_ <= _variable_ && _variable_ <= _value2_""`. but this sensibly slows the code. ### Expected behavior. Using `_value1_ <= _variable_ <= _value2_""` should not return an error when trying to limit a variable to a closed interval, in the same way it works when limiting a variable to an open interval. ### To Reproduce. Steps to reproduce the behavior:. 1. The code that can reproduce the issue is the following:. ```. import itertools. import numpy as np. import ROOT as rt. paramList = { 'Variable_1' : np.linspace(0,1,4),. 'Variable_2' : np.linspace(0,3,5) }. boundaries = list(itertools.product(*[itertools.combinations(val,2) for val in paramList.values()])). for val in boundaries:. string = 'dmID_signal == <whatever ID for final particle>'. for bounds, key in enumerate(paramList.keys()):. string += "" && ({} <= {} <= {})"".format(val[bounds][0], key, key, val[bounds][1]). signal = sigData.GetEntries(string). ```. 2. I cannot really join a .root file here, but it is just a matter of changing _Variable_1_ and _Variable_2_ of _paramList_ for 2 variables of a TTree. Also, I start the selection string with a selection of dmID but that can be removed, you just need to modify the string so that it doesn't start with _&&_. 3. To run the code, write it in a python file or jupyter notebook and run it using Python 3. ### Setup. 1. JupyROOT 6.22/08. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7986
https://github.com/root-project/root/issues/7986:815,safety,error,error,815,"TTreeFormula behaves badly with <= operator and multiple conditions; - [x] Checked for duplicates. ### Describe the bug. Using pyRoot, preparing a selection string to use in TTree.GetEntries(const string * selection), it seems that a string of the type: `_value1_ <= _variable_ <= _value2_""`. should be working but insteads it returns an error: `TTreeFormula bad expression ""=_value2_""`. when other operators work just fine (no error), e.g.:. - `_value1_ < _variable_ < _value2_""`. - `_value1_ <= _variable_ < _value2_""`. - etc. I have tried with and without parentheses around the conditions. The only working solution (for now) to write: `_value1_ <= _variable_ && _variable_ <= _value2_""`. but this sensibly slows the code. ### Expected behavior. Using `_value1_ <= _variable_ <= _value2_""` should not return an error when trying to limit a variable to a closed interval, in the same way it works when limiting a variable to an open interval. ### To Reproduce. Steps to reproduce the behavior:. 1. The code that can reproduce the issue is the following:. ```. import itertools. import numpy as np. import ROOT as rt. paramList = { 'Variable_1' : np.linspace(0,1,4),. 'Variable_2' : np.linspace(0,3,5) }. boundaries = list(itertools.product(*[itertools.combinations(val,2) for val in paramList.values()])). for val in boundaries:. string = 'dmID_signal == <whatever ID for final particle>'. for bounds, key in enumerate(paramList.keys()):. string += "" && ({} <= {} <= {})"".format(val[bounds][0], key, key, val[bounds][1]). signal = sigData.GetEntries(string). ```. 2. I cannot really join a .root file here, but it is just a matter of changing _Variable_1_ and _Variable_2_ of _paramList_ for 2 variables of a TTree. Also, I start the selection string with a selection of dmID but that can be removed, you just need to modify the string so that it doesn't start with _&&_. 3. To run the code, write it in a python file or jupyter notebook and run it using Python 3. ### Setup. 1. JupyROOT 6.22/08. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7986
https://github.com/root-project/root/issues/7986:1525,security,sign,signal,1525,". ### Describe the bug. Using pyRoot, preparing a selection string to use in TTree.GetEntries(const string * selection), it seems that a string of the type: `_value1_ <= _variable_ <= _value2_""`. should be working but insteads it returns an error: `TTreeFormula bad expression ""=_value2_""`. when other operators work just fine (no error), e.g.:. - `_value1_ < _variable_ < _value2_""`. - `_value1_ <= _variable_ < _value2_""`. - etc. I have tried with and without parentheses around the conditions. The only working solution (for now) to write: `_value1_ <= _variable_ && _variable_ <= _value2_""`. but this sensibly slows the code. ### Expected behavior. Using `_value1_ <= _variable_ <= _value2_""` should not return an error when trying to limit a variable to a closed interval, in the same way it works when limiting a variable to an open interval. ### To Reproduce. Steps to reproduce the behavior:. 1. The code that can reproduce the issue is the following:. ```. import itertools. import numpy as np. import ROOT as rt. paramList = { 'Variable_1' : np.linspace(0,1,4),. 'Variable_2' : np.linspace(0,3,5) }. boundaries = list(itertools.product(*[itertools.combinations(val,2) for val in paramList.values()])). for val in boundaries:. string = 'dmID_signal == <whatever ID for final particle>'. for bounds, key in enumerate(paramList.keys()):. string += "" && ({} <= {} <= {})"".format(val[bounds][0], key, key, val[bounds][1]). signal = sigData.GetEntries(string). ```. 2. I cannot really join a .root file here, but it is just a matter of changing _Variable_1_ and _Variable_2_ of _paramList_ for 2 variables of a TTree. Also, I start the selection string with a selection of dmID but that can be removed, you just need to modify the string so that it doesn't start with _&&_. 3. To run the code, write it in a python file or jupyter notebook and run it using Python 3. ### Setup. 1. JupyROOT 6.22/08. 2. Linux Mint 19.3 Cinnamon. 3. Installed Root using conda. ### Additional context. Using PyRoot.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7986
https://github.com/root-project/root/issues/7986:1821,security,modif,modify,1821,". ### Describe the bug. Using pyRoot, preparing a selection string to use in TTree.GetEntries(const string * selection), it seems that a string of the type: `_value1_ <= _variable_ <= _value2_""`. should be working but insteads it returns an error: `TTreeFormula bad expression ""=_value2_""`. when other operators work just fine (no error), e.g.:. - `_value1_ < _variable_ < _value2_""`. - `_value1_ <= _variable_ < _value2_""`. - etc. I have tried with and without parentheses around the conditions. The only working solution (for now) to write: `_value1_ <= _variable_ && _variable_ <= _value2_""`. but this sensibly slows the code. ### Expected behavior. Using `_value1_ <= _variable_ <= _value2_""` should not return an error when trying to limit a variable to a closed interval, in the same way it works when limiting a variable to an open interval. ### To Reproduce. Steps to reproduce the behavior:. 1. The code that can reproduce the issue is the following:. ```. import itertools. import numpy as np. import ROOT as rt. paramList = { 'Variable_1' : np.linspace(0,1,4),. 'Variable_2' : np.linspace(0,3,5) }. boundaries = list(itertools.product(*[itertools.combinations(val,2) for val in paramList.values()])). for val in boundaries:. string = 'dmID_signal == <whatever ID for final particle>'. for bounds, key in enumerate(paramList.keys()):. string += "" && ({} <= {} <= {})"".format(val[bounds][0], key, key, val[bounds][1]). signal = sigData.GetEntries(string). ```. 2. I cannot really join a .root file here, but it is just a matter of changing _Variable_1_ and _Variable_2_ of _paramList_ for 2 variables of a TTree. Also, I start the selection string with a selection of dmID but that can be removed, you just need to modify the string so that it doesn't start with _&&_. 3. To run the code, write it in a python file or jupyter notebook and run it using Python 3. ### Setup. 1. JupyROOT 6.22/08. 2. Linux Mint 19.3 Cinnamon. 3. Installed Root using conda. ### Additional context. Using PyRoot.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7986
https://github.com/root-project/root/issues/7986:2075,testability,context,context,2075,". ### Describe the bug. Using pyRoot, preparing a selection string to use in TTree.GetEntries(const string * selection), it seems that a string of the type: `_value1_ <= _variable_ <= _value2_""`. should be working but insteads it returns an error: `TTreeFormula bad expression ""=_value2_""`. when other operators work just fine (no error), e.g.:. - `_value1_ < _variable_ < _value2_""`. - `_value1_ <= _variable_ < _value2_""`. - etc. I have tried with and without parentheses around the conditions. The only working solution (for now) to write: `_value1_ <= _variable_ && _variable_ <= _value2_""`. but this sensibly slows the code. ### Expected behavior. Using `_value1_ <= _variable_ <= _value2_""` should not return an error when trying to limit a variable to a closed interval, in the same way it works when limiting a variable to an open interval. ### To Reproduce. Steps to reproduce the behavior:. 1. The code that can reproduce the issue is the following:. ```. import itertools. import numpy as np. import ROOT as rt. paramList = { 'Variable_1' : np.linspace(0,1,4),. 'Variable_2' : np.linspace(0,3,5) }. boundaries = list(itertools.product(*[itertools.combinations(val,2) for val in paramList.values()])). for val in boundaries:. string = 'dmID_signal == <whatever ID for final particle>'. for bounds, key in enumerate(paramList.keys()):. string += "" && ({} <= {} <= {})"".format(val[bounds][0], key, key, val[bounds][1]). signal = sigData.GetEntries(string). ```. 2. I cannot really join a .root file here, but it is just a matter of changing _Variable_1_ and _Variable_2_ of _paramList_ for 2 variables of a TTree. Also, I start the selection string with a selection of dmID but that can be removed, you just need to modify the string so that it doesn't start with _&&_. 3. To run the code, write it in a python file or jupyter notebook and run it using Python 3. ### Setup. 1. JupyROOT 6.22/08. 2. Linux Mint 19.3 Cinnamon. 3. Installed Root using conda. ### Additional context. Using PyRoot.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7986
https://github.com/root-project/root/issues/7986:338,usability,error,error,338,"TTreeFormula behaves badly with <= operator and multiple conditions; - [x] Checked for duplicates. ### Describe the bug. Using pyRoot, preparing a selection string to use in TTree.GetEntries(const string * selection), it seems that a string of the type: `_value1_ <= _variable_ <= _value2_""`. should be working but insteads it returns an error: `TTreeFormula bad expression ""=_value2_""`. when other operators work just fine (no error), e.g.:. - `_value1_ < _variable_ < _value2_""`. - `_value1_ <= _variable_ < _value2_""`. - etc. I have tried with and without parentheses around the conditions. The only working solution (for now) to write: `_value1_ <= _variable_ && _variable_ <= _value2_""`. but this sensibly slows the code. ### Expected behavior. Using `_value1_ <= _variable_ <= _value2_""` should not return an error when trying to limit a variable to a closed interval, in the same way it works when limiting a variable to an open interval. ### To Reproduce. Steps to reproduce the behavior:. 1. The code that can reproduce the issue is the following:. ```. import itertools. import numpy as np. import ROOT as rt. paramList = { 'Variable_1' : np.linspace(0,1,4),. 'Variable_2' : np.linspace(0,3,5) }. boundaries = list(itertools.product(*[itertools.combinations(val,2) for val in paramList.values()])). for val in boundaries:. string = 'dmID_signal == <whatever ID for final particle>'. for bounds, key in enumerate(paramList.keys()):. string += "" && ({} <= {} <= {})"".format(val[bounds][0], key, key, val[bounds][1]). signal = sigData.GetEntries(string). ```. 2. I cannot really join a .root file here, but it is just a matter of changing _Variable_1_ and _Variable_2_ of _paramList_ for 2 variables of a TTree. Also, I start the selection string with a selection of dmID but that can be removed, you just need to modify the string so that it doesn't start with _&&_. 3. To run the code, write it in a python file or jupyter notebook and run it using Python 3. ### Setup. 1. JupyROOT 6.22/08. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7986
https://github.com/root-project/root/issues/7986:428,usability,error,error,428,"TTreeFormula behaves badly with <= operator and multiple conditions; - [x] Checked for duplicates. ### Describe the bug. Using pyRoot, preparing a selection string to use in TTree.GetEntries(const string * selection), it seems that a string of the type: `_value1_ <= _variable_ <= _value2_""`. should be working but insteads it returns an error: `TTreeFormula bad expression ""=_value2_""`. when other operators work just fine (no error), e.g.:. - `_value1_ < _variable_ < _value2_""`. - `_value1_ <= _variable_ < _value2_""`. - etc. I have tried with and without parentheses around the conditions. The only working solution (for now) to write: `_value1_ <= _variable_ && _variable_ <= _value2_""`. but this sensibly slows the code. ### Expected behavior. Using `_value1_ <= _variable_ <= _value2_""` should not return an error when trying to limit a variable to a closed interval, in the same way it works when limiting a variable to an open interval. ### To Reproduce. Steps to reproduce the behavior:. 1. The code that can reproduce the issue is the following:. ```. import itertools. import numpy as np. import ROOT as rt. paramList = { 'Variable_1' : np.linspace(0,1,4),. 'Variable_2' : np.linspace(0,3,5) }. boundaries = list(itertools.product(*[itertools.combinations(val,2) for val in paramList.values()])). for val in boundaries:. string = 'dmID_signal == <whatever ID for final particle>'. for bounds, key in enumerate(paramList.keys()):. string += "" && ({} <= {} <= {})"".format(val[bounds][0], key, key, val[bounds][1]). signal = sigData.GetEntries(string). ```. 2. I cannot really join a .root file here, but it is just a matter of changing _Variable_1_ and _Variable_2_ of _paramList_ for 2 variables of a TTree. Also, I start the selection string with a selection of dmID but that can be removed, you just need to modify the string so that it doesn't start with _&&_. 3. To run the code, write it in a python file or jupyter notebook and run it using Python 3. ### Setup. 1. JupyROOT 6.22/08. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7986
https://github.com/root-project/root/issues/7986:740,usability,behavi,behavior,740,"TTreeFormula behaves badly with <= operator and multiple conditions; - [x] Checked for duplicates. ### Describe the bug. Using pyRoot, preparing a selection string to use in TTree.GetEntries(const string * selection), it seems that a string of the type: `_value1_ <= _variable_ <= _value2_""`. should be working but insteads it returns an error: `TTreeFormula bad expression ""=_value2_""`. when other operators work just fine (no error), e.g.:. - `_value1_ < _variable_ < _value2_""`. - `_value1_ <= _variable_ < _value2_""`. - etc. I have tried with and without parentheses around the conditions. The only working solution (for now) to write: `_value1_ <= _variable_ && _variable_ <= _value2_""`. but this sensibly slows the code. ### Expected behavior. Using `_value1_ <= _variable_ <= _value2_""` should not return an error when trying to limit a variable to a closed interval, in the same way it works when limiting a variable to an open interval. ### To Reproduce. Steps to reproduce the behavior:. 1. The code that can reproduce the issue is the following:. ```. import itertools. import numpy as np. import ROOT as rt. paramList = { 'Variable_1' : np.linspace(0,1,4),. 'Variable_2' : np.linspace(0,3,5) }. boundaries = list(itertools.product(*[itertools.combinations(val,2) for val in paramList.values()])). for val in boundaries:. string = 'dmID_signal == <whatever ID for final particle>'. for bounds, key in enumerate(paramList.keys()):. string += "" && ({} <= {} <= {})"".format(val[bounds][0], key, key, val[bounds][1]). signal = sigData.GetEntries(string). ```. 2. I cannot really join a .root file here, but it is just a matter of changing _Variable_1_ and _Variable_2_ of _paramList_ for 2 variables of a TTree. Also, I start the selection string with a selection of dmID but that can be removed, you just need to modify the string so that it doesn't start with _&&_. 3. To run the code, write it in a python file or jupyter notebook and run it using Python 3. ### Setup. 1. JupyROOT 6.22/08. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7986
https://github.com/root-project/root/issues/7986:815,usability,error,error,815,"TTreeFormula behaves badly with <= operator and multiple conditions; - [x] Checked for duplicates. ### Describe the bug. Using pyRoot, preparing a selection string to use in TTree.GetEntries(const string * selection), it seems that a string of the type: `_value1_ <= _variable_ <= _value2_""`. should be working but insteads it returns an error: `TTreeFormula bad expression ""=_value2_""`. when other operators work just fine (no error), e.g.:. - `_value1_ < _variable_ < _value2_""`. - `_value1_ <= _variable_ < _value2_""`. - etc. I have tried with and without parentheses around the conditions. The only working solution (for now) to write: `_value1_ <= _variable_ && _variable_ <= _value2_""`. but this sensibly slows the code. ### Expected behavior. Using `_value1_ <= _variable_ <= _value2_""` should not return an error when trying to limit a variable to a closed interval, in the same way it works when limiting a variable to an open interval. ### To Reproduce. Steps to reproduce the behavior:. 1. The code that can reproduce the issue is the following:. ```. import itertools. import numpy as np. import ROOT as rt. paramList = { 'Variable_1' : np.linspace(0,1,4),. 'Variable_2' : np.linspace(0,3,5) }. boundaries = list(itertools.product(*[itertools.combinations(val,2) for val in paramList.values()])). for val in boundaries:. string = 'dmID_signal == <whatever ID for final particle>'. for bounds, key in enumerate(paramList.keys()):. string += "" && ({} <= {} <= {})"".format(val[bounds][0], key, key, val[bounds][1]). signal = sigData.GetEntries(string). ```. 2. I cannot really join a .root file here, but it is just a matter of changing _Variable_1_ and _Variable_2_ of _paramList_ for 2 variables of a TTree. Also, I start the selection string with a selection of dmID but that can be removed, you just need to modify the string so that it doesn't start with _&&_. 3. To run the code, write it in a python file or jupyter notebook and run it using Python 3. ### Setup. 1. JupyROOT 6.22/08. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7986
https://github.com/root-project/root/issues/7986:858,usability,close,closed,858,"TTreeFormula behaves badly with <= operator and multiple conditions; - [x] Checked for duplicates. ### Describe the bug. Using pyRoot, preparing a selection string to use in TTree.GetEntries(const string * selection), it seems that a string of the type: `_value1_ <= _variable_ <= _value2_""`. should be working but insteads it returns an error: `TTreeFormula bad expression ""=_value2_""`. when other operators work just fine (no error), e.g.:. - `_value1_ < _variable_ < _value2_""`. - `_value1_ <= _variable_ < _value2_""`. - etc. I have tried with and without parentheses around the conditions. The only working solution (for now) to write: `_value1_ <= _variable_ && _variable_ <= _value2_""`. but this sensibly slows the code. ### Expected behavior. Using `_value1_ <= _variable_ <= _value2_""` should not return an error when trying to limit a variable to a closed interval, in the same way it works when limiting a variable to an open interval. ### To Reproduce. Steps to reproduce the behavior:. 1. The code that can reproduce the issue is the following:. ```. import itertools. import numpy as np. import ROOT as rt. paramList = { 'Variable_1' : np.linspace(0,1,4),. 'Variable_2' : np.linspace(0,3,5) }. boundaries = list(itertools.product(*[itertools.combinations(val,2) for val in paramList.values()])). for val in boundaries:. string = 'dmID_signal == <whatever ID for final particle>'. for bounds, key in enumerate(paramList.keys()):. string += "" && ({} <= {} <= {})"".format(val[bounds][0], key, key, val[bounds][1]). signal = sigData.GetEntries(string). ```. 2. I cannot really join a .root file here, but it is just a matter of changing _Variable_1_ and _Variable_2_ of _paramList_ for 2 variables of a TTree. Also, I start the selection string with a selection of dmID but that can be removed, you just need to modify the string so that it doesn't start with _&&_. 3. To run the code, write it in a python file or jupyter notebook and run it using Python 3. ### Setup. 1. JupyROOT 6.22/08. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7986
https://github.com/root-project/root/issues/7986:987,usability,behavi,behavior,987,"TTreeFormula behaves badly with <= operator and multiple conditions; - [x] Checked for duplicates. ### Describe the bug. Using pyRoot, preparing a selection string to use in TTree.GetEntries(const string * selection), it seems that a string of the type: `_value1_ <= _variable_ <= _value2_""`. should be working but insteads it returns an error: `TTreeFormula bad expression ""=_value2_""`. when other operators work just fine (no error), e.g.:. - `_value1_ < _variable_ < _value2_""`. - `_value1_ <= _variable_ < _value2_""`. - etc. I have tried with and without parentheses around the conditions. The only working solution (for now) to write: `_value1_ <= _variable_ && _variable_ <= _value2_""`. but this sensibly slows the code. ### Expected behavior. Using `_value1_ <= _variable_ <= _value2_""` should not return an error when trying to limit a variable to a closed interval, in the same way it works when limiting a variable to an open interval. ### To Reproduce. Steps to reproduce the behavior:. 1. The code that can reproduce the issue is the following:. ```. import itertools. import numpy as np. import ROOT as rt. paramList = { 'Variable_1' : np.linspace(0,1,4),. 'Variable_2' : np.linspace(0,3,5) }. boundaries = list(itertools.product(*[itertools.combinations(val,2) for val in paramList.values()])). for val in boundaries:. string = 'dmID_signal == <whatever ID for final particle>'. for bounds, key in enumerate(paramList.keys()):. string += "" && ({} <= {} <= {})"".format(val[bounds][0], key, key, val[bounds][1]). signal = sigData.GetEntries(string). ```. 2. I cannot really join a .root file here, but it is just a matter of changing _Variable_1_ and _Variable_2_ of _paramList_ for 2 variables of a TTree. Also, I start the selection string with a selection of dmID but that can be removed, you just need to modify the string so that it doesn't start with _&&_. 3. To run the code, write it in a python file or jupyter notebook and run it using Python 3. ### Setup. 1. JupyROOT 6.22/08. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7986
https://github.com/root-project/root/issues/7987:0,availability,Error,Error,0,"Error message when opening a GDML with TEveManager; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When opening a GDML geometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:565,availability,error,error,565,"Error message when opening a GDML with TEveManager; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When opening a GDML geometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:586,availability,Error,Error,586,"Error message when opening a GDML with TEveManager; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When opening a GDML geometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:835,availability,error,error,835,"Error message when opening a GDML with TEveManager; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When opening a GDML geometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:2328,availability,Error,Error,2328,"eometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 4, max placements = 7497. Info in <TGeoManager::CloseGeometry>: 15080 nodes/ 33 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. Error in <TFile::Init>: HERD.gdml not a ROOT file. (TGeoManager *) 0x55710546f930. ```. ### Setup. 1. ROOT version: 6.22.08. 2. Operating system: Archlinux with GCC 10.2.0. 3. Self-built Root instance.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:2456,availability,Operat,Operating,2456,"eometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 4, max placements = 7497. Info in <TGeoManager::CloseGeometry>: 15080 nodes/ 33 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. Error in <TFile::Init>: HERD.gdml not a ROOT file. (TGeoManager *) 0x55710546f930. ```. ### Setup. 1. ROOT version: 6.22.08. 2. Operating system: Archlinux with GCC 10.2.0. 3. Self-built Root instance.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:1156,deployability,build,build,1156,"s?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When opening a GDML geometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 4, max placements = 7497. Info in <TGeoMa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:1739,deployability,Build,BuildCache,1739,"eometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 4, max placements = 7497. Info in <TGeoManager::CloseGeometry>: 15080 nodes/ 33 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. Error in <TFile::Init>: HERD.gdml not a ROOT file. (TGeoManager *) 0x55710546f930. ```. ### Setup. 1. ROOT version: 6.22.08. 2. Operating system: Archlinux with GCC 10.2.0. 3. Self-built Root instance.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:2052,deployability,Build,Building,2052,"eometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 4, max placements = 7497. Info in <TGeoManager::CloseGeometry>: 15080 nodes/ 33 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. Error in <TFile::Init>: HERD.gdml not a ROOT file. (TGeoManager *) 0x55710546f930. ```. ### Setup. 1. ROOT version: 6.22.08. 2. Operating system: Archlinux with GCC 10.2.0. 3. Self-built Root instance.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:2435,deployability,version,version,2435,"eometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 4, max placements = 7497. Info in <TGeoManager::CloseGeometry>: 15080 nodes/ 33 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. Error in <TFile::Init>: HERD.gdml not a ROOT file. (TGeoManager *) 0x55710546f930. ```. ### Setup. 1. ROOT version: 6.22.08. 2. Operating system: Archlinux with GCC 10.2.0. 3. Self-built Root instance.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:1418,energy efficiency,load,loading,1418,"be the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When opening a GDML geometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 4, max placements = 7497. Info in <TGeoManager::CloseGeometry>: 15080 nodes/ 33 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. Error in <TFile::Init>: HERD.gdml not a ROOT file. (TGeoManager *) 0x55710546f930. ```. ### Se",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:2297,energy efficiency,model,modeler,2297,"eometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 4, max placements = 7497. Info in <TGeoManager::CloseGeometry>: 15080 nodes/ 33 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. Error in <TFile::Init>: HERD.gdml not a ROOT file. (TGeoManager *) 0x55710546f930. ```. ### Setup. 1. ROOT version: 6.22.08. 2. Operating system: Archlinux with GCC 10.2.0. 3. Self-built Root instance.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:6,integrability,messag,message,6,"Error message when opening a GDML with TEveManager; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When opening a GDML geometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:571,integrability,messag,message,571,"Error message when opening a GDML with TEveManager; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When opening a GDML geometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:657,integrability,messag,message,657,"Error message when opening a GDML with TEveManager; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When opening a GDML geometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:841,integrability,messag,message,841,"Error message when opening a GDML with TEveManager; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When opening a GDML geometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:2435,integrability,version,version,2435,"eometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 4, max placements = 7497. Info in <TGeoManager::CloseGeometry>: 15080 nodes/ 33 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. Error in <TFile::Init>: HERD.gdml not a ROOT file. (TGeoManager *) 0x55710546f930. ```. ### Setup. 1. ROOT version: 6.22.08. 2. Operating system: Archlinux with GCC 10.2.0. 3. Self-built Root instance.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:6,interoperability,messag,message,6,"Error message when opening a GDML with TEveManager; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When opening a GDML geometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:571,interoperability,messag,message,571,"Error message when opening a GDML with TEveManager; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When opening a GDML geometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:657,interoperability,messag,message,657,"Error message when opening a GDML with TEveManager; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When opening a GDML geometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:841,interoperability,messag,message,841,"Error message when opening a GDML with TEveManager; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When opening a GDML geometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:2435,modifiability,version,version,2435,"eometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 4, max placements = 7497. Info in <TGeoManager::CloseGeometry>: 15080 nodes/ 33 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. Error in <TFile::Init>: HERD.gdml not a ROOT file. (TGeoManager *) 0x55710546f930. ```. ### Setup. 1. ROOT version: 6.22.08. 2. Operating system: Archlinux with GCC 10.2.0. 3. Self-built Root instance.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:0,performance,Error,Error,0,"Error message when opening a GDML with TEveManager; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When opening a GDML geometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:565,performance,error,error,565,"Error message when opening a GDML with TEveManager; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When opening a GDML geometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:586,performance,Error,Error,586,"Error message when opening a GDML with TEveManager; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When opening a GDML geometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:835,performance,error,error,835,"Error message when opening a GDML with TEveManager; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When opening a GDML geometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:1418,performance,load,loading,1418,"be the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When opening a GDML geometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 4, max placements = 7497. Info in <TGeoManager::CloseGeometry>: 15080 nodes/ 33 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. Error in <TFile::Init>: HERD.gdml not a ROOT file. (TGeoManager *) 0x55710546f930. ```. ### Se",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:2061,performance,cach,cache,2061,"eometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 4, max placements = 7497. Info in <TGeoManager::CloseGeometry>: 15080 nodes/ 33 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. Error in <TFile::Init>: HERD.gdml not a ROOT file. (TGeoManager *) 0x55710546f930. ```. ### Setup. 1. ROOT version: 6.22.08. 2. Operating system: Archlinux with GCC 10.2.0. 3. Self-built Root instance.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:2328,performance,Error,Error,2328,"eometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 4, max placements = 7497. Info in <TGeoManager::CloseGeometry>: 15080 nodes/ 33 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. Error in <TFile::Init>: HERD.gdml not a ROOT file. (TGeoManager *) 0x55710546f930. ```. ### Setup. 1. ROOT version: 6.22.08. 2. Operating system: Archlinux with GCC 10.2.0. 3. Self-built Root instance.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:0,safety,Error,Error,0,"Error message when opening a GDML with TEveManager; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When opening a GDML geometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:565,safety,error,error,565,"Error message when opening a GDML with TEveManager; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When opening a GDML geometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:586,safety,Error,Error,586,"Error message when opening a GDML with TEveManager; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When opening a GDML geometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:835,safety,error,error,835,"Error message when opening a GDML with TEveManager; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When opening a GDML geometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:1110,safety,input,input,1110,"ub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When opening a GDML geometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max lev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:2328,safety,Error,Error,2328,"eometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 4, max placements = 7497. Info in <TGeoManager::CloseGeometry>: 15080 nodes/ 33 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. Error in <TFile::Init>: HERD.gdml not a ROOT file. (TGeoManager *) 0x55710546f930. ```. ### Setup. 1. ROOT version: 6.22.08. 2. Operating system: Archlinux with GCC 10.2.0. 3. Self-built Root instance.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:2297,security,model,modeler,2297,"eometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 4, max placements = 7497. Info in <TGeoManager::CloseGeometry>: 15080 nodes/ 33 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. Error in <TFile::Init>: HERD.gdml not a ROOT file. (TGeoManager *) 0x55710546f930. ```. ### Setup. 1. ROOT version: 6.22.08. 2. Operating system: Archlinux with GCC 10.2.0. 3. Self-built Root instance.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:1210,testability,simpl,simply,1210,"jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When opening a GDML geometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 4, max placements = 7497. Info in <TGeoManager::CloseGeometry>: 15080 nodes/ 33 volume UID's in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:0,usability,Error,Error,0,"Error message when opening a GDML with TEveManager; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When opening a GDML geometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:442,usability,clear,clear,442,"Error message when opening a GDML with TEveManager; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When opening a GDML geometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:490,usability,behavi,behavior,490,"Error message when opening a GDML with TEveManager; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When opening a GDML geometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:565,usability,error,error,565,"Error message when opening a GDML with TEveManager; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When opening a GDML geometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:586,usability,Error,Error,586,"Error message when opening a GDML with TEveManager; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When opening a GDML geometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:747,usability,behavi,behavior,747,"Error message when opening a GDML with TEveManager; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When opening a GDML geometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:765,usability,clear,clear,765,"Error message when opening a GDML with TEveManager; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When opening a GDML geometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:835,usability,error,error,835,"Error message when opening a GDML with TEveManager; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When opening a GDML geometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:965,usability,behavi,behavior,965,"Error message when opening a GDML with TEveManager; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When opening a GDML geometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:1110,usability,input,input,1110,"ub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When opening a GDML geometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max lev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:1210,usability,simpl,simply,1210,"jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When opening a GDML geometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 4, max placements = 7497. Info in <TGeoManager::CloseGeometry>: 15080 nodes/ 33 volume UID's in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:1933,usability,Close,CloseGeometry,1933,"eometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 4, max placements = 7497. Info in <TGeoManager::CloseGeometry>: 15080 nodes/ 33 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. Error in <TFile::Init>: HERD.gdml not a ROOT file. (TGeoManager *) 0x55710546f930. ```. ### Setup. 1. ROOT version: 6.22.08. 2. Operating system: Archlinux with GCC 10.2.0. 3. Self-built Root instance.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:2036,usability,Close,CloseGeometry,2036,"eometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 4, max placements = 7497. Info in <TGeoManager::CloseGeometry>: 15080 nodes/ 33 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. Error in <TFile::Init>: HERD.gdml not a ROOT file. (TGeoManager *) 0x55710546f930. ```. ### Setup. 1. ROOT version: 6.22.08. 2. Operating system: Archlinux with GCC 10.2.0. 3. Self-built Root instance.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:2166,usability,Close,CloseGeometry,2166,"eometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 4, max placements = 7497. Info in <TGeoManager::CloseGeometry>: 15080 nodes/ 33 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. Error in <TFile::Init>: HERD.gdml not a ROOT file. (TGeoManager *) 0x55710546f930. ```. ### Setup. 1. ROOT version: 6.22.08. 2. Operating system: Archlinux with GCC 10.2.0. 3. Self-built Root instance.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:2205,usability,UI,UID,2205,"eometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 4, max placements = 7497. Info in <TGeoManager::CloseGeometry>: 15080 nodes/ 33 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. Error in <TFile::Init>: HERD.gdml not a ROOT file. (TGeoManager *) 0x55710546f930. ```. ### Setup. 1. ROOT version: 6.22.08. 2. Operating system: Archlinux with GCC 10.2.0. 3. Self-built Root instance.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:2265,usability,Close,CloseGeometry,2265,"eometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 4, max placements = 7497. Info in <TGeoManager::CloseGeometry>: 15080 nodes/ 33 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. Error in <TFile::Init>: HERD.gdml not a ROOT file. (TGeoManager *) 0x55710546f930. ```. ### Setup. 1. ROOT version: 6.22.08. 2. Operating system: Archlinux with GCC 10.2.0. 3. Self-built Root instance.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/issues/7987:2328,usability,Error,Error,2328,"eometry with TEveManager I get this error message:. ```. Error in <TFile::Init>: HERD.gdml not a ROOT file. ```. Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. This can be simply reproduced in the Root shell by opening any GDML file as:. ```. $ root. root [0] TEveManager m(500, 500). (TEveManager &) @0x7fbabb351008. root [1] m.GetGeometry(""HERD.gdml""). TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'. Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 4, max placements = 7497. Info in <TGeoManager::CloseGeometry>: 15080 nodes/ 33 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. Error in <TFile::Init>: HERD.gdml not a ROOT file. (TGeoManager *) 0x55710546f930. ```. ### Setup. 1. ROOT version: 6.22.08. 2. Operating system: Archlinux with GCC 10.2.0. 3. Self-built Root instance.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7987
https://github.com/root-project/root/pull/7989:162,performance,time,time,162,Streamer info docs and linking of cling; - Fix documentation of StreamerInfo::GenerateInfoForPair. - Prevent linking of rootcling_stage1 and libCling at the same time. @Axel-Naumann This is what we talked about for faster linking when debug symbols are in use.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7989
https://github.com/root-project/root/pull/7989:101,safety,Prevent,Prevent,101,Streamer info docs and linking of cling; - Fix documentation of StreamerInfo::GenerateInfoForPair. - Prevent linking of rootcling_stage1 and libCling at the same time. @Axel-Naumann This is what we talked about for faster linking when debug symbols are in use.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7989
https://github.com/root-project/root/pull/7989:101,security,Preven,Prevent,101,Streamer info docs and linking of cling; - Fix documentation of StreamerInfo::GenerateInfoForPair. - Prevent linking of rootcling_stage1 and libCling at the same time. @Axel-Naumann This is what we talked about for faster linking when debug symbols are in use.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7989
https://github.com/root-project/root/pull/7989:47,usability,document,documentation,47,Streamer info docs and linking of cling; - Fix documentation of StreamerInfo::GenerateInfoForPair. - Prevent linking of rootcling_stage1 and libCling at the same time. @Axel-Naumann This is what we talked about for faster linking when debug symbols are in use.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7989
https://github.com/root-project/root/pull/7990:580,deployability,updat,updated,580,"[v624] Properly handle v5 file with missing information.; Fix #7912. In this report, the v5 file has a 'map<TString, RooExpensiveObjectCache::ExpensiveObject*>'. however it is recorded as 'map<TString, ExpensiveObject*>'. However the map stored in. the file is empty and thus no information was recorded about `ExpensiveObject`,. consequently when the map's StreamerInfo request the TClass for the underlying pair,. it is returned nullptr (since we no longer create the TClass for a pair where one or. more of the component is unknown). The routine `FixCollectionV5` needed to be updated to handle this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7990
https://github.com/root-project/root/pull/7990:514,integrability,compon,component,514,"[v624] Properly handle v5 file with missing information.; Fix #7912. In this report, the v5 file has a 'map<TString, RooExpensiveObjectCache::ExpensiveObject*>'. however it is recorded as 'map<TString, ExpensiveObject*>'. However the map stored in. the file is empty and thus no information was recorded about `ExpensiveObject`,. consequently when the map's StreamerInfo request the TClass for the underlying pair,. it is returned nullptr (since we no longer create the TClass for a pair where one or. more of the component is unknown). The routine `FixCollectionV5` needed to be updated to handle this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7990
https://github.com/root-project/root/pull/7990:541,integrability,rout,routine,541,"[v624] Properly handle v5 file with missing information.; Fix #7912. In this report, the v5 file has a 'map<TString, RooExpensiveObjectCache::ExpensiveObject*>'. however it is recorded as 'map<TString, ExpensiveObject*>'. However the map stored in. the file is empty and thus no information was recorded about `ExpensiveObject`,. consequently when the map's StreamerInfo request the TClass for the underlying pair,. it is returned nullptr (since we no longer create the TClass for a pair where one or. more of the component is unknown). The routine `FixCollectionV5` needed to be updated to handle this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7990
https://github.com/root-project/root/pull/7990:514,interoperability,compon,component,514,"[v624] Properly handle v5 file with missing information.; Fix #7912. In this report, the v5 file has a 'map<TString, RooExpensiveObjectCache::ExpensiveObject*>'. however it is recorded as 'map<TString, ExpensiveObject*>'. However the map stored in. the file is empty and thus no information was recorded about `ExpensiveObject`,. consequently when the map's StreamerInfo request the TClass for the underlying pair,. it is returned nullptr (since we no longer create the TClass for a pair where one or. more of the component is unknown). The routine `FixCollectionV5` needed to be updated to handle this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7990
https://github.com/root-project/root/pull/7990:514,modifiability,compon,component,514,"[v624] Properly handle v5 file with missing information.; Fix #7912. In this report, the v5 file has a 'map<TString, RooExpensiveObjectCache::ExpensiveObject*>'. however it is recorded as 'map<TString, ExpensiveObject*>'. However the map stored in. the file is empty and thus no information was recorded about `ExpensiveObject`,. consequently when the map's StreamerInfo request the TClass for the underlying pair,. it is returned nullptr (since we no longer create the TClass for a pair where one or. more of the component is unknown). The routine `FixCollectionV5` needed to be updated to handle this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7990
https://github.com/root-project/root/pull/7990:580,safety,updat,updated,580,"[v624] Properly handle v5 file with missing information.; Fix #7912. In this report, the v5 file has a 'map<TString, RooExpensiveObjectCache::ExpensiveObject*>'. however it is recorded as 'map<TString, ExpensiveObject*>'. However the map stored in. the file is empty and thus no information was recorded about `ExpensiveObject`,. consequently when the map's StreamerInfo request the TClass for the underlying pair,. it is returned nullptr (since we no longer create the TClass for a pair where one or. more of the component is unknown). The routine `FixCollectionV5` needed to be updated to handle this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7990
https://github.com/root-project/root/pull/7990:580,security,updat,updated,580,"[v624] Properly handle v5 file with missing information.; Fix #7912. In this report, the v5 file has a 'map<TString, RooExpensiveObjectCache::ExpensiveObject*>'. however it is recorded as 'map<TString, ExpensiveObject*>'. However the map stored in. the file is empty and thus no information was recorded about `ExpensiveObject`,. consequently when the map's StreamerInfo request the TClass for the underlying pair,. it is returned nullptr (since we no longer create the TClass for a pair where one or. more of the component is unknown). The routine `FixCollectionV5` needed to be updated to handle this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7990
https://github.com/root-project/root/issues/7991:1780,availability,escal,escalier,1780," providing a wrong numerical value, root 6.18.00; Hello,. *Two histograms of m_yy are filled with pseudo-data :. -one for signal, filled mainly in the region of 125 GeV (no long tails on purpose, in order to show clearly the problem) (total in the 55 bins=1.58019). -one for the continuum, flat with a value of 40 (total in the 55 bins=2160). *For each of these histograms, a RooDataHist are filled. They will serve to construct the binned pdf. *A RooDataHist is constructed for the total : this is the pseudo-data. *The number or signal and bkg are counted and represent two variables (no fit, just counting what was filled). *From the two RooDataHist, an ""option"" (flag) renormalizes or does not renormalize the RooDataHist. *From these two RooDataHist, [two](url) HistPdf are filled. *Then, three models of pdf are constructed :. a pdf total : n_s * pdf_signal + n_b * pdf_continuum. a pdf signal only : pdf_signal. a pdf continuum only : pdf_continuum. a pdf n_s * pdf_signal : n_s * pdf_signal. a pdf n_continuum * pdf_continuum. Then, the first bin of the pseudo-data is printed : 40 (indeed, there is no signal in this bin). *Then, we compare this to the value of the pdf. -->The two variantes of option (normalize or not renormalize the RooDataHist) give a wrong value for the pdf. Indeed :. *In the case where we don't normalize the RooDataHist,. then the pdf total in this (example of) bin is wrong (by a factor 2160 / (2160+1.58019). *In the case where we do not normalize the RooDataHist,. -then the pdf n_continuum * pdf_continuum is wrong (by a factor 2160). -then the pdf pdf_continuum is wrong : by a factor (2160+1.58019) / 2160. I add a pdf illustrating the problem. I put here a minimum program that reproduces the problem :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemRooHistPdf%. Thank you. (Remark : the reason of the apparently strange list of steps is in order to do a much more complex study, which is not the purpose of the problem reported here.) .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7991
https://github.com/root-project/root/issues/7991:294,deployability,continu,continuum,294,"[RF] RooHistPdf providing a wrong numerical value, root 6.18.00; Hello,. *Two histograms of m_yy are filled with pseudo-data :. -one for signal, filled mainly in the region of 125 GeV (no long tails on purpose, in order to show clearly the problem) (total in the 55 bins=1.58019). -one for the continuum, flat with a value of 40 (total in the 55 bins=2160). *For each of these histograms, a RooDataHist are filled. They will serve to construct the binned pdf. *A RooDataHist is constructed for the total : this is the pseudo-data. *The number or signal and bkg are counted and represent two variables (no fit, just counting what was filled). *From the two RooDataHist, an ""option"" (flag) renormalizes or does not renormalize the RooDataHist. *From these two RooDataHist, [two](url) HistPdf are filled. *Then, three models of pdf are constructed :. a pdf total : n_s * pdf_signal + n_b * pdf_continuum. a pdf signal only : pdf_signal. a pdf continuum only : pdf_continuum. a pdf n_s * pdf_signal : n_s * pdf_signal. a pdf n_continuum * pdf_continuum. Then, the first bin of the pseudo-data is printed : 40 (indeed, there is no signal in this bin). *Then, we compare this to the value of the pdf. -->The two variantes of option (normalize or not renormalize the RooDataHist) give a wrong value for the pdf. Indeed :. *In the case where we don't normalize the RooDataHist,. then the pdf total in this (example of) bin is wrong (by a factor 2160 / (2160+1.58019). *In the case where we do not normalize the RooDataHist,. -then the pdf n_continuum * pdf_continuum is wrong (by a factor 2160). -then the pdf pdf_continuum is wrong : by a factor (2160+1.58019) / 2160. I add a pdf illustrating the problem. I put here a minimum program that reproduces the problem :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemRooHistPdf%. Thank you. (Remark : the reason of the apparently strange list of steps is in order to do a much more complex study, which is not the purpose of the problem re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7991
https://github.com/root-project/root/issues/7991:940,deployability,continu,continuum,940,"[RF] RooHistPdf providing a wrong numerical value, root 6.18.00; Hello,. *Two histograms of m_yy are filled with pseudo-data :. -one for signal, filled mainly in the region of 125 GeV (no long tails on purpose, in order to show clearly the problem) (total in the 55 bins=1.58019). -one for the continuum, flat with a value of 40 (total in the 55 bins=2160). *For each of these histograms, a RooDataHist are filled. They will serve to construct the binned pdf. *A RooDataHist is constructed for the total : this is the pseudo-data. *The number or signal and bkg are counted and represent two variables (no fit, just counting what was filled). *From the two RooDataHist, an ""option"" (flag) renormalizes or does not renormalize the RooDataHist. *From these two RooDataHist, [two](url) HistPdf are filled. *Then, three models of pdf are constructed :. a pdf total : n_s * pdf_signal + n_b * pdf_continuum. a pdf signal only : pdf_signal. a pdf continuum only : pdf_continuum. a pdf n_s * pdf_signal : n_s * pdf_signal. a pdf n_continuum * pdf_continuum. Then, the first bin of the pseudo-data is printed : 40 (indeed, there is no signal in this bin). *Then, we compare this to the value of the pdf. -->The two variantes of option (normalize or not renormalize the RooDataHist) give a wrong value for the pdf. Indeed :. *In the case where we don't normalize the RooDataHist,. then the pdf total in this (example of) bin is wrong (by a factor 2160 / (2160+1.58019). *In the case where we do not normalize the RooDataHist,. -then the pdf n_continuum * pdf_continuum is wrong (by a factor 2160). -then the pdf pdf_continuum is wrong : by a factor (2160+1.58019) / 2160. I add a pdf illustrating the problem. I put here a minimum program that reproduces the problem :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemRooHistPdf%. Thank you. (Remark : the reason of the apparently strange list of steps is in order to do a much more complex study, which is not the purpose of the problem re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7991
https://github.com/root-project/root/issues/7991:815,energy efficiency,model,models,815,"[RF] RooHistPdf providing a wrong numerical value, root 6.18.00; Hello,. *Two histograms of m_yy are filled with pseudo-data :. -one for signal, filled mainly in the region of 125 GeV (no long tails on purpose, in order to show clearly the problem) (total in the 55 bins=1.58019). -one for the continuum, flat with a value of 40 (total in the 55 bins=2160). *For each of these histograms, a RooDataHist are filled. They will serve to construct the binned pdf. *A RooDataHist is constructed for the total : this is the pseudo-data. *The number or signal and bkg are counted and represent two variables (no fit, just counting what was filled). *From the two RooDataHist, an ""option"" (flag) renormalizes or does not renormalize the RooDataHist. *From these two RooDataHist, [two](url) HistPdf are filled. *Then, three models of pdf are constructed :. a pdf total : n_s * pdf_signal + n_b * pdf_continuum. a pdf signal only : pdf_signal. a pdf continuum only : pdf_continuum. a pdf n_s * pdf_signal : n_s * pdf_signal. a pdf n_continuum * pdf_continuum. Then, the first bin of the pseudo-data is printed : 40 (indeed, there is no signal in this bin). *Then, we compare this to the value of the pdf. -->The two variantes of option (normalize or not renormalize the RooDataHist) give a wrong value for the pdf. Indeed :. *In the case where we don't normalize the RooDataHist,. then the pdf total in this (example of) bin is wrong (by a factor 2160 / (2160+1.58019). *In the case where we do not normalize the RooDataHist,. -then the pdf n_continuum * pdf_continuum is wrong (by a factor 2160). -then the pdf pdf_continuum is wrong : by a factor (2160+1.58019) / 2160. I add a pdf illustrating the problem. I put here a minimum program that reproduces the problem :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemRooHistPdf%. Thank you. (Remark : the reason of the apparently strange list of steps is in order to do a much more complex study, which is not the purpose of the problem re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7991
https://github.com/root-project/root/issues/7991:1789,integrability,pub,public,1789," providing a wrong numerical value, root 6.18.00; Hello,. *Two histograms of m_yy are filled with pseudo-data :. -one for signal, filled mainly in the region of 125 GeV (no long tails on purpose, in order to show clearly the problem) (total in the 55 bins=1.58019). -one for the continuum, flat with a value of 40 (total in the 55 bins=2160). *For each of these histograms, a RooDataHist are filled. They will serve to construct the binned pdf. *A RooDataHist is constructed for the total : this is the pseudo-data. *The number or signal and bkg are counted and represent two variables (no fit, just counting what was filled). *From the two RooDataHist, an ""option"" (flag) renormalizes or does not renormalize the RooDataHist. *From these two RooDataHist, [two](url) HistPdf are filled. *Then, three models of pdf are constructed :. a pdf total : n_s * pdf_signal + n_b * pdf_continuum. a pdf signal only : pdf_signal. a pdf continuum only : pdf_continuum. a pdf n_s * pdf_signal : n_s * pdf_signal. a pdf n_continuum * pdf_continuum. Then, the first bin of the pseudo-data is printed : 40 (indeed, there is no signal in this bin). *Then, we compare this to the value of the pdf. -->The two variantes of option (normalize or not renormalize the RooDataHist) give a wrong value for the pdf. Indeed :. *In the case where we don't normalize the RooDataHist,. then the pdf total in this (example of) bin is wrong (by a factor 2160 / (2160+1.58019). *In the case where we do not normalize the RooDataHist,. -then the pdf n_continuum * pdf_continuum is wrong (by a factor 2160). -then the pdf pdf_continuum is wrong : by a factor (2160+1.58019) / 2160. I add a pdf illustrating the problem. I put here a minimum program that reproduces the problem :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemRooHistPdf%. Thank you. (Remark : the reason of the apparently strange list of steps is in order to do a much more complex study, which is not the purpose of the problem reported here.) .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7991
https://github.com/root-project/root/issues/7991:591,modifiability,variab,variables,591,"[RF] RooHistPdf providing a wrong numerical value, root 6.18.00; Hello,. *Two histograms of m_yy are filled with pseudo-data :. -one for signal, filled mainly in the region of 125 GeV (no long tails on purpose, in order to show clearly the problem) (total in the 55 bins=1.58019). -one for the continuum, flat with a value of 40 (total in the 55 bins=2160). *For each of these histograms, a RooDataHist are filled. They will serve to construct the binned pdf. *A RooDataHist is constructed for the total : this is the pseudo-data. *The number or signal and bkg are counted and represent two variables (no fit, just counting what was filled). *From the two RooDataHist, an ""option"" (flag) renormalizes or does not renormalize the RooDataHist. *From these two RooDataHist, [two](url) HistPdf are filled. *Then, three models of pdf are constructed :. a pdf total : n_s * pdf_signal + n_b * pdf_continuum. a pdf signal only : pdf_signal. a pdf continuum only : pdf_continuum. a pdf n_s * pdf_signal : n_s * pdf_signal. a pdf n_continuum * pdf_continuum. Then, the first bin of the pseudo-data is printed : 40 (indeed, there is no signal in this bin). *Then, we compare this to the value of the pdf. -->The two variantes of option (normalize or not renormalize the RooDataHist) give a wrong value for the pdf. Indeed :. *In the case where we don't normalize the RooDataHist,. then the pdf total in this (example of) bin is wrong (by a factor 2160 / (2160+1.58019). *In the case where we do not normalize the RooDataHist,. -then the pdf n_continuum * pdf_continuum is wrong (by a factor 2160). -then the pdf pdf_continuum is wrong : by a factor (2160+1.58019) / 2160. I add a pdf illustrating the problem. I put here a minimum program that reproduces the problem :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemRooHistPdf%. Thank you. (Remark : the reason of the apparently strange list of steps is in order to do a much more complex study, which is not the purpose of the problem re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7991
https://github.com/root-project/root/issues/7991:704,reliability,doe,does,704,"[RF] RooHistPdf providing a wrong numerical value, root 6.18.00; Hello,. *Two histograms of m_yy are filled with pseudo-data :. -one for signal, filled mainly in the region of 125 GeV (no long tails on purpose, in order to show clearly the problem) (total in the 55 bins=1.58019). -one for the continuum, flat with a value of 40 (total in the 55 bins=2160). *For each of these histograms, a RooDataHist are filled. They will serve to construct the binned pdf. *A RooDataHist is constructed for the total : this is the pseudo-data. *The number or signal and bkg are counted and represent two variables (no fit, just counting what was filled). *From the two RooDataHist, an ""option"" (flag) renormalizes or does not renormalize the RooDataHist. *From these two RooDataHist, [two](url) HistPdf are filled. *Then, three models of pdf are constructed :. a pdf total : n_s * pdf_signal + n_b * pdf_continuum. a pdf signal only : pdf_signal. a pdf continuum only : pdf_continuum. a pdf n_s * pdf_signal : n_s * pdf_signal. a pdf n_continuum * pdf_continuum. Then, the first bin of the pseudo-data is printed : 40 (indeed, there is no signal in this bin). *Then, we compare this to the value of the pdf. -->The two variantes of option (normalize or not renormalize the RooDataHist) give a wrong value for the pdf. Indeed :. *In the case where we don't normalize the RooDataHist,. then the pdf total in this (example of) bin is wrong (by a factor 2160 / (2160+1.58019). *In the case where we do not normalize the RooDataHist,. -then the pdf n_continuum * pdf_continuum is wrong (by a factor 2160). -then the pdf pdf_continuum is wrong : by a factor (2160+1.58019) / 2160. I add a pdf illustrating the problem. I put here a minimum program that reproduces the problem :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemRooHistPdf%. Thank you. (Remark : the reason of the apparently strange list of steps is in order to do a much more complex study, which is not the purpose of the problem re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7991
https://github.com/root-project/root/issues/7991:1943,safety,compl,complex,1943," providing a wrong numerical value, root 6.18.00; Hello,. *Two histograms of m_yy are filled with pseudo-data :. -one for signal, filled mainly in the region of 125 GeV (no long tails on purpose, in order to show clearly the problem) (total in the 55 bins=1.58019). -one for the continuum, flat with a value of 40 (total in the 55 bins=2160). *For each of these histograms, a RooDataHist are filled. They will serve to construct the binned pdf. *A RooDataHist is constructed for the total : this is the pseudo-data. *The number or signal and bkg are counted and represent two variables (no fit, just counting what was filled). *From the two RooDataHist, an ""option"" (flag) renormalizes or does not renormalize the RooDataHist. *From these two RooDataHist, [two](url) HistPdf are filled. *Then, three models of pdf are constructed :. a pdf total : n_s * pdf_signal + n_b * pdf_continuum. a pdf signal only : pdf_signal. a pdf continuum only : pdf_continuum. a pdf n_s * pdf_signal : n_s * pdf_signal. a pdf n_continuum * pdf_continuum. Then, the first bin of the pseudo-data is printed : 40 (indeed, there is no signal in this bin). *Then, we compare this to the value of the pdf. -->The two variantes of option (normalize or not renormalize the RooDataHist) give a wrong value for the pdf. Indeed :. *In the case where we don't normalize the RooDataHist,. then the pdf total in this (example of) bin is wrong (by a factor 2160 / (2160+1.58019). *In the case where we do not normalize the RooDataHist,. -then the pdf n_continuum * pdf_continuum is wrong (by a factor 2160). -then the pdf pdf_continuum is wrong : by a factor (2160+1.58019) / 2160. I add a pdf illustrating the problem. I put here a minimum program that reproduces the problem :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemRooHistPdf%. Thank you. (Remark : the reason of the apparently strange list of steps is in order to do a much more complex study, which is not the purpose of the problem reported here.) .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7991
https://github.com/root-project/root/issues/7991:137,security,sign,signal,137,"[RF] RooHistPdf providing a wrong numerical value, root 6.18.00; Hello,. *Two histograms of m_yy are filled with pseudo-data :. -one for signal, filled mainly in the region of 125 GeV (no long tails on purpose, in order to show clearly the problem) (total in the 55 bins=1.58019). -one for the continuum, flat with a value of 40 (total in the 55 bins=2160). *For each of these histograms, a RooDataHist are filled. They will serve to construct the binned pdf. *A RooDataHist is constructed for the total : this is the pseudo-data. *The number or signal and bkg are counted and represent two variables (no fit, just counting what was filled). *From the two RooDataHist, an ""option"" (flag) renormalizes or does not renormalize the RooDataHist. *From these two RooDataHist, [two](url) HistPdf are filled. *Then, three models of pdf are constructed :. a pdf total : n_s * pdf_signal + n_b * pdf_continuum. a pdf signal only : pdf_signal. a pdf continuum only : pdf_continuum. a pdf n_s * pdf_signal : n_s * pdf_signal. a pdf n_continuum * pdf_continuum. Then, the first bin of the pseudo-data is printed : 40 (indeed, there is no signal in this bin). *Then, we compare this to the value of the pdf. -->The two variantes of option (normalize or not renormalize the RooDataHist) give a wrong value for the pdf. Indeed :. *In the case where we don't normalize the RooDataHist,. then the pdf total in this (example of) bin is wrong (by a factor 2160 / (2160+1.58019). *In the case where we do not normalize the RooDataHist,. -then the pdf n_continuum * pdf_continuum is wrong (by a factor 2160). -then the pdf pdf_continuum is wrong : by a factor (2160+1.58019) / 2160. I add a pdf illustrating the problem. I put here a minimum program that reproduces the problem :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemRooHistPdf%. Thank you. (Remark : the reason of the apparently strange list of steps is in order to do a much more complex study, which is not the purpose of the problem re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7991
https://github.com/root-project/root/issues/7991:546,security,sign,signal,546,"[RF] RooHistPdf providing a wrong numerical value, root 6.18.00; Hello,. *Two histograms of m_yy are filled with pseudo-data :. -one for signal, filled mainly in the region of 125 GeV (no long tails on purpose, in order to show clearly the problem) (total in the 55 bins=1.58019). -one for the continuum, flat with a value of 40 (total in the 55 bins=2160). *For each of these histograms, a RooDataHist are filled. They will serve to construct the binned pdf. *A RooDataHist is constructed for the total : this is the pseudo-data. *The number or signal and bkg are counted and represent two variables (no fit, just counting what was filled). *From the two RooDataHist, an ""option"" (flag) renormalizes or does not renormalize the RooDataHist. *From these two RooDataHist, [two](url) HistPdf are filled. *Then, three models of pdf are constructed :. a pdf total : n_s * pdf_signal + n_b * pdf_continuum. a pdf signal only : pdf_signal. a pdf continuum only : pdf_continuum. a pdf n_s * pdf_signal : n_s * pdf_signal. a pdf n_continuum * pdf_continuum. Then, the first bin of the pseudo-data is printed : 40 (indeed, there is no signal in this bin). *Then, we compare this to the value of the pdf. -->The two variantes of option (normalize or not renormalize the RooDataHist) give a wrong value for the pdf. Indeed :. *In the case where we don't normalize the RooDataHist,. then the pdf total in this (example of) bin is wrong (by a factor 2160 / (2160+1.58019). *In the case where we do not normalize the RooDataHist,. -then the pdf n_continuum * pdf_continuum is wrong (by a factor 2160). -then the pdf pdf_continuum is wrong : by a factor (2160+1.58019) / 2160. I add a pdf illustrating the problem. I put here a minimum program that reproduces the problem :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemRooHistPdf%. Thank you. (Remark : the reason of the apparently strange list of steps is in order to do a much more complex study, which is not the purpose of the problem re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7991
https://github.com/root-project/root/issues/7991:815,security,model,models,815,"[RF] RooHistPdf providing a wrong numerical value, root 6.18.00; Hello,. *Two histograms of m_yy are filled with pseudo-data :. -one for signal, filled mainly in the region of 125 GeV (no long tails on purpose, in order to show clearly the problem) (total in the 55 bins=1.58019). -one for the continuum, flat with a value of 40 (total in the 55 bins=2160). *For each of these histograms, a RooDataHist are filled. They will serve to construct the binned pdf. *A RooDataHist is constructed for the total : this is the pseudo-data. *The number or signal and bkg are counted and represent two variables (no fit, just counting what was filled). *From the two RooDataHist, an ""option"" (flag) renormalizes or does not renormalize the RooDataHist. *From these two RooDataHist, [two](url) HistPdf are filled. *Then, three models of pdf are constructed :. a pdf total : n_s * pdf_signal + n_b * pdf_continuum. a pdf signal only : pdf_signal. a pdf continuum only : pdf_continuum. a pdf n_s * pdf_signal : n_s * pdf_signal. a pdf n_continuum * pdf_continuum. Then, the first bin of the pseudo-data is printed : 40 (indeed, there is no signal in this bin). *Then, we compare this to the value of the pdf. -->The two variantes of option (normalize or not renormalize the RooDataHist) give a wrong value for the pdf. Indeed :. *In the case where we don't normalize the RooDataHist,. then the pdf total in this (example of) bin is wrong (by a factor 2160 / (2160+1.58019). *In the case where we do not normalize the RooDataHist,. -then the pdf n_continuum * pdf_continuum is wrong (by a factor 2160). -then the pdf pdf_continuum is wrong : by a factor (2160+1.58019) / 2160. I add a pdf illustrating the problem. I put here a minimum program that reproduces the problem :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemRooHistPdf%. Thank you. (Remark : the reason of the apparently strange list of steps is in order to do a much more complex study, which is not the purpose of the problem re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7991
https://github.com/root-project/root/issues/7991:908,security,sign,signal,908,"[RF] RooHistPdf providing a wrong numerical value, root 6.18.00; Hello,. *Two histograms of m_yy are filled with pseudo-data :. -one for signal, filled mainly in the region of 125 GeV (no long tails on purpose, in order to show clearly the problem) (total in the 55 bins=1.58019). -one for the continuum, flat with a value of 40 (total in the 55 bins=2160). *For each of these histograms, a RooDataHist are filled. They will serve to construct the binned pdf. *A RooDataHist is constructed for the total : this is the pseudo-data. *The number or signal and bkg are counted and represent two variables (no fit, just counting what was filled). *From the two RooDataHist, an ""option"" (flag) renormalizes or does not renormalize the RooDataHist. *From these two RooDataHist, [two](url) HistPdf are filled. *Then, three models of pdf are constructed :. a pdf total : n_s * pdf_signal + n_b * pdf_continuum. a pdf signal only : pdf_signal. a pdf continuum only : pdf_continuum. a pdf n_s * pdf_signal : n_s * pdf_signal. a pdf n_continuum * pdf_continuum. Then, the first bin of the pseudo-data is printed : 40 (indeed, there is no signal in this bin). *Then, we compare this to the value of the pdf. -->The two variantes of option (normalize or not renormalize the RooDataHist) give a wrong value for the pdf. Indeed :. *In the case where we don't normalize the RooDataHist,. then the pdf total in this (example of) bin is wrong (by a factor 2160 / (2160+1.58019). *In the case where we do not normalize the RooDataHist,. -then the pdf n_continuum * pdf_continuum is wrong (by a factor 2160). -then the pdf pdf_continuum is wrong : by a factor (2160+1.58019) / 2160. I add a pdf illustrating the problem. I put here a minimum program that reproduces the problem :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemRooHistPdf%. Thank you. (Remark : the reason of the apparently strange list of steps is in order to do a much more complex study, which is not the purpose of the problem re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7991
https://github.com/root-project/root/issues/7991:1126,security,sign,signal,1126," providing a wrong numerical value, root 6.18.00; Hello,. *Two histograms of m_yy are filled with pseudo-data :. -one for signal, filled mainly in the region of 125 GeV (no long tails on purpose, in order to show clearly the problem) (total in the 55 bins=1.58019). -one for the continuum, flat with a value of 40 (total in the 55 bins=2160). *For each of these histograms, a RooDataHist are filled. They will serve to construct the binned pdf. *A RooDataHist is constructed for the total : this is the pseudo-data. *The number or signal and bkg are counted and represent two variables (no fit, just counting what was filled). *From the two RooDataHist, an ""option"" (flag) renormalizes or does not renormalize the RooDataHist. *From these two RooDataHist, [two](url) HistPdf are filled. *Then, three models of pdf are constructed :. a pdf total : n_s * pdf_signal + n_b * pdf_continuum. a pdf signal only : pdf_signal. a pdf continuum only : pdf_continuum. a pdf n_s * pdf_signal : n_s * pdf_signal. a pdf n_continuum * pdf_continuum. Then, the first bin of the pseudo-data is printed : 40 (indeed, there is no signal in this bin). *Then, we compare this to the value of the pdf. -->The two variantes of option (normalize or not renormalize the RooDataHist) give a wrong value for the pdf. Indeed :. *In the case where we don't normalize the RooDataHist,. then the pdf total in this (example of) bin is wrong (by a factor 2160 / (2160+1.58019). *In the case where we do not normalize the RooDataHist,. -then the pdf n_continuum * pdf_continuum is wrong (by a factor 2160). -then the pdf pdf_continuum is wrong : by a factor (2160+1.58019) / 2160. I add a pdf illustrating the problem. I put here a minimum program that reproduces the problem :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemRooHistPdf%. Thank you. (Remark : the reason of the apparently strange list of steps is in order to do a much more complex study, which is not the purpose of the problem reported here.) .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7991
https://github.com/root-project/root/issues/7991:1780,security,escal,escalier,1780," providing a wrong numerical value, root 6.18.00; Hello,. *Two histograms of m_yy are filled with pseudo-data :. -one for signal, filled mainly in the region of 125 GeV (no long tails on purpose, in order to show clearly the problem) (total in the 55 bins=1.58019). -one for the continuum, flat with a value of 40 (total in the 55 bins=2160). *For each of these histograms, a RooDataHist are filled. They will serve to construct the binned pdf. *A RooDataHist is constructed for the total : this is the pseudo-data. *The number or signal and bkg are counted and represent two variables (no fit, just counting what was filled). *From the two RooDataHist, an ""option"" (flag) renormalizes or does not renormalize the RooDataHist. *From these two RooDataHist, [two](url) HistPdf are filled. *Then, three models of pdf are constructed :. a pdf total : n_s * pdf_signal + n_b * pdf_continuum. a pdf signal only : pdf_signal. a pdf continuum only : pdf_continuum. a pdf n_s * pdf_signal : n_s * pdf_signal. a pdf n_continuum * pdf_continuum. Then, the first bin of the pseudo-data is printed : 40 (indeed, there is no signal in this bin). *Then, we compare this to the value of the pdf. -->The two variantes of option (normalize or not renormalize the RooDataHist) give a wrong value for the pdf. Indeed :. *In the case where we don't normalize the RooDataHist,. then the pdf total in this (example of) bin is wrong (by a factor 2160 / (2160+1.58019). *In the case where we do not normalize the RooDataHist,. -then the pdf n_continuum * pdf_continuum is wrong (by a factor 2160). -then the pdf pdf_continuum is wrong : by a factor (2160+1.58019) / 2160. I add a pdf illustrating the problem. I put here a minimum program that reproduces the problem :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemRooHistPdf%. Thank you. (Remark : the reason of the apparently strange list of steps is in order to do a much more complex study, which is not the purpose of the problem reported here.) .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7991
https://github.com/root-project/root/issues/7991:1943,security,compl,complex,1943," providing a wrong numerical value, root 6.18.00; Hello,. *Two histograms of m_yy are filled with pseudo-data :. -one for signal, filled mainly in the region of 125 GeV (no long tails on purpose, in order to show clearly the problem) (total in the 55 bins=1.58019). -one for the continuum, flat with a value of 40 (total in the 55 bins=2160). *For each of these histograms, a RooDataHist are filled. They will serve to construct the binned pdf. *A RooDataHist is constructed for the total : this is the pseudo-data. *The number or signal and bkg are counted and represent two variables (no fit, just counting what was filled). *From the two RooDataHist, an ""option"" (flag) renormalizes or does not renormalize the RooDataHist. *From these two RooDataHist, [two](url) HistPdf are filled. *Then, three models of pdf are constructed :. a pdf total : n_s * pdf_signal + n_b * pdf_continuum. a pdf signal only : pdf_signal. a pdf continuum only : pdf_continuum. a pdf n_s * pdf_signal : n_s * pdf_signal. a pdf n_continuum * pdf_continuum. Then, the first bin of the pseudo-data is printed : 40 (indeed, there is no signal in this bin). *Then, we compare this to the value of the pdf. -->The two variantes of option (normalize or not renormalize the RooDataHist) give a wrong value for the pdf. Indeed :. *In the case where we don't normalize the RooDataHist,. then the pdf total in this (example of) bin is wrong (by a factor 2160 / (2160+1.58019). *In the case where we do not normalize the RooDataHist,. -then the pdf n_continuum * pdf_continuum is wrong (by a factor 2160). -then the pdf pdf_continuum is wrong : by a factor (2160+1.58019) / 2160. I add a pdf illustrating the problem. I put here a minimum program that reproduces the problem :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemRooHistPdf%. Thank you. (Remark : the reason of the apparently strange list of steps is in order to do a much more complex study, which is not the purpose of the problem reported here.) .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7991
https://github.com/root-project/root/issues/7991:228,usability,clear,clearly,228,"[RF] RooHistPdf providing a wrong numerical value, root 6.18.00; Hello,. *Two histograms of m_yy are filled with pseudo-data :. -one for signal, filled mainly in the region of 125 GeV (no long tails on purpose, in order to show clearly the problem) (total in the 55 bins=1.58019). -one for the continuum, flat with a value of 40 (total in the 55 bins=2160). *For each of these histograms, a RooDataHist are filled. They will serve to construct the binned pdf. *A RooDataHist is constructed for the total : this is the pseudo-data. *The number or signal and bkg are counted and represent two variables (no fit, just counting what was filled). *From the two RooDataHist, an ""option"" (flag) renormalizes or does not renormalize the RooDataHist. *From these two RooDataHist, [two](url) HistPdf are filled. *Then, three models of pdf are constructed :. a pdf total : n_s * pdf_signal + n_b * pdf_continuum. a pdf signal only : pdf_signal. a pdf continuum only : pdf_continuum. a pdf n_s * pdf_signal : n_s * pdf_signal. a pdf n_continuum * pdf_continuum. Then, the first bin of the pseudo-data is printed : 40 (indeed, there is no signal in this bin). *Then, we compare this to the value of the pdf. -->The two variantes of option (normalize or not renormalize the RooDataHist) give a wrong value for the pdf. Indeed :. *In the case where we don't normalize the RooDataHist,. then the pdf total in this (example of) bin is wrong (by a factor 2160 / (2160+1.58019). *In the case where we do not normalize the RooDataHist,. -then the pdf n_continuum * pdf_continuum is wrong (by a factor 2160). -then the pdf pdf_continuum is wrong : by a factor (2160+1.58019) / 2160. I add a pdf illustrating the problem. I put here a minimum program that reproduces the problem :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemRooHistPdf%. Thank you. (Remark : the reason of the apparently strange list of steps is in order to do a much more complex study, which is not the purpose of the problem re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7991
https://github.com/root-project/root/issues/7991:1713,usability,minim,minimum,1713," providing a wrong numerical value, root 6.18.00; Hello,. *Two histograms of m_yy are filled with pseudo-data :. -one for signal, filled mainly in the region of 125 GeV (no long tails on purpose, in order to show clearly the problem) (total in the 55 bins=1.58019). -one for the continuum, flat with a value of 40 (total in the 55 bins=2160). *For each of these histograms, a RooDataHist are filled. They will serve to construct the binned pdf. *A RooDataHist is constructed for the total : this is the pseudo-data. *The number or signal and bkg are counted and represent two variables (no fit, just counting what was filled). *From the two RooDataHist, an ""option"" (flag) renormalizes or does not renormalize the RooDataHist. *From these two RooDataHist, [two](url) HistPdf are filled. *Then, three models of pdf are constructed :. a pdf total : n_s * pdf_signal + n_b * pdf_continuum. a pdf signal only : pdf_signal. a pdf continuum only : pdf_continuum. a pdf n_s * pdf_signal : n_s * pdf_signal. a pdf n_continuum * pdf_continuum. Then, the first bin of the pseudo-data is printed : 40 (indeed, there is no signal in this bin). *Then, we compare this to the value of the pdf. -->The two variantes of option (normalize or not renormalize the RooDataHist) give a wrong value for the pdf. Indeed :. *In the case where we don't normalize the RooDataHist,. then the pdf total in this (example of) bin is wrong (by a factor 2160 / (2160+1.58019). *In the case where we do not normalize the RooDataHist,. -then the pdf n_continuum * pdf_continuum is wrong (by a factor 2160). -then the pdf pdf_continuum is wrong : by a factor (2160+1.58019) / 2160. I add a pdf illustrating the problem. I put here a minimum program that reproduces the problem :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemRooHistPdf%. Thank you. (Remark : the reason of the apparently strange list of steps is in order to do a much more complex study, which is not the purpose of the problem reported here.) .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7991
https://github.com/root-project/root/pull/7992:283,availability,slo,slow,283,"[meta] TDictionary::GetDictionary() prefer class over typedef: (v6.24); For `std::string`, we have both a TClass and a TDataType (as it is a typedef). We should prefer the TClass (which fixes issue #7169), but not at the cost. of calling `TClass::GetClass()` first: that is just too slow. So instead,. check for ""is it a datatype, not numeric, do we have a TClass?"" which will. still prefer the TClass even if *also* a TDataType exists. Provide documentation!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7992
https://github.com/root-project/root/pull/7992:283,reliability,slo,slow,283,"[meta] TDictionary::GetDictionary() prefer class over typedef: (v6.24); For `std::string`, we have both a TClass and a TDataType (as it is a typedef). We should prefer the TClass (which fixes issue #7169), but not at the cost. of calling `TClass::GetClass()` first: that is just too slow. So instead,. check for ""is it a datatype, not numeric, do we have a TClass?"" which will. still prefer the TClass even if *also* a TDataType exists. Provide documentation!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7992
https://github.com/root-project/root/pull/7992:36,usability,prefer,prefer,36,"[meta] TDictionary::GetDictionary() prefer class over typedef: (v6.24); For `std::string`, we have both a TClass and a TDataType (as it is a typedef). We should prefer the TClass (which fixes issue #7169), but not at the cost. of calling `TClass::GetClass()` first: that is just too slow. So instead,. check for ""is it a datatype, not numeric, do we have a TClass?"" which will. still prefer the TClass even if *also* a TDataType exists. Provide documentation!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7992
https://github.com/root-project/root/pull/7992:161,usability,prefer,prefer,161,"[meta] TDictionary::GetDictionary() prefer class over typedef: (v6.24); For `std::string`, we have both a TClass and a TDataType (as it is a typedef). We should prefer the TClass (which fixes issue #7169), but not at the cost. of calling `TClass::GetClass()` first: that is just too slow. So instead,. check for ""is it a datatype, not numeric, do we have a TClass?"" which will. still prefer the TClass even if *also* a TDataType exists. Provide documentation!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7992
https://github.com/root-project/root/pull/7992:384,usability,prefer,prefer,384,"[meta] TDictionary::GetDictionary() prefer class over typedef: (v6.24); For `std::string`, we have both a TClass and a TDataType (as it is a typedef). We should prefer the TClass (which fixes issue #7169), but not at the cost. of calling `TClass::GetClass()` first: that is just too slow. So instead,. check for ""is it a datatype, not numeric, do we have a TClass?"" which will. still prefer the TClass even if *also* a TDataType exists. Provide documentation!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7992
https://github.com/root-project/root/pull/7992:445,usability,document,documentation,445,"[meta] TDictionary::GetDictionary() prefer class over typedef: (v6.24); For `std::string`, we have both a TClass and a TDataType (as it is a typedef). We should prefer the TClass (which fixes issue #7169), but not at the cost. of calling `TClass::GetClass()` first: that is just too slow. So instead,. check for ""is it a datatype, not numeric, do we have a TClass?"" which will. still prefer the TClass even if *also* a TDataType exists. Provide documentation!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7992
https://github.com/root-project/root/pull/7993:109,safety,reme,remember,109,[Doc][NFC] Add `index.md` for vecops tutorials; The idea is to catch people looking at DF or VecOps/RVec and remember. them of the exhaustive documentation on doxygen. Fixes #7700. Fixes #7701,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7993
https://github.com/root-project/root/pull/7993:142,usability,document,documentation,142,[Doc][NFC] Add `index.md` for vecops tutorials; The idea is to catch people looking at DF or VecOps/RVec and remember. them of the exhaustive documentation on doxygen. Fixes #7700. Fixes #7701,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7993
https://github.com/root-project/root/pull/7994:21,availability,operat,operator,21,"[v618][RF] Use again operator new instead of ObjectAlloc in MemPoolForRooSets; This reverts a change from commit b874ed534f40ad80db3f8a3395d5dd44183811bb from https://github.com/root-project/root/pull/7972. The change was causing crashes in in python code. The problem was that I took the same MemPoolForRooSets code from master also for the old releases, not noticing that the old releases didn't use `TStroage::ObjectAlloc` yet, which caused problems. The problem can be reproduced with the following python code and is fixed with this commit (thanks @lmoneta for having providing the code):. ```Python. import ROOT. x = ROOT.RooRealVar(""x"",""x"",1). d = ROOT.RooDataSet(""d"",""d"",ROOT.RooArgSet(x)). w = ROOT.RooWorkspace(""w""). getattr(w, 'import')(d). w.Print(). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7994
https://github.com/root-project/root/pull/7994:346,deployability,releas,releases,346,"[v618][RF] Use again operator new instead of ObjectAlloc in MemPoolForRooSets; This reverts a change from commit b874ed534f40ad80db3f8a3395d5dd44183811bb from https://github.com/root-project/root/pull/7972. The change was causing crashes in in python code. The problem was that I took the same MemPoolForRooSets code from master also for the old releases, not noticing that the old releases didn't use `TStroage::ObjectAlloc` yet, which caused problems. The problem can be reproduced with the following python code and is fixed with this commit (thanks @lmoneta for having providing the code):. ```Python. import ROOT. x = ROOT.RooRealVar(""x"",""x"",1). d = ROOT.RooDataSet(""d"",""d"",ROOT.RooArgSet(x)). w = ROOT.RooWorkspace(""w""). getattr(w, 'import')(d). w.Print(). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7994
https://github.com/root-project/root/pull/7994:382,deployability,releas,releases,382,"[v618][RF] Use again operator new instead of ObjectAlloc in MemPoolForRooSets; This reverts a change from commit b874ed534f40ad80db3f8a3395d5dd44183811bb from https://github.com/root-project/root/pull/7972. The change was causing crashes in in python code. The problem was that I took the same MemPoolForRooSets code from master also for the old releases, not noticing that the old releases didn't use `TStroage::ObjectAlloc` yet, which caused problems. The problem can be reproduced with the following python code and is fixed with this commit (thanks @lmoneta for having providing the code):. ```Python. import ROOT. x = ROOT.RooRealVar(""x"",""x"",1). d = ROOT.RooDataSet(""d"",""d"",ROOT.RooArgSet(x)). w = ROOT.RooWorkspace(""w""). getattr(w, 'import')(d). w.Print(). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7994
https://github.com/root-project/root/pull/7995:21,availability,operat,operator,21,"[v620][RF] Use again operator new instead of ObjectAlloc in MemPoolForRooSets; This reverts a change from commit 64f299ce3c08501d3ba42e164ad6e40c151bb25b from https://github.com/root-project/root/pull/7973. The change was causing crashes in in python code. This PR is analogous to https://github.com/root-project/root/pull/7994. Even thought crashes were not observed in 6.20, I think it's better to also not use `TStorage:: ObjectAlloc` in 6.20 because it has not been used before either. In addition, the following [warnings](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-20-00-patches/LABEL=ROOT-centos7,SPEC=noimt,V=6-20/178/parsed_console/) that appeared in the nightly builds should be fixed by this commit:. `warning: missing initializer for member ‘std::array<int, 6000ul>::_M_elems’ [-Wmissing-field-initializers]`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7995
https://github.com/root-project/root/pull/7995:543,availability,servic,services,543,"[v620][RF] Use again operator new instead of ObjectAlloc in MemPoolForRooSets; This reverts a change from commit 64f299ce3c08501d3ba42e164ad6e40c151bb25b from https://github.com/root-project/root/pull/7973. The change was causing crashes in in python code. This PR is analogous to https://github.com/root-project/root/pull/7994. Even thought crashes were not observed in 6.20, I think it's better to also not use `TStorage:: ObjectAlloc` in 6.20 because it has not been used before either. In addition, the following [warnings](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-20-00-patches/LABEL=ROOT-centos7,SPEC=noimt,V=6-20/178/parsed_console/) that appeared in the nightly builds should be fixed by this commit:. `warning: missing initializer for member ‘std::array<int, 6000ul>::_M_elems’ [-Wmissing-field-initializers]`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7995
https://github.com/root-project/root/pull/7995:359,deployability,observ,observed,359,"[v620][RF] Use again operator new instead of ObjectAlloc in MemPoolForRooSets; This reverts a change from commit 64f299ce3c08501d3ba42e164ad6e40c151bb25b from https://github.com/root-project/root/pull/7973. The change was causing crashes in in python code. This PR is analogous to https://github.com/root-project/root/pull/7994. Even thought crashes were not observed in 6.20, I think it's better to also not use `TStorage:: ObjectAlloc` in 6.20 because it has not been used before either. In addition, the following [warnings](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-20-00-patches/LABEL=ROOT-centos7,SPEC=noimt,V=6-20/178/parsed_console/) that appeared in the nightly builds should be fixed by this commit:. `warning: missing initializer for member ‘std::array<int, 6000ul>::_M_elems’ [-Wmissing-field-initializers]`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7995
https://github.com/root-project/root/pull/7995:543,deployability,servic,services,543,"[v620][RF] Use again operator new instead of ObjectAlloc in MemPoolForRooSets; This reverts a change from commit 64f299ce3c08501d3ba42e164ad6e40c151bb25b from https://github.com/root-project/root/pull/7973. The change was causing crashes in in python code. This PR is analogous to https://github.com/root-project/root/pull/7994. Even thought crashes were not observed in 6.20, I think it's better to also not use `TStorage:: ObjectAlloc` in 6.20 because it has not been used before either. In addition, the following [warnings](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-20-00-patches/LABEL=ROOT-centos7,SPEC=noimt,V=6-20/178/parsed_console/) that appeared in the nightly builds should be fixed by this commit:. `warning: missing initializer for member ‘std::array<int, 6000ul>::_M_elems’ [-Wmissing-field-initializers]`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7995
https://github.com/root-project/root/pull/7995:619,deployability,patch,patches,619,"[v620][RF] Use again operator new instead of ObjectAlloc in MemPoolForRooSets; This reverts a change from commit 64f299ce3c08501d3ba42e164ad6e40c151bb25b from https://github.com/root-project/root/pull/7973. The change was causing crashes in in python code. This PR is analogous to https://github.com/root-project/root/pull/7994. Even thought crashes were not observed in 6.20, I think it's better to also not use `TStorage:: ObjectAlloc` in 6.20 because it has not been used before either. In addition, the following [warnings](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-20-00-patches/LABEL=ROOT-centos7,SPEC=noimt,V=6-20/178/parsed_console/) that appeared in the nightly builds should be fixed by this commit:. `warning: missing initializer for member ‘std::array<int, 6000ul>::_M_elems’ [-Wmissing-field-initializers]`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7995
https://github.com/root-project/root/pull/7995:714,deployability,build,builds,714,"[v620][RF] Use again operator new instead of ObjectAlloc in MemPoolForRooSets; This reverts a change from commit 64f299ce3c08501d3ba42e164ad6e40c151bb25b from https://github.com/root-project/root/pull/7973. The change was causing crashes in in python code. This PR is analogous to https://github.com/root-project/root/pull/7994. Even thought crashes were not observed in 6.20, I think it's better to also not use `TStorage:: ObjectAlloc` in 6.20 because it has not been used before either. In addition, the following [warnings](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-20-00-patches/LABEL=ROOT-centos7,SPEC=noimt,V=6-20/178/parsed_console/) that appeared in the nightly builds should be fixed by this commit:. `warning: missing initializer for member ‘std::array<int, 6000ul>::_M_elems’ [-Wmissing-field-initializers]`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7995
https://github.com/root-project/root/pull/7995:543,integrability,servic,services,543,"[v620][RF] Use again operator new instead of ObjectAlloc in MemPoolForRooSets; This reverts a change from commit 64f299ce3c08501d3ba42e164ad6e40c151bb25b from https://github.com/root-project/root/pull/7973. The change was causing crashes in in python code. This PR is analogous to https://github.com/root-project/root/pull/7994. Even thought crashes were not observed in 6.20, I think it's better to also not use `TStorage:: ObjectAlloc` in 6.20 because it has not been used before either. In addition, the following [warnings](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-20-00-patches/LABEL=ROOT-centos7,SPEC=noimt,V=6-20/178/parsed_console/) that appeared in the nightly builds should be fixed by this commit:. `warning: missing initializer for member ‘std::array<int, 6000ul>::_M_elems’ [-Wmissing-field-initializers]`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7995
https://github.com/root-project/root/pull/7995:543,modifiability,servic,services,543,"[v620][RF] Use again operator new instead of ObjectAlloc in MemPoolForRooSets; This reverts a change from commit 64f299ce3c08501d3ba42e164ad6e40c151bb25b from https://github.com/root-project/root/pull/7973. The change was causing crashes in in python code. This PR is analogous to https://github.com/root-project/root/pull/7994. Even thought crashes were not observed in 6.20, I think it's better to also not use `TStorage:: ObjectAlloc` in 6.20 because it has not been used before either. In addition, the following [warnings](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-20-00-patches/LABEL=ROOT-centos7,SPEC=noimt,V=6-20/178/parsed_console/) that appeared in the nightly builds should be fixed by this commit:. `warning: missing initializer for member ‘std::array<int, 6000ul>::_M_elems’ [-Wmissing-field-initializers]`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7995
https://github.com/root-project/root/pull/7995:619,safety,patch,patches,619,"[v620][RF] Use again operator new instead of ObjectAlloc in MemPoolForRooSets; This reverts a change from commit 64f299ce3c08501d3ba42e164ad6e40c151bb25b from https://github.com/root-project/root/pull/7973. The change was causing crashes in in python code. This PR is analogous to https://github.com/root-project/root/pull/7994. Even thought crashes were not observed in 6.20, I think it's better to also not use `TStorage:: ObjectAlloc` in 6.20 because it has not been used before either. In addition, the following [warnings](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-20-00-patches/LABEL=ROOT-centos7,SPEC=noimt,V=6-20/178/parsed_console/) that appeared in the nightly builds should be fixed by this commit:. `warning: missing initializer for member ‘std::array<int, 6000ul>::_M_elems’ [-Wmissing-field-initializers]`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7995
https://github.com/root-project/root/pull/7995:619,security,patch,patches,619,"[v620][RF] Use again operator new instead of ObjectAlloc in MemPoolForRooSets; This reverts a change from commit 64f299ce3c08501d3ba42e164ad6e40c151bb25b from https://github.com/root-project/root/pull/7973. The change was causing crashes in in python code. This PR is analogous to https://github.com/root-project/root/pull/7994. Even thought crashes were not observed in 6.20, I think it's better to also not use `TStorage:: ObjectAlloc` in 6.20 because it has not been used before either. In addition, the following [warnings](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-20-00-patches/LABEL=ROOT-centos7,SPEC=noimt,V=6-20/178/parsed_console/) that appeared in the nightly builds should be fixed by this commit:. `warning: missing initializer for member ‘std::array<int, 6000ul>::_M_elems’ [-Wmissing-field-initializers]`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7995
https://github.com/root-project/root/pull/7995:359,testability,observ,observed,359,"[v620][RF] Use again operator new instead of ObjectAlloc in MemPoolForRooSets; This reverts a change from commit 64f299ce3c08501d3ba42e164ad6e40c151bb25b from https://github.com/root-project/root/pull/7973. The change was causing crashes in in python code. This PR is analogous to https://github.com/root-project/root/pull/7994. Even thought crashes were not observed in 6.20, I think it's better to also not use `TStorage:: ObjectAlloc` in 6.20 because it has not been used before either. In addition, the following [warnings](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-20-00-patches/LABEL=ROOT-centos7,SPEC=noimt,V=6-20/178/parsed_console/) that appeared in the nightly builds should be fixed by this commit:. `warning: missing initializer for member ‘std::array<int, 6000ul>::_M_elems’ [-Wmissing-field-initializers]`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7995
https://github.com/root-project/root/issues/7996:109,usability,document,documentation,109,"TColor doc html tag issues ""a name""; ### Describe the bug. TColor shows several HTML rendering issues in the documentation:. https://root.cern.ch/doc/master/classTColor.html. ![image](https://user-images.githubusercontent.com/10653970/116068598-68c4e880-a658-11eb-8089-4c28efa0ca9c.png). ### Expected behavior. no HTML tags are visible. ### To Reproduce. 1. Enter https://root.cern.ch/doc/master/classTColor.html. 2. Search for ""<a name""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7996
https://github.com/root-project/root/issues/7996:192,usability,user,user-images,192,"TColor doc html tag issues ""a name""; ### Describe the bug. TColor shows several HTML rendering issues in the documentation:. https://root.cern.ch/doc/master/classTColor.html. ![image](https://user-images.githubusercontent.com/10653970/116068598-68c4e880-a658-11eb-8089-4c28efa0ca9c.png). ### Expected behavior. no HTML tags are visible. ### To Reproduce. 1. Enter https://root.cern.ch/doc/master/classTColor.html. 2. Search for ""<a name""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7996
https://github.com/root-project/root/issues/7996:301,usability,behavi,behavior,301,"TColor doc html tag issues ""a name""; ### Describe the bug. TColor shows several HTML rendering issues in the documentation:. https://root.cern.ch/doc/master/classTColor.html. ![image](https://user-images.githubusercontent.com/10653970/116068598-68c4e880-a658-11eb-8089-4c28efa0ca9c.png). ### Expected behavior. no HTML tags are visible. ### To Reproduce. 1. Enter https://root.cern.ch/doc/master/classTColor.html. 2. Search for ""<a name""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7996
https://github.com/root-project/root/pull/7997:5,usability,Document,Documentation,5,[RF] Documentation and usability improvements; A few improvements that I implemented when helping out a user.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7997
https://github.com/root-project/root/pull/7997:23,usability,usab,usability,23,[RF] Documentation and usability improvements; A few improvements that I implemented when helping out a user.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7997
https://github.com/root-project/root/pull/7997:90,usability,help,helping,90,[RF] Documentation and usability improvements; A few improvements that I implemented when helping out a user.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7997
https://github.com/root-project/root/pull/7997:104,usability,user,user,104,[RF] Documentation and usability improvements; A few improvements that I implemented when helping out a user.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7997
https://github.com/root-project/root/issues/8000:426,availability,operat,operated,426,"[RF] RooAddPdf fails if pdfs have the same name; - [V] Checked for duplicates. ### Describe the bug. RooAddPdf, if initialized with pdfs with the same name, is evaluated wrongly. It interprets all pdfs with the same name as the first of them (function and parameters are the same for all pdfs, while the coefficient is the proper one, as should be if that pdf was the corresponding pdf). ### Expected behavior. - pdfs must be operated as different C++ objects/pointers, not based on name. Otherwise. - pdfs with the same name must be forbidden. RooAddPdf must fail to initialize if some pdfs have the same name. RooAddPdf class description should specify that pdfs with the same name are not allowed. ### To Reproduce. I make a 3-dimensional parametric fit of the detector. I model its parts as cylinders, and there are many of them, so I simply copied some common initialization code. The reused pdfs were not simply summed in RooAddPdf, but they were inside RooProdPdf-s (those had distinct names). Pdfs were different C++ objects and had different parameters. For different types of pdfs all converged well, but when I used 2 same pdfs (with the same name, but in absolutely different regions), the fit did not converge, and the plot was wrong. When I plotted (separate pdf or with RooFit::Component of the total sum), it showed that one pdf got parameters of another pdf (even though it was outside its allowed range), though its normalization was as it should probably be. The total sum (the pdf I fitted) was also plotted wrongly. I used RooAddPdf [constructor with RooArgList PdfList and RooArgList CoefList](https://root.cern.ch/doc/master/classRooAddPdf.html#acafcca576f7839c046bea7c9edf31c22), if that is important. I think the easiest would be to create a new example from scratch. I can copy some code here if needed. ### Setup. 1. ROOT version 6.22/06. 2. Arch Linux. 3. Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8000
https://github.com/root-project/root/issues/8000:15,deployability,fail,fails,15,"[RF] RooAddPdf fails if pdfs have the same name; - [V] Checked for duplicates. ### Describe the bug. RooAddPdf, if initialized with pdfs with the same name, is evaluated wrongly. It interprets all pdfs with the same name as the first of them (function and parameters are the same for all pdfs, while the coefficient is the proper one, as should be if that pdf was the corresponding pdf). ### Expected behavior. - pdfs must be operated as different C++ objects/pointers, not based on name. Otherwise. - pdfs with the same name must be forbidden. RooAddPdf must fail to initialize if some pdfs have the same name. RooAddPdf class description should specify that pdfs with the same name are not allowed. ### To Reproduce. I make a 3-dimensional parametric fit of the detector. I model its parts as cylinders, and there are many of them, so I simply copied some common initialization code. The reused pdfs were not simply summed in RooAddPdf, but they were inside RooProdPdf-s (those had distinct names). Pdfs were different C++ objects and had different parameters. For different types of pdfs all converged well, but when I used 2 same pdfs (with the same name, but in absolutely different regions), the fit did not converge, and the plot was wrong. When I plotted (separate pdf or with RooFit::Component of the total sum), it showed that one pdf got parameters of another pdf (even though it was outside its allowed range), though its normalization was as it should probably be. The total sum (the pdf I fitted) was also plotted wrongly. I used RooAddPdf [constructor with RooArgList PdfList and RooArgList CoefList](https://root.cern.ch/doc/master/classRooAddPdf.html#acafcca576f7839c046bea7c9edf31c22), if that is important. I think the easiest would be to create a new example from scratch. I can copy some code here if needed. ### Setup. 1. ROOT version 6.22/06. 2. Arch Linux. 3. Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8000
https://github.com/root-project/root/issues/8000:560,deployability,fail,fail,560,"[RF] RooAddPdf fails if pdfs have the same name; - [V] Checked for duplicates. ### Describe the bug. RooAddPdf, if initialized with pdfs with the same name, is evaluated wrongly. It interprets all pdfs with the same name as the first of them (function and parameters are the same for all pdfs, while the coefficient is the proper one, as should be if that pdf was the corresponding pdf). ### Expected behavior. - pdfs must be operated as different C++ objects/pointers, not based on name. Otherwise. - pdfs with the same name must be forbidden. RooAddPdf must fail to initialize if some pdfs have the same name. RooAddPdf class description should specify that pdfs with the same name are not allowed. ### To Reproduce. I make a 3-dimensional parametric fit of the detector. I model its parts as cylinders, and there are many of them, so I simply copied some common initialization code. The reused pdfs were not simply summed in RooAddPdf, but they were inside RooProdPdf-s (those had distinct names). Pdfs were different C++ objects and had different parameters. For different types of pdfs all converged well, but when I used 2 same pdfs (with the same name, but in absolutely different regions), the fit did not converge, and the plot was wrong. When I plotted (separate pdf or with RooFit::Component of the total sum), it showed that one pdf got parameters of another pdf (even though it was outside its allowed range), though its normalization was as it should probably be. The total sum (the pdf I fitted) was also plotted wrongly. I used RooAddPdf [constructor with RooArgList PdfList and RooArgList CoefList](https://root.cern.ch/doc/master/classRooAddPdf.html#acafcca576f7839c046bea7c9edf31c22), if that is important. I think the easiest would be to create a new example from scratch. I can copy some code here if needed. ### Setup. 1. ROOT version 6.22/06. 2. Arch Linux. 3. Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8000
https://github.com/root-project/root/issues/8000:1849,deployability,version,version,1849,"[RF] RooAddPdf fails if pdfs have the same name; - [V] Checked for duplicates. ### Describe the bug. RooAddPdf, if initialized with pdfs with the same name, is evaluated wrongly. It interprets all pdfs with the same name as the first of them (function and parameters are the same for all pdfs, while the coefficient is the proper one, as should be if that pdf was the corresponding pdf). ### Expected behavior. - pdfs must be operated as different C++ objects/pointers, not based on name. Otherwise. - pdfs with the same name must be forbidden. RooAddPdf must fail to initialize if some pdfs have the same name. RooAddPdf class description should specify that pdfs with the same name are not allowed. ### To Reproduce. I make a 3-dimensional parametric fit of the detector. I model its parts as cylinders, and there are many of them, so I simply copied some common initialization code. The reused pdfs were not simply summed in RooAddPdf, but they were inside RooProdPdf-s (those had distinct names). Pdfs were different C++ objects and had different parameters. For different types of pdfs all converged well, but when I used 2 same pdfs (with the same name, but in absolutely different regions), the fit did not converge, and the plot was wrong. When I plotted (separate pdf or with RooFit::Component of the total sum), it showed that one pdf got parameters of another pdf (even though it was outside its allowed range), though its normalization was as it should probably be. The total sum (the pdf I fitted) was also plotted wrongly. I used RooAddPdf [constructor with RooArgList PdfList and RooArgList CoefList](https://root.cern.ch/doc/master/classRooAddPdf.html#acafcca576f7839c046bea7c9edf31c22), if that is important. I think the easiest would be to create a new example from scratch. I can copy some code here if needed. ### Setup. 1. ROOT version 6.22/06. 2. Arch Linux. 3. Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8000
https://github.com/root-project/root/issues/8000:776,energy efficiency,model,model,776,"[RF] RooAddPdf fails if pdfs have the same name; - [V] Checked for duplicates. ### Describe the bug. RooAddPdf, if initialized with pdfs with the same name, is evaluated wrongly. It interprets all pdfs with the same name as the first of them (function and parameters are the same for all pdfs, while the coefficient is the proper one, as should be if that pdf was the corresponding pdf). ### Expected behavior. - pdfs must be operated as different C++ objects/pointers, not based on name. Otherwise. - pdfs with the same name must be forbidden. RooAddPdf must fail to initialize if some pdfs have the same name. RooAddPdf class description should specify that pdfs with the same name are not allowed. ### To Reproduce. I make a 3-dimensional parametric fit of the detector. I model its parts as cylinders, and there are many of them, so I simply copied some common initialization code. The reused pdfs were not simply summed in RooAddPdf, but they were inside RooProdPdf-s (those had distinct names). Pdfs were different C++ objects and had different parameters. For different types of pdfs all converged well, but when I used 2 same pdfs (with the same name, but in absolutely different regions), the fit did not converge, and the plot was wrong. When I plotted (separate pdf or with RooFit::Component of the total sum), it showed that one pdf got parameters of another pdf (even though it was outside its allowed range), though its normalization was as it should probably be. The total sum (the pdf I fitted) was also plotted wrongly. I used RooAddPdf [constructor with RooArgList PdfList and RooArgList CoefList](https://root.cern.ch/doc/master/classRooAddPdf.html#acafcca576f7839c046bea7c9edf31c22), if that is important. I think the easiest would be to create a new example from scratch. I can copy some code here if needed. ### Setup. 1. ROOT version 6.22/06. 2. Arch Linux. 3. Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8000
https://github.com/root-project/root/issues/8000:1293,integrability,Compon,Component,1293,"[RF] RooAddPdf fails if pdfs have the same name; - [V] Checked for duplicates. ### Describe the bug. RooAddPdf, if initialized with pdfs with the same name, is evaluated wrongly. It interprets all pdfs with the same name as the first of them (function and parameters are the same for all pdfs, while the coefficient is the proper one, as should be if that pdf was the corresponding pdf). ### Expected behavior. - pdfs must be operated as different C++ objects/pointers, not based on name. Otherwise. - pdfs with the same name must be forbidden. RooAddPdf must fail to initialize if some pdfs have the same name. RooAddPdf class description should specify that pdfs with the same name are not allowed. ### To Reproduce. I make a 3-dimensional parametric fit of the detector. I model its parts as cylinders, and there are many of them, so I simply copied some common initialization code. The reused pdfs were not simply summed in RooAddPdf, but they were inside RooProdPdf-s (those had distinct names). Pdfs were different C++ objects and had different parameters. For different types of pdfs all converged well, but when I used 2 same pdfs (with the same name, but in absolutely different regions), the fit did not converge, and the plot was wrong. When I plotted (separate pdf or with RooFit::Component of the total sum), it showed that one pdf got parameters of another pdf (even though it was outside its allowed range), though its normalization was as it should probably be. The total sum (the pdf I fitted) was also plotted wrongly. I used RooAddPdf [constructor with RooArgList PdfList and RooArgList CoefList](https://root.cern.ch/doc/master/classRooAddPdf.html#acafcca576f7839c046bea7c9edf31c22), if that is important. I think the easiest would be to create a new example from scratch. I can copy some code here if needed. ### Setup. 1. ROOT version 6.22/06. 2. Arch Linux. 3. Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8000
https://github.com/root-project/root/issues/8000:1849,integrability,version,version,1849,"[RF] RooAddPdf fails if pdfs have the same name; - [V] Checked for duplicates. ### Describe the bug. RooAddPdf, if initialized with pdfs with the same name, is evaluated wrongly. It interprets all pdfs with the same name as the first of them (function and parameters are the same for all pdfs, while the coefficient is the proper one, as should be if that pdf was the corresponding pdf). ### Expected behavior. - pdfs must be operated as different C++ objects/pointers, not based on name. Otherwise. - pdfs with the same name must be forbidden. RooAddPdf must fail to initialize if some pdfs have the same name. RooAddPdf class description should specify that pdfs with the same name are not allowed. ### To Reproduce. I make a 3-dimensional parametric fit of the detector. I model its parts as cylinders, and there are many of them, so I simply copied some common initialization code. The reused pdfs were not simply summed in RooAddPdf, but they were inside RooProdPdf-s (those had distinct names). Pdfs were different C++ objects and had different parameters. For different types of pdfs all converged well, but when I used 2 same pdfs (with the same name, but in absolutely different regions), the fit did not converge, and the plot was wrong. When I plotted (separate pdf or with RooFit::Component of the total sum), it showed that one pdf got parameters of another pdf (even though it was outside its allowed range), though its normalization was as it should probably be. The total sum (the pdf I fitted) was also plotted wrongly. I used RooAddPdf [constructor with RooArgList PdfList and RooArgList CoefList](https://root.cern.ch/doc/master/classRooAddPdf.html#acafcca576f7839c046bea7c9edf31c22), if that is important. I think the easiest would be to create a new example from scratch. I can copy some code here if needed. ### Setup. 1. ROOT version 6.22/06. 2. Arch Linux. 3. Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8000
https://github.com/root-project/root/issues/8000:647,interoperability,specif,specify,647,"[RF] RooAddPdf fails if pdfs have the same name; - [V] Checked for duplicates. ### Describe the bug. RooAddPdf, if initialized with pdfs with the same name, is evaluated wrongly. It interprets all pdfs with the same name as the first of them (function and parameters are the same for all pdfs, while the coefficient is the proper one, as should be if that pdf was the corresponding pdf). ### Expected behavior. - pdfs must be operated as different C++ objects/pointers, not based on name. Otherwise. - pdfs with the same name must be forbidden. RooAddPdf must fail to initialize if some pdfs have the same name. RooAddPdf class description should specify that pdfs with the same name are not allowed. ### To Reproduce. I make a 3-dimensional parametric fit of the detector. I model its parts as cylinders, and there are many of them, so I simply copied some common initialization code. The reused pdfs were not simply summed in RooAddPdf, but they were inside RooProdPdf-s (those had distinct names). Pdfs were different C++ objects and had different parameters. For different types of pdfs all converged well, but when I used 2 same pdfs (with the same name, but in absolutely different regions), the fit did not converge, and the plot was wrong. When I plotted (separate pdf or with RooFit::Component of the total sum), it showed that one pdf got parameters of another pdf (even though it was outside its allowed range), though its normalization was as it should probably be. The total sum (the pdf I fitted) was also plotted wrongly. I used RooAddPdf [constructor with RooArgList PdfList and RooArgList CoefList](https://root.cern.ch/doc/master/classRooAddPdf.html#acafcca576f7839c046bea7c9edf31c22), if that is important. I think the easiest would be to create a new example from scratch. I can copy some code here if needed. ### Setup. 1. ROOT version 6.22/06. 2. Arch Linux. 3. Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8000
https://github.com/root-project/root/issues/8000:1293,interoperability,Compon,Component,1293,"[RF] RooAddPdf fails if pdfs have the same name; - [V] Checked for duplicates. ### Describe the bug. RooAddPdf, if initialized with pdfs with the same name, is evaluated wrongly. It interprets all pdfs with the same name as the first of them (function and parameters are the same for all pdfs, while the coefficient is the proper one, as should be if that pdf was the corresponding pdf). ### Expected behavior. - pdfs must be operated as different C++ objects/pointers, not based on name. Otherwise. - pdfs with the same name must be forbidden. RooAddPdf must fail to initialize if some pdfs have the same name. RooAddPdf class description should specify that pdfs with the same name are not allowed. ### To Reproduce. I make a 3-dimensional parametric fit of the detector. I model its parts as cylinders, and there are many of them, so I simply copied some common initialization code. The reused pdfs were not simply summed in RooAddPdf, but they were inside RooProdPdf-s (those had distinct names). Pdfs were different C++ objects and had different parameters. For different types of pdfs all converged well, but when I used 2 same pdfs (with the same name, but in absolutely different regions), the fit did not converge, and the plot was wrong. When I plotted (separate pdf or with RooFit::Component of the total sum), it showed that one pdf got parameters of another pdf (even though it was outside its allowed range), though its normalization was as it should probably be. The total sum (the pdf I fitted) was also plotted wrongly. I used RooAddPdf [constructor with RooArgList PdfList and RooArgList CoefList](https://root.cern.ch/doc/master/classRooAddPdf.html#acafcca576f7839c046bea7c9edf31c22), if that is important. I think the easiest would be to create a new example from scratch. I can copy some code here if needed. ### Setup. 1. ROOT version 6.22/06. 2. Arch Linux. 3. Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8000
https://github.com/root-project/root/issues/8000:256,modifiability,paramet,parameters,256,"[RF] RooAddPdf fails if pdfs have the same name; - [V] Checked for duplicates. ### Describe the bug. RooAddPdf, if initialized with pdfs with the same name, is evaluated wrongly. It interprets all pdfs with the same name as the first of them (function and parameters are the same for all pdfs, while the coefficient is the proper one, as should be if that pdf was the corresponding pdf). ### Expected behavior. - pdfs must be operated as different C++ objects/pointers, not based on name. Otherwise. - pdfs with the same name must be forbidden. RooAddPdf must fail to initialize if some pdfs have the same name. RooAddPdf class description should specify that pdfs with the same name are not allowed. ### To Reproduce. I make a 3-dimensional parametric fit of the detector. I model its parts as cylinders, and there are many of them, so I simply copied some common initialization code. The reused pdfs were not simply summed in RooAddPdf, but they were inside RooProdPdf-s (those had distinct names). Pdfs were different C++ objects and had different parameters. For different types of pdfs all converged well, but when I used 2 same pdfs (with the same name, but in absolutely different regions), the fit did not converge, and the plot was wrong. When I plotted (separate pdf or with RooFit::Component of the total sum), it showed that one pdf got parameters of another pdf (even though it was outside its allowed range), though its normalization was as it should probably be. The total sum (the pdf I fitted) was also plotted wrongly. I used RooAddPdf [constructor with RooArgList PdfList and RooArgList CoefList](https://root.cern.ch/doc/master/classRooAddPdf.html#acafcca576f7839c046bea7c9edf31c22), if that is important. I think the easiest would be to create a new example from scratch. I can copy some code here if needed. ### Setup. 1. ROOT version 6.22/06. 2. Arch Linux. 3. Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8000
https://github.com/root-project/root/issues/8000:742,modifiability,paramet,parametric,742,"[RF] RooAddPdf fails if pdfs have the same name; - [V] Checked for duplicates. ### Describe the bug. RooAddPdf, if initialized with pdfs with the same name, is evaluated wrongly. It interprets all pdfs with the same name as the first of them (function and parameters are the same for all pdfs, while the coefficient is the proper one, as should be if that pdf was the corresponding pdf). ### Expected behavior. - pdfs must be operated as different C++ objects/pointers, not based on name. Otherwise. - pdfs with the same name must be forbidden. RooAddPdf must fail to initialize if some pdfs have the same name. RooAddPdf class description should specify that pdfs with the same name are not allowed. ### To Reproduce. I make a 3-dimensional parametric fit of the detector. I model its parts as cylinders, and there are many of them, so I simply copied some common initialization code. The reused pdfs were not simply summed in RooAddPdf, but they were inside RooProdPdf-s (those had distinct names). Pdfs were different C++ objects and had different parameters. For different types of pdfs all converged well, but when I used 2 same pdfs (with the same name, but in absolutely different regions), the fit did not converge, and the plot was wrong. When I plotted (separate pdf or with RooFit::Component of the total sum), it showed that one pdf got parameters of another pdf (even though it was outside its allowed range), though its normalization was as it should probably be. The total sum (the pdf I fitted) was also plotted wrongly. I used RooAddPdf [constructor with RooArgList PdfList and RooArgList CoefList](https://root.cern.ch/doc/master/classRooAddPdf.html#acafcca576f7839c046bea7c9edf31c22), if that is important. I think the easiest would be to create a new example from scratch. I can copy some code here if needed. ### Setup. 1. ROOT version 6.22/06. 2. Arch Linux. 3. Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8000
https://github.com/root-project/root/issues/8000:890,modifiability,reu,reused,890,"[RF] RooAddPdf fails if pdfs have the same name; - [V] Checked for duplicates. ### Describe the bug. RooAddPdf, if initialized with pdfs with the same name, is evaluated wrongly. It interprets all pdfs with the same name as the first of them (function and parameters are the same for all pdfs, while the coefficient is the proper one, as should be if that pdf was the corresponding pdf). ### Expected behavior. - pdfs must be operated as different C++ objects/pointers, not based on name. Otherwise. - pdfs with the same name must be forbidden. RooAddPdf must fail to initialize if some pdfs have the same name. RooAddPdf class description should specify that pdfs with the same name are not allowed. ### To Reproduce. I make a 3-dimensional parametric fit of the detector. I model its parts as cylinders, and there are many of them, so I simply copied some common initialization code. The reused pdfs were not simply summed in RooAddPdf, but they were inside RooProdPdf-s (those had distinct names). Pdfs were different C++ objects and had different parameters. For different types of pdfs all converged well, but when I used 2 same pdfs (with the same name, but in absolutely different regions), the fit did not converge, and the plot was wrong. When I plotted (separate pdf or with RooFit::Component of the total sum), it showed that one pdf got parameters of another pdf (even though it was outside its allowed range), though its normalization was as it should probably be. The total sum (the pdf I fitted) was also plotted wrongly. I used RooAddPdf [constructor with RooArgList PdfList and RooArgList CoefList](https://root.cern.ch/doc/master/classRooAddPdf.html#acafcca576f7839c046bea7c9edf31c22), if that is important. I think the easiest would be to create a new example from scratch. I can copy some code here if needed. ### Setup. 1. ROOT version 6.22/06. 2. Arch Linux. 3. Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8000
https://github.com/root-project/root/issues/8000:1051,modifiability,paramet,parameters,1051,"[RF] RooAddPdf fails if pdfs have the same name; - [V] Checked for duplicates. ### Describe the bug. RooAddPdf, if initialized with pdfs with the same name, is evaluated wrongly. It interprets all pdfs with the same name as the first of them (function and parameters are the same for all pdfs, while the coefficient is the proper one, as should be if that pdf was the corresponding pdf). ### Expected behavior. - pdfs must be operated as different C++ objects/pointers, not based on name. Otherwise. - pdfs with the same name must be forbidden. RooAddPdf must fail to initialize if some pdfs have the same name. RooAddPdf class description should specify that pdfs with the same name are not allowed. ### To Reproduce. I make a 3-dimensional parametric fit of the detector. I model its parts as cylinders, and there are many of them, so I simply copied some common initialization code. The reused pdfs were not simply summed in RooAddPdf, but they were inside RooProdPdf-s (those had distinct names). Pdfs were different C++ objects and had different parameters. For different types of pdfs all converged well, but when I used 2 same pdfs (with the same name, but in absolutely different regions), the fit did not converge, and the plot was wrong. When I plotted (separate pdf or with RooFit::Component of the total sum), it showed that one pdf got parameters of another pdf (even though it was outside its allowed range), though its normalization was as it should probably be. The total sum (the pdf I fitted) was also plotted wrongly. I used RooAddPdf [constructor with RooArgList PdfList and RooArgList CoefList](https://root.cern.ch/doc/master/classRooAddPdf.html#acafcca576f7839c046bea7c9edf31c22), if that is important. I think the easiest would be to create a new example from scratch. I can copy some code here if needed. ### Setup. 1. ROOT version 6.22/06. 2. Arch Linux. 3. Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8000
https://github.com/root-project/root/issues/8000:1293,modifiability,Compon,Component,1293,"[RF] RooAddPdf fails if pdfs have the same name; - [V] Checked for duplicates. ### Describe the bug. RooAddPdf, if initialized with pdfs with the same name, is evaluated wrongly. It interprets all pdfs with the same name as the first of them (function and parameters are the same for all pdfs, while the coefficient is the proper one, as should be if that pdf was the corresponding pdf). ### Expected behavior. - pdfs must be operated as different C++ objects/pointers, not based on name. Otherwise. - pdfs with the same name must be forbidden. RooAddPdf must fail to initialize if some pdfs have the same name. RooAddPdf class description should specify that pdfs with the same name are not allowed. ### To Reproduce. I make a 3-dimensional parametric fit of the detector. I model its parts as cylinders, and there are many of them, so I simply copied some common initialization code. The reused pdfs were not simply summed in RooAddPdf, but they were inside RooProdPdf-s (those had distinct names). Pdfs were different C++ objects and had different parameters. For different types of pdfs all converged well, but when I used 2 same pdfs (with the same name, but in absolutely different regions), the fit did not converge, and the plot was wrong. When I plotted (separate pdf or with RooFit::Component of the total sum), it showed that one pdf got parameters of another pdf (even though it was outside its allowed range), though its normalization was as it should probably be. The total sum (the pdf I fitted) was also plotted wrongly. I used RooAddPdf [constructor with RooArgList PdfList and RooArgList CoefList](https://root.cern.ch/doc/master/classRooAddPdf.html#acafcca576f7839c046bea7c9edf31c22), if that is important. I think the easiest would be to create a new example from scratch. I can copy some code here if needed. ### Setup. 1. ROOT version 6.22/06. 2. Arch Linux. 3. Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8000
https://github.com/root-project/root/issues/8000:1349,modifiability,paramet,parameters,1349,"[RF] RooAddPdf fails if pdfs have the same name; - [V] Checked for duplicates. ### Describe the bug. RooAddPdf, if initialized with pdfs with the same name, is evaluated wrongly. It interprets all pdfs with the same name as the first of them (function and parameters are the same for all pdfs, while the coefficient is the proper one, as should be if that pdf was the corresponding pdf). ### Expected behavior. - pdfs must be operated as different C++ objects/pointers, not based on name. Otherwise. - pdfs with the same name must be forbidden. RooAddPdf must fail to initialize if some pdfs have the same name. RooAddPdf class description should specify that pdfs with the same name are not allowed. ### To Reproduce. I make a 3-dimensional parametric fit of the detector. I model its parts as cylinders, and there are many of them, so I simply copied some common initialization code. The reused pdfs were not simply summed in RooAddPdf, but they were inside RooProdPdf-s (those had distinct names). Pdfs were different C++ objects and had different parameters. For different types of pdfs all converged well, but when I used 2 same pdfs (with the same name, but in absolutely different regions), the fit did not converge, and the plot was wrong. When I plotted (separate pdf or with RooFit::Component of the total sum), it showed that one pdf got parameters of another pdf (even though it was outside its allowed range), though its normalization was as it should probably be. The total sum (the pdf I fitted) was also plotted wrongly. I used RooAddPdf [constructor with RooArgList PdfList and RooArgList CoefList](https://root.cern.ch/doc/master/classRooAddPdf.html#acafcca576f7839c046bea7c9edf31c22), if that is important. I think the easiest would be to create a new example from scratch. I can copy some code here if needed. ### Setup. 1. ROOT version 6.22/06. 2. Arch Linux. 3. Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8000
https://github.com/root-project/root/issues/8000:1849,modifiability,version,version,1849,"[RF] RooAddPdf fails if pdfs have the same name; - [V] Checked for duplicates. ### Describe the bug. RooAddPdf, if initialized with pdfs with the same name, is evaluated wrongly. It interprets all pdfs with the same name as the first of them (function and parameters are the same for all pdfs, while the coefficient is the proper one, as should be if that pdf was the corresponding pdf). ### Expected behavior. - pdfs must be operated as different C++ objects/pointers, not based on name. Otherwise. - pdfs with the same name must be forbidden. RooAddPdf must fail to initialize if some pdfs have the same name. RooAddPdf class description should specify that pdfs with the same name are not allowed. ### To Reproduce. I make a 3-dimensional parametric fit of the detector. I model its parts as cylinders, and there are many of them, so I simply copied some common initialization code. The reused pdfs were not simply summed in RooAddPdf, but they were inside RooProdPdf-s (those had distinct names). Pdfs were different C++ objects and had different parameters. For different types of pdfs all converged well, but when I used 2 same pdfs (with the same name, but in absolutely different regions), the fit did not converge, and the plot was wrong. When I plotted (separate pdf or with RooFit::Component of the total sum), it showed that one pdf got parameters of another pdf (even though it was outside its allowed range), though its normalization was as it should probably be. The total sum (the pdf I fitted) was also plotted wrongly. I used RooAddPdf [constructor with RooArgList PdfList and RooArgList CoefList](https://root.cern.ch/doc/master/classRooAddPdf.html#acafcca576f7839c046bea7c9edf31c22), if that is important. I think the easiest would be to create a new example from scratch. I can copy some code here if needed. ### Setup. 1. ROOT version 6.22/06. 2. Arch Linux. 3. Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8000
https://github.com/root-project/root/issues/8000:15,reliability,fail,fails,15,"[RF] RooAddPdf fails if pdfs have the same name; - [V] Checked for duplicates. ### Describe the bug. RooAddPdf, if initialized with pdfs with the same name, is evaluated wrongly. It interprets all pdfs with the same name as the first of them (function and parameters are the same for all pdfs, while the coefficient is the proper one, as should be if that pdf was the corresponding pdf). ### Expected behavior. - pdfs must be operated as different C++ objects/pointers, not based on name. Otherwise. - pdfs with the same name must be forbidden. RooAddPdf must fail to initialize if some pdfs have the same name. RooAddPdf class description should specify that pdfs with the same name are not allowed. ### To Reproduce. I make a 3-dimensional parametric fit of the detector. I model its parts as cylinders, and there are many of them, so I simply copied some common initialization code. The reused pdfs were not simply summed in RooAddPdf, but they were inside RooProdPdf-s (those had distinct names). Pdfs were different C++ objects and had different parameters. For different types of pdfs all converged well, but when I used 2 same pdfs (with the same name, but in absolutely different regions), the fit did not converge, and the plot was wrong. When I plotted (separate pdf or with RooFit::Component of the total sum), it showed that one pdf got parameters of another pdf (even though it was outside its allowed range), though its normalization was as it should probably be. The total sum (the pdf I fitted) was also plotted wrongly. I used RooAddPdf [constructor with RooArgList PdfList and RooArgList CoefList](https://root.cern.ch/doc/master/classRooAddPdf.html#acafcca576f7839c046bea7c9edf31c22), if that is important. I think the easiest would be to create a new example from scratch. I can copy some code here if needed. ### Setup. 1. ROOT version 6.22/06. 2. Arch Linux. 3. Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8000
https://github.com/root-project/root/issues/8000:560,reliability,fail,fail,560,"[RF] RooAddPdf fails if pdfs have the same name; - [V] Checked for duplicates. ### Describe the bug. RooAddPdf, if initialized with pdfs with the same name, is evaluated wrongly. It interprets all pdfs with the same name as the first of them (function and parameters are the same for all pdfs, while the coefficient is the proper one, as should be if that pdf was the corresponding pdf). ### Expected behavior. - pdfs must be operated as different C++ objects/pointers, not based on name. Otherwise. - pdfs with the same name must be forbidden. RooAddPdf must fail to initialize if some pdfs have the same name. RooAddPdf class description should specify that pdfs with the same name are not allowed. ### To Reproduce. I make a 3-dimensional parametric fit of the detector. I model its parts as cylinders, and there are many of them, so I simply copied some common initialization code. The reused pdfs were not simply summed in RooAddPdf, but they were inside RooProdPdf-s (those had distinct names). Pdfs were different C++ objects and had different parameters. For different types of pdfs all converged well, but when I used 2 same pdfs (with the same name, but in absolutely different regions), the fit did not converge, and the plot was wrong. When I plotted (separate pdf or with RooFit::Component of the total sum), it showed that one pdf got parameters of another pdf (even though it was outside its allowed range), though its normalization was as it should probably be. The total sum (the pdf I fitted) was also plotted wrongly. I used RooAddPdf [constructor with RooArgList PdfList and RooArgList CoefList](https://root.cern.ch/doc/master/classRooAddPdf.html#acafcca576f7839c046bea7c9edf31c22), if that is important. I think the easiest would be to create a new example from scratch. I can copy some code here if needed. ### Setup. 1. ROOT version 6.22/06. 2. Arch Linux. 3. Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8000
https://github.com/root-project/root/issues/8000:764,safety,detect,detector,764,"[RF] RooAddPdf fails if pdfs have the same name; - [V] Checked for duplicates. ### Describe the bug. RooAddPdf, if initialized with pdfs with the same name, is evaluated wrongly. It interprets all pdfs with the same name as the first of them (function and parameters are the same for all pdfs, while the coefficient is the proper one, as should be if that pdf was the corresponding pdf). ### Expected behavior. - pdfs must be operated as different C++ objects/pointers, not based on name. Otherwise. - pdfs with the same name must be forbidden. RooAddPdf must fail to initialize if some pdfs have the same name. RooAddPdf class description should specify that pdfs with the same name are not allowed. ### To Reproduce. I make a 3-dimensional parametric fit of the detector. I model its parts as cylinders, and there are many of them, so I simply copied some common initialization code. The reused pdfs were not simply summed in RooAddPdf, but they were inside RooProdPdf-s (those had distinct names). Pdfs were different C++ objects and had different parameters. For different types of pdfs all converged well, but when I used 2 same pdfs (with the same name, but in absolutely different regions), the fit did not converge, and the plot was wrong. When I plotted (separate pdf or with RooFit::Component of the total sum), it showed that one pdf got parameters of another pdf (even though it was outside its allowed range), though its normalization was as it should probably be. The total sum (the pdf I fitted) was also plotted wrongly. I used RooAddPdf [constructor with RooArgList PdfList and RooArgList CoefList](https://root.cern.ch/doc/master/classRooAddPdf.html#acafcca576f7839c046bea7c9edf31c22), if that is important. I think the easiest would be to create a new example from scratch. I can copy some code here if needed. ### Setup. 1. ROOT version 6.22/06. 2. Arch Linux. 3. Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8000
https://github.com/root-project/root/issues/8000:764,security,detect,detector,764,"[RF] RooAddPdf fails if pdfs have the same name; - [V] Checked for duplicates. ### Describe the bug. RooAddPdf, if initialized with pdfs with the same name, is evaluated wrongly. It interprets all pdfs with the same name as the first of them (function and parameters are the same for all pdfs, while the coefficient is the proper one, as should be if that pdf was the corresponding pdf). ### Expected behavior. - pdfs must be operated as different C++ objects/pointers, not based on name. Otherwise. - pdfs with the same name must be forbidden. RooAddPdf must fail to initialize if some pdfs have the same name. RooAddPdf class description should specify that pdfs with the same name are not allowed. ### To Reproduce. I make a 3-dimensional parametric fit of the detector. I model its parts as cylinders, and there are many of them, so I simply copied some common initialization code. The reused pdfs were not simply summed in RooAddPdf, but they were inside RooProdPdf-s (those had distinct names). Pdfs were different C++ objects and had different parameters. For different types of pdfs all converged well, but when I used 2 same pdfs (with the same name, but in absolutely different regions), the fit did not converge, and the plot was wrong. When I plotted (separate pdf or with RooFit::Component of the total sum), it showed that one pdf got parameters of another pdf (even though it was outside its allowed range), though its normalization was as it should probably be. The total sum (the pdf I fitted) was also plotted wrongly. I used RooAddPdf [constructor with RooArgList PdfList and RooArgList CoefList](https://root.cern.ch/doc/master/classRooAddPdf.html#acafcca576f7839c046bea7c9edf31c22), if that is important. I think the easiest would be to create a new example from scratch. I can copy some code here if needed. ### Setup. 1. ROOT version 6.22/06. 2. Arch Linux. 3. Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8000
https://github.com/root-project/root/issues/8000:776,security,model,model,776,"[RF] RooAddPdf fails if pdfs have the same name; - [V] Checked for duplicates. ### Describe the bug. RooAddPdf, if initialized with pdfs with the same name, is evaluated wrongly. It interprets all pdfs with the same name as the first of them (function and parameters are the same for all pdfs, while the coefficient is the proper one, as should be if that pdf was the corresponding pdf). ### Expected behavior. - pdfs must be operated as different C++ objects/pointers, not based on name. Otherwise. - pdfs with the same name must be forbidden. RooAddPdf must fail to initialize if some pdfs have the same name. RooAddPdf class description should specify that pdfs with the same name are not allowed. ### To Reproduce. I make a 3-dimensional parametric fit of the detector. I model its parts as cylinders, and there are many of them, so I simply copied some common initialization code. The reused pdfs were not simply summed in RooAddPdf, but they were inside RooProdPdf-s (those had distinct names). Pdfs were different C++ objects and had different parameters. For different types of pdfs all converged well, but when I used 2 same pdfs (with the same name, but in absolutely different regions), the fit did not converge, and the plot was wrong. When I plotted (separate pdf or with RooFit::Component of the total sum), it showed that one pdf got parameters of another pdf (even though it was outside its allowed range), though its normalization was as it should probably be. The total sum (the pdf I fitted) was also plotted wrongly. I used RooAddPdf [constructor with RooArgList PdfList and RooArgList CoefList](https://root.cern.ch/doc/master/classRooAddPdf.html#acafcca576f7839c046bea7c9edf31c22), if that is important. I think the easiest would be to create a new example from scratch. I can copy some code here if needed. ### Setup. 1. ROOT version 6.22/06. 2. Arch Linux. 3. Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8000
https://github.com/root-project/root/issues/8000:839,testability,simpl,simply,839,"[RF] RooAddPdf fails if pdfs have the same name; - [V] Checked for duplicates. ### Describe the bug. RooAddPdf, if initialized with pdfs with the same name, is evaluated wrongly. It interprets all pdfs with the same name as the first of them (function and parameters are the same for all pdfs, while the coefficient is the proper one, as should be if that pdf was the corresponding pdf). ### Expected behavior. - pdfs must be operated as different C++ objects/pointers, not based on name. Otherwise. - pdfs with the same name must be forbidden. RooAddPdf must fail to initialize if some pdfs have the same name. RooAddPdf class description should specify that pdfs with the same name are not allowed. ### To Reproduce. I make a 3-dimensional parametric fit of the detector. I model its parts as cylinders, and there are many of them, so I simply copied some common initialization code. The reused pdfs were not simply summed in RooAddPdf, but they were inside RooProdPdf-s (those had distinct names). Pdfs were different C++ objects and had different parameters. For different types of pdfs all converged well, but when I used 2 same pdfs (with the same name, but in absolutely different regions), the fit did not converge, and the plot was wrong. When I plotted (separate pdf or with RooFit::Component of the total sum), it showed that one pdf got parameters of another pdf (even though it was outside its allowed range), though its normalization was as it should probably be. The total sum (the pdf I fitted) was also plotted wrongly. I used RooAddPdf [constructor with RooArgList PdfList and RooArgList CoefList](https://root.cern.ch/doc/master/classRooAddPdf.html#acafcca576f7839c046bea7c9edf31c22), if that is important. I think the easiest would be to create a new example from scratch. I can copy some code here if needed. ### Setup. 1. ROOT version 6.22/06. 2. Arch Linux. 3. Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8000
https://github.com/root-project/root/issues/8000:911,testability,simpl,simply,911,"[RF] RooAddPdf fails if pdfs have the same name; - [V] Checked for duplicates. ### Describe the bug. RooAddPdf, if initialized with pdfs with the same name, is evaluated wrongly. It interprets all pdfs with the same name as the first of them (function and parameters are the same for all pdfs, while the coefficient is the proper one, as should be if that pdf was the corresponding pdf). ### Expected behavior. - pdfs must be operated as different C++ objects/pointers, not based on name. Otherwise. - pdfs with the same name must be forbidden. RooAddPdf must fail to initialize if some pdfs have the same name. RooAddPdf class description should specify that pdfs with the same name are not allowed. ### To Reproduce. I make a 3-dimensional parametric fit of the detector. I model its parts as cylinders, and there are many of them, so I simply copied some common initialization code. The reused pdfs were not simply summed in RooAddPdf, but they were inside RooProdPdf-s (those had distinct names). Pdfs were different C++ objects and had different parameters. For different types of pdfs all converged well, but when I used 2 same pdfs (with the same name, but in absolutely different regions), the fit did not converge, and the plot was wrong. When I plotted (separate pdf or with RooFit::Component of the total sum), it showed that one pdf got parameters of another pdf (even though it was outside its allowed range), though its normalization was as it should probably be. The total sum (the pdf I fitted) was also plotted wrongly. I used RooAddPdf [constructor with RooArgList PdfList and RooArgList CoefList](https://root.cern.ch/doc/master/classRooAddPdf.html#acafcca576f7839c046bea7c9edf31c22), if that is important. I think the easiest would be to create a new example from scratch. I can copy some code here if needed. ### Setup. 1. ROOT version 6.22/06. 2. Arch Linux. 3. Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8000
https://github.com/root-project/root/issues/8000:401,usability,behavi,behavior,401,"[RF] RooAddPdf fails if pdfs have the same name; - [V] Checked for duplicates. ### Describe the bug. RooAddPdf, if initialized with pdfs with the same name, is evaluated wrongly. It interprets all pdfs with the same name as the first of them (function and parameters are the same for all pdfs, while the coefficient is the proper one, as should be if that pdf was the corresponding pdf). ### Expected behavior. - pdfs must be operated as different C++ objects/pointers, not based on name. Otherwise. - pdfs with the same name must be forbidden. RooAddPdf must fail to initialize if some pdfs have the same name. RooAddPdf class description should specify that pdfs with the same name are not allowed. ### To Reproduce. I make a 3-dimensional parametric fit of the detector. I model its parts as cylinders, and there are many of them, so I simply copied some common initialization code. The reused pdfs were not simply summed in RooAddPdf, but they were inside RooProdPdf-s (those had distinct names). Pdfs were different C++ objects and had different parameters. For different types of pdfs all converged well, but when I used 2 same pdfs (with the same name, but in absolutely different regions), the fit did not converge, and the plot was wrong. When I plotted (separate pdf or with RooFit::Component of the total sum), it showed that one pdf got parameters of another pdf (even though it was outside its allowed range), though its normalization was as it should probably be. The total sum (the pdf I fitted) was also plotted wrongly. I used RooAddPdf [constructor with RooArgList PdfList and RooArgList CoefList](https://root.cern.ch/doc/master/classRooAddPdf.html#acafcca576f7839c046bea7c9edf31c22), if that is important. I think the easiest would be to create a new example from scratch. I can copy some code here if needed. ### Setup. 1. ROOT version 6.22/06. 2. Arch Linux. 3. Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8000
https://github.com/root-project/root/issues/8000:839,usability,simpl,simply,839,"[RF] RooAddPdf fails if pdfs have the same name; - [V] Checked for duplicates. ### Describe the bug. RooAddPdf, if initialized with pdfs with the same name, is evaluated wrongly. It interprets all pdfs with the same name as the first of them (function and parameters are the same for all pdfs, while the coefficient is the proper one, as should be if that pdf was the corresponding pdf). ### Expected behavior. - pdfs must be operated as different C++ objects/pointers, not based on name. Otherwise. - pdfs with the same name must be forbidden. RooAddPdf must fail to initialize if some pdfs have the same name. RooAddPdf class description should specify that pdfs with the same name are not allowed. ### To Reproduce. I make a 3-dimensional parametric fit of the detector. I model its parts as cylinders, and there are many of them, so I simply copied some common initialization code. The reused pdfs were not simply summed in RooAddPdf, but they were inside RooProdPdf-s (those had distinct names). Pdfs were different C++ objects and had different parameters. For different types of pdfs all converged well, but when I used 2 same pdfs (with the same name, but in absolutely different regions), the fit did not converge, and the plot was wrong. When I plotted (separate pdf or with RooFit::Component of the total sum), it showed that one pdf got parameters of another pdf (even though it was outside its allowed range), though its normalization was as it should probably be. The total sum (the pdf I fitted) was also plotted wrongly. I used RooAddPdf [constructor with RooArgList PdfList and RooArgList CoefList](https://root.cern.ch/doc/master/classRooAddPdf.html#acafcca576f7839c046bea7c9edf31c22), if that is important. I think the easiest would be to create a new example from scratch. I can copy some code here if needed. ### Setup. 1. ROOT version 6.22/06. 2. Arch Linux. 3. Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8000
https://github.com/root-project/root/issues/8000:911,usability,simpl,simply,911,"[RF] RooAddPdf fails if pdfs have the same name; - [V] Checked for duplicates. ### Describe the bug. RooAddPdf, if initialized with pdfs with the same name, is evaluated wrongly. It interprets all pdfs with the same name as the first of them (function and parameters are the same for all pdfs, while the coefficient is the proper one, as should be if that pdf was the corresponding pdf). ### Expected behavior. - pdfs must be operated as different C++ objects/pointers, not based on name. Otherwise. - pdfs with the same name must be forbidden. RooAddPdf must fail to initialize if some pdfs have the same name. RooAddPdf class description should specify that pdfs with the same name are not allowed. ### To Reproduce. I make a 3-dimensional parametric fit of the detector. I model its parts as cylinders, and there are many of them, so I simply copied some common initialization code. The reused pdfs were not simply summed in RooAddPdf, but they were inside RooProdPdf-s (those had distinct names). Pdfs were different C++ objects and had different parameters. For different types of pdfs all converged well, but when I used 2 same pdfs (with the same name, but in absolutely different regions), the fit did not converge, and the plot was wrong. When I plotted (separate pdf or with RooFit::Component of the total sum), it showed that one pdf got parameters of another pdf (even though it was outside its allowed range), though its normalization was as it should probably be. The total sum (the pdf I fitted) was also plotted wrongly. I used RooAddPdf [constructor with RooArgList PdfList and RooArgList CoefList](https://root.cern.ch/doc/master/classRooAddPdf.html#acafcca576f7839c046bea7c9edf31c22), if that is important. I think the easiest would be to create a new example from scratch. I can copy some code here if needed. ### Setup. 1. ROOT version 6.22/06. 2. Arch Linux. 3. Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8000
https://github.com/root-project/root/pull/8001:94,testability,simpl,simple,94,[RF] Some modernization of RooLagrangianMorphFunc (incl. compiler warning fix); * inlining of simple getters. * replace `NULL` with `nullptr`. * change getters in `RooLagrangianMorphFunc::Config`: return `const &`. * remove `Config(const Config &other) = default;` because it caused. warnings,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8001
https://github.com/root-project/root/pull/8001:94,usability,simpl,simple,94,[RF] Some modernization of RooLagrangianMorphFunc (incl. compiler warning fix); * inlining of simple getters. * replace `NULL` with `nullptr`. * change getters in `RooLagrangianMorphFunc::Config`: return `const &`. * remove `Config(const Config &other) = default;` because it caused. warnings,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8001
https://github.com/root-project/root/pull/8003:29,integrability,rout,routines,29,"[ntuple] Move `SerializeXxx` routines for fundamental types to a named namespace; This pull-request moves the `SerializeXxx` routines for fundamental integer types. to a named namespace. The aim is to make these functions reusable by other. parts of the RNTuple code, e.g., alternative backends, etc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8003
https://github.com/root-project/root/pull/8003:125,integrability,rout,routines,125,"[ntuple] Move `SerializeXxx` routines for fundamental types to a named namespace; This pull-request moves the `SerializeXxx` routines for fundamental integer types. to a named namespace. The aim is to make these functions reusable by other. parts of the RNTuple code, e.g., alternative backends, etc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8003
https://github.com/root-project/root/pull/8003:222,modifiability,reu,reusable,222,"[ntuple] Move `SerializeXxx` routines for fundamental types to a named namespace; This pull-request moves the `SerializeXxx` routines for fundamental integer types. to a named namespace. The aim is to make these functions reusable by other. parts of the RNTuple code, e.g., alternative backends, etc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8003
https://github.com/root-project/root/pull/8004:241,deployability,contain,contain,241,"[RF] Check that no two distinct input pdfs have same name in RooAddPdf and general RooAddPdf modernization; This addresses https://github.com/root-project/root/issues/8000. The actual check is introduced in the 4th commit, all other commits contain general RooAddPdf code modernization.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8004
https://github.com/root-project/root/pull/8004:32,safety,input,input,32,"[RF] Check that no two distinct input pdfs have same name in RooAddPdf and general RooAddPdf modernization; This addresses https://github.com/root-project/root/issues/8000. The actual check is introduced in the 4th commit, all other commits contain general RooAddPdf code modernization.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8004
https://github.com/root-project/root/pull/8004:32,usability,input,input,32,"[RF] Check that no two distinct input pdfs have same name in RooAddPdf and general RooAddPdf modernization; This addresses https://github.com/root-project/root/issues/8000. The actual check is introduced in the 4th commit, all other commits contain general RooAddPdf code modernization.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8004
https://github.com/root-project/root/issues/8005:1135,availability,sli,slides,1135,". ### Describe the bug. A flat histogram is constructed for continuum while signal is constructed as a small peak in the center of the m_yy distribution. The pseudo-data is constructed from them, while the total pdf is constructed from them as well. (so pseudo-data is exactly the same as pdf). On purpose to illustrate the problem, I take a bin size of 5 GeV (else the problem will not appear, which appears to be normal due to the technical explanation given in the attachement). *The nll is computed by roofit, with two methods that give the same result (probably they use the same internal function). *The nll is computed ""by hand"" :. -I could reproduce exactly the value of nll of roofit if I ""forget"" to multiply the pdf by the bin size *only in the sum part* of the likelihood formula. -If I compute it in what I think is ""correct"", I could not find the value obtain by roofit. Hypothesis of explanation : createNLL does not anticipate the possibility of binned pdf. More details : pdf : 3 slides. [Minimum_Problem_NLL.pdf](https://github.com/root-project/root/files/6383379/Minimum_Problem_NLL.pdf). A minimum reproducible example is given here :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemNLL. (github prevents to attach a .C file : it would be useful to authorize it if we wish to keep persistent minimum examples for the future). Remark : the anomaly would not have consequence for the result of a fit. But if the bin size would be variable, maybe there would be (I don't know). Anyway, there is incompatibility of treatment of the bin size for the total of the pdf and the value of pdf in a given bin. ### Expected behavior. the expected value is given in the example : roofit does not find the mathematical correct value because it forgets to multiply by the bin size for the ""sum part"" (while it does not forget to multiply by the bin size for the ""total prediction"" part. ### To Reproduce. Steps to reproduce the behavior:. 1. Your code that triggers the issu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8005
https://github.com/root-project/root/issues/8005:1314,availability,escal,escalier,1314,"cted from them, while the total pdf is constructed from them as well. (so pseudo-data is exactly the same as pdf). On purpose to illustrate the problem, I take a bin size of 5 GeV (else the problem will not appear, which appears to be normal due to the technical explanation given in the attachement). *The nll is computed by roofit, with two methods that give the same result (probably they use the same internal function). *The nll is computed ""by hand"" :. -I could reproduce exactly the value of nll of roofit if I ""forget"" to multiply the pdf by the bin size *only in the sum part* of the likelihood formula. -If I compute it in what I think is ""correct"", I could not find the value obtain by roofit. Hypothesis of explanation : createNLL does not anticipate the possibility of binned pdf. More details : pdf : 3 slides. [Minimum_Problem_NLL.pdf](https://github.com/root-project/root/files/6383379/Minimum_Problem_NLL.pdf). A minimum reproducible example is given here :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemNLL. (github prevents to attach a .C file : it would be useful to authorize it if we wish to keep persistent minimum examples for the future). Remark : the anomaly would not have consequence for the result of a fit. But if the bin size would be variable, maybe there would be (I don't know). Anyway, there is incompatibility of treatment of the bin size for the total of the pdf and the value of pdf in a given bin. ### Expected behavior. the expected value is given in the example : roofit does not find the mathematical correct value because it forgets to multiply by the bin size for the ""sum part"" (while it does not forget to multiply by the bin size for the ""total prediction"" part. ### To Reproduce. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. a) put : do_mistake_computation_find_official_roofit_value=1 for reproducing the result of roofit. b) put do_mistake_com",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8005
https://github.com/root-project/root/issues/8005:2571,availability,Operat,Operating,2571,"ll of roofit if I ""forget"" to multiply the pdf by the bin size *only in the sum part* of the likelihood formula. -If I compute it in what I think is ""correct"", I could not find the value obtain by roofit. Hypothesis of explanation : createNLL does not anticipate the possibility of binned pdf. More details : pdf : 3 slides. [Minimum_Problem_NLL.pdf](https://github.com/root-project/root/files/6383379/Minimum_Problem_NLL.pdf). A minimum reproducible example is given here :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemNLL. (github prevents to attach a .C file : it would be useful to authorize it if we wish to keep persistent minimum examples for the future). Remark : the anomaly would not have consequence for the result of a fit. But if the bin size would be variable, maybe there would be (I don't know). Anyway, there is incompatibility of treatment of the bin size for the total of the pdf and the value of pdf in a given bin. ### Expected behavior. the expected value is given in the example : roofit does not find the mathematical correct value because it forgets to multiply by the bin size for the ""sum part"" (while it does not forget to multiply by the bin size for the ""total prediction"" part. ### To Reproduce. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. a) put : do_mistake_computation_find_official_roofit_value=1 for reproducing the result of roofit. b) put do_mistake_computation_find_official_roofit_value=0 for reproducing what I think is the correct value (different to the one of roofit). 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... root -b Minimum.C+. ### Setup. 1. ROOT version : 6.18.00. 2. Operating system : windows (session unix from mobaxterm). 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. installed by experts on the french cluster of computers (cc in2p3, France). ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8005
https://github.com/root-project/root/issues/8005:2686,availability,down,download,2686,"ll of roofit if I ""forget"" to multiply the pdf by the bin size *only in the sum part* of the likelihood formula. -If I compute it in what I think is ""correct"", I could not find the value obtain by roofit. Hypothesis of explanation : createNLL does not anticipate the possibility of binned pdf. More details : pdf : 3 slides. [Minimum_Problem_NLL.pdf](https://github.com/root-project/root/files/6383379/Minimum_Problem_NLL.pdf). A minimum reproducible example is given here :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemNLL. (github prevents to attach a .C file : it would be useful to authorize it if we wish to keep persistent minimum examples for the future). Remark : the anomaly would not have consequence for the result of a fit. But if the bin size would be variable, maybe there would be (I don't know). Anyway, there is incompatibility of treatment of the bin size for the total of the pdf and the value of pdf in a given bin. ### Expected behavior. the expected value is given in the example : roofit does not find the mathematical correct value because it forgets to multiply by the bin size for the ""sum part"" (while it does not forget to multiply by the bin size for the ""total prediction"" part. ### To Reproduce. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. a) put : do_mistake_computation_find_official_roofit_value=1 for reproducing the result of roofit. b) put do_mistake_computation_find_official_roofit_value=0 for reproducing what I think is the correct value (different to the one of roofit). 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... root -b Minimum.C+. ### Setup. 1. ROOT version : 6.18.00. 2. Operating system : windows (session unix from mobaxterm). 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. installed by experts on the french cluster of computers (cc in2p3, France). ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8005
https://github.com/root-project/root/issues/8005:2755,availability,cluster,cluster,2755,"ll of roofit if I ""forget"" to multiply the pdf by the bin size *only in the sum part* of the likelihood formula. -If I compute it in what I think is ""correct"", I could not find the value obtain by roofit. Hypothesis of explanation : createNLL does not anticipate the possibility of binned pdf. More details : pdf : 3 slides. [Minimum_Problem_NLL.pdf](https://github.com/root-project/root/files/6383379/Minimum_Problem_NLL.pdf). A minimum reproducible example is given here :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemNLL. (github prevents to attach a .C file : it would be useful to authorize it if we wish to keep persistent minimum examples for the future). Remark : the anomaly would not have consequence for the result of a fit. But if the bin size would be variable, maybe there would be (I don't know). Anyway, there is incompatibility of treatment of the bin size for the total of the pdf and the value of pdf in a given bin. ### Expected behavior. the expected value is given in the example : roofit does not find the mathematical correct value because it forgets to multiply by the bin size for the ""sum part"" (while it does not forget to multiply by the bin size for the ""total prediction"" part. ### To Reproduce. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. a) put : do_mistake_computation_find_official_roofit_value=1 for reproducing the result of roofit. b) put do_mistake_computation_find_official_roofit_value=0 for reproducing what I think is the correct value (different to the one of roofit). 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... root -b Minimum.C+. ### Setup. 1. ROOT version : 6.18.00. 2. Operating system : windows (session unix from mobaxterm). 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. installed by experts on the french cluster of computers (cc in2p3, France). ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8005
https://github.com/root-project/root/issues/8005:198,deployability,continu,continuum,198,"[RF] RooAbsPdf::createNLL gives wrong NLL for binned pdf with bin size different to one; Hello. Please find below a problem with createNLL. ### Describe the bug. A flat histogram is constructed for continuum while signal is constructed as a small peak in the center of the m_yy distribution. The pseudo-data is constructed from them, while the total pdf is constructed from them as well. (so pseudo-data is exactly the same as pdf). On purpose to illustrate the problem, I take a bin size of 5 GeV (else the problem will not appear, which appears to be normal due to the technical explanation given in the attachement). *The nll is computed by roofit, with two methods that give the same result (probably they use the same internal function). *The nll is computed ""by hand"" :. -I could reproduce exactly the value of nll of roofit if I ""forget"" to multiply the pdf by the bin size *only in the sum part* of the likelihood formula. -If I compute it in what I think is ""correct"", I could not find the value obtain by roofit. Hypothesis of explanation : createNLL does not anticipate the possibility of binned pdf. More details : pdf : 3 slides. [Minimum_Problem_NLL.pdf](https://github.com/root-project/root/files/6383379/Minimum_Problem_NLL.pdf). A minimum reproducible example is given here :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemNLL. (github prevents to attach a .C file : it would be useful to authorize it if we wish to keep persistent minimum examples for the future). Remark : the anomaly would not have consequence for the result of a fit. But if the bin size would be variable, maybe there would be (I don't know). Anyway, there is incompatibility of treatment of the bin size for the total of the pdf and the value of pdf in a given bin. ### Expected behavior. the expected value is given in the example : roofit does not find the mathematical correct value because it forgets to multiply by the bin size for the ""sum part"" (while it does not forget to multipl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8005
https://github.com/root-project/root/issues/8005:2473,deployability,build,build,2473,"ll of roofit if I ""forget"" to multiply the pdf by the bin size *only in the sum part* of the likelihood formula. -If I compute it in what I think is ""correct"", I could not find the value obtain by roofit. Hypothesis of explanation : createNLL does not anticipate the possibility of binned pdf. More details : pdf : 3 slides. [Minimum_Problem_NLL.pdf](https://github.com/root-project/root/files/6383379/Minimum_Problem_NLL.pdf). A minimum reproducible example is given here :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemNLL. (github prevents to attach a .C file : it would be useful to authorize it if we wish to keep persistent minimum examples for the future). Remark : the anomaly would not have consequence for the result of a fit. But if the bin size would be variable, maybe there would be (I don't know). Anyway, there is incompatibility of treatment of the bin size for the total of the pdf and the value of pdf in a given bin. ### Expected behavior. the expected value is given in the example : roofit does not find the mathematical correct value because it forgets to multiply by the bin size for the ""sum part"" (while it does not forget to multiply by the bin size for the ""total prediction"" part. ### To Reproduce. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. a) put : do_mistake_computation_find_official_roofit_value=1 for reproducing the result of roofit. b) put do_mistake_computation_find_official_roofit_value=0 for reproducing what I think is the correct value (different to the one of roofit). 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... root -b Minimum.C+. ### Setup. 1. ROOT version : 6.18.00. 2. Operating system : windows (session unix from mobaxterm). 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. installed by experts on the french cluster of computers (cc in2p3, France). ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8005
https://github.com/root-project/root/issues/8005:2549,deployability,version,version,2549,"ll of roofit if I ""forget"" to multiply the pdf by the bin size *only in the sum part* of the likelihood formula. -If I compute it in what I think is ""correct"", I could not find the value obtain by roofit. Hypothesis of explanation : createNLL does not anticipate the possibility of binned pdf. More details : pdf : 3 slides. [Minimum_Problem_NLL.pdf](https://github.com/root-project/root/files/6383379/Minimum_Problem_NLL.pdf). A minimum reproducible example is given here :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemNLL. (github prevents to attach a .C file : it would be useful to authorize it if we wish to keep persistent minimum examples for the future). Remark : the anomaly would not have consequence for the result of a fit. But if the bin size would be variable, maybe there would be (I don't know). Anyway, there is incompatibility of treatment of the bin size for the total of the pdf and the value of pdf in a given bin. ### Expected behavior. the expected value is given in the example : roofit does not find the mathematical correct value because it forgets to multiply by the bin size for the ""sum part"" (while it does not forget to multiply by the bin size for the ""total prediction"" part. ### To Reproduce. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. a) put : do_mistake_computation_find_official_roofit_value=1 for reproducing the result of roofit. b) put do_mistake_computation_find_official_roofit_value=0 for reproducing what I think is the correct value (different to the one of roofit). 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... root -b Minimum.C+. ### Setup. 1. ROOT version : 6.18.00. 2. Operating system : windows (session unix from mobaxterm). 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. installed by experts on the french cluster of computers (cc in2p3, France). ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8005
https://github.com/root-project/root/issues/8005:2668,deployability,instal,install,2668,"ll of roofit if I ""forget"" to multiply the pdf by the bin size *only in the sum part* of the likelihood formula. -If I compute it in what I think is ""correct"", I could not find the value obtain by roofit. Hypothesis of explanation : createNLL does not anticipate the possibility of binned pdf. More details : pdf : 3 slides. [Minimum_Problem_NLL.pdf](https://github.com/root-project/root/files/6383379/Minimum_Problem_NLL.pdf). A minimum reproducible example is given here :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemNLL. (github prevents to attach a .C file : it would be useful to authorize it if we wish to keep persistent minimum examples for the future). Remark : the anomaly would not have consequence for the result of a fit. But if the bin size would be variable, maybe there would be (I don't know). Anyway, there is incompatibility of treatment of the bin size for the total of the pdf and the value of pdf in a given bin. ### Expected behavior. the expected value is given in the example : roofit does not find the mathematical correct value because it forgets to multiply by the bin size for the ""sum part"" (while it does not forget to multiply by the bin size for the ""total prediction"" part. ### To Reproduce. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. a) put : do_mistake_computation_find_official_roofit_value=1 for reproducing the result of roofit. b) put do_mistake_computation_find_official_roofit_value=0 for reproducing what I think is the correct value (different to the one of roofit). 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... root -b Minimum.C+. ### Setup. 1. ROOT version : 6.18.00. 2. Operating system : windows (session unix from mobaxterm). 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. installed by experts on the french cluster of computers (cc in2p3, France). ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8005
https://github.com/root-project/root/issues/8005:2720,deployability,instal,installed,2720,"ll of roofit if I ""forget"" to multiply the pdf by the bin size *only in the sum part* of the likelihood formula. -If I compute it in what I think is ""correct"", I could not find the value obtain by roofit. Hypothesis of explanation : createNLL does not anticipate the possibility of binned pdf. More details : pdf : 3 slides. [Minimum_Problem_NLL.pdf](https://github.com/root-project/root/files/6383379/Minimum_Problem_NLL.pdf). A minimum reproducible example is given here :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemNLL. (github prevents to attach a .C file : it would be useful to authorize it if we wish to keep persistent minimum examples for the future). Remark : the anomaly would not have consequence for the result of a fit. But if the bin size would be variable, maybe there would be (I don't know). Anyway, there is incompatibility of treatment of the bin size for the total of the pdf and the value of pdf in a given bin. ### Expected behavior. the expected value is given in the example : roofit does not find the mathematical correct value because it forgets to multiply by the bin size for the ""sum part"" (while it does not forget to multiply by the bin size for the ""total prediction"" part. ### To Reproduce. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. a) put : do_mistake_computation_find_official_roofit_value=1 for reproducing the result of roofit. b) put do_mistake_computation_find_official_roofit_value=0 for reproducing what I think is the correct value (different to the one of roofit). 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... root -b Minimum.C+. ### Setup. 1. ROOT version : 6.18.00. 2. Operating system : windows (session unix from mobaxterm). 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. installed by experts on the french cluster of computers (cc in2p3, France). ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8005
https://github.com/root-project/root/issues/8005:2755,deployability,cluster,cluster,2755,"ll of roofit if I ""forget"" to multiply the pdf by the bin size *only in the sum part* of the likelihood formula. -If I compute it in what I think is ""correct"", I could not find the value obtain by roofit. Hypothesis of explanation : createNLL does not anticipate the possibility of binned pdf. More details : pdf : 3 slides. [Minimum_Problem_NLL.pdf](https://github.com/root-project/root/files/6383379/Minimum_Problem_NLL.pdf). A minimum reproducible example is given here :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemNLL. (github prevents to attach a .C file : it would be useful to authorize it if we wish to keep persistent minimum examples for the future). Remark : the anomaly would not have consequence for the result of a fit. But if the bin size would be variable, maybe there would be (I don't know). Anyway, there is incompatibility of treatment of the bin size for the total of the pdf and the value of pdf in a given bin. ### Expected behavior. the expected value is given in the example : roofit does not find the mathematical correct value because it forgets to multiply by the bin size for the ""sum part"" (while it does not forget to multiply by the bin size for the ""total prediction"" part. ### To Reproduce. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. a) put : do_mistake_computation_find_official_roofit_value=1 for reproducing the result of roofit. b) put do_mistake_computation_find_official_roofit_value=0 for reproducing what I think is the correct value (different to the one of roofit). 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... root -b Minimum.C+. ### Setup. 1. ROOT version : 6.18.00. 2. Operating system : windows (session unix from mobaxterm). 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. installed by experts on the french cluster of computers (cc in2p3, France). ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8005
https://github.com/root-project/root/issues/8005:2033,energy efficiency,predict,prediction,2033,"ll of roofit if I ""forget"" to multiply the pdf by the bin size *only in the sum part* of the likelihood formula. -If I compute it in what I think is ""correct"", I could not find the value obtain by roofit. Hypothesis of explanation : createNLL does not anticipate the possibility of binned pdf. More details : pdf : 3 slides. [Minimum_Problem_NLL.pdf](https://github.com/root-project/root/files/6383379/Minimum_Problem_NLL.pdf). A minimum reproducible example is given here :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemNLL. (github prevents to attach a .C file : it would be useful to authorize it if we wish to keep persistent minimum examples for the future). Remark : the anomaly would not have consequence for the result of a fit. But if the bin size would be variable, maybe there would be (I don't know). Anyway, there is incompatibility of treatment of the bin size for the total of the pdf and the value of pdf in a given bin. ### Expected behavior. the expected value is given in the example : roofit does not find the mathematical correct value because it forgets to multiply by the bin size for the ""sum part"" (while it does not forget to multiply by the bin size for the ""total prediction"" part. ### To Reproduce. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. a) put : do_mistake_computation_find_official_roofit_value=1 for reproducing the result of roofit. b) put do_mistake_computation_find_official_roofit_value=0 for reproducing what I think is the correct value (different to the one of roofit). 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... root -b Minimum.C+. ### Setup. 1. ROOT version : 6.18.00. 2. Operating system : windows (session unix from mobaxterm). 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. installed by experts on the french cluster of computers (cc in2p3, France). ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8005
https://github.com/root-project/root/issues/8005:1323,integrability,pub,public,1323,"m them, while the total pdf is constructed from them as well. (so pseudo-data is exactly the same as pdf). On purpose to illustrate the problem, I take a bin size of 5 GeV (else the problem will not appear, which appears to be normal due to the technical explanation given in the attachement). *The nll is computed by roofit, with two methods that give the same result (probably they use the same internal function). *The nll is computed ""by hand"" :. -I could reproduce exactly the value of nll of roofit if I ""forget"" to multiply the pdf by the bin size *only in the sum part* of the likelihood formula. -If I compute it in what I think is ""correct"", I could not find the value obtain by roofit. Hypothesis of explanation : createNLL does not anticipate the possibility of binned pdf. More details : pdf : 3 slides. [Minimum_Problem_NLL.pdf](https://github.com/root-project/root/files/6383379/Minimum_Problem_NLL.pdf). A minimum reproducible example is given here :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemNLL. (github prevents to attach a .C file : it would be useful to authorize it if we wish to keep persistent minimum examples for the future). Remark : the anomaly would not have consequence for the result of a fit. But if the bin size would be variable, maybe there would be (I don't know). Anyway, there is incompatibility of treatment of the bin size for the total of the pdf and the value of pdf in a given bin. ### Expected behavior. the expected value is given in the example : roofit does not find the mathematical correct value because it forgets to multiply by the bin size for the ""sum part"" (while it does not forget to multiply by the bin size for the ""total prediction"" part. ### To Reproduce. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. a) put : do_mistake_computation_find_official_roofit_value=1 for reproducing the result of roofit. b) put do_mistake_computation",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8005
https://github.com/root-project/root/issues/8005:2549,integrability,version,version,2549,"ll of roofit if I ""forget"" to multiply the pdf by the bin size *only in the sum part* of the likelihood formula. -If I compute it in what I think is ""correct"", I could not find the value obtain by roofit. Hypothesis of explanation : createNLL does not anticipate the possibility of binned pdf. More details : pdf : 3 slides. [Minimum_Problem_NLL.pdf](https://github.com/root-project/root/files/6383379/Minimum_Problem_NLL.pdf). A minimum reproducible example is given here :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemNLL. (github prevents to attach a .C file : it would be useful to authorize it if we wish to keep persistent minimum examples for the future). Remark : the anomaly would not have consequence for the result of a fit. But if the bin size would be variable, maybe there would be (I don't know). Anyway, there is incompatibility of treatment of the bin size for the total of the pdf and the value of pdf in a given bin. ### Expected behavior. the expected value is given in the example : roofit does not find the mathematical correct value because it forgets to multiply by the bin size for the ""sum part"" (while it does not forget to multiply by the bin size for the ""total prediction"" part. ### To Reproduce. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. a) put : do_mistake_computation_find_official_roofit_value=1 for reproducing the result of roofit. b) put do_mistake_computation_find_official_roofit_value=0 for reproducing what I think is the correct value (different to the one of roofit). 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... root -b Minimum.C+. ### Setup. 1. ROOT version : 6.18.00. 2. Operating system : windows (session unix from mobaxterm). 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. installed by experts on the french cluster of computers (cc in2p3, France). ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8005
https://github.com/root-project/root/issues/8005:278,interoperability,distribut,distribution,278,"[RF] RooAbsPdf::createNLL gives wrong NLL for binned pdf with bin size different to one; Hello. Please find below a problem with createNLL. ### Describe the bug. A flat histogram is constructed for continuum while signal is constructed as a small peak in the center of the m_yy distribution. The pseudo-data is constructed from them, while the total pdf is constructed from them as well. (so pseudo-data is exactly the same as pdf). On purpose to illustrate the problem, I take a bin size of 5 GeV (else the problem will not appear, which appears to be normal due to the technical explanation given in the attachement). *The nll is computed by roofit, with two methods that give the same result (probably they use the same internal function). *The nll is computed ""by hand"" :. -I could reproduce exactly the value of nll of roofit if I ""forget"" to multiply the pdf by the bin size *only in the sum part* of the likelihood formula. -If I compute it in what I think is ""correct"", I could not find the value obtain by roofit. Hypothesis of explanation : createNLL does not anticipate the possibility of binned pdf. More details : pdf : 3 slides. [Minimum_Problem_NLL.pdf](https://github.com/root-project/root/files/6383379/Minimum_Problem_NLL.pdf). A minimum reproducible example is given here :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemNLL. (github prevents to attach a .C file : it would be useful to authorize it if we wish to keep persistent minimum examples for the future). Remark : the anomaly would not have consequence for the result of a fit. But if the bin size would be variable, maybe there would be (I don't know). Anyway, there is incompatibility of treatment of the bin size for the total of the pdf and the value of pdf in a given bin. ### Expected behavior. the expected value is given in the example : roofit does not find the mathematical correct value because it forgets to multiply by the bin size for the ""sum part"" (while it does not forget to multipl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8005
https://github.com/root-project/root/issues/8005:1671,interoperability,incompatib,incompatibility,1671,"the same result (probably they use the same internal function). *The nll is computed ""by hand"" :. -I could reproduce exactly the value of nll of roofit if I ""forget"" to multiply the pdf by the bin size *only in the sum part* of the likelihood formula. -If I compute it in what I think is ""correct"", I could not find the value obtain by roofit. Hypothesis of explanation : createNLL does not anticipate the possibility of binned pdf. More details : pdf : 3 slides. [Minimum_Problem_NLL.pdf](https://github.com/root-project/root/files/6383379/Minimum_Problem_NLL.pdf). A minimum reproducible example is given here :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemNLL. (github prevents to attach a .C file : it would be useful to authorize it if we wish to keep persistent minimum examples for the future). Remark : the anomaly would not have consequence for the result of a fit. But if the bin size would be variable, maybe there would be (I don't know). Anyway, there is incompatibility of treatment of the bin size for the total of the pdf and the value of pdf in a given bin. ### Expected behavior. the expected value is given in the example : roofit does not find the mathematical correct value because it forgets to multiply by the bin size for the ""sum part"" (while it does not forget to multiply by the bin size for the ""total prediction"" part. ### To Reproduce. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. a) put : do_mistake_computation_find_official_roofit_value=1 for reproducing the result of roofit. b) put do_mistake_computation_find_official_roofit_value=0 for reproducing what I think is the correct value (different to the one of roofit). 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... root -b Minimum.C+. ### Setup. 1. ROOT version : 6.18.00. 2. Operating system : windows (session unix from mobaxterm). 3. How you obtained ROOT, such as `dnf install` / ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8005
https://github.com/root-project/root/issues/8005:1607,modifiability,variab,variable,1607,"hement). *The nll is computed by roofit, with two methods that give the same result (probably they use the same internal function). *The nll is computed ""by hand"" :. -I could reproduce exactly the value of nll of roofit if I ""forget"" to multiply the pdf by the bin size *only in the sum part* of the likelihood formula. -If I compute it in what I think is ""correct"", I could not find the value obtain by roofit. Hypothesis of explanation : createNLL does not anticipate the possibility of binned pdf. More details : pdf : 3 slides. [Minimum_Problem_NLL.pdf](https://github.com/root-project/root/files/6383379/Minimum_Problem_NLL.pdf). A minimum reproducible example is given here :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemNLL. (github prevents to attach a .C file : it would be useful to authorize it if we wish to keep persistent minimum examples for the future). Remark : the anomaly would not have consequence for the result of a fit. But if the bin size would be variable, maybe there would be (I don't know). Anyway, there is incompatibility of treatment of the bin size for the total of the pdf and the value of pdf in a given bin. ### Expected behavior. the expected value is given in the example : roofit does not find the mathematical correct value because it forgets to multiply by the bin size for the ""sum part"" (while it does not forget to multiply by the bin size for the ""total prediction"" part. ### To Reproduce. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. a) put : do_mistake_computation_find_official_roofit_value=1 for reproducing the result of roofit. b) put do_mistake_computation_find_official_roofit_value=0 for reproducing what I think is the correct value (different to the one of roofit). 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... root -b Minimum.C+. ### Setup. 1. ROOT version : 6.18.00. 2. Operating system : windows (session unix",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8005
https://github.com/root-project/root/issues/8005:2549,modifiability,version,version,2549,"ll of roofit if I ""forget"" to multiply the pdf by the bin size *only in the sum part* of the likelihood formula. -If I compute it in what I think is ""correct"", I could not find the value obtain by roofit. Hypothesis of explanation : createNLL does not anticipate the possibility of binned pdf. More details : pdf : 3 slides. [Minimum_Problem_NLL.pdf](https://github.com/root-project/root/files/6383379/Minimum_Problem_NLL.pdf). A minimum reproducible example is given here :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemNLL. (github prevents to attach a .C file : it would be useful to authorize it if we wish to keep persistent minimum examples for the future). Remark : the anomaly would not have consequence for the result of a fit. But if the bin size would be variable, maybe there would be (I don't know). Anyway, there is incompatibility of treatment of the bin size for the total of the pdf and the value of pdf in a given bin. ### Expected behavior. the expected value is given in the example : roofit does not find the mathematical correct value because it forgets to multiply by the bin size for the ""sum part"" (while it does not forget to multiply by the bin size for the ""total prediction"" part. ### To Reproduce. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. a) put : do_mistake_computation_find_official_roofit_value=1 for reproducing the result of roofit. b) put do_mistake_computation_find_official_roofit_value=0 for reproducing what I think is the correct value (different to the one of roofit). 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... root -b Minimum.C+. ### Setup. 1. ROOT version : 6.18.00. 2. Operating system : windows (session unix from mobaxterm). 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. installed by experts on the french cluster of computers (cc in2p3, France). ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8005
https://github.com/root-project/root/issues/8005:1061,reliability,doe,does,1061,"in size different to one; Hello. Please find below a problem with createNLL. ### Describe the bug. A flat histogram is constructed for continuum while signal is constructed as a small peak in the center of the m_yy distribution. The pseudo-data is constructed from them, while the total pdf is constructed from them as well. (so pseudo-data is exactly the same as pdf). On purpose to illustrate the problem, I take a bin size of 5 GeV (else the problem will not appear, which appears to be normal due to the technical explanation given in the attachement). *The nll is computed by roofit, with two methods that give the same result (probably they use the same internal function). *The nll is computed ""by hand"" :. -I could reproduce exactly the value of nll of roofit if I ""forget"" to multiply the pdf by the bin size *only in the sum part* of the likelihood formula. -If I compute it in what I think is ""correct"", I could not find the value obtain by roofit. Hypothesis of explanation : createNLL does not anticipate the possibility of binned pdf. More details : pdf : 3 slides. [Minimum_Problem_NLL.pdf](https://github.com/root-project/root/files/6383379/Minimum_Problem_NLL.pdf). A minimum reproducible example is given here :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemNLL. (github prevents to attach a .C file : it would be useful to authorize it if we wish to keep persistent minimum examples for the future). Remark : the anomaly would not have consequence for the result of a fit. But if the bin size would be variable, maybe there would be (I don't know). Anyway, there is incompatibility of treatment of the bin size for the total of the pdf and the value of pdf in a given bin. ### Expected behavior. the expected value is given in the example : roofit does not find the mathematical correct value because it forgets to multiply by the bin size for the ""sum part"" (while it does not forget to multiply by the bin size for the ""total prediction"" part. ### To Repro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8005
https://github.com/root-project/root/issues/8005:1135,reliability,sli,slides,1135,". ### Describe the bug. A flat histogram is constructed for continuum while signal is constructed as a small peak in the center of the m_yy distribution. The pseudo-data is constructed from them, while the total pdf is constructed from them as well. (so pseudo-data is exactly the same as pdf). On purpose to illustrate the problem, I take a bin size of 5 GeV (else the problem will not appear, which appears to be normal due to the technical explanation given in the attachement). *The nll is computed by roofit, with two methods that give the same result (probably they use the same internal function). *The nll is computed ""by hand"" :. -I could reproduce exactly the value of nll of roofit if I ""forget"" to multiply the pdf by the bin size *only in the sum part* of the likelihood formula. -If I compute it in what I think is ""correct"", I could not find the value obtain by roofit. Hypothesis of explanation : createNLL does not anticipate the possibility of binned pdf. More details : pdf : 3 slides. [Minimum_Problem_NLL.pdf](https://github.com/root-project/root/files/6383379/Minimum_Problem_NLL.pdf). A minimum reproducible example is given here :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemNLL. (github prevents to attach a .C file : it would be useful to authorize it if we wish to keep persistent minimum examples for the future). Remark : the anomaly would not have consequence for the result of a fit. But if the bin size would be variable, maybe there would be (I don't know). Anyway, there is incompatibility of treatment of the bin size for the total of the pdf and the value of pdf in a given bin. ### Expected behavior. the expected value is given in the example : roofit does not find the mathematical correct value because it forgets to multiply by the bin size for the ""sum part"" (while it does not forget to multiply by the bin size for the ""total prediction"" part. ### To Reproduce. Steps to reproduce the behavior:. 1. Your code that triggers the issu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8005
https://github.com/root-project/root/issues/8005:1518,reliability,anomal,anomaly,1518,"ot appear, which appears to be normal due to the technical explanation given in the attachement). *The nll is computed by roofit, with two methods that give the same result (probably they use the same internal function). *The nll is computed ""by hand"" :. -I could reproduce exactly the value of nll of roofit if I ""forget"" to multiply the pdf by the bin size *only in the sum part* of the likelihood formula. -If I compute it in what I think is ""correct"", I could not find the value obtain by roofit. Hypothesis of explanation : createNLL does not anticipate the possibility of binned pdf. More details : pdf : 3 slides. [Minimum_Problem_NLL.pdf](https://github.com/root-project/root/files/6383379/Minimum_Problem_NLL.pdf). A minimum reproducible example is given here :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemNLL. (github prevents to attach a .C file : it would be useful to authorize it if we wish to keep persistent minimum examples for the future). Remark : the anomaly would not have consequence for the result of a fit. But if the bin size would be variable, maybe there would be (I don't know). Anyway, there is incompatibility of treatment of the bin size for the total of the pdf and the value of pdf in a given bin. ### Expected behavior. the expected value is given in the example : roofit does not find the mathematical correct value because it forgets to multiply by the bin size for the ""sum part"" (while it does not forget to multiply by the bin size for the ""total prediction"" part. ### To Reproduce. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. a) put : do_mistake_computation_find_official_roofit_value=1 for reproducing the result of roofit. b) put do_mistake_computation_find_official_roofit_value=0 for reproducing what I think is the correct value (different to the one of roofit). 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... root -b Mini",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8005
https://github.com/root-project/root/issues/8005:1853,reliability,doe,does,1853,"ll of roofit if I ""forget"" to multiply the pdf by the bin size *only in the sum part* of the likelihood formula. -If I compute it in what I think is ""correct"", I could not find the value obtain by roofit. Hypothesis of explanation : createNLL does not anticipate the possibility of binned pdf. More details : pdf : 3 slides. [Minimum_Problem_NLL.pdf](https://github.com/root-project/root/files/6383379/Minimum_Problem_NLL.pdf). A minimum reproducible example is given here :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemNLL. (github prevents to attach a .C file : it would be useful to authorize it if we wish to keep persistent minimum examples for the future). Remark : the anomaly would not have consequence for the result of a fit. But if the bin size would be variable, maybe there would be (I don't know). Anyway, there is incompatibility of treatment of the bin size for the total of the pdf and the value of pdf in a given bin. ### Expected behavior. the expected value is given in the example : roofit does not find the mathematical correct value because it forgets to multiply by the bin size for the ""sum part"" (while it does not forget to multiply by the bin size for the ""total prediction"" part. ### To Reproduce. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. a) put : do_mistake_computation_find_official_roofit_value=1 for reproducing the result of roofit. b) put do_mistake_computation_find_official_roofit_value=0 for reproducing what I think is the correct value (different to the one of roofit). 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... root -b Minimum.C+. ### Setup. 1. ROOT version : 6.18.00. 2. Operating system : windows (session unix from mobaxterm). 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. installed by experts on the french cluster of computers (cc in2p3, France). ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8005
https://github.com/root-project/root/issues/8005:1974,reliability,doe,does,1974,"ll of roofit if I ""forget"" to multiply the pdf by the bin size *only in the sum part* of the likelihood formula. -If I compute it in what I think is ""correct"", I could not find the value obtain by roofit. Hypothesis of explanation : createNLL does not anticipate the possibility of binned pdf. More details : pdf : 3 slides. [Minimum_Problem_NLL.pdf](https://github.com/root-project/root/files/6383379/Minimum_Problem_NLL.pdf). A minimum reproducible example is given here :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemNLL. (github prevents to attach a .C file : it would be useful to authorize it if we wish to keep persistent minimum examples for the future). Remark : the anomaly would not have consequence for the result of a fit. But if the bin size would be variable, maybe there would be (I don't know). Anyway, there is incompatibility of treatment of the bin size for the total of the pdf and the value of pdf in a given bin. ### Expected behavior. the expected value is given in the example : roofit does not find the mathematical correct value because it forgets to multiply by the bin size for the ""sum part"" (while it does not forget to multiply by the bin size for the ""total prediction"" part. ### To Reproduce. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. a) put : do_mistake_computation_find_official_roofit_value=1 for reproducing the result of roofit. b) put do_mistake_computation_find_official_roofit_value=0 for reproducing what I think is the correct value (different to the one of roofit). 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... root -b Minimum.C+. ### Setup. 1. ROOT version : 6.18.00. 2. Operating system : windows (session unix from mobaxterm). 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. installed by experts on the french cluster of computers (cc in2p3, France). ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8005
https://github.com/root-project/root/issues/8005:1375,safety,prevent,prevents,1375,"as well. (so pseudo-data is exactly the same as pdf). On purpose to illustrate the problem, I take a bin size of 5 GeV (else the problem will not appear, which appears to be normal due to the technical explanation given in the attachement). *The nll is computed by roofit, with two methods that give the same result (probably they use the same internal function). *The nll is computed ""by hand"" :. -I could reproduce exactly the value of nll of roofit if I ""forget"" to multiply the pdf by the bin size *only in the sum part* of the likelihood formula. -If I compute it in what I think is ""correct"", I could not find the value obtain by roofit. Hypothesis of explanation : createNLL does not anticipate the possibility of binned pdf. More details : pdf : 3 slides. [Minimum_Problem_NLL.pdf](https://github.com/root-project/root/files/6383379/Minimum_Problem_NLL.pdf). A minimum reproducible example is given here :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemNLL. (github prevents to attach a .C file : it would be useful to authorize it if we wish to keep persistent minimum examples for the future). Remark : the anomaly would not have consequence for the result of a fit. But if the bin size would be variable, maybe there would be (I don't know). Anyway, there is incompatibility of treatment of the bin size for the total of the pdf and the value of pdf in a given bin. ### Expected behavior. the expected value is given in the example : roofit does not find the mathematical correct value because it forgets to multiply by the bin size for the ""sum part"" (while it does not forget to multiply by the bin size for the ""total prediction"" part. ### To Reproduce. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. a) put : do_mistake_computation_find_official_roofit_value=1 for reproducing the result of roofit. b) put do_mistake_computation_find_official_roofit_value=0 for reproducing what I ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8005
https://github.com/root-project/root/issues/8005:1518,safety,anomal,anomaly,1518,"ot appear, which appears to be normal due to the technical explanation given in the attachement). *The nll is computed by roofit, with two methods that give the same result (probably they use the same internal function). *The nll is computed ""by hand"" :. -I could reproduce exactly the value of nll of roofit if I ""forget"" to multiply the pdf by the bin size *only in the sum part* of the likelihood formula. -If I compute it in what I think is ""correct"", I could not find the value obtain by roofit. Hypothesis of explanation : createNLL does not anticipate the possibility of binned pdf. More details : pdf : 3 slides. [Minimum_Problem_NLL.pdf](https://github.com/root-project/root/files/6383379/Minimum_Problem_NLL.pdf). A minimum reproducible example is given here :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemNLL. (github prevents to attach a .C file : it would be useful to authorize it if we wish to keep persistent minimum examples for the future). Remark : the anomaly would not have consequence for the result of a fit. But if the bin size would be variable, maybe there would be (I don't know). Anyway, there is incompatibility of treatment of the bin size for the total of the pdf and the value of pdf in a given bin. ### Expected behavior. the expected value is given in the example : roofit does not find the mathematical correct value because it forgets to multiply by the bin size for the ""sum part"" (while it does not forget to multiply by the bin size for the ""total prediction"" part. ### To Reproduce. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. a) put : do_mistake_computation_find_official_roofit_value=1 for reproducing the result of roofit. b) put do_mistake_computation_find_official_roofit_value=0 for reproducing what I think is the correct value (different to the one of roofit). 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... root -b Mini",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8005
https://github.com/root-project/root/issues/8005:2033,safety,predict,prediction,2033,"ll of roofit if I ""forget"" to multiply the pdf by the bin size *only in the sum part* of the likelihood formula. -If I compute it in what I think is ""correct"", I could not find the value obtain by roofit. Hypothesis of explanation : createNLL does not anticipate the possibility of binned pdf. More details : pdf : 3 slides. [Minimum_Problem_NLL.pdf](https://github.com/root-project/root/files/6383379/Minimum_Problem_NLL.pdf). A minimum reproducible example is given here :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemNLL. (github prevents to attach a .C file : it would be useful to authorize it if we wish to keep persistent minimum examples for the future). Remark : the anomaly would not have consequence for the result of a fit. But if the bin size would be variable, maybe there would be (I don't know). Anyway, there is incompatibility of treatment of the bin size for the total of the pdf and the value of pdf in a given bin. ### Expected behavior. the expected value is given in the example : roofit does not find the mathematical correct value because it forgets to multiply by the bin size for the ""sum part"" (while it does not forget to multiply by the bin size for the ""total prediction"" part. ### To Reproduce. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. a) put : do_mistake_computation_find_official_roofit_value=1 for reproducing the result of roofit. b) put do_mistake_computation_find_official_roofit_value=0 for reproducing what I think is the correct value (different to the one of roofit). 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... root -b Minimum.C+. ### Setup. 1. ROOT version : 6.18.00. 2. Operating system : windows (session unix from mobaxterm). 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. installed by experts on the french cluster of computers (cc in2p3, France). ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8005
https://github.com/root-project/root/issues/8005:214,security,sign,signal,214,"[RF] RooAbsPdf::createNLL gives wrong NLL for binned pdf with bin size different to one; Hello. Please find below a problem with createNLL. ### Describe the bug. A flat histogram is constructed for continuum while signal is constructed as a small peak in the center of the m_yy distribution. The pseudo-data is constructed from them, while the total pdf is constructed from them as well. (so pseudo-data is exactly the same as pdf). On purpose to illustrate the problem, I take a bin size of 5 GeV (else the problem will not appear, which appears to be normal due to the technical explanation given in the attachement). *The nll is computed by roofit, with two methods that give the same result (probably they use the same internal function). *The nll is computed ""by hand"" :. -I could reproduce exactly the value of nll of roofit if I ""forget"" to multiply the pdf by the bin size *only in the sum part* of the likelihood formula. -If I compute it in what I think is ""correct"", I could not find the value obtain by roofit. Hypothesis of explanation : createNLL does not anticipate the possibility of binned pdf. More details : pdf : 3 slides. [Minimum_Problem_NLL.pdf](https://github.com/root-project/root/files/6383379/Minimum_Problem_NLL.pdf). A minimum reproducible example is given here :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemNLL. (github prevents to attach a .C file : it would be useful to authorize it if we wish to keep persistent minimum examples for the future). Remark : the anomaly would not have consequence for the result of a fit. But if the bin size would be variable, maybe there would be (I don't know). Anyway, there is incompatibility of treatment of the bin size for the total of the pdf and the value of pdf in a given bin. ### Expected behavior. the expected value is given in the example : roofit does not find the mathematical correct value because it forgets to multiply by the bin size for the ""sum part"" (while it does not forget to multipl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8005
https://github.com/root-project/root/issues/8005:1314,security,escal,escalier,1314,"cted from them, while the total pdf is constructed from them as well. (so pseudo-data is exactly the same as pdf). On purpose to illustrate the problem, I take a bin size of 5 GeV (else the problem will not appear, which appears to be normal due to the technical explanation given in the attachement). *The nll is computed by roofit, with two methods that give the same result (probably they use the same internal function). *The nll is computed ""by hand"" :. -I could reproduce exactly the value of nll of roofit if I ""forget"" to multiply the pdf by the bin size *only in the sum part* of the likelihood formula. -If I compute it in what I think is ""correct"", I could not find the value obtain by roofit. Hypothesis of explanation : createNLL does not anticipate the possibility of binned pdf. More details : pdf : 3 slides. [Minimum_Problem_NLL.pdf](https://github.com/root-project/root/files/6383379/Minimum_Problem_NLL.pdf). A minimum reproducible example is given here :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemNLL. (github prevents to attach a .C file : it would be useful to authorize it if we wish to keep persistent minimum examples for the future). Remark : the anomaly would not have consequence for the result of a fit. But if the bin size would be variable, maybe there would be (I don't know). Anyway, there is incompatibility of treatment of the bin size for the total of the pdf and the value of pdf in a given bin. ### Expected behavior. the expected value is given in the example : roofit does not find the mathematical correct value because it forgets to multiply by the bin size for the ""sum part"" (while it does not forget to multiply by the bin size for the ""total prediction"" part. ### To Reproduce. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. a) put : do_mistake_computation_find_official_roofit_value=1 for reproducing the result of roofit. b) put do_mistake_com",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8005
https://github.com/root-project/root/issues/8005:1375,security,preven,prevents,1375,"as well. (so pseudo-data is exactly the same as pdf). On purpose to illustrate the problem, I take a bin size of 5 GeV (else the problem will not appear, which appears to be normal due to the technical explanation given in the attachement). *The nll is computed by roofit, with two methods that give the same result (probably they use the same internal function). *The nll is computed ""by hand"" :. -I could reproduce exactly the value of nll of roofit if I ""forget"" to multiply the pdf by the bin size *only in the sum part* of the likelihood formula. -If I compute it in what I think is ""correct"", I could not find the value obtain by roofit. Hypothesis of explanation : createNLL does not anticipate the possibility of binned pdf. More details : pdf : 3 slides. [Minimum_Problem_NLL.pdf](https://github.com/root-project/root/files/6383379/Minimum_Problem_NLL.pdf). A minimum reproducible example is given here :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemNLL. (github prevents to attach a .C file : it would be useful to authorize it if we wish to keep persistent minimum examples for the future). Remark : the anomaly would not have consequence for the result of a fit. But if the bin size would be variable, maybe there would be (I don't know). Anyway, there is incompatibility of treatment of the bin size for the total of the pdf and the value of pdf in a given bin. ### Expected behavior. the expected value is given in the example : roofit does not find the mathematical correct value because it forgets to multiply by the bin size for the ""sum part"" (while it does not forget to multiply by the bin size for the ""total prediction"" part. ### To Reproduce. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. a) put : do_mistake_computation_find_official_roofit_value=1 for reproducing the result of roofit. b) put do_mistake_computation_find_official_roofit_value=0 for reproducing what I ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8005
https://github.com/root-project/root/issues/8005:1428,security,authoriz,authorize,1428,"On purpose to illustrate the problem, I take a bin size of 5 GeV (else the problem will not appear, which appears to be normal due to the technical explanation given in the attachement). *The nll is computed by roofit, with two methods that give the same result (probably they use the same internal function). *The nll is computed ""by hand"" :. -I could reproduce exactly the value of nll of roofit if I ""forget"" to multiply the pdf by the bin size *only in the sum part* of the likelihood formula. -If I compute it in what I think is ""correct"", I could not find the value obtain by roofit. Hypothesis of explanation : createNLL does not anticipate the possibility of binned pdf. More details : pdf : 3 slides. [Minimum_Problem_NLL.pdf](https://github.com/root-project/root/files/6383379/Minimum_Problem_NLL.pdf). A minimum reproducible example is given here :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemNLL. (github prevents to attach a .C file : it would be useful to authorize it if we wish to keep persistent minimum examples for the future). Remark : the anomaly would not have consequence for the result of a fit. But if the bin size would be variable, maybe there would be (I don't know). Anyway, there is incompatibility of treatment of the bin size for the total of the pdf and the value of pdf in a given bin. ### Expected behavior. the expected value is given in the example : roofit does not find the mathematical correct value because it forgets to multiply by the bin size for the ""sum part"" (while it does not forget to multiply by the bin size for the ""total prediction"" part. ### To Reproduce. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. a) put : do_mistake_computation_find_official_roofit_value=1 for reproducing the result of roofit. b) put do_mistake_computation_find_official_roofit_value=0 for reproducing what I think is the correct value (different to the one of ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8005
https://github.com/root-project/root/issues/8005:2599,security,session,session,2599,"ll of roofit if I ""forget"" to multiply the pdf by the bin size *only in the sum part* of the likelihood formula. -If I compute it in what I think is ""correct"", I could not find the value obtain by roofit. Hypothesis of explanation : createNLL does not anticipate the possibility of binned pdf. More details : pdf : 3 slides. [Minimum_Problem_NLL.pdf](https://github.com/root-project/root/files/6383379/Minimum_Problem_NLL.pdf). A minimum reproducible example is given here :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemNLL. (github prevents to attach a .C file : it would be useful to authorize it if we wish to keep persistent minimum examples for the future). Remark : the anomaly would not have consequence for the result of a fit. But if the bin size would be variable, maybe there would be (I don't know). Anyway, there is incompatibility of treatment of the bin size for the total of the pdf and the value of pdf in a given bin. ### Expected behavior. the expected value is given in the example : roofit does not find the mathematical correct value because it forgets to multiply by the bin size for the ""sum part"" (while it does not forget to multiply by the bin size for the ""total prediction"" part. ### To Reproduce. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. a) put : do_mistake_computation_find_official_roofit_value=1 for reproducing the result of roofit. b) put do_mistake_computation_find_official_roofit_value=0 for reproducing what I think is the correct value (different to the one of roofit). 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... root -b Minimum.C+. ### Setup. 1. ROOT version : 6.18.00. 2. Operating system : windows (session unix from mobaxterm). 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. installed by experts on the french cluster of computers (cc in2p3, France). ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8005
https://github.com/root-project/root/issues/8005:2811,testability,context,context,2811,"ll of roofit if I ""forget"" to multiply the pdf by the bin size *only in the sum part* of the likelihood formula. -If I compute it in what I think is ""correct"", I could not find the value obtain by roofit. Hypothesis of explanation : createNLL does not anticipate the possibility of binned pdf. More details : pdf : 3 slides. [Minimum_Problem_NLL.pdf](https://github.com/root-project/root/files/6383379/Minimum_Problem_NLL.pdf). A minimum reproducible example is given here :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemNLL. (github prevents to attach a .C file : it would be useful to authorize it if we wish to keep persistent minimum examples for the future). Remark : the anomaly would not have consequence for the result of a fit. But if the bin size would be variable, maybe there would be (I don't know). Anyway, there is incompatibility of treatment of the bin size for the total of the pdf and the value of pdf in a given bin. ### Expected behavior. the expected value is given in the example : roofit does not find the mathematical correct value because it forgets to multiply by the bin size for the ""sum part"" (while it does not forget to multiply by the bin size for the ""total prediction"" part. ### To Reproduce. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. a) put : do_mistake_computation_find_official_roofit_value=1 for reproducing the result of roofit. b) put do_mistake_computation_find_official_roofit_value=0 for reproducing what I think is the correct value (different to the one of roofit). 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... root -b Minimum.C+. ### Setup. 1. ROOT version : 6.18.00. 2. Operating system : windows (session unix from mobaxterm). 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. installed by experts on the french cluster of computers (cc in2p3, France). ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8005
https://github.com/root-project/root/issues/8005:1248,usability,minim,minimum,1248,"in the center of the m_yy distribution. The pseudo-data is constructed from them, while the total pdf is constructed from them as well. (so pseudo-data is exactly the same as pdf). On purpose to illustrate the problem, I take a bin size of 5 GeV (else the problem will not appear, which appears to be normal due to the technical explanation given in the attachement). *The nll is computed by roofit, with two methods that give the same result (probably they use the same internal function). *The nll is computed ""by hand"" :. -I could reproduce exactly the value of nll of roofit if I ""forget"" to multiply the pdf by the bin size *only in the sum part* of the likelihood formula. -If I compute it in what I think is ""correct"", I could not find the value obtain by roofit. Hypothesis of explanation : createNLL does not anticipate the possibility of binned pdf. More details : pdf : 3 slides. [Minimum_Problem_NLL.pdf](https://github.com/root-project/root/files/6383379/Minimum_Problem_NLL.pdf). A minimum reproducible example is given here :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemNLL. (github prevents to attach a .C file : it would be useful to authorize it if we wish to keep persistent minimum examples for the future). Remark : the anomaly would not have consequence for the result of a fit. But if the bin size would be variable, maybe there would be (I don't know). Anyway, there is incompatibility of treatment of the bin size for the total of the pdf and the value of pdf in a given bin. ### Expected behavior. the expected value is given in the example : roofit does not find the mathematical correct value because it forgets to multiply by the bin size for the ""sum part"" (while it does not forget to multiply by the bin size for the ""total prediction"" part. ### To Reproduce. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. a) put : do_mistake_computation_find_official_roofit_v",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8005
https://github.com/root-project/root/issues/8005:1471,usability,minim,minimum,1471,"ke a bin size of 5 GeV (else the problem will not appear, which appears to be normal due to the technical explanation given in the attachement). *The nll is computed by roofit, with two methods that give the same result (probably they use the same internal function). *The nll is computed ""by hand"" :. -I could reproduce exactly the value of nll of roofit if I ""forget"" to multiply the pdf by the bin size *only in the sum part* of the likelihood formula. -If I compute it in what I think is ""correct"", I could not find the value obtain by roofit. Hypothesis of explanation : createNLL does not anticipate the possibility of binned pdf. More details : pdf : 3 slides. [Minimum_Problem_NLL.pdf](https://github.com/root-project/root/files/6383379/Minimum_Problem_NLL.pdf). A minimum reproducible example is given here :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemNLL. (github prevents to attach a .C file : it would be useful to authorize it if we wish to keep persistent minimum examples for the future). Remark : the anomaly would not have consequence for the result of a fit. But if the bin size would be variable, maybe there would be (I don't know). Anyway, there is incompatibility of treatment of the bin size for the total of the pdf and the value of pdf in a given bin. ### Expected behavior. the expected value is given in the example : roofit does not find the mathematical correct value because it forgets to multiply by the bin size for the ""sum part"" (while it does not forget to multiply by the bin size for the ""total prediction"" part. ### To Reproduce. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. a) put : do_mistake_computation_find_official_roofit_value=1 for reproducing the result of roofit. b) put do_mistake_computation_find_official_roofit_value=0 for reproducing what I think is the correct value (different to the one of roofit). 3. How to run your code and / or bu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8005
https://github.com/root-project/root/issues/8005:1791,usability,behavi,behavior,1791," exactly the value of nll of roofit if I ""forget"" to multiply the pdf by the bin size *only in the sum part* of the likelihood formula. -If I compute it in what I think is ""correct"", I could not find the value obtain by roofit. Hypothesis of explanation : createNLL does not anticipate the possibility of binned pdf. More details : pdf : 3 slides. [Minimum_Problem_NLL.pdf](https://github.com/root-project/root/files/6383379/Minimum_Problem_NLL.pdf). A minimum reproducible example is given here :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemNLL. (github prevents to attach a .C file : it would be useful to authorize it if we wish to keep persistent minimum examples for the future). Remark : the anomaly would not have consequence for the result of a fit. But if the bin size would be variable, maybe there would be (I don't know). Anyway, there is incompatibility of treatment of the bin size for the total of the pdf and the value of pdf in a given bin. ### Expected behavior. the expected value is given in the example : roofit does not find the mathematical correct value because it forgets to multiply by the bin size for the ""sum part"" (while it does not forget to multiply by the bin size for the ""total prediction"" part. ### To Reproduce. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. a) put : do_mistake_computation_find_official_roofit_value=1 for reproducing the result of roofit. b) put do_mistake_computation_find_official_roofit_value=0 for reproducing what I think is the correct value (different to the one of roofit). 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... root -b Minimum.C+. ### Setup. 1. ROOT version : 6.18.00. 2. Operating system : windows (session unix from mobaxterm). 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. installed by experts on the french cluster of computers (cc in2p3, France).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8005
https://github.com/root-project/root/issues/8005:2092,usability,behavi,behavior,2092,"ll of roofit if I ""forget"" to multiply the pdf by the bin size *only in the sum part* of the likelihood formula. -If I compute it in what I think is ""correct"", I could not find the value obtain by roofit. Hypothesis of explanation : createNLL does not anticipate the possibility of binned pdf. More details : pdf : 3 slides. [Minimum_Problem_NLL.pdf](https://github.com/root-project/root/files/6383379/Minimum_Problem_NLL.pdf). A minimum reproducible example is given here :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemNLL. (github prevents to attach a .C file : it would be useful to authorize it if we wish to keep persistent minimum examples for the future). Remark : the anomaly would not have consequence for the result of a fit. But if the bin size would be variable, maybe there would be (I don't know). Anyway, there is incompatibility of treatment of the bin size for the total of the pdf and the value of pdf in a given bin. ### Expected behavior. the expected value is given in the example : roofit does not find the mathematical correct value because it forgets to multiply by the bin size for the ""sum part"" (while it does not forget to multiply by the bin size for the ""total prediction"" part. ### To Reproduce. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. a) put : do_mistake_computation_find_official_roofit_value=1 for reproducing the result of roofit. b) put do_mistake_computation_find_official_roofit_value=0 for reproducing what I think is the correct value (different to the one of roofit). 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... root -b Minimum.C+. ### Setup. 1. ROOT version : 6.18.00. 2. Operating system : windows (session unix from mobaxterm). 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. installed by experts on the french cluster of computers (cc in2p3, France). ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8005
https://github.com/root-project/root/issues/8005:2518,usability,Minim,Minimum,2518,"ll of roofit if I ""forget"" to multiply the pdf by the bin size *only in the sum part* of the likelihood formula. -If I compute it in what I think is ""correct"", I could not find the value obtain by roofit. Hypothesis of explanation : createNLL does not anticipate the possibility of binned pdf. More details : pdf : 3 slides. [Minimum_Problem_NLL.pdf](https://github.com/root-project/root/files/6383379/Minimum_Problem_NLL.pdf). A minimum reproducible example is given here :. /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemNLL. (github prevents to attach a .C file : it would be useful to authorize it if we wish to keep persistent minimum examples for the future). Remark : the anomaly would not have consequence for the result of a fit. But if the bin size would be variable, maybe there would be (I don't know). Anyway, there is incompatibility of treatment of the bin size for the total of the pdf and the value of pdf in a given bin. ### Expected behavior. the expected value is given in the example : roofit does not find the mathematical correct value because it forgets to multiply by the bin size for the ""sum part"" (while it does not forget to multiply by the bin size for the ""total prediction"" part. ### To Reproduce. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. a) put : do_mistake_computation_find_official_roofit_value=1 for reproducing the result of roofit. b) put do_mistake_computation_find_official_roofit_value=0 for reproducing what I think is the correct value (different to the one of roofit). 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... root -b Minimum.C+. ### Setup. 1. ROOT version : 6.18.00. 2. Operating system : windows (session unix from mobaxterm). 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. installed by experts on the french cluster of computers (cc in2p3, France). ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8005
https://github.com/root-project/root/pull/8006:68,availability,operat,operation,68,"[cmake] Tell llvm not to generate VCSRevision.h:; Virtually any git operation will trigger a regeneration of VCSRevision.h. As cling, dictionaries, and libraries depend on this file, we need to. *not* regenerate it - we won't need it anyway.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8006
https://github.com/root-project/root/pull/8006:162,deployability,depend,depend,162,"[cmake] Tell llvm not to generate VCSRevision.h:; Virtually any git operation will trigger a regeneration of VCSRevision.h. As cling, dictionaries, and libraries depend on this file, we need to. *not* regenerate it - we won't need it anyway.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8006
https://github.com/root-project/root/pull/8006:162,integrability,depend,depend,162,"[cmake] Tell llvm not to generate VCSRevision.h:; Virtually any git operation will trigger a regeneration of VCSRevision.h. As cling, dictionaries, and libraries depend on this file, we need to. *not* regenerate it - we won't need it anyway.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8006
https://github.com/root-project/root/pull/8006:162,modifiability,depend,depend,162,"[cmake] Tell llvm not to generate VCSRevision.h:; Virtually any git operation will trigger a regeneration of VCSRevision.h. As cling, dictionaries, and libraries depend on this file, we need to. *not* regenerate it - we won't need it anyway.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8006
https://github.com/root-project/root/pull/8006:162,safety,depend,depend,162,"[cmake] Tell llvm not to generate VCSRevision.h:; Virtually any git operation will trigger a regeneration of VCSRevision.h. As cling, dictionaries, and libraries depend on this file, we need to. *not* regenerate it - we won't need it anyway.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8006
https://github.com/root-project/root/pull/8006:162,testability,depend,depend,162,"[cmake] Tell llvm not to generate VCSRevision.h:; Virtually any git operation will trigger a regeneration of VCSRevision.h. As cling, dictionaries, and libraries depend on this file, we need to. *not* regenerate it - we won't need it anyway.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8006
https://github.com/root-project/root/pull/8007:330,deployability,patch,patch,330,"[DF] Remove false sharing in RFilter, RDefine; Use larger vectors and access them more sparsely if needed (e.g. threads now access one every 16 elements in hot std::vector<int>. on systems where a cache line is 64 bytes). In some edge cases in which the analysis workload is light and/or many. threads (48, 64) are involved, this patch reduces runtimes by factors. The increase in memory usage should be little relative to the memory. required e.g. by jitting or by per-thread histograms.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8007
https://github.com/root-project/root/pull/8007:336,energy efficiency,reduc,reduces,336,"[DF] Remove false sharing in RFilter, RDefine; Use larger vectors and access them more sparsely if needed (e.g. threads now access one every 16 elements in hot std::vector<int>. on systems where a cache line is 64 bytes). In some edge cases in which the analysis workload is light and/or many. threads (48, 64) are involved, this patch reduces runtimes by factors. The increase in memory usage should be little relative to the memory. required e.g. by jitting or by per-thread histograms.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8007
https://github.com/root-project/root/pull/8007:197,performance,cach,cache,197,"[DF] Remove false sharing in RFilter, RDefine; Use larger vectors and access them more sparsely if needed (e.g. threads now access one every 16 elements in hot std::vector<int>. on systems where a cache line is 64 bytes). In some edge cases in which the analysis workload is light and/or many. threads (48, 64) are involved, this patch reduces runtimes by factors. The increase in memory usage should be little relative to the memory. required e.g. by jitting or by per-thread histograms.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8007
https://github.com/root-project/root/pull/8007:263,performance,workload,workload,263,"[DF] Remove false sharing in RFilter, RDefine; Use larger vectors and access them more sparsely if needed (e.g. threads now access one every 16 elements in hot std::vector<int>. on systems where a cache line is 64 bytes). In some edge cases in which the analysis workload is light and/or many. threads (48, 64) are involved, this patch reduces runtimes by factors. The increase in memory usage should be little relative to the memory. required e.g. by jitting or by per-thread histograms.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8007
https://github.com/root-project/root/pull/8007:381,performance,memor,memory,381,"[DF] Remove false sharing in RFilter, RDefine; Use larger vectors and access them more sparsely if needed (e.g. threads now access one every 16 elements in hot std::vector<int>. on systems where a cache line is 64 bytes). In some edge cases in which the analysis workload is light and/or many. threads (48, 64) are involved, this patch reduces runtimes by factors. The increase in memory usage should be little relative to the memory. required e.g. by jitting or by per-thread histograms.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8007
https://github.com/root-project/root/pull/8007:427,performance,memor,memory,427,"[DF] Remove false sharing in RFilter, RDefine; Use larger vectors and access them more sparsely if needed (e.g. threads now access one every 16 elements in hot std::vector<int>. on systems where a cache line is 64 bytes). In some edge cases in which the analysis workload is light and/or many. threads (48, 64) are involved, this patch reduces runtimes by factors. The increase in memory usage should be little relative to the memory. required e.g. by jitting or by per-thread histograms.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8007
https://github.com/root-project/root/pull/8007:156,safety,hot,hot,156,"[DF] Remove false sharing in RFilter, RDefine; Use larger vectors and access them more sparsely if needed (e.g. threads now access one every 16 elements in hot std::vector<int>. on systems where a cache line is 64 bytes). In some edge cases in which the analysis workload is light and/or many. threads (48, 64) are involved, this patch reduces runtimes by factors. The increase in memory usage should be little relative to the memory. required e.g. by jitting or by per-thread histograms.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8007
https://github.com/root-project/root/pull/8007:330,safety,patch,patch,330,"[DF] Remove false sharing in RFilter, RDefine; Use larger vectors and access them more sparsely if needed (e.g. threads now access one every 16 elements in hot std::vector<int>. on systems where a cache line is 64 bytes). In some edge cases in which the analysis workload is light and/or many. threads (48, 64) are involved, this patch reduces runtimes by factors. The increase in memory usage should be little relative to the memory. required e.g. by jitting or by per-thread histograms.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8007
https://github.com/root-project/root/pull/8007:70,security,access,access,70,"[DF] Remove false sharing in RFilter, RDefine; Use larger vectors and access them more sparsely if needed (e.g. threads now access one every 16 elements in hot std::vector<int>. on systems where a cache line is 64 bytes). In some edge cases in which the analysis workload is light and/or many. threads (48, 64) are involved, this patch reduces runtimes by factors. The increase in memory usage should be little relative to the memory. required e.g. by jitting or by per-thread histograms.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8007
https://github.com/root-project/root/pull/8007:124,security,access,access,124,"[DF] Remove false sharing in RFilter, RDefine; Use larger vectors and access them more sparsely if needed (e.g. threads now access one every 16 elements in hot std::vector<int>. on systems where a cache line is 64 bytes). In some edge cases in which the analysis workload is light and/or many. threads (48, 64) are involved, this patch reduces runtimes by factors. The increase in memory usage should be little relative to the memory. required e.g. by jitting or by per-thread histograms.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8007
https://github.com/root-project/root/pull/8007:330,security,patch,patch,330,"[DF] Remove false sharing in RFilter, RDefine; Use larger vectors and access them more sparsely if needed (e.g. threads now access one every 16 elements in hot std::vector<int>. on systems where a cache line is 64 bytes). In some edge cases in which the analysis workload is light and/or many. threads (48, 64) are involved, this patch reduces runtimes by factors. The increase in memory usage should be little relative to the memory. required e.g. by jitting or by per-thread histograms.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8007
https://github.com/root-project/root/pull/8007:381,usability,memor,memory,381,"[DF] Remove false sharing in RFilter, RDefine; Use larger vectors and access them more sparsely if needed (e.g. threads now access one every 16 elements in hot std::vector<int>. on systems where a cache line is 64 bytes). In some edge cases in which the analysis workload is light and/or many. threads (48, 64) are involved, this patch reduces runtimes by factors. The increase in memory usage should be little relative to the memory. required e.g. by jitting or by per-thread histograms.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8007
https://github.com/root-project/root/pull/8007:427,usability,memor,memory,427,"[DF] Remove false sharing in RFilter, RDefine; Use larger vectors and access them more sparsely if needed (e.g. threads now access one every 16 elements in hot std::vector<int>. on systems where a cache line is 64 bytes). In some edge cases in which the analysis workload is light and/or many. threads (48, 64) are involved, this patch reduces runtimes by factors. The increase in memory usage should be little relative to the memory. required e.g. by jitting or by per-thread histograms.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8007
https://github.com/root-project/root/issues/8008:871,availability,fault,fault,871,"Crash in TMutex::UnLock when using XrootD 5.1.1; - [ checked] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. We are trying to update the XrootD version to 5.1.1 :. https://github.com/cms-sw/cmsdist/pull/6831. but the test fails in the file open attempt. with this:. ```. 27-Apr-2021 13:36:43 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where. #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:6358,availability,Servic,ServiceToken,6358,"rameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #17 0x00007ffff7bc8eda in edm::EventProcessor::EventProcessor(std::shared_ptr<edm::ProcessDesc>, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (). #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105. #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (). #21 0x000000000040b62c in main (). ```. After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiSt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:6384,availability,servic,serviceregistry,6384,"tSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #17 0x00007ffff7bc8eda in edm::EventProcessor::EventProcessor(std::shared_ptr<edm::ProcessDesc>, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (). #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105. #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (). #21 0x000000000040b62c in main (). ```. After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTG",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:6401,availability,Servic,ServiceLegacy,6401,"on const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #17 0x00007ffff7bc8eda in edm::EventProcessor::EventProcessor(std::shared_ptr<edm::ProcessDesc>, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (). #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105. #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (). #21 0x000000000040b62c in main (). ```. After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:6638,availability,Servic,ServiceToken,6638,"putSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #17 0x00007ffff7bc8eda in edm::EventProcessor::EventProcessor(std::shared_ptr<edm::ProcessDesc>, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (). #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105. #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (). #21 0x000000000040b62c in main (). ```. After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A. Using Dataset: /ZeroBias/Run2018A-SiStripCalMinBias-12Nov2019_UL2018-v1/ALCARECO. 27-Apr-2021 14:00:10 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:6664,availability,servic,serviceregistry,6664," const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #17 0x00007ffff7bc8eda in edm::EventProcessor::EventProcessor(std::shared_ptr<edm::ProcessDesc>, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (). #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105. #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (). #21 0x000000000040b62c in main (). ```. After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A. Using Dataset: /ZeroBias/Run2018A-SiStripCalMinBias-12Nov2019_UL2018-v1/ALCARECO. 27-Apr-2021 14:00:10 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/26",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:6681,availability,Servic,ServiceLegacy,6681,"/build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #17 0x00007ffff7bc8eda in edm::EventProcessor::EventProcessor(std::shared_ptr<edm::ProcessDesc>, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (). #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105. #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (). #21 0x000000000040b62c in main (). ```. After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A. Using Dataset: /ZeroBias/Run2018A-SiStripCalMinBias-12Nov2019_UL2018-v1/ALCARECO. 27-Apr-2021 14:00:10 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:6908,availability,operat,operator,6908,"ctRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #17 0x00007ffff7bc8eda in edm::EventProcessor::EventProcessor(std::shared_ptr<edm::ProcessDesc>, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (). #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105. #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (). #21 0x000000000040b62c in main (). ```. After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A. Using Dataset: /ZeroBias/Run2018A-SiStripCalMinBias-12Nov2019_UL2018-v1/ALCARECO. 27-Apr-2021 14:00:10 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. 27-Apr-2021 14:00:12 CEST Successfully opened file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F45",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:6955,availability,operat,operator,6955,"elper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #17 0x00007ffff7bc8eda in edm::EventProcessor::EventProcessor(std::shared_ptr<edm::ProcessDesc>, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (). #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105. #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (). #21 0x000000000040b62c in main (). ```. After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A. Using Dataset: /ZeroBias/Run2018A-SiStripCalMinBias-12Nov2019_UL2018-v1/ALCARECO. 27-Apr-2021 14:00:10 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. 27-Apr-2021 14:00:12 CEST Successfully opened file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. %MSG-i SiStripGainsPCLWorker: S",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:7173,availability,operat,operator,7173,"local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #17 0x00007ffff7bc8eda in edm::EventProcessor::EventProcessor(std::shared_ptr<edm::ProcessDesc>, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (). #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105. #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (). #21 0x000000000040b62c in main (). ```. After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A. Using Dataset: /ZeroBias/Run2018A-SiStripCalMinBias-12Nov2019_UL2018-v1/ALCARECO. 27-Apr-2021 14:00:10 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. 27-Apr-2021 14:00:12 CEST Successfully opened file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. %MSG-i SiStripGainsPCLWorker: SiStripGainsPCLWorker:ALCARECOSiStripCalib@beginRun 27-Apr-2021 14:00:20 CEST Run: 315420. Resetting APV struct. %MSG. ```. this -> Successfully opened file root:// . and then working on the file. ### To Reproduce. Use ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:455,deployability,updat,update,455,"Crash in TMutex::UnLock when using XrootD 5.1.1; - [ checked] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. We are trying to update the XrootD version to 5.1.1 :. https://github.com/cms-sw/cmsdist/pull/6831. but the test fails in the file open attempt. with this:. ```. 27-Apr-2021 13:36:43 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where. #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:473,deployability,version,version,473,"Crash in TMutex::UnLock when using XrootD 5.1.1; - [ checked] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. We are trying to update the XrootD version to 5.1.1 :. https://github.com/cms-sw/cmsdist/pull/6831. but the test fails in the file open attempt. with this:. ```. 27-Apr-2021 13:36:43 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where. #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:551,deployability,fail,fails,551,"Crash in TMutex::UnLock when using XrootD 5.1.1; - [ checked] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. We are trying to update the XrootD version to 5.1.1 :. https://github.com/cms-sw/cmsdist/pull/6831. but the test fails in the file open attempt. with this:. ```. 27-Apr-2021 13:36:43 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where. #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:1001,deployability,BUILD,BUILD,1001,"h in TMutex::UnLock when using XrootD 5.1.1; - [ checked] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. We are trying to update the XrootD version to 5.1.1 :. https://github.com/cms-sw/cmsdist/pull/6831. but the test fails in the file open attempt. with this:. ```. 27-Apr-2021 13:36:43 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where. #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:1258,deployability,BUILD,BUILD,1258,"ting reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. We are trying to update the XrootD version to 5.1.1 :. https://github.com/cms-sw/cmsdist/pull/6831. but the test fails in the file open attempt. with this:. ```. 27-Apr-2021 13:36:43 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where. #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151. #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:1660,deployability,BUILD,BUILD,1660,"//eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where. #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151. #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173. #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0). at /data/cmsbld/jenkins/workspace/ib-run-pr-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:1946,deployability,BUILD,BUILD,1946,"sbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where. #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151. #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173. #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TSystem.cxx:780. #6 0x00007ffff6864ec4 in TUnixSystem::IsPathLocal (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/Zer",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:2235,deployability,BUILD,BUILD,2235,"-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151. #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173. #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TSystem.cxx:780. #6 0x00007ffff6864ec4 in TUnixSystem::IsPathLocal (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root""). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/unix/src/TUnixSystem.cxx:1605",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:2682,deployability,BUILD,BUILD,2682,"cg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151. #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173. #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TSystem.cxx:780. #6 0x00007ffff6864ec4 in TUnixSystem::IsPathLocal (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root""). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/unix/src/TUnixSystem.cxx:1605. #7 0x00007ffff6e1fd33 in TFile::GetType (. name=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", option=0x7fffffff15b9 """", prefix=0x7fffffff1460). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:468",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:3117,deployability,BUILD,BUILD,3117,"<char const*, bool> (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173. #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TSystem.cxx:780. #6 0x00007ffff6864ec4 in TUnixSystem::IsPathLocal (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root""). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/unix/src/TUnixSystem.cxx:1605. #7 0x00007ffff6e1fd33 in TFile::GetType (. name=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", option=0x7fffffff15b9 """", prefix=0x7fffffff1460). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4685. #8 0x00007ffff6e1db61 in TFile::Open (. url=0x7fffb0d418e0 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:3575,deployability,BUILD,BUILD,3575,"4E-8E2F-F459A798FA74.root"", dirptr=0x0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TSystem.cxx:780. #6 0x00007ffff6864ec4 in TUnixSystem::IsPathLocal (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root""). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/unix/src/TUnixSystem.cxx:1605. #7 0x00007ffff6e1fd33 in TFile::GetType (. name=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", option=0x7fffffff15b9 """", prefix=0x7fffffff1460). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4685. #8 0x00007ffff6e1db61 in TFile::Open (. url=0x7fffb0d418e0 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4065. #9 0x00007fffac890f2d in edm::InputFile::InputFile(char const*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:4047,deployability,BUILD,BUILD,4047,"""). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/unix/src/TUnixSystem.cxx:1605. #7 0x00007ffff6e1fd33 in TFile::GetType (. name=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", option=0x7fffffff15b9 """", prefix=0x7fffffff1460). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4685. #8 0x00007ffff6e1db61 in TFile::Open (. url=0x7fffb0d418e0 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4065. #9 0x00007fffac890f2d in edm::InputFile::InputFile(char const*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSour",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:4263,deployability,build,build,4263,"File::GetType (. name=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", option=0x7fffffff15b9 """", prefix=0x7fffffff1460). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4685. #8 0x00007ffff6e1db61 in TFile::Open (. url=0x7fffb0d418e0 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4065. #9 0x00007fffac890f2d in edm::InputFile::InputFile(char const*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::InputSource* (edm::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:4508,deployability,build,build,4508," at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4685. #8 0x00007ffff6e1db61 in TFile::Open (. url=0x7fffb0d418e0 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4065. #9 0x00007fffac890f2d in edm::InputFile::InputFile(char const*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::InputSource* (edm::ParameterSet const&, edm::InputSourceDescription const&)>::PMaker<edm::PoolSource>::create(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_am",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:4781,deployability,build,build,4781,"/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4065. #9 0x00007fffac890f2d in edm::InputFile::InputFile(char const*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::InputSource* (edm::ParameterSet const&, edm::InputSourceDescription const&)>::PMaker<edm::PoolSource>::create(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:4929,deployability,continu,continue,4929,"ftitle=0x7fffac8d86f9 """", compress=101, netopt=0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4065. #9 0x00007fffac890f2d in edm::InputFile::InputFile(char const*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::InputSource* (edm::ParameterSet const&, edm::InputSourceDescription const&)>::PMaker<edm::PoolSource>::create(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::sha",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:5082,deployability,build,build,5082,"08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4065. #9 0x00007fffac890f2d in edm::InputFile::InputFile(char const*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::InputSource* (edm::ParameterSet const&, edm::InputSourceDescription const&)>::PMaker<edm::PoolSource>::create(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:5435,deployability,build,build,5435,"bool, bool, edm::InputSource*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::InputSource* (edm::ParameterSet const&, edm::InputSourceDescription const&)>::PMaker<edm::PoolSource>::create(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodoz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:5689,deployability,build,build,5689,"ence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::InputSource* (edm::ParameterSet const&, edm::InputSourceDescription const&)>::PMaker<edm::PoolSource>::create(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #17 0x00007ffff7bc8eda in edm::EventProcessor::EventProcessor(std::shared_ptr<edm::ProcessDesc>, edm::ServiceToken const&, edm::serviceregistry::ServiceLega",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:6155,deployability,build,build,6155,"d64_gcc900/pluginIOPoolInput.so. #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::InputSource* (edm::ParameterSet const&, edm::InputSourceDescription const&)>::PMaker<edm::PoolSource>::create(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #17 0x00007ffff7bc8eda in edm::EventProcessor::EventProcessor(std::shared_ptr<edm::ProcessDesc>, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (). #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105. #20 0x000000000040ca13 in main:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:6358,deployability,Servic,ServiceToken,6358,"rameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #17 0x00007ffff7bc8eda in edm::EventProcessor::EventProcessor(std::shared_ptr<edm::ProcessDesc>, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (). #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105. #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (). #21 0x000000000040b62c in main (). ```. After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiSt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:6384,deployability,servic,serviceregistry,6384,"tSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #17 0x00007ffff7bc8eda in edm::EventProcessor::EventProcessor(std::shared_ptr<edm::ProcessDesc>, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (). #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105. #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (). #21 0x000000000040b62c in main (). ```. After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTG",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:6401,deployability,Servic,ServiceLegacy,6401,"on const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #17 0x00007ffff7bc8eda in edm::EventProcessor::EventProcessor(std::shared_ptr<edm::ProcessDesc>, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (). #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105. #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (). #21 0x000000000040b62c in main (). ```. After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:6426,deployability,build,build,6426,"from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #17 0x00007ffff7bc8eda in edm::EventProcessor::EventProcessor(std::shared_ptr<edm::ProcessDesc>, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (). #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105. #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (). #21 0x000000000040b62c in main (). ```. After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A. Using ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:6638,deployability,Servic,ServiceToken,6638,"putSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #17 0x00007ffff7bc8eda in edm::EventProcessor::EventProcessor(std::shared_ptr<edm::ProcessDesc>, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (). #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105. #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (). #21 0x000000000040b62c in main (). ```. After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A. Using Dataset: /ZeroBias/Run2018A-SiStripCalMinBias-12Nov2019_UL2018-v1/ALCARECO. 27-Apr-2021 14:00:10 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:6664,deployability,servic,serviceregistry,6664," const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #17 0x00007ffff7bc8eda in edm::EventProcessor::EventProcessor(std::shared_ptr<edm::ProcessDesc>, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (). #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105. #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (). #21 0x000000000040b62c in main (). ```. After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A. Using Dataset: /ZeroBias/Run2018A-SiStripCalMinBias-12Nov2019_UL2018-v1/ALCARECO. 27-Apr-2021 14:00:10 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/26",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:6681,deployability,Servic,ServiceLegacy,6681,"/build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #17 0x00007ffff7bc8eda in edm::EventProcessor::EventProcessor(std::shared_ptr<edm::ProcessDesc>, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (). #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105. #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (). #21 0x000000000040b62c in main (). ```. After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A. Using Dataset: /ZeroBias/Run2018A-SiStripCalMinBias-12Nov2019_UL2018-v1/ALCARECO. 27-Apr-2021 14:00:10 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:6706,deployability,build,build,6706,"d/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #17 0x00007ffff7bc8eda in edm::EventProcessor::EventProcessor(std::shared_ptr<edm::ProcessDesc>, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (). #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105. #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (). #21 0x000000000040b62c in main (). ```. After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A. Using Dataset: /ZeroBias/Run2018A-SiStripCalMinBias-12Nov2019_UL2018-v1/ALCARECO. 27-Apr-2021 14:00:10 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:8182,deployability,instal,install,8182,"0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (). #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105. #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (). #21 0x000000000040b62c in main (). ```. After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A. Using Dataset: /ZeroBias/Run2018A-SiStripCalMinBias-12Nov2019_UL2018-v1/ALCARECO. 27-Apr-2021 14:00:10 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. 27-Apr-2021 14:00:12 CEST Successfully opened file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. %MSG-i SiStripGainsPCLWorker: SiStripGainsPCLWorker:ALCARECOSiStripCalib@beginRun 27-Apr-2021 14:00:20 CEST Run: 315420. Resetting APV struct. %MSG. ```. this -> Successfully opened file root:// . and then working on the file. ### To Reproduce. Use this install script:. ```. /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/6831/14586/install.sh. cd CMSSW_12_0_X_2021-04-26-1100. cmsenv. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A. ```. ### Setup. 1. 6-22 - . https://github.com/cms-sw/root/commits/cms/v6-22-00-patches/d1d36a5f17904f7d3661c97d28da8f3954e02340. 2. SLC7. 3. Installed from source. ### Additional context. The pull request from above . https://github.com/cms-sw/cmsdist/pull/6831. is setuping cmake release type to Debug for both ROOT and XrootD . as requested in #7335.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:8258,deployability,instal,install,8258,"0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (). #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105. #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (). #21 0x000000000040b62c in main (). ```. After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A. Using Dataset: /ZeroBias/Run2018A-SiStripCalMinBias-12Nov2019_UL2018-v1/ALCARECO. 27-Apr-2021 14:00:10 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. 27-Apr-2021 14:00:12 CEST Successfully opened file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. %MSG-i SiStripGainsPCLWorker: SiStripGainsPCLWorker:ALCARECOSiStripCalib@beginRun 27-Apr-2021 14:00:20 CEST Run: 315420. Resetting APV struct. %MSG. ```. this -> Successfully opened file root:// . and then working on the file. ### To Reproduce. Use this install script:. ```. /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/6831/14586/install.sh. cd CMSSW_12_0_X_2021-04-26-1100. cmsenv. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A. ```. ### Setup. 1. 6-22 - . https://github.com/cms-sw/root/commits/cms/v6-22-00-patches/d1d36a5f17904f7d3661c97d28da8f3954e02340. 2. SLC7. 3. Installed from source. ### Additional context. The pull request from above . https://github.com/cms-sw/cmsdist/pull/6831. is setuping cmake release type to Debug for both ROOT and XrootD . as requested in #7335.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:8478,deployability,patch,patches,8478,"0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (). #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105. #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (). #21 0x000000000040b62c in main (). ```. After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A. Using Dataset: /ZeroBias/Run2018A-SiStripCalMinBias-12Nov2019_UL2018-v1/ALCARECO. 27-Apr-2021 14:00:10 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. 27-Apr-2021 14:00:12 CEST Successfully opened file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. %MSG-i SiStripGainsPCLWorker: SiStripGainsPCLWorker:ALCARECOSiStripCalib@beginRun 27-Apr-2021 14:00:20 CEST Run: 315420. Resetting APV struct. %MSG. ```. this -> Successfully opened file root:// . and then working on the file. ### To Reproduce. Use this install script:. ```. /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/6831/14586/install.sh. cd CMSSW_12_0_X_2021-04-26-1100. cmsenv. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A. ```. ### Setup. 1. 6-22 - . https://github.com/cms-sw/root/commits/cms/v6-22-00-patches/d1d36a5f17904f7d3661c97d28da8f3954e02340. 2. SLC7. 3. Installed from source. ### Additional context. The pull request from above . https://github.com/cms-sw/cmsdist/pull/6831. is setuping cmake release type to Debug for both ROOT and XrootD . as requested in #7335.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:8540,deployability,Instal,Installed,8540,"0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (). #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105. #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (). #21 0x000000000040b62c in main (). ```. After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A. Using Dataset: /ZeroBias/Run2018A-SiStripCalMinBias-12Nov2019_UL2018-v1/ALCARECO. 27-Apr-2021 14:00:10 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. 27-Apr-2021 14:00:12 CEST Successfully opened file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. %MSG-i SiStripGainsPCLWorker: SiStripGainsPCLWorker:ALCARECOSiStripCalib@beginRun 27-Apr-2021 14:00:20 CEST Run: 315420. Resetting APV struct. %MSG. ```. this -> Successfully opened file root:// . and then working on the file. ### To Reproduce. Use this install script:. ```. /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/6831/14586/install.sh. cd CMSSW_12_0_X_2021-04-26-1100. cmsenv. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A. ```. ### Setup. 1. 6-22 - . https://github.com/cms-sw/root/commits/cms/v6-22-00-patches/d1d36a5f17904f7d3661c97d28da8f3954e02340. 2. SLC7. 3. Installed from source. ### Additional context. The pull request from above . https://github.com/cms-sw/cmsdist/pull/6831. is setuping cmake release type to Debug for both ROOT and XrootD . as requested in #7335.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:8680,deployability,releas,release,8680,"0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (). #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105. #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (). #21 0x000000000040b62c in main (). ```. After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A. Using Dataset: /ZeroBias/Run2018A-SiStripCalMinBias-12Nov2019_UL2018-v1/ALCARECO. 27-Apr-2021 14:00:10 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. 27-Apr-2021 14:00:12 CEST Successfully opened file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. %MSG-i SiStripGainsPCLWorker: SiStripGainsPCLWorker:ALCARECOSiStripCalib@beginRun 27-Apr-2021 14:00:20 CEST Run: 315420. Resetting APV struct. %MSG. ```. this -> Successfully opened file root:// . and then working on the file. ### To Reproduce. Use this install script:. ```. /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/6831/14586/install.sh. cd CMSSW_12_0_X_2021-04-26-1100. cmsenv. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A. ```. ### Setup. 1. 6-22 - . https://github.com/cms-sw/root/commits/cms/v6-22-00-patches/d1d36a5f17904f7d3661c97d28da8f3954e02340. 2. SLC7. 3. Installed from source. ### Additional context. The pull request from above . https://github.com/cms-sw/cmsdist/pull/6831. is setuping cmake release type to Debug for both ROOT and XrootD . as requested in #7335.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:871,energy efficiency,fault,fault,871,"Crash in TMutex::UnLock when using XrootD 5.1.1; - [ checked] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. We are trying to update the XrootD version to 5.1.1 :. https://github.com/cms-sw/cmsdist/pull/6831. but the test fails in the file open attempt. with this:. ```. 27-Apr-2021 13:36:43 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where. #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:1088,energy efficiency,core,core,1088,". Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. We are trying to update the XrootD version to 5.1.1 :. https://github.com/cms-sw/cmsdist/pull/6831. but the test fails in the file open attempt. with this:. ```. 27-Apr-2021 13:36:43 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where. #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151. #4 0x00007ffff6764dee",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:1345,energy efficiency,core,core,1345,"ng report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. We are trying to update the XrootD version to 5.1.1 :. https://github.com/cms-sw/cmsdist/pull/6831. but the test fails in the file open attempt. with this:. ```. 27-Apr-2021 13:36:43 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where. #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151. #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginMana",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:1458,energy efficiency,optim,optimized,1458,"he XrootD version to 5.1.1 :. https://github.com/cms-sw/cmsdist/pull/6831. but the test fails in the file open attempt. with this:. ```. 27-Apr-2021 13:36:43 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where. #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151. #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173. #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:1747,energy efficiency,core,core,1747,"v2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where. #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151. #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173. #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:2033,energy efficiency,core,core,2033,".22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where. #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151. #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173. #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TSystem.cxx:780. #6 0x00007ffff6864ec4 in TUnixSystem::IsPathLocal (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:2322,energy efficiency,core,core,2322,"7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151. #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173. #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TSystem.cxx:780. #6 0x00007ffff6864ec4 in TUnixSystem::IsPathLocal (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root""). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/unix/src/TUnixSystem.cxx:1605. #7 0x00007ffff6e1fd33 in TFile::GetType (. name=0x7fffb0d42060 ""root://eoscms.cern.c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:2769,energy efficiency,core,core,2769,"ager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151. #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173. #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TSystem.cxx:780. #6 0x00007ffff6864ec4 in TUnixSystem::IsPathLocal (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root""). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/unix/src/TUnixSystem.cxx:1605. #7 0x00007ffff6e1fd33 in TFile::GetType (. name=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", option=0x7fffffff15b9 """", prefix=0x7fffffff1460). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4685. #8 0x00007ffff6e1db61 in TFile::Open (. url=0x7fffb0d418e0 ""root://eoscms.cern.ch//",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:3204,energy efficiency,core,core,3204,"ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173. #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TSystem.cxx:780. #6 0x00007ffff6864ec4 in TUnixSystem::IsPathLocal (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root""). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/unix/src/TUnixSystem.cxx:1605. #7 0x00007ffff6e1fd33 in TFile::GetType (. name=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", option=0x7fffffff15b9 """", prefix=0x7fffffff1460). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4685. #8 0x00007ffff6e1db61 in TFile::Open (. url=0x7fffb0d418e0 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4065. #9 0x00007fffac890f2d in edm::InputFile::Input",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:473,integrability,version,version,473,"Crash in TMutex::UnLock when using XrootD 5.1.1; - [ checked] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. We are trying to update the XrootD version to 5.1.1 :. https://github.com/cms-sw/cmsdist/pull/6831. but the test fails in the file open attempt. with this:. ```. 27-Apr-2021 13:36:43 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where. #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:6296,integrability,Event,EventProcessor,6296,"Description const&)>::PMaker<edm::PoolSource>::create(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #17 0x00007ffff7bc8eda in edm::EventProcessor::EventProcessor(std::shared_ptr<edm::ProcessDesc>, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (). #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105. #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (). #21 0x000000000040b62c in main (). ```. After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnL",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:6358,integrability,Servic,ServiceToken,6358,"rameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #17 0x00007ffff7bc8eda in edm::EventProcessor::EventProcessor(std::shared_ptr<edm::ProcessDesc>, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (). #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105. #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (). #21 0x000000000040b62c in main (). ```. After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiSt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:6384,integrability,servic,serviceregistry,6384,"tSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #17 0x00007ffff7bc8eda in edm::EventProcessor::EventProcessor(std::shared_ptr<edm::ProcessDesc>, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (). #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105. #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (). #21 0x000000000040b62c in main (). ```. After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTG",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:6401,integrability,Servic,ServiceLegacy,6401,"on const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #17 0x00007ffff7bc8eda in edm::EventProcessor::EventProcessor(std::shared_ptr<edm::ProcessDesc>, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (). #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105. #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (). #21 0x000000000040b62c in main (). ```. After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:6567,integrability,Event,EventProcessor,6567,":InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #17 0x00007ffff7bc8eda in edm::EventProcessor::EventProcessor(std::shared_ptr<edm::ProcessDesc>, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (). #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105. #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (). #21 0x000000000040b62c in main (). ```. After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A. Using Dataset: /ZeroBias/Run2018A-SiStripCalMinBias-12Nov2019_UL2018-v1/ALCARECO. 27-Apr-2021 14:00:10 CEST Initiating request to open file root://eosc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:6583,integrability,Event,EventProcessor,6583,"ory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #17 0x00007ffff7bc8eda in edm::EventProcessor::EventProcessor(std::shared_ptr<edm::ProcessDesc>, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (). #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105. #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (). #21 0x000000000040b62c in main (). ```. After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A. Using Dataset: /ZeroBias/Run2018A-SiStripCalMinBias-12Nov2019_UL2018-v1/ALCARECO. 27-Apr-2021 14:00:10 CEST Initiating request to open file root://eoscms.cern.ch//eos/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:6638,integrability,Servic,ServiceToken,6638,"putSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #17 0x00007ffff7bc8eda in edm::EventProcessor::EventProcessor(std::shared_ptr<edm::ProcessDesc>, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (). #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105. #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (). #21 0x000000000040b62c in main (). ```. After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A. Using Dataset: /ZeroBias/Run2018A-SiStripCalMinBias-12Nov2019_UL2018-v1/ALCARECO. 27-Apr-2021 14:00:10 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:6664,integrability,servic,serviceregistry,6664," const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #17 0x00007ffff7bc8eda in edm::EventProcessor::EventProcessor(std::shared_ptr<edm::ProcessDesc>, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (). #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105. #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (). #21 0x000000000040b62c in main (). ```. After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A. Using Dataset: /ZeroBias/Run2018A-SiStripCalMinBias-12Nov2019_UL2018-v1/ALCARECO. 27-Apr-2021 14:00:10 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/26",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:6681,integrability,Servic,ServiceLegacy,6681,"/build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #17 0x00007ffff7bc8eda in edm::EventProcessor::EventProcessor(std::shared_ptr<edm::ProcessDesc>, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (). #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105. #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (). #21 0x000000000040b62c in main (). ```. After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A. Using Dataset: /ZeroBias/Run2018A-SiStripCalMinBias-12Nov2019_UL2018-v1/ALCARECO. 27-Apr-2021 14:00:10 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:4350,interoperability,plug,pluginIOPoolInput,4350,"Bias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", option=0x7fffffff15b9 """", prefix=0x7fffffff1460). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4685. #8 0x00007ffff6e1db61 in TFile::Open (. url=0x7fffb0d418e0 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4065. #9 0x00007fffac890f2d in edm::InputFile::InputFile(char const*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::InputSource* (edm::ParameterSet const&, edm::InputSourceDescription const&)>::PMaker<edm::PoolSource>::create(ed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:4595,interoperability,plug,pluginIOPoolInput,4595,"oot/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4685. #8 0x00007ffff6e1db61 in TFile::Open (. url=0x7fffb0d418e0 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4065. #9 0x00007fffac890f2d in edm::InputFile::InputFile(char const*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::InputSource* (edm::ParameterSet const&, edm::InputSourceDescription const&)>::PMaker<edm::PoolSource>::create(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInput",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:4868,interoperability,plug,pluginIOPoolInput,4868,"44E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4065. #9 0x00007fffac890f2d in edm::InputFile::InputFile(char const*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::InputSource* (edm::ParameterSet const&, edm::InputSourceDescription const&)>::PMaker<edm::PoolSource>::create(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:5169,interoperability,plug,pluginIOPoolInput,5169,"f2d in edm::InputFile::InputFile(char const*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::InputSource* (edm::ParameterSet const&, edm::InputSourceDescription const&)>::PMaker<edm::PoolSource>::create(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:5228,interoperability,Plug,PluginFactory,5228,", edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::InputSource* (edm::ParameterSet const&, edm::InputSourceDescription const&)>::PMaker<edm::PoolSource>::create(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:5522,interoperability,plug,pluginIOPoolInput,5522,"ocal_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::InputSource* (edm::ParameterSet const&, edm::InputSourceDescription const&)>::PMaker<edm::PoolSource>::create(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:473,modifiability,version,version,473,"Crash in TMutex::UnLock when using XrootD 5.1.1; - [ checked] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. We are trying to update the XrootD version to 5.1.1 :. https://github.com/cms-sw/cmsdist/pull/6831. but the test fails in the file open attempt. with this:. ```. 27-Apr-2021 13:36:43 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where. #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:4702,modifiability,Paramet,ParameterSet,4702,"1 in TFile::Open (. url=0x7fffb0d418e0 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4065. #9 0x00007fffac890f2d in edm::InputFile::InputFile(char const*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::InputSource* (edm::ParameterSet const&, edm::InputSourceDescription const&)>::PMaker<edm::PoolSource>::create(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xroo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:5015,modifiability,Paramet,ParameterSet,5015,"run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4065. #9 0x00007fffac890f2d in edm::InputFile::InputFile(char const*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::InputSource* (edm::ParameterSet const&, edm::InputSourceDescription const&)>::PMaker<edm::PoolSource>::create(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:5266,modifiability,Paramet,ParameterSet,5266,"dozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::InputSource* (edm::ParameterSet const&, edm::InputSourceDescription const&)>::PMaker<edm::PoolSource>::create(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:5362,modifiability,Paramet,ParameterSet,5362,"so. #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::InputSource* (edm::ParameterSet const&, edm::InputSourceDescription const&)>::PMaker<edm::PoolSource>::create(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::ServiceTok",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:5616,modifiability,Paramet,ParameterSet,5616,"x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::InputSource* (edm::ParameterSet const&, edm::InputSourceDescription const&)>::PMaker<edm::PoolSource>::create(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #17 0x00007ffff7bc8eda in edm::EventProcessor::EventProcessor(std::shared_ptr<edm::Pro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:5845,modifiability,Paramet,ParameterSet,5845,"lc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::InputSource* (edm::ParameterSet const&, edm::InputSourceDescription const&)>::PMaker<edm::PoolSource>::create(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #17 0x00007ffff7bc8eda in edm::EventProcessor::EventProcessor(std::shared_ptr<edm::ProcessDesc>, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::inte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:6358,modifiability,Servic,ServiceToken,6358,"rameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #17 0x00007ffff7bc8eda in edm::EventProcessor::EventProcessor(std::shared_ptr<edm::ProcessDesc>, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (). #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105. #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (). #21 0x000000000040b62c in main (). ```. After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiSt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:6384,modifiability,servic,serviceregistry,6384,"tSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #17 0x00007ffff7bc8eda in edm::EventProcessor::EventProcessor(std::shared_ptr<edm::ProcessDesc>, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (). #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105. #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (). #21 0x000000000040b62c in main (). ```. After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTG",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:6401,modifiability,Servic,ServiceLegacy,6401,"on const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #17 0x00007ffff7bc8eda in edm::EventProcessor::EventProcessor(std::shared_ptr<edm::ProcessDesc>, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (). #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105. #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (). #21 0x000000000040b62c in main (). ```. After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:6638,modifiability,Servic,ServiceToken,6638,"putSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #17 0x00007ffff7bc8eda in edm::EventProcessor::EventProcessor(std::shared_ptr<edm::ProcessDesc>, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (). #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105. #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (). #21 0x000000000040b62c in main (). ```. After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A. Using Dataset: /ZeroBias/Run2018A-SiStripCalMinBias-12Nov2019_UL2018-v1/ALCARECO. 27-Apr-2021 14:00:10 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:6664,modifiability,servic,serviceregistry,6664," const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #17 0x00007ffff7bc8eda in edm::EventProcessor::EventProcessor(std::shared_ptr<edm::ProcessDesc>, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (). #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105. #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (). #21 0x000000000040b62c in main (). ```. After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A. Using Dataset: /ZeroBias/Run2018A-SiStripCalMinBias-12Nov2019_UL2018-v1/ALCARECO. 27-Apr-2021 14:00:10 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/26",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:6681,modifiability,Servic,ServiceLegacy,6681,"/build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #17 0x00007ffff7bc8eda in edm::EventProcessor::EventProcessor(std::shared_ptr<edm::ProcessDesc>, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (). #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105. #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (). #21 0x000000000040b62c in main (). ```. After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A. Using Dataset: /ZeroBias/Run2018A-SiStripCalMinBias-12Nov2019_UL2018-v1/ALCARECO. 27-Apr-2021 14:00:10 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:871,performance,fault,fault,871,"Crash in TMutex::UnLock when using XrootD 5.1.1; - [ checked] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. We are trying to update the XrootD version to 5.1.1 :. https://github.com/cms-sw/cmsdist/pull/6831. but the test fails in the file open attempt. with this:. ```. 27-Apr-2021 13:36:43 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where. #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:1458,performance,optimiz,optimized,1458,"he XrootD version to 5.1.1 :. https://github.com/cms-sw/cmsdist/pull/6831. but the test fails in the file open attempt. with this:. ```. 27-Apr-2021 13:36:43 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where. #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151. #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173. #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:551,reliability,fail,fails,551,"Crash in TMutex::UnLock when using XrootD 5.1.1; - [ checked] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. We are trying to update the XrootD version to 5.1.1 :. https://github.com/cms-sw/cmsdist/pull/6831. but the test fails in the file open attempt. with this:. ```. 27-Apr-2021 13:36:43 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where. #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:871,reliability,fault,fault,871,"Crash in TMutex::UnLock when using XrootD 5.1.1; - [ checked] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. We are trying to update the XrootD version to 5.1.1 :. https://github.com/cms-sw/cmsdist/pull/6831. but the test fails in the file open attempt. with this:. ```. 27-Apr-2021 13:36:43 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where. #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:455,safety,updat,update,455,"Crash in TMutex::UnLock when using XrootD 5.1.1; - [ checked] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. We are trying to update the XrootD version to 5.1.1 :. https://github.com/cms-sw/cmsdist/pull/6831. but the test fails in the file open attempt. with this:. ```. 27-Apr-2021 13:36:43 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where. #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:546,safety,test,test,546,"Crash in TMutex::UnLock when using XrootD 5.1.1; - [ checked] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. We are trying to update the XrootD version to 5.1.1 :. https://github.com/cms-sw/cmsdist/pull/6831. but the test fails in the file open attempt. with this:. ```. 27-Apr-2021 13:36:43 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where. #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:871,safety,fault,fault,871,"Crash in TMutex::UnLock when using XrootD 5.1.1; - [ checked] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. We are trying to update the XrootD version to 5.1.1 :. https://github.com/cms-sw/cmsdist/pull/6831. but the test fails in the file open attempt. with this:. ```. 27-Apr-2021 13:36:43 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where. #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:982,safety,test,tests,982,"Crash in TMutex::UnLock when using XrootD 5.1.1; - [ checked] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. We are trying to update the XrootD version to 5.1.1 :. https://github.com/cms-sw/cmsdist/pull/6831. but the test fails in the file open attempt. with this:. ```. 27-Apr-2021 13:36:43 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where. #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:988,safety,test,testBuildDir,988,"Crash in TMutex::UnLock when using XrootD 5.1.1; - [ checked] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. We are trying to update the XrootD version to 5.1.1 :. https://github.com/cms-sw/cmsdist/pull/6831. but the test fails in the file open attempt. with this:. ```. 27-Apr-2021 13:36:43 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where. #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:1239,safety,test,tests,1239,"%3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. We are trying to update the XrootD version to 5.1.1 :. https://github.com/cms-sw/cmsdist/pull/6831. but the test fails in the file open attempt. with this:. ```. 27-Apr-2021 13:36:43 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where. #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151. #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:1245,safety,test,testBuildDir,1245,". for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. We are trying to update the XrootD version to 5.1.1 :. https://github.com/cms-sw/cmsdist/pull/6831. but the test fails in the file open attempt. with this:. ```. 27-Apr-2021 13:36:43 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where. #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151. #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:1641,safety,test,tests,1641," to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where. #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151. #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173. #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0). at /data/cmsbld/jenkins/w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:1647,safety,test,testBuildDir,1647,"file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where. #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151. #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173. #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0). at /data/cmsbld/jenkins/workspace/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:1927,safety,test,tests,1927,"95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where. #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151. #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173. #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TSystem.cxx:780. #6 0x00007ffff6864ec4 in TUnixSystem::IsPathLocal (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/stor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:1933,safety,test,testBuildDir,1933,"t /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where. #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151. #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173. #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TSystem.cxx:780. #6 0x00007ffff6864ec4 in TUnixSystem::IsPathLocal (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Ru",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:2216,safety,test,tests,2216,"workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151. #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173. #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TSystem.cxx:780. #6 0x00007ffff6864ec4 in TUnixSystem::IsPathLocal (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root""). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/unix/src/T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:2222,safety,test,testBuildDir,2222,"/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151. #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173. #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TSystem.cxx:780. #6 0x00007ffff6864ec4 in TUnixSystem::IsPathLocal (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root""). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/unix/src/TUnixSyste",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:2663,safety,test,tests,2663,"slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151. #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173. #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TSystem.cxx:780. #6 0x00007ffff6864ec4 in TUnixSystem::IsPathLocal (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root""). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/unix/src/TUnixSystem.cxx:1605. #7 0x00007ffff6e1fd33 in TFile::GetType (. name=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", option=0x7fffffff15b9 """", prefix=0x7fffffff1460). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:2669,safety,test,testBuildDir,2669,"4_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151. #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173. #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TSystem.cxx:780. #6 0x00007ffff6864ec4 in TUnixSystem::IsPathLocal (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root""). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/unix/src/TUnixSystem.cxx:1605. #7 0x00007ffff6e1fd33 in TFile::GetType (. name=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", option=0x7fffffff15b9 """", prefix=0x7fffffff1460). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:3098,safety,test,tests,3098,"Handler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173. #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TSystem.cxx:780. #6 0x00007ffff6864ec4 in TUnixSystem::IsPathLocal (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root""). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/unix/src/TUnixSystem.cxx:1605. #7 0x00007ffff6e1fd33 in TFile::GetType (. name=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", option=0x7fffffff15b9 """", prefix=0x7fffffff1460). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4685. #8 0x00007ffff6e1db61 in TFile::Open (. url=0x7fffb0d418e0 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:3104,safety,test,testBuildDir,3104,"ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173. #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TSystem.cxx:780. #6 0x00007ffff6864ec4 in TUnixSystem::IsPathLocal (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root""). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/unix/src/TUnixSystem.cxx:1605. #7 0x00007ffff6e1fd33 in TFile::GetType (. name=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", option=0x7fffffff15b9 """", prefix=0x7fffffff1460). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4685. #8 0x00007ffff6e1db61 in TFile::Open (. url=0x7fffb0d418e0 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:3556,safety,test,tests,3556,"00/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TSystem.cxx:780. #6 0x00007ffff6864ec4 in TUnixSystem::IsPathLocal (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root""). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/unix/src/TUnixSystem.cxx:1605. #7 0x00007ffff6e1fd33 in TFile::GetType (. name=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", option=0x7fffffff15b9 """", prefix=0x7fffffff1460). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4685. #8 0x00007ffff6e1db61 in TFile::Open (. url=0x7fffb0d418e0 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4065. #9 0x00007fffac890f2d in edm::InputFile::InputFile(char const*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:3562,safety,test,testBuildDir,3562,"12-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TSystem.cxx:780. #6 0x00007ffff6864ec4 in TUnixSystem::IsPathLocal (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root""). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/unix/src/TUnixSystem.cxx:1605. #7 0x00007ffff6e1fd33 in TFile::GetType (. name=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", option=0x7fffffff15b9 """", prefix=0x7fffffff1460). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4685. #8 0x00007ffff6e1db61 in TFile::Open (. url=0x7fffb0d418e0 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4065. #9 0x00007fffac890f2d in edm::InputFile::InputFile(char const*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:4028,safety,test,tests,4028,"F-F459A798FA74.root""). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/unix/src/TUnixSystem.cxx:1605. #7 0x00007ffff6e1fd33 in TFile::GetType (. name=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", option=0x7fffffff15b9 """", prefix=0x7fffffff1460). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4685. #8 0x00007ffff6e1db61 in TFile::Open (. url=0x7fffb0d418e0 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4065. #9 0x00007fffac890f2d in edm::InputFile::InputFile(char const*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:4034,safety,test,testBuildDir,4034,"8FA74.root""). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/unix/src/TUnixSystem.cxx:1605. #7 0x00007ffff6e1fd33 in TFile::GetType (. name=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", option=0x7fffffff15b9 """", prefix=0x7fffffff1460). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4685. #8 0x00007ffff6e1db61 in TFile::Open (. url=0x7fffb0d418e0 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4065. #9 0x00007fffac890f2d in edm::InputFile::InputFile(char const*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:4190,safety,Input,InputFile,4190,"-6.22.08/core/unix/src/TUnixSystem.cxx:1605. #7 0x00007ffff6e1fd33 in TFile::GetType (. name=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", option=0x7fffffff15b9 """", prefix=0x7fffffff1460). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4685. #8 0x00007ffff6e1db61 in TFile::Open (. url=0x7fffb0d418e0 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4065. #9 0x00007fffac890f2d in edm::InputFile::InputFile(char const*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #13 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:4201,safety,Input,InputFile,4201,"re/unix/src/TUnixSystem.cxx:1605. #7 0x00007ffff6e1fd33 in TFile::GetType (. name=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", option=0x7fffffff15b9 """", prefix=0x7fffffff1460). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4685. #8 0x00007ffff6e1db61 in TFile::Open (. url=0x7fffb0d418e0 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4065. #9 0x00007fffac890f2d in edm::InputFile::InputFile(char const*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #13 0x00007fffa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:4242,safety,Input,InputType,4242,"007ffff6e1fd33 in TFile::GetType (. name=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", option=0x7fffffff15b9 """", prefix=0x7fffffff1460). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4685. #8 0x00007ffff6e1db61 in TFile::Open (. url=0x7fffb0d418e0 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4065. #9 0x00007fffac890f2d in edm::InputFile::InputFile(char const*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:4455,safety,Input,InputSource,4455," option=0x7fffffff15b9 """", prefix=0x7fffffff1460). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4685. #8 0x00007ffff6e1db61 in TFile::Open (. url=0x7fffb0d418e0 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4065. #9 0x00007fffac890f2d in edm::InputFile::InputFile(char const*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::InputSource* (edm::ParameterSet const&, edm::InputSourceDescription const&)>::PMaker<edm::PoolSource>::create(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:4487,safety,Input,InputType,4487,"ix=0x7fffffff1460). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4685. #8 0x00007ffff6e1db61 in TFile::Open (. url=0x7fffb0d418e0 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4065. #9 0x00007fffac890f2d in edm::InputFile::InputFile(char const*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::InputSource* (edm::ParameterSet const&, edm::InputSourceDescription const&)>::PMaker<edm::PoolSource>::create(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:4746,safety,Input,InputFileCatalog,4746,"/eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4065. #9 0x00007fffac890f2d in edm::InputFile::InputFile(char const*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::InputSource* (edm::ParameterSet const&, edm::InputSourceDescription const&)>::PMaker<edm::PoolSource>::create(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:5041,safety,Input,InputSourceDescription,5041,"/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4065. #9 0x00007fffac890f2d in edm::InputFile::InputFile(char const*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::InputSource* (edm::ParameterSet const&, edm::InputSourceDescription const&)>::PMaker<edm::PoolSource>::create(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:5247,safety,Input,InputSource,5247,"(). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::InputSource* (edm::ParameterSet const&, edm::InputSourceDescription const&)>::PMaker<edm::PoolSource>::create(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:5292,safety,Input,InputSourceDescription,5292,"W_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::InputSource* (edm::ParameterSet const&, edm::InputSourceDescription const&)>::PMaker<edm::PoolSource>::create(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventPr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:5388,safety,Input,InputSourceDescription,5388,"dm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::InputSource* (edm::ParameterSet const&, edm::InputSourceDescription const&)>::PMaker<edm::PoolSource>::create(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::ServiceToken const&, edm::serviceregistry",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:5575,safety,Input,InputSourceFactory,5575,"d64_gcc900/pluginIOPoolInput.so. #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::InputSource* (edm::ParameterSet const&, edm::InputSourceDescription const&)>::PMaker<edm::PoolSource>::create(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #17 0x00007ffff7bc8eda in edm::EventProcessor::E",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:5642,safety,Input,InputSourceDescription,5642,"rimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::InputSource* (edm::ParameterSet const&, edm::InputSourceDescription const&)>::PMaker<edm::PoolSource>::create(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #17 0x00007ffff7bc8eda in edm::EventProcessor::EventProcessor(std::shared_ptr<edm::ProcessDesc>, edm::ServiceToken co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:7379,safety,test,test,7379,"m::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #17 0x00007ffff7bc8eda in edm::EventProcessor::EventProcessor(std::shared_ptr<edm::ProcessDesc>, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (). #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105. #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (). #21 0x000000000040b62c in main (). ```. After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A. Using Dataset: /ZeroBias/Run2018A-SiStripCalMinBias-12Nov2019_UL2018-v1/ALCARECO. 27-Apr-2021 14:00:10 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. 27-Apr-2021 14:00:12 CEST Successfully opened file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. %MSG-i SiStripGainsPCLWorker: SiStripGainsPCLWorker:ALCARECOSiStripCalib@beginRun 27-Apr-2021 14:00:20 CEST Run: 315420. Resetting APV struct. %MSG. ```. this -> Successfully opened file root:// . and then working on the file. ### To Reproduce. Use this install script:. ```. /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/6831/14586/install.sh. cd CMSSW_12_0_X_2021-04-26-1100. cmsenv. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRE",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:8354,safety,test,test,8354,"0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (). #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105. #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (). #21 0x000000000040b62c in main (). ```. After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A. Using Dataset: /ZeroBias/Run2018A-SiStripCalMinBias-12Nov2019_UL2018-v1/ALCARECO. 27-Apr-2021 14:00:10 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. 27-Apr-2021 14:00:12 CEST Successfully opened file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. %MSG-i SiStripGainsPCLWorker: SiStripGainsPCLWorker:ALCARECOSiStripCalib@beginRun 27-Apr-2021 14:00:20 CEST Run: 315420. Resetting APV struct. %MSG. ```. this -> Successfully opened file root:// . and then working on the file. ### To Reproduce. Use this install script:. ```. /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/6831/14586/install.sh. cd CMSSW_12_0_X_2021-04-26-1100. cmsenv. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A. ```. ### Setup. 1. 6-22 - . https://github.com/cms-sw/root/commits/cms/v6-22-00-patches/d1d36a5f17904f7d3661c97d28da8f3954e02340. 2. SLC7. 3. Installed from source. ### Additional context. The pull request from above . https://github.com/cms-sw/cmsdist/pull/6831. is setuping cmake release type to Debug for both ROOT and XrootD . as requested in #7335.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:8478,safety,patch,patches,8478,"0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (). #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105. #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (). #21 0x000000000040b62c in main (). ```. After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A. Using Dataset: /ZeroBias/Run2018A-SiStripCalMinBias-12Nov2019_UL2018-v1/ALCARECO. 27-Apr-2021 14:00:10 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. 27-Apr-2021 14:00:12 CEST Successfully opened file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. %MSG-i SiStripGainsPCLWorker: SiStripGainsPCLWorker:ALCARECOSiStripCalib@beginRun 27-Apr-2021 14:00:20 CEST Run: 315420. Resetting APV struct. %MSG. ```. this -> Successfully opened file root:// . and then working on the file. ### To Reproduce. Use this install script:. ```. /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/6831/14586/install.sh. cd CMSSW_12_0_X_2021-04-26-1100. cmsenv. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A. ```. ### Setup. 1. 6-22 - . https://github.com/cms-sw/root/commits/cms/v6-22-00-patches/d1d36a5f17904f7d3661c97d28da8f3954e02340. 2. SLC7. 3. Installed from source. ### Additional context. The pull request from above . https://github.com/cms-sw/cmsdist/pull/6831. is setuping cmake release type to Debug for both ROOT and XrootD . as requested in #7335.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:455,security,updat,update,455,"Crash in TMutex::UnLock when using XrootD 5.1.1; - [ checked] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. We are trying to update the XrootD version to 5.1.1 :. https://github.com/cms-sw/cmsdist/pull/6831. but the test fails in the file open attempt. with this:. ```. 27-Apr-2021 13:36:43 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where. #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:842,security,sign,signal,842,"Crash in TMutex::UnLock when using XrootD 5.1.1; - [ checked] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. We are trying to update the XrootD version to 5.1.1 :. https://github.com/cms-sw/cmsdist/pull/6831. but the test fails in the file open attempt. with this:. ```. 27-Apr-2021 13:36:43 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where. #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:8478,security,patch,patches,8478,"0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (). #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105. #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (). #21 0x000000000040b62c in main (). ```. After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A. Using Dataset: /ZeroBias/Run2018A-SiStripCalMinBias-12Nov2019_UL2018-v1/ALCARECO. 27-Apr-2021 14:00:10 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. 27-Apr-2021 14:00:12 CEST Successfully opened file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. %MSG-i SiStripGainsPCLWorker: SiStripGainsPCLWorker:ALCARECOSiStripCalib@beginRun 27-Apr-2021 14:00:20 CEST Run: 315420. Resetting APV struct. %MSG. ```. this -> Successfully opened file root:// . and then working on the file. ### To Reproduce. Use this install script:. ```. /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/6831/14586/install.sh. cd CMSSW_12_0_X_2021-04-26-1100. cmsenv. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A. ```. ### Setup. 1. 6-22 - . https://github.com/cms-sw/root/commits/cms/v6-22-00-patches/d1d36a5f17904f7d3661c97d28da8f3954e02340. 2. SLC7. 3. Installed from source. ### Additional context. The pull request from above . https://github.com/cms-sw/cmsdist/pull/6831. is setuping cmake release type to Debug for both ROOT and XrootD . as requested in #7335.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:546,testability,test,test,546,"Crash in TMutex::UnLock when using XrootD 5.1.1; - [ checked] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. We are trying to update the XrootD version to 5.1.1 :. https://github.com/cms-sw/cmsdist/pull/6831. but the test fails in the file open attempt. with this:. ```. 27-Apr-2021 13:36:43 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where. #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:982,testability,test,tests,982,"Crash in TMutex::UnLock when using XrootD 5.1.1; - [ checked] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. We are trying to update the XrootD version to 5.1.1 :. https://github.com/cms-sw/cmsdist/pull/6831. but the test fails in the file open attempt. with this:. ```. 27-Apr-2021 13:36:43 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where. #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:988,testability,test,testBuildDir,988,"Crash in TMutex::UnLock when using XrootD 5.1.1; - [ checked] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. We are trying to update the XrootD version to 5.1.1 :. https://github.com/cms-sw/cmsdist/pull/6831. but the test fails in the file open attempt. with this:. ```. 27-Apr-2021 13:36:43 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where. #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:1239,testability,test,tests,1239,"%3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. We are trying to update the XrootD version to 5.1.1 :. https://github.com/cms-sw/cmsdist/pull/6831. but the test fails in the file open attempt. with this:. ```. 27-Apr-2021 13:36:43 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where. #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151. #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:1245,testability,test,testBuildDir,1245,". for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. We are trying to update the XrootD version to 5.1.1 :. https://github.com/cms-sw/cmsdist/pull/6831. but the test fails in the file open attempt. with this:. ```. 27-Apr-2021 13:36:43 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where. #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151. #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:1641,testability,test,tests,1641," to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where. #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151. #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173. #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0). at /data/cmsbld/jenkins/w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:1647,testability,test,testBuildDir,1647,"file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault. 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where. #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151. #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173. #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0). at /data/cmsbld/jenkins/workspace/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:1927,testability,test,tests,1927,"95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where. #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151. #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173. #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TSystem.cxx:780. #6 0x00007ffff6864ec4 in TUnixSystem::IsPathLocal (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/stor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:1933,testability,test,testBuildDir,1933,"t /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where. #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151. #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173. #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TSystem.cxx:780. #6 0x00007ffff6864ec4 in TUnixSystem::IsPathLocal (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Ru",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:2216,testability,test,tests,2216,"workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151. #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173. #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TSystem.cxx:780. #6 0x00007ffff6864ec4 in TUnixSystem::IsPathLocal (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root""). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/unix/src/T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:2222,testability,test,testBuildDir,2222,"/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86. #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151. #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173. #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TSystem.cxx:780. #6 0x00007ffff6864ec4 in TUnixSystem::IsPathLocal (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root""). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/unix/src/TUnixSyste",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:2663,testability,test,tests,2663,"slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151. #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173. #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TSystem.cxx:780. #6 0x00007ffff6864ec4 in TUnixSystem::IsPathLocal (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root""). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/unix/src/TUnixSystem.cxx:1605. #7 0x00007ffff6e1fd33 in TFile::GetType (. name=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", option=0x7fffffff15b9 """", prefix=0x7fffffff1460). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:2669,testability,test,testBuildDir,2669,"4_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284. #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151. #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173. #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TSystem.cxx:780. #6 0x00007ffff6864ec4 in TUnixSystem::IsPathLocal (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root""). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/unix/src/TUnixSystem.cxx:1605. #7 0x00007ffff6e1fd33 in TFile::GetType (. name=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", option=0x7fffffff15b9 """", prefix=0x7fffffff1460). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:3098,testability,test,tests,3098,"Handler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173. #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TSystem.cxx:780. #6 0x00007ffff6864ec4 in TUnixSystem::IsPathLocal (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root""). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/unix/src/TUnixSystem.cxx:1605. #7 0x00007ffff6e1fd33 in TFile::GetType (. name=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", option=0x7fffffff15b9 """", prefix=0x7fffffff1460). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4685. #8 0x00007ffff6e1db61 in TFile::Open (. url=0x7fffb0d418e0 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:3104,testability,test,testBuildDir,3104,"ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173. #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TSystem.cxx:780. #6 0x00007ffff6864ec4 in TUnixSystem::IsPathLocal (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root""). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/unix/src/TUnixSystem.cxx:1605. #7 0x00007ffff6e1fd33 in TFile::GetType (. name=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", option=0x7fffffff15b9 """", prefix=0x7fffffff1460). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4685. #8 0x00007ffff6e1db61 in TFile::Open (. url=0x7fffb0d418e0 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:3556,testability,test,tests,3556,"00/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TSystem.cxx:780. #6 0x00007ffff6864ec4 in TUnixSystem::IsPathLocal (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root""). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/unix/src/TUnixSystem.cxx:1605. #7 0x00007ffff6e1fd33 in TFile::GetType (. name=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", option=0x7fffffff15b9 """", prefix=0x7fffffff1460). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4685. #8 0x00007ffff6e1db61 in TFile::Open (. url=0x7fffb0d418e0 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4065. #9 0x00007fffac890f2d in edm::InputFile::InputFile(char const*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:3562,testability,test,testBuildDir,3562,"12-3C97-344E-8E2F-F459A798FA74.root"", dirptr=0x0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TSystem.cxx:780. #6 0x00007ffff6864ec4 in TUnixSystem::IsPathLocal (this=0x7ffff2c38000, . path=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root""). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/unix/src/TUnixSystem.cxx:1605. #7 0x00007ffff6e1fd33 in TFile::GetType (. name=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", option=0x7fffffff15b9 """", prefix=0x7fffffff1460). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4685. #8 0x00007ffff6e1db61 in TFile::Open (. url=0x7fffb0d418e0 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4065. #9 0x00007fffac890f2d in edm::InputFile::InputFile(char const*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:4028,testability,test,tests,4028,"F-F459A798FA74.root""). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/unix/src/TUnixSystem.cxx:1605. #7 0x00007ffff6e1fd33 in TFile::GetType (. name=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", option=0x7fffffff15b9 """", prefix=0x7fffffff1460). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4685. #8 0x00007ffff6e1db61 in TFile::Open (. url=0x7fffb0d418e0 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4065. #9 0x00007fffac890f2d in edm::InputFile::InputFile(char const*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:4034,testability,test,testBuildDir,4034,"8FA74.root""). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/unix/src/TUnixSystem.cxx:1605. #7 0x00007ffff6e1fd33 in TFile::GetType (. name=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", option=0x7fffffff15b9 """", prefix=0x7fffffff1460). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4685. #8 0x00007ffff6e1db61 in TFile::Open (. url=0x7fffb0d418e0 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4065. #9 0x00007fffac890f2d in edm::InputFile::InputFile(char const*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:7379,testability,test,test,7379,"m::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #17 0x00007ffff7bc8eda in edm::EventProcessor::EventProcessor(std::shared_ptr<edm::ProcessDesc>, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (). #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105. #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (). #21 0x000000000040b62c in main (). ```. After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A. Using Dataset: /ZeroBias/Run2018A-SiStripCalMinBias-12Nov2019_UL2018-v1/ALCARECO. 27-Apr-2021 14:00:10 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. 27-Apr-2021 14:00:12 CEST Successfully opened file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. %MSG-i SiStripGainsPCLWorker: SiStripGainsPCLWorker:ALCARECOSiStripCalib@beginRun 27-Apr-2021 14:00:20 CEST Run: 315420. Resetting APV struct. %MSG. ```. this -> Successfully opened file root:// . and then working on the file. ### To Reproduce. Use this install script:. ```. /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/6831/14586/install.sh. cd CMSSW_12_0_X_2021-04-26-1100. cmsenv. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRE",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:8354,testability,test,test,8354,"0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (). #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105. #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (). #21 0x000000000040b62c in main (). ```. After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A. Using Dataset: /ZeroBias/Run2018A-SiStripCalMinBias-12Nov2019_UL2018-v1/ALCARECO. 27-Apr-2021 14:00:10 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. 27-Apr-2021 14:00:12 CEST Successfully opened file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. %MSG-i SiStripGainsPCLWorker: SiStripGainsPCLWorker:ALCARECOSiStripCalib@beginRun 27-Apr-2021 14:00:20 CEST Run: 315420. Resetting APV struct. %MSG. ```. this -> Successfully opened file root:// . and then working on the file. ### To Reproduce. Use this install script:. ```. /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/6831/14586/install.sh. cd CMSSW_12_0_X_2021-04-26-1100. cmsenv. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A. ```. ### Setup. 1. 6-22 - . https://github.com/cms-sw/root/commits/cms/v6-22-00-patches/d1d36a5f17904f7d3661c97d28da8f3954e02340. 2. SLC7. 3. Installed from source. ### Additional context. The pull request from above . https://github.com/cms-sw/cmsdist/pull/6831. is setuping cmake release type to Debug for both ROOT and XrootD . as requested in #7335.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:8578,testability,context,context,8578,"0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (). #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105. #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (). #21 0x000000000040b62c in main (). ```. After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A. Using Dataset: /ZeroBias/Run2018A-SiStripCalMinBias-12Nov2019_UL2018-v1/ALCARECO. 27-Apr-2021 14:00:10 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. 27-Apr-2021 14:00:12 CEST Successfully opened file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. %MSG-i SiStripGainsPCLWorker: SiStripGainsPCLWorker:ALCARECOSiStripCalib@beginRun 27-Apr-2021 14:00:20 CEST Run: 315420. Resetting APV struct. %MSG. ```. this -> Successfully opened file root:// . and then working on the file. ### To Reproduce. Use this install script:. ```. /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/6831/14586/install.sh. cd CMSSW_12_0_X_2021-04-26-1100. cmsenv. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A. ```. ### Setup. 1. 6-22 - . https://github.com/cms-sw/root/commits/cms/v6-22-00-patches/d1d36a5f17904f7d3661c97d28da8f3954e02340. 2. SLC7. 3. Installed from source. ### Additional context. The pull request from above . https://github.com/cms-sw/cmsdist/pull/6831. is setuping cmake release type to Debug for both ROOT and XrootD . as requested in #7335.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:4190,usability,Input,InputFile,4190,"-6.22.08/core/unix/src/TUnixSystem.cxx:1605. #7 0x00007ffff6e1fd33 in TFile::GetType (. name=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", option=0x7fffffff15b9 """", prefix=0x7fffffff1460). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4685. #8 0x00007ffff6e1db61 in TFile::Open (. url=0x7fffb0d418e0 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4065. #9 0x00007fffac890f2d in edm::InputFile::InputFile(char const*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #13 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:4201,usability,Input,InputFile,4201,"re/unix/src/TUnixSystem.cxx:1605. #7 0x00007ffff6e1fd33 in TFile::GetType (. name=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", option=0x7fffffff15b9 """", prefix=0x7fffffff1460). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4685. #8 0x00007ffff6e1db61 in TFile::Open (. url=0x7fffb0d418e0 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4065. #9 0x00007fffac890f2d in edm::InputFile::InputFile(char const*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #13 0x00007fffa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:4242,usability,Input,InputType,4242,"007ffff6e1fd33 in TFile::GetType (. name=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", option=0x7fffffff15b9 """", prefix=0x7fffffff1460). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4685. #8 0x00007ffff6e1db61 in TFile::Open (. url=0x7fffb0d418e0 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4065. #9 0x00007fffac890f2d in edm::InputFile::InputFile(char const*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:4455,usability,Input,InputSource,4455," option=0x7fffffff15b9 """", prefix=0x7fffffff1460). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4685. #8 0x00007ffff6e1db61 in TFile::Open (. url=0x7fffb0d418e0 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4065. #9 0x00007fffac890f2d in edm::InputFile::InputFile(char const*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::InputSource* (edm::ParameterSet const&, edm::InputSourceDescription const&)>::PMaker<edm::PoolSource>::create(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:4487,usability,Input,InputType,4487,"ix=0x7fffffff1460). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4685. #8 0x00007ffff6e1db61 in TFile::Open (. url=0x7fffb0d418e0 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4065. #9 0x00007fffac890f2d in edm::InputFile::InputFile(char const*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::InputSource* (edm::ParameterSet const&, edm::InputSourceDescription const&)>::PMaker<edm::PoolSource>::create(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:4746,usability,Input,InputFileCatalog,4746,"/eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0). at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4065. #9 0x00007fffac890f2d in edm::InputFile::InputFile(char const*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::InputSource* (edm::ParameterSet const&, edm::InputSourceDescription const&)>::PMaker<edm::PoolSource>::create(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:5041,usability,Input,InputSourceDescription,5041,"/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4065. #9 0x00007fffac890f2d in edm::InputFile::InputFile(char const*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::InputSource* (edm::ParameterSet const&, edm::InputSourceDescription const&)>::PMaker<edm::PoolSource>::create(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:5247,usability,Input,InputSource,5247,"(). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::InputSource* (edm::ParameterSet const&, edm::InputSourceDescription const&)>::PMaker<edm::PoolSource>::create(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:5292,usability,Input,InputSourceDescription,5292,"W_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::InputSource* (edm::ParameterSet const&, edm::InputSourceDescription const&)>::PMaker<edm::PoolSource>::create(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventPr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:5388,usability,Input,InputSourceDescription,5388,"dm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::InputSource* (edm::ParameterSet const&, edm::InputSourceDescription const&)>::PMaker<edm::PoolSource>::create(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::ServiceToken const&, edm::serviceregistry",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:5575,usability,Input,InputSourceFactory,5575,"d64_gcc900/pluginIOPoolInput.so. #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::InputSource* (edm::ParameterSet const&, edm::InputSourceDescription const&)>::PMaker<edm::PoolSource>::create(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #17 0x00007ffff7bc8eda in edm::EventProcessor::E",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:5642,usability,Input,InputSourceDescription,5642,"rimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. --Type <RET> for more, q to quit, c to continue without paging--. #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::InputSource* (edm::ParameterSet const&, edm::InputSourceDescription const&)>::PMaker<edm::PoolSource>::create(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so. #14 0x00007ffff7c33fd3 in edm::InputSourceFactory::makeInputSource(edm::ParameterSet const&, edm::InputSourceDescription const&) const (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #15 0x00007ffff7bc36cf in edm::makeInput(edm::ParameterSet&, edm::CommonParams const&, std::shared_ptr<edm::ProductRegistry>, std::shared_ptr<edm::BranchIDListHelper>, std::shared_ptr<edm::ThinnedAssociationsHelper>, std::shared_ptr<edm::ActivityRegistry>, std::shared_ptr<edm::ProcessConfiguration const>, edm::PreallocationConfiguration const&) () from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #16 0x00007ffff7bc6f5e in edm::EventProcessor::init(std::shared_ptr<edm::ProcessDesc>&, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #17 0x00007ffff7bc8eda in edm::EventProcessor::EventProcessor(std::shared_ptr<edm::ProcessDesc>, edm::ServiceToken co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/issues/8008:7321,usability,behavi,behavior,7321,"red_ptr<edm::ProcessDesc>&, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #17 0x00007ffff7bc8eda in edm::EventProcessor::EventProcessor(std::shared_ptr<edm::ProcessDesc>, edm::ServiceToken const&, edm::serviceregistry::ServiceLegacy) (). from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/libFWCoreFramework.so. #18 0x000000000040ba11 in tbb::interface7::internal::delegated_function<main::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (). #19 0x00007ffff5ef5552 in tbb::interface7::internal::task_arena_base::internal_execute (this=0x7fffffff3100, d=...) at ../../src/tbb/arena.cpp:1105. #20 0x000000000040ca13 in main::{lambda()#1}::operator()() const (). #21 0x000000000040b62c in main (). ```. After using XrootD 5.1.1 to open a file ROOT crashes in TMutex::UnLock. ### Expected behavior. ```. cmsRun src/CalibTracker/SiStripChannelGain/test/testSSTGain_PCL_FromRECO_cfg.py era=A. Using Dataset: /ZeroBias/Run2018A-SiStripCalMinBias-12Nov2019_UL2018-v1/ALCARECO. 27-Apr-2021 14:00:10 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. 27-Apr-2021 14:00:12 CEST Successfully opened file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. %MSG-i SiStripGainsPCLWorker: SiStripGainsPCLWorker:ALCARECOSiStripCalib@beginRun 27-Apr-2021 14:00:20 CEST Run: 315420. Resetting APV struct. %MSG. ```. this -> Successfully opened file root:// . and then working on the file. ### To Reproduce. Use this install script:. ```. /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/6831/14586/install.sh. cd CMSSW_12_0_X_2021-04-26-1100. cmsenv. cmsRun src/Cal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8008
https://github.com/root-project/root/pull/8009:44,deployability,build,build,44,"[skip-ci] ""Reserve"" _build as the name of a build directory; This makes it possible to use _build as a build directory name under. the source directory. The actual preferred build directory name would. be `build`, but it's already taken by project files. There is a precedent in roottest in reserving `build` in .gitignore,. and some C++ project layout guidelines such as [pitchfork](https://bit.ly/3vlQwC9). suggest the usage of `build` as a reserved, preferred name for build. directories (or `_build` as a fallback). Other precedents are entries such as `cmake-build` and `.build` in. this .gitignore, with the exact same rationale, because those are. the build directory names that CLion and VSCode pick.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8009
https://github.com/root-project/root/pull/8009:103,deployability,build,build,103,"[skip-ci] ""Reserve"" _build as the name of a build directory; This makes it possible to use _build as a build directory name under. the source directory. The actual preferred build directory name would. be `build`, but it's already taken by project files. There is a precedent in roottest in reserving `build` in .gitignore,. and some C++ project layout guidelines such as [pitchfork](https://bit.ly/3vlQwC9). suggest the usage of `build` as a reserved, preferred name for build. directories (or `_build` as a fallback). Other precedents are entries such as `cmake-build` and `.build` in. this .gitignore, with the exact same rationale, because those are. the build directory names that CLion and VSCode pick.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8009
https://github.com/root-project/root/pull/8009:174,deployability,build,build,174,"[skip-ci] ""Reserve"" _build as the name of a build directory; This makes it possible to use _build as a build directory name under. the source directory. The actual preferred build directory name would. be `build`, but it's already taken by project files. There is a precedent in roottest in reserving `build` in .gitignore,. and some C++ project layout guidelines such as [pitchfork](https://bit.ly/3vlQwC9). suggest the usage of `build` as a reserved, preferred name for build. directories (or `_build` as a fallback). Other precedents are entries such as `cmake-build` and `.build` in. this .gitignore, with the exact same rationale, because those are. the build directory names that CLion and VSCode pick.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8009
https://github.com/root-project/root/pull/8009:206,deployability,build,build,206,"[skip-ci] ""Reserve"" _build as the name of a build directory; This makes it possible to use _build as a build directory name under. the source directory. The actual preferred build directory name would. be `build`, but it's already taken by project files. There is a precedent in roottest in reserving `build` in .gitignore,. and some C++ project layout guidelines such as [pitchfork](https://bit.ly/3vlQwC9). suggest the usage of `build` as a reserved, preferred name for build. directories (or `_build` as a fallback). Other precedents are entries such as `cmake-build` and `.build` in. this .gitignore, with the exact same rationale, because those are. the build directory names that CLion and VSCode pick.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8009
https://github.com/root-project/root/pull/8009:302,deployability,build,build,302,"[skip-ci] ""Reserve"" _build as the name of a build directory; This makes it possible to use _build as a build directory name under. the source directory. The actual preferred build directory name would. be `build`, but it's already taken by project files. There is a precedent in roottest in reserving `build` in .gitignore,. and some C++ project layout guidelines such as [pitchfork](https://bit.ly/3vlQwC9). suggest the usage of `build` as a reserved, preferred name for build. directories (or `_build` as a fallback). Other precedents are entries such as `cmake-build` and `.build` in. this .gitignore, with the exact same rationale, because those are. the build directory names that CLion and VSCode pick.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8009
https://github.com/root-project/root/pull/8009:431,deployability,build,build,431,"[skip-ci] ""Reserve"" _build as the name of a build directory; This makes it possible to use _build as a build directory name under. the source directory. The actual preferred build directory name would. be `build`, but it's already taken by project files. There is a precedent in roottest in reserving `build` in .gitignore,. and some C++ project layout guidelines such as [pitchfork](https://bit.ly/3vlQwC9). suggest the usage of `build` as a reserved, preferred name for build. directories (or `_build` as a fallback). Other precedents are entries such as `cmake-build` and `.build` in. this .gitignore, with the exact same rationale, because those are. the build directory names that CLion and VSCode pick.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8009
https://github.com/root-project/root/pull/8009:472,deployability,build,build,472,"[skip-ci] ""Reserve"" _build as the name of a build directory; This makes it possible to use _build as a build directory name under. the source directory. The actual preferred build directory name would. be `build`, but it's already taken by project files. There is a precedent in roottest in reserving `build` in .gitignore,. and some C++ project layout guidelines such as [pitchfork](https://bit.ly/3vlQwC9). suggest the usage of `build` as a reserved, preferred name for build. directories (or `_build` as a fallback). Other precedents are entries such as `cmake-build` and `.build` in. this .gitignore, with the exact same rationale, because those are. the build directory names that CLion and VSCode pick.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8009
https://github.com/root-project/root/pull/8009:564,deployability,build,build,564,"[skip-ci] ""Reserve"" _build as the name of a build directory; This makes it possible to use _build as a build directory name under. the source directory. The actual preferred build directory name would. be `build`, but it's already taken by project files. There is a precedent in roottest in reserving `build` in .gitignore,. and some C++ project layout guidelines such as [pitchfork](https://bit.ly/3vlQwC9). suggest the usage of `build` as a reserved, preferred name for build. directories (or `_build` as a fallback). Other precedents are entries such as `cmake-build` and `.build` in. this .gitignore, with the exact same rationale, because those are. the build directory names that CLion and VSCode pick.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8009
https://github.com/root-project/root/pull/8009:577,deployability,build,build,577,"[skip-ci] ""Reserve"" _build as the name of a build directory; This makes it possible to use _build as a build directory name under. the source directory. The actual preferred build directory name would. be `build`, but it's already taken by project files. There is a precedent in roottest in reserving `build` in .gitignore,. and some C++ project layout guidelines such as [pitchfork](https://bit.ly/3vlQwC9). suggest the usage of `build` as a reserved, preferred name for build. directories (or `_build` as a fallback). Other precedents are entries such as `cmake-build` and `.build` in. this .gitignore, with the exact same rationale, because those are. the build directory names that CLion and VSCode pick.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8009
https://github.com/root-project/root/pull/8009:659,deployability,build,build,659,"[skip-ci] ""Reserve"" _build as the name of a build directory; This makes it possible to use _build as a build directory name under. the source directory. The actual preferred build directory name would. be `build`, but it's already taken by project files. There is a precedent in roottest in reserving `build` in .gitignore,. and some C++ project layout guidelines such as [pitchfork](https://bit.ly/3vlQwC9). suggest the usage of `build` as a reserved, preferred name for build. directories (or `_build` as a fallback). Other precedents are entries such as `cmake-build` and `.build` in. this .gitignore, with the exact same rationale, because those are. the build directory names that CLion and VSCode pick.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8009
https://github.com/root-project/root/pull/8009:164,usability,prefer,preferred,164,"[skip-ci] ""Reserve"" _build as the name of a build directory; This makes it possible to use _build as a build directory name under. the source directory. The actual preferred build directory name would. be `build`, but it's already taken by project files. There is a precedent in roottest in reserving `build` in .gitignore,. and some C++ project layout guidelines such as [pitchfork](https://bit.ly/3vlQwC9). suggest the usage of `build` as a reserved, preferred name for build. directories (or `_build` as a fallback). Other precedents are entries such as `cmake-build` and `.build` in. this .gitignore, with the exact same rationale, because those are. the build directory names that CLion and VSCode pick.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8009
https://github.com/root-project/root/pull/8009:353,usability,guid,guidelines,353,"[skip-ci] ""Reserve"" _build as the name of a build directory; This makes it possible to use _build as a build directory name under. the source directory. The actual preferred build directory name would. be `build`, but it's already taken by project files. There is a precedent in roottest in reserving `build` in .gitignore,. and some C++ project layout guidelines such as [pitchfork](https://bit.ly/3vlQwC9). suggest the usage of `build` as a reserved, preferred name for build. directories (or `_build` as a fallback). Other precedents are entries such as `cmake-build` and `.build` in. this .gitignore, with the exact same rationale, because those are. the build directory names that CLion and VSCode pick.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8009
https://github.com/root-project/root/pull/8009:453,usability,prefer,preferred,453,"[skip-ci] ""Reserve"" _build as the name of a build directory; This makes it possible to use _build as a build directory name under. the source directory. The actual preferred build directory name would. be `build`, but it's already taken by project files. There is a precedent in roottest in reserving `build` in .gitignore,. and some C++ project layout guidelines such as [pitchfork](https://bit.ly/3vlQwC9). suggest the usage of `build` as a reserved, preferred name for build. directories (or `_build` as a fallback). Other precedents are entries such as `cmake-build` and `.build` in. this .gitignore, with the exact same rationale, because those are. the build directory names that CLion and VSCode pick.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8009
https://github.com/root-project/root/issues/8011:218,availability,error,error,218,"[RF] Bug in RooAbsPdf::extendedTerm when expected events is negative; When the expected number of events becomes negative, this can happen for some combinations of the parameters, . `RooAbsPdf::extendedTerm` prints an error message, but return also a zero value. . A zero value is WRONG bacause it is a valid value which is then used in the total likelihood computation, confusing the minimization and ending up in a good wrong result. . It should return a NaN, that is now correctly propagated and handle by RooFit. . Simple example reproducing the problem: . ```. {. RooWorkspace w;. w.factory(""mu[1,-1.5,10]"");. w.factory(""prod::ns(1,mu)"");. w.factory(""prod::nb(b[1,0,10],theta[1])"");. w.factory(""sum::ntot(ns,nb)"");. w.factory(""Uniform::ff(x[0,1])"");. w.factory(""SUM::pdf(ntot*ff)"");. auto pdf = w.pdf(""pdf"");. auto x = w.var(""x"");. RooDataSet d(""data"",""data"",*x);. d.add(*x); . auto nll = pdf->createNLL(d);. auto pl = w.var(""mu"")->frame();. nll->plotOn(pl);. pl->Draw();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8011
https://github.com/root-project/root/issues/8011:969,energy efficiency,Draw,Draw,969,"[RF] Bug in RooAbsPdf::extendedTerm when expected events is negative; When the expected number of events becomes negative, this can happen for some combinations of the parameters, . `RooAbsPdf::extendedTerm` prints an error message, but return also a zero value. . A zero value is WRONG bacause it is a valid value which is then used in the total likelihood computation, confusing the minimization and ending up in a good wrong result. . It should return a NaN, that is now correctly propagated and handle by RooFit. . Simple example reproducing the problem: . ```. {. RooWorkspace w;. w.factory(""mu[1,-1.5,10]"");. w.factory(""prod::ns(1,mu)"");. w.factory(""prod::nb(b[1,0,10],theta[1])"");. w.factory(""sum::ntot(ns,nb)"");. w.factory(""Uniform::ff(x[0,1])"");. w.factory(""SUM::pdf(ntot*ff)"");. auto pdf = w.pdf(""pdf"");. auto x = w.var(""x"");. RooDataSet d(""data"",""data"",*x);. d.add(*x); . auto nll = pdf->createNLL(d);. auto pl = w.var(""mu"")->frame();. nll->plotOn(pl);. pl->Draw();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8011
https://github.com/root-project/root/issues/8011:50,integrability,event,events,50,"[RF] Bug in RooAbsPdf::extendedTerm when expected events is negative; When the expected number of events becomes negative, this can happen for some combinations of the parameters, . `RooAbsPdf::extendedTerm` prints an error message, but return also a zero value. . A zero value is WRONG bacause it is a valid value which is then used in the total likelihood computation, confusing the minimization and ending up in a good wrong result. . It should return a NaN, that is now correctly propagated and handle by RooFit. . Simple example reproducing the problem: . ```. {. RooWorkspace w;. w.factory(""mu[1,-1.5,10]"");. w.factory(""prod::ns(1,mu)"");. w.factory(""prod::nb(b[1,0,10],theta[1])"");. w.factory(""sum::ntot(ns,nb)"");. w.factory(""Uniform::ff(x[0,1])"");. w.factory(""SUM::pdf(ntot*ff)"");. auto pdf = w.pdf(""pdf"");. auto x = w.var(""x"");. RooDataSet d(""data"",""data"",*x);. d.add(*x); . auto nll = pdf->createNLL(d);. auto pl = w.var(""mu"")->frame();. nll->plotOn(pl);. pl->Draw();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8011
https://github.com/root-project/root/issues/8011:98,integrability,event,events,98,"[RF] Bug in RooAbsPdf::extendedTerm when expected events is negative; When the expected number of events becomes negative, this can happen for some combinations of the parameters, . `RooAbsPdf::extendedTerm` prints an error message, but return also a zero value. . A zero value is WRONG bacause it is a valid value which is then used in the total likelihood computation, confusing the minimization and ending up in a good wrong result. . It should return a NaN, that is now correctly propagated and handle by RooFit. . Simple example reproducing the problem: . ```. {. RooWorkspace w;. w.factory(""mu[1,-1.5,10]"");. w.factory(""prod::ns(1,mu)"");. w.factory(""prod::nb(b[1,0,10],theta[1])"");. w.factory(""sum::ntot(ns,nb)"");. w.factory(""Uniform::ff(x[0,1])"");. w.factory(""SUM::pdf(ntot*ff)"");. auto pdf = w.pdf(""pdf"");. auto x = w.var(""x"");. RooDataSet d(""data"",""data"",*x);. d.add(*x); . auto nll = pdf->createNLL(d);. auto pl = w.var(""mu"")->frame();. nll->plotOn(pl);. pl->Draw();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8011
https://github.com/root-project/root/issues/8011:224,integrability,messag,message,224,"[RF] Bug in RooAbsPdf::extendedTerm when expected events is negative; When the expected number of events becomes negative, this can happen for some combinations of the parameters, . `RooAbsPdf::extendedTerm` prints an error message, but return also a zero value. . A zero value is WRONG bacause it is a valid value which is then used in the total likelihood computation, confusing the minimization and ending up in a good wrong result. . It should return a NaN, that is now correctly propagated and handle by RooFit. . Simple example reproducing the problem: . ```. {. RooWorkspace w;. w.factory(""mu[1,-1.5,10]"");. w.factory(""prod::ns(1,mu)"");. w.factory(""prod::nb(b[1,0,10],theta[1])"");. w.factory(""sum::ntot(ns,nb)"");. w.factory(""Uniform::ff(x[0,1])"");. w.factory(""SUM::pdf(ntot*ff)"");. auto pdf = w.pdf(""pdf"");. auto x = w.var(""x"");. RooDataSet d(""data"",""data"",*x);. d.add(*x); . auto nll = pdf->createNLL(d);. auto pl = w.var(""mu"")->frame();. nll->plotOn(pl);. pl->Draw();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8011
https://github.com/root-project/root/issues/8011:224,interoperability,messag,message,224,"[RF] Bug in RooAbsPdf::extendedTerm when expected events is negative; When the expected number of events becomes negative, this can happen for some combinations of the parameters, . `RooAbsPdf::extendedTerm` prints an error message, but return also a zero value. . A zero value is WRONG bacause it is a valid value which is then used in the total likelihood computation, confusing the minimization and ending up in a good wrong result. . It should return a NaN, that is now correctly propagated and handle by RooFit. . Simple example reproducing the problem: . ```. {. RooWorkspace w;. w.factory(""mu[1,-1.5,10]"");. w.factory(""prod::ns(1,mu)"");. w.factory(""prod::nb(b[1,0,10],theta[1])"");. w.factory(""sum::ntot(ns,nb)"");. w.factory(""Uniform::ff(x[0,1])"");. w.factory(""SUM::pdf(ntot*ff)"");. auto pdf = w.pdf(""pdf"");. auto x = w.var(""x"");. RooDataSet d(""data"",""data"",*x);. d.add(*x); . auto nll = pdf->createNLL(d);. auto pl = w.var(""mu"")->frame();. nll->plotOn(pl);. pl->Draw();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8011
https://github.com/root-project/root/issues/8011:23,modifiability,exten,extendedTerm,23,"[RF] Bug in RooAbsPdf::extendedTerm when expected events is negative; When the expected number of events becomes negative, this can happen for some combinations of the parameters, . `RooAbsPdf::extendedTerm` prints an error message, but return also a zero value. . A zero value is WRONG bacause it is a valid value which is then used in the total likelihood computation, confusing the minimization and ending up in a good wrong result. . It should return a NaN, that is now correctly propagated and handle by RooFit. . Simple example reproducing the problem: . ```. {. RooWorkspace w;. w.factory(""mu[1,-1.5,10]"");. w.factory(""prod::ns(1,mu)"");. w.factory(""prod::nb(b[1,0,10],theta[1])"");. w.factory(""sum::ntot(ns,nb)"");. w.factory(""Uniform::ff(x[0,1])"");. w.factory(""SUM::pdf(ntot*ff)"");. auto pdf = w.pdf(""pdf"");. auto x = w.var(""x"");. RooDataSet d(""data"",""data"",*x);. d.add(*x); . auto nll = pdf->createNLL(d);. auto pl = w.var(""mu"")->frame();. nll->plotOn(pl);. pl->Draw();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8011
https://github.com/root-project/root/issues/8011:168,modifiability,paramet,parameters,168,"[RF] Bug in RooAbsPdf::extendedTerm when expected events is negative; When the expected number of events becomes negative, this can happen for some combinations of the parameters, . `RooAbsPdf::extendedTerm` prints an error message, but return also a zero value. . A zero value is WRONG bacause it is a valid value which is then used in the total likelihood computation, confusing the minimization and ending up in a good wrong result. . It should return a NaN, that is now correctly propagated and handle by RooFit. . Simple example reproducing the problem: . ```. {. RooWorkspace w;. w.factory(""mu[1,-1.5,10]"");. w.factory(""prod::ns(1,mu)"");. w.factory(""prod::nb(b[1,0,10],theta[1])"");. w.factory(""sum::ntot(ns,nb)"");. w.factory(""Uniform::ff(x[0,1])"");. w.factory(""SUM::pdf(ntot*ff)"");. auto pdf = w.pdf(""pdf"");. auto x = w.var(""x"");. RooDataSet d(""data"",""data"",*x);. d.add(*x); . auto nll = pdf->createNLL(d);. auto pl = w.var(""mu"")->frame();. nll->plotOn(pl);. pl->Draw();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8011
https://github.com/root-project/root/issues/8011:194,modifiability,exten,extendedTerm,194,"[RF] Bug in RooAbsPdf::extendedTerm when expected events is negative; When the expected number of events becomes negative, this can happen for some combinations of the parameters, . `RooAbsPdf::extendedTerm` prints an error message, but return also a zero value. . A zero value is WRONG bacause it is a valid value which is then used in the total likelihood computation, confusing the minimization and ending up in a good wrong result. . It should return a NaN, that is now correctly propagated and handle by RooFit. . Simple example reproducing the problem: . ```. {. RooWorkspace w;. w.factory(""mu[1,-1.5,10]"");. w.factory(""prod::ns(1,mu)"");. w.factory(""prod::nb(b[1,0,10],theta[1])"");. w.factory(""sum::ntot(ns,nb)"");. w.factory(""Uniform::ff(x[0,1])"");. w.factory(""SUM::pdf(ntot*ff)"");. auto pdf = w.pdf(""pdf"");. auto x = w.var(""x"");. RooDataSet d(""data"",""data"",*x);. d.add(*x); . auto nll = pdf->createNLL(d);. auto pl = w.var(""mu"")->frame();. nll->plotOn(pl);. pl->Draw();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8011
https://github.com/root-project/root/issues/8011:218,performance,error,error,218,"[RF] Bug in RooAbsPdf::extendedTerm when expected events is negative; When the expected number of events becomes negative, this can happen for some combinations of the parameters, . `RooAbsPdf::extendedTerm` prints an error message, but return also a zero value. . A zero value is WRONG bacause it is a valid value which is then used in the total likelihood computation, confusing the minimization and ending up in a good wrong result. . It should return a NaN, that is now correctly propagated and handle by RooFit. . Simple example reproducing the problem: . ```. {. RooWorkspace w;. w.factory(""mu[1,-1.5,10]"");. w.factory(""prod::ns(1,mu)"");. w.factory(""prod::nb(b[1,0,10],theta[1])"");. w.factory(""sum::ntot(ns,nb)"");. w.factory(""Uniform::ff(x[0,1])"");. w.factory(""SUM::pdf(ntot*ff)"");. auto pdf = w.pdf(""pdf"");. auto x = w.var(""x"");. RooDataSet d(""data"",""data"",*x);. d.add(*x); . auto nll = pdf->createNLL(d);. auto pl = w.var(""mu"")->frame();. nll->plotOn(pl);. pl->Draw();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8011
https://github.com/root-project/root/issues/8011:218,safety,error,error,218,"[RF] Bug in RooAbsPdf::extendedTerm when expected events is negative; When the expected number of events becomes negative, this can happen for some combinations of the parameters, . `RooAbsPdf::extendedTerm` prints an error message, but return also a zero value. . A zero value is WRONG bacause it is a valid value which is then used in the total likelihood computation, confusing the minimization and ending up in a good wrong result. . It should return a NaN, that is now correctly propagated and handle by RooFit. . Simple example reproducing the problem: . ```. {. RooWorkspace w;. w.factory(""mu[1,-1.5,10]"");. w.factory(""prod::ns(1,mu)"");. w.factory(""prod::nb(b[1,0,10],theta[1])"");. w.factory(""sum::ntot(ns,nb)"");. w.factory(""Uniform::ff(x[0,1])"");. w.factory(""SUM::pdf(ntot*ff)"");. auto pdf = w.pdf(""pdf"");. auto x = w.var(""x"");. RooDataSet d(""data"",""data"",*x);. d.add(*x); . auto nll = pdf->createNLL(d);. auto pl = w.var(""mu"")->frame();. nll->plotOn(pl);. pl->Draw();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8011
https://github.com/root-project/root/issues/8011:303,safety,valid,valid,303,"[RF] Bug in RooAbsPdf::extendedTerm when expected events is negative; When the expected number of events becomes negative, this can happen for some combinations of the parameters, . `RooAbsPdf::extendedTerm` prints an error message, but return also a zero value. . A zero value is WRONG bacause it is a valid value which is then used in the total likelihood computation, confusing the minimization and ending up in a good wrong result. . It should return a NaN, that is now correctly propagated and handle by RooFit. . Simple example reproducing the problem: . ```. {. RooWorkspace w;. w.factory(""mu[1,-1.5,10]"");. w.factory(""prod::ns(1,mu)"");. w.factory(""prod::nb(b[1,0,10],theta[1])"");. w.factory(""sum::ntot(ns,nb)"");. w.factory(""Uniform::ff(x[0,1])"");. w.factory(""SUM::pdf(ntot*ff)"");. auto pdf = w.pdf(""pdf"");. auto x = w.var(""x"");. RooDataSet d(""data"",""data"",*x);. d.add(*x); . auto nll = pdf->createNLL(d);. auto pl = w.var(""mu"")->frame();. nll->plotOn(pl);. pl->Draw();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8011
https://github.com/root-project/root/issues/8011:519,testability,Simpl,Simple,519,"[RF] Bug in RooAbsPdf::extendedTerm when expected events is negative; When the expected number of events becomes negative, this can happen for some combinations of the parameters, . `RooAbsPdf::extendedTerm` prints an error message, but return also a zero value. . A zero value is WRONG bacause it is a valid value which is then used in the total likelihood computation, confusing the minimization and ending up in a good wrong result. . It should return a NaN, that is now correctly propagated and handle by RooFit. . Simple example reproducing the problem: . ```. {. RooWorkspace w;. w.factory(""mu[1,-1.5,10]"");. w.factory(""prod::ns(1,mu)"");. w.factory(""prod::nb(b[1,0,10],theta[1])"");. w.factory(""sum::ntot(ns,nb)"");. w.factory(""Uniform::ff(x[0,1])"");. w.factory(""SUM::pdf(ntot*ff)"");. auto pdf = w.pdf(""pdf"");. auto x = w.var(""x"");. RooDataSet d(""data"",""data"",*x);. d.add(*x); . auto nll = pdf->createNLL(d);. auto pl = w.var(""mu"")->frame();. nll->plotOn(pl);. pl->Draw();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8011
https://github.com/root-project/root/issues/8011:218,usability,error,error,218,"[RF] Bug in RooAbsPdf::extendedTerm when expected events is negative; When the expected number of events becomes negative, this can happen for some combinations of the parameters, . `RooAbsPdf::extendedTerm` prints an error message, but return also a zero value. . A zero value is WRONG bacause it is a valid value which is then used in the total likelihood computation, confusing the minimization and ending up in a good wrong result. . It should return a NaN, that is now correctly propagated and handle by RooFit. . Simple example reproducing the problem: . ```. {. RooWorkspace w;. w.factory(""mu[1,-1.5,10]"");. w.factory(""prod::ns(1,mu)"");. w.factory(""prod::nb(b[1,0,10],theta[1])"");. w.factory(""sum::ntot(ns,nb)"");. w.factory(""Uniform::ff(x[0,1])"");. w.factory(""SUM::pdf(ntot*ff)"");. auto pdf = w.pdf(""pdf"");. auto x = w.var(""x"");. RooDataSet d(""data"",""data"",*x);. d.add(*x); . auto nll = pdf->createNLL(d);. auto pl = w.var(""mu"")->frame();. nll->plotOn(pl);. pl->Draw();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8011
https://github.com/root-project/root/issues/8011:385,usability,minim,minimization,385,"[RF] Bug in RooAbsPdf::extendedTerm when expected events is negative; When the expected number of events becomes negative, this can happen for some combinations of the parameters, . `RooAbsPdf::extendedTerm` prints an error message, but return also a zero value. . A zero value is WRONG bacause it is a valid value which is then used in the total likelihood computation, confusing the minimization and ending up in a good wrong result. . It should return a NaN, that is now correctly propagated and handle by RooFit. . Simple example reproducing the problem: . ```. {. RooWorkspace w;. w.factory(""mu[1,-1.5,10]"");. w.factory(""prod::ns(1,mu)"");. w.factory(""prod::nb(b[1,0,10],theta[1])"");. w.factory(""sum::ntot(ns,nb)"");. w.factory(""Uniform::ff(x[0,1])"");. w.factory(""SUM::pdf(ntot*ff)"");. auto pdf = w.pdf(""pdf"");. auto x = w.var(""x"");. RooDataSet d(""data"",""data"",*x);. d.add(*x); . auto nll = pdf->createNLL(d);. auto pl = w.var(""mu"")->frame();. nll->plotOn(pl);. pl->Draw();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8011
https://github.com/root-project/root/issues/8011:519,usability,Simpl,Simple,519,"[RF] Bug in RooAbsPdf::extendedTerm when expected events is negative; When the expected number of events becomes negative, this can happen for some combinations of the parameters, . `RooAbsPdf::extendedTerm` prints an error message, but return also a zero value. . A zero value is WRONG bacause it is a valid value which is then used in the total likelihood computation, confusing the minimization and ending up in a good wrong result. . It should return a NaN, that is now correctly propagated and handle by RooFit. . Simple example reproducing the problem: . ```. {. RooWorkspace w;. w.factory(""mu[1,-1.5,10]"");. w.factory(""prod::ns(1,mu)"");. w.factory(""prod::nb(b[1,0,10],theta[1])"");. w.factory(""sum::ntot(ns,nb)"");. w.factory(""Uniform::ff(x[0,1])"");. w.factory(""SUM::pdf(ntot*ff)"");. auto pdf = w.pdf(""pdf"");. auto x = w.var(""x"");. RooDataSet d(""data"",""data"",*x);. d.add(*x); . auto nll = pdf->createNLL(d);. auto pl = w.var(""mu"")->frame();. nll->plotOn(pl);. pl->Draw();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8011
https://github.com/root-project/root/pull/8012:42,integrability,event,events,42,"Fix RooAbsPdf::extendedTerm when expected events is negative; When the expected number of events is negative, return a NaN instead of 0. This fixes #8011",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8012
https://github.com/root-project/root/pull/8012:90,integrability,event,events,90,"Fix RooAbsPdf::extendedTerm when expected events is negative; When the expected number of events is negative, return a NaN instead of 0. This fixes #8011",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8012
https://github.com/root-project/root/pull/8012:15,modifiability,exten,extendedTerm,15,"Fix RooAbsPdf::extendedTerm when expected events is negative; When the expected number of events is negative, return a NaN instead of 0. This fixes #8011",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8012
https://github.com/root-project/root/pull/8013:60,interoperability,format,formatting,60,[tree] Port to Win64 (replace Long_t by Longptr_t + pointer formatting);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8013
https://github.com/root-project/root/pull/8014:13,integrability,buffer,buffered,13,[ntuple] Use buffered sink by default;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8014
https://github.com/root-project/root/issues/8015:12,deployability,build,building,12,"[RF] Bug in building a combined RooDataHist ; As reported in https://root-forum.cern.ch/t/roosimultaneous-fit-on-categories-with-different-x-variables-bad-combined-data/44578. there is a bug in building a combined RooDataHist from single RooDataHist objects. When importing diorectly from TH1 object works fine, as shown in the tutorial . https://root.cern.ch/doc/master/rf401__importttreethx_8C.html. When using bins different than 100 bins and importing using RooDataHist, the default number of bins of the ROoRealVar (100) is used. Code example:. ```. {. using namespace RooFit;. TH1 *hh_1 = new TH1D(""h1"",""h1"",40,-3,3); hh_1->FillRandom(""gaus"");. TH1 *hh_2 = new TH1D(""h2"",""h2"",40,-3,3); hh_2->FillRandom(""gaus"");. . // Declare observable x. RooRealVar x(""x"", ""x"", -10, 10);. // Create category observable c that serves as index for the ROOT histograms. RooCategory c(""c"", ""c"", {{""SampleA"",0}, {""SampleB"",1}});. // Create a binned dataset that imports contents of all TH1 mapped by index category c. /// RooDataHist *dh = new RooDataHist(""dh"", ""dh"", x, Index(c), Import(""SampleA"", *hh_1), Import(""SampleB"", *hh_2), Import(""SampleC"", *hh_3));. RooDataHist dh_1(""dh1"",""dh1"",x,hh_1);. RooDataHist dh_2(""dh2"",""dh1"",x,hh_2);. . RooDataHist *dh = new RooDataHist(""dh"", ""dh"", x, Index(c), Import(""SampleA"", dh_1), Import(""SampleB"", dh_2));. dh->Print(); // wil print wrong number of entries (200 instead of 80). // this will work fine. RooDataHist * dh2 = new RooDataHist(""dh2"", ""dh2"", x, Index(c), Import(""SampleA"", *hh_1), Import(""SampleB"", *hh_2));. dh2->Print();. }. }",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8015
https://github.com/root-project/root/issues/8015:194,deployability,build,building,194,"[RF] Bug in building a combined RooDataHist ; As reported in https://root-forum.cern.ch/t/roosimultaneous-fit-on-categories-with-different-x-variables-bad-combined-data/44578. there is a bug in building a combined RooDataHist from single RooDataHist objects. When importing diorectly from TH1 object works fine, as shown in the tutorial . https://root.cern.ch/doc/master/rf401__importttreethx_8C.html. When using bins different than 100 bins and importing using RooDataHist, the default number of bins of the ROoRealVar (100) is used. Code example:. ```. {. using namespace RooFit;. TH1 *hh_1 = new TH1D(""h1"",""h1"",40,-3,3); hh_1->FillRandom(""gaus"");. TH1 *hh_2 = new TH1D(""h2"",""h2"",40,-3,3); hh_2->FillRandom(""gaus"");. . // Declare observable x. RooRealVar x(""x"", ""x"", -10, 10);. // Create category observable c that serves as index for the ROOT histograms. RooCategory c(""c"", ""c"", {{""SampleA"",0}, {""SampleB"",1}});. // Create a binned dataset that imports contents of all TH1 mapped by index category c. /// RooDataHist *dh = new RooDataHist(""dh"", ""dh"", x, Index(c), Import(""SampleA"", *hh_1), Import(""SampleB"", *hh_2), Import(""SampleC"", *hh_3));. RooDataHist dh_1(""dh1"",""dh1"",x,hh_1);. RooDataHist dh_2(""dh2"",""dh1"",x,hh_2);. . RooDataHist *dh = new RooDataHist(""dh"", ""dh"", x, Index(c), Import(""SampleA"", dh_1), Import(""SampleB"", dh_2));. dh->Print(); // wil print wrong number of entries (200 instead of 80). // this will work fine. RooDataHist * dh2 = new RooDataHist(""dh2"", ""dh2"", x, Index(c), Import(""SampleA"", *hh_1), Import(""SampleB"", *hh_2));. dh2->Print();. }. }",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8015
https://github.com/root-project/root/issues/8015:732,deployability,observ,observable,732,"[RF] Bug in building a combined RooDataHist ; As reported in https://root-forum.cern.ch/t/roosimultaneous-fit-on-categories-with-different-x-variables-bad-combined-data/44578. there is a bug in building a combined RooDataHist from single RooDataHist objects. When importing diorectly from TH1 object works fine, as shown in the tutorial . https://root.cern.ch/doc/master/rf401__importttreethx_8C.html. When using bins different than 100 bins and importing using RooDataHist, the default number of bins of the ROoRealVar (100) is used. Code example:. ```. {. using namespace RooFit;. TH1 *hh_1 = new TH1D(""h1"",""h1"",40,-3,3); hh_1->FillRandom(""gaus"");. TH1 *hh_2 = new TH1D(""h2"",""h2"",40,-3,3); hh_2->FillRandom(""gaus"");. . // Declare observable x. RooRealVar x(""x"", ""x"", -10, 10);. // Create category observable c that serves as index for the ROOT histograms. RooCategory c(""c"", ""c"", {{""SampleA"",0}, {""SampleB"",1}});. // Create a binned dataset that imports contents of all TH1 mapped by index category c. /// RooDataHist *dh = new RooDataHist(""dh"", ""dh"", x, Index(c), Import(""SampleA"", *hh_1), Import(""SampleB"", *hh_2), Import(""SampleC"", *hh_3));. RooDataHist dh_1(""dh1"",""dh1"",x,hh_1);. RooDataHist dh_2(""dh2"",""dh1"",x,hh_2);. . RooDataHist *dh = new RooDataHist(""dh"", ""dh"", x, Index(c), Import(""SampleA"", dh_1), Import(""SampleB"", dh_2));. dh->Print(); // wil print wrong number of entries (200 instead of 80). // this will work fine. RooDataHist * dh2 = new RooDataHist(""dh2"", ""dh2"", x, Index(c), Import(""SampleA"", *hh_1), Import(""SampleB"", *hh_2));. dh2->Print();. }. }",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8015
https://github.com/root-project/root/issues/8015:799,deployability,observ,observable,799,"[RF] Bug in building a combined RooDataHist ; As reported in https://root-forum.cern.ch/t/roosimultaneous-fit-on-categories-with-different-x-variables-bad-combined-data/44578. there is a bug in building a combined RooDataHist from single RooDataHist objects. When importing diorectly from TH1 object works fine, as shown in the tutorial . https://root.cern.ch/doc/master/rf401__importttreethx_8C.html. When using bins different than 100 bins and importing using RooDataHist, the default number of bins of the ROoRealVar (100) is used. Code example:. ```. {. using namespace RooFit;. TH1 *hh_1 = new TH1D(""h1"",""h1"",40,-3,3); hh_1->FillRandom(""gaus"");. TH1 *hh_2 = new TH1D(""h2"",""h2"",40,-3,3); hh_2->FillRandom(""gaus"");. . // Declare observable x. RooRealVar x(""x"", ""x"", -10, 10);. // Create category observable c that serves as index for the ROOT histograms. RooCategory c(""c"", ""c"", {{""SampleA"",0}, {""SampleB"",1}});. // Create a binned dataset that imports contents of all TH1 mapped by index category c. /// RooDataHist *dh = new RooDataHist(""dh"", ""dh"", x, Index(c), Import(""SampleA"", *hh_1), Import(""SampleB"", *hh_2), Import(""SampleC"", *hh_3));. RooDataHist dh_1(""dh1"",""dh1"",x,hh_1);. RooDataHist dh_2(""dh2"",""dh1"",x,hh_2);. . RooDataHist *dh = new RooDataHist(""dh"", ""dh"", x, Index(c), Import(""SampleA"", dh_1), Import(""SampleB"", dh_2));. dh->Print(); // wil print wrong number of entries (200 instead of 80). // this will work fine. RooDataHist * dh2 = new RooDataHist(""dh2"", ""dh2"", x, Index(c), Import(""SampleA"", *hh_1), Import(""SampleB"", *hh_2));. dh2->Print();. }. }",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8015
https://github.com/root-project/root/issues/8015:141,modifiability,variab,variables-bad-combined-data,141,"[RF] Bug in building a combined RooDataHist ; As reported in https://root-forum.cern.ch/t/roosimultaneous-fit-on-categories-with-different-x-variables-bad-combined-data/44578. there is a bug in building a combined RooDataHist from single RooDataHist objects. When importing diorectly from TH1 object works fine, as shown in the tutorial . https://root.cern.ch/doc/master/rf401__importttreethx_8C.html. When using bins different than 100 bins and importing using RooDataHist, the default number of bins of the ROoRealVar (100) is used. Code example:. ```. {. using namespace RooFit;. TH1 *hh_1 = new TH1D(""h1"",""h1"",40,-3,3); hh_1->FillRandom(""gaus"");. TH1 *hh_2 = new TH1D(""h2"",""h2"",40,-3,3); hh_2->FillRandom(""gaus"");. . // Declare observable x. RooRealVar x(""x"", ""x"", -10, 10);. // Create category observable c that serves as index for the ROOT histograms. RooCategory c(""c"", ""c"", {{""SampleA"",0}, {""SampleB"",1}});. // Create a binned dataset that imports contents of all TH1 mapped by index category c. /// RooDataHist *dh = new RooDataHist(""dh"", ""dh"", x, Index(c), Import(""SampleA"", *hh_1), Import(""SampleB"", *hh_2), Import(""SampleC"", *hh_3));. RooDataHist dh_1(""dh1"",""dh1"",x,hh_1);. RooDataHist dh_2(""dh2"",""dh1"",x,hh_2);. . RooDataHist *dh = new RooDataHist(""dh"", ""dh"", x, Index(c), Import(""SampleA"", dh_1), Import(""SampleB"", dh_2));. dh->Print(); // wil print wrong number of entries (200 instead of 80). // this will work fine. RooDataHist * dh2 = new RooDataHist(""dh2"", ""dh2"", x, Index(c), Import(""SampleA"", *hh_1), Import(""SampleB"", *hh_2));. dh2->Print();. }. }",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8015
https://github.com/root-project/root/issues/8015:956,performance,content,contents,956,"[RF] Bug in building a combined RooDataHist ; As reported in https://root-forum.cern.ch/t/roosimultaneous-fit-on-categories-with-different-x-variables-bad-combined-data/44578. there is a bug in building a combined RooDataHist from single RooDataHist objects. When importing diorectly from TH1 object works fine, as shown in the tutorial . https://root.cern.ch/doc/master/rf401__importttreethx_8C.html. When using bins different than 100 bins and importing using RooDataHist, the default number of bins of the ROoRealVar (100) is used. Code example:. ```. {. using namespace RooFit;. TH1 *hh_1 = new TH1D(""h1"",""h1"",40,-3,3); hh_1->FillRandom(""gaus"");. TH1 *hh_2 = new TH1D(""h2"",""h2"",40,-3,3); hh_2->FillRandom(""gaus"");. . // Declare observable x. RooRealVar x(""x"", ""x"", -10, 10);. // Create category observable c that serves as index for the ROOT histograms. RooCategory c(""c"", ""c"", {{""SampleA"",0}, {""SampleB"",1}});. // Create a binned dataset that imports contents of all TH1 mapped by index category c. /// RooDataHist *dh = new RooDataHist(""dh"", ""dh"", x, Index(c), Import(""SampleA"", *hh_1), Import(""SampleB"", *hh_2), Import(""SampleC"", *hh_3));. RooDataHist dh_1(""dh1"",""dh1"",x,hh_1);. RooDataHist dh_2(""dh2"",""dh1"",x,hh_2);. . RooDataHist *dh = new RooDataHist(""dh"", ""dh"", x, Index(c), Import(""SampleA"", dh_1), Import(""SampleB"", dh_2));. dh->Print(); // wil print wrong number of entries (200 instead of 80). // this will work fine. RooDataHist * dh2 = new RooDataHist(""dh2"", ""dh2"", x, Index(c), Import(""SampleA"", *hh_1), Import(""SampleB"", *hh_2));. dh2->Print();. }. }",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8015
https://github.com/root-project/root/issues/8015:732,testability,observ,observable,732,"[RF] Bug in building a combined RooDataHist ; As reported in https://root-forum.cern.ch/t/roosimultaneous-fit-on-categories-with-different-x-variables-bad-combined-data/44578. there is a bug in building a combined RooDataHist from single RooDataHist objects. When importing diorectly from TH1 object works fine, as shown in the tutorial . https://root.cern.ch/doc/master/rf401__importttreethx_8C.html. When using bins different than 100 bins and importing using RooDataHist, the default number of bins of the ROoRealVar (100) is used. Code example:. ```. {. using namespace RooFit;. TH1 *hh_1 = new TH1D(""h1"",""h1"",40,-3,3); hh_1->FillRandom(""gaus"");. TH1 *hh_2 = new TH1D(""h2"",""h2"",40,-3,3); hh_2->FillRandom(""gaus"");. . // Declare observable x. RooRealVar x(""x"", ""x"", -10, 10);. // Create category observable c that serves as index for the ROOT histograms. RooCategory c(""c"", ""c"", {{""SampleA"",0}, {""SampleB"",1}});. // Create a binned dataset that imports contents of all TH1 mapped by index category c. /// RooDataHist *dh = new RooDataHist(""dh"", ""dh"", x, Index(c), Import(""SampleA"", *hh_1), Import(""SampleB"", *hh_2), Import(""SampleC"", *hh_3));. RooDataHist dh_1(""dh1"",""dh1"",x,hh_1);. RooDataHist dh_2(""dh2"",""dh1"",x,hh_2);. . RooDataHist *dh = new RooDataHist(""dh"", ""dh"", x, Index(c), Import(""SampleA"", dh_1), Import(""SampleB"", dh_2));. dh->Print(); // wil print wrong number of entries (200 instead of 80). // this will work fine. RooDataHist * dh2 = new RooDataHist(""dh2"", ""dh2"", x, Index(c), Import(""SampleA"", *hh_1), Import(""SampleB"", *hh_2));. dh2->Print();. }. }",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8015
https://github.com/root-project/root/issues/8015:799,testability,observ,observable,799,"[RF] Bug in building a combined RooDataHist ; As reported in https://root-forum.cern.ch/t/roosimultaneous-fit-on-categories-with-different-x-variables-bad-combined-data/44578. there is a bug in building a combined RooDataHist from single RooDataHist objects. When importing diorectly from TH1 object works fine, as shown in the tutorial . https://root.cern.ch/doc/master/rf401__importttreethx_8C.html. When using bins different than 100 bins and importing using RooDataHist, the default number of bins of the ROoRealVar (100) is used. Code example:. ```. {. using namespace RooFit;. TH1 *hh_1 = new TH1D(""h1"",""h1"",40,-3,3); hh_1->FillRandom(""gaus"");. TH1 *hh_2 = new TH1D(""h2"",""h2"",40,-3,3); hh_2->FillRandom(""gaus"");. . // Declare observable x. RooRealVar x(""x"", ""x"", -10, 10);. // Create category observable c that serves as index for the ROOT histograms. RooCategory c(""c"", ""c"", {{""SampleA"",0}, {""SampleB"",1}});. // Create a binned dataset that imports contents of all TH1 mapped by index category c. /// RooDataHist *dh = new RooDataHist(""dh"", ""dh"", x, Index(c), Import(""SampleA"", *hh_1), Import(""SampleB"", *hh_2), Import(""SampleC"", *hh_3));. RooDataHist dh_1(""dh1"",""dh1"",x,hh_1);. RooDataHist dh_2(""dh2"",""dh1"",x,hh_2);. . RooDataHist *dh = new RooDataHist(""dh"", ""dh"", x, Index(c), Import(""SampleA"", dh_1), Import(""SampleB"", dh_2));. dh->Print(); // wil print wrong number of entries (200 instead of 80). // this will work fine. RooDataHist * dh2 = new RooDataHist(""dh2"", ""dh2"", x, Index(c), Import(""SampleA"", *hh_1), Import(""SampleB"", *hh_2));. dh2->Print();. }. }",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8015
https://github.com/root-project/root/pull/8017:23,deployability,build,building,23,"[core] ACLiC: speed up building / loading:; Instead of looking for libraries resolving each unresolved symbol,. just load each lib resolving symbols: this will allow subsequent. missing symbols to be resolved from the loaded library quickly,. without touching disk. When loading an existing ACLiC library, and if we expect it. to contain the dependencies (explicit linking), just load itt,. instead of trying to (re-)determine its dependencies from its. undefined symbols: the outcome should be just the library. dependencies we expect the library to know already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8017
https://github.com/root-project/root/pull/8017:330,deployability,contain,contain,330,"[core] ACLiC: speed up building / loading:; Instead of looking for libraries resolving each unresolved symbol,. just load each lib resolving symbols: this will allow subsequent. missing symbols to be resolved from the loaded library quickly,. without touching disk. When loading an existing ACLiC library, and if we expect it. to contain the dependencies (explicit linking), just load itt,. instead of trying to (re-)determine its dependencies from its. undefined symbols: the outcome should be just the library. dependencies we expect the library to know already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8017
https://github.com/root-project/root/pull/8017:342,deployability,depend,dependencies,342,"[core] ACLiC: speed up building / loading:; Instead of looking for libraries resolving each unresolved symbol,. just load each lib resolving symbols: this will allow subsequent. missing symbols to be resolved from the loaded library quickly,. without touching disk. When loading an existing ACLiC library, and if we expect it. to contain the dependencies (explicit linking), just load itt,. instead of trying to (re-)determine its dependencies from its. undefined symbols: the outcome should be just the library. dependencies we expect the library to know already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8017
https://github.com/root-project/root/pull/8017:431,deployability,depend,dependencies,431,"[core] ACLiC: speed up building / loading:; Instead of looking for libraries resolving each unresolved symbol,. just load each lib resolving symbols: this will allow subsequent. missing symbols to be resolved from the loaded library quickly,. without touching disk. When loading an existing ACLiC library, and if we expect it. to contain the dependencies (explicit linking), just load itt,. instead of trying to (re-)determine its dependencies from its. undefined symbols: the outcome should be just the library. dependencies we expect the library to know already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8017
https://github.com/root-project/root/pull/8017:513,deployability,depend,dependencies,513,"[core] ACLiC: speed up building / loading:; Instead of looking for libraries resolving each unresolved symbol,. just load each lib resolving symbols: this will allow subsequent. missing symbols to be resolved from the loaded library quickly,. without touching disk. When loading an existing ACLiC library, and if we expect it. to contain the dependencies (explicit linking), just load itt,. instead of trying to (re-)determine its dependencies from its. undefined symbols: the outcome should be just the library. dependencies we expect the library to know already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8017
https://github.com/root-project/root/pull/8017:1,energy efficiency,core,core,1,"[core] ACLiC: speed up building / loading:; Instead of looking for libraries resolving each unresolved symbol,. just load each lib resolving symbols: this will allow subsequent. missing symbols to be resolved from the loaded library quickly,. without touching disk. When loading an existing ACLiC library, and if we expect it. to contain the dependencies (explicit linking), just load itt,. instead of trying to (re-)determine its dependencies from its. undefined symbols: the outcome should be just the library. dependencies we expect the library to know already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8017
https://github.com/root-project/root/pull/8017:34,energy efficiency,load,loading,34,"[core] ACLiC: speed up building / loading:; Instead of looking for libraries resolving each unresolved symbol,. just load each lib resolving symbols: this will allow subsequent. missing symbols to be resolved from the loaded library quickly,. without touching disk. When loading an existing ACLiC library, and if we expect it. to contain the dependencies (explicit linking), just load itt,. instead of trying to (re-)determine its dependencies from its. undefined symbols: the outcome should be just the library. dependencies we expect the library to know already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8017
https://github.com/root-project/root/pull/8017:117,energy efficiency,load,load,117,"[core] ACLiC: speed up building / loading:; Instead of looking for libraries resolving each unresolved symbol,. just load each lib resolving symbols: this will allow subsequent. missing symbols to be resolved from the loaded library quickly,. without touching disk. When loading an existing ACLiC library, and if we expect it. to contain the dependencies (explicit linking), just load itt,. instead of trying to (re-)determine its dependencies from its. undefined symbols: the outcome should be just the library. dependencies we expect the library to know already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8017
https://github.com/root-project/root/pull/8017:218,energy efficiency,load,loaded,218,"[core] ACLiC: speed up building / loading:; Instead of looking for libraries resolving each unresolved symbol,. just load each lib resolving symbols: this will allow subsequent. missing symbols to be resolved from the loaded library quickly,. without touching disk. When loading an existing ACLiC library, and if we expect it. to contain the dependencies (explicit linking), just load itt,. instead of trying to (re-)determine its dependencies from its. undefined symbols: the outcome should be just the library. dependencies we expect the library to know already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8017
https://github.com/root-project/root/pull/8017:271,energy efficiency,load,loading,271,"[core] ACLiC: speed up building / loading:; Instead of looking for libraries resolving each unresolved symbol,. just load each lib resolving symbols: this will allow subsequent. missing symbols to be resolved from the loaded library quickly,. without touching disk. When loading an existing ACLiC library, and if we expect it. to contain the dependencies (explicit linking), just load itt,. instead of trying to (re-)determine its dependencies from its. undefined symbols: the outcome should be just the library. dependencies we expect the library to know already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8017
https://github.com/root-project/root/pull/8017:380,energy efficiency,load,load,380,"[core] ACLiC: speed up building / loading:; Instead of looking for libraries resolving each unresolved symbol,. just load each lib resolving symbols: this will allow subsequent. missing symbols to be resolved from the loaded library quickly,. without touching disk. When loading an existing ACLiC library, and if we expect it. to contain the dependencies (explicit linking), just load itt,. instead of trying to (re-)determine its dependencies from its. undefined symbols: the outcome should be just the library. dependencies we expect the library to know already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8017
https://github.com/root-project/root/pull/8017:166,integrability,sub,subsequent,166,"[core] ACLiC: speed up building / loading:; Instead of looking for libraries resolving each unresolved symbol,. just load each lib resolving symbols: this will allow subsequent. missing symbols to be resolved from the loaded library quickly,. without touching disk. When loading an existing ACLiC library, and if we expect it. to contain the dependencies (explicit linking), just load itt,. instead of trying to (re-)determine its dependencies from its. undefined symbols: the outcome should be just the library. dependencies we expect the library to know already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8017
https://github.com/root-project/root/pull/8017:342,integrability,depend,dependencies,342,"[core] ACLiC: speed up building / loading:; Instead of looking for libraries resolving each unresolved symbol,. just load each lib resolving symbols: this will allow subsequent. missing symbols to be resolved from the loaded library quickly,. without touching disk. When loading an existing ACLiC library, and if we expect it. to contain the dependencies (explicit linking), just load itt,. instead of trying to (re-)determine its dependencies from its. undefined symbols: the outcome should be just the library. dependencies we expect the library to know already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8017
https://github.com/root-project/root/pull/8017:431,integrability,depend,dependencies,431,"[core] ACLiC: speed up building / loading:; Instead of looking for libraries resolving each unresolved symbol,. just load each lib resolving symbols: this will allow subsequent. missing symbols to be resolved from the loaded library quickly,. without touching disk. When loading an existing ACLiC library, and if we expect it. to contain the dependencies (explicit linking), just load itt,. instead of trying to (re-)determine its dependencies from its. undefined symbols: the outcome should be just the library. dependencies we expect the library to know already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8017
https://github.com/root-project/root/pull/8017:513,integrability,depend,dependencies,513,"[core] ACLiC: speed up building / loading:; Instead of looking for libraries resolving each unresolved symbol,. just load each lib resolving symbols: this will allow subsequent. missing symbols to be resolved from the loaded library quickly,. without touching disk. When loading an existing ACLiC library, and if we expect it. to contain the dependencies (explicit linking), just load itt,. instead of trying to (re-)determine its dependencies from its. undefined symbols: the outcome should be just the library. dependencies we expect the library to know already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8017
https://github.com/root-project/root/pull/8017:342,modifiability,depend,dependencies,342,"[core] ACLiC: speed up building / loading:; Instead of looking for libraries resolving each unresolved symbol,. just load each lib resolving symbols: this will allow subsequent. missing symbols to be resolved from the loaded library quickly,. without touching disk. When loading an existing ACLiC library, and if we expect it. to contain the dependencies (explicit linking), just load itt,. instead of trying to (re-)determine its dependencies from its. undefined symbols: the outcome should be just the library. dependencies we expect the library to know already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8017
https://github.com/root-project/root/pull/8017:431,modifiability,depend,dependencies,431,"[core] ACLiC: speed up building / loading:; Instead of looking for libraries resolving each unresolved symbol,. just load each lib resolving symbols: this will allow subsequent. missing symbols to be resolved from the loaded library quickly,. without touching disk. When loading an existing ACLiC library, and if we expect it. to contain the dependencies (explicit linking), just load itt,. instead of trying to (re-)determine its dependencies from its. undefined symbols: the outcome should be just the library. dependencies we expect the library to know already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8017
https://github.com/root-project/root/pull/8017:513,modifiability,depend,dependencies,513,"[core] ACLiC: speed up building / loading:; Instead of looking for libraries resolving each unresolved symbol,. just load each lib resolving symbols: this will allow subsequent. missing symbols to be resolved from the loaded library quickly,. without touching disk. When loading an existing ACLiC library, and if we expect it. to contain the dependencies (explicit linking), just load itt,. instead of trying to (re-)determine its dependencies from its. undefined symbols: the outcome should be just the library. dependencies we expect the library to know already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8017
https://github.com/root-project/root/pull/8017:34,performance,load,loading,34,"[core] ACLiC: speed up building / loading:; Instead of looking for libraries resolving each unresolved symbol,. just load each lib resolving symbols: this will allow subsequent. missing symbols to be resolved from the loaded library quickly,. without touching disk. When loading an existing ACLiC library, and if we expect it. to contain the dependencies (explicit linking), just load itt,. instead of trying to (re-)determine its dependencies from its. undefined symbols: the outcome should be just the library. dependencies we expect the library to know already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8017
https://github.com/root-project/root/pull/8017:117,performance,load,load,117,"[core] ACLiC: speed up building / loading:; Instead of looking for libraries resolving each unresolved symbol,. just load each lib resolving symbols: this will allow subsequent. missing symbols to be resolved from the loaded library quickly,. without touching disk. When loading an existing ACLiC library, and if we expect it. to contain the dependencies (explicit linking), just load itt,. instead of trying to (re-)determine its dependencies from its. undefined symbols: the outcome should be just the library. dependencies we expect the library to know already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8017
https://github.com/root-project/root/pull/8017:218,performance,load,loaded,218,"[core] ACLiC: speed up building / loading:; Instead of looking for libraries resolving each unresolved symbol,. just load each lib resolving symbols: this will allow subsequent. missing symbols to be resolved from the loaded library quickly,. without touching disk. When loading an existing ACLiC library, and if we expect it. to contain the dependencies (explicit linking), just load itt,. instead of trying to (re-)determine its dependencies from its. undefined symbols: the outcome should be just the library. dependencies we expect the library to know already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8017
https://github.com/root-project/root/pull/8017:260,performance,disk,disk,260,"[core] ACLiC: speed up building / loading:; Instead of looking for libraries resolving each unresolved symbol,. just load each lib resolving symbols: this will allow subsequent. missing symbols to be resolved from the loaded library quickly,. without touching disk. When loading an existing ACLiC library, and if we expect it. to contain the dependencies (explicit linking), just load itt,. instead of trying to (re-)determine its dependencies from its. undefined symbols: the outcome should be just the library. dependencies we expect the library to know already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8017
https://github.com/root-project/root/pull/8017:271,performance,load,loading,271,"[core] ACLiC: speed up building / loading:; Instead of looking for libraries resolving each unresolved symbol,. just load each lib resolving symbols: this will allow subsequent. missing symbols to be resolved from the loaded library quickly,. without touching disk. When loading an existing ACLiC library, and if we expect it. to contain the dependencies (explicit linking), just load itt,. instead of trying to (re-)determine its dependencies from its. undefined symbols: the outcome should be just the library. dependencies we expect the library to know already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8017
https://github.com/root-project/root/pull/8017:380,performance,load,load,380,"[core] ACLiC: speed up building / loading:; Instead of looking for libraries resolving each unresolved symbol,. just load each lib resolving symbols: this will allow subsequent. missing symbols to be resolved from the loaded library quickly,. without touching disk. When loading an existing ACLiC library, and if we expect it. to contain the dependencies (explicit linking), just load itt,. instead of trying to (re-)determine its dependencies from its. undefined symbols: the outcome should be just the library. dependencies we expect the library to know already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8017
https://github.com/root-project/root/pull/8017:342,safety,depend,dependencies,342,"[core] ACLiC: speed up building / loading:; Instead of looking for libraries resolving each unresolved symbol,. just load each lib resolving symbols: this will allow subsequent. missing symbols to be resolved from the loaded library quickly,. without touching disk. When loading an existing ACLiC library, and if we expect it. to contain the dependencies (explicit linking), just load itt,. instead of trying to (re-)determine its dependencies from its. undefined symbols: the outcome should be just the library. dependencies we expect the library to know already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8017
https://github.com/root-project/root/pull/8017:431,safety,depend,dependencies,431,"[core] ACLiC: speed up building / loading:; Instead of looking for libraries resolving each unresolved symbol,. just load each lib resolving symbols: this will allow subsequent. missing symbols to be resolved from the loaded library quickly,. without touching disk. When loading an existing ACLiC library, and if we expect it. to contain the dependencies (explicit linking), just load itt,. instead of trying to (re-)determine its dependencies from its. undefined symbols: the outcome should be just the library. dependencies we expect the library to know already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8017
https://github.com/root-project/root/pull/8017:513,safety,depend,dependencies,513,"[core] ACLiC: speed up building / loading:; Instead of looking for libraries resolving each unresolved symbol,. just load each lib resolving symbols: this will allow subsequent. missing symbols to be resolved from the loaded library quickly,. without touching disk. When loading an existing ACLiC library, and if we expect it. to contain the dependencies (explicit linking), just load itt,. instead of trying to (re-)determine its dependencies from its. undefined symbols: the outcome should be just the library. dependencies we expect the library to know already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8017
https://github.com/root-project/root/pull/8017:342,testability,depend,dependencies,342,"[core] ACLiC: speed up building / loading:; Instead of looking for libraries resolving each unresolved symbol,. just load each lib resolving symbols: this will allow subsequent. missing symbols to be resolved from the loaded library quickly,. without touching disk. When loading an existing ACLiC library, and if we expect it. to contain the dependencies (explicit linking), just load itt,. instead of trying to (re-)determine its dependencies from its. undefined symbols: the outcome should be just the library. dependencies we expect the library to know already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8017
https://github.com/root-project/root/pull/8017:431,testability,depend,dependencies,431,"[core] ACLiC: speed up building / loading:; Instead of looking for libraries resolving each unresolved symbol,. just load each lib resolving symbols: this will allow subsequent. missing symbols to be resolved from the loaded library quickly,. without touching disk. When loading an existing ACLiC library, and if we expect it. to contain the dependencies (explicit linking), just load itt,. instead of trying to (re-)determine its dependencies from its. undefined symbols: the outcome should be just the library. dependencies we expect the library to know already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8017
https://github.com/root-project/root/pull/8017:513,testability,depend,dependencies,513,"[core] ACLiC: speed up building / loading:; Instead of looking for libraries resolving each unresolved symbol,. just load each lib resolving symbols: this will allow subsequent. missing symbols to be resolved from the loaded library quickly,. without touching disk. When loading an existing ACLiC library, and if we expect it. to contain the dependencies (explicit linking), just load itt,. instead of trying to (re-)determine its dependencies from its. undefined symbols: the outcome should be just the library. dependencies we expect the library to know already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8017
https://github.com/root-project/root/pull/8018:173,deployability,version,version,173,"[cmake] use QUIET mode for searching nlohmann_json; On platform where nlohmann/json.hpp does not provided,. find_package(nlohmann_json) produces too much warnings. Printout version number and include dirs if found",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8018
https://github.com/root-project/root/pull/8018:173,integrability,version,version,173,"[cmake] use QUIET mode for searching nlohmann_json; On platform where nlohmann/json.hpp does not provided,. find_package(nlohmann_json) produces too much warnings. Printout version number and include dirs if found",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8018
https://github.com/root-project/root/pull/8018:55,interoperability,platform,platform,55,"[cmake] use QUIET mode for searching nlohmann_json; On platform where nlohmann/json.hpp does not provided,. find_package(nlohmann_json) produces too much warnings. Printout version number and include dirs if found",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8018
https://github.com/root-project/root/pull/8018:173,modifiability,version,version,173,"[cmake] use QUIET mode for searching nlohmann_json; On platform where nlohmann/json.hpp does not provided,. find_package(nlohmann_json) produces too much warnings. Printout version number and include dirs if found",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8018
https://github.com/root-project/root/pull/8018:88,reliability,doe,does,88,"[cmake] use QUIET mode for searching nlohmann_json; On platform where nlohmann/json.hpp does not provided,. find_package(nlohmann_json) produces too much warnings. Printout version number and include dirs if found",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8018
https://github.com/root-project/root/pull/8019:16,deployability,integr,integration,16,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:116,deployability,integr,integration,116,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:188,deployability,integr,integration,188,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:290,deployability,integr,integration,290,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:426,deployability,log,logic,426,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:640,deployability,integr,integration,640,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:692,deployability,integr,integration,692,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:786,deployability,integr,integration,786,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:819,deployability,integr,integration,819,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:16,integrability,integr,integration,16,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:116,integrability,integr,integration,116,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:188,integrability,integr,integration,188,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:290,integrability,integr,integration,290,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:640,integrability,integr,integration,640,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:692,integrability,integr,integration,692,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:786,integrability,integr,integration,786,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:819,integrability,integr,integration,819,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:16,interoperability,integr,integration,16,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:116,interoperability,integr,integration,116,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:188,interoperability,integr,integration,188,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:290,interoperability,integr,integration,290,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:640,interoperability,integr,integration,640,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:692,interoperability,integr,integration,692,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:786,interoperability,integr,integration,786,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:819,interoperability,integr,integration,819,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:16,modifiability,integr,integration,16,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:116,modifiability,integr,integration,116,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:188,modifiability,integr,integration,188,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:290,modifiability,integr,integration,290,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:640,modifiability,integr,integration,640,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:692,modifiability,integr,integration,692,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:786,modifiability,integr,integration,786,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:819,modifiability,integr,integration,819,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:16,reliability,integr,integration,16,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:116,reliability,integr,integration,116,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:188,reliability,integr,integration,188,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:290,reliability,integr,integration,290,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:640,reliability,integr,integration,640,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:692,reliability,integr,integration,692,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:786,reliability,integr,integration,786,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:819,reliability,integr,integration,819,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:426,safety,log,logic,426,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:16,security,integr,integration,16,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:116,security,integr,integration,116,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:188,security,integr,integration,188,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:290,security,integr,integration,290,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:426,security,log,logic,426,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:640,security,integr,integration,640,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:692,security,integr,integration,692,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:786,security,integr,integration,786,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:819,security,integr,integration,819,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:16,testability,integr,integration,16,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:116,testability,integr,integration,116,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:188,testability,integr,integration,188,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:290,testability,integr,integration,290,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:402,testability,simpl,simpler,402,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:426,testability,log,logic,426,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:640,testability,integr,integration,640,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:692,testability,integr,integration,692,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:786,testability,integr,integration,786,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:819,testability,integr,integration,819,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:50,usability,custom,custom,50,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:64,usability,Custom,Custom,64,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:91,usability,support,supported,91,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:221,usability,custom,custom,221,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:308,usability,custom,custom,308,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8019:402,usability,simpl,simpler,402,"[RF] Analytical integration for RooNDKeysPdf with custom range; Custom ranges seemed to be supported for analytical integration in. RooNDKeysPdf, but the code was not activated. Numerical integration was. always used for custom ranges. Unfortunately, using the existing code for analytical integration with. custom ranges gives the wrong result. This commit suggests how this can. be done with new and simpler code that has a logic similar to. RooNDKeysPdf::evaluate() to get the correct result. This is a draft PR for now. I still need to study the problem a bit more, because when you have many data points for the KDE the new analytical integration gives a result different from numerical integration at the percent level. I need to figure out if this is a mistake in the analytical integration, or if the numerical integration is unstable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8019
https://github.com/root-project/root/pull/8020:51,availability,servic,services,51,"Define R__B64 when on ARM 64; Fixes https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-24-00-patches/30/LABEL=mac11arm,SPEC=noimt,V=6-24/testReport/junit/projectroot.roottest.python/cpp/roottest_python_cpp_cpp/. (to be backported to 6.24)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8020
https://github.com/root-project/root/pull/8020:51,deployability,servic,services,51,"Define R__B64 when on ARM 64; Fixes https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-24-00-patches/30/LABEL=mac11arm,SPEC=noimt,V=6-24/testReport/junit/projectroot.roottest.python/cpp/roottest_python_cpp_cpp/. (to be backported to 6.24)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8020
https://github.com/root-project/root/pull/8020:127,deployability,patch,patches,127,"Define R__B64 when on ARM 64; Fixes https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-24-00-patches/30/LABEL=mac11arm,SPEC=noimt,V=6-24/testReport/junit/projectroot.roottest.python/cpp/roottest_python_cpp_cpp/. (to be backported to 6.24)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8020
https://github.com/root-project/root/pull/8020:51,integrability,servic,services,51,"Define R__B64 when on ARM 64; Fixes https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-24-00-patches/30/LABEL=mac11arm,SPEC=noimt,V=6-24/testReport/junit/projectroot.roottest.python/cpp/roottest_python_cpp_cpp/. (to be backported to 6.24)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8020
https://github.com/root-project/root/pull/8020:51,modifiability,servic,services,51,"Define R__B64 when on ARM 64; Fixes https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-24-00-patches/30/LABEL=mac11arm,SPEC=noimt,V=6-24/testReport/junit/projectroot.roottest.python/cpp/roottest_python_cpp_cpp/. (to be backported to 6.24)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8020
https://github.com/root-project/root/pull/8020:127,safety,patch,patches,127,"Define R__B64 when on ARM 64; Fixes https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-24-00-patches/30/LABEL=mac11arm,SPEC=noimt,V=6-24/testReport/junit/projectroot.roottest.python/cpp/roottest_python_cpp_cpp/. (to be backported to 6.24)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8020
https://github.com/root-project/root/pull/8020:171,safety,test,testReport,171,"Define R__B64 when on ARM 64; Fixes https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-24-00-patches/30/LABEL=mac11arm,SPEC=noimt,V=6-24/testReport/junit/projectroot.roottest.python/cpp/roottest_python_cpp_cpp/. (to be backported to 6.24)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8020
https://github.com/root-project/root/pull/8020:127,security,patch,patches,127,"Define R__B64 when on ARM 64; Fixes https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-24-00-patches/30/LABEL=mac11arm,SPEC=noimt,V=6-24/testReport/junit/projectroot.roottest.python/cpp/roottest_python_cpp_cpp/. (to be backported to 6.24)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8020
https://github.com/root-project/root/pull/8020:171,testability,test,testReport,171,"Define R__B64 when on ARM 64; Fixes https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-24-00-patches/30/LABEL=mac11arm,SPEC=noimt,V=6-24/testReport/junit/projectroot.roottest.python/cpp/roottest_python_cpp_cpp/. (to be backported to 6.24)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8020
https://github.com/root-project/root/issues/8021:754,availability,ERROR,ERROR,754,"Possible Buffer Overflow in TSpline2; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. While hunting for some other problem using address sanitizer our unit tests ran into a heap-buffer-overflow in `TSpline2`:. ```. Warning in <TH1::TH1>: nbins is <=0 - set to nbins = 1me left: 0 sec) . Warning in <TH1::TH1>: nbins is <=0 - set to nbins = 1. =================================================================. ==903254==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020001549e0 at pc 0x7f530c576a66 bp 0x7ffc17738f20 sp 0x7ffc17738f18. READ of size 8 at 0x6020001549e0 thread T0. #0 0x7f530c576a65 in TMVA::TSpline2::Eval(double) const root/tmva/tmva/src/TSpline2.cxx:84. #1 0x7f530c3dd685 in TMVA::PDF::FillSplineToHist() root/tmva/tmva/src/PDF.cxx:539. #2 0x7f530c3de1e8 in TMVA::PDF::BuildSplinePDF() root/tmva/tmva/src/PDF.cxx:364. #3 0x7f530c3dfc62 in TMVA::PDF::BuildPDF(TH1 const*) root/tmva/tmva/src/PDF.cxx:299. #4 0x7f530be8247c in TMVA::MethodBase::CreateMVAPdfs() root/tmva/tmva/src/MethodBase.cxx:2220. #5 0x7f530beaaa67 in TMVA::MethodBase::TrainMethod() root/tmva/tmva/src/MethodBase.cxx:691. #6 0x7f530bd67bb7 in TMVA::Factory::TrainAllMethods() root/tmva/tmva/src/Factory.cxx:1173. #7 0x7f5311416107 in Belle2::MVA::TMVATeacher::trainFactory(TMVA::Factory&, TMVA::DataLoader&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const belle2/mva/methods/src/TMVA.cc:164. #8 0x7f5311418389 in Belle2::MVA::TMVATeacherClassification::train(Belle2::MVA::Dataset&) const belle2/mva/methods/src/TMVA.cc:303. #9 0x90859d in (anonymous namespace)::TMVATest_TMVAClassificationInterface_Test::TestBody() bell",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8021
https://github.com/root-project/root/issues/8021:1135,deployability,Build,BuildSplinePDF,1135,"sues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. While hunting for some other problem using address sanitizer our unit tests ran into a heap-buffer-overflow in `TSpline2`:. ```. Warning in <TH1::TH1>: nbins is <=0 - set to nbins = 1me left: 0 sec) . Warning in <TH1::TH1>: nbins is <=0 - set to nbins = 1. =================================================================. ==903254==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020001549e0 at pc 0x7f530c576a66 bp 0x7ffc17738f20 sp 0x7ffc17738f18. READ of size 8 at 0x6020001549e0 thread T0. #0 0x7f530c576a65 in TMVA::TSpline2::Eval(double) const root/tmva/tmva/src/TSpline2.cxx:84. #1 0x7f530c3dd685 in TMVA::PDF::FillSplineToHist() root/tmva/tmva/src/PDF.cxx:539. #2 0x7f530c3de1e8 in TMVA::PDF::BuildSplinePDF() root/tmva/tmva/src/PDF.cxx:364. #3 0x7f530c3dfc62 in TMVA::PDF::BuildPDF(TH1 const*) root/tmva/tmva/src/PDF.cxx:299. #4 0x7f530be8247c in TMVA::MethodBase::CreateMVAPdfs() root/tmva/tmva/src/MethodBase.cxx:2220. #5 0x7f530beaaa67 in TMVA::MethodBase::TrainMethod() root/tmva/tmva/src/MethodBase.cxx:691. #6 0x7f530bd67bb7 in TMVA::Factory::TrainAllMethods() root/tmva/tmva/src/Factory.cxx:1173. #7 0x7f5311416107 in Belle2::MVA::TMVATeacher::trainFactory(TMVA::Factory&, TMVA::DataLoader&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const belle2/mva/methods/src/TMVA.cc:164. #8 0x7f5311418389 in Belle2::MVA::TMVATeacherClassification::train(Belle2::MVA::Dataset&) const belle2/mva/methods/src/TMVA.cc:303. #9 0x90859d in (anonymous namespace)::TMVATest_TMVAClassificationInterface_Test::TestBody() belle2/mva/methods/tests/test_TMVA.cc:153. ```. Looking at the TH1 Warning about only having one bin and the code in `TSpline2::Eval` there is ind",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8021
https://github.com/root-project/root/issues/8021:1216,deployability,Build,BuildPDF,1216,"ect %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. While hunting for some other problem using address sanitizer our unit tests ran into a heap-buffer-overflow in `TSpline2`:. ```. Warning in <TH1::TH1>: nbins is <=0 - set to nbins = 1me left: 0 sec) . Warning in <TH1::TH1>: nbins is <=0 - set to nbins = 1. =================================================================. ==903254==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020001549e0 at pc 0x7f530c576a66 bp 0x7ffc17738f20 sp 0x7ffc17738f18. READ of size 8 at 0x6020001549e0 thread T0. #0 0x7f530c576a65 in TMVA::TSpline2::Eval(double) const root/tmva/tmva/src/TSpline2.cxx:84. #1 0x7f530c3dd685 in TMVA::PDF::FillSplineToHist() root/tmva/tmva/src/PDF.cxx:539. #2 0x7f530c3de1e8 in TMVA::PDF::BuildSplinePDF() root/tmva/tmva/src/PDF.cxx:364. #3 0x7f530c3dfc62 in TMVA::PDF::BuildPDF(TH1 const*) root/tmva/tmva/src/PDF.cxx:299. #4 0x7f530be8247c in TMVA::MethodBase::CreateMVAPdfs() root/tmva/tmva/src/MethodBase.cxx:2220. #5 0x7f530beaaa67 in TMVA::MethodBase::TrainMethod() root/tmva/tmva/src/MethodBase.cxx:691. #6 0x7f530bd67bb7 in TMVA::Factory::TrainAllMethods() root/tmva/tmva/src/Factory.cxx:1173. #7 0x7f5311416107 in Belle2::MVA::TMVATeacher::trainFactory(TMVA::Factory&, TMVA::DataLoader&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const belle2/mva/methods/src/TMVA.cc:164. #8 0x7f5311418389 in Belle2::MVA::TMVATeacherClassification::train(Belle2::MVA::Dataset&) const belle2/mva/methods/src/TMVA.cc:303. #9 0x90859d in (anonymous namespace)::TMVATest_TMVAClassificationInterface_Test::TestBody() belle2/mva/methods/tests/test_TMVA.cc:153. ```. Looking at the TH1 Warning about only having one bin and the code in `TSpline2::Eval` there is indeed a problem if the histogram/TGraph has only one point as (bin+2) is accesse",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8021
https://github.com/root-project/root/issues/8021:1704,energy efficiency,alloc,allocator,1704,"=================================. ==903254==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020001549e0 at pc 0x7f530c576a66 bp 0x7ffc17738f20 sp 0x7ffc17738f18. READ of size 8 at 0x6020001549e0 thread T0. #0 0x7f530c576a65 in TMVA::TSpline2::Eval(double) const root/tmva/tmva/src/TSpline2.cxx:84. #1 0x7f530c3dd685 in TMVA::PDF::FillSplineToHist() root/tmva/tmva/src/PDF.cxx:539. #2 0x7f530c3de1e8 in TMVA::PDF::BuildSplinePDF() root/tmva/tmva/src/PDF.cxx:364. #3 0x7f530c3dfc62 in TMVA::PDF::BuildPDF(TH1 const*) root/tmva/tmva/src/PDF.cxx:299. #4 0x7f530be8247c in TMVA::MethodBase::CreateMVAPdfs() root/tmva/tmva/src/MethodBase.cxx:2220. #5 0x7f530beaaa67 in TMVA::MethodBase::TrainMethod() root/tmva/tmva/src/MethodBase.cxx:691. #6 0x7f530bd67bb7 in TMVA::Factory::TrainAllMethods() root/tmva/tmva/src/Factory.cxx:1173. #7 0x7f5311416107 in Belle2::MVA::TMVATeacher::trainFactory(TMVA::Factory&, TMVA::DataLoader&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const belle2/mva/methods/src/TMVA.cc:164. #8 0x7f5311418389 in Belle2::MVA::TMVATeacherClassification::train(Belle2::MVA::Dataset&) const belle2/mva/methods/src/TMVA.cc:303. #9 0x90859d in (anonymous namespace)::TMVATest_TMVAClassificationInterface_Test::TestBody() belle2/mva/methods/tests/test_TMVA.cc:153. ```. Looking at the TH1 Warning about only having one bin and the code in `TSpline2::Eval` there is indeed a problem if the histogram/TGraph has only one point as (bin+2) is accessed. Now I'm fully aware interpolating a 1 point histogram doesn't make much sense but still, a heap-overflow is not the expected behavior. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Probably just return the value itself if only one point is in the graph. ### To Reproduce. ```c++. void tspline() {. double x{1};. TGraph* g = new TGraph(1, &x, &x);. TMVA::TSpline2 s(""spline"", g);. s.Eval(x);. }. ```. ### Setup. * ROOT 6.24.0. * GCC 10",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8021
https://github.com/root-project/root/issues/8021:9,integrability,Buffer,Buffer,9,"Possible Buffer Overflow in TSpline2; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. While hunting for some other problem using address sanitizer our unit tests ran into a heap-buffer-overflow in `TSpline2`:. ```. Warning in <TH1::TH1>: nbins is <=0 - set to nbins = 1me left: 0 sec) . Warning in <TH1::TH1>: nbins is <=0 - set to nbins = 1. =================================================================. ==903254==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020001549e0 at pc 0x7f530c576a66 bp 0x7ffc17738f20 sp 0x7ffc17738f18. READ of size 8 at 0x6020001549e0 thread T0. #0 0x7f530c576a65 in TMVA::TSpline2::Eval(double) const root/tmva/tmva/src/TSpline2.cxx:84. #1 0x7f530c3dd685 in TMVA::PDF::FillSplineToHist() root/tmva/tmva/src/PDF.cxx:539. #2 0x7f530c3de1e8 in TMVA::PDF::BuildSplinePDF() root/tmva/tmva/src/PDF.cxx:364. #3 0x7f530c3dfc62 in TMVA::PDF::BuildPDF(TH1 const*) root/tmva/tmva/src/PDF.cxx:299. #4 0x7f530be8247c in TMVA::MethodBase::CreateMVAPdfs() root/tmva/tmva/src/MethodBase.cxx:2220. #5 0x7f530beaaa67 in TMVA::MethodBase::TrainMethod() root/tmva/tmva/src/MethodBase.cxx:691. #6 0x7f530bd67bb7 in TMVA::Factory::TrainAllMethods() root/tmva/tmva/src/Factory.cxx:1173. #7 0x7f5311416107 in Belle2::MVA::TMVATeacher::trainFactory(TMVA::Factory&, TMVA::DataLoader&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const belle2/mva/methods/src/TMVA.cc:164. #8 0x7f5311418389 in Belle2::MVA::TMVATeacherClassification::train(Belle2::MVA::Dataset&) const belle2/mva/methods/src/TMVA.cc:303. #9 0x90859d in (anonymous namespace)::TMVATest_TMVAClassificationInterface_Test::TestBody() bell",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8021
https://github.com/root-project/root/issues/8021:512,integrability,buffer,buffer-overflow,512,"Possible Buffer Overflow in TSpline2; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. While hunting for some other problem using address sanitizer our unit tests ran into a heap-buffer-overflow in `TSpline2`:. ```. Warning in <TH1::TH1>: nbins is <=0 - set to nbins = 1me left: 0 sec) . Warning in <TH1::TH1>: nbins is <=0 - set to nbins = 1. =================================================================. ==903254==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020001549e0 at pc 0x7f530c576a66 bp 0x7ffc17738f20 sp 0x7ffc17738f18. READ of size 8 at 0x6020001549e0 thread T0. #0 0x7f530c576a65 in TMVA::TSpline2::Eval(double) const root/tmva/tmva/src/TSpline2.cxx:84. #1 0x7f530c3dd685 in TMVA::PDF::FillSplineToHist() root/tmva/tmva/src/PDF.cxx:539. #2 0x7f530c3de1e8 in TMVA::PDF::BuildSplinePDF() root/tmva/tmva/src/PDF.cxx:364. #3 0x7f530c3dfc62 in TMVA::PDF::BuildPDF(TH1 const*) root/tmva/tmva/src/PDF.cxx:299. #4 0x7f530be8247c in TMVA::MethodBase::CreateMVAPdfs() root/tmva/tmva/src/MethodBase.cxx:2220. #5 0x7f530beaaa67 in TMVA::MethodBase::TrainMethod() root/tmva/tmva/src/MethodBase.cxx:691. #6 0x7f530bd67bb7 in TMVA::Factory::TrainAllMethods() root/tmva/tmva/src/Factory.cxx:1173. #7 0x7f5311416107 in Belle2::MVA::TMVATeacher::trainFactory(TMVA::Factory&, TMVA::DataLoader&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const belle2/mva/methods/src/TMVA.cc:164. #8 0x7f5311418389 in Belle2::MVA::TMVATeacherClassification::train(Belle2::MVA::Dataset&) const belle2/mva/methods/src/TMVA.cc:303. #9 0x90859d in (anonymous namespace)::TMVATest_TMVAClassificationInterface_Test::TestBody() bell",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8021
https://github.com/root-project/root/issues/8021:784,integrability,buffer,buffer-overflow,784,"Possible Buffer Overflow in TSpline2; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. While hunting for some other problem using address sanitizer our unit tests ran into a heap-buffer-overflow in `TSpline2`:. ```. Warning in <TH1::TH1>: nbins is <=0 - set to nbins = 1me left: 0 sec) . Warning in <TH1::TH1>: nbins is <=0 - set to nbins = 1. =================================================================. ==903254==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020001549e0 at pc 0x7f530c576a66 bp 0x7ffc17738f20 sp 0x7ffc17738f18. READ of size 8 at 0x6020001549e0 thread T0. #0 0x7f530c576a65 in TMVA::TSpline2::Eval(double) const root/tmva/tmva/src/TSpline2.cxx:84. #1 0x7f530c3dd685 in TMVA::PDF::FillSplineToHist() root/tmva/tmva/src/PDF.cxx:539. #2 0x7f530c3de1e8 in TMVA::PDF::BuildSplinePDF() root/tmva/tmva/src/PDF.cxx:364. #3 0x7f530c3dfc62 in TMVA::PDF::BuildPDF(TH1 const*) root/tmva/tmva/src/PDF.cxx:299. #4 0x7f530be8247c in TMVA::MethodBase::CreateMVAPdfs() root/tmva/tmva/src/MethodBase.cxx:2220. #5 0x7f530beaaa67 in TMVA::MethodBase::TrainMethod() root/tmva/tmva/src/MethodBase.cxx:691. #6 0x7f530bd67bb7 in TMVA::Factory::TrainAllMethods() root/tmva/tmva/src/Factory.cxx:1173. #7 0x7f5311416107 in Belle2::MVA::TMVATeacher::trainFactory(TMVA::Factory&, TMVA::DataLoader&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const belle2/mva/methods/src/TMVA.cc:164. #8 0x7f5311418389 in Belle2::MVA::TMVATeacherClassification::train(Belle2::MVA::Dataset&) const belle2/mva/methods/src/TMVA.cc:303. #9 0x90859d in (anonymous namespace)::TMVATest_TMVAClassificationInterface_Test::TestBody() bell",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8021
https://github.com/root-project/root/issues/8021:754,performance,ERROR,ERROR,754,"Possible Buffer Overflow in TSpline2; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. While hunting for some other problem using address sanitizer our unit tests ran into a heap-buffer-overflow in `TSpline2`:. ```. Warning in <TH1::TH1>: nbins is <=0 - set to nbins = 1me left: 0 sec) . Warning in <TH1::TH1>: nbins is <=0 - set to nbins = 1. =================================================================. ==903254==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020001549e0 at pc 0x7f530c576a66 bp 0x7ffc17738f20 sp 0x7ffc17738f18. READ of size 8 at 0x6020001549e0 thread T0. #0 0x7f530c576a65 in TMVA::TSpline2::Eval(double) const root/tmva/tmva/src/TSpline2.cxx:84. #1 0x7f530c3dd685 in TMVA::PDF::FillSplineToHist() root/tmva/tmva/src/PDF.cxx:539. #2 0x7f530c3de1e8 in TMVA::PDF::BuildSplinePDF() root/tmva/tmva/src/PDF.cxx:364. #3 0x7f530c3dfc62 in TMVA::PDF::BuildPDF(TH1 const*) root/tmva/tmva/src/PDF.cxx:299. #4 0x7f530be8247c in TMVA::MethodBase::CreateMVAPdfs() root/tmva/tmva/src/MethodBase.cxx:2220. #5 0x7f530beaaa67 in TMVA::MethodBase::TrainMethod() root/tmva/tmva/src/MethodBase.cxx:691. #6 0x7f530bd67bb7 in TMVA::Factory::TrainAllMethods() root/tmva/tmva/src/Factory.cxx:1173. #7 0x7f5311416107 in Belle2::MVA::TMVATeacher::trainFactory(TMVA::Factory&, TMVA::DataLoader&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const belle2/mva/methods/src/TMVA.cc:164. #8 0x7f5311418389 in Belle2::MVA::TMVATeacherClassification::train(Belle2::MVA::Dataset&) const belle2/mva/methods/src/TMVA.cc:303. #9 0x90859d in (anonymous namespace)::TMVATest_TMVAClassificationInterface_Test::TestBody() bell",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8021
https://github.com/root-project/root/issues/8021:2277,reliability,doe,doesn,2277," thread T0. #0 0x7f530c576a65 in TMVA::TSpline2::Eval(double) const root/tmva/tmva/src/TSpline2.cxx:84. #1 0x7f530c3dd685 in TMVA::PDF::FillSplineToHist() root/tmva/tmva/src/PDF.cxx:539. #2 0x7f530c3de1e8 in TMVA::PDF::BuildSplinePDF() root/tmva/tmva/src/PDF.cxx:364. #3 0x7f530c3dfc62 in TMVA::PDF::BuildPDF(TH1 const*) root/tmva/tmva/src/PDF.cxx:299. #4 0x7f530be8247c in TMVA::MethodBase::CreateMVAPdfs() root/tmva/tmva/src/MethodBase.cxx:2220. #5 0x7f530beaaa67 in TMVA::MethodBase::TrainMethod() root/tmva/tmva/src/MethodBase.cxx:691. #6 0x7f530bd67bb7 in TMVA::Factory::TrainAllMethods() root/tmva/tmva/src/Factory.cxx:1173. #7 0x7f5311416107 in Belle2::MVA::TMVATeacher::trainFactory(TMVA::Factory&, TMVA::DataLoader&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const belle2/mva/methods/src/TMVA.cc:164. #8 0x7f5311418389 in Belle2::MVA::TMVATeacherClassification::train(Belle2::MVA::Dataset&) const belle2/mva/methods/src/TMVA.cc:303. #9 0x90859d in (anonymous namespace)::TMVATest_TMVAClassificationInterface_Test::TestBody() belle2/mva/methods/tests/test_TMVA.cc:153. ```. Looking at the TH1 Warning about only having one bin and the code in `TSpline2::Eval` there is indeed a problem if the histogram/TGraph has only one point as (bin+2) is accessed. Now I'm fully aware interpolating a 1 point histogram doesn't make much sense but still, a heap-overflow is not the expected behavior. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Probably just return the value itself if only one point is in the graph. ### To Reproduce. ```c++. void tspline() {. double x{1};. TGraph* g = new TGraph(1, &x, &x);. TMVA::TSpline2 s(""spline"", g);. s.Eval(x);. }. ```. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04. ## Additional Context. I would also like to point out that `TSpline2.cxx` claims it doesn't own the `TGraph` instance in a comment in the constructor and contradicts this ten lines later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8021
https://github.com/root-project/root/issues/8021:2813,reliability,doe,doesn,2813," thread T0. #0 0x7f530c576a65 in TMVA::TSpline2::Eval(double) const root/tmva/tmva/src/TSpline2.cxx:84. #1 0x7f530c3dd685 in TMVA::PDF::FillSplineToHist() root/tmva/tmva/src/PDF.cxx:539. #2 0x7f530c3de1e8 in TMVA::PDF::BuildSplinePDF() root/tmva/tmva/src/PDF.cxx:364. #3 0x7f530c3dfc62 in TMVA::PDF::BuildPDF(TH1 const*) root/tmva/tmva/src/PDF.cxx:299. #4 0x7f530be8247c in TMVA::MethodBase::CreateMVAPdfs() root/tmva/tmva/src/MethodBase.cxx:2220. #5 0x7f530beaaa67 in TMVA::MethodBase::TrainMethod() root/tmva/tmva/src/MethodBase.cxx:691. #6 0x7f530bd67bb7 in TMVA::Factory::TrainAllMethods() root/tmva/tmva/src/Factory.cxx:1173. #7 0x7f5311416107 in Belle2::MVA::TMVATeacher::trainFactory(TMVA::Factory&, TMVA::DataLoader&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const belle2/mva/methods/src/TMVA.cc:164. #8 0x7f5311418389 in Belle2::MVA::TMVATeacherClassification::train(Belle2::MVA::Dataset&) const belle2/mva/methods/src/TMVA.cc:303. #9 0x90859d in (anonymous namespace)::TMVATest_TMVAClassificationInterface_Test::TestBody() belle2/mva/methods/tests/test_TMVA.cc:153. ```. Looking at the TH1 Warning about only having one bin and the code in `TSpline2::Eval` there is indeed a problem if the histogram/TGraph has only one point as (bin+2) is accessed. Now I'm fully aware interpolating a 1 point histogram doesn't make much sense but still, a heap-overflow is not the expected behavior. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Probably just return the value itself if only one point is in the graph. ### To Reproduce. ```c++. void tspline() {. double x{1};. TGraph* g = new TGraph(1, &x, &x);. TMVA::TSpline2 s(""spline"", g);. s.Eval(x);. }. ```. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04. ## Additional Context. I would also like to point out that `TSpline2.cxx` claims it doesn't own the `TGraph` instance in a comment in the constructor and contradicts this ten lines later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8021
https://github.com/root-project/root/issues/8021:471,safety,sanit,sanitizer,471,"Possible Buffer Overflow in TSpline2; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. While hunting for some other problem using address sanitizer our unit tests ran into a heap-buffer-overflow in `TSpline2`:. ```. Warning in <TH1::TH1>: nbins is <=0 - set to nbins = 1me left: 0 sec) . Warning in <TH1::TH1>: nbins is <=0 - set to nbins = 1. =================================================================. ==903254==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020001549e0 at pc 0x7f530c576a66 bp 0x7ffc17738f20 sp 0x7ffc17738f18. READ of size 8 at 0x6020001549e0 thread T0. #0 0x7f530c576a65 in TMVA::TSpline2::Eval(double) const root/tmva/tmva/src/TSpline2.cxx:84. #1 0x7f530c3dd685 in TMVA::PDF::FillSplineToHist() root/tmva/tmva/src/PDF.cxx:539. #2 0x7f530c3de1e8 in TMVA::PDF::BuildSplinePDF() root/tmva/tmva/src/PDF.cxx:364. #3 0x7f530c3dfc62 in TMVA::PDF::BuildPDF(TH1 const*) root/tmva/tmva/src/PDF.cxx:299. #4 0x7f530be8247c in TMVA::MethodBase::CreateMVAPdfs() root/tmva/tmva/src/MethodBase.cxx:2220. #5 0x7f530beaaa67 in TMVA::MethodBase::TrainMethod() root/tmva/tmva/src/MethodBase.cxx:691. #6 0x7f530bd67bb7 in TMVA::Factory::TrainAllMethods() root/tmva/tmva/src/Factory.cxx:1173. #7 0x7f5311416107 in Belle2::MVA::TMVATeacher::trainFactory(TMVA::Factory&, TMVA::DataLoader&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const belle2/mva/methods/src/TMVA.cc:164. #8 0x7f5311418389 in Belle2::MVA::TMVATeacherClassification::train(Belle2::MVA::Dataset&) const belle2/mva/methods/src/TMVA.cc:303. #9 0x90859d in (anonymous namespace)::TMVATest_TMVAClassificationInterface_Test::TestBody() bell",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8021
https://github.com/root-project/root/issues/8021:490,safety,test,tests,490,"Possible Buffer Overflow in TSpline2; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. While hunting for some other problem using address sanitizer our unit tests ran into a heap-buffer-overflow in `TSpline2`:. ```. Warning in <TH1::TH1>: nbins is <=0 - set to nbins = 1me left: 0 sec) . Warning in <TH1::TH1>: nbins is <=0 - set to nbins = 1. =================================================================. ==903254==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020001549e0 at pc 0x7f530c576a66 bp 0x7ffc17738f20 sp 0x7ffc17738f18. READ of size 8 at 0x6020001549e0 thread T0. #0 0x7f530c576a65 in TMVA::TSpline2::Eval(double) const root/tmva/tmva/src/TSpline2.cxx:84. #1 0x7f530c3dd685 in TMVA::PDF::FillSplineToHist() root/tmva/tmva/src/PDF.cxx:539. #2 0x7f530c3de1e8 in TMVA::PDF::BuildSplinePDF() root/tmva/tmva/src/PDF.cxx:364. #3 0x7f530c3dfc62 in TMVA::PDF::BuildPDF(TH1 const*) root/tmva/tmva/src/PDF.cxx:299. #4 0x7f530be8247c in TMVA::MethodBase::CreateMVAPdfs() root/tmva/tmva/src/MethodBase.cxx:2220. #5 0x7f530beaaa67 in TMVA::MethodBase::TrainMethod() root/tmva/tmva/src/MethodBase.cxx:691. #6 0x7f530bd67bb7 in TMVA::Factory::TrainAllMethods() root/tmva/tmva/src/Factory.cxx:1173. #7 0x7f5311416107 in Belle2::MVA::TMVATeacher::trainFactory(TMVA::Factory&, TMVA::DataLoader&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const belle2/mva/methods/src/TMVA.cc:164. #8 0x7f5311418389 in Belle2::MVA::TMVATeacherClassification::train(Belle2::MVA::Dataset&) const belle2/mva/methods/src/TMVA.cc:303. #9 0x90859d in (anonymous namespace)::TMVATest_TMVAClassificationInterface_Test::TestBody() bell",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8021
https://github.com/root-project/root/issues/8021:754,safety,ERROR,ERROR,754,"Possible Buffer Overflow in TSpline2; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. While hunting for some other problem using address sanitizer our unit tests ran into a heap-buffer-overflow in `TSpline2`:. ```. Warning in <TH1::TH1>: nbins is <=0 - set to nbins = 1me left: 0 sec) . Warning in <TH1::TH1>: nbins is <=0 - set to nbins = 1. =================================================================. ==903254==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020001549e0 at pc 0x7f530c576a66 bp 0x7ffc17738f20 sp 0x7ffc17738f18. READ of size 8 at 0x6020001549e0 thread T0. #0 0x7f530c576a65 in TMVA::TSpline2::Eval(double) const root/tmva/tmva/src/TSpline2.cxx:84. #1 0x7f530c3dd685 in TMVA::PDF::FillSplineToHist() root/tmva/tmva/src/PDF.cxx:539. #2 0x7f530c3de1e8 in TMVA::PDF::BuildSplinePDF() root/tmva/tmva/src/PDF.cxx:364. #3 0x7f530c3dfc62 in TMVA::PDF::BuildPDF(TH1 const*) root/tmva/tmva/src/PDF.cxx:299. #4 0x7f530be8247c in TMVA::MethodBase::CreateMVAPdfs() root/tmva/tmva/src/MethodBase.cxx:2220. #5 0x7f530beaaa67 in TMVA::MethodBase::TrainMethod() root/tmva/tmva/src/MethodBase.cxx:691. #6 0x7f530bd67bb7 in TMVA::Factory::TrainAllMethods() root/tmva/tmva/src/Factory.cxx:1173. #7 0x7f5311416107 in Belle2::MVA::TMVATeacher::trainFactory(TMVA::Factory&, TMVA::DataLoader&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const belle2/mva/methods/src/TMVA.cc:164. #8 0x7f5311418389 in Belle2::MVA::TMVATeacherClassification::train(Belle2::MVA::Dataset&) const belle2/mva/methods/src/TMVA.cc:303. #9 0x90859d in (anonymous namespace)::TMVATest_TMVAClassificationInterface_Test::TestBody() bell",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8021
https://github.com/root-project/root/issues/8021:1985,safety,Test,TestBody,1985," thread T0. #0 0x7f530c576a65 in TMVA::TSpline2::Eval(double) const root/tmva/tmva/src/TSpline2.cxx:84. #1 0x7f530c3dd685 in TMVA::PDF::FillSplineToHist() root/tmva/tmva/src/PDF.cxx:539. #2 0x7f530c3de1e8 in TMVA::PDF::BuildSplinePDF() root/tmva/tmva/src/PDF.cxx:364. #3 0x7f530c3dfc62 in TMVA::PDF::BuildPDF(TH1 const*) root/tmva/tmva/src/PDF.cxx:299. #4 0x7f530be8247c in TMVA::MethodBase::CreateMVAPdfs() root/tmva/tmva/src/MethodBase.cxx:2220. #5 0x7f530beaaa67 in TMVA::MethodBase::TrainMethod() root/tmva/tmva/src/MethodBase.cxx:691. #6 0x7f530bd67bb7 in TMVA::Factory::TrainAllMethods() root/tmva/tmva/src/Factory.cxx:1173. #7 0x7f5311416107 in Belle2::MVA::TMVATeacher::trainFactory(TMVA::Factory&, TMVA::DataLoader&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const belle2/mva/methods/src/TMVA.cc:164. #8 0x7f5311418389 in Belle2::MVA::TMVATeacherClassification::train(Belle2::MVA::Dataset&) const belle2/mva/methods/src/TMVA.cc:303. #9 0x90859d in (anonymous namespace)::TMVATest_TMVAClassificationInterface_Test::TestBody() belle2/mva/methods/tests/test_TMVA.cc:153. ```. Looking at the TH1 Warning about only having one bin and the code in `TSpline2::Eval` there is indeed a problem if the histogram/TGraph has only one point as (bin+2) is accessed. Now I'm fully aware interpolating a 1 point histogram doesn't make much sense but still, a heap-overflow is not the expected behavior. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Probably just return the value itself if only one point is in the graph. ### To Reproduce. ```c++. void tspline() {. double x{1};. TGraph* g = new TGraph(1, &x, &x);. TMVA::TSpline2 s(""spline"", g);. s.Eval(x);. }. ```. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04. ## Additional Context. I would also like to point out that `TSpline2.cxx` claims it doesn't own the `TGraph` instance in a comment in the constructor and contradicts this ten lines later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8021
https://github.com/root-project/root/issues/8021:2015,safety,test,tests,2015," thread T0. #0 0x7f530c576a65 in TMVA::TSpline2::Eval(double) const root/tmva/tmva/src/TSpline2.cxx:84. #1 0x7f530c3dd685 in TMVA::PDF::FillSplineToHist() root/tmva/tmva/src/PDF.cxx:539. #2 0x7f530c3de1e8 in TMVA::PDF::BuildSplinePDF() root/tmva/tmva/src/PDF.cxx:364. #3 0x7f530c3dfc62 in TMVA::PDF::BuildPDF(TH1 const*) root/tmva/tmva/src/PDF.cxx:299. #4 0x7f530be8247c in TMVA::MethodBase::CreateMVAPdfs() root/tmva/tmva/src/MethodBase.cxx:2220. #5 0x7f530beaaa67 in TMVA::MethodBase::TrainMethod() root/tmva/tmva/src/MethodBase.cxx:691. #6 0x7f530bd67bb7 in TMVA::Factory::TrainAllMethods() root/tmva/tmva/src/Factory.cxx:1173. #7 0x7f5311416107 in Belle2::MVA::TMVATeacher::trainFactory(TMVA::Factory&, TMVA::DataLoader&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const belle2/mva/methods/src/TMVA.cc:164. #8 0x7f5311418389 in Belle2::MVA::TMVATeacherClassification::train(Belle2::MVA::Dataset&) const belle2/mva/methods/src/TMVA.cc:303. #9 0x90859d in (anonymous namespace)::TMVATest_TMVAClassificationInterface_Test::TestBody() belle2/mva/methods/tests/test_TMVA.cc:153. ```. Looking at the TH1 Warning about only having one bin and the code in `TSpline2::Eval` there is indeed a problem if the histogram/TGraph has only one point as (bin+2) is accessed. Now I'm fully aware interpolating a 1 point histogram doesn't make much sense but still, a heap-overflow is not the expected behavior. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Probably just return the value itself if only one point is in the graph. ### To Reproduce. ```c++. void tspline() {. double x{1};. TGraph* g = new TGraph(1, &x, &x);. TMVA::TSpline2 s(""spline"", g);. s.Eval(x);. }. ```. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04. ## Additional Context. I would also like to point out that `TSpline2.cxx` claims it doesn't own the `TGraph` instance in a comment in the constructor and contradicts this ten lines later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8021
https://github.com/root-project/root/issues/8021:471,security,sanit,sanitizer,471,"Possible Buffer Overflow in TSpline2; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. While hunting for some other problem using address sanitizer our unit tests ran into a heap-buffer-overflow in `TSpline2`:. ```. Warning in <TH1::TH1>: nbins is <=0 - set to nbins = 1me left: 0 sec) . Warning in <TH1::TH1>: nbins is <=0 - set to nbins = 1. =================================================================. ==903254==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020001549e0 at pc 0x7f530c576a66 bp 0x7ffc17738f20 sp 0x7ffc17738f18. READ of size 8 at 0x6020001549e0 thread T0. #0 0x7f530c576a65 in TMVA::TSpline2::Eval(double) const root/tmva/tmva/src/TSpline2.cxx:84. #1 0x7f530c3dd685 in TMVA::PDF::FillSplineToHist() root/tmva/tmva/src/PDF.cxx:539. #2 0x7f530c3de1e8 in TMVA::PDF::BuildSplinePDF() root/tmva/tmva/src/PDF.cxx:364. #3 0x7f530c3dfc62 in TMVA::PDF::BuildPDF(TH1 const*) root/tmva/tmva/src/PDF.cxx:299. #4 0x7f530be8247c in TMVA::MethodBase::CreateMVAPdfs() root/tmva/tmva/src/MethodBase.cxx:2220. #5 0x7f530beaaa67 in TMVA::MethodBase::TrainMethod() root/tmva/tmva/src/MethodBase.cxx:691. #6 0x7f530bd67bb7 in TMVA::Factory::TrainAllMethods() root/tmva/tmva/src/Factory.cxx:1173. #7 0x7f5311416107 in Belle2::MVA::TMVATeacher::trainFactory(TMVA::Factory&, TMVA::DataLoader&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const belle2/mva/methods/src/TMVA.cc:164. #8 0x7f5311418389 in Belle2::MVA::TMVATeacherClassification::train(Belle2::MVA::Dataset&) const belle2/mva/methods/src/TMVA.cc:303. #9 0x90859d in (anonymous namespace)::TMVATest_TMVAClassificationInterface_Test::TestBody() bell",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8021
https://github.com/root-project/root/issues/8021:2213,security,access,accessed,2213," thread T0. #0 0x7f530c576a65 in TMVA::TSpline2::Eval(double) const root/tmva/tmva/src/TSpline2.cxx:84. #1 0x7f530c3dd685 in TMVA::PDF::FillSplineToHist() root/tmva/tmva/src/PDF.cxx:539. #2 0x7f530c3de1e8 in TMVA::PDF::BuildSplinePDF() root/tmva/tmva/src/PDF.cxx:364. #3 0x7f530c3dfc62 in TMVA::PDF::BuildPDF(TH1 const*) root/tmva/tmva/src/PDF.cxx:299. #4 0x7f530be8247c in TMVA::MethodBase::CreateMVAPdfs() root/tmva/tmva/src/MethodBase.cxx:2220. #5 0x7f530beaaa67 in TMVA::MethodBase::TrainMethod() root/tmva/tmva/src/MethodBase.cxx:691. #6 0x7f530bd67bb7 in TMVA::Factory::TrainAllMethods() root/tmva/tmva/src/Factory.cxx:1173. #7 0x7f5311416107 in Belle2::MVA::TMVATeacher::trainFactory(TMVA::Factory&, TMVA::DataLoader&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const belle2/mva/methods/src/TMVA.cc:164. #8 0x7f5311418389 in Belle2::MVA::TMVATeacherClassification::train(Belle2::MVA::Dataset&) const belle2/mva/methods/src/TMVA.cc:303. #9 0x90859d in (anonymous namespace)::TMVATest_TMVAClassificationInterface_Test::TestBody() belle2/mva/methods/tests/test_TMVA.cc:153. ```. Looking at the TH1 Warning about only having one bin and the code in `TSpline2::Eval` there is indeed a problem if the histogram/TGraph has only one point as (bin+2) is accessed. Now I'm fully aware interpolating a 1 point histogram doesn't make much sense but still, a heap-overflow is not the expected behavior. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Probably just return the value itself if only one point is in the graph. ### To Reproduce. ```c++. void tspline() {. double x{1};. TGraph* g = new TGraph(1, &x, &x);. TMVA::TSpline2 s(""spline"", g);. s.Eval(x);. }. ```. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04. ## Additional Context. I would also like to point out that `TSpline2.cxx` claims it doesn't own the `TGraph` instance in a comment in the constructor and contradicts this ten lines later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8021
https://github.com/root-project/root/issues/8021:485,testability,unit,unit,485,"Possible Buffer Overflow in TSpline2; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. While hunting for some other problem using address sanitizer our unit tests ran into a heap-buffer-overflow in `TSpline2`:. ```. Warning in <TH1::TH1>: nbins is <=0 - set to nbins = 1me left: 0 sec) . Warning in <TH1::TH1>: nbins is <=0 - set to nbins = 1. =================================================================. ==903254==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020001549e0 at pc 0x7f530c576a66 bp 0x7ffc17738f20 sp 0x7ffc17738f18. READ of size 8 at 0x6020001549e0 thread T0. #0 0x7f530c576a65 in TMVA::TSpline2::Eval(double) const root/tmva/tmva/src/TSpline2.cxx:84. #1 0x7f530c3dd685 in TMVA::PDF::FillSplineToHist() root/tmva/tmva/src/PDF.cxx:539. #2 0x7f530c3de1e8 in TMVA::PDF::BuildSplinePDF() root/tmva/tmva/src/PDF.cxx:364. #3 0x7f530c3dfc62 in TMVA::PDF::BuildPDF(TH1 const*) root/tmva/tmva/src/PDF.cxx:299. #4 0x7f530be8247c in TMVA::MethodBase::CreateMVAPdfs() root/tmva/tmva/src/MethodBase.cxx:2220. #5 0x7f530beaaa67 in TMVA::MethodBase::TrainMethod() root/tmva/tmva/src/MethodBase.cxx:691. #6 0x7f530bd67bb7 in TMVA::Factory::TrainAllMethods() root/tmva/tmva/src/Factory.cxx:1173. #7 0x7f5311416107 in Belle2::MVA::TMVATeacher::trainFactory(TMVA::Factory&, TMVA::DataLoader&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const belle2/mva/methods/src/TMVA.cc:164. #8 0x7f5311418389 in Belle2::MVA::TMVATeacherClassification::train(Belle2::MVA::Dataset&) const belle2/mva/methods/src/TMVA.cc:303. #9 0x90859d in (anonymous namespace)::TMVATest_TMVAClassificationInterface_Test::TestBody() bell",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8021
https://github.com/root-project/root/issues/8021:490,testability,test,tests,490,"Possible Buffer Overflow in TSpline2; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. While hunting for some other problem using address sanitizer our unit tests ran into a heap-buffer-overflow in `TSpline2`:. ```. Warning in <TH1::TH1>: nbins is <=0 - set to nbins = 1me left: 0 sec) . Warning in <TH1::TH1>: nbins is <=0 - set to nbins = 1. =================================================================. ==903254==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020001549e0 at pc 0x7f530c576a66 bp 0x7ffc17738f20 sp 0x7ffc17738f18. READ of size 8 at 0x6020001549e0 thread T0. #0 0x7f530c576a65 in TMVA::TSpline2::Eval(double) const root/tmva/tmva/src/TSpline2.cxx:84. #1 0x7f530c3dd685 in TMVA::PDF::FillSplineToHist() root/tmva/tmva/src/PDF.cxx:539. #2 0x7f530c3de1e8 in TMVA::PDF::BuildSplinePDF() root/tmva/tmva/src/PDF.cxx:364. #3 0x7f530c3dfc62 in TMVA::PDF::BuildPDF(TH1 const*) root/tmva/tmva/src/PDF.cxx:299. #4 0x7f530be8247c in TMVA::MethodBase::CreateMVAPdfs() root/tmva/tmva/src/MethodBase.cxx:2220. #5 0x7f530beaaa67 in TMVA::MethodBase::TrainMethod() root/tmva/tmva/src/MethodBase.cxx:691. #6 0x7f530bd67bb7 in TMVA::Factory::TrainAllMethods() root/tmva/tmva/src/Factory.cxx:1173. #7 0x7f5311416107 in Belle2::MVA::TMVATeacher::trainFactory(TMVA::Factory&, TMVA::DataLoader&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const belle2/mva/methods/src/TMVA.cc:164. #8 0x7f5311418389 in Belle2::MVA::TMVATeacherClassification::train(Belle2::MVA::Dataset&) const belle2/mva/methods/src/TMVA.cc:303. #9 0x90859d in (anonymous namespace)::TMVATest_TMVAClassificationInterface_Test::TestBody() bell",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8021
https://github.com/root-project/root/issues/8021:1985,testability,Test,TestBody,1985," thread T0. #0 0x7f530c576a65 in TMVA::TSpline2::Eval(double) const root/tmva/tmva/src/TSpline2.cxx:84. #1 0x7f530c3dd685 in TMVA::PDF::FillSplineToHist() root/tmva/tmva/src/PDF.cxx:539. #2 0x7f530c3de1e8 in TMVA::PDF::BuildSplinePDF() root/tmva/tmva/src/PDF.cxx:364. #3 0x7f530c3dfc62 in TMVA::PDF::BuildPDF(TH1 const*) root/tmva/tmva/src/PDF.cxx:299. #4 0x7f530be8247c in TMVA::MethodBase::CreateMVAPdfs() root/tmva/tmva/src/MethodBase.cxx:2220. #5 0x7f530beaaa67 in TMVA::MethodBase::TrainMethod() root/tmva/tmva/src/MethodBase.cxx:691. #6 0x7f530bd67bb7 in TMVA::Factory::TrainAllMethods() root/tmva/tmva/src/Factory.cxx:1173. #7 0x7f5311416107 in Belle2::MVA::TMVATeacher::trainFactory(TMVA::Factory&, TMVA::DataLoader&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const belle2/mva/methods/src/TMVA.cc:164. #8 0x7f5311418389 in Belle2::MVA::TMVATeacherClassification::train(Belle2::MVA::Dataset&) const belle2/mva/methods/src/TMVA.cc:303. #9 0x90859d in (anonymous namespace)::TMVATest_TMVAClassificationInterface_Test::TestBody() belle2/mva/methods/tests/test_TMVA.cc:153. ```. Looking at the TH1 Warning about only having one bin and the code in `TSpline2::Eval` there is indeed a problem if the histogram/TGraph has only one point as (bin+2) is accessed. Now I'm fully aware interpolating a 1 point histogram doesn't make much sense but still, a heap-overflow is not the expected behavior. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Probably just return the value itself if only one point is in the graph. ### To Reproduce. ```c++. void tspline() {. double x{1};. TGraph* g = new TGraph(1, &x, &x);. TMVA::TSpline2 s(""spline"", g);. s.Eval(x);. }. ```. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04. ## Additional Context. I would also like to point out that `TSpline2.cxx` claims it doesn't own the `TGraph` instance in a comment in the constructor and contradicts this ten lines later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8021
https://github.com/root-project/root/issues/8021:2015,testability,test,tests,2015," thread T0. #0 0x7f530c576a65 in TMVA::TSpline2::Eval(double) const root/tmva/tmva/src/TSpline2.cxx:84. #1 0x7f530c3dd685 in TMVA::PDF::FillSplineToHist() root/tmva/tmva/src/PDF.cxx:539. #2 0x7f530c3de1e8 in TMVA::PDF::BuildSplinePDF() root/tmva/tmva/src/PDF.cxx:364. #3 0x7f530c3dfc62 in TMVA::PDF::BuildPDF(TH1 const*) root/tmva/tmva/src/PDF.cxx:299. #4 0x7f530be8247c in TMVA::MethodBase::CreateMVAPdfs() root/tmva/tmva/src/MethodBase.cxx:2220. #5 0x7f530beaaa67 in TMVA::MethodBase::TrainMethod() root/tmva/tmva/src/MethodBase.cxx:691. #6 0x7f530bd67bb7 in TMVA::Factory::TrainAllMethods() root/tmva/tmva/src/Factory.cxx:1173. #7 0x7f5311416107 in Belle2::MVA::TMVATeacher::trainFactory(TMVA::Factory&, TMVA::DataLoader&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const belle2/mva/methods/src/TMVA.cc:164. #8 0x7f5311418389 in Belle2::MVA::TMVATeacherClassification::train(Belle2::MVA::Dataset&) const belle2/mva/methods/src/TMVA.cc:303. #9 0x90859d in (anonymous namespace)::TMVATest_TMVAClassificationInterface_Test::TestBody() belle2/mva/methods/tests/test_TMVA.cc:153. ```. Looking at the TH1 Warning about only having one bin and the code in `TSpline2::Eval` there is indeed a problem if the histogram/TGraph has only one point as (bin+2) is accessed. Now I'm fully aware interpolating a 1 point histogram doesn't make much sense but still, a heap-overflow is not the expected behavior. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Probably just return the value itself if only one point is in the graph. ### To Reproduce. ```c++. void tspline() {. double x{1};. TGraph* g = new TGraph(1, &x, &x);. TMVA::TSpline2 s(""spline"", g);. s.Eval(x);. }. ```. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04. ## Additional Context. I would also like to point out that `TSpline2.cxx` claims it doesn't own the `TGraph` instance in a comment in the constructor and contradicts this ten lines later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8021
https://github.com/root-project/root/issues/8021:2743,testability,Context,Context,2743," thread T0. #0 0x7f530c576a65 in TMVA::TSpline2::Eval(double) const root/tmva/tmva/src/TSpline2.cxx:84. #1 0x7f530c3dd685 in TMVA::PDF::FillSplineToHist() root/tmva/tmva/src/PDF.cxx:539. #2 0x7f530c3de1e8 in TMVA::PDF::BuildSplinePDF() root/tmva/tmva/src/PDF.cxx:364. #3 0x7f530c3dfc62 in TMVA::PDF::BuildPDF(TH1 const*) root/tmva/tmva/src/PDF.cxx:299. #4 0x7f530be8247c in TMVA::MethodBase::CreateMVAPdfs() root/tmva/tmva/src/MethodBase.cxx:2220. #5 0x7f530beaaa67 in TMVA::MethodBase::TrainMethod() root/tmva/tmva/src/MethodBase.cxx:691. #6 0x7f530bd67bb7 in TMVA::Factory::TrainAllMethods() root/tmva/tmva/src/Factory.cxx:1173. #7 0x7f5311416107 in Belle2::MVA::TMVATeacher::trainFactory(TMVA::Factory&, TMVA::DataLoader&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const belle2/mva/methods/src/TMVA.cc:164. #8 0x7f5311418389 in Belle2::MVA::TMVATeacherClassification::train(Belle2::MVA::Dataset&) const belle2/mva/methods/src/TMVA.cc:303. #9 0x90859d in (anonymous namespace)::TMVATest_TMVAClassificationInterface_Test::TestBody() belle2/mva/methods/tests/test_TMVA.cc:153. ```. Looking at the TH1 Warning about only having one bin and the code in `TSpline2::Eval` there is indeed a problem if the histogram/TGraph has only one point as (bin+2) is accessed. Now I'm fully aware interpolating a 1 point histogram doesn't make much sense but still, a heap-overflow is not the expected behavior. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Probably just return the value itself if only one point is in the graph. ### To Reproduce. ```c++. void tspline() {. double x{1};. TGraph* g = new TGraph(1, &x, &x);. TMVA::TSpline2 s(""spline"", g);. s.Eval(x);. }. ```. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04. ## Additional Context. I would also like to point out that `TSpline2.cxx` claims it doesn't own the `TGraph` instance in a comment in the constructor and contradicts this ten lines later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8021
https://github.com/root-project/root/issues/8021:754,usability,ERROR,ERROR,754,"Possible Buffer Overflow in TSpline2; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. While hunting for some other problem using address sanitizer our unit tests ran into a heap-buffer-overflow in `TSpline2`:. ```. Warning in <TH1::TH1>: nbins is <=0 - set to nbins = 1me left: 0 sec) . Warning in <TH1::TH1>: nbins is <=0 - set to nbins = 1. =================================================================. ==903254==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020001549e0 at pc 0x7f530c576a66 bp 0x7ffc17738f20 sp 0x7ffc17738f18. READ of size 8 at 0x6020001549e0 thread T0. #0 0x7f530c576a65 in TMVA::TSpline2::Eval(double) const root/tmva/tmva/src/TSpline2.cxx:84. #1 0x7f530c3dd685 in TMVA::PDF::FillSplineToHist() root/tmva/tmva/src/PDF.cxx:539. #2 0x7f530c3de1e8 in TMVA::PDF::BuildSplinePDF() root/tmva/tmva/src/PDF.cxx:364. #3 0x7f530c3dfc62 in TMVA::PDF::BuildPDF(TH1 const*) root/tmva/tmva/src/PDF.cxx:299. #4 0x7f530be8247c in TMVA::MethodBase::CreateMVAPdfs() root/tmva/tmva/src/MethodBase.cxx:2220. #5 0x7f530beaaa67 in TMVA::MethodBase::TrainMethod() root/tmva/tmva/src/MethodBase.cxx:691. #6 0x7f530bd67bb7 in TMVA::Factory::TrainAllMethods() root/tmva/tmva/src/Factory.cxx:1173. #7 0x7f5311416107 in Belle2::MVA::TMVATeacher::trainFactory(TMVA::Factory&, TMVA::DataLoader&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const belle2/mva/methods/src/TMVA.cc:164. #8 0x7f5311418389 in Belle2::MVA::TMVATeacherClassification::train(Belle2::MVA::Dataset&) const belle2/mva/methods/src/TMVA.cc:303. #9 0x90859d in (anonymous namespace)::TMVATest_TMVAClassificationInterface_Test::TestBody() bell",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8021
https://github.com/root-project/root/issues/8021:2348,usability,behavi,behavior,2348," thread T0. #0 0x7f530c576a65 in TMVA::TSpline2::Eval(double) const root/tmva/tmva/src/TSpline2.cxx:84. #1 0x7f530c3dd685 in TMVA::PDF::FillSplineToHist() root/tmva/tmva/src/PDF.cxx:539. #2 0x7f530c3de1e8 in TMVA::PDF::BuildSplinePDF() root/tmva/tmva/src/PDF.cxx:364. #3 0x7f530c3dfc62 in TMVA::PDF::BuildPDF(TH1 const*) root/tmva/tmva/src/PDF.cxx:299. #4 0x7f530be8247c in TMVA::MethodBase::CreateMVAPdfs() root/tmva/tmva/src/MethodBase.cxx:2220. #5 0x7f530beaaa67 in TMVA::MethodBase::TrainMethod() root/tmva/tmva/src/MethodBase.cxx:691. #6 0x7f530bd67bb7 in TMVA::Factory::TrainAllMethods() root/tmva/tmva/src/Factory.cxx:1173. #7 0x7f5311416107 in Belle2::MVA::TMVATeacher::trainFactory(TMVA::Factory&, TMVA::DataLoader&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const belle2/mva/methods/src/TMVA.cc:164. #8 0x7f5311418389 in Belle2::MVA::TMVATeacherClassification::train(Belle2::MVA::Dataset&) const belle2/mva/methods/src/TMVA.cc:303. #9 0x90859d in (anonymous namespace)::TMVATest_TMVAClassificationInterface_Test::TestBody() belle2/mva/methods/tests/test_TMVA.cc:153. ```. Looking at the TH1 Warning about only having one bin and the code in `TSpline2::Eval` there is indeed a problem if the histogram/TGraph has only one point as (bin+2) is accessed. Now I'm fully aware interpolating a 1 point histogram doesn't make much sense but still, a heap-overflow is not the expected behavior. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Probably just return the value itself if only one point is in the graph. ### To Reproduce. ```c++. void tspline() {. double x{1};. TGraph* g = new TGraph(1, &x, &x);. TMVA::TSpline2 s(""spline"", g);. s.Eval(x);. }. ```. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04. ## Additional Context. I would also like to point out that `TSpline2.cxx` claims it doesn't own the `TGraph` instance in a comment in the constructor and contradicts this ten lines later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8021
https://github.com/root-project/root/issues/8021:2371,usability,behavi,behavior,2371," thread T0. #0 0x7f530c576a65 in TMVA::TSpline2::Eval(double) const root/tmva/tmva/src/TSpline2.cxx:84. #1 0x7f530c3dd685 in TMVA::PDF::FillSplineToHist() root/tmva/tmva/src/PDF.cxx:539. #2 0x7f530c3de1e8 in TMVA::PDF::BuildSplinePDF() root/tmva/tmva/src/PDF.cxx:364. #3 0x7f530c3dfc62 in TMVA::PDF::BuildPDF(TH1 const*) root/tmva/tmva/src/PDF.cxx:299. #4 0x7f530be8247c in TMVA::MethodBase::CreateMVAPdfs() root/tmva/tmva/src/MethodBase.cxx:2220. #5 0x7f530beaaa67 in TMVA::MethodBase::TrainMethod() root/tmva/tmva/src/MethodBase.cxx:691. #6 0x7f530bd67bb7 in TMVA::Factory::TrainAllMethods() root/tmva/tmva/src/Factory.cxx:1173. #7 0x7f5311416107 in Belle2::MVA::TMVATeacher::trainFactory(TMVA::Factory&, TMVA::DataLoader&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const belle2/mva/methods/src/TMVA.cc:164. #8 0x7f5311418389 in Belle2::MVA::TMVATeacherClassification::train(Belle2::MVA::Dataset&) const belle2/mva/methods/src/TMVA.cc:303. #9 0x90859d in (anonymous namespace)::TMVATest_TMVAClassificationInterface_Test::TestBody() belle2/mva/methods/tests/test_TMVA.cc:153. ```. Looking at the TH1 Warning about only having one bin and the code in `TSpline2::Eval` there is indeed a problem if the histogram/TGraph has only one point as (bin+2) is accessed. Now I'm fully aware interpolating a 1 point histogram doesn't make much sense but still, a heap-overflow is not the expected behavior. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Probably just return the value itself if only one point is in the graph. ### To Reproduce. ```c++. void tspline() {. double x{1};. TGraph* g = new TGraph(1, &x, &x);. TMVA::TSpline2 s(""spline"", g);. s.Eval(x);. }. ```. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04. ## Additional Context. I would also like to point out that `TSpline2.cxx` claims it doesn't own the `TGraph` instance in a comment in the constructor and contradicts this ten lines later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8021
https://github.com/root-project/root/issues/8021:2389,usability,clear,clear,2389," thread T0. #0 0x7f530c576a65 in TMVA::TSpline2::Eval(double) const root/tmva/tmva/src/TSpline2.cxx:84. #1 0x7f530c3dd685 in TMVA::PDF::FillSplineToHist() root/tmva/tmva/src/PDF.cxx:539. #2 0x7f530c3de1e8 in TMVA::PDF::BuildSplinePDF() root/tmva/tmva/src/PDF.cxx:364. #3 0x7f530c3dfc62 in TMVA::PDF::BuildPDF(TH1 const*) root/tmva/tmva/src/PDF.cxx:299. #4 0x7f530be8247c in TMVA::MethodBase::CreateMVAPdfs() root/tmva/tmva/src/MethodBase.cxx:2220. #5 0x7f530beaaa67 in TMVA::MethodBase::TrainMethod() root/tmva/tmva/src/MethodBase.cxx:691. #6 0x7f530bd67bb7 in TMVA::Factory::TrainAllMethods() root/tmva/tmva/src/Factory.cxx:1173. #7 0x7f5311416107 in Belle2::MVA::TMVATeacher::trainFactory(TMVA::Factory&, TMVA::DataLoader&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const belle2/mva/methods/src/TMVA.cc:164. #8 0x7f5311418389 in Belle2::MVA::TMVATeacherClassification::train(Belle2::MVA::Dataset&) const belle2/mva/methods/src/TMVA.cc:303. #9 0x90859d in (anonymous namespace)::TMVATest_TMVAClassificationInterface_Test::TestBody() belle2/mva/methods/tests/test_TMVA.cc:153. ```. Looking at the TH1 Warning about only having one bin and the code in `TSpline2::Eval` there is indeed a problem if the histogram/TGraph has only one point as (bin+2) is accessed. Now I'm fully aware interpolating a 1 point histogram doesn't make much sense but still, a heap-overflow is not the expected behavior. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Probably just return the value itself if only one point is in the graph. ### To Reproduce. ```c++. void tspline() {. double x{1};. TGraph* g = new TGraph(1, &x, &x);. TMVA::TSpline2 s(""spline"", g);. s.Eval(x);. }. ```. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04. ## Additional Context. I would also like to point out that `TSpline2.cxx` claims it doesn't own the `TGraph` instance in a comment in the constructor and contradicts this ten lines later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8021
https://github.com/root-project/root/issues/8022:255,availability,error,error,255,TBB exposed in public includes of Thread library; There is build problem on mac11 nodes:. ```. FAILED: core/thread/G__Thread.cxx lib/Thread.pcm . /Users/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: 'tbb/enumerable_thread_specific.h' file not found. ```. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115867/console. It is because of that PR: https://github.com/root-project/root/pull/7260. It exposes TBB to public includes - via ROOT/TReentrantRWLock.hxx file. First of all one should specify that `Thread` library depend on `TBB` builtins - thats easy. But also one should export `TBB_INCLUDE_DIRS` and `TBB_CXXFLAGS` as INTERFACE (not PRIVATE) properties of `Thread` library. Do we want this?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8022
https://github.com/root-project/root/issues/8022:333,availability,servic,services,333,TBB exposed in public includes of Thread library; There is build problem on mac11 nodes:. ```. FAILED: core/thread/G__Thread.cxx lib/Thread.pcm . /Users/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: 'tbb/enumerable_thread_specific.h' file not found. ```. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115867/console. It is because of that PR: https://github.com/root-project/root/pull/7260. It exposes TBB to public includes - via ROOT/TReentrantRWLock.hxx file. First of all one should specify that `Thread` library depend on `TBB` builtins - thats easy. But also one should export `TBB_INCLUDE_DIRS` and `TBB_CXXFLAGS` as INTERFACE (not PRIVATE) properties of `Thread` library. Do we want this?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8022
https://github.com/root-project/root/issues/8022:59,deployability,build,build,59,TBB exposed in public includes of Thread library; There is build problem on mac11 nodes:. ```. FAILED: core/thread/G__Thread.cxx lib/Thread.pcm . /Users/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: 'tbb/enumerable_thread_specific.h' file not found. ```. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115867/console. It is because of that PR: https://github.com/root-project/root/pull/7260. It exposes TBB to public includes - via ROOT/TReentrantRWLock.hxx file. First of all one should specify that `Thread` library depend on `TBB` builtins - thats easy. But also one should export `TBB_INCLUDE_DIRS` and `TBB_CXXFLAGS` as INTERFACE (not PRIVATE) properties of `Thread` library. Do we want this?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8022
https://github.com/root-project/root/issues/8022:95,deployability,FAIL,FAILED,95,TBB exposed in public includes of Thread library; There is build problem on mac11 nodes:. ```. FAILED: core/thread/G__Thread.cxx lib/Thread.pcm . /Users/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: 'tbb/enumerable_thread_specific.h' file not found. ```. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115867/console. It is because of that PR: https://github.com/root-project/root/pull/7260. It exposes TBB to public includes - via ROOT/TReentrantRWLock.hxx file. First of all one should specify that `Thread` library depend on `TBB` builtins - thats easy. But also one should export `TBB_INCLUDE_DIRS` and `TBB_CXXFLAGS` as INTERFACE (not PRIVATE) properties of `Thread` library. Do we want this?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8022
https://github.com/root-project/root/issues/8022:162,deployability,build,build,162,TBB exposed in public includes of Thread library; There is build problem on mac11 nodes:. ```. FAILED: core/thread/G__Thread.cxx lib/Thread.pcm . /Users/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: 'tbb/enumerable_thread_specific.h' file not found. ```. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115867/console. It is because of that PR: https://github.com/root-project/root/pull/7260. It exposes TBB to public includes - via ROOT/TReentrantRWLock.hxx file. First of all one should specify that `Thread` library depend on `TBB` builtins - thats easy. But also one should export `TBB_INCLUDE_DIRS` and `TBB_CXXFLAGS` as INTERFACE (not PRIVATE) properties of `Thread` library. Do we want this?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8022
https://github.com/root-project/root/issues/8022:196,deployability,build,build,196,TBB exposed in public includes of Thread library; There is build problem on mac11 nodes:. ```. FAILED: core/thread/G__Thread.cxx lib/Thread.pcm . /Users/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: 'tbb/enumerable_thread_specific.h' file not found. ```. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115867/console. It is because of that PR: https://github.com/root-project/root/pull/7260. It exposes TBB to public includes - via ROOT/TReentrantRWLock.hxx file. First of all one should specify that `Thread` library depend on `TBB` builtins - thats easy. But also one should export `TBB_INCLUDE_DIRS` and `TBB_CXXFLAGS` as INTERFACE (not PRIVATE) properties of `Thread` library. Do we want this?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8022
https://github.com/root-project/root/issues/8022:202,deployability,build,build,202,TBB exposed in public includes of Thread library; There is build problem on mac11 nodes:. ```. FAILED: core/thread/G__Thread.cxx lib/Thread.pcm . /Users/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: 'tbb/enumerable_thread_specific.h' file not found. ```. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115867/console. It is because of that PR: https://github.com/root-project/root/pull/7260. It exposes TBB to public includes - via ROOT/TReentrantRWLock.hxx file. First of all one should specify that `Thread` library depend on `TBB` builtins - thats easy. But also one should export `TBB_INCLUDE_DIRS` and `TBB_CXXFLAGS` as INTERFACE (not PRIVATE) properties of `Thread` library. Do we want this?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8022
https://github.com/root-project/root/issues/8022:333,deployability,servic,services,333,TBB exposed in public includes of Thread library; There is build problem on mac11 nodes:. ```. FAILED: core/thread/G__Thread.cxx lib/Thread.pcm . /Users/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: 'tbb/enumerable_thread_specific.h' file not found. ```. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115867/console. It is because of that PR: https://github.com/root-project/root/pull/7260. It exposes TBB to public includes - via ROOT/TReentrantRWLock.hxx file. First of all one should specify that `Thread` library depend on `TBB` builtins - thats easy. But also one should export `TBB_INCLUDE_DIRS` and `TBB_CXXFLAGS` as INTERFACE (not PRIVATE) properties of `Thread` library. Do we want this?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8022
https://github.com/root-project/root/issues/8022:385,deployability,build,build,385,TBB exposed in public includes of Thread library; There is build problem on mac11 nodes:. ```. FAILED: core/thread/G__Thread.cxx lib/Thread.pcm . /Users/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: 'tbb/enumerable_thread_specific.h' file not found. ```. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115867/console. It is because of that PR: https://github.com/root-project/root/pull/7260. It exposes TBB to public includes - via ROOT/TReentrantRWLock.hxx file. First of all one should specify that `Thread` library depend on `TBB` builtins - thats easy. But also one should export `TBB_INCLUDE_DIRS` and `TBB_CXXFLAGS` as INTERFACE (not PRIVATE) properties of `Thread` library. Do we want this?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8022
https://github.com/root-project/root/issues/8022:607,deployability,depend,depend,607,TBB exposed in public includes of Thread library; There is build problem on mac11 nodes:. ```. FAILED: core/thread/G__Thread.cxx lib/Thread.pcm . /Users/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: 'tbb/enumerable_thread_specific.h' file not found. ```. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115867/console. It is because of that PR: https://github.com/root-project/root/pull/7260. It exposes TBB to public includes - via ROOT/TReentrantRWLock.hxx file. First of all one should specify that `Thread` library depend on `TBB` builtins - thats easy. But also one should export `TBB_INCLUDE_DIRS` and `TBB_CXXFLAGS` as INTERFACE (not PRIVATE) properties of `Thread` library. Do we want this?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8022
https://github.com/root-project/root/issues/8022:103,energy efficiency,core,core,103,TBB exposed in public includes of Thread library; There is build problem on mac11 nodes:. ```. FAILED: core/thread/G__Thread.cxx lib/Thread.pcm . /Users/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: 'tbb/enumerable_thread_specific.h' file not found. ```. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115867/console. It is because of that PR: https://github.com/root-project/root/pull/7260. It exposes TBB to public includes - via ROOT/TReentrantRWLock.hxx file. First of all one should specify that `Thread` library depend on `TBB` builtins - thats easy. But also one should export `TBB_INCLUDE_DIRS` and `TBB_CXXFLAGS` as INTERFACE (not PRIVATE) properties of `Thread` library. Do we want this?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8022
https://github.com/root-project/root/issues/8022:15,integrability,pub,public,15,TBB exposed in public includes of Thread library; There is build problem on mac11 nodes:. ```. FAILED: core/thread/G__Thread.cxx lib/Thread.pcm . /Users/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: 'tbb/enumerable_thread_specific.h' file not found. ```. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115867/console. It is because of that PR: https://github.com/root-project/root/pull/7260. It exposes TBB to public includes - via ROOT/TReentrantRWLock.hxx file. First of all one should specify that `Thread` library depend on `TBB` builtins - thats easy. But also one should export `TBB_INCLUDE_DIRS` and `TBB_CXXFLAGS` as INTERFACE (not PRIVATE) properties of `Thread` library. Do we want this?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8022
https://github.com/root-project/root/issues/8022:333,integrability,servic,services,333,TBB exposed in public includes of Thread library; There is build problem on mac11 nodes:. ```. FAILED: core/thread/G__Thread.cxx lib/Thread.pcm . /Users/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: 'tbb/enumerable_thread_specific.h' file not found. ```. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115867/console. It is because of that PR: https://github.com/root-project/root/pull/7260. It exposes TBB to public includes - via ROOT/TReentrantRWLock.hxx file. First of all one should specify that `Thread` library depend on `TBB` builtins - thats easy. But also one should export `TBB_INCLUDE_DIRS` and `TBB_CXXFLAGS` as INTERFACE (not PRIVATE) properties of `Thread` library. Do we want this?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8022
https://github.com/root-project/root/issues/8022:499,integrability,pub,public,499,TBB exposed in public includes of Thread library; There is build problem on mac11 nodes:. ```. FAILED: core/thread/G__Thread.cxx lib/Thread.pcm . /Users/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: 'tbb/enumerable_thread_specific.h' file not found. ```. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115867/console. It is because of that PR: https://github.com/root-project/root/pull/7260. It exposes TBB to public includes - via ROOT/TReentrantRWLock.hxx file. First of all one should specify that `Thread` library depend on `TBB` builtins - thats easy. But also one should export `TBB_INCLUDE_DIRS` and `TBB_CXXFLAGS` as INTERFACE (not PRIVATE) properties of `Thread` library. Do we want this?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8022
https://github.com/root-project/root/issues/8022:607,integrability,depend,depend,607,TBB exposed in public includes of Thread library; There is build problem on mac11 nodes:. ```. FAILED: core/thread/G__Thread.cxx lib/Thread.pcm . /Users/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: 'tbb/enumerable_thread_specific.h' file not found. ```. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115867/console. It is because of that PR: https://github.com/root-project/root/pull/7260. It exposes TBB to public includes - via ROOT/TReentrantRWLock.hxx file. First of all one should specify that `Thread` library depend on `TBB` builtins - thats easy. But also one should export `TBB_INCLUDE_DIRS` and `TBB_CXXFLAGS` as INTERFACE (not PRIVATE) properties of `Thread` library. Do we want this?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8022
https://github.com/root-project/root/issues/8022:714,integrability,INTERFAC,INTERFACE,714,TBB exposed in public includes of Thread library; There is build problem on mac11 nodes:. ```. FAILED: core/thread/G__Thread.cxx lib/Thread.pcm . /Users/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: 'tbb/enumerable_thread_specific.h' file not found. ```. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115867/console. It is because of that PR: https://github.com/root-project/root/pull/7260. It exposes TBB to public includes - via ROOT/TReentrantRWLock.hxx file. First of all one should specify that `Thread` library depend on `TBB` builtins - thats easy. But also one should export `TBB_INCLUDE_DIRS` and `TBB_CXXFLAGS` as INTERFACE (not PRIVATE) properties of `Thread` library. Do we want this?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8022
https://github.com/root-project/root/issues/8022:577,interoperability,specif,specify,577,TBB exposed in public includes of Thread library; There is build problem on mac11 nodes:. ```. FAILED: core/thread/G__Thread.cxx lib/Thread.pcm . /Users/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: 'tbb/enumerable_thread_specific.h' file not found. ```. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115867/console. It is because of that PR: https://github.com/root-project/root/pull/7260. It exposes TBB to public includes - via ROOT/TReentrantRWLock.hxx file. First of all one should specify that `Thread` library depend on `TBB` builtins - thats easy. But also one should export `TBB_INCLUDE_DIRS` and `TBB_CXXFLAGS` as INTERFACE (not PRIVATE) properties of `Thread` library. Do we want this?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8022
https://github.com/root-project/root/issues/8022:714,interoperability,INTERFAC,INTERFACE,714,TBB exposed in public includes of Thread library; There is build problem on mac11 nodes:. ```. FAILED: core/thread/G__Thread.cxx lib/Thread.pcm . /Users/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: 'tbb/enumerable_thread_specific.h' file not found. ```. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115867/console. It is because of that PR: https://github.com/root-project/root/pull/7260. It exposes TBB to public includes - via ROOT/TReentrantRWLock.hxx file. First of all one should specify that `Thread` library depend on `TBB` builtins - thats easy. But also one should export `TBB_INCLUDE_DIRS` and `TBB_CXXFLAGS` as INTERFACE (not PRIVATE) properties of `Thread` library. Do we want this?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8022
https://github.com/root-project/root/issues/8022:333,modifiability,servic,services,333,TBB exposed in public includes of Thread library; There is build problem on mac11 nodes:. ```. FAILED: core/thread/G__Thread.cxx lib/Thread.pcm . /Users/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: 'tbb/enumerable_thread_specific.h' file not found. ```. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115867/console. It is because of that PR: https://github.com/root-project/root/pull/7260. It exposes TBB to public includes - via ROOT/TReentrantRWLock.hxx file. First of all one should specify that `Thread` library depend on `TBB` builtins - thats easy. But also one should export `TBB_INCLUDE_DIRS` and `TBB_CXXFLAGS` as INTERFACE (not PRIVATE) properties of `Thread` library. Do we want this?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8022
https://github.com/root-project/root/issues/8022:607,modifiability,depend,depend,607,TBB exposed in public includes of Thread library; There is build problem on mac11 nodes:. ```. FAILED: core/thread/G__Thread.cxx lib/Thread.pcm . /Users/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: 'tbb/enumerable_thread_specific.h' file not found. ```. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115867/console. It is because of that PR: https://github.com/root-project/root/pull/7260. It exposes TBB to public includes - via ROOT/TReentrantRWLock.hxx file. First of all one should specify that `Thread` library depend on `TBB` builtins - thats easy. But also one should export `TBB_INCLUDE_DIRS` and `TBB_CXXFLAGS` as INTERFACE (not PRIVATE) properties of `Thread` library. Do we want this?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8022
https://github.com/root-project/root/issues/8022:714,modifiability,INTERFAC,INTERFACE,714,TBB exposed in public includes of Thread library; There is build problem on mac11 nodes:. ```. FAILED: core/thread/G__Thread.cxx lib/Thread.pcm . /Users/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: 'tbb/enumerable_thread_specific.h' file not found. ```. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115867/console. It is because of that PR: https://github.com/root-project/root/pull/7260. It exposes TBB to public includes - via ROOT/TReentrantRWLock.hxx file. First of all one should specify that `Thread` library depend on `TBB` builtins - thats easy. But also one should export `TBB_INCLUDE_DIRS` and `TBB_CXXFLAGS` as INTERFACE (not PRIVATE) properties of `Thread` library. Do we want this?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8022
https://github.com/root-project/root/issues/8022:255,performance,error,error,255,TBB exposed in public includes of Thread library; There is build problem on mac11 nodes:. ```. FAILED: core/thread/G__Thread.cxx lib/Thread.pcm . /Users/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: 'tbb/enumerable_thread_specific.h' file not found. ```. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115867/console. It is because of that PR: https://github.com/root-project/root/pull/7260. It exposes TBB to public includes - via ROOT/TReentrantRWLock.hxx file. First of all one should specify that `Thread` library depend on `TBB` builtins - thats easy. But also one should export `TBB_INCLUDE_DIRS` and `TBB_CXXFLAGS` as INTERFACE (not PRIVATE) properties of `Thread` library. Do we want this?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8022
https://github.com/root-project/root/issues/8022:95,reliability,FAIL,FAILED,95,TBB exposed in public includes of Thread library; There is build problem on mac11 nodes:. ```. FAILED: core/thread/G__Thread.cxx lib/Thread.pcm . /Users/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: 'tbb/enumerable_thread_specific.h' file not found. ```. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115867/console. It is because of that PR: https://github.com/root-project/root/pull/7260. It exposes TBB to public includes - via ROOT/TReentrantRWLock.hxx file. First of all one should specify that `Thread` library depend on `TBB` builtins - thats easy. But also one should export `TBB_INCLUDE_DIRS` and `TBB_CXXFLAGS` as INTERFACE (not PRIVATE) properties of `Thread` library. Do we want this?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8022
https://github.com/root-project/root/issues/8022:255,safety,error,error,255,TBB exposed in public includes of Thread library; There is build problem on mac11 nodes:. ```. FAILED: core/thread/G__Thread.cxx lib/Thread.pcm . /Users/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: 'tbb/enumerable_thread_specific.h' file not found. ```. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115867/console. It is because of that PR: https://github.com/root-project/root/pull/7260. It exposes TBB to public includes - via ROOT/TReentrantRWLock.hxx file. First of all one should specify that `Thread` library depend on `TBB` builtins - thats easy. But also one should export `TBB_INCLUDE_DIRS` and `TBB_CXXFLAGS` as INTERFACE (not PRIVATE) properties of `Thread` library. Do we want this?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8022
https://github.com/root-project/root/issues/8022:607,safety,depend,depend,607,TBB exposed in public includes of Thread library; There is build problem on mac11 nodes:. ```. FAILED: core/thread/G__Thread.cxx lib/Thread.pcm . /Users/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: 'tbb/enumerable_thread_specific.h' file not found. ```. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115867/console. It is because of that PR: https://github.com/root-project/root/pull/7260. It exposes TBB to public includes - via ROOT/TReentrantRWLock.hxx file. First of all one should specify that `Thread` library depend on `TBB` builtins - thats easy. But also one should export `TBB_INCLUDE_DIRS` and `TBB_CXXFLAGS` as INTERFACE (not PRIVATE) properties of `Thread` library. Do we want this?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8022
https://github.com/root-project/root/issues/8022:4,security,expos,exposed,4,TBB exposed in public includes of Thread library; There is build problem on mac11 nodes:. ```. FAILED: core/thread/G__Thread.cxx lib/Thread.pcm . /Users/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: 'tbb/enumerable_thread_specific.h' file not found. ```. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115867/console. It is because of that PR: https://github.com/root-project/root/pull/7260. It exposes TBB to public includes - via ROOT/TReentrantRWLock.hxx file. First of all one should specify that `Thread` library depend on `TBB` builtins - thats easy. But also one should export `TBB_INCLUDE_DIRS` and `TBB_CXXFLAGS` as INTERFACE (not PRIVATE) properties of `Thread` library. Do we want this?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8022
https://github.com/root-project/root/issues/8022:484,security,expos,exposes,484,TBB exposed in public includes of Thread library; There is build problem on mac11 nodes:. ```. FAILED: core/thread/G__Thread.cxx lib/Thread.pcm . /Users/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: 'tbb/enumerable_thread_specific.h' file not found. ```. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115867/console. It is because of that PR: https://github.com/root-project/root/pull/7260. It exposes TBB to public includes - via ROOT/TReentrantRWLock.hxx file. First of all one should specify that `Thread` library depend on `TBB` builtins - thats easy. But also one should export `TBB_INCLUDE_DIRS` and `TBB_CXXFLAGS` as INTERFACE (not PRIVATE) properties of `Thread` library. Do we want this?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8022
https://github.com/root-project/root/issues/8022:607,testability,depend,depend,607,TBB exposed in public includes of Thread library; There is build problem on mac11 nodes:. ```. FAILED: core/thread/G__Thread.cxx lib/Thread.pcm . /Users/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: 'tbb/enumerable_thread_specific.h' file not found. ```. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115867/console. It is because of that PR: https://github.com/root-project/root/pull/7260. It exposes TBB to public includes - via ROOT/TReentrantRWLock.hxx file. First of all one should specify that `Thread` library depend on `TBB` builtins - thats easy. But also one should export `TBB_INCLUDE_DIRS` and `TBB_CXXFLAGS` as INTERFACE (not PRIVATE) properties of `Thread` library. Do we want this?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8022
https://github.com/root-project/root/issues/8022:147,usability,User,Users,147,TBB exposed in public includes of Thread library; There is build problem on mac11 nodes:. ```. FAILED: core/thread/G__Thread.cxx lib/Thread.pcm . /Users/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: 'tbb/enumerable_thread_specific.h' file not found. ```. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115867/console. It is because of that PR: https://github.com/root-project/root/pull/7260. It exposes TBB to public includes - via ROOT/TReentrantRWLock.hxx file. First of all one should specify that `Thread` library depend on `TBB` builtins - thats easy. But also one should export `TBB_INCLUDE_DIRS` and `TBB_CXXFLAGS` as INTERFACE (not PRIVATE) properties of `Thread` library. Do we want this?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8022
https://github.com/root-project/root/issues/8022:255,usability,error,error,255,TBB exposed in public includes of Thread library; There is build problem on mac11 nodes:. ```. FAILED: core/thread/G__Thread.cxx lib/Thread.pcm . /Users/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: 'tbb/enumerable_thread_specific.h' file not found. ```. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115867/console. It is because of that PR: https://github.com/root-project/root/pull/7260. It exposes TBB to public includes - via ROOT/TReentrantRWLock.hxx file. First of all one should specify that `Thread` library depend on `TBB` builtins - thats easy. But also one should export `TBB_INCLUDE_DIRS` and `TBB_CXXFLAGS` as INTERFACE (not PRIVATE) properties of `Thread` library. Do we want this?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8022
https://github.com/root-project/root/pull/8023:27,deployability,depend,dependency,27,"[cmake] add TBB as builtin dependency for Thread library; Once TBB used inside thread, one should provide that dependency. Partially solves #8022. Need to be applied also for 6.24 branch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8023
https://github.com/root-project/root/pull/8023:111,deployability,depend,dependency,111,"[cmake] add TBB as builtin dependency for Thread library; Once TBB used inside thread, one should provide that dependency. Partially solves #8022. Need to be applied also for 6.24 branch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8023
https://github.com/root-project/root/pull/8023:27,integrability,depend,dependency,27,"[cmake] add TBB as builtin dependency for Thread library; Once TBB used inside thread, one should provide that dependency. Partially solves #8022. Need to be applied also for 6.24 branch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8023
https://github.com/root-project/root/pull/8023:111,integrability,depend,dependency,111,"[cmake] add TBB as builtin dependency for Thread library; Once TBB used inside thread, one should provide that dependency. Partially solves #8022. Need to be applied also for 6.24 branch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8023
https://github.com/root-project/root/pull/8023:27,modifiability,depend,dependency,27,"[cmake] add TBB as builtin dependency for Thread library; Once TBB used inside thread, one should provide that dependency. Partially solves #8022. Need to be applied also for 6.24 branch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8023
https://github.com/root-project/root/pull/8023:111,modifiability,depend,dependency,111,"[cmake] add TBB as builtin dependency for Thread library; Once TBB used inside thread, one should provide that dependency. Partially solves #8022. Need to be applied also for 6.24 branch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8023
https://github.com/root-project/root/pull/8023:27,safety,depend,dependency,27,"[cmake] add TBB as builtin dependency for Thread library; Once TBB used inside thread, one should provide that dependency. Partially solves #8022. Need to be applied also for 6.24 branch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8023
https://github.com/root-project/root/pull/8023:111,safety,depend,dependency,111,"[cmake] add TBB as builtin dependency for Thread library; Once TBB used inside thread, one should provide that dependency. Partially solves #8022. Need to be applied also for 6.24 branch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8023
https://github.com/root-project/root/pull/8023:27,testability,depend,dependency,27,"[cmake] add TBB as builtin dependency for Thread library; Once TBB used inside thread, one should provide that dependency. Partially solves #8022. Need to be applied also for 6.24 branch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8023
https://github.com/root-project/root/pull/8023:111,testability,depend,dependency,111,"[cmake] add TBB as builtin dependency for Thread library; Once TBB used inside thread, one should provide that dependency. Partially solves #8022. Need to be applied also for 6.24 branch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8023
https://github.com/root-project/root/pull/8024:27,deployability,depend,dependency,27,"[cmake] add TBB as builtin dependency for Thread library 6.24; Once TBB used inside thread, one should provide that dependency",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8024
https://github.com/root-project/root/pull/8024:116,deployability,depend,dependency,116,"[cmake] add TBB as builtin dependency for Thread library 6.24; Once TBB used inside thread, one should provide that dependency",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8024
https://github.com/root-project/root/pull/8024:27,integrability,depend,dependency,27,"[cmake] add TBB as builtin dependency for Thread library 6.24; Once TBB used inside thread, one should provide that dependency",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8024
https://github.com/root-project/root/pull/8024:116,integrability,depend,dependency,116,"[cmake] add TBB as builtin dependency for Thread library 6.24; Once TBB used inside thread, one should provide that dependency",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8024
https://github.com/root-project/root/pull/8024:27,modifiability,depend,dependency,27,"[cmake] add TBB as builtin dependency for Thread library 6.24; Once TBB used inside thread, one should provide that dependency",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8024
https://github.com/root-project/root/pull/8024:116,modifiability,depend,dependency,116,"[cmake] add TBB as builtin dependency for Thread library 6.24; Once TBB used inside thread, one should provide that dependency",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8024
https://github.com/root-project/root/pull/8024:27,safety,depend,dependency,27,"[cmake] add TBB as builtin dependency for Thread library 6.24; Once TBB used inside thread, one should provide that dependency",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8024
https://github.com/root-project/root/pull/8024:116,safety,depend,dependency,116,"[cmake] add TBB as builtin dependency for Thread library 6.24; Once TBB used inside thread, one should provide that dependency",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8024
https://github.com/root-project/root/pull/8024:27,testability,depend,dependency,27,"[cmake] add TBB as builtin dependency for Thread library 6.24; Once TBB used inside thread, one should provide that dependency",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8024
https://github.com/root-project/root/pull/8024:116,testability,depend,dependency,116,"[cmake] add TBB as builtin dependency for Thread library 6.24; Once TBB used inside thread, one should provide that dependency",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8024
https://github.com/root-project/root/pull/8025:53,energy efficiency,current,current,53,"fix opening reference guide with .help Class; As the current path for the reference guide would be ""/doc/v624/..."", there needs to be an extra ""v"" in the constructed path for the reference document.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8025
https://github.com/root-project/root/pull/8025:22,usability,guid,guide,22,"fix opening reference guide with .help Class; As the current path for the reference guide would be ""/doc/v624/..."", there needs to be an extra ""v"" in the constructed path for the reference document.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8025
https://github.com/root-project/root/pull/8025:34,usability,help,help,34,"fix opening reference guide with .help Class; As the current path for the reference guide would be ""/doc/v624/..."", there needs to be an extra ""v"" in the constructed path for the reference document.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8025
https://github.com/root-project/root/pull/8025:84,usability,guid,guide,84,"fix opening reference guide with .help Class; As the current path for the reference guide would be ""/doc/v624/..."", there needs to be an extra ""v"" in the constructed path for the reference document.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8025
https://github.com/root-project/root/pull/8025:189,usability,document,document,189,"fix opening reference guide with .help Class; As the current path for the reference guide would be ""/doc/v624/..."", there needs to be an extra ""v"" in the constructed path for the reference document.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8025
https://github.com/root-project/root/issues/8027:767,availability,error,error,767,"Invalid Read in TTree::Fill after SetBranchAddress; ### Describe the bug. Then changing the Address of a Branch in TTree it seems to sometimes still use the old memory address after the call. As a minimal example here we create a TNamed, set it as branch but directly after delete it and set the branch address to `nullptr` before filling:. ```c++. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main() {. auto* tf = TFile::Open(""test.root"", ""RECREATE"");. auto* t = new TTree(""tree"", ""tree"");. TNamed *f = new TNamed(""foo"", ""bar"");. auto* b = t->Branch(""FileMetaData"", &f);. . delete f;. f = nullptr;. b->SetAddress(nullptr);. t->Fill();. t->Write();. tf->Close();. return 0;. }. ```. When running this with address sanitizer it gives the following error with 6.24:. ```. g++ -g `root-config --cflags --libs` -fsanitize=address -o mwe mwe.C && ./mwe . =================================================================. ==934566==ERROR: AddressSanitizer: heap-use-after-free on address 0x606000112a68 at pc 0x7fcd23e920f0 bp 0x7ffcc8579ab0 sp 0x7ffcc8579aa8. READ of size 4 at 0x606000112a68 thread T0. #0 0x7fcd23e920ef in int TStreamerInfoActions::WriteBasicType<unsigned int>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*) root/io/io/src/TStreamerInfoActions.cxx:252. #1 0x7fcd239c8950 in TStreamerInfoActions::TConfiguredAction::operator()(TBuffer&, void*) const root/io/io/inc/TStreamerInfoActions.h:123. #2 0x7fcd239c8950 in TBufferFile::ApplySequence(TStreamerInfoActions::TActionSequence const&, void*) root/io/io/src/TBufferFile.cxx:3572. #3 0x7fcd21fdd5dc in TBranch::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranch.cxx:891. #4 0x7fcd22016bfa in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1265. #5 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1290. #6 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:947,availability,ERROR,ERROR,947,"Invalid Read in TTree::Fill after SetBranchAddress; ### Describe the bug. Then changing the Address of a Branch in TTree it seems to sometimes still use the old memory address after the call. As a minimal example here we create a TNamed, set it as branch but directly after delete it and set the branch address to `nullptr` before filling:. ```c++. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main() {. auto* tf = TFile::Open(""test.root"", ""RECREATE"");. auto* t = new TTree(""tree"", ""tree"");. TNamed *f = new TNamed(""foo"", ""bar"");. auto* b = t->Branch(""FileMetaData"", &f);. . delete f;. f = nullptr;. b->SetAddress(nullptr);. t->Fill();. t->Write();. tf->Close();. return 0;. }. ```. When running this with address sanitizer it gives the following error with 6.24:. ```. g++ -g `root-config --cflags --libs` -fsanitize=address -o mwe mwe.C && ./mwe . =================================================================. ==934566==ERROR: AddressSanitizer: heap-use-after-free on address 0x606000112a68 at pc 0x7fcd23e920f0 bp 0x7ffcc8579ab0 sp 0x7ffcc8579aa8. READ of size 4 at 0x606000112a68 thread T0. #0 0x7fcd23e920ef in int TStreamerInfoActions::WriteBasicType<unsigned int>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*) root/io/io/src/TStreamerInfoActions.cxx:252. #1 0x7fcd239c8950 in TStreamerInfoActions::TConfiguredAction::operator()(TBuffer&, void*) const root/io/io/inc/TStreamerInfoActions.h:123. #2 0x7fcd239c8950 in TBufferFile::ApplySequence(TStreamerInfoActions::TActionSequence const&, void*) root/io/io/src/TBufferFile.cxx:3572. #3 0x7fcd21fdd5dc in TBranch::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranch.cxx:891. #4 0x7fcd22016bfa in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1265. #5 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1290. #6 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:1365,availability,operat,operator,1365,"#include <TFile.h>. #include <iostream>. int main() {. auto* tf = TFile::Open(""test.root"", ""RECREATE"");. auto* t = new TTree(""tree"", ""tree"");. TNamed *f = new TNamed(""foo"", ""bar"");. auto* b = t->Branch(""FileMetaData"", &f);. . delete f;. f = nullptr;. b->SetAddress(nullptr);. t->Fill();. t->Write();. tf->Close();. return 0;. }. ```. When running this with address sanitizer it gives the following error with 6.24:. ```. g++ -g `root-config --cflags --libs` -fsanitize=address -o mwe mwe.C && ./mwe . =================================================================. ==934566==ERROR: AddressSanitizer: heap-use-after-free on address 0x606000112a68 at pc 0x7fcd23e920f0 bp 0x7ffcc8579ab0 sp 0x7ffcc8579aa8. READ of size 4 at 0x606000112a68 thread T0. #0 0x7fcd23e920ef in int TStreamerInfoActions::WriteBasicType<unsigned int>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*) root/io/io/src/TStreamerInfoActions.cxx:252. #1 0x7fcd239c8950 in TStreamerInfoActions::TConfiguredAction::operator()(TBuffer&, void*) const root/io/io/inc/TStreamerInfoActions.h:123. #2 0x7fcd239c8950 in TBufferFile::ApplySequence(TStreamerInfoActions::TActionSequence const&, void*) root/io/io/src/TBufferFile.cxx:3572. #3 0x7fcd21fdd5dc in TBranch::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranch.cxx:891. #4 0x7fcd22016bfa in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1265. #5 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1290. #6 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1290. #7 0x7fcd221d81a7 in TTree::Fill() root/tree/tree/src/TTree.cxx:4586. #8 0x4025f7 in main mwe.C:17. #9 0x7fcd1f9b3bf6 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21bf6). #10 0x402239 in _start (mwe+0x402239). 0x606000112a68 is located 8 bytes inside of 64-byte region [0x606000112a60,0x606000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:2425,availability,operat,operator,2425,"tions.h:123. #2 0x7fcd239c8950 in TBufferFile::ApplySequence(TStreamerInfoActions::TActionSequence const&, void*) root/io/io/src/TBufferFile.cxx:3572. #3 0x7fcd21fdd5dc in TBranch::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranch.cxx:891. #4 0x7fcd22016bfa in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1265. #5 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1290. #6 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1290. #7 0x7fcd221d81a7 in TTree::Fill() root/tree/tree/src/TTree.cxx:4586. #8 0x4025f7 in main mwe.C:17. #9 0x7fcd1f9b3bf6 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21bf6). #10 0x402239 in _start (mwe+0x402239). 0x606000112a68 is located 8 bytes inside of 64-byte region [0x606000112a60,0x606000112aa0). freed by thread T0 here:. #0 0x7fcd250835c7 in operator delete(void*) ([...]/lib/libasan.so.6+0xae5c7). #1 0x402501 in main mwe.C:13. #2 0x7fcd1f9b3bf6 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21bf6). previously allocated by thread T0 here:. #0 0x7fcd25082bf7 in operator new(unsigned long) ([...]/lib/libasan.so.6+0xadbf7). #1 0x7fcd247f9b81 in TStorage::ObjectAlloc(unsigned long) root/core/base/src/TStorage.cxx:330. #2 0x402948 in TObject::operator new(unsigned long) [...]/root/include/TObject.h:167. #3 0x40241e in main mwe.C:10. #4 0x7fcd1f9b3bf6 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21bf6). SUMMARY: AddressSanitizer: heap-use-after-free root/io/io/src/TStreamerInfoActions.cxx:252 in int TStreamerInfoActions::WriteBasicType<unsigned int>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*). Shadow bytes around the buggy address:. 0x0c0c8001a4f0: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a500: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a510: fd fd fd fd fd fd fd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:2656,availability,operat,operator,2656,"ree/tree/src/TBranch.cxx:891. #4 0x7fcd22016bfa in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1265. #5 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1290. #6 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1290. #7 0x7fcd221d81a7 in TTree::Fill() root/tree/tree/src/TTree.cxx:4586. #8 0x4025f7 in main mwe.C:17. #9 0x7fcd1f9b3bf6 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21bf6). #10 0x402239 in _start (mwe+0x402239). 0x606000112a68 is located 8 bytes inside of 64-byte region [0x606000112a60,0x606000112aa0). freed by thread T0 here:. #0 0x7fcd250835c7 in operator delete(void*) ([...]/lib/libasan.so.6+0xae5c7). #1 0x402501 in main mwe.C:13. #2 0x7fcd1f9b3bf6 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21bf6). previously allocated by thread T0 here:. #0 0x7fcd25082bf7 in operator new(unsigned long) ([...]/lib/libasan.so.6+0xadbf7). #1 0x7fcd247f9b81 in TStorage::ObjectAlloc(unsigned long) root/core/base/src/TStorage.cxx:330. #2 0x402948 in TObject::operator new(unsigned long) [...]/root/include/TObject.h:167. #3 0x40241e in main mwe.C:10. #4 0x7fcd1f9b3bf6 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21bf6). SUMMARY: AddressSanitizer: heap-use-after-free root/io/io/src/TStreamerInfoActions.cxx:252 in int TStreamerInfoActions::WriteBasicType<unsigned int>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*). Shadow bytes around the buggy address:. 0x0c0c8001a4f0: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a500: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a510: fd fd fd fd fd fd fd fd fa fa fa fa fd fd fd fd. 0x0c0c8001a520: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fa. 0x0c0c8001a530: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa. =>0x0c0c8001a540: fd fd fd fd fd fd fd fa fa fa fa fa fd[fd]fd fd. 0x0c0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:2837,availability,operat,operator,2837,"chElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1290. #6 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1290. #7 0x7fcd221d81a7 in TTree::Fill() root/tree/tree/src/TTree.cxx:4586. #8 0x4025f7 in main mwe.C:17. #9 0x7fcd1f9b3bf6 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21bf6). #10 0x402239 in _start (mwe+0x402239). 0x606000112a68 is located 8 bytes inside of 64-byte region [0x606000112a60,0x606000112aa0). freed by thread T0 here:. #0 0x7fcd250835c7 in operator delete(void*) ([...]/lib/libasan.so.6+0xae5c7). #1 0x402501 in main mwe.C:13. #2 0x7fcd1f9b3bf6 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21bf6). previously allocated by thread T0 here:. #0 0x7fcd25082bf7 in operator new(unsigned long) ([...]/lib/libasan.so.6+0xadbf7). #1 0x7fcd247f9b81 in TStorage::ObjectAlloc(unsigned long) root/core/base/src/TStorage.cxx:330. #2 0x402948 in TObject::operator new(unsigned long) [...]/root/include/TObject.h:167. #3 0x40241e in main mwe.C:10. #4 0x7fcd1f9b3bf6 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21bf6). SUMMARY: AddressSanitizer: heap-use-after-free root/io/io/src/TStreamerInfoActions.cxx:252 in int TStreamerInfoActions::WriteBasicType<unsigned int>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*). Shadow bytes around the buggy address:. 0x0c0c8001a4f0: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a500: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a510: fd fd fd fd fd fd fd fd fa fa fa fa fd fd fd fd. 0x0c0c8001a520: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fa. 0x0c0c8001a530: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa. =>0x0c0c8001a540: fd fd fd fd fd fd fd fa fa fa fa fa fd[fd]fd fd. 0x0c0c8001a550: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a560: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a570: fd fd fd fd fd fd fd fd fa fa fa fa 00 0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:4159,deployability,Stack,Stack,4159,"uffer&, void*, TStreamerInfoActions::TConfiguration const*). Shadow bytes around the buggy address:. 0x0c0c8001a4f0: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a500: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a510: fd fd fd fd fd fd fd fd fa fa fa fa fd fd fd fd. 0x0c0c8001a520: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fa. 0x0c0c8001a530: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa. =>0x0c0c8001a540: fd fd fd fd fd fd fd fa fa fa fa fa fd[fd]fd fd. 0x0c0c8001a550: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a560: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a570: fd fd fd fd fd fd fd fd fa fa fa fa 00 00 00 00. 0x0c0c8001a580: 00 00 00 00 fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a590: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07 . Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==934566==ABORTING. ```. ### Expected behavior. Expected behavior is for ROOT to realize the branch address has been changed to nullptr and create an internal buffer, not read from the freed memory area. Interestingly it doesn't seem to have a problem without calling `SetAddress` as it then realizes it points to nullptr and will create a new object and modify `f`. ### To Reproduce. Run the above with ROOT compiled with `-Dasan=ON`. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04. ### Additional context. We didn't see this with ROOT 6.20 but I also did not specifically test it with address sanitizer so it might have been there already and just not c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:4183,deployability,Stack,Stack,4183,"InfoActions::TConfiguration const*). Shadow bytes around the buggy address:. 0x0c0c8001a4f0: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a500: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a510: fd fd fd fd fd fd fd fd fa fa fa fa fd fd fd fd. 0x0c0c8001a520: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fa. 0x0c0c8001a530: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa. =>0x0c0c8001a540: fd fd fd fd fd fd fd fa fa fa fa fa fd[fd]fd fd. 0x0c0c8001a550: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a560: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a570: fd fd fd fd fd fd fd fd fa fa fa fa 00 00 00 00. 0x0c0c8001a580: 00 00 00 00 fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a590: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07 . Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==934566==ABORTING. ```. ### Expected behavior. Expected behavior is for ROOT to realize the branch address has been changed to nullptr and create an internal buffer, not read from the freed memory area. Interestingly it doesn't seem to have a problem without calling `SetAddress` as it then realizes it points to nullptr and will create a new object and modify `f`. ### To Reproduce. Run the above with ROOT compiled with `-Dasan=ON`. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04. ### Additional context. We didn't see this with ROOT 6.20 but I also did not specifically test it with address sanitizer so it might have been there already and just not cause any problems. <!--.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:4206,deployability,Stack,Stack,4206,"tion const*). Shadow bytes around the buggy address:. 0x0c0c8001a4f0: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a500: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a510: fd fd fd fd fd fd fd fd fa fa fa fa fd fd fd fd. 0x0c0c8001a520: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fa. 0x0c0c8001a530: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa. =>0x0c0c8001a540: fd fd fd fd fd fd fd fa fa fa fa fa fd[fd]fd fd. 0x0c0c8001a550: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a560: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a570: fd fd fd fd fd fd fd fd fa fa fa fa 00 00 00 00. 0x0c0c8001a580: 00 00 00 00 fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a590: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07 . Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==934566==ABORTING. ```. ### Expected behavior. Expected behavior is for ROOT to realize the branch address has been changed to nullptr and create an internal buffer, not read from the freed memory area. Interestingly it doesn't seem to have a problem without calling `SetAddress` as it then realizes it points to nullptr and will create a new object and modify `f`. ### To Reproduce. Run the above with ROOT compiled with `-Dasan=ON`. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04. ### Additional context. We didn't see this with ROOT 6.20 but I also did not specifically test it with address sanitizer so it might have been there already and just not cause any problems. <!--. Add any other context ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:4231,deployability,Stack,Stack,4231,"s around the buggy address:. 0x0c0c8001a4f0: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a500: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a510: fd fd fd fd fd fd fd fd fa fa fa fa fd fd fd fd. 0x0c0c8001a520: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fa. 0x0c0c8001a530: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa. =>0x0c0c8001a540: fd fd fd fd fd fd fd fa fa fa fa fa fd[fd]fd fd. 0x0c0c8001a550: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a560: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a570: fd fd fd fd fd fd fd fd fa fa fa fa 00 00 00 00. 0x0c0c8001a580: 00 00 00 00 fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a590: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07 . Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==934566==ABORTING. ```. ### Expected behavior. Expected behavior is for ROOT to realize the branch address has been changed to nullptr and create an internal buffer, not read from the freed memory area. Interestingly it doesn't seem to have a problem without calling `SetAddress` as it then realizes it points to nullptr and will create a new object and modify `f`. ### To Reproduce. Run the above with ROOT compiled with `-Dasan=ON`. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04. ### Additional context. We didn't see this with ROOT 6.20 but I also did not specifically test it with address sanitizer so it might have been there already and just not cause any problems. <!--. Add any other context about the problem here. -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:4255,deployability,Stack,Stack,4255,"round the buggy address:. 0x0c0c8001a4f0: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a500: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a510: fd fd fd fd fd fd fd fd fa fa fa fa fd fd fd fd. 0x0c0c8001a520: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fa. 0x0c0c8001a530: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa. =>0x0c0c8001a540: fd fd fd fd fd fd fd fa fa fa fa fa fd[fd]fd fd. 0x0c0c8001a550: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a560: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a570: fd fd fd fd fd fd fd fd fa fa fa fa 00 00 00 00. 0x0c0c8001a580: 00 00 00 00 fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a590: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07 . Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==934566==ABORTING. ```. ### Expected behavior. Expected behavior is for ROOT to realize the branch address has been changed to nullptr and create an internal buffer, not read from the freed memory area. Interestingly it doesn't seem to have a problem without calling `SetAddress` as it then realizes it points to nullptr and will create a new object and modify `f`. ### To Reproduce. Run the above with ROOT compiled with `-Dasan=ON`. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04. ### Additional context. We didn't see this with ROOT 6.20 but I also did not specifically test it with address sanitizer so it might have been there already and just not cause any problems. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:4347,deployability,Contain,Container,4347,"round the buggy address:. 0x0c0c8001a4f0: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a500: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a510: fd fd fd fd fd fd fd fd fa fa fa fa fd fd fd fd. 0x0c0c8001a520: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fa. 0x0c0c8001a530: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa. =>0x0c0c8001a540: fd fd fd fd fd fd fd fa fa fa fa fa fd[fd]fd fd. 0x0c0c8001a550: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a560: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a570: fd fd fd fd fd fd fd fd fa fa fa fa 00 00 00 00. 0x0c0c8001a580: 00 00 00 00 fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a590: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07 . Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==934566==ABORTING. ```. ### Expected behavior. Expected behavior is for ROOT to realize the branch address has been changed to nullptr and create an internal buffer, not read from the freed memory area. Interestingly it doesn't seem to have a problem without calling `SetAddress` as it then realizes it points to nullptr and will create a new object and modify `f`. ### To Reproduce. Run the above with ROOT compiled with `-Dasan=ON`. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04. ### Additional context. We didn't see this with ROOT 6.20 but I also did not specifically test it with address sanitizer so it might have been there already and just not cause any problems. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:2605,energy efficiency,alloc,allocated,2605,"FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranch.cxx:891. #4 0x7fcd22016bfa in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1265. #5 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1290. #6 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1290. #7 0x7fcd221d81a7 in TTree::Fill() root/tree/tree/src/TTree.cxx:4586. #8 0x4025f7 in main mwe.C:17. #9 0x7fcd1f9b3bf6 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21bf6). #10 0x402239 in _start (mwe+0x402239). 0x606000112a68 is located 8 bytes inside of 64-byte region [0x606000112a60,0x606000112aa0). freed by thread T0 here:. #0 0x7fcd250835c7 in operator delete(void*) ([...]/lib/libasan.so.6+0xae5c7). #1 0x402501 in main mwe.C:13. #2 0x7fcd1f9b3bf6 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21bf6). previously allocated by thread T0 here:. #0 0x7fcd25082bf7 in operator new(unsigned long) ([...]/lib/libasan.so.6+0xadbf7). #1 0x7fcd247f9b81 in TStorage::ObjectAlloc(unsigned long) root/core/base/src/TStorage.cxx:330. #2 0x402948 in TObject::operator new(unsigned long) [...]/root/include/TObject.h:167. #3 0x40241e in main mwe.C:10. #4 0x7fcd1f9b3bf6 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21bf6). SUMMARY: AddressSanitizer: heap-use-after-free root/io/io/src/TStreamerInfoActions.cxx:252 in int TStreamerInfoActions::WriteBasicType<unsigned int>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*). Shadow bytes around the buggy address:. 0x0c0c8001a4f0: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a500: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a510: fd fd fd fd fd fd fd fd fa fa fa fa fd fd fd fd. 0x0c0c8001a520: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fa. 0x0c0c8001a530: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa. =>0x0c0c8001a540: fd f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:2781,energy efficiency,core,core,2781,"ee/src/TBranchElement.cxx:1265. #5 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1290. #6 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1290. #7 0x7fcd221d81a7 in TTree::Fill() root/tree/tree/src/TTree.cxx:4586. #8 0x4025f7 in main mwe.C:17. #9 0x7fcd1f9b3bf6 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21bf6). #10 0x402239 in _start (mwe+0x402239). 0x606000112a68 is located 8 bytes inside of 64-byte region [0x606000112a60,0x606000112aa0). freed by thread T0 here:. #0 0x7fcd250835c7 in operator delete(void*) ([...]/lib/libasan.so.6+0xae5c7). #1 0x402501 in main mwe.C:13. #2 0x7fcd1f9b3bf6 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21bf6). previously allocated by thread T0 here:. #0 0x7fcd25082bf7 in operator new(unsigned long) ([...]/lib/libasan.so.6+0xadbf7). #1 0x7fcd247f9b81 in TStorage::ObjectAlloc(unsigned long) root/core/base/src/TStorage.cxx:330. #2 0x402948 in TObject::operator new(unsigned long) [...]/root/include/TObject.h:167. #3 0x40241e in main mwe.C:10. #4 0x7fcd1f9b3bf6 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21bf6). SUMMARY: AddressSanitizer: heap-use-after-free root/io/io/src/TStreamerInfoActions.cxx:252 in int TStreamerInfoActions::WriteBasicType<unsigned int>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*). Shadow bytes around the buggy address:. 0x0c0c8001a4f0: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a500: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a510: fd fd fd fd fd fd fd fd fa fa fa fa fd fd fd fd. 0x0c0c8001a520: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fa. 0x0c0c8001a530: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa. =>0x0c0c8001a540: fd fd fd fd fd fd fd fa fa fa fa fa fd[fd]fd fd. 0x0c0c8001a550: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a560: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:4439,energy efficiency,alloc,alloca,4439,"round the buggy address:. 0x0c0c8001a4f0: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a500: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a510: fd fd fd fd fd fd fd fd fa fa fa fa fd fd fd fd. 0x0c0c8001a520: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fa. 0x0c0c8001a530: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa. =>0x0c0c8001a540: fd fd fd fd fd fd fd fa fa fa fa fa fd[fd]fd fd. 0x0c0c8001a550: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a560: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a570: fd fd fd fd fd fd fd fd fa fa fa fa 00 00 00 00. 0x0c0c8001a580: 00 00 00 00 fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a590: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07 . Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==934566==ABORTING. ```. ### Expected behavior. Expected behavior is for ROOT to realize the branch address has been changed to nullptr and create an internal buffer, not read from the freed memory area. Interestingly it doesn't seem to have a problem without calling `SetAddress` as it then realizes it points to nullptr and will create a new object and modify `f`. ### To Reproduce. Run the above with ROOT compiled with `-Dasan=ON`. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04. ### Additional context. We didn't see this with ROOT 6.20 but I also did not specifically test it with address sanitizer so it might have been there already and just not cause any problems. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:4465,energy efficiency,alloc,alloca,4465,"round the buggy address:. 0x0c0c8001a4f0: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a500: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a510: fd fd fd fd fd fd fd fd fa fa fa fa fd fd fd fd. 0x0c0c8001a520: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fa. 0x0c0c8001a530: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa. =>0x0c0c8001a540: fd fd fd fd fd fd fd fa fa fa fa fa fd[fd]fd fd. 0x0c0c8001a550: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a560: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a570: fd fd fd fd fd fd fd fd fa fa fa fa 00 00 00 00. 0x0c0c8001a580: 00 00 00 00 fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a590: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07 . Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==934566==ABORTING. ```. ### Expected behavior. Expected behavior is for ROOT to realize the branch address has been changed to nullptr and create an internal buffer, not read from the freed memory area. Interestingly it doesn't seem to have a problem without calling `SetAddress` as it then realizes it points to nullptr and will create a new object and modify `f`. ### To Reproduce. Run the above with ROOT compiled with `-Dasan=ON`. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04. ### Additional context. We didn't see this with ROOT 6.20 but I also did not specifically test it with address sanitizer so it might have been there already and just not cause any problems. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:4660,integrability,buffer,buffer,4660,"round the buggy address:. 0x0c0c8001a4f0: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a500: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a510: fd fd fd fd fd fd fd fd fa fa fa fa fd fd fd fd. 0x0c0c8001a520: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fa. 0x0c0c8001a530: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa. =>0x0c0c8001a540: fd fd fd fd fd fd fd fa fa fa fa fa fd[fd]fd fd. 0x0c0c8001a550: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a560: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a570: fd fd fd fd fd fd fd fd fa fa fa fa 00 00 00 00. 0x0c0c8001a580: 00 00 00 00 fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a590: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07 . Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==934566==ABORTING. ```. ### Expected behavior. Expected behavior is for ROOT to realize the branch address has been changed to nullptr and create an internal buffer, not read from the freed memory area. Interestingly it doesn't seem to have a problem without calling `SetAddress` as it then realizes it points to nullptr and will create a new object and modify `f`. ### To Reproduce. Run the above with ROOT compiled with `-Dasan=ON`. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04. ### Additional context. We didn't see this with ROOT 6.20 but I also did not specifically test it with address sanitizer so it might have been there already and just not cause any problems. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:5068,interoperability,specif,specifically,5068,"round the buggy address:. 0x0c0c8001a4f0: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a500: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a510: fd fd fd fd fd fd fd fd fa fa fa fa fd fd fd fd. 0x0c0c8001a520: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fa. 0x0c0c8001a530: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa. =>0x0c0c8001a540: fd fd fd fd fd fd fd fa fa fa fa fa fd[fd]fd fd. 0x0c0c8001a550: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a560: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a570: fd fd fd fd fd fd fd fd fa fa fa fa 00 00 00 00. 0x0c0c8001a580: 00 00 00 00 fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a590: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07 . Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==934566==ABORTING. ```. ### Expected behavior. Expected behavior is for ROOT to realize the branch address has been changed to nullptr and create an internal buffer, not read from the freed memory area. Interestingly it doesn't seem to have a problem without calling `SetAddress` as it then realizes it points to nullptr and will create a new object and modify `f`. ### To Reproduce. Run the above with ROOT compiled with `-Dasan=ON`. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04. ### Additional context. We didn't see this with ROOT 6.20 but I also did not specifically test it with address sanitizer so it might have been there already and just not cause any problems. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:161,performance,memor,memory,161,"Invalid Read in TTree::Fill after SetBranchAddress; ### Describe the bug. Then changing the Address of a Branch in TTree it seems to sometimes still use the old memory address after the call. As a minimal example here we create a TNamed, set it as branch but directly after delete it and set the branch address to `nullptr` before filling:. ```c++. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main() {. auto* tf = TFile::Open(""test.root"", ""RECREATE"");. auto* t = new TTree(""tree"", ""tree"");. TNamed *f = new TNamed(""foo"", ""bar"");. auto* b = t->Branch(""FileMetaData"", &f);. . delete f;. f = nullptr;. b->SetAddress(nullptr);. t->Fill();. t->Write();. tf->Close();. return 0;. }. ```. When running this with address sanitizer it gives the following error with 6.24:. ```. g++ -g `root-config --cflags --libs` -fsanitize=address -o mwe mwe.C && ./mwe . =================================================================. ==934566==ERROR: AddressSanitizer: heap-use-after-free on address 0x606000112a68 at pc 0x7fcd23e920f0 bp 0x7ffcc8579ab0 sp 0x7ffcc8579aa8. READ of size 4 at 0x606000112a68 thread T0. #0 0x7fcd23e920ef in int TStreamerInfoActions::WriteBasicType<unsigned int>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*) root/io/io/src/TStreamerInfoActions.cxx:252. #1 0x7fcd239c8950 in TStreamerInfoActions::TConfiguredAction::operator()(TBuffer&, void*) const root/io/io/inc/TStreamerInfoActions.h:123. #2 0x7fcd239c8950 in TBufferFile::ApplySequence(TStreamerInfoActions::TActionSequence const&, void*) root/io/io/src/TBufferFile.cxx:3572. #3 0x7fcd21fdd5dc in TBranch::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranch.cxx:891. #4 0x7fcd22016bfa in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1265. #5 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1290. #6 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:767,performance,error,error,767,"Invalid Read in TTree::Fill after SetBranchAddress; ### Describe the bug. Then changing the Address of a Branch in TTree it seems to sometimes still use the old memory address after the call. As a minimal example here we create a TNamed, set it as branch but directly after delete it and set the branch address to `nullptr` before filling:. ```c++. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main() {. auto* tf = TFile::Open(""test.root"", ""RECREATE"");. auto* t = new TTree(""tree"", ""tree"");. TNamed *f = new TNamed(""foo"", ""bar"");. auto* b = t->Branch(""FileMetaData"", &f);. . delete f;. f = nullptr;. b->SetAddress(nullptr);. t->Fill();. t->Write();. tf->Close();. return 0;. }. ```. When running this with address sanitizer it gives the following error with 6.24:. ```. g++ -g `root-config --cflags --libs` -fsanitize=address -o mwe mwe.C && ./mwe . =================================================================. ==934566==ERROR: AddressSanitizer: heap-use-after-free on address 0x606000112a68 at pc 0x7fcd23e920f0 bp 0x7ffcc8579ab0 sp 0x7ffcc8579aa8. READ of size 4 at 0x606000112a68 thread T0. #0 0x7fcd23e920ef in int TStreamerInfoActions::WriteBasicType<unsigned int>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*) root/io/io/src/TStreamerInfoActions.cxx:252. #1 0x7fcd239c8950 in TStreamerInfoActions::TConfiguredAction::operator()(TBuffer&, void*) const root/io/io/inc/TStreamerInfoActions.h:123. #2 0x7fcd239c8950 in TBufferFile::ApplySequence(TStreamerInfoActions::TActionSequence const&, void*) root/io/io/src/TBufferFile.cxx:3572. #3 0x7fcd21fdd5dc in TBranch::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranch.cxx:891. #4 0x7fcd22016bfa in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1265. #5 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1290. #6 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:947,performance,ERROR,ERROR,947,"Invalid Read in TTree::Fill after SetBranchAddress; ### Describe the bug. Then changing the Address of a Branch in TTree it seems to sometimes still use the old memory address after the call. As a minimal example here we create a TNamed, set it as branch but directly after delete it and set the branch address to `nullptr` before filling:. ```c++. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main() {. auto* tf = TFile::Open(""test.root"", ""RECREATE"");. auto* t = new TTree(""tree"", ""tree"");. TNamed *f = new TNamed(""foo"", ""bar"");. auto* b = t->Branch(""FileMetaData"", &f);. . delete f;. f = nullptr;. b->SetAddress(nullptr);. t->Fill();. t->Write();. tf->Close();. return 0;. }. ```. When running this with address sanitizer it gives the following error with 6.24:. ```. g++ -g `root-config --cflags --libs` -fsanitize=address -o mwe mwe.C && ./mwe . =================================================================. ==934566==ERROR: AddressSanitizer: heap-use-after-free on address 0x606000112a68 at pc 0x7fcd23e920f0 bp 0x7ffcc8579ab0 sp 0x7ffcc8579aa8. READ of size 4 at 0x606000112a68 thread T0. #0 0x7fcd23e920ef in int TStreamerInfoActions::WriteBasicType<unsigned int>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*) root/io/io/src/TStreamerInfoActions.cxx:252. #1 0x7fcd239c8950 in TStreamerInfoActions::TConfiguredAction::operator()(TBuffer&, void*) const root/io/io/inc/TStreamerInfoActions.h:123. #2 0x7fcd239c8950 in TBufferFile::ApplySequence(TStreamerInfoActions::TActionSequence const&, void*) root/io/io/src/TBufferFile.cxx:3572. #3 0x7fcd21fdd5dc in TBranch::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranch.cxx:891. #4 0x7fcd22016bfa in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1265. #5 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1290. #6 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:4692,performance,memor,memory,4692,"round the buggy address:. 0x0c0c8001a4f0: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a500: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a510: fd fd fd fd fd fd fd fd fa fa fa fa fd fd fd fd. 0x0c0c8001a520: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fa. 0x0c0c8001a530: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa. =>0x0c0c8001a540: fd fd fd fd fd fd fd fa fa fa fa fa fd[fd]fd fd. 0x0c0c8001a550: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a560: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a570: fd fd fd fd fd fd fd fd fa fa fa fa 00 00 00 00. 0x0c0c8001a580: 00 00 00 00 fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a590: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07 . Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==934566==ABORTING. ```. ### Expected behavior. Expected behavior is for ROOT to realize the branch address has been changed to nullptr and create an internal buffer, not read from the freed memory area. Interestingly it doesn't seem to have a problem without calling `SetAddress` as it then realizes it points to nullptr and will create a new object and modify `f`. ### To Reproduce. Run the above with ROOT compiled with `-Dasan=ON`. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04. ### Additional context. We didn't see this with ROOT 6.20 but I also did not specifically test it with address sanitizer so it might have been there already and just not cause any problems. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:4722,reliability,doe,doesn,4722,"round the buggy address:. 0x0c0c8001a4f0: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a500: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a510: fd fd fd fd fd fd fd fd fa fa fa fa fd fd fd fd. 0x0c0c8001a520: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fa. 0x0c0c8001a530: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa. =>0x0c0c8001a540: fd fd fd fd fd fd fd fa fa fa fa fa fd[fd]fd fd. 0x0c0c8001a550: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a560: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a570: fd fd fd fd fd fd fd fd fa fa fa fa 00 00 00 00. 0x0c0c8001a580: 00 00 00 00 fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a590: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07 . Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==934566==ABORTING. ```. ### Expected behavior. Expected behavior is for ROOT to realize the branch address has been changed to nullptr and create an internal buffer, not read from the freed memory area. Interestingly it doesn't seem to have a problem without calling `SetAddress` as it then realizes it points to nullptr and will create a new object and modify `f`. ### To Reproduce. Run the above with ROOT compiled with `-Dasan=ON`. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04. ### Additional context. We didn't see this with ROOT 6.20 but I also did not specifically test it with address sanitizer so it might have been there already and just not cause any problems. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:448,safety,test,test,448,"Invalid Read in TTree::Fill after SetBranchAddress; ### Describe the bug. Then changing the Address of a Branch in TTree it seems to sometimes still use the old memory address after the call. As a minimal example here we create a TNamed, set it as branch but directly after delete it and set the branch address to `nullptr` before filling:. ```c++. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main() {. auto* tf = TFile::Open(""test.root"", ""RECREATE"");. auto* t = new TTree(""tree"", ""tree"");. TNamed *f = new TNamed(""foo"", ""bar"");. auto* b = t->Branch(""FileMetaData"", &f);. . delete f;. f = nullptr;. b->SetAddress(nullptr);. t->Fill();. t->Write();. tf->Close();. return 0;. }. ```. When running this with address sanitizer it gives the following error with 6.24:. ```. g++ -g `root-config --cflags --libs` -fsanitize=address -o mwe mwe.C && ./mwe . =================================================================. ==934566==ERROR: AddressSanitizer: heap-use-after-free on address 0x606000112a68 at pc 0x7fcd23e920f0 bp 0x7ffcc8579ab0 sp 0x7ffcc8579aa8. READ of size 4 at 0x606000112a68 thread T0. #0 0x7fcd23e920ef in int TStreamerInfoActions::WriteBasicType<unsigned int>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*) root/io/io/src/TStreamerInfoActions.cxx:252. #1 0x7fcd239c8950 in TStreamerInfoActions::TConfiguredAction::operator()(TBuffer&, void*) const root/io/io/inc/TStreamerInfoActions.h:123. #2 0x7fcd239c8950 in TBufferFile::ApplySequence(TStreamerInfoActions::TActionSequence const&, void*) root/io/io/src/TBufferFile.cxx:3572. #3 0x7fcd21fdd5dc in TBranch::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranch.cxx:891. #4 0x7fcd22016bfa in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1265. #5 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1290. #6 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:734,safety,sanit,sanitizer,734,"Invalid Read in TTree::Fill after SetBranchAddress; ### Describe the bug. Then changing the Address of a Branch in TTree it seems to sometimes still use the old memory address after the call. As a minimal example here we create a TNamed, set it as branch but directly after delete it and set the branch address to `nullptr` before filling:. ```c++. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main() {. auto* tf = TFile::Open(""test.root"", ""RECREATE"");. auto* t = new TTree(""tree"", ""tree"");. TNamed *f = new TNamed(""foo"", ""bar"");. auto* b = t->Branch(""FileMetaData"", &f);. . delete f;. f = nullptr;. b->SetAddress(nullptr);. t->Fill();. t->Write();. tf->Close();. return 0;. }. ```. When running this with address sanitizer it gives the following error with 6.24:. ```. g++ -g `root-config --cflags --libs` -fsanitize=address -o mwe mwe.C && ./mwe . =================================================================. ==934566==ERROR: AddressSanitizer: heap-use-after-free on address 0x606000112a68 at pc 0x7fcd23e920f0 bp 0x7ffcc8579ab0 sp 0x7ffcc8579aa8. READ of size 4 at 0x606000112a68 thread T0. #0 0x7fcd23e920ef in int TStreamerInfoActions::WriteBasicType<unsigned int>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*) root/io/io/src/TStreamerInfoActions.cxx:252. #1 0x7fcd239c8950 in TStreamerInfoActions::TConfiguredAction::operator()(TBuffer&, void*) const root/io/io/inc/TStreamerInfoActions.h:123. #2 0x7fcd239c8950 in TBufferFile::ApplySequence(TStreamerInfoActions::TActionSequence const&, void*) root/io/io/src/TBufferFile.cxx:3572. #3 0x7fcd21fdd5dc in TBranch::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranch.cxx:891. #4 0x7fcd22016bfa in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1265. #5 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1290. #6 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:767,safety,error,error,767,"Invalid Read in TTree::Fill after SetBranchAddress; ### Describe the bug. Then changing the Address of a Branch in TTree it seems to sometimes still use the old memory address after the call. As a minimal example here we create a TNamed, set it as branch but directly after delete it and set the branch address to `nullptr` before filling:. ```c++. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main() {. auto* tf = TFile::Open(""test.root"", ""RECREATE"");. auto* t = new TTree(""tree"", ""tree"");. TNamed *f = new TNamed(""foo"", ""bar"");. auto* b = t->Branch(""FileMetaData"", &f);. . delete f;. f = nullptr;. b->SetAddress(nullptr);. t->Fill();. t->Write();. tf->Close();. return 0;. }. ```. When running this with address sanitizer it gives the following error with 6.24:. ```. g++ -g `root-config --cflags --libs` -fsanitize=address -o mwe mwe.C && ./mwe . =================================================================. ==934566==ERROR: AddressSanitizer: heap-use-after-free on address 0x606000112a68 at pc 0x7fcd23e920f0 bp 0x7ffcc8579ab0 sp 0x7ffcc8579aa8. READ of size 4 at 0x606000112a68 thread T0. #0 0x7fcd23e920ef in int TStreamerInfoActions::WriteBasicType<unsigned int>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*) root/io/io/src/TStreamerInfoActions.cxx:252. #1 0x7fcd239c8950 in TStreamerInfoActions::TConfiguredAction::operator()(TBuffer&, void*) const root/io/io/inc/TStreamerInfoActions.h:123. #2 0x7fcd239c8950 in TBufferFile::ApplySequence(TStreamerInfoActions::TActionSequence const&, void*) root/io/io/src/TBufferFile.cxx:3572. #3 0x7fcd21fdd5dc in TBranch::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranch.cxx:891. #4 0x7fcd22016bfa in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1265. #5 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1290. #6 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:947,safety,ERROR,ERROR,947,"Invalid Read in TTree::Fill after SetBranchAddress; ### Describe the bug. Then changing the Address of a Branch in TTree it seems to sometimes still use the old memory address after the call. As a minimal example here we create a TNamed, set it as branch but directly after delete it and set the branch address to `nullptr` before filling:. ```c++. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main() {. auto* tf = TFile::Open(""test.root"", ""RECREATE"");. auto* t = new TTree(""tree"", ""tree"");. TNamed *f = new TNamed(""foo"", ""bar"");. auto* b = t->Branch(""FileMetaData"", &f);. . delete f;. f = nullptr;. b->SetAddress(nullptr);. t->Fill();. t->Write();. tf->Close();. return 0;. }. ```. When running this with address sanitizer it gives the following error with 6.24:. ```. g++ -g `root-config --cflags --libs` -fsanitize=address -o mwe mwe.C && ./mwe . =================================================================. ==934566==ERROR: AddressSanitizer: heap-use-after-free on address 0x606000112a68 at pc 0x7fcd23e920f0 bp 0x7ffcc8579ab0 sp 0x7ffcc8579aa8. READ of size 4 at 0x606000112a68 thread T0. #0 0x7fcd23e920ef in int TStreamerInfoActions::WriteBasicType<unsigned int>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*) root/io/io/src/TStreamerInfoActions.cxx:252. #1 0x7fcd239c8950 in TStreamerInfoActions::TConfiguredAction::operator()(TBuffer&, void*) const root/io/io/inc/TStreamerInfoActions.h:123. #2 0x7fcd239c8950 in TBufferFile::ApplySequence(TStreamerInfoActions::TActionSequence const&, void*) root/io/io/src/TBufferFile.cxx:3572. #3 0x7fcd21fdd5dc in TBranch::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranch.cxx:891. #4 0x7fcd22016bfa in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1265. #5 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1290. #6 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:5081,safety,test,test,5081,"round the buggy address:. 0x0c0c8001a4f0: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a500: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a510: fd fd fd fd fd fd fd fd fa fa fa fa fd fd fd fd. 0x0c0c8001a520: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fa. 0x0c0c8001a530: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa. =>0x0c0c8001a540: fd fd fd fd fd fd fd fa fa fa fa fa fd[fd]fd fd. 0x0c0c8001a550: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a560: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a570: fd fd fd fd fd fd fd fd fa fa fa fa 00 00 00 00. 0x0c0c8001a580: 00 00 00 00 fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a590: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07 . Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==934566==ABORTING. ```. ### Expected behavior. Expected behavior is for ROOT to realize the branch address has been changed to nullptr and create an internal buffer, not read from the freed memory area. Interestingly it doesn't seem to have a problem without calling `SetAddress` as it then realizes it points to nullptr and will create a new object and modify `f`. ### To Reproduce. Run the above with ROOT compiled with `-Dasan=ON`. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04. ### Additional context. We didn't see this with ROOT 6.20 but I also did not specifically test it with address sanitizer so it might have been there already and just not cause any problems. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:5102,safety,sanit,sanitizer,5102,"round the buggy address:. 0x0c0c8001a4f0: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a500: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a510: fd fd fd fd fd fd fd fd fa fa fa fa fd fd fd fd. 0x0c0c8001a520: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fa. 0x0c0c8001a530: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa. =>0x0c0c8001a540: fd fd fd fd fd fd fd fa fa fa fa fa fd[fd]fd fd. 0x0c0c8001a550: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a560: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a570: fd fd fd fd fd fd fd fd fa fa fa fa 00 00 00 00. 0x0c0c8001a580: 00 00 00 00 fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a590: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07 . Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==934566==ABORTING. ```. ### Expected behavior. Expected behavior is for ROOT to realize the branch address has been changed to nullptr and create an internal buffer, not read from the freed memory area. Interestingly it doesn't seem to have a problem without calling `SetAddress` as it then realizes it points to nullptr and will create a new object and modify `f`. ### To Reproduce. Run the above with ROOT compiled with `-Dasan=ON`. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04. ### Additional context. We didn't see this with ROOT 6.20 but I also did not specifically test it with address sanitizer so it might have been there already and just not cause any problems. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:734,security,sanit,sanitizer,734,"Invalid Read in TTree::Fill after SetBranchAddress; ### Describe the bug. Then changing the Address of a Branch in TTree it seems to sometimes still use the old memory address after the call. As a minimal example here we create a TNamed, set it as branch but directly after delete it and set the branch address to `nullptr` before filling:. ```c++. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main() {. auto* tf = TFile::Open(""test.root"", ""RECREATE"");. auto* t = new TTree(""tree"", ""tree"");. TNamed *f = new TNamed(""foo"", ""bar"");. auto* b = t->Branch(""FileMetaData"", &f);. . delete f;. f = nullptr;. b->SetAddress(nullptr);. t->Fill();. t->Write();. tf->Close();. return 0;. }. ```. When running this with address sanitizer it gives the following error with 6.24:. ```. g++ -g `root-config --cflags --libs` -fsanitize=address -o mwe mwe.C && ./mwe . =================================================================. ==934566==ERROR: AddressSanitizer: heap-use-after-free on address 0x606000112a68 at pc 0x7fcd23e920f0 bp 0x7ffcc8579ab0 sp 0x7ffcc8579aa8. READ of size 4 at 0x606000112a68 thread T0. #0 0x7fcd23e920ef in int TStreamerInfoActions::WriteBasicType<unsigned int>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*) root/io/io/src/TStreamerInfoActions.cxx:252. #1 0x7fcd239c8950 in TStreamerInfoActions::TConfiguredAction::operator()(TBuffer&, void*) const root/io/io/inc/TStreamerInfoActions.h:123. #2 0x7fcd239c8950 in TBufferFile::ApplySequence(TStreamerInfoActions::TActionSequence const&, void*) root/io/io/src/TBufferFile.cxx:3572. #3 0x7fcd21fdd5dc in TBranch::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranch.cxx:891. #4 0x7fcd22016bfa in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1265. #5 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1290. #6 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:4377,security,cookie,cookie,4377,"round the buggy address:. 0x0c0c8001a4f0: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a500: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a510: fd fd fd fd fd fd fd fd fa fa fa fa fd fd fd fd. 0x0c0c8001a520: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fa. 0x0c0c8001a530: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa. =>0x0c0c8001a540: fd fd fd fd fd fd fd fa fa fa fa fa fd[fd]fd fd. 0x0c0c8001a550: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a560: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a570: fd fd fd fd fd fd fd fd fa fa fa fa 00 00 00 00. 0x0c0c8001a580: 00 00 00 00 fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a590: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07 . Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==934566==ABORTING. ```. ### Expected behavior. Expected behavior is for ROOT to realize the branch address has been changed to nullptr and create an internal buffer, not read from the freed memory area. Interestingly it doesn't seem to have a problem without calling `SetAddress` as it then realizes it points to nullptr and will create a new object and modify `f`. ### To Reproduce. Run the above with ROOT compiled with `-Dasan=ON`. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04. ### Additional context. We didn't see this with ROOT 6.20 but I also did not specifically test it with address sanitizer so it might have been there already and just not cause any problems. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:4856,security,modif,modify,4856,"round the buggy address:. 0x0c0c8001a4f0: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a500: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a510: fd fd fd fd fd fd fd fd fa fa fa fa fd fd fd fd. 0x0c0c8001a520: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fa. 0x0c0c8001a530: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa. =>0x0c0c8001a540: fd fd fd fd fd fd fd fa fa fa fa fa fd[fd]fd fd. 0x0c0c8001a550: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a560: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a570: fd fd fd fd fd fd fd fd fa fa fa fa 00 00 00 00. 0x0c0c8001a580: 00 00 00 00 fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a590: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07 . Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==934566==ABORTING. ```. ### Expected behavior. Expected behavior is for ROOT to realize the branch address has been changed to nullptr and create an internal buffer, not read from the freed memory area. Interestingly it doesn't seem to have a problem without calling `SetAddress` as it then realizes it points to nullptr and will create a new object and modify `f`. ### To Reproduce. Run the above with ROOT compiled with `-Dasan=ON`. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04. ### Additional context. We didn't see this with ROOT 6.20 but I also did not specifically test it with address sanitizer so it might have been there already and just not cause any problems. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:5102,security,sanit,sanitizer,5102,"round the buggy address:. 0x0c0c8001a4f0: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a500: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a510: fd fd fd fd fd fd fd fd fa fa fa fa fd fd fd fd. 0x0c0c8001a520: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fa. 0x0c0c8001a530: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa. =>0x0c0c8001a540: fd fd fd fd fd fd fd fa fa fa fa fa fd[fd]fd fd. 0x0c0c8001a550: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a560: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a570: fd fd fd fd fd fd fd fd fa fa fa fa 00 00 00 00. 0x0c0c8001a580: 00 00 00 00 fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a590: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07 . Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==934566==ABORTING. ```. ### Expected behavior. Expected behavior is for ROOT to realize the branch address has been changed to nullptr and create an internal buffer, not read from the freed memory area. Interestingly it doesn't seem to have a problem without calling `SetAddress` as it then realizes it points to nullptr and will create a new object and modify `f`. ### To Reproduce. Run the above with ROOT compiled with `-Dasan=ON`. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04. ### Additional context. We didn't see this with ROOT 6.20 but I also did not specifically test it with address sanitizer so it might have been there already and just not cause any problems. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:448,testability,test,test,448,"Invalid Read in TTree::Fill after SetBranchAddress; ### Describe the bug. Then changing the Address of a Branch in TTree it seems to sometimes still use the old memory address after the call. As a minimal example here we create a TNamed, set it as branch but directly after delete it and set the branch address to `nullptr` before filling:. ```c++. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main() {. auto* tf = TFile::Open(""test.root"", ""RECREATE"");. auto* t = new TTree(""tree"", ""tree"");. TNamed *f = new TNamed(""foo"", ""bar"");. auto* b = t->Branch(""FileMetaData"", &f);. . delete f;. f = nullptr;. b->SetAddress(nullptr);. t->Fill();. t->Write();. tf->Close();. return 0;. }. ```. When running this with address sanitizer it gives the following error with 6.24:. ```. g++ -g `root-config --cflags --libs` -fsanitize=address -o mwe mwe.C && ./mwe . =================================================================. ==934566==ERROR: AddressSanitizer: heap-use-after-free on address 0x606000112a68 at pc 0x7fcd23e920f0 bp 0x7ffcc8579ab0 sp 0x7ffcc8579aa8. READ of size 4 at 0x606000112a68 thread T0. #0 0x7fcd23e920ef in int TStreamerInfoActions::WriteBasicType<unsigned int>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*) root/io/io/src/TStreamerInfoActions.cxx:252. #1 0x7fcd239c8950 in TStreamerInfoActions::TConfiguredAction::operator()(TBuffer&, void*) const root/io/io/inc/TStreamerInfoActions.h:123. #2 0x7fcd239c8950 in TBufferFile::ApplySequence(TStreamerInfoActions::TActionSequence const&, void*) root/io/io/src/TBufferFile.cxx:3572. #3 0x7fcd21fdd5dc in TBranch::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranch.cxx:891. #4 0x7fcd22016bfa in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1265. #5 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1290. #6 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:5006,testability,context,context,5006,"round the buggy address:. 0x0c0c8001a4f0: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a500: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a510: fd fd fd fd fd fd fd fd fa fa fa fa fd fd fd fd. 0x0c0c8001a520: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fa. 0x0c0c8001a530: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa. =>0x0c0c8001a540: fd fd fd fd fd fd fd fa fa fa fa fa fd[fd]fd fd. 0x0c0c8001a550: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a560: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a570: fd fd fd fd fd fd fd fd fa fa fa fa 00 00 00 00. 0x0c0c8001a580: 00 00 00 00 fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a590: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07 . Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==934566==ABORTING. ```. ### Expected behavior. Expected behavior is for ROOT to realize the branch address has been changed to nullptr and create an internal buffer, not read from the freed memory area. Interestingly it doesn't seem to have a problem without calling `SetAddress` as it then realizes it points to nullptr and will create a new object and modify `f`. ### To Reproduce. Run the above with ROOT compiled with `-Dasan=ON`. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04. ### Additional context. We didn't see this with ROOT 6.20 but I also did not specifically test it with address sanitizer so it might have been there already and just not cause any problems. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:5081,testability,test,test,5081,"round the buggy address:. 0x0c0c8001a4f0: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a500: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a510: fd fd fd fd fd fd fd fd fa fa fa fa fd fd fd fd. 0x0c0c8001a520: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fa. 0x0c0c8001a530: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa. =>0x0c0c8001a540: fd fd fd fd fd fd fd fa fa fa fa fa fd[fd]fd fd. 0x0c0c8001a550: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a560: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a570: fd fd fd fd fd fd fd fd fa fa fa fa 00 00 00 00. 0x0c0c8001a580: 00 00 00 00 fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a590: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07 . Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==934566==ABORTING. ```. ### Expected behavior. Expected behavior is for ROOT to realize the branch address has been changed to nullptr and create an internal buffer, not read from the freed memory area. Interestingly it doesn't seem to have a problem without calling `SetAddress` as it then realizes it points to nullptr and will create a new object and modify `f`. ### To Reproduce. Run the above with ROOT compiled with `-Dasan=ON`. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04. ### Additional context. We didn't see this with ROOT 6.20 but I also did not specifically test it with address sanitizer so it might have been there already and just not cause any problems. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:5201,testability,context,context,5201,"round the buggy address:. 0x0c0c8001a4f0: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a500: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a510: fd fd fd fd fd fd fd fd fa fa fa fa fd fd fd fd. 0x0c0c8001a520: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fa. 0x0c0c8001a530: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa. =>0x0c0c8001a540: fd fd fd fd fd fd fd fa fa fa fa fa fd[fd]fd fd. 0x0c0c8001a550: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a560: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a570: fd fd fd fd fd fd fd fd fa fa fa fa 00 00 00 00. 0x0c0c8001a580: 00 00 00 00 fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a590: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07 . Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==934566==ABORTING. ```. ### Expected behavior. Expected behavior is for ROOT to realize the branch address has been changed to nullptr and create an internal buffer, not read from the freed memory area. Interestingly it doesn't seem to have a problem without calling `SetAddress` as it then realizes it points to nullptr and will create a new object and modify `f`. ### To Reproduce. Run the above with ROOT compiled with `-Dasan=ON`. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04. ### Additional context. We didn't see this with ROOT 6.20 but I also did not specifically test it with address sanitizer so it might have been there already and just not cause any problems. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:161,usability,memor,memory,161,"Invalid Read in TTree::Fill after SetBranchAddress; ### Describe the bug. Then changing the Address of a Branch in TTree it seems to sometimes still use the old memory address after the call. As a minimal example here we create a TNamed, set it as branch but directly after delete it and set the branch address to `nullptr` before filling:. ```c++. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main() {. auto* tf = TFile::Open(""test.root"", ""RECREATE"");. auto* t = new TTree(""tree"", ""tree"");. TNamed *f = new TNamed(""foo"", ""bar"");. auto* b = t->Branch(""FileMetaData"", &f);. . delete f;. f = nullptr;. b->SetAddress(nullptr);. t->Fill();. t->Write();. tf->Close();. return 0;. }. ```. When running this with address sanitizer it gives the following error with 6.24:. ```. g++ -g `root-config --cflags --libs` -fsanitize=address -o mwe mwe.C && ./mwe . =================================================================. ==934566==ERROR: AddressSanitizer: heap-use-after-free on address 0x606000112a68 at pc 0x7fcd23e920f0 bp 0x7ffcc8579ab0 sp 0x7ffcc8579aa8. READ of size 4 at 0x606000112a68 thread T0. #0 0x7fcd23e920ef in int TStreamerInfoActions::WriteBasicType<unsigned int>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*) root/io/io/src/TStreamerInfoActions.cxx:252. #1 0x7fcd239c8950 in TStreamerInfoActions::TConfiguredAction::operator()(TBuffer&, void*) const root/io/io/inc/TStreamerInfoActions.h:123. #2 0x7fcd239c8950 in TBufferFile::ApplySequence(TStreamerInfoActions::TActionSequence const&, void*) root/io/io/src/TBufferFile.cxx:3572. #3 0x7fcd21fdd5dc in TBranch::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranch.cxx:891. #4 0x7fcd22016bfa in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1265. #5 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1290. #6 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:197,usability,minim,minimal,197,"Invalid Read in TTree::Fill after SetBranchAddress; ### Describe the bug. Then changing the Address of a Branch in TTree it seems to sometimes still use the old memory address after the call. As a minimal example here we create a TNamed, set it as branch but directly after delete it and set the branch address to `nullptr` before filling:. ```c++. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main() {. auto* tf = TFile::Open(""test.root"", ""RECREATE"");. auto* t = new TTree(""tree"", ""tree"");. TNamed *f = new TNamed(""foo"", ""bar"");. auto* b = t->Branch(""FileMetaData"", &f);. . delete f;. f = nullptr;. b->SetAddress(nullptr);. t->Fill();. t->Write();. tf->Close();. return 0;. }. ```. When running this with address sanitizer it gives the following error with 6.24:. ```. g++ -g `root-config --cflags --libs` -fsanitize=address -o mwe mwe.C && ./mwe . =================================================================. ==934566==ERROR: AddressSanitizer: heap-use-after-free on address 0x606000112a68 at pc 0x7fcd23e920f0 bp 0x7ffcc8579ab0 sp 0x7ffcc8579aa8. READ of size 4 at 0x606000112a68 thread T0. #0 0x7fcd23e920ef in int TStreamerInfoActions::WriteBasicType<unsigned int>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*) root/io/io/src/TStreamerInfoActions.cxx:252. #1 0x7fcd239c8950 in TStreamerInfoActions::TConfiguredAction::operator()(TBuffer&, void*) const root/io/io/inc/TStreamerInfoActions.h:123. #2 0x7fcd239c8950 in TBufferFile::ApplySequence(TStreamerInfoActions::TActionSequence const&, void*) root/io/io/src/TBufferFile.cxx:3572. #3 0x7fcd21fdd5dc in TBranch::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranch.cxx:891. #4 0x7fcd22016bfa in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1265. #5 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1290. #6 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:674,usability,Close,Close,674,"Invalid Read in TTree::Fill after SetBranchAddress; ### Describe the bug. Then changing the Address of a Branch in TTree it seems to sometimes still use the old memory address after the call. As a minimal example here we create a TNamed, set it as branch but directly after delete it and set the branch address to `nullptr` before filling:. ```c++. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main() {. auto* tf = TFile::Open(""test.root"", ""RECREATE"");. auto* t = new TTree(""tree"", ""tree"");. TNamed *f = new TNamed(""foo"", ""bar"");. auto* b = t->Branch(""FileMetaData"", &f);. . delete f;. f = nullptr;. b->SetAddress(nullptr);. t->Fill();. t->Write();. tf->Close();. return 0;. }. ```. When running this with address sanitizer it gives the following error with 6.24:. ```. g++ -g `root-config --cflags --libs` -fsanitize=address -o mwe mwe.C && ./mwe . =================================================================. ==934566==ERROR: AddressSanitizer: heap-use-after-free on address 0x606000112a68 at pc 0x7fcd23e920f0 bp 0x7ffcc8579ab0 sp 0x7ffcc8579aa8. READ of size 4 at 0x606000112a68 thread T0. #0 0x7fcd23e920ef in int TStreamerInfoActions::WriteBasicType<unsigned int>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*) root/io/io/src/TStreamerInfoActions.cxx:252. #1 0x7fcd239c8950 in TStreamerInfoActions::TConfiguredAction::operator()(TBuffer&, void*) const root/io/io/inc/TStreamerInfoActions.h:123. #2 0x7fcd239c8950 in TBufferFile::ApplySequence(TStreamerInfoActions::TActionSequence const&, void*) root/io/io/src/TBufferFile.cxx:3572. #3 0x7fcd21fdd5dc in TBranch::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranch.cxx:891. #4 0x7fcd22016bfa in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1265. #5 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1290. #6 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:767,usability,error,error,767,"Invalid Read in TTree::Fill after SetBranchAddress; ### Describe the bug. Then changing the Address of a Branch in TTree it seems to sometimes still use the old memory address after the call. As a minimal example here we create a TNamed, set it as branch but directly after delete it and set the branch address to `nullptr` before filling:. ```c++. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main() {. auto* tf = TFile::Open(""test.root"", ""RECREATE"");. auto* t = new TTree(""tree"", ""tree"");. TNamed *f = new TNamed(""foo"", ""bar"");. auto* b = t->Branch(""FileMetaData"", &f);. . delete f;. f = nullptr;. b->SetAddress(nullptr);. t->Fill();. t->Write();. tf->Close();. return 0;. }. ```. When running this with address sanitizer it gives the following error with 6.24:. ```. g++ -g `root-config --cflags --libs` -fsanitize=address -o mwe mwe.C && ./mwe . =================================================================. ==934566==ERROR: AddressSanitizer: heap-use-after-free on address 0x606000112a68 at pc 0x7fcd23e920f0 bp 0x7ffcc8579ab0 sp 0x7ffcc8579aa8. READ of size 4 at 0x606000112a68 thread T0. #0 0x7fcd23e920ef in int TStreamerInfoActions::WriteBasicType<unsigned int>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*) root/io/io/src/TStreamerInfoActions.cxx:252. #1 0x7fcd239c8950 in TStreamerInfoActions::TConfiguredAction::operator()(TBuffer&, void*) const root/io/io/inc/TStreamerInfoActions.h:123. #2 0x7fcd239c8950 in TBufferFile::ApplySequence(TStreamerInfoActions::TActionSequence const&, void*) root/io/io/src/TBufferFile.cxx:3572. #3 0x7fcd21fdd5dc in TBranch::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranch.cxx:891. #4 0x7fcd22016bfa in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1265. #5 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1290. #6 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:947,usability,ERROR,ERROR,947,"Invalid Read in TTree::Fill after SetBranchAddress; ### Describe the bug. Then changing the Address of a Branch in TTree it seems to sometimes still use the old memory address after the call. As a minimal example here we create a TNamed, set it as branch but directly after delete it and set the branch address to `nullptr` before filling:. ```c++. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main() {. auto* tf = TFile::Open(""test.root"", ""RECREATE"");. auto* t = new TTree(""tree"", ""tree"");. TNamed *f = new TNamed(""foo"", ""bar"");. auto* b = t->Branch(""FileMetaData"", &f);. . delete f;. f = nullptr;. b->SetAddress(nullptr);. t->Fill();. t->Write();. tf->Close();. return 0;. }. ```. When running this with address sanitizer it gives the following error with 6.24:. ```. g++ -g `root-config --cflags --libs` -fsanitize=address -o mwe mwe.C && ./mwe . =================================================================. ==934566==ERROR: AddressSanitizer: heap-use-after-free on address 0x606000112a68 at pc 0x7fcd23e920f0 bp 0x7ffcc8579ab0 sp 0x7ffcc8579aa8. READ of size 4 at 0x606000112a68 thread T0. #0 0x7fcd23e920ef in int TStreamerInfoActions::WriteBasicType<unsigned int>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*) root/io/io/src/TStreamerInfoActions.cxx:252. #1 0x7fcd239c8950 in TStreamerInfoActions::TConfiguredAction::operator()(TBuffer&, void*) const root/io/io/inc/TStreamerInfoActions.h:123. #2 0x7fcd239c8950 in TBufferFile::ApplySequence(TStreamerInfoActions::TActionSequence const&, void*) root/io/io/src/TBufferFile.cxx:3572. #3 0x7fcd21fdd5dc in TBranch::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranch.cxx:891. #4 0x7fcd22016bfa in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1265. #5 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1290. #6 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:4337,usability,user,user,4337,"round the buggy address:. 0x0c0c8001a4f0: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a500: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a510: fd fd fd fd fd fd fd fd fa fa fa fa fd fd fd fd. 0x0c0c8001a520: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fa. 0x0c0c8001a530: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa. =>0x0c0c8001a540: fd fd fd fd fd fd fd fa fa fa fa fa fd[fd]fd fd. 0x0c0c8001a550: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a560: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a570: fd fd fd fd fd fd fd fd fa fa fa fa 00 00 00 00. 0x0c0c8001a580: 00 00 00 00 fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a590: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07 . Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==934566==ABORTING. ```. ### Expected behavior. Expected behavior is for ROOT to realize the branch address has been changed to nullptr and create an internal buffer, not read from the freed memory area. Interestingly it doesn't seem to have a problem without calling `SetAddress` as it then realizes it points to nullptr and will create a new object and modify `f`. ### To Reproduce. Run the above with ROOT compiled with `-Dasan=ON`. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04. ### Additional context. We didn't see this with ROOT 6.20 but I also did not specifically test it with address sanitizer so it might have been there already and just not cause any problems. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:4539,usability,behavi,behavior,4539,"round the buggy address:. 0x0c0c8001a4f0: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a500: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a510: fd fd fd fd fd fd fd fd fa fa fa fa fd fd fd fd. 0x0c0c8001a520: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fa. 0x0c0c8001a530: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa. =>0x0c0c8001a540: fd fd fd fd fd fd fd fa fa fa fa fa fd[fd]fd fd. 0x0c0c8001a550: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a560: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a570: fd fd fd fd fd fd fd fd fa fa fa fa 00 00 00 00. 0x0c0c8001a580: 00 00 00 00 fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a590: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07 . Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==934566==ABORTING. ```. ### Expected behavior. Expected behavior is for ROOT to realize the branch address has been changed to nullptr and create an internal buffer, not read from the freed memory area. Interestingly it doesn't seem to have a problem without calling `SetAddress` as it then realizes it points to nullptr and will create a new object and modify `f`. ### To Reproduce. Run the above with ROOT compiled with `-Dasan=ON`. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04. ### Additional context. We didn't see this with ROOT 6.20 but I also did not specifically test it with address sanitizer so it might have been there already and just not cause any problems. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:4558,usability,behavi,behavior,4558,"round the buggy address:. 0x0c0c8001a4f0: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a500: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a510: fd fd fd fd fd fd fd fd fa fa fa fa fd fd fd fd. 0x0c0c8001a520: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fa. 0x0c0c8001a530: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa. =>0x0c0c8001a540: fd fd fd fd fd fd fd fa fa fa fa fa fd[fd]fd fd. 0x0c0c8001a550: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a560: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a570: fd fd fd fd fd fd fd fd fa fa fa fa 00 00 00 00. 0x0c0c8001a580: 00 00 00 00 fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a590: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07 . Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==934566==ABORTING. ```. ### Expected behavior. Expected behavior is for ROOT to realize the branch address has been changed to nullptr and create an internal buffer, not read from the freed memory area. Interestingly it doesn't seem to have a problem without calling `SetAddress` as it then realizes it points to nullptr and will create a new object and modify `f`. ### To Reproduce. Run the above with ROOT compiled with `-Dasan=ON`. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04. ### Additional context. We didn't see this with ROOT 6.20 but I also did not specifically test it with address sanitizer so it might have been there already and just not cause any problems. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/issues/8027:4692,usability,memor,memory,4692,"round the buggy address:. 0x0c0c8001a4f0: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a500: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a510: fd fd fd fd fd fd fd fd fa fa fa fa fd fd fd fd. 0x0c0c8001a520: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fa. 0x0c0c8001a530: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa. =>0x0c0c8001a540: fd fd fd fd fd fd fd fa fa fa fa fa fd[fd]fd fd. 0x0c0c8001a550: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a560: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. 0x0c0c8001a570: fd fd fd fd fd fd fd fd fa fa fa fa 00 00 00 00. 0x0c0c8001a580: 00 00 00 00 fa fa fa fa fd fd fd fd fd fd fd fd. 0x0c0c8001a590: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07 . Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==934566==ABORTING. ```. ### Expected behavior. Expected behavior is for ROOT to realize the branch address has been changed to nullptr and create an internal buffer, not read from the freed memory area. Interestingly it doesn't seem to have a problem without calling `SetAddress` as it then realizes it points to nullptr and will create a new object and modify `f`. ### To Reproduce. Run the above with ROOT compiled with `-Dasan=ON`. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04. ### Additional context. We didn't see this with ROOT 6.20 but I also did not specifically test it with address sanitizer so it might have been there already and just not cause any problems. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8027
https://github.com/root-project/root/pull/8028:0,deployability,Updat,Update,0,Update makerootfile.C to the new JSRoot API; Update makerootfile.C to the new JSRoot API,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8028
https://github.com/root-project/root/pull/8028:40,deployability,API,API,40,Update makerootfile.C to the new JSRoot API; Update makerootfile.C to the new JSRoot API,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8028
https://github.com/root-project/root/pull/8028:45,deployability,Updat,Update,45,Update makerootfile.C to the new JSRoot API; Update makerootfile.C to the new JSRoot API,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8028
https://github.com/root-project/root/pull/8028:85,deployability,API,API,85,Update makerootfile.C to the new JSRoot API; Update makerootfile.C to the new JSRoot API,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8028
https://github.com/root-project/root/pull/8028:40,integrability,API,API,40,Update makerootfile.C to the new JSRoot API; Update makerootfile.C to the new JSRoot API,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8028
https://github.com/root-project/root/pull/8028:85,integrability,API,API,85,Update makerootfile.C to the new JSRoot API; Update makerootfile.C to the new JSRoot API,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8028
https://github.com/root-project/root/pull/8028:40,interoperability,API,API,40,Update makerootfile.C to the new JSRoot API; Update makerootfile.C to the new JSRoot API,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8028
https://github.com/root-project/root/pull/8028:85,interoperability,API,API,85,Update makerootfile.C to the new JSRoot API; Update makerootfile.C to the new JSRoot API,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8028
https://github.com/root-project/root/pull/8028:0,safety,Updat,Update,0,Update makerootfile.C to the new JSRoot API; Update makerootfile.C to the new JSRoot API,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8028
https://github.com/root-project/root/pull/8028:45,safety,Updat,Update,45,Update makerootfile.C to the new JSRoot API; Update makerootfile.C to the new JSRoot API,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8028
https://github.com/root-project/root/pull/8028:0,security,Updat,Update,0,Update makerootfile.C to the new JSRoot API; Update makerootfile.C to the new JSRoot API,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8028
https://github.com/root-project/root/pull/8028:45,security,Updat,Update,45,Update makerootfile.C to the new JSRoot API; Update makerootfile.C to the new JSRoot API,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8028
https://github.com/root-project/root/pull/8029:37,availability,error,error,37,Small RBrowser improvments; Suppress error output on broken symlinks (use debug output). Provide size field for several objects kinds like TKey or TBranch. Provide special handling for TColor (appears in global ROOT lists),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8029
https://github.com/root-project/root/pull/8029:37,performance,error,error,37,Small RBrowser improvments; Suppress error output on broken symlinks (use debug output). Provide size field for several objects kinds like TKey or TBranch. Provide special handling for TColor (appears in global ROOT lists),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8029
https://github.com/root-project/root/pull/8029:37,safety,error,error,37,Small RBrowser improvments; Suppress error output on broken symlinks (use debug output). Provide size field for several objects kinds like TKey or TBranch. Provide special handling for TColor (appears in global ROOT lists),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8029
https://github.com/root-project/root/pull/8029:37,usability,error,error,37,Small RBrowser improvments; Suppress error output on broken symlinks (use debug output). Provide size field for several objects kinds like TKey or TBranch. Provide special handling for TColor (appears in global ROOT lists),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8029
https://github.com/root-project/root/pull/8030:147,deployability,observ,observed,147,"Fix printing of warning message when calling without a normalization set but fixCoefNormalization has been called; This fixes the warning messages observed in RootBench when evaluating a not normalised RooAddPdf. where fixCoefNormalizationSet has been called. This PR should be back ported to 6.24. Now `RooAddPdf::getValV` does not print anymore the warning but avoids that `RooAbsPdf::getValV` set the stored `_normSet` to a null pointer when the passed `nset` is a null pointer. In this case `RooAddPdf` uses the default normalization set for defining the coefficients and evaluating when a normalization set is not passed explicitly , i.e. when calling `RooAddPdf::getVal(nulptr)`. . This might have the side effect to not use the reference normalization that could have been defined previously using `fixCoefNormalization`. It is not clear if this is a wanted feature, since I don't see cases where one would need to evaluate an unnormalized `RooAddPdf`. Eventually another PR could remove `RooAddPdf::getValV`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8030
https://github.com/root-project/root/pull/8030:24,integrability,messag,message,24,"Fix printing of warning message when calling without a normalization set but fixCoefNormalization has been called; This fixes the warning messages observed in RootBench when evaluating a not normalised RooAddPdf. where fixCoefNormalizationSet has been called. This PR should be back ported to 6.24. Now `RooAddPdf::getValV` does not print anymore the warning but avoids that `RooAbsPdf::getValV` set the stored `_normSet` to a null pointer when the passed `nset` is a null pointer. In this case `RooAddPdf` uses the default normalization set for defining the coefficients and evaluating when a normalization set is not passed explicitly , i.e. when calling `RooAddPdf::getVal(nulptr)`. . This might have the side effect to not use the reference normalization that could have been defined previously using `fixCoefNormalization`. It is not clear if this is a wanted feature, since I don't see cases where one would need to evaluate an unnormalized `RooAddPdf`. Eventually another PR could remove `RooAddPdf::getValV`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8030
https://github.com/root-project/root/pull/8030:138,integrability,messag,messages,138,"Fix printing of warning message when calling without a normalization set but fixCoefNormalization has been called; This fixes the warning messages observed in RootBench when evaluating a not normalised RooAddPdf. where fixCoefNormalizationSet has been called. This PR should be back ported to 6.24. Now `RooAddPdf::getValV` does not print anymore the warning but avoids that `RooAbsPdf::getValV` set the stored `_normSet` to a null pointer when the passed `nset` is a null pointer. In this case `RooAddPdf` uses the default normalization set for defining the coefficients and evaluating when a normalization set is not passed explicitly , i.e. when calling `RooAddPdf::getVal(nulptr)`. . This might have the side effect to not use the reference normalization that could have been defined previously using `fixCoefNormalization`. It is not clear if this is a wanted feature, since I don't see cases where one would need to evaluate an unnormalized `RooAddPdf`. Eventually another PR could remove `RooAddPdf::getValV`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8030
https://github.com/root-project/root/pull/8030:960,integrability,Event,Eventually,960,"Fix printing of warning message when calling without a normalization set but fixCoefNormalization has been called; This fixes the warning messages observed in RootBench when evaluating a not normalised RooAddPdf. where fixCoefNormalizationSet has been called. This PR should be back ported to 6.24. Now `RooAddPdf::getValV` does not print anymore the warning but avoids that `RooAbsPdf::getValV` set the stored `_normSet` to a null pointer when the passed `nset` is a null pointer. In this case `RooAddPdf` uses the default normalization set for defining the coefficients and evaluating when a normalization set is not passed explicitly , i.e. when calling `RooAddPdf::getVal(nulptr)`. . This might have the side effect to not use the reference normalization that could have been defined previously using `fixCoefNormalization`. It is not clear if this is a wanted feature, since I don't see cases where one would need to evaluate an unnormalized `RooAddPdf`. Eventually another PR could remove `RooAddPdf::getValV`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8030
https://github.com/root-project/root/pull/8030:24,interoperability,messag,message,24,"Fix printing of warning message when calling without a normalization set but fixCoefNormalization has been called; This fixes the warning messages observed in RootBench when evaluating a not normalised RooAddPdf. where fixCoefNormalizationSet has been called. This PR should be back ported to 6.24. Now `RooAddPdf::getValV` does not print anymore the warning but avoids that `RooAbsPdf::getValV` set the stored `_normSet` to a null pointer when the passed `nset` is a null pointer. In this case `RooAddPdf` uses the default normalization set for defining the coefficients and evaluating when a normalization set is not passed explicitly , i.e. when calling `RooAddPdf::getVal(nulptr)`. . This might have the side effect to not use the reference normalization that could have been defined previously using `fixCoefNormalization`. It is not clear if this is a wanted feature, since I don't see cases where one would need to evaluate an unnormalized `RooAddPdf`. Eventually another PR could remove `RooAddPdf::getValV`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8030
https://github.com/root-project/root/pull/8030:138,interoperability,messag,messages,138,"Fix printing of warning message when calling without a normalization set but fixCoefNormalization has been called; This fixes the warning messages observed in RootBench when evaluating a not normalised RooAddPdf. where fixCoefNormalizationSet has been called. This PR should be back ported to 6.24. Now `RooAddPdf::getValV` does not print anymore the warning but avoids that `RooAbsPdf::getValV` set the stored `_normSet` to a null pointer when the passed `nset` is a null pointer. In this case `RooAddPdf` uses the default normalization set for defining the coefficients and evaluating when a normalization set is not passed explicitly , i.e. when calling `RooAddPdf::getVal(nulptr)`. . This might have the side effect to not use the reference normalization that could have been defined previously using `fixCoefNormalization`. It is not clear if this is a wanted feature, since I don't see cases where one would need to evaluate an unnormalized `RooAddPdf`. Eventually another PR could remove `RooAddPdf::getValV`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8030
https://github.com/root-project/root/pull/8030:324,reliability,doe,does,324,"Fix printing of warning message when calling without a normalization set but fixCoefNormalization has been called; This fixes the warning messages observed in RootBench when evaluating a not normalised RooAddPdf. where fixCoefNormalizationSet has been called. This PR should be back ported to 6.24. Now `RooAddPdf::getValV` does not print anymore the warning but avoids that `RooAbsPdf::getValV` set the stored `_normSet` to a null pointer when the passed `nset` is a null pointer. In this case `RooAddPdf` uses the default normalization set for defining the coefficients and evaluating when a normalization set is not passed explicitly , i.e. when calling `RooAddPdf::getVal(nulptr)`. . This might have the side effect to not use the reference normalization that could have been defined previously using `fixCoefNormalization`. It is not clear if this is a wanted feature, since I don't see cases where one would need to evaluate an unnormalized `RooAddPdf`. Eventually another PR could remove `RooAddPdf::getValV`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8030
https://github.com/root-project/root/pull/8030:363,safety,avoid,avoids,363,"Fix printing of warning message when calling without a normalization set but fixCoefNormalization has been called; This fixes the warning messages observed in RootBench when evaluating a not normalised RooAddPdf. where fixCoefNormalizationSet has been called. This PR should be back ported to 6.24. Now `RooAddPdf::getValV` does not print anymore the warning but avoids that `RooAbsPdf::getValV` set the stored `_normSet` to a null pointer when the passed `nset` is a null pointer. In this case `RooAddPdf` uses the default normalization set for defining the coefficients and evaluating when a normalization set is not passed explicitly , i.e. when calling `RooAddPdf::getVal(nulptr)`. . This might have the side effect to not use the reference normalization that could have been defined previously using `fixCoefNormalization`. It is not clear if this is a wanted feature, since I don't see cases where one would need to evaluate an unnormalized `RooAddPdf`. Eventually another PR could remove `RooAddPdf::getValV`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8030
https://github.com/root-project/root/pull/8030:147,testability,observ,observed,147,"Fix printing of warning message when calling without a normalization set but fixCoefNormalization has been called; This fixes the warning messages observed in RootBench when evaluating a not normalised RooAddPdf. where fixCoefNormalizationSet has been called. This PR should be back ported to 6.24. Now `RooAddPdf::getValV` does not print anymore the warning but avoids that `RooAbsPdf::getValV` set the stored `_normSet` to a null pointer when the passed `nset` is a null pointer. In this case `RooAddPdf` uses the default normalization set for defining the coefficients and evaluating when a normalization set is not passed explicitly , i.e. when calling `RooAddPdf::getVal(nulptr)`. . This might have the side effect to not use the reference normalization that could have been defined previously using `fixCoefNormalization`. It is not clear if this is a wanted feature, since I don't see cases where one would need to evaluate an unnormalized `RooAddPdf`. Eventually another PR could remove `RooAddPdf::getValV`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8030
https://github.com/root-project/root/pull/8030:839,usability,clear,clear,839,"Fix printing of warning message when calling without a normalization set but fixCoefNormalization has been called; This fixes the warning messages observed in RootBench when evaluating a not normalised RooAddPdf. where fixCoefNormalizationSet has been called. This PR should be back ported to 6.24. Now `RooAddPdf::getValV` does not print anymore the warning but avoids that `RooAbsPdf::getValV` set the stored `_normSet` to a null pointer when the passed `nset` is a null pointer. In this case `RooAddPdf` uses the default normalization set for defining the coefficients and evaluating when a normalization set is not passed explicitly , i.e. when calling `RooAddPdf::getVal(nulptr)`. . This might have the side effect to not use the reference normalization that could have been defined previously using `fixCoefNormalization`. It is not clear if this is a wanted feature, since I don't see cases where one would need to evaluate an unnormalized `RooAddPdf`. Eventually another PR could remove `RooAddPdf::getValV`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8030
https://github.com/root-project/root/issues/8031:9,deployability,build,build,9,"Reserve ""build"" directory name in ROOT sources for build files; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. This would make it possible to use `build` as a build directory name under the source directory. Having a build directory under the source directory is common practice: several code editors do it by default, and it helps tools like ccache recognize when the same software is built multiple times (see ccache's `base_dir` feature). There is a precedent in roottest in reserving `build` in `.gitignore`,. and some C++ project layout guidelines such as [pitchfork](https://bit.ly/3vlQwC9). suggest the usage of build as a reserved, preferred name for build. directories. Other precedents are entries such as `cmake-build` and `.build` in. ROOT's `.gitignore`, with the exact same rationale, because those are. the build directory names that CLion and VSCode pick. Our current `build` directory should therefore be renamed and `build` should be added to our .gitignore. An alternative considered was `_build`, but Axel suggested to use the more proper `build`, at the cost of renaming the already existing directory: see https://github.com/root-project/root/pull/8009 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8031
https://github.com/root-project/root/issues/8031:51,deployability,build,build,51,"Reserve ""build"" directory name in ROOT sources for build files; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. This would make it possible to use `build` as a build directory name under the source directory. Having a build directory under the source directory is common practice: several code editors do it by default, and it helps tools like ccache recognize when the same software is built multiple times (see ccache's `base_dir` feature). There is a precedent in roottest in reserving `build` in `.gitignore`,. and some C++ project layout guidelines such as [pitchfork](https://bit.ly/3vlQwC9). suggest the usage of build as a reserved, preferred name for build. directories. Other precedents are entries such as `cmake-build` and `.build` in. ROOT's `.gitignore`, with the exact same rationale, because those are. the build directory names that CLion and VSCode pick. Our current `build` directory should therefore be renamed and `build` should be added to our .gitignore. An alternative considered was `_build`, but Axel suggested to use the more proper `build`, at the cost of renaming the already existing directory: see https://github.com/root-project/root/pull/8009 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8031
https://github.com/root-project/root/issues/8031:211,deployability,build,build,211,"Reserve ""build"" directory name in ROOT sources for build files; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. This would make it possible to use `build` as a build directory name under the source directory. Having a build directory under the source directory is common practice: several code editors do it by default, and it helps tools like ccache recognize when the same software is built multiple times (see ccache's `base_dir` feature). There is a precedent in roottest in reserving `build` in `.gitignore`,. and some C++ project layout guidelines such as [pitchfork](https://bit.ly/3vlQwC9). suggest the usage of build as a reserved, preferred name for build. directories. Other precedents are entries such as `cmake-build` and `.build` in. ROOT's `.gitignore`, with the exact same rationale, because those are. the build directory names that CLion and VSCode pick. Our current `build` directory should therefore be renamed and `build` should be added to our .gitignore. An alternative considered was `_build`, but Axel suggested to use the more proper `build`, at the cost of renaming the already existing directory: see https://github.com/root-project/root/pull/8009 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8031
https://github.com/root-project/root/issues/8031:223,deployability,build,build,223,"Reserve ""build"" directory name in ROOT sources for build files; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. This would make it possible to use `build` as a build directory name under the source directory. Having a build directory under the source directory is common practice: several code editors do it by default, and it helps tools like ccache recognize when the same software is built multiple times (see ccache's `base_dir` feature). There is a precedent in roottest in reserving `build` in `.gitignore`,. and some C++ project layout guidelines such as [pitchfork](https://bit.ly/3vlQwC9). suggest the usage of build as a reserved, preferred name for build. directories. Other precedents are entries such as `cmake-build` and `.build` in. ROOT's `.gitignore`, with the exact same rationale, because those are. the build directory names that CLion and VSCode pick. Our current `build` directory should therefore be renamed and `build` should be added to our .gitignore. An alternative considered was `_build`, but Axel suggested to use the more proper `build`, at the cost of renaming the already existing directory: see https://github.com/root-project/root/pull/8009 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8031
https://github.com/root-project/root/issues/8031:281,deployability,build,build,281,"Reserve ""build"" directory name in ROOT sources for build files; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. This would make it possible to use `build` as a build directory name under the source directory. Having a build directory under the source directory is common practice: several code editors do it by default, and it helps tools like ccache recognize when the same software is built multiple times (see ccache's `base_dir` feature). There is a precedent in roottest in reserving `build` in `.gitignore`,. and some C++ project layout guidelines such as [pitchfork](https://bit.ly/3vlQwC9). suggest the usage of build as a reserved, preferred name for build. directories. Other precedents are entries such as `cmake-build` and `.build` in. ROOT's `.gitignore`, with the exact same rationale, because those are. the build directory names that CLion and VSCode pick. Our current `build` directory should therefore be renamed and `build` should be added to our .gitignore. An alternative considered was `_build`, but Axel suggested to use the more proper `build`, at the cost of renaming the already existing directory: see https://github.com/root-project/root/pull/8009 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8031
https://github.com/root-project/root/issues/8031:553,deployability,build,build,553,"Reserve ""build"" directory name in ROOT sources for build files; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. This would make it possible to use `build` as a build directory name under the source directory. Having a build directory under the source directory is common practice: several code editors do it by default, and it helps tools like ccache recognize when the same software is built multiple times (see ccache's `base_dir` feature). There is a precedent in roottest in reserving `build` in `.gitignore`,. and some C++ project layout guidelines such as [pitchfork](https://bit.ly/3vlQwC9). suggest the usage of build as a reserved, preferred name for build. directories. Other precedents are entries such as `cmake-build` and `.build` in. ROOT's `.gitignore`, with the exact same rationale, because those are. the build directory names that CLion and VSCode pick. Our current `build` directory should therefore be renamed and `build` should be added to our .gitignore. An alternative considered was `_build`, but Axel suggested to use the more proper `build`, at the cost of renaming the already existing directory: see https://github.com/root-project/root/pull/8009 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8031
https://github.com/root-project/root/issues/8031:683,deployability,build,build,683,"Reserve ""build"" directory name in ROOT sources for build files; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. This would make it possible to use `build` as a build directory name under the source directory. Having a build directory under the source directory is common practice: several code editors do it by default, and it helps tools like ccache recognize when the same software is built multiple times (see ccache's `base_dir` feature). There is a precedent in roottest in reserving `build` in `.gitignore`,. and some C++ project layout guidelines such as [pitchfork](https://bit.ly/3vlQwC9). suggest the usage of build as a reserved, preferred name for build. directories. Other precedents are entries such as `cmake-build` and `.build` in. ROOT's `.gitignore`, with the exact same rationale, because those are. the build directory names that CLion and VSCode pick. Our current `build` directory should therefore be renamed and `build` should be added to our .gitignore. An alternative considered was `_build`, but Axel suggested to use the more proper `build`, at the cost of renaming the already existing directory: see https://github.com/root-project/root/pull/8009 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8031
https://github.com/root-project/root/issues/8031:723,deployability,build,build,723,"Reserve ""build"" directory name in ROOT sources for build files; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. This would make it possible to use `build` as a build directory name under the source directory. Having a build directory under the source directory is common practice: several code editors do it by default, and it helps tools like ccache recognize when the same software is built multiple times (see ccache's `base_dir` feature). There is a precedent in roottest in reserving `build` in `.gitignore`,. and some C++ project layout guidelines such as [pitchfork](https://bit.ly/3vlQwC9). suggest the usage of build as a reserved, preferred name for build. directories. Other precedents are entries such as `cmake-build` and `.build` in. ROOT's `.gitignore`, with the exact same rationale, because those are. the build directory names that CLion and VSCode pick. Our current `build` directory should therefore be renamed and `build` should be added to our .gitignore. An alternative considered was `_build`, but Axel suggested to use the more proper `build`, at the cost of renaming the already existing directory: see https://github.com/root-project/root/pull/8009 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8031
https://github.com/root-project/root/issues/8031:787,deployability,build,build,787,"Reserve ""build"" directory name in ROOT sources for build files; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. This would make it possible to use `build` as a build directory name under the source directory. Having a build directory under the source directory is common practice: several code editors do it by default, and it helps tools like ccache recognize when the same software is built multiple times (see ccache's `base_dir` feature). There is a precedent in roottest in reserving `build` in `.gitignore`,. and some C++ project layout guidelines such as [pitchfork](https://bit.ly/3vlQwC9). suggest the usage of build as a reserved, preferred name for build. directories. Other precedents are entries such as `cmake-build` and `.build` in. ROOT's `.gitignore`, with the exact same rationale, because those are. the build directory names that CLion and VSCode pick. Our current `build` directory should therefore be renamed and `build` should be added to our .gitignore. An alternative considered was `_build`, but Axel suggested to use the more proper `build`, at the cost of renaming the already existing directory: see https://github.com/root-project/root/pull/8009 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8031
https://github.com/root-project/root/issues/8031:800,deployability,build,build,800,"Reserve ""build"" directory name in ROOT sources for build files; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. This would make it possible to use `build` as a build directory name under the source directory. Having a build directory under the source directory is common practice: several code editors do it by default, and it helps tools like ccache recognize when the same software is built multiple times (see ccache's `base_dir` feature). There is a precedent in roottest in reserving `build` in `.gitignore`,. and some C++ project layout guidelines such as [pitchfork](https://bit.ly/3vlQwC9). suggest the usage of build as a reserved, preferred name for build. directories. Other precedents are entries such as `cmake-build` and `.build` in. ROOT's `.gitignore`, with the exact same rationale, because those are. the build directory names that CLion and VSCode pick. Our current `build` directory should therefore be renamed and `build` should be added to our .gitignore. An alternative considered was `_build`, but Axel suggested to use the more proper `build`, at the cost of renaming the already existing directory: see https://github.com/root-project/root/pull/8009 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8031
https://github.com/root-project/root/issues/8031:886,deployability,build,build,886,"Reserve ""build"" directory name in ROOT sources for build files; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. This would make it possible to use `build` as a build directory name under the source directory. Having a build directory under the source directory is common practice: several code editors do it by default, and it helps tools like ccache recognize when the same software is built multiple times (see ccache's `base_dir` feature). There is a precedent in roottest in reserving `build` in `.gitignore`,. and some C++ project layout guidelines such as [pitchfork](https://bit.ly/3vlQwC9). suggest the usage of build as a reserved, preferred name for build. directories. Other precedents are entries such as `cmake-build` and `.build` in. ROOT's `.gitignore`, with the exact same rationale, because those are. the build directory names that CLion and VSCode pick. Our current `build` directory should therefore be renamed and `build` should be added to our .gitignore. An alternative considered was `_build`, but Axel suggested to use the more proper `build`, at the cost of renaming the already existing directory: see https://github.com/root-project/root/pull/8009 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8031
https://github.com/root-project/root/issues/8031:949,deployability,build,build,949,"Reserve ""build"" directory name in ROOT sources for build files; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. This would make it possible to use `build` as a build directory name under the source directory. Having a build directory under the source directory is common practice: several code editors do it by default, and it helps tools like ccache recognize when the same software is built multiple times (see ccache's `base_dir` feature). There is a precedent in roottest in reserving `build` in `.gitignore`,. and some C++ project layout guidelines such as [pitchfork](https://bit.ly/3vlQwC9). suggest the usage of build as a reserved, preferred name for build. directories. Other precedents are entries such as `cmake-build` and `.build` in. ROOT's `.gitignore`, with the exact same rationale, because those are. the build directory names that CLion and VSCode pick. Our current `build` directory should therefore be renamed and `build` should be added to our .gitignore. An alternative considered was `_build`, but Axel suggested to use the more proper `build`, at the cost of renaming the already existing directory: see https://github.com/root-project/root/pull/8009 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8031
https://github.com/root-project/root/issues/8031:999,deployability,build,build,999,"Reserve ""build"" directory name in ROOT sources for build files; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. This would make it possible to use `build` as a build directory name under the source directory. Having a build directory under the source directory is common practice: several code editors do it by default, and it helps tools like ccache recognize when the same software is built multiple times (see ccache's `base_dir` feature). There is a precedent in roottest in reserving `build` in `.gitignore`,. and some C++ project layout guidelines such as [pitchfork](https://bit.ly/3vlQwC9). suggest the usage of build as a reserved, preferred name for build. directories. Other precedents are entries such as `cmake-build` and `.build` in. ROOT's `.gitignore`, with the exact same rationale, because those are. the build directory names that CLion and VSCode pick. Our current `build` directory should therefore be renamed and `build` should be added to our .gitignore. An alternative considered was `_build`, but Axel suggested to use the more proper `build`, at the cost of renaming the already existing directory: see https://github.com/root-project/root/pull/8009 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8031
https://github.com/root-project/root/issues/8031:1124,deployability,build,build,1124,"Reserve ""build"" directory name in ROOT sources for build files; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. This would make it possible to use `build` as a build directory name under the source directory. Having a build directory under the source directory is common practice: several code editors do it by default, and it helps tools like ccache recognize when the same software is built multiple times (see ccache's `base_dir` feature). There is a precedent in roottest in reserving `build` in `.gitignore`,. and some C++ project layout guidelines such as [pitchfork](https://bit.ly/3vlQwC9). suggest the usage of build as a reserved, preferred name for build. directories. Other precedents are entries such as `cmake-build` and `.build` in. ROOT's `.gitignore`, with the exact same rationale, because those are. the build directory names that CLion and VSCode pick. Our current `build` directory should therefore be renamed and `build` should be added to our .gitignore. An alternative considered was `_build`, but Axel suggested to use the more proper `build`, at the cost of renaming the already existing directory: see https://github.com/root-project/root/pull/8009 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8031
https://github.com/root-project/root/issues/8031:940,energy efficiency,current,current,940,"Reserve ""build"" directory name in ROOT sources for build files; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. This would make it possible to use `build` as a build directory name under the source directory. Having a build directory under the source directory is common practice: several code editors do it by default, and it helps tools like ccache recognize when the same software is built multiple times (see ccache's `base_dir` feature). There is a precedent in roottest in reserving `build` in `.gitignore`,. and some C++ project layout guidelines such as [pitchfork](https://bit.ly/3vlQwC9). suggest the usage of build as a reserved, preferred name for build. directories. Other precedents are entries such as `cmake-build` and `.build` in. ROOT's `.gitignore`, with the exact same rationale, because those are. the build directory names that CLion and VSCode pick. Our current `build` directory should therefore be renamed and `build` should be added to our .gitignore. An alternative considered was `_build`, but Axel suggested to use the more proper `build`, at the cost of renaming the already existing directory: see https://github.com/root-project/root/pull/8009 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8031
https://github.com/root-project/root/issues/8031:465,performance,time,times,465,"Reserve ""build"" directory name in ROOT sources for build files; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. This would make it possible to use `build` as a build directory name under the source directory. Having a build directory under the source directory is common practice: several code editors do it by default, and it helps tools like ccache recognize when the same software is built multiple times (see ccache's `base_dir` feature). There is a precedent in roottest in reserving `build` in `.gitignore`,. and some C++ project layout guidelines such as [pitchfork](https://bit.ly/3vlQwC9). suggest the usage of build as a reserved, preferred name for build. directories. Other precedents are entries such as `cmake-build` and `.build` in. ROOT's `.gitignore`, with the exact same rationale, because those are. the build directory names that CLion and VSCode pick. Our current `build` directory should therefore be renamed and `build` should be added to our .gitignore. An alternative considered was `_build`, but Axel suggested to use the more proper `build`, at the cost of renaming the already existing directory: see https://github.com/root-project/root/pull/8009 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8031
https://github.com/root-project/root/issues/8031:334,reliability,pra,practice,334,"Reserve ""build"" directory name in ROOT sources for build files; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. This would make it possible to use `build` as a build directory name under the source directory. Having a build directory under the source directory is common practice: several code editors do it by default, and it helps tools like ccache recognize when the same software is built multiple times (see ccache's `base_dir` feature). There is a precedent in roottest in reserving `build` in `.gitignore`,. and some C++ project layout guidelines such as [pitchfork](https://bit.ly/3vlQwC9). suggest the usage of build as a reserved, preferred name for build. directories. Other precedents are entries such as `cmake-build` and `.build` in. ROOT's `.gitignore`, with the exact same rationale, because those are. the build directory names that CLion and VSCode pick. Our current `build` directory should therefore be renamed and `build` should be added to our .gitignore. An alternative considered was `_build`, but Axel suggested to use the more proper `build`, at the cost of renaming the already existing directory: see https://github.com/root-project/root/pull/8009 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8031
https://github.com/root-project/root/issues/8031:390,usability,help,helps,390,"Reserve ""build"" directory name in ROOT sources for build files; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. This would make it possible to use `build` as a build directory name under the source directory. Having a build directory under the source directory is common practice: several code editors do it by default, and it helps tools like ccache recognize when the same software is built multiple times (see ccache's `base_dir` feature). There is a precedent in roottest in reserving `build` in `.gitignore`,. and some C++ project layout guidelines such as [pitchfork](https://bit.ly/3vlQwC9). suggest the usage of build as a reserved, preferred name for build. directories. Other precedents are entries such as `cmake-build` and `.build` in. ROOT's `.gitignore`, with the exact same rationale, because those are. the build directory names that CLion and VSCode pick. Our current `build` directory should therefore be renamed and `build` should be added to our .gitignore. An alternative considered was `_build`, but Axel suggested to use the more proper `build`, at the cost of renaming the already existing directory: see https://github.com/root-project/root/pull/8009 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8031
https://github.com/root-project/root/issues/8031:396,usability,tool,tools,396,"Reserve ""build"" directory name in ROOT sources for build files; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. This would make it possible to use `build` as a build directory name under the source directory. Having a build directory under the source directory is common practice: several code editors do it by default, and it helps tools like ccache recognize when the same software is built multiple times (see ccache's `base_dir` feature). There is a precedent in roottest in reserving `build` in `.gitignore`,. and some C++ project layout guidelines such as [pitchfork](https://bit.ly/3vlQwC9). suggest the usage of build as a reserved, preferred name for build. directories. Other precedents are entries such as `cmake-build` and `.build` in. ROOT's `.gitignore`, with the exact same rationale, because those are. the build directory names that CLion and VSCode pick. Our current `build` directory should therefore be renamed and `build` should be added to our .gitignore. An alternative considered was `_build`, but Axel suggested to use the more proper `build`, at the cost of renaming the already existing directory: see https://github.com/root-project/root/pull/8009 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8031
https://github.com/root-project/root/issues/8031:606,usability,guid,guidelines,606,"Reserve ""build"" directory name in ROOT sources for build files; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. This would make it possible to use `build` as a build directory name under the source directory. Having a build directory under the source directory is common practice: several code editors do it by default, and it helps tools like ccache recognize when the same software is built multiple times (see ccache's `base_dir` feature). There is a precedent in roottest in reserving `build` in `.gitignore`,. and some C++ project layout guidelines such as [pitchfork](https://bit.ly/3vlQwC9). suggest the usage of build as a reserved, preferred name for build. directories. Other precedents are entries such as `cmake-build` and `.build` in. ROOT's `.gitignore`, with the exact same rationale, because those are. the build directory names that CLion and VSCode pick. Our current `build` directory should therefore be renamed and `build` should be added to our .gitignore. An alternative considered was `_build`, but Axel suggested to use the more proper `build`, at the cost of renaming the already existing directory: see https://github.com/root-project/root/pull/8009 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8031
https://github.com/root-project/root/issues/8031:704,usability,prefer,preferred,704,"Reserve ""build"" directory name in ROOT sources for build files; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. This would make it possible to use `build` as a build directory name under the source directory. Having a build directory under the source directory is common practice: several code editors do it by default, and it helps tools like ccache recognize when the same software is built multiple times (see ccache's `base_dir` feature). There is a precedent in roottest in reserving `build` in `.gitignore`,. and some C++ project layout guidelines such as [pitchfork](https://bit.ly/3vlQwC9). suggest the usage of build as a reserved, preferred name for build. directories. Other precedents are entries such as `cmake-build` and `.build` in. ROOT's `.gitignore`, with the exact same rationale, because those are. the build directory names that CLion and VSCode pick. Our current `build` directory should therefore be renamed and `build` should be added to our .gitignore. An alternative considered was `_build`, but Axel suggested to use the more proper `build`, at the cost of renaming the already existing directory: see https://github.com/root-project/root/pull/8009 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8031
https://github.com/root-project/root/pull/8032:420,availability,state,statement,420,"[RF] Implement mechanism in RooCmdArg to take ownership of temporaries; It happens often that one passes a temporary RooArgSet to the. RooCmdArg constructor, where the RooCmdArg is itself a temporary that is. passed to a RooFit function. The RooCmdArg contains only pointers to the. RooArgSets, so this pattern relies on the RooArgSet being kept alive. until the function end. In code, this pattern would look like this statement:. ```C++. func(RooCmdArg{RooArgSet{}});. ```. In C++, this works because the temporaries survive until the statement. end. But in Python, the inner temporary RooArgSet will be destructed. after the RooCmdArg has been constructed, leaving the RooCmdArg with. dangling pointers. To solve this problem, all the functions that can create a RooCmdArg. from a RooArgSet are overloaded with versions accepting rvalue. references. These overloads are indeed used for temporaries both in C++. and Python. In the rvalue reference versions, the temporaries are moved. into a vector of std::unique_ptr<TObject>. The constructed RooCmdArg. then takes ownership of this vector wrapped in a shared_ptr. This addresses Jira issues [ROOT-5022](https://sft.its.cern.ch/jira/browse/ROOT-5022), [ROOT-9861](https://sft.its.cern.ch/jira/browse/ROOT-9861), and [ROOT-4373](https://sft.its.cern.ch/jira/browse/ROOT-4373). Here some examples of C++ and Python code that work after this change:. ```C++. void minimal_example() {. using namespace RooFit;. RooRealVar x(""x"",""x"", 0.0, 1.0);. RooDataSet data{};. RooCmdArg * arg = new RooCmdArg(ProjWData(x, data));. ((RooArgSet*)arg->getObject(0))->Print();. std::cout << dynamic_cast<RooArgSet const*>(arg->getObject(0)) << std::endl;. delete arg;. }. ```. ```Python. import ROOT. x = ROOT.RooRealVar(""x"", ""x title"", 0, 0, 10). arg = ROOT.RooFit.NormSet( ROOT.RooArgSet(x) ). arg.getObject(0)[""x""].Print(). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8032
https://github.com/root-project/root/pull/8032:537,availability,state,statement,537,"[RF] Implement mechanism in RooCmdArg to take ownership of temporaries; It happens often that one passes a temporary RooArgSet to the. RooCmdArg constructor, where the RooCmdArg is itself a temporary that is. passed to a RooFit function. The RooCmdArg contains only pointers to the. RooArgSets, so this pattern relies on the RooArgSet being kept alive. until the function end. In code, this pattern would look like this statement:. ```C++. func(RooCmdArg{RooArgSet{}});. ```. In C++, this works because the temporaries survive until the statement. end. But in Python, the inner temporary RooArgSet will be destructed. after the RooCmdArg has been constructed, leaving the RooCmdArg with. dangling pointers. To solve this problem, all the functions that can create a RooCmdArg. from a RooArgSet are overloaded with versions accepting rvalue. references. These overloads are indeed used for temporaries both in C++. and Python. In the rvalue reference versions, the temporaries are moved. into a vector of std::unique_ptr<TObject>. The constructed RooCmdArg. then takes ownership of this vector wrapped in a shared_ptr. This addresses Jira issues [ROOT-5022](https://sft.its.cern.ch/jira/browse/ROOT-5022), [ROOT-9861](https://sft.its.cern.ch/jira/browse/ROOT-9861), and [ROOT-4373](https://sft.its.cern.ch/jira/browse/ROOT-4373). Here some examples of C++ and Python code that work after this change:. ```C++. void minimal_example() {. using namespace RooFit;. RooRealVar x(""x"",""x"", 0.0, 1.0);. RooDataSet data{};. RooCmdArg * arg = new RooCmdArg(ProjWData(x, data));. ((RooArgSet*)arg->getObject(0))->Print();. std::cout << dynamic_cast<RooArgSet const*>(arg->getObject(0)) << std::endl;. delete arg;. }. ```. ```Python. import ROOT. x = ROOT.RooRealVar(""x"", ""x title"", 0, 0, 10). arg = ROOT.RooFit.NormSet( ROOT.RooArgSet(x) ). arg.getObject(0)[""x""].Print(). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8032
https://github.com/root-project/root/pull/8032:252,deployability,contain,contains,252,"[RF] Implement mechanism in RooCmdArg to take ownership of temporaries; It happens often that one passes a temporary RooArgSet to the. RooCmdArg constructor, where the RooCmdArg is itself a temporary that is. passed to a RooFit function. The RooCmdArg contains only pointers to the. RooArgSets, so this pattern relies on the RooArgSet being kept alive. until the function end. In code, this pattern would look like this statement:. ```C++. func(RooCmdArg{RooArgSet{}});. ```. In C++, this works because the temporaries survive until the statement. end. But in Python, the inner temporary RooArgSet will be destructed. after the RooCmdArg has been constructed, leaving the RooCmdArg with. dangling pointers. To solve this problem, all the functions that can create a RooCmdArg. from a RooArgSet are overloaded with versions accepting rvalue. references. These overloads are indeed used for temporaries both in C++. and Python. In the rvalue reference versions, the temporaries are moved. into a vector of std::unique_ptr<TObject>. The constructed RooCmdArg. then takes ownership of this vector wrapped in a shared_ptr. This addresses Jira issues [ROOT-5022](https://sft.its.cern.ch/jira/browse/ROOT-5022), [ROOT-9861](https://sft.its.cern.ch/jira/browse/ROOT-9861), and [ROOT-4373](https://sft.its.cern.ch/jira/browse/ROOT-4373). Here some examples of C++ and Python code that work after this change:. ```C++. void minimal_example() {. using namespace RooFit;. RooRealVar x(""x"",""x"", 0.0, 1.0);. RooDataSet data{};. RooCmdArg * arg = new RooCmdArg(ProjWData(x, data));. ((RooArgSet*)arg->getObject(0))->Print();. std::cout << dynamic_cast<RooArgSet const*>(arg->getObject(0)) << std::endl;. delete arg;. }. ```. ```Python. import ROOT. x = ROOT.RooRealVar(""x"", ""x title"", 0, 0, 10). arg = ROOT.RooFit.NormSet( ROOT.RooArgSet(x) ). arg.getObject(0)[""x""].Print(). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8032
https://github.com/root-project/root/pull/8032:814,deployability,version,versions,814,"[RF] Implement mechanism in RooCmdArg to take ownership of temporaries; It happens often that one passes a temporary RooArgSet to the. RooCmdArg constructor, where the RooCmdArg is itself a temporary that is. passed to a RooFit function. The RooCmdArg contains only pointers to the. RooArgSets, so this pattern relies on the RooArgSet being kept alive. until the function end. In code, this pattern would look like this statement:. ```C++. func(RooCmdArg{RooArgSet{}});. ```. In C++, this works because the temporaries survive until the statement. end. But in Python, the inner temporary RooArgSet will be destructed. after the RooCmdArg has been constructed, leaving the RooCmdArg with. dangling pointers. To solve this problem, all the functions that can create a RooCmdArg. from a RooArgSet are overloaded with versions accepting rvalue. references. These overloads are indeed used for temporaries both in C++. and Python. In the rvalue reference versions, the temporaries are moved. into a vector of std::unique_ptr<TObject>. The constructed RooCmdArg. then takes ownership of this vector wrapped in a shared_ptr. This addresses Jira issues [ROOT-5022](https://sft.its.cern.ch/jira/browse/ROOT-5022), [ROOT-9861](https://sft.its.cern.ch/jira/browse/ROOT-9861), and [ROOT-4373](https://sft.its.cern.ch/jira/browse/ROOT-4373). Here some examples of C++ and Python code that work after this change:. ```C++. void minimal_example() {. using namespace RooFit;. RooRealVar x(""x"",""x"", 0.0, 1.0);. RooDataSet data{};. RooCmdArg * arg = new RooCmdArg(ProjWData(x, data));. ((RooArgSet*)arg->getObject(0))->Print();. std::cout << dynamic_cast<RooArgSet const*>(arg->getObject(0)) << std::endl;. delete arg;. }. ```. ```Python. import ROOT. x = ROOT.RooRealVar(""x"", ""x title"", 0, 0, 10). arg = ROOT.RooFit.NormSet( ROOT.RooArgSet(x) ). arg.getObject(0)[""x""].Print(). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8032
https://github.com/root-project/root/pull/8032:950,deployability,version,versions,950,"[RF] Implement mechanism in RooCmdArg to take ownership of temporaries; It happens often that one passes a temporary RooArgSet to the. RooCmdArg constructor, where the RooCmdArg is itself a temporary that is. passed to a RooFit function. The RooCmdArg contains only pointers to the. RooArgSets, so this pattern relies on the RooArgSet being kept alive. until the function end. In code, this pattern would look like this statement:. ```C++. func(RooCmdArg{RooArgSet{}});. ```. In C++, this works because the temporaries survive until the statement. end. But in Python, the inner temporary RooArgSet will be destructed. after the RooCmdArg has been constructed, leaving the RooCmdArg with. dangling pointers. To solve this problem, all the functions that can create a RooCmdArg. from a RooArgSet are overloaded with versions accepting rvalue. references. These overloads are indeed used for temporaries both in C++. and Python. In the rvalue reference versions, the temporaries are moved. into a vector of std::unique_ptr<TObject>. The constructed RooCmdArg. then takes ownership of this vector wrapped in a shared_ptr. This addresses Jira issues [ROOT-5022](https://sft.its.cern.ch/jira/browse/ROOT-5022), [ROOT-9861](https://sft.its.cern.ch/jira/browse/ROOT-9861), and [ROOT-4373](https://sft.its.cern.ch/jira/browse/ROOT-4373). Here some examples of C++ and Python code that work after this change:. ```C++. void minimal_example() {. using namespace RooFit;. RooRealVar x(""x"",""x"", 0.0, 1.0);. RooDataSet data{};. RooCmdArg * arg = new RooCmdArg(ProjWData(x, data));. ((RooArgSet*)arg->getObject(0))->Print();. std::cout << dynamic_cast<RooArgSet const*>(arg->getObject(0)) << std::endl;. delete arg;. }. ```. ```Python. import ROOT. x = ROOT.RooRealVar(""x"", ""x title"", 0, 0, 10). arg = ROOT.RooFit.NormSet( ROOT.RooArgSet(x) ). arg.getObject(0)[""x""].Print(). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8032
https://github.com/root-project/root/pull/8032:420,integrability,state,statement,420,"[RF] Implement mechanism in RooCmdArg to take ownership of temporaries; It happens often that one passes a temporary RooArgSet to the. RooCmdArg constructor, where the RooCmdArg is itself a temporary that is. passed to a RooFit function. The RooCmdArg contains only pointers to the. RooArgSets, so this pattern relies on the RooArgSet being kept alive. until the function end. In code, this pattern would look like this statement:. ```C++. func(RooCmdArg{RooArgSet{}});. ```. In C++, this works because the temporaries survive until the statement. end. But in Python, the inner temporary RooArgSet will be destructed. after the RooCmdArg has been constructed, leaving the RooCmdArg with. dangling pointers. To solve this problem, all the functions that can create a RooCmdArg. from a RooArgSet are overloaded with versions accepting rvalue. references. These overloads are indeed used for temporaries both in C++. and Python. In the rvalue reference versions, the temporaries are moved. into a vector of std::unique_ptr<TObject>. The constructed RooCmdArg. then takes ownership of this vector wrapped in a shared_ptr. This addresses Jira issues [ROOT-5022](https://sft.its.cern.ch/jira/browse/ROOT-5022), [ROOT-9861](https://sft.its.cern.ch/jira/browse/ROOT-9861), and [ROOT-4373](https://sft.its.cern.ch/jira/browse/ROOT-4373). Here some examples of C++ and Python code that work after this change:. ```C++. void minimal_example() {. using namespace RooFit;. RooRealVar x(""x"",""x"", 0.0, 1.0);. RooDataSet data{};. RooCmdArg * arg = new RooCmdArg(ProjWData(x, data));. ((RooArgSet*)arg->getObject(0))->Print();. std::cout << dynamic_cast<RooArgSet const*>(arg->getObject(0)) << std::endl;. delete arg;. }. ```. ```Python. import ROOT. x = ROOT.RooRealVar(""x"", ""x title"", 0, 0, 10). arg = ROOT.RooFit.NormSet( ROOT.RooArgSet(x) ). arg.getObject(0)[""x""].Print(). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8032
https://github.com/root-project/root/pull/8032:537,integrability,state,statement,537,"[RF] Implement mechanism in RooCmdArg to take ownership of temporaries; It happens often that one passes a temporary RooArgSet to the. RooCmdArg constructor, where the RooCmdArg is itself a temporary that is. passed to a RooFit function. The RooCmdArg contains only pointers to the. RooArgSets, so this pattern relies on the RooArgSet being kept alive. until the function end. In code, this pattern would look like this statement:. ```C++. func(RooCmdArg{RooArgSet{}});. ```. In C++, this works because the temporaries survive until the statement. end. But in Python, the inner temporary RooArgSet will be destructed. after the RooCmdArg has been constructed, leaving the RooCmdArg with. dangling pointers. To solve this problem, all the functions that can create a RooCmdArg. from a RooArgSet are overloaded with versions accepting rvalue. references. These overloads are indeed used for temporaries both in C++. and Python. In the rvalue reference versions, the temporaries are moved. into a vector of std::unique_ptr<TObject>. The constructed RooCmdArg. then takes ownership of this vector wrapped in a shared_ptr. This addresses Jira issues [ROOT-5022](https://sft.its.cern.ch/jira/browse/ROOT-5022), [ROOT-9861](https://sft.its.cern.ch/jira/browse/ROOT-9861), and [ROOT-4373](https://sft.its.cern.ch/jira/browse/ROOT-4373). Here some examples of C++ and Python code that work after this change:. ```C++. void minimal_example() {. using namespace RooFit;. RooRealVar x(""x"",""x"", 0.0, 1.0);. RooDataSet data{};. RooCmdArg * arg = new RooCmdArg(ProjWData(x, data));. ((RooArgSet*)arg->getObject(0))->Print();. std::cout << dynamic_cast<RooArgSet const*>(arg->getObject(0)) << std::endl;. delete arg;. }. ```. ```Python. import ROOT. x = ROOT.RooRealVar(""x"", ""x title"", 0, 0, 10). arg = ROOT.RooFit.NormSet( ROOT.RooArgSet(x) ). arg.getObject(0)[""x""].Print(). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8032
https://github.com/root-project/root/pull/8032:814,integrability,version,versions,814,"[RF] Implement mechanism in RooCmdArg to take ownership of temporaries; It happens often that one passes a temporary RooArgSet to the. RooCmdArg constructor, where the RooCmdArg is itself a temporary that is. passed to a RooFit function. The RooCmdArg contains only pointers to the. RooArgSets, so this pattern relies on the RooArgSet being kept alive. until the function end. In code, this pattern would look like this statement:. ```C++. func(RooCmdArg{RooArgSet{}});. ```. In C++, this works because the temporaries survive until the statement. end. But in Python, the inner temporary RooArgSet will be destructed. after the RooCmdArg has been constructed, leaving the RooCmdArg with. dangling pointers. To solve this problem, all the functions that can create a RooCmdArg. from a RooArgSet are overloaded with versions accepting rvalue. references. These overloads are indeed used for temporaries both in C++. and Python. In the rvalue reference versions, the temporaries are moved. into a vector of std::unique_ptr<TObject>. The constructed RooCmdArg. then takes ownership of this vector wrapped in a shared_ptr. This addresses Jira issues [ROOT-5022](https://sft.its.cern.ch/jira/browse/ROOT-5022), [ROOT-9861](https://sft.its.cern.ch/jira/browse/ROOT-9861), and [ROOT-4373](https://sft.its.cern.ch/jira/browse/ROOT-4373). Here some examples of C++ and Python code that work after this change:. ```C++. void minimal_example() {. using namespace RooFit;. RooRealVar x(""x"",""x"", 0.0, 1.0);. RooDataSet data{};. RooCmdArg * arg = new RooCmdArg(ProjWData(x, data));. ((RooArgSet*)arg->getObject(0))->Print();. std::cout << dynamic_cast<RooArgSet const*>(arg->getObject(0)) << std::endl;. delete arg;. }. ```. ```Python. import ROOT. x = ROOT.RooRealVar(""x"", ""x title"", 0, 0, 10). arg = ROOT.RooFit.NormSet( ROOT.RooArgSet(x) ). arg.getObject(0)[""x""].Print(). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8032
https://github.com/root-project/root/pull/8032:950,integrability,version,versions,950,"[RF] Implement mechanism in RooCmdArg to take ownership of temporaries; It happens often that one passes a temporary RooArgSet to the. RooCmdArg constructor, where the RooCmdArg is itself a temporary that is. passed to a RooFit function. The RooCmdArg contains only pointers to the. RooArgSets, so this pattern relies on the RooArgSet being kept alive. until the function end. In code, this pattern would look like this statement:. ```C++. func(RooCmdArg{RooArgSet{}});. ```. In C++, this works because the temporaries survive until the statement. end. But in Python, the inner temporary RooArgSet will be destructed. after the RooCmdArg has been constructed, leaving the RooCmdArg with. dangling pointers. To solve this problem, all the functions that can create a RooCmdArg. from a RooArgSet are overloaded with versions accepting rvalue. references. These overloads are indeed used for temporaries both in C++. and Python. In the rvalue reference versions, the temporaries are moved. into a vector of std::unique_ptr<TObject>. The constructed RooCmdArg. then takes ownership of this vector wrapped in a shared_ptr. This addresses Jira issues [ROOT-5022](https://sft.its.cern.ch/jira/browse/ROOT-5022), [ROOT-9861](https://sft.its.cern.ch/jira/browse/ROOT-9861), and [ROOT-4373](https://sft.its.cern.ch/jira/browse/ROOT-4373). Here some examples of C++ and Python code that work after this change:. ```C++. void minimal_example() {. using namespace RooFit;. RooRealVar x(""x"",""x"", 0.0, 1.0);. RooDataSet data{};. RooCmdArg * arg = new RooCmdArg(ProjWData(x, data));. ((RooArgSet*)arg->getObject(0))->Print();. std::cout << dynamic_cast<RooArgSet const*>(arg->getObject(0)) << std::endl;. delete arg;. }. ```. ```Python. import ROOT. x = ROOT.RooRealVar(""x"", ""x title"", 0, 0, 10). arg = ROOT.RooFit.NormSet( ROOT.RooArgSet(x) ). arg.getObject(0)[""x""].Print(). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8032
https://github.com/root-project/root/pull/8032:1093,integrability,wrap,wrapped,1093,"[RF] Implement mechanism in RooCmdArg to take ownership of temporaries; It happens often that one passes a temporary RooArgSet to the. RooCmdArg constructor, where the RooCmdArg is itself a temporary that is. passed to a RooFit function. The RooCmdArg contains only pointers to the. RooArgSets, so this pattern relies on the RooArgSet being kept alive. until the function end. In code, this pattern would look like this statement:. ```C++. func(RooCmdArg{RooArgSet{}});. ```. In C++, this works because the temporaries survive until the statement. end. But in Python, the inner temporary RooArgSet will be destructed. after the RooCmdArg has been constructed, leaving the RooCmdArg with. dangling pointers. To solve this problem, all the functions that can create a RooCmdArg. from a RooArgSet are overloaded with versions accepting rvalue. references. These overloads are indeed used for temporaries both in C++. and Python. In the rvalue reference versions, the temporaries are moved. into a vector of std::unique_ptr<TObject>. The constructed RooCmdArg. then takes ownership of this vector wrapped in a shared_ptr. This addresses Jira issues [ROOT-5022](https://sft.its.cern.ch/jira/browse/ROOT-5022), [ROOT-9861](https://sft.its.cern.ch/jira/browse/ROOT-9861), and [ROOT-4373](https://sft.its.cern.ch/jira/browse/ROOT-4373). Here some examples of C++ and Python code that work after this change:. ```C++. void minimal_example() {. using namespace RooFit;. RooRealVar x(""x"",""x"", 0.0, 1.0);. RooDataSet data{};. RooCmdArg * arg = new RooCmdArg(ProjWData(x, data));. ((RooArgSet*)arg->getObject(0))->Print();. std::cout << dynamic_cast<RooArgSet const*>(arg->getObject(0)) << std::endl;. delete arg;. }. ```. ```Python. import ROOT. x = ROOT.RooRealVar(""x"", ""x title"", 0, 0, 10). arg = ROOT.RooFit.NormSet( ROOT.RooArgSet(x) ). arg.getObject(0)[""x""].Print(). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8032
https://github.com/root-project/root/pull/8032:814,modifiability,version,versions,814,"[RF] Implement mechanism in RooCmdArg to take ownership of temporaries; It happens often that one passes a temporary RooArgSet to the. RooCmdArg constructor, where the RooCmdArg is itself a temporary that is. passed to a RooFit function. The RooCmdArg contains only pointers to the. RooArgSets, so this pattern relies on the RooArgSet being kept alive. until the function end. In code, this pattern would look like this statement:. ```C++. func(RooCmdArg{RooArgSet{}});. ```. In C++, this works because the temporaries survive until the statement. end. But in Python, the inner temporary RooArgSet will be destructed. after the RooCmdArg has been constructed, leaving the RooCmdArg with. dangling pointers. To solve this problem, all the functions that can create a RooCmdArg. from a RooArgSet are overloaded with versions accepting rvalue. references. These overloads are indeed used for temporaries both in C++. and Python. In the rvalue reference versions, the temporaries are moved. into a vector of std::unique_ptr<TObject>. The constructed RooCmdArg. then takes ownership of this vector wrapped in a shared_ptr. This addresses Jira issues [ROOT-5022](https://sft.its.cern.ch/jira/browse/ROOT-5022), [ROOT-9861](https://sft.its.cern.ch/jira/browse/ROOT-9861), and [ROOT-4373](https://sft.its.cern.ch/jira/browse/ROOT-4373). Here some examples of C++ and Python code that work after this change:. ```C++. void minimal_example() {. using namespace RooFit;. RooRealVar x(""x"",""x"", 0.0, 1.0);. RooDataSet data{};. RooCmdArg * arg = new RooCmdArg(ProjWData(x, data));. ((RooArgSet*)arg->getObject(0))->Print();. std::cout << dynamic_cast<RooArgSet const*>(arg->getObject(0)) << std::endl;. delete arg;. }. ```. ```Python. import ROOT. x = ROOT.RooRealVar(""x"", ""x title"", 0, 0, 10). arg = ROOT.RooFit.NormSet( ROOT.RooArgSet(x) ). arg.getObject(0)[""x""].Print(). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8032
https://github.com/root-project/root/pull/8032:950,modifiability,version,versions,950,"[RF] Implement mechanism in RooCmdArg to take ownership of temporaries; It happens often that one passes a temporary RooArgSet to the. RooCmdArg constructor, where the RooCmdArg is itself a temporary that is. passed to a RooFit function. The RooCmdArg contains only pointers to the. RooArgSets, so this pattern relies on the RooArgSet being kept alive. until the function end. In code, this pattern would look like this statement:. ```C++. func(RooCmdArg{RooArgSet{}});. ```. In C++, this works because the temporaries survive until the statement. end. But in Python, the inner temporary RooArgSet will be destructed. after the RooCmdArg has been constructed, leaving the RooCmdArg with. dangling pointers. To solve this problem, all the functions that can create a RooCmdArg. from a RooArgSet are overloaded with versions accepting rvalue. references. These overloads are indeed used for temporaries both in C++. and Python. In the rvalue reference versions, the temporaries are moved. into a vector of std::unique_ptr<TObject>. The constructed RooCmdArg. then takes ownership of this vector wrapped in a shared_ptr. This addresses Jira issues [ROOT-5022](https://sft.its.cern.ch/jira/browse/ROOT-5022), [ROOT-9861](https://sft.its.cern.ch/jira/browse/ROOT-9861), and [ROOT-4373](https://sft.its.cern.ch/jira/browse/ROOT-4373). Here some examples of C++ and Python code that work after this change:. ```C++. void minimal_example() {. using namespace RooFit;. RooRealVar x(""x"",""x"", 0.0, 1.0);. RooDataSet data{};. RooCmdArg * arg = new RooCmdArg(ProjWData(x, data));. ((RooArgSet*)arg->getObject(0))->Print();. std::cout << dynamic_cast<RooArgSet const*>(arg->getObject(0)) << std::endl;. delete arg;. }. ```. ```Python. import ROOT. x = ROOT.RooRealVar(""x"", ""x title"", 0, 0, 10). arg = ROOT.RooFit.NormSet( ROOT.RooArgSet(x) ). arg.getObject(0)[""x""].Print(). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8032
https://github.com/root-project/root/issues/8033:165,availability,error,error,165,"StreamerElement retrieved from file has incorrect element name for (some) arrays.; This was first reported at: https://cdcvs.fnal.gov/redmine/issues/25615. with the error:. ```. Fatal Root Error: TBranchElement::InitializeOffsets. Could not find the real data member 'fOutputNames' when constructing the branch '4anab::MVADescriptions_emtrkmichelid_emtrkmichel_Reco1.obj' [Likely an internal error, please report to the developers]. ROOT severity: 6000. ```. during the creation of a branch. With a class like:. ```. class mystrarray {. public:. string fDataTag; ///< offset= 0 type=300 ,stl=365, ctype=365, Tag of the reco data products (art::InputTag format). string fOutputInstance; ///< offset= 32 type=300 ,stl=365, ctype=365, Instance name of the feature vector collection. string fOutputNames[4]; ///< offset= 64 type=320 ,stl=365, ctype=365, Feature vector entries names/meaning. static short Class_Version() { return 10; }. };. ```. creating any split branch containing this kind of object (or collection there of) will work fine. But if a file containing the `StreamerInfo` for `mystrarray` version 10 before loading the library containing its dictionary then the `StreamerInfo` from the file (since it has the same checksum has the one that would come from the dictionary info) is used. However, instead of. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames[4]"". ```. it produces:. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames"". ```. Which does not match the expectation of `TBranchElement::InitializeOffsets`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8033
https://github.com/root-project/root/issues/8033:189,availability,Error,Error,189,"StreamerElement retrieved from file has incorrect element name for (some) arrays.; This was first reported at: https://cdcvs.fnal.gov/redmine/issues/25615. with the error:. ```. Fatal Root Error: TBranchElement::InitializeOffsets. Could not find the real data member 'fOutputNames' when constructing the branch '4anab::MVADescriptions_emtrkmichelid_emtrkmichel_Reco1.obj' [Likely an internal error, please report to the developers]. ROOT severity: 6000. ```. during the creation of a branch. With a class like:. ```. class mystrarray {. public:. string fDataTag; ///< offset= 0 type=300 ,stl=365, ctype=365, Tag of the reco data products (art::InputTag format). string fOutputInstance; ///< offset= 32 type=300 ,stl=365, ctype=365, Instance name of the feature vector collection. string fOutputNames[4]; ///< offset= 64 type=320 ,stl=365, ctype=365, Feature vector entries names/meaning. static short Class_Version() { return 10; }. };. ```. creating any split branch containing this kind of object (or collection there of) will work fine. But if a file containing the `StreamerInfo` for `mystrarray` version 10 before loading the library containing its dictionary then the `StreamerInfo` from the file (since it has the same checksum has the one that would come from the dictionary info) is used. However, instead of. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames[4]"". ```. it produces:. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames"". ```. Which does not match the expectation of `TBranchElement::InitializeOffsets`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8033
https://github.com/root-project/root/issues/8033:392,availability,error,error,392,"StreamerElement retrieved from file has incorrect element name for (some) arrays.; This was first reported at: https://cdcvs.fnal.gov/redmine/issues/25615. with the error:. ```. Fatal Root Error: TBranchElement::InitializeOffsets. Could not find the real data member 'fOutputNames' when constructing the branch '4anab::MVADescriptions_emtrkmichelid_emtrkmichel_Reco1.obj' [Likely an internal error, please report to the developers]. ROOT severity: 6000. ```. during the creation of a branch. With a class like:. ```. class mystrarray {. public:. string fDataTag; ///< offset= 0 type=300 ,stl=365, ctype=365, Tag of the reco data products (art::InputTag format). string fOutputInstance; ///< offset= 32 type=300 ,stl=365, ctype=365, Instance name of the feature vector collection. string fOutputNames[4]; ///< offset= 64 type=320 ,stl=365, ctype=365, Feature vector entries names/meaning. static short Class_Version() { return 10; }. };. ```. creating any split branch containing this kind of object (or collection there of) will work fine. But if a file containing the `StreamerInfo` for `mystrarray` version 10 before loading the library containing its dictionary then the `StreamerInfo` from the file (since it has the same checksum has the one that would come from the dictionary info) is used. However, instead of. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames[4]"". ```. it produces:. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames"". ```. Which does not match the expectation of `TBranchElement::InitializeOffsets`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8033
https://github.com/root-project/root/issues/8033:968,deployability,contain,containing,968,"StreamerElement retrieved from file has incorrect element name for (some) arrays.; This was first reported at: https://cdcvs.fnal.gov/redmine/issues/25615. with the error:. ```. Fatal Root Error: TBranchElement::InitializeOffsets. Could not find the real data member 'fOutputNames' when constructing the branch '4anab::MVADescriptions_emtrkmichelid_emtrkmichel_Reco1.obj' [Likely an internal error, please report to the developers]. ROOT severity: 6000. ```. during the creation of a branch. With a class like:. ```. class mystrarray {. public:. string fDataTag; ///< offset= 0 type=300 ,stl=365, ctype=365, Tag of the reco data products (art::InputTag format). string fOutputInstance; ///< offset= 32 type=300 ,stl=365, ctype=365, Instance name of the feature vector collection. string fOutputNames[4]; ///< offset= 64 type=320 ,stl=365, ctype=365, Feature vector entries names/meaning. static short Class_Version() { return 10; }. };. ```. creating any split branch containing this kind of object (or collection there of) will work fine. But if a file containing the `StreamerInfo` for `mystrarray` version 10 before loading the library containing its dictionary then the `StreamerInfo` from the file (since it has the same checksum has the one that would come from the dictionary info) is used. However, instead of. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames[4]"". ```. it produces:. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames"". ```. Which does not match the expectation of `TBranchElement::InitializeOffsets`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8033
https://github.com/root-project/root/issues/8033:1054,deployability,contain,containing,1054,"StreamerElement retrieved from file has incorrect element name for (some) arrays.; This was first reported at: https://cdcvs.fnal.gov/redmine/issues/25615. with the error:. ```. Fatal Root Error: TBranchElement::InitializeOffsets. Could not find the real data member 'fOutputNames' when constructing the branch '4anab::MVADescriptions_emtrkmichelid_emtrkmichel_Reco1.obj' [Likely an internal error, please report to the developers]. ROOT severity: 6000. ```. during the creation of a branch. With a class like:. ```. class mystrarray {. public:. string fDataTag; ///< offset= 0 type=300 ,stl=365, ctype=365, Tag of the reco data products (art::InputTag format). string fOutputInstance; ///< offset= 32 type=300 ,stl=365, ctype=365, Instance name of the feature vector collection. string fOutputNames[4]; ///< offset= 64 type=320 ,stl=365, ctype=365, Feature vector entries names/meaning. static short Class_Version() { return 10; }. };. ```. creating any split branch containing this kind of object (or collection there of) will work fine. But if a file containing the `StreamerInfo` for `mystrarray` version 10 before loading the library containing its dictionary then the `StreamerInfo` from the file (since it has the same checksum has the one that would come from the dictionary info) is used. However, instead of. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames[4]"". ```. it produces:. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames"". ```. Which does not match the expectation of `TBranchElement::InitializeOffsets`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8033
https://github.com/root-project/root/issues/8033:1101,deployability,version,version,1101,"StreamerElement retrieved from file has incorrect element name for (some) arrays.; This was first reported at: https://cdcvs.fnal.gov/redmine/issues/25615. with the error:. ```. Fatal Root Error: TBranchElement::InitializeOffsets. Could not find the real data member 'fOutputNames' when constructing the branch '4anab::MVADescriptions_emtrkmichelid_emtrkmichel_Reco1.obj' [Likely an internal error, please report to the developers]. ROOT severity: 6000. ```. during the creation of a branch. With a class like:. ```. class mystrarray {. public:. string fDataTag; ///< offset= 0 type=300 ,stl=365, ctype=365, Tag of the reco data products (art::InputTag format). string fOutputInstance; ///< offset= 32 type=300 ,stl=365, ctype=365, Instance name of the feature vector collection. string fOutputNames[4]; ///< offset= 64 type=320 ,stl=365, ctype=365, Feature vector entries names/meaning. static short Class_Version() { return 10; }. };. ```. creating any split branch containing this kind of object (or collection there of) will work fine. But if a file containing the `StreamerInfo` for `mystrarray` version 10 before loading the library containing its dictionary then the `StreamerInfo` from the file (since it has the same checksum has the one that would come from the dictionary info) is used. However, instead of. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames[4]"". ```. it produces:. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames"". ```. Which does not match the expectation of `TBranchElement::InitializeOffsets`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8033
https://github.com/root-project/root/issues/8033:1139,deployability,contain,containing,1139,"StreamerElement retrieved from file has incorrect element name for (some) arrays.; This was first reported at: https://cdcvs.fnal.gov/redmine/issues/25615. with the error:. ```. Fatal Root Error: TBranchElement::InitializeOffsets. Could not find the real data member 'fOutputNames' when constructing the branch '4anab::MVADescriptions_emtrkmichelid_emtrkmichel_Reco1.obj' [Likely an internal error, please report to the developers]. ROOT severity: 6000. ```. during the creation of a branch. With a class like:. ```. class mystrarray {. public:. string fDataTag; ///< offset= 0 type=300 ,stl=365, ctype=365, Tag of the reco data products (art::InputTag format). string fOutputInstance; ///< offset= 32 type=300 ,stl=365, ctype=365, Instance name of the feature vector collection. string fOutputNames[4]; ///< offset= 64 type=320 ,stl=365, ctype=365, Feature vector entries names/meaning. static short Class_Version() { return 10; }. };. ```. creating any split branch containing this kind of object (or collection there of) will work fine. But if a file containing the `StreamerInfo` for `mystrarray` version 10 before loading the library containing its dictionary then the `StreamerInfo` from the file (since it has the same checksum has the one that would come from the dictionary info) is used. However, instead of. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames[4]"". ```. it produces:. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames"". ```. Which does not match the expectation of `TBranchElement::InitializeOffsets`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8033
https://github.com/root-project/root/issues/8033:1119,energy efficiency,load,loading,1119,"StreamerElement retrieved from file has incorrect element name for (some) arrays.; This was first reported at: https://cdcvs.fnal.gov/redmine/issues/25615. with the error:. ```. Fatal Root Error: TBranchElement::InitializeOffsets. Could not find the real data member 'fOutputNames' when constructing the branch '4anab::MVADescriptions_emtrkmichelid_emtrkmichel_Reco1.obj' [Likely an internal error, please report to the developers]. ROOT severity: 6000. ```. during the creation of a branch. With a class like:. ```. class mystrarray {. public:. string fDataTag; ///< offset= 0 type=300 ,stl=365, ctype=365, Tag of the reco data products (art::InputTag format). string fOutputInstance; ///< offset= 32 type=300 ,stl=365, ctype=365, Instance name of the feature vector collection. string fOutputNames[4]; ///< offset= 64 type=320 ,stl=365, ctype=365, Feature vector entries names/meaning. static short Class_Version() { return 10; }. };. ```. creating any split branch containing this kind of object (or collection there of) will work fine. But if a file containing the `StreamerInfo` for `mystrarray` version 10 before loading the library containing its dictionary then the `StreamerInfo` from the file (since it has the same checksum has the one that would come from the dictionary info) is used. However, instead of. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames[4]"". ```. it produces:. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames"". ```. Which does not match the expectation of `TBranchElement::InitializeOffsets`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8033
https://github.com/root-project/root/issues/8033:537,integrability,pub,public,537,"StreamerElement retrieved from file has incorrect element name for (some) arrays.; This was first reported at: https://cdcvs.fnal.gov/redmine/issues/25615. with the error:. ```. Fatal Root Error: TBranchElement::InitializeOffsets. Could not find the real data member 'fOutputNames' when constructing the branch '4anab::MVADescriptions_emtrkmichelid_emtrkmichel_Reco1.obj' [Likely an internal error, please report to the developers]. ROOT severity: 6000. ```. during the creation of a branch. With a class like:. ```. class mystrarray {. public:. string fDataTag; ///< offset= 0 type=300 ,stl=365, ctype=365, Tag of the reco data products (art::InputTag format). string fOutputInstance; ///< offset= 32 type=300 ,stl=365, ctype=365, Instance name of the feature vector collection. string fOutputNames[4]; ///< offset= 64 type=320 ,stl=365, ctype=365, Feature vector entries names/meaning. static short Class_Version() { return 10; }. };. ```. creating any split branch containing this kind of object (or collection there of) will work fine. But if a file containing the `StreamerInfo` for `mystrarray` version 10 before loading the library containing its dictionary then the `StreamerInfo` from the file (since it has the same checksum has the one that would come from the dictionary info) is used. However, instead of. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames[4]"". ```. it produces:. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames"". ```. Which does not match the expectation of `TBranchElement::InitializeOffsets`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8033
https://github.com/root-project/root/issues/8033:1101,integrability,version,version,1101,"StreamerElement retrieved from file has incorrect element name for (some) arrays.; This was first reported at: https://cdcvs.fnal.gov/redmine/issues/25615. with the error:. ```. Fatal Root Error: TBranchElement::InitializeOffsets. Could not find the real data member 'fOutputNames' when constructing the branch '4anab::MVADescriptions_emtrkmichelid_emtrkmichel_Reco1.obj' [Likely an internal error, please report to the developers]. ROOT severity: 6000. ```. during the creation of a branch. With a class like:. ```. class mystrarray {. public:. string fDataTag; ///< offset= 0 type=300 ,stl=365, ctype=365, Tag of the reco data products (art::InputTag format). string fOutputInstance; ///< offset= 32 type=300 ,stl=365, ctype=365, Instance name of the feature vector collection. string fOutputNames[4]; ///< offset= 64 type=320 ,stl=365, ctype=365, Feature vector entries names/meaning. static short Class_Version() { return 10; }. };. ```. creating any split branch containing this kind of object (or collection there of) will work fine. But if a file containing the `StreamerInfo` for `mystrarray` version 10 before loading the library containing its dictionary then the `StreamerInfo` from the file (since it has the same checksum has the one that would come from the dictionary info) is used. However, instead of. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames[4]"". ```. it produces:. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames"". ```. Which does not match the expectation of `TBranchElement::InitializeOffsets`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8033
https://github.com/root-project/root/issues/8033:653,interoperability,format,format,653,"StreamerElement retrieved from file has incorrect element name for (some) arrays.; This was first reported at: https://cdcvs.fnal.gov/redmine/issues/25615. with the error:. ```. Fatal Root Error: TBranchElement::InitializeOffsets. Could not find the real data member 'fOutputNames' when constructing the branch '4anab::MVADescriptions_emtrkmichelid_emtrkmichel_Reco1.obj' [Likely an internal error, please report to the developers]. ROOT severity: 6000. ```. during the creation of a branch. With a class like:. ```. class mystrarray {. public:. string fDataTag; ///< offset= 0 type=300 ,stl=365, ctype=365, Tag of the reco data products (art::InputTag format). string fOutputInstance; ///< offset= 32 type=300 ,stl=365, ctype=365, Instance name of the feature vector collection. string fOutputNames[4]; ///< offset= 64 type=320 ,stl=365, ctype=365, Feature vector entries names/meaning. static short Class_Version() { return 10; }. };. ```. creating any split branch containing this kind of object (or collection there of) will work fine. But if a file containing the `StreamerInfo` for `mystrarray` version 10 before loading the library containing its dictionary then the `StreamerInfo` from the file (since it has the same checksum has the one that would come from the dictionary info) is used. However, instead of. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames[4]"". ```. it produces:. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames"". ```. Which does not match the expectation of `TBranchElement::InitializeOffsets`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8033
https://github.com/root-project/root/issues/8033:1101,modifiability,version,version,1101,"StreamerElement retrieved from file has incorrect element name for (some) arrays.; This was first reported at: https://cdcvs.fnal.gov/redmine/issues/25615. with the error:. ```. Fatal Root Error: TBranchElement::InitializeOffsets. Could not find the real data member 'fOutputNames' when constructing the branch '4anab::MVADescriptions_emtrkmichelid_emtrkmichel_Reco1.obj' [Likely an internal error, please report to the developers]. ROOT severity: 6000. ```. during the creation of a branch. With a class like:. ```. class mystrarray {. public:. string fDataTag; ///< offset= 0 type=300 ,stl=365, ctype=365, Tag of the reco data products (art::InputTag format). string fOutputInstance; ///< offset= 32 type=300 ,stl=365, ctype=365, Instance name of the feature vector collection. string fOutputNames[4]; ///< offset= 64 type=320 ,stl=365, ctype=365, Feature vector entries names/meaning. static short Class_Version() { return 10; }. };. ```. creating any split branch containing this kind of object (or collection there of) will work fine. But if a file containing the `StreamerInfo` for `mystrarray` version 10 before loading the library containing its dictionary then the `StreamerInfo` from the file (since it has the same checksum has the one that would come from the dictionary info) is used. However, instead of. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames[4]"". ```. it produces:. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames"". ```. Which does not match the expectation of `TBranchElement::InitializeOffsets`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8033
https://github.com/root-project/root/issues/8033:165,performance,error,error,165,"StreamerElement retrieved from file has incorrect element name for (some) arrays.; This was first reported at: https://cdcvs.fnal.gov/redmine/issues/25615. with the error:. ```. Fatal Root Error: TBranchElement::InitializeOffsets. Could not find the real data member 'fOutputNames' when constructing the branch '4anab::MVADescriptions_emtrkmichelid_emtrkmichel_Reco1.obj' [Likely an internal error, please report to the developers]. ROOT severity: 6000. ```. during the creation of a branch. With a class like:. ```. class mystrarray {. public:. string fDataTag; ///< offset= 0 type=300 ,stl=365, ctype=365, Tag of the reco data products (art::InputTag format). string fOutputInstance; ///< offset= 32 type=300 ,stl=365, ctype=365, Instance name of the feature vector collection. string fOutputNames[4]; ///< offset= 64 type=320 ,stl=365, ctype=365, Feature vector entries names/meaning. static short Class_Version() { return 10; }. };. ```. creating any split branch containing this kind of object (or collection there of) will work fine. But if a file containing the `StreamerInfo` for `mystrarray` version 10 before loading the library containing its dictionary then the `StreamerInfo` from the file (since it has the same checksum has the one that would come from the dictionary info) is used. However, instead of. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames[4]"". ```. it produces:. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames"". ```. Which does not match the expectation of `TBranchElement::InitializeOffsets`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8033
https://github.com/root-project/root/issues/8033:189,performance,Error,Error,189,"StreamerElement retrieved from file has incorrect element name for (some) arrays.; This was first reported at: https://cdcvs.fnal.gov/redmine/issues/25615. with the error:. ```. Fatal Root Error: TBranchElement::InitializeOffsets. Could not find the real data member 'fOutputNames' when constructing the branch '4anab::MVADescriptions_emtrkmichelid_emtrkmichel_Reco1.obj' [Likely an internal error, please report to the developers]. ROOT severity: 6000. ```. during the creation of a branch. With a class like:. ```. class mystrarray {. public:. string fDataTag; ///< offset= 0 type=300 ,stl=365, ctype=365, Tag of the reco data products (art::InputTag format). string fOutputInstance; ///< offset= 32 type=300 ,stl=365, ctype=365, Instance name of the feature vector collection. string fOutputNames[4]; ///< offset= 64 type=320 ,stl=365, ctype=365, Feature vector entries names/meaning. static short Class_Version() { return 10; }. };. ```. creating any split branch containing this kind of object (or collection there of) will work fine. But if a file containing the `StreamerInfo` for `mystrarray` version 10 before loading the library containing its dictionary then the `StreamerInfo` from the file (since it has the same checksum has the one that would come from the dictionary info) is used. However, instead of. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames[4]"". ```. it produces:. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames"". ```. Which does not match the expectation of `TBranchElement::InitializeOffsets`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8033
https://github.com/root-project/root/issues/8033:392,performance,error,error,392,"StreamerElement retrieved from file has incorrect element name for (some) arrays.; This was first reported at: https://cdcvs.fnal.gov/redmine/issues/25615. with the error:. ```. Fatal Root Error: TBranchElement::InitializeOffsets. Could not find the real data member 'fOutputNames' when constructing the branch '4anab::MVADescriptions_emtrkmichelid_emtrkmichel_Reco1.obj' [Likely an internal error, please report to the developers]. ROOT severity: 6000. ```. during the creation of a branch. With a class like:. ```. class mystrarray {. public:. string fDataTag; ///< offset= 0 type=300 ,stl=365, ctype=365, Tag of the reco data products (art::InputTag format). string fOutputInstance; ///< offset= 32 type=300 ,stl=365, ctype=365, Instance name of the feature vector collection. string fOutputNames[4]; ///< offset= 64 type=320 ,stl=365, ctype=365, Feature vector entries names/meaning. static short Class_Version() { return 10; }. };. ```. creating any split branch containing this kind of object (or collection there of) will work fine. But if a file containing the `StreamerInfo` for `mystrarray` version 10 before loading the library containing its dictionary then the `StreamerInfo` from the file (since it has the same checksum has the one that would come from the dictionary info) is used. However, instead of. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames[4]"". ```. it produces:. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames"". ```. Which does not match the expectation of `TBranchElement::InitializeOffsets`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8033
https://github.com/root-project/root/issues/8033:1119,performance,load,loading,1119,"StreamerElement retrieved from file has incorrect element name for (some) arrays.; This was first reported at: https://cdcvs.fnal.gov/redmine/issues/25615. with the error:. ```. Fatal Root Error: TBranchElement::InitializeOffsets. Could not find the real data member 'fOutputNames' when constructing the branch '4anab::MVADescriptions_emtrkmichelid_emtrkmichel_Reco1.obj' [Likely an internal error, please report to the developers]. ROOT severity: 6000. ```. during the creation of a branch. With a class like:. ```. class mystrarray {. public:. string fDataTag; ///< offset= 0 type=300 ,stl=365, ctype=365, Tag of the reco data products (art::InputTag format). string fOutputInstance; ///< offset= 32 type=300 ,stl=365, ctype=365, Instance name of the feature vector collection. string fOutputNames[4]; ///< offset= 64 type=320 ,stl=365, ctype=365, Feature vector entries names/meaning. static short Class_Version() { return 10; }. };. ```. creating any split branch containing this kind of object (or collection there of) will work fine. But if a file containing the `StreamerInfo` for `mystrarray` version 10 before loading the library containing its dictionary then the `StreamerInfo` from the file (since it has the same checksum has the one that would come from the dictionary info) is used. However, instead of. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames[4]"". ```. it produces:. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames"". ```. Which does not match the expectation of `TBranchElement::InitializeOffsets`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8033
https://github.com/root-project/root/issues/8033:1604,reliability,doe,does,1604,"StreamerElement retrieved from file has incorrect element name for (some) arrays.; This was first reported at: https://cdcvs.fnal.gov/redmine/issues/25615. with the error:. ```. Fatal Root Error: TBranchElement::InitializeOffsets. Could not find the real data member 'fOutputNames' when constructing the branch '4anab::MVADescriptions_emtrkmichelid_emtrkmichel_Reco1.obj' [Likely an internal error, please report to the developers]. ROOT severity: 6000. ```. during the creation of a branch. With a class like:. ```. class mystrarray {. public:. string fDataTag; ///< offset= 0 type=300 ,stl=365, ctype=365, Tag of the reco data products (art::InputTag format). string fOutputInstance; ///< offset= 32 type=300 ,stl=365, ctype=365, Instance name of the feature vector collection. string fOutputNames[4]; ///< offset= 64 type=320 ,stl=365, ctype=365, Feature vector entries names/meaning. static short Class_Version() { return 10; }. };. ```. creating any split branch containing this kind of object (or collection there of) will work fine. But if a file containing the `StreamerInfo` for `mystrarray` version 10 before loading the library containing its dictionary then the `StreamerInfo` from the file (since it has the same checksum has the one that would come from the dictionary info) is used. However, instead of. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames[4]"". ```. it produces:. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames"". ```. Which does not match the expectation of `TBranchElement::InitializeOffsets`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8033
https://github.com/root-project/root/issues/8033:165,safety,error,error,165,"StreamerElement retrieved from file has incorrect element name for (some) arrays.; This was first reported at: https://cdcvs.fnal.gov/redmine/issues/25615. with the error:. ```. Fatal Root Error: TBranchElement::InitializeOffsets. Could not find the real data member 'fOutputNames' when constructing the branch '4anab::MVADescriptions_emtrkmichelid_emtrkmichel_Reco1.obj' [Likely an internal error, please report to the developers]. ROOT severity: 6000. ```. during the creation of a branch. With a class like:. ```. class mystrarray {. public:. string fDataTag; ///< offset= 0 type=300 ,stl=365, ctype=365, Tag of the reco data products (art::InputTag format). string fOutputInstance; ///< offset= 32 type=300 ,stl=365, ctype=365, Instance name of the feature vector collection. string fOutputNames[4]; ///< offset= 64 type=320 ,stl=365, ctype=365, Feature vector entries names/meaning. static short Class_Version() { return 10; }. };. ```. creating any split branch containing this kind of object (or collection there of) will work fine. But if a file containing the `StreamerInfo` for `mystrarray` version 10 before loading the library containing its dictionary then the `StreamerInfo` from the file (since it has the same checksum has the one that would come from the dictionary info) is used. However, instead of. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames[4]"". ```. it produces:. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames"". ```. Which does not match the expectation of `TBranchElement::InitializeOffsets`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8033
https://github.com/root-project/root/issues/8033:189,safety,Error,Error,189,"StreamerElement retrieved from file has incorrect element name for (some) arrays.; This was first reported at: https://cdcvs.fnal.gov/redmine/issues/25615. with the error:. ```. Fatal Root Error: TBranchElement::InitializeOffsets. Could not find the real data member 'fOutputNames' when constructing the branch '4anab::MVADescriptions_emtrkmichelid_emtrkmichel_Reco1.obj' [Likely an internal error, please report to the developers]. ROOT severity: 6000. ```. during the creation of a branch. With a class like:. ```. class mystrarray {. public:. string fDataTag; ///< offset= 0 type=300 ,stl=365, ctype=365, Tag of the reco data products (art::InputTag format). string fOutputInstance; ///< offset= 32 type=300 ,stl=365, ctype=365, Instance name of the feature vector collection. string fOutputNames[4]; ///< offset= 64 type=320 ,stl=365, ctype=365, Feature vector entries names/meaning. static short Class_Version() { return 10; }. };. ```. creating any split branch containing this kind of object (or collection there of) will work fine. But if a file containing the `StreamerInfo` for `mystrarray` version 10 before loading the library containing its dictionary then the `StreamerInfo` from the file (since it has the same checksum has the one that would come from the dictionary info) is used. However, instead of. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames[4]"". ```. it produces:. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames"". ```. Which does not match the expectation of `TBranchElement::InitializeOffsets`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8033
https://github.com/root-project/root/issues/8033:392,safety,error,error,392,"StreamerElement retrieved from file has incorrect element name for (some) arrays.; This was first reported at: https://cdcvs.fnal.gov/redmine/issues/25615. with the error:. ```. Fatal Root Error: TBranchElement::InitializeOffsets. Could not find the real data member 'fOutputNames' when constructing the branch '4anab::MVADescriptions_emtrkmichelid_emtrkmichel_Reco1.obj' [Likely an internal error, please report to the developers]. ROOT severity: 6000. ```. during the creation of a branch. With a class like:. ```. class mystrarray {. public:. string fDataTag; ///< offset= 0 type=300 ,stl=365, ctype=365, Tag of the reco data products (art::InputTag format). string fOutputInstance; ///< offset= 32 type=300 ,stl=365, ctype=365, Instance name of the feature vector collection. string fOutputNames[4]; ///< offset= 64 type=320 ,stl=365, ctype=365, Feature vector entries names/meaning. static short Class_Version() { return 10; }. };. ```. creating any split branch containing this kind of object (or collection there of) will work fine. But if a file containing the `StreamerInfo` for `mystrarray` version 10 before loading the library containing its dictionary then the `StreamerInfo` from the file (since it has the same checksum has the one that would come from the dictionary info) is used. However, instead of. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames[4]"". ```. it produces:. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames"". ```. Which does not match the expectation of `TBranchElement::InitializeOffsets`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8033
https://github.com/root-project/root/issues/8033:644,safety,Input,InputTag,644,"StreamerElement retrieved from file has incorrect element name for (some) arrays.; This was first reported at: https://cdcvs.fnal.gov/redmine/issues/25615. with the error:. ```. Fatal Root Error: TBranchElement::InitializeOffsets. Could not find the real data member 'fOutputNames' when constructing the branch '4anab::MVADescriptions_emtrkmichelid_emtrkmichel_Reco1.obj' [Likely an internal error, please report to the developers]. ROOT severity: 6000. ```. during the creation of a branch. With a class like:. ```. class mystrarray {. public:. string fDataTag; ///< offset= 0 type=300 ,stl=365, ctype=365, Tag of the reco data products (art::InputTag format). string fOutputInstance; ///< offset= 32 type=300 ,stl=365, ctype=365, Instance name of the feature vector collection. string fOutputNames[4]; ///< offset= 64 type=320 ,stl=365, ctype=365, Feature vector entries names/meaning. static short Class_Version() { return 10; }. };. ```. creating any split branch containing this kind of object (or collection there of) will work fine. But if a file containing the `StreamerInfo` for `mystrarray` version 10 before loading the library containing its dictionary then the `StreamerInfo` from the file (since it has the same checksum has the one that would come from the dictionary info) is used. However, instead of. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames[4]"". ```. it produces:. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames"". ```. Which does not match the expectation of `TBranchElement::InitializeOffsets`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8033
https://github.com/root-project/root/issues/8033:1226,security,checksum,checksum,1226,"StreamerElement retrieved from file has incorrect element name for (some) arrays.; This was first reported at: https://cdcvs.fnal.gov/redmine/issues/25615. with the error:. ```. Fatal Root Error: TBranchElement::InitializeOffsets. Could not find the real data member 'fOutputNames' when constructing the branch '4anab::MVADescriptions_emtrkmichelid_emtrkmichel_Reco1.obj' [Likely an internal error, please report to the developers]. ROOT severity: 6000. ```. during the creation of a branch. With a class like:. ```. class mystrarray {. public:. string fDataTag; ///< offset= 0 type=300 ,stl=365, ctype=365, Tag of the reco data products (art::InputTag format). string fOutputInstance; ///< offset= 32 type=300 ,stl=365, ctype=365, Instance name of the feature vector collection. string fOutputNames[4]; ///< offset= 64 type=320 ,stl=365, ctype=365, Feature vector entries names/meaning. static short Class_Version() { return 10; }. };. ```. creating any split branch containing this kind of object (or collection there of) will work fine. But if a file containing the `StreamerInfo` for `mystrarray` version 10 before loading the library containing its dictionary then the `StreamerInfo` from the file (since it has the same checksum has the one that would come from the dictionary info) is used. However, instead of. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames[4]"". ```. it produces:. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames"". ```. Which does not match the expectation of `TBranchElement::InitializeOffsets`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8033
https://github.com/root-project/root/issues/8033:165,usability,error,error,165,"StreamerElement retrieved from file has incorrect element name for (some) arrays.; This was first reported at: https://cdcvs.fnal.gov/redmine/issues/25615. with the error:. ```. Fatal Root Error: TBranchElement::InitializeOffsets. Could not find the real data member 'fOutputNames' when constructing the branch '4anab::MVADescriptions_emtrkmichelid_emtrkmichel_Reco1.obj' [Likely an internal error, please report to the developers]. ROOT severity: 6000. ```. during the creation of a branch. With a class like:. ```. class mystrarray {. public:. string fDataTag; ///< offset= 0 type=300 ,stl=365, ctype=365, Tag of the reco data products (art::InputTag format). string fOutputInstance; ///< offset= 32 type=300 ,stl=365, ctype=365, Instance name of the feature vector collection. string fOutputNames[4]; ///< offset= 64 type=320 ,stl=365, ctype=365, Feature vector entries names/meaning. static short Class_Version() { return 10; }. };. ```. creating any split branch containing this kind of object (or collection there of) will work fine. But if a file containing the `StreamerInfo` for `mystrarray` version 10 before loading the library containing its dictionary then the `StreamerInfo` from the file (since it has the same checksum has the one that would come from the dictionary info) is used. However, instead of. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames[4]"". ```. it produces:. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames"". ```. Which does not match the expectation of `TBranchElement::InitializeOffsets`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8033
https://github.com/root-project/root/issues/8033:189,usability,Error,Error,189,"StreamerElement retrieved from file has incorrect element name for (some) arrays.; This was first reported at: https://cdcvs.fnal.gov/redmine/issues/25615. with the error:. ```. Fatal Root Error: TBranchElement::InitializeOffsets. Could not find the real data member 'fOutputNames' when constructing the branch '4anab::MVADescriptions_emtrkmichelid_emtrkmichel_Reco1.obj' [Likely an internal error, please report to the developers]. ROOT severity: 6000. ```. during the creation of a branch. With a class like:. ```. class mystrarray {. public:. string fDataTag; ///< offset= 0 type=300 ,stl=365, ctype=365, Tag of the reco data products (art::InputTag format). string fOutputInstance; ///< offset= 32 type=300 ,stl=365, ctype=365, Instance name of the feature vector collection. string fOutputNames[4]; ///< offset= 64 type=320 ,stl=365, ctype=365, Feature vector entries names/meaning. static short Class_Version() { return 10; }. };. ```. creating any split branch containing this kind of object (or collection there of) will work fine. But if a file containing the `StreamerInfo` for `mystrarray` version 10 before loading the library containing its dictionary then the `StreamerInfo` from the file (since it has the same checksum has the one that would come from the dictionary info) is used. However, instead of. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames[4]"". ```. it produces:. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames"". ```. Which does not match the expectation of `TBranchElement::InitializeOffsets`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8033
https://github.com/root-project/root/issues/8033:392,usability,error,error,392,"StreamerElement retrieved from file has incorrect element name for (some) arrays.; This was first reported at: https://cdcvs.fnal.gov/redmine/issues/25615. with the error:. ```. Fatal Root Error: TBranchElement::InitializeOffsets. Could not find the real data member 'fOutputNames' when constructing the branch '4anab::MVADescriptions_emtrkmichelid_emtrkmichel_Reco1.obj' [Likely an internal error, please report to the developers]. ROOT severity: 6000. ```. during the creation of a branch. With a class like:. ```. class mystrarray {. public:. string fDataTag; ///< offset= 0 type=300 ,stl=365, ctype=365, Tag of the reco data products (art::InputTag format). string fOutputInstance; ///< offset= 32 type=300 ,stl=365, ctype=365, Instance name of the feature vector collection. string fOutputNames[4]; ///< offset= 64 type=320 ,stl=365, ctype=365, Feature vector entries names/meaning. static short Class_Version() { return 10; }. };. ```. creating any split branch containing this kind of object (or collection there of) will work fine. But if a file containing the `StreamerInfo` for `mystrarray` version 10 before loading the library containing its dictionary then the `StreamerInfo` from the file (since it has the same checksum has the one that would come from the dictionary info) is used. However, instead of. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames[4]"". ```. it produces:. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames"". ```. Which does not match the expectation of `TBranchElement::InitializeOffsets`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8033
https://github.com/root-project/root/issues/8033:644,usability,Input,InputTag,644,"StreamerElement retrieved from file has incorrect element name for (some) arrays.; This was first reported at: https://cdcvs.fnal.gov/redmine/issues/25615. with the error:. ```. Fatal Root Error: TBranchElement::InitializeOffsets. Could not find the real data member 'fOutputNames' when constructing the branch '4anab::MVADescriptions_emtrkmichelid_emtrkmichel_Reco1.obj' [Likely an internal error, please report to the developers]. ROOT severity: 6000. ```. during the creation of a branch. With a class like:. ```. class mystrarray {. public:. string fDataTag; ///< offset= 0 type=300 ,stl=365, ctype=365, Tag of the reco data products (art::InputTag format). string fOutputInstance; ///< offset= 32 type=300 ,stl=365, ctype=365, Instance name of the feature vector collection. string fOutputNames[4]; ///< offset= 64 type=320 ,stl=365, ctype=365, Feature vector entries names/meaning. static short Class_Version() { return 10; }. };. ```. creating any split branch containing this kind of object (or collection there of) will work fine. But if a file containing the `StreamerInfo` for `mystrarray` version 10 before loading the library containing its dictionary then the `StreamerInfo` from the file (since it has the same checksum has the one that would come from the dictionary info) is used. However, instead of. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames[4]"". ```. it produces:. ```. root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(). (const char *) ""fOutputNames"". ```. Which does not match the expectation of `TBranchElement::InitializeOffsets`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8033
https://github.com/root-project/root/pull/8034:42,integrability,pub,public,42,"[thread] remove TReentrantRWLock.hxx from public includes; It is implementation details, using TBB. To be able use it as public include, one should provide. proper INCLUDES and CXX_FLAGS settings for Thread library. Resolves #8022",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8034
https://github.com/root-project/root/pull/8034:121,integrability,pub,public,121,"[thread] remove TReentrantRWLock.hxx from public includes; It is implementation details, using TBB. To be able use it as public include, one should provide. proper INCLUDES and CXX_FLAGS settings for Thread library. Resolves #8022",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8034
https://github.com/root-project/root/issues/8037:214,deployability,version,version,214,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1209,deployability,version,versions,1209,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1864,deployability,version,versions,1864,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:10,integrability,schema,schema,10,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:179,integrability,schema,schema,179,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:214,integrability,version,version,214,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:731,integrability,schema,schema,731,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1020,integrability,schema,schema,1020,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1209,integrability,version,versions,1209,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1864,integrability,version,versions,1864,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1566,interoperability,stub,stub,1566,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:214,modifiability,version,version,214,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:819,modifiability,evolv,evolves,819,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1209,modifiability,version,versions,1209,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1235,modifiability,exten,extend,1235,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1765,modifiability,paramet,parametrised,1765,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1864,modifiability,version,versions,1864,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1171,performance,I/O,I/O,1171,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:5,safety,Test,Test,5,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:237,safety,test,test,237,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:386,safety,test,test,386,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:591,safety,test,test,591,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:748,safety,test,test,748,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:773,safety,accid,accident,773,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1004,safety,test,testing,1004,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1128,safety,test,test,1128,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1145,safety,test,test,1145,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1161,safety,test,tests,1161,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1301,safety,test,test,1301,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1415,safety,test,test,1415,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1420,safety,test,testProxiesAndCategories,1420,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1519,safety,test,test,1519,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1708,safety,test,test,1708,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1713,safety,test,testRooDataHist,1713,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1778,safety,test,test,1778,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:5,testability,Test,Test,5,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:237,testability,test,test,237,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:381,testability,unit,unit,381,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:386,testability,test,test,386,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:591,testability,test,test,591,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:748,testability,test,test,748,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1004,testability,test,testing,1004,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1128,testability,test,test,1128,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1145,testability,test,test,1145,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1161,testability,test,tests,1161,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1301,testability,test,test,1301,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1415,testability,test,test,1415,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1420,testability,test,testProxiesAndCategories,1420,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1519,testability,test,test,1519,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1566,testability,stub,stub,1566,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1708,testability,test,test,1708,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1713,testability,test,testRooDataHist,1713,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1778,testability,test,test,1778,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/issues/8037:1490,usability,prefer,preferable,1490,"[RF] Test schema evolution of RooDataHist; _Originally posted by @guitargeek in https://github.com/root-project/root/issues/7859#issuecomment-824967292_. > Hi @hageboeck! For the schema evolution from the previous version, I just made a test myself where I wrote a RooDataHist to a file with ROOT 6.24 and read it back with ROOT master + this PR. Do you think I should implement a unit test for that? I didn't think this was necessary, after all the change is rather trivial (removal of `_realVars` class member). I see that I never really replied to the above:. Yes, I think that kind of a test like this makes sense. Consider this:. - stressRooFit has a reference file that reads in some RooFit objects. This kind of serves as a schema evolution test, but that's more by accident than by design. - The reference file evolves with ROOT, though! When you find that small things have to be changed, you recreate the reference file by running `./stressRooFit` with the correct arguments. - Now you are not testing 6.2[02] schema evolution, but whatever was in master when you created that reference. This is not a good and stable test. - Here's a test suite that tests the I/O of categories across several ROOT versions. It's trivial to extend it by creating another reference file and adding it to the test suite:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testProxiesAndCategories.cxx#L57-L130. So the answer is:. It would be preferable to have a similar test to what I pasted above for RooDataHist. A stub is already here for RooDataHistv4:. https://github.com/root-project/root/blob/2ef9c05a04b4e65d68923737bf115e5410ddf6c3/roofit/roofitcore/test/testRooDataHist.cxx#L183-L239. By making it a value-parametrised test as for the categories, you could instantiate it very quickly for all RooDataHist versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8037
https://github.com/root-project/root/pull/8038:42,integrability,pub,public,42,"[thread] remove TReentrantRWLock.hxx from public includes, 6.24; It is implementation details, using TBB. To be able use it as public include, one should provide. proper INCLUDES and CXX_FLAGS settings for Thread library",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8038
https://github.com/root-project/root/pull/8038:127,integrability,pub,public,127,"[thread] remove TReentrantRWLock.hxx from public includes, 6.24; It is implementation details, using TBB. To be able use it as public include, one should provide. proper INCLUDES and CXX_FLAGS settings for Thread library",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8038
https://github.com/root-project/root/pull/8039:34,interoperability,format,format,34,"[rcanvas] support storage in JSON format; Allows to create JSON data, which can be used together with JSROOT for. offline display of RCanvas data",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8039
https://github.com/root-project/root/pull/8039:1,reliability,rca,rcanvas,1,"[rcanvas] support storage in JSON format; Allows to create JSON data, which can be used together with JSROOT for. offline display of RCanvas data",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8039
https://github.com/root-project/root/pull/8039:133,reliability,RCa,RCanvas,133,"[rcanvas] support storage in JSON format; Allows to create JSON data, which can be used together with JSROOT for. offline display of RCanvas data",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8039
https://github.com/root-project/root/pull/8039:10,usability,support,support,10,"[rcanvas] support storage in JSON format; Allows to create JSON data, which can be used together with JSROOT for. offline display of RCanvas data",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8039
https://github.com/root-project/root/pull/8040:46,deployability,build,builds,46,[cling] Do not lex beyond end of input:; asan builds were reporting this when running roottest/cling/other/runfileClose.C,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8040
https://github.com/root-project/root/pull/8040:33,safety,input,input,33,[cling] Do not lex beyond end of input:; asan builds were reporting this when running roottest/cling/other/runfileClose.C,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8040
https://github.com/root-project/root/pull/8040:33,usability,input,input,33,[cling] Do not lex beyond end of input:; asan builds were reporting this when running roottest/cling/other/runfileClose.C,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8040
https://github.com/root-project/root/pull/8041:141,availability,failur,failure,141,"[cling] Lifetime of MetaParser is that of its input:; Before, MetaParser might have pointed to a StringRef whose storage. was gone, see asan failure in roottest/cling/other/runfileClose.C below. This was caused by recursive uses of MetaParser; see stack trace below:. the inner recursion returned, but as the same MetaParser object was used. by both frames, the objects cursor now pointed to freed memory. Instead, create a MetaParser (and MetaLexer) object per input. That way,. their lifetime corresponds to the lifetime of their input. ```. =================================================================. ==529104==ERROR: AddressSanitizer: stack-use-after-return on address 0x7ffff3afd82a at pc 0x7fffea18df6d bp 0x7fffffff8170 sp 0x7fffffff8168. READ of size 1 at 0x7ffff3afd82a thread T0. [Detaching after fork from child process 529183]. #0 0x7fffea18df6c in cling::MetaLexer::Lex(cling::Token&) src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:58:11. #1 0x7fffea190d7c in cling::MetaParser::lookAhead(unsigned int) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:89:15. #2 0x7fffea190bd5 in cling::MetaParser::consumeToken() src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:49:5. #3 0x7fffea191d4d in cling::MetaParser::isLCommand(cling::MetaSema::ActionResult&) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147:9. #4 0x7fffea1914dd in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:123:12. #5 0x7fffea191216 in cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:101:33. #6 0x7fffea14e5aa in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317:24. #7 0x7fffe99b67b7 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, clin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:621,availability,ERROR,ERROR,621,"[cling] Lifetime of MetaParser is that of its input:; Before, MetaParser might have pointed to a StringRef whose storage. was gone, see asan failure in roottest/cling/other/runfileClose.C below. This was caused by recursive uses of MetaParser; see stack trace below:. the inner recursion returned, but as the same MetaParser object was used. by both frames, the objects cursor now pointed to freed memory. Instead, create a MetaParser (and MetaLexer) object per input. That way,. their lifetime corresponds to the lifetime of their input. ```. =================================================================. ==529104==ERROR: AddressSanitizer: stack-use-after-return on address 0x7ffff3afd82a at pc 0x7fffea18df6d bp 0x7fffffff8170 sp 0x7fffffff8168. READ of size 1 at 0x7ffff3afd82a thread T0. [Detaching after fork from child process 529183]. #0 0x7fffea18df6c in cling::MetaLexer::Lex(cling::Token&) src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:58:11. #1 0x7fffea190d7c in cling::MetaParser::lookAhead(unsigned int) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:89:15. #2 0x7fffea190bd5 in cling::MetaParser::consumeToken() src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:49:5. #3 0x7fffea191d4d in cling::MetaParser::isLCommand(cling::MetaSema::ActionResult&) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147:9. #4 0x7fffea1914dd in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:123:12. #5 0x7fffea191216 in cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:101:33. #6 0x7fffea14e5aa in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317:24. #7 0x7fffe99b67b7 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, clin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:4693,availability,sLi,sLine,4693,"cxx:3496:17. #19 0x7ffff77203d3 in TApplication::ExecuteFile(char const*, int*, bool) src/core/base/src/TApplication.cxx:1608:30. #20 0x7ffff771ebdf in TApplication::ProcessFile(char const*, int*, bool) src/core/base/src/TApplication.cxx:1480:11. #21 0x7ffff771e385 in TApplication::ProcessLine(char const*, bool, int*) src/core/base/src/TApplication.cxx:1453:14. #22 0x7ffff7f8157a in TRint::ProcessLineNr(char const*, char const*, int*) src/core/rint/src/TRint.cxx:766:11. #23 0x7ffff7f802f0 in TRint::Run(bool) src/core/rint/src/TRint.cxx:424:22. #24 0x4ff96d in main src/main/src/rmain.cxx:30:12. #25 0x7ffff6e040b2 in __libc_start_main /build/glibc-YbNSs7/glibc-2.31/csu/../csu/libc-start.c:308:16. #26 0x41f35d in _start (asan/bin/root.exe+0x41f35d). Address 0x7ffff3afd82a is located in stack of thread T0 at offset 42 in frame. #0 0x7fffe99b3d8f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) src/core/metacling/src/TCling.cxx:2456. This frame has 21 object(s):. [32, 56) 'sLine' (line 2462) <== Memory access at offset 42 is inside this variable. [96, 104) 'R__guard2471' (line 2471). [128, 136) 'R__guard2488' (line 2488). [160, 176) 'interpreterFlagsRAII' (line 2491). [192, 240) 'result' (line 2511). [272, 276) 'compRes' (line 2512). [288, 312) 'mod_line' (line 2517). [352, 376) 'aclicMode' (line 2518). [416, 440) 'arguments' (line 2519). [480, 504) 'io' (line 2520). [544, 568) 'fname' (line 2521). [608, 632) 'ref.tmp' (line 2547). [672, 696) 'ref.tmp145' (line 2547). [736, 768) 'code' (line 2555). [800, 832) 'codeline' (line 2556). [864, 1384) 'in' (line 2559). [1520, 1552) 'ref.tmp176' (line 2562). [1584, 1600) 'agg.tmp'. [1616, 1624) 'ref.tmp198' (line 2568). [1648, 1664) 'agg.tmp207'. [1680, 1696) 'autoParseRaii' (line 2588). HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork. (longjmp and C++ exceptions *are* supported). SUMMARY: AddressSanitizer: stack-use-after-return src/interpreter/cling",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:7545,availability,error,error,7545," f5 f5. 0x10007e757b50: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==529104==ABORTING. ```. ```. at src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:49. at src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:41. compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess, result=0x7ffff3afd8c0, disableValuePrinting=false). at src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:314. input_line=0x7ffff3afd829 ""#define XYZ 21"", compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess,. result=0x7ffff3afd8c0) at src/core/metacling/src/TCling.cxx:2431. error=0x7fffd78cb0f4 <x>) at src/core/metacling/src/TCling.cxx:2591. sync=false, err=0x7fffd78cb0f4 <x>) at src/core/base/src/TApplication.cxx:1472. line=0x7fffd78c9000 ""#define XYZ 21"", error=0x7fffd78cb0f4 <x>). at src/core/base/src/TROOT.cxx:2328. from asan/roottest/cling/other/fileClose_C.so. filename=0x6070000f0fd0 ""asan/roottest/cling/other/fileClose_C.so"", flag=257). at /home/axel/build/llvm/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:6270. at src/interpreter/cling/lib/Utils/PlatformPosix.cpp:118. permanent=false, resolved=true). at src/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:184. at src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1444. T=0x0) at src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1560. at src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:57. actionResult=@0x7ffff39532b0: cling::MetaSema::AR_Success). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:7732,availability,error,error,7732," f5 f5. 0x10007e757b50: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==529104==ABORTING. ```. ```. at src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:49. at src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:41. compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess, result=0x7ffff3afd8c0, disableValuePrinting=false). at src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:314. input_line=0x7ffff3afd829 ""#define XYZ 21"", compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess,. result=0x7ffff3afd8c0) at src/core/metacling/src/TCling.cxx:2431. error=0x7fffd78cb0f4 <x>) at src/core/metacling/src/TCling.cxx:2591. sync=false, err=0x7fffd78cb0f4 <x>) at src/core/base/src/TApplication.cxx:1472. line=0x7fffd78c9000 ""#define XYZ 21"", error=0x7fffd78cb0f4 <x>). at src/core/base/src/TROOT.cxx:2328. from asan/roottest/cling/other/fileClose_C.so. filename=0x6070000f0fd0 ""asan/roottest/cling/other/fileClose_C.so"", flag=257). at /home/axel/build/llvm/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:6270. at src/interpreter/cling/lib/Utils/PlatformPosix.cpp:118. permanent=false, resolved=true). at src/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:184. at src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1444. T=0x0) at src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1560. at src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:57. actionResult=@0x7ffff39532b0: cling::MetaSema::AR_Success). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:141,deployability,fail,failure,141,"[cling] Lifetime of MetaParser is that of its input:; Before, MetaParser might have pointed to a StringRef whose storage. was gone, see asan failure in roottest/cling/other/runfileClose.C below. This was caused by recursive uses of MetaParser; see stack trace below:. the inner recursion returned, but as the same MetaParser object was used. by both frames, the objects cursor now pointed to freed memory. Instead, create a MetaParser (and MetaLexer) object per input. That way,. their lifetime corresponds to the lifetime of their input. ```. =================================================================. ==529104==ERROR: AddressSanitizer: stack-use-after-return on address 0x7ffff3afd82a at pc 0x7fffea18df6d bp 0x7fffffff8170 sp 0x7fffffff8168. READ of size 1 at 0x7ffff3afd82a thread T0. [Detaching after fork from child process 529183]. #0 0x7fffea18df6c in cling::MetaLexer::Lex(cling::Token&) src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:58:11. #1 0x7fffea190d7c in cling::MetaParser::lookAhead(unsigned int) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:89:15. #2 0x7fffea190bd5 in cling::MetaParser::consumeToken() src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:49:5. #3 0x7fffea191d4d in cling::MetaParser::isLCommand(cling::MetaSema::ActionResult&) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147:9. #4 0x7fffea1914dd in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:123:12. #5 0x7fffea191216 in cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:101:33. #6 0x7fffea14e5aa in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317:24. #7 0x7fffe99b67b7 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, clin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:248,deployability,stack,stack,248,"[cling] Lifetime of MetaParser is that of its input:; Before, MetaParser might have pointed to a StringRef whose storage. was gone, see asan failure in roottest/cling/other/runfileClose.C below. This was caused by recursive uses of MetaParser; see stack trace below:. the inner recursion returned, but as the same MetaParser object was used. by both frames, the objects cursor now pointed to freed memory. Instead, create a MetaParser (and MetaLexer) object per input. That way,. their lifetime corresponds to the lifetime of their input. ```. =================================================================. ==529104==ERROR: AddressSanitizer: stack-use-after-return on address 0x7ffff3afd82a at pc 0x7fffea18df6d bp 0x7fffffff8170 sp 0x7fffffff8168. READ of size 1 at 0x7ffff3afd82a thread T0. [Detaching after fork from child process 529183]. #0 0x7fffea18df6c in cling::MetaLexer::Lex(cling::Token&) src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:58:11. #1 0x7fffea190d7c in cling::MetaParser::lookAhead(unsigned int) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:89:15. #2 0x7fffea190bd5 in cling::MetaParser::consumeToken() src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:49:5. #3 0x7fffea191d4d in cling::MetaParser::isLCommand(cling::MetaSema::ActionResult&) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147:9. #4 0x7fffea1914dd in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:123:12. #5 0x7fffea191216 in cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:101:33. #6 0x7fffea14e5aa in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317:24. #7 0x7fffe99b67b7 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, clin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:646,deployability,stack,stack-use-after-return,646,"[cling] Lifetime of MetaParser is that of its input:; Before, MetaParser might have pointed to a StringRef whose storage. was gone, see asan failure in roottest/cling/other/runfileClose.C below. This was caused by recursive uses of MetaParser; see stack trace below:. the inner recursion returned, but as the same MetaParser object was used. by both frames, the objects cursor now pointed to freed memory. Instead, create a MetaParser (and MetaLexer) object per input. That way,. their lifetime corresponds to the lifetime of their input. ```. =================================================================. ==529104==ERROR: AddressSanitizer: stack-use-after-return on address 0x7ffff3afd82a at pc 0x7fffea18df6d bp 0x7fffffff8170 sp 0x7fffffff8168. READ of size 1 at 0x7ffff3afd82a thread T0. [Detaching after fork from child process 529183]. #0 0x7fffea18df6c in cling::MetaLexer::Lex(cling::Token&) src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:58:11. #1 0x7fffea190d7c in cling::MetaParser::lookAhead(unsigned int) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:89:15. #2 0x7fffea190bd5 in cling::MetaParser::consumeToken() src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:49:5. #3 0x7fffea191d4d in cling::MetaParser::isLCommand(cling::MetaSema::ActionResult&) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147:9. #4 0x7fffea1914dd in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:123:12. #5 0x7fffea191216 in cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:101:33. #6 0x7fffea14e5aa in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317:24. #7 0x7fffe99b67b7 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, clin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:2400,deployability,modul,module,2400,"cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:123:12. #5 0x7fffea191216 in cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:101:33. #6 0x7fffea14e5aa in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317:24. #7 0x7fffe99b67b7 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) src/core/metacling/src/TCling.cxx:2431:29. #8 0x7fffe99bde30 in TCling::Load(char const*, bool) src/core/metacling/src/TCling.cxx:3454:10. #9 0x7ffff7865f11 in TSystem::Load(char const*, char const*, bool) src/core/base/src/TSystem.cxx:1941:27. #10 0x7ffff7b8a0e3 in TUnixSystem::Load(char const*, char const*, bool) src/core/unix/src/TUnixSystem.cxx:2789:20. #11 0x7fffd78dd08b (<unknown module>). #12 0x7fffe9f8a5d9 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const src/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:376:3. #13 0x7fffe9d73dc2 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1141:20. #14 0x7fffe9d6e317 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1391:29. #15 0x7fffe9d6c1fe in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:819:9. #16 0x7fffea151826 in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) src/interpreter",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:4338,deployability,build,build,4338,"StringRef, cling::Value*, unsigned long, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:507:22. #17 0x7fffe99b585b in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) src/core/metacling/src/TCling.cxx:2570:39. #18 0x7fffe99bbfee in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) src/core/metacling/src/TCling.cxx:3496:17. #19 0x7ffff77203d3 in TApplication::ExecuteFile(char const*, int*, bool) src/core/base/src/TApplication.cxx:1608:30. #20 0x7ffff771ebdf in TApplication::ProcessFile(char const*, int*, bool) src/core/base/src/TApplication.cxx:1480:11. #21 0x7ffff771e385 in TApplication::ProcessLine(char const*, bool, int*) src/core/base/src/TApplication.cxx:1453:14. #22 0x7ffff7f8157a in TRint::ProcessLineNr(char const*, char const*, int*) src/core/rint/src/TRint.cxx:766:11. #23 0x7ffff7f802f0 in TRint::Run(bool) src/core/rint/src/TRint.cxx:424:22. #24 0x4ff96d in main src/main/src/rmain.cxx:30:12. #25 0x7ffff6e040b2 in __libc_start_main /build/glibc-YbNSs7/glibc-2.31/csu/../csu/libc-start.c:308:16. #26 0x41f35d in _start (asan/bin/root.exe+0x41f35d). Address 0x7ffff3afd82a is located in stack of thread T0 at offset 42 in frame. #0 0x7fffe99b3d8f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) src/core/metacling/src/TCling.cxx:2456. This frame has 21 object(s):. [32, 56) 'sLine' (line 2462) <== Memory access at offset 42 is inside this variable. [96, 104) 'R__guard2471' (line 2471). [128, 136) 'R__guard2488' (line 2488). [160, 176) 'interpreterFlagsRAII' (line 2491). [192, 240) 'result' (line 2511). [272, 276) 'compRes' (line 2512). [288, 312) 'mod_line' (line 2517). [352, 376) 'aclicMode' (line 2518). [416, 440) 'arguments' (line 2519). [480, 504) 'io' (line 2520). [544, 568) 'fname' (line 2521). [608, 632) 'ref.tmp' (line 2547). [672, 696) 'ref.tmp145' (line 2547). [736, 768) 'code' (line 2555). [800, 832) 'codeline' (line 2556). [864, 1384) 'in' (line 2559). [1520, 1552) 'ref.tmp176' (line 2562). [1584, 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:4490,deployability,stack,stack,4490,"ne(char const*, TInterpreter::EErrorCode*) src/core/metacling/src/TCling.cxx:2570:39. #18 0x7fffe99bbfee in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) src/core/metacling/src/TCling.cxx:3496:17. #19 0x7ffff77203d3 in TApplication::ExecuteFile(char const*, int*, bool) src/core/base/src/TApplication.cxx:1608:30. #20 0x7ffff771ebdf in TApplication::ProcessFile(char const*, int*, bool) src/core/base/src/TApplication.cxx:1480:11. #21 0x7ffff771e385 in TApplication::ProcessLine(char const*, bool, int*) src/core/base/src/TApplication.cxx:1453:14. #22 0x7ffff7f8157a in TRint::ProcessLineNr(char const*, char const*, int*) src/core/rint/src/TRint.cxx:766:11. #23 0x7ffff7f802f0 in TRint::Run(bool) src/core/rint/src/TRint.cxx:424:22. #24 0x4ff96d in main src/main/src/rmain.cxx:30:12. #25 0x7ffff6e040b2 in __libc_start_main /build/glibc-YbNSs7/glibc-2.31/csu/../csu/libc-start.c:308:16. #26 0x41f35d in _start (asan/bin/root.exe+0x41f35d). Address 0x7ffff3afd82a is located in stack of thread T0 at offset 42 in frame. #0 0x7fffe99b3d8f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) src/core/metacling/src/TCling.cxx:2456. This frame has 21 object(s):. [32, 56) 'sLine' (line 2462) <== Memory access at offset 42 is inside this variable. [96, 104) 'R__guard2471' (line 2471). [128, 136) 'R__guard2488' (line 2488). [160, 176) 'interpreterFlagsRAII' (line 2491). [192, 240) 'result' (line 2511). [272, 276) 'compRes' (line 2512). [288, 312) 'mod_line' (line 2517). [352, 376) 'aclicMode' (line 2518). [416, 440) 'arguments' (line 2519). [480, 504) 'io' (line 2520). [544, 568) 'fname' (line 2521). [608, 632) 'ref.tmp' (line 2547). [672, 696) 'ref.tmp145' (line 2547). [736, 768) 'code' (line 2555). [800, 832) 'codeline' (line 2556). [864, 1384) 'in' (line 2559). [1520, 1552) 'ref.tmp176' (line 2562). [1584, 1600) 'agg.tmp'. [1616, 1624) 'ref.tmp198' (line 2568). [1648, 1664) 'agg.tmp207'. [1680, 1696) 'autoParseRaii' (line 2588). HINT: this may be a false po",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:5533,deployability,stack,stack,5533,"x7fffe99b3d8f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) src/core/metacling/src/TCling.cxx:2456. This frame has 21 object(s):. [32, 56) 'sLine' (line 2462) <== Memory access at offset 42 is inside this variable. [96, 104) 'R__guard2471' (line 2471). [128, 136) 'R__guard2488' (line 2488). [160, 176) 'interpreterFlagsRAII' (line 2491). [192, 240) 'result' (line 2511). [272, 276) 'compRes' (line 2512). [288, 312) 'mod_line' (line 2517). [352, 376) 'aclicMode' (line 2518). [416, 440) 'arguments' (line 2519). [480, 504) 'io' (line 2520). [544, 568) 'fname' (line 2521). [608, 632) 'ref.tmp' (line 2547). [672, 696) 'ref.tmp145' (line 2547). [736, 768) 'code' (line 2555). [800, 832) 'codeline' (line 2556). [864, 1384) 'in' (line 2559). [1520, 1552) 'ref.tmp176' (line 2562). [1584, 1600) 'agg.tmp'. [1616, 1624) 'ref.tmp198' (line 2568). [1648, 1664) 'agg.tmp207'. [1680, 1696) 'autoParseRaii' (line 2588). HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork. (longjmp and C++ exceptions *are* supported). SUMMARY: AddressSanitizer: stack-use-after-return src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:58:11 in cling::MetaLexer::Lex(cling::Token&). Shadow bytes around the buggy address:. 0x10007e757ab0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757ac0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757ad0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757ae0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757af0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. =>0x10007e757b00: f5 f5 f5 f5 f5[f5]f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b10: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b20: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b30: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b40: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b50: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. Sha",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:5652,deployability,stack,stack-use-after-return,5652," has 21 object(s):. [32, 56) 'sLine' (line 2462) <== Memory access at offset 42 is inside this variable. [96, 104) 'R__guard2471' (line 2471). [128, 136) 'R__guard2488' (line 2488). [160, 176) 'interpreterFlagsRAII' (line 2491). [192, 240) 'result' (line 2511). [272, 276) 'compRes' (line 2512). [288, 312) 'mod_line' (line 2517). [352, 376) 'aclicMode' (line 2518). [416, 440) 'arguments' (line 2519). [480, 504) 'io' (line 2520). [544, 568) 'fname' (line 2521). [608, 632) 'ref.tmp' (line 2547). [672, 696) 'ref.tmp145' (line 2547). [736, 768) 'code' (line 2555). [800, 832) 'codeline' (line 2556). [864, 1384) 'in' (line 2559). [1520, 1552) 'ref.tmp176' (line 2562). [1584, 1600) 'agg.tmp'. [1616, 1624) 'ref.tmp198' (line 2568). [1648, 1664) 'agg.tmp207'. [1680, 1696) 'autoParseRaii' (line 2588). HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork. (longjmp and C++ exceptions *are* supported). SUMMARY: AddressSanitizer: stack-use-after-return src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:58:11 in cling::MetaLexer::Lex(cling::Token&). Shadow bytes around the buggy address:. 0x10007e757ab0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757ac0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757ad0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757ae0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757af0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. =>0x10007e757b00: f5 f5 f5 f5 f5[f5]f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b10: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b20: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b30: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b40: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b50: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:6711,deployability,Stack,Stack,6711,"/MetaLexer.cpp:58:11 in cling::MetaLexer::Lex(cling::Token&). Shadow bytes around the buggy address:. 0x10007e757ab0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757ac0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757ad0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757ae0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757af0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. =>0x10007e757b00: f5 f5 f5 f5 f5[f5]f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b10: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b20: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b30: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b40: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b50: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==529104==ABORTING. ```. ```. at src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:49. at src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:41. compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess, result=0x7ffff3afd8c0, disableValuePrinting=false). at src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:314. input_line=0x7ffff3afd829 ""#define XYZ 21"", compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess,. result=0x7ffff3afd8c0) at src/core/metacling/src/TCling.cxx:2431. error=0x7fffd78cb0f4 <x>) at src/core/metacling/src/TCling.cxx:2591. sync=false, err=0x7fffd78cb0f4 <x>) at src/core/base/src/TApplication.cxx:1472. line=0x7fffd78c9000 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:6735,deployability,Stack,Stack,6735,"cling::MetaLexer::Lex(cling::Token&). Shadow bytes around the buggy address:. 0x10007e757ab0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757ac0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757ad0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757ae0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757af0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. =>0x10007e757b00: f5 f5 f5 f5 f5[f5]f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b10: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b20: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b30: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b40: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b50: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==529104==ABORTING. ```. ```. at src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:49. at src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:41. compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess, result=0x7ffff3afd8c0, disableValuePrinting=false). at src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:314. input_line=0x7ffff3afd829 ""#define XYZ 21"", compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess,. result=0x7ffff3afd8c0) at src/core/metacling/src/TCling.cxx:2431. error=0x7fffd78cb0f4 <x>) at src/core/metacling/src/TCling.cxx:2591. sync=false, err=0x7fffd78cb0f4 <x>) at src/core/base/src/TApplication.cxx:1472. line=0x7fffd78c9000 ""#define XYZ 21"", error=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:6758,deployability,Stack,Stack,6758,"ling::Token&). Shadow bytes around the buggy address:. 0x10007e757ab0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757ac0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757ad0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757ae0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757af0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. =>0x10007e757b00: f5 f5 f5 f5 f5[f5]f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b10: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b20: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b30: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b40: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b50: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==529104==ABORTING. ```. ```. at src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:49. at src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:41. compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess, result=0x7ffff3afd8c0, disableValuePrinting=false). at src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:314. input_line=0x7ffff3afd829 ""#define XYZ 21"", compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess,. result=0x7ffff3afd8c0) at src/core/metacling/src/TCling.cxx:2431. error=0x7fffd78cb0f4 <x>) at src/core/metacling/src/TCling.cxx:2591. sync=false, err=0x7fffd78cb0f4 <x>) at src/core/base/src/TApplication.cxx:1472. line=0x7fffd78c9000 ""#define XYZ 21"", error=0x7fffd78cb0f4 <x>). at",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:6783,deployability,Stack,Stack,6783,"es around the buggy address:. 0x10007e757ab0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757ac0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757ad0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757ae0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757af0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. =>0x10007e757b00: f5 f5 f5 f5 f5[f5]f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b10: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b20: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b30: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b40: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b50: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==529104==ABORTING. ```. ```. at src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:49. at src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:41. compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess, result=0x7ffff3afd8c0, disableValuePrinting=false). at src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:314. input_line=0x7ffff3afd829 ""#define XYZ 21"", compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess,. result=0x7ffff3afd8c0) at src/core/metacling/src/TCling.cxx:2431. error=0x7fffd78cb0f4 <x>) at src/core/metacling/src/TCling.cxx:2591. sync=false, err=0x7fffd78cb0f4 <x>) at src/core/base/src/TApplication.cxx:1472. line=0x7fffd78c9000 ""#define XYZ 21"", error=0x7fffd78cb0f4 <x>). at src/core/base/src/TROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:6807,deployability,Stack,Stack,6807,"ess:. 0x10007e757ab0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757ac0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757ad0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757ae0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757af0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. =>0x10007e757b00: f5 f5 f5 f5 f5[f5]f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b10: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b20: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b30: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b40: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b50: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==529104==ABORTING. ```. ```. at src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:49. at src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:41. compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess, result=0x7ffff3afd8c0, disableValuePrinting=false). at src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:314. input_line=0x7ffff3afd829 ""#define XYZ 21"", compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess,. result=0x7ffff3afd8c0) at src/core/metacling/src/TCling.cxx:2431. error=0x7fffd78cb0f4 <x>) at src/core/metacling/src/TCling.cxx:2591. sync=false, err=0x7fffd78cb0f4 <x>) at src/core/base/src/TApplication.cxx:1472. line=0x7fffd78c9000 ""#define XYZ 21"", error=0x7fffd78cb0f4 <x>). at src/core/base/src/TROOT.cxx:2328. from asan/root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:6899,deployability,Contain,Container,6899,"5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757ad0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757ae0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757af0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. =>0x10007e757b00: f5 f5 f5 f5 f5[f5]f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b10: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b20: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b30: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b40: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b50: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==529104==ABORTING. ```. ```. at src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:49. at src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:41. compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess, result=0x7ffff3afd8c0, disableValuePrinting=false). at src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:314. input_line=0x7ffff3afd829 ""#define XYZ 21"", compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess,. result=0x7ffff3afd8c0) at src/core/metacling/src/TCling.cxx:2431. error=0x7fffd78cb0f4 <x>) at src/core/metacling/src/TCling.cxx:2591. sync=false, err=0x7fffd78cb0f4 <x>) at src/core/base/src/TApplication.cxx:1472. line=0x7fffd78c9000 ""#define XYZ 21"", error=0x7fffd78cb0f4 <x>). at src/core/base/src/TROOT.cxx:2328. from asan/roottest/cling/other/fileClose_C.so. filename=0x6070000f0fd0 ""asan/roottest/cling/other/fileClose_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:7936,deployability,build,build,7936," f5 f5. 0x10007e757b50: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==529104==ABORTING. ```. ```. at src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:49. at src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:41. compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess, result=0x7ffff3afd8c0, disableValuePrinting=false). at src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:314. input_line=0x7ffff3afd829 ""#define XYZ 21"", compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess,. result=0x7ffff3afd8c0) at src/core/metacling/src/TCling.cxx:2431. error=0x7fffd78cb0f4 <x>) at src/core/metacling/src/TCling.cxx:2591. sync=false, err=0x7fffd78cb0f4 <x>) at src/core/base/src/TApplication.cxx:1472. line=0x7fffd78c9000 ""#define XYZ 21"", error=0x7fffd78cb0f4 <x>). at src/core/base/src/TROOT.cxx:2328. from asan/roottest/cling/other/fileClose_C.so. filename=0x6070000f0fd0 ""asan/roottest/cling/other/fileClose_C.so"", flag=257). at /home/axel/build/llvm/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:6270. at src/interpreter/cling/lib/Utils/PlatformPosix.cpp:118. permanent=false, resolved=true). at src/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:184. at src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1444. T=0x0) at src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1560. at src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:57. actionResult=@0x7ffff39532b0: cling::MetaSema::AR_Success). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:2015,energy efficiency,core,core,2015,"nsigned int) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:89:15. #2 0x7fffea190bd5 in cling::MetaParser::consumeToken() src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:49:5. #3 0x7fffea191d4d in cling::MetaParser::isLCommand(cling::MetaSema::ActionResult&) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147:9. #4 0x7fffea1914dd in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:123:12. #5 0x7fffea191216 in cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:101:33. #6 0x7fffea14e5aa in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317:24. #7 0x7fffe99b67b7 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) src/core/metacling/src/TCling.cxx:2431:29. #8 0x7fffe99bde30 in TCling::Load(char const*, bool) src/core/metacling/src/TCling.cxx:3454:10. #9 0x7ffff7865f11 in TSystem::Load(char const*, char const*, bool) src/core/base/src/TSystem.cxx:1941:27. #10 0x7ffff7b8a0e3 in TUnixSystem::Load(char const*, char const*, bool) src/core/unix/src/TUnixSystem.cxx:2789:20. #11 0x7fffd78dd08b (<unknown module>). #12 0x7fffe9f8a5d9 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const src/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:376:3. #13 0x7fffe9d73dc2 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1141:20. #14 0x7fffe9d6e317 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) src/interpreter/cling/lib/Interpreter/Interpreter",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:2083,energy efficiency,Load,Load,2083,"89:15. #2 0x7fffea190bd5 in cling::MetaParser::consumeToken() src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:49:5. #3 0x7fffea191d4d in cling::MetaParser::isLCommand(cling::MetaSema::ActionResult&) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147:9. #4 0x7fffea1914dd in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:123:12. #5 0x7fffea191216 in cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:101:33. #6 0x7fffea14e5aa in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317:24. #7 0x7fffe99b67b7 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) src/core/metacling/src/TCling.cxx:2431:29. #8 0x7fffe99bde30 in TCling::Load(char const*, bool) src/core/metacling/src/TCling.cxx:3454:10. #9 0x7ffff7865f11 in TSystem::Load(char const*, char const*, bool) src/core/base/src/TSystem.cxx:1941:27. #10 0x7ffff7b8a0e3 in TUnixSystem::Load(char const*, char const*, bool) src/core/unix/src/TUnixSystem.cxx:2789:20. #11 0x7fffd78dd08b (<unknown module>). #12 0x7fffe9f8a5d9 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const src/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:376:3. #13 0x7fffe9d73dc2 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1141:20. #14 0x7fffe9d6e317 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1391:29. #15 0x7fffe9d6c1fe in cling::Interpreter::process(std:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:2111,energy efficiency,core,core,2111,"cling::MetaParser::consumeToken() src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:49:5. #3 0x7fffea191d4d in cling::MetaParser::isLCommand(cling::MetaSema::ActionResult&) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147:9. #4 0x7fffea1914dd in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:123:12. #5 0x7fffea191216 in cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:101:33. #6 0x7fffea14e5aa in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317:24. #7 0x7fffe99b67b7 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) src/core/metacling/src/TCling.cxx:2431:29. #8 0x7fffe99bde30 in TCling::Load(char const*, bool) src/core/metacling/src/TCling.cxx:3454:10. #9 0x7ffff7865f11 in TSystem::Load(char const*, char const*, bool) src/core/base/src/TSystem.cxx:1941:27. #10 0x7ffff7b8a0e3 in TUnixSystem::Load(char const*, char const*, bool) src/core/unix/src/TUnixSystem.cxx:2789:20. #11 0x7fffd78dd08b (<unknown module>). #12 0x7fffe9f8a5d9 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const src/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:376:3. #13 0x7fffe9d73dc2 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1141:20. #14 0x7fffe9d6e317 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1391:29. #15 0x7fffe9d6c1fe in cling::Interpreter::process(std::__cxx11::basic_string<char,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:2180,energy efficiency,Load,Load,2180,"ssor/MetaParser.cpp:49:5. #3 0x7fffea191d4d in cling::MetaParser::isLCommand(cling::MetaSema::ActionResult&) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147:9. #4 0x7fffea1914dd in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:123:12. #5 0x7fffea191216 in cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:101:33. #6 0x7fffea14e5aa in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317:24. #7 0x7fffe99b67b7 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) src/core/metacling/src/TCling.cxx:2431:29. #8 0x7fffe99bde30 in TCling::Load(char const*, bool) src/core/metacling/src/TCling.cxx:3454:10. #9 0x7ffff7865f11 in TSystem::Load(char const*, char const*, bool) src/core/base/src/TSystem.cxx:1941:27. #10 0x7ffff7b8a0e3 in TUnixSystem::Load(char const*, char const*, bool) src/core/unix/src/TUnixSystem.cxx:2789:20. #11 0x7fffd78dd08b (<unknown module>). #12 0x7fffe9f8a5d9 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const src/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:376:3. #13 0x7fffe9d73dc2 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1141:20. #14 0x7fffe9d6e317 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1391:29. #15 0x7fffe9d6c1fe in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:2221,energy efficiency,core,core,2221,"4d in cling::MetaParser::isLCommand(cling::MetaSema::ActionResult&) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147:9. #4 0x7fffea1914dd in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:123:12. #5 0x7fffea191216 in cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:101:33. #6 0x7fffea14e5aa in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317:24. #7 0x7fffe99b67b7 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) src/core/metacling/src/TCling.cxx:2431:29. #8 0x7fffe99bde30 in TCling::Load(char const*, bool) src/core/metacling/src/TCling.cxx:3454:10. #9 0x7ffff7865f11 in TSystem::Load(char const*, char const*, bool) src/core/base/src/TSystem.cxx:1941:27. #10 0x7ffff7b8a0e3 in TUnixSystem::Load(char const*, char const*, bool) src/core/unix/src/TUnixSystem.cxx:2789:20. #11 0x7fffd78dd08b (<unknown module>). #12 0x7fffe9f8a5d9 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const src/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:376:3. #13 0x7fffe9d73dc2 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1141:20. #14 0x7fffe9d6e317 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1391:29. #15 0x7fffe9d6c1fe in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) src/interpr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:2291,energy efficiency,Load,Load,2291,"c/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147:9. #4 0x7fffea1914dd in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:123:12. #5 0x7fffea191216 in cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:101:33. #6 0x7fffea14e5aa in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317:24. #7 0x7fffe99b67b7 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) src/core/metacling/src/TCling.cxx:2431:29. #8 0x7fffe99bde30 in TCling::Load(char const*, bool) src/core/metacling/src/TCling.cxx:3454:10. #9 0x7ffff7865f11 in TSystem::Load(char const*, char const*, bool) src/core/base/src/TSystem.cxx:1941:27. #10 0x7ffff7b8a0e3 in TUnixSystem::Load(char const*, char const*, bool) src/core/unix/src/TUnixSystem.cxx:2789:20. #11 0x7fffd78dd08b (<unknown module>). #12 0x7fffe9f8a5d9 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const src/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:376:3. #13 0x7fffe9d73dc2 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1141:20. #14 0x7fffe9d6e317 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1391:29. #15 0x7fffe9d6c1fe in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:819:9. #16 0x7fffea151826 i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:2332,energy efficiency,core,core,2332,"aParser.cpp:147:9. #4 0x7fffea1914dd in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:123:12. #5 0x7fffea191216 in cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:101:33. #6 0x7fffea14e5aa in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317:24. #7 0x7fffe99b67b7 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) src/core/metacling/src/TCling.cxx:2431:29. #8 0x7fffe99bde30 in TCling::Load(char const*, bool) src/core/metacling/src/TCling.cxx:3454:10. #9 0x7ffff7865f11 in TSystem::Load(char const*, char const*, bool) src/core/base/src/TSystem.cxx:1941:27. #10 0x7ffff7b8a0e3 in TUnixSystem::Load(char const*, char const*, bool) src/core/unix/src/TUnixSystem.cxx:2789:20. #11 0x7fffd78dd08b (<unknown module>). #12 0x7fffe9f8a5d9 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const src/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:376:3. #13 0x7fffe9d73dc2 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1141:20. #14 0x7fffe9d6e317 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1391:29. #15 0x7fffe9d6c1fe in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:819:9. #16 0x7fffea151826 in cling::MetaProcessor::readInputFromFile",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:2863,energy efficiency,alloc,allocator,2863,"24. #7 0x7fffe99b67b7 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) src/core/metacling/src/TCling.cxx:2431:29. #8 0x7fffe99bde30 in TCling::Load(char const*, bool) src/core/metacling/src/TCling.cxx:3454:10. #9 0x7ffff7865f11 in TSystem::Load(char const*, char const*, bool) src/core/base/src/TSystem.cxx:1941:27. #10 0x7ffff7b8a0e3 in TUnixSystem::Load(char const*, char const*, bool) src/core/unix/src/TUnixSystem.cxx:2789:20. #11 0x7fffd78dd08b (<unknown module>). #12 0x7fffe9f8a5d9 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const src/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:376:3. #13 0x7fffe9d73dc2 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1141:20. #14 0x7fffe9d6e317 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1391:29. #15 0x7fffe9d6c1fe in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:819:9. #16 0x7fffea151826 in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:507:22. #17 0x7fffe99b585b in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) src/core/metacling/src/TCling.cxx:2570:39. #18 0x7fffe99bbfee in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) src/core/metacling/src/TCling.cxx:3496:17. #19 0x7ffff77203d3 in TApplication::ExecuteFile(char const*, int*, bool) src/core/base/src/TApplication.cxx:1608:30. #20 0x7ffff771ebdf in TApplication::Proces",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:3143,energy efficiency,alloc,allocator,3143,". #9 0x7ffff7865f11 in TSystem::Load(char const*, char const*, bool) src/core/base/src/TSystem.cxx:1941:27. #10 0x7ffff7b8a0e3 in TUnixSystem::Load(char const*, char const*, bool) src/core/unix/src/TUnixSystem.cxx:2789:20. #11 0x7fffd78dd08b (<unknown module>). #12 0x7fffe9f8a5d9 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const src/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:376:3. #13 0x7fffe9d73dc2 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1141:20. #14 0x7fffe9d6e317 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1391:29. #15 0x7fffe9d6c1fe in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:819:9. #16 0x7fffea151826 in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:507:22. #17 0x7fffe99b585b in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) src/core/metacling/src/TCling.cxx:2570:39. #18 0x7fffe99bbfee in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) src/core/metacling/src/TCling.cxx:3496:17. #19 0x7ffff77203d3 in TApplication::ExecuteFile(char const*, int*, bool) src/core/base/src/TApplication.cxx:1608:30. #20 0x7ffff771ebdf in TApplication::ProcessFile(char const*, int*, bool) src/core/base/src/TApplication.cxx:1480:11. #21 0x7ffff771e385 in TApplication::ProcessLine(char const*, bool, int*) src/core/base/src/TApplication.cxx:1453:14. #22 0x7ffff7f8157a in TRint::ProcessLineNr(char const*, char const*, int*) src/core/rint",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:3540,energy efficiency,core,core,3540,"erpreter/IncrementalExecutor.cpp:376:3. #13 0x7fffe9d73dc2 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1141:20. #14 0x7fffe9d6e317 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1391:29. #15 0x7fffe9d6c1fe in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:819:9. #16 0x7fffea151826 in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:507:22. #17 0x7fffe99b585b in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) src/core/metacling/src/TCling.cxx:2570:39. #18 0x7fffe99bbfee in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) src/core/metacling/src/TCling.cxx:3496:17. #19 0x7ffff77203d3 in TApplication::ExecuteFile(char const*, int*, bool) src/core/base/src/TApplication.cxx:1608:30. #20 0x7ffff771ebdf in TApplication::ProcessFile(char const*, int*, bool) src/core/base/src/TApplication.cxx:1480:11. #21 0x7ffff771e385 in TApplication::ProcessLine(char const*, bool, int*) src/core/base/src/TApplication.cxx:1453:14. #22 0x7ffff7f8157a in TRint::ProcessLineNr(char const*, char const*, int*) src/core/rint/src/TRint.cxx:766:11. #23 0x7ffff7f802f0 in TRint::Run(bool) src/core/rint/src/TRint.cxx:424:22. #24 0x4ff96d in main src/main/src/rmain.cxx:30:12. #25 0x7ffff6e040b2 in __libc_start_main /build/glibc-YbNSs7/glibc-2.31/csu/../csu/libc-start.c:308:16. #26 0x41f35d in _start (asan/bin/root.exe+0x41f35d). Address 0x7ffff3afd82a is located in stack of thread T0 at offset 42 in frame. #0 0x7fffe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:3670,energy efficiency,core,core,3670,"alue*) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1141:20. #14 0x7fffe9d6e317 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1391:29. #15 0x7fffe9d6c1fe in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:819:9. #16 0x7fffea151826 in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:507:22. #17 0x7fffe99b585b in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) src/core/metacling/src/TCling.cxx:2570:39. #18 0x7fffe99bbfee in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) src/core/metacling/src/TCling.cxx:3496:17. #19 0x7ffff77203d3 in TApplication::ExecuteFile(char const*, int*, bool) src/core/base/src/TApplication.cxx:1608:30. #20 0x7ffff771ebdf in TApplication::ProcessFile(char const*, int*, bool) src/core/base/src/TApplication.cxx:1480:11. #21 0x7ffff771e385 in TApplication::ProcessLine(char const*, bool, int*) src/core/base/src/TApplication.cxx:1453:14. #22 0x7ffff7f8157a in TRint::ProcessLineNr(char const*, char const*, int*) src/core/rint/src/TRint.cxx:766:11. #23 0x7ffff7f802f0 in TRint::Run(bool) src/core/rint/src/TRint.cxx:424:22. #24 0x4ff96d in main src/main/src/rmain.cxx:30:12. #25 0x7ffff6e040b2 in __libc_start_main /build/glibc-YbNSs7/glibc-2.31/csu/../csu/libc-start.c:308:16. #26 0x41f35d in _start (asan/bin/root.exe+0x41f35d). Address 0x7ffff3afd82a is located in stack of thread T0 at offset 42 in frame. #0 0x7fffe99b3d8f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) src/core/metacling/src/TCling.cxx:2456. This frame has 21 o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:3786,energy efficiency,core,core,3786,"uateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1391:29. #15 0x7fffe9d6c1fe in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:819:9. #16 0x7fffea151826 in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:507:22. #17 0x7fffe99b585b in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) src/core/metacling/src/TCling.cxx:2570:39. #18 0x7fffe99bbfee in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) src/core/metacling/src/TCling.cxx:3496:17. #19 0x7ffff77203d3 in TApplication::ExecuteFile(char const*, int*, bool) src/core/base/src/TApplication.cxx:1608:30. #20 0x7ffff771ebdf in TApplication::ProcessFile(char const*, int*, bool) src/core/base/src/TApplication.cxx:1480:11. #21 0x7ffff771e385 in TApplication::ProcessLine(char const*, bool, int*) src/core/base/src/TApplication.cxx:1453:14. #22 0x7ffff7f8157a in TRint::ProcessLineNr(char const*, char const*, int*) src/core/rint/src/TRint.cxx:766:11. #23 0x7ffff7f802f0 in TRint::Run(bool) src/core/rint/src/TRint.cxx:424:22. #24 0x4ff96d in main src/main/src/rmain.cxx:30:12. #25 0x7ffff6e040b2 in __libc_start_main /build/glibc-YbNSs7/glibc-2.31/csu/../csu/libc-start.c:308:16. #26 0x41f35d in _start (asan/bin/root.exe+0x41f35d). Address 0x7ffff3afd82a is located in stack of thread T0 at offset 42 in frame. #0 0x7fffe99b3d8f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) src/core/metacling/src/TCling.cxx:2456. This frame has 21 object(s):. [32, 56) 'sLine' (line 2462) <== Memory access at offset 42 is inside this variable. [96, 104) 'R__guard2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:3903,energy efficiency,core,core,3903,"onOptions, cling::Value*, cling::Transaction**, unsigned long) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1391:29. #15 0x7fffe9d6c1fe in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:819:9. #16 0x7fffea151826 in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:507:22. #17 0x7fffe99b585b in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) src/core/metacling/src/TCling.cxx:2570:39. #18 0x7fffe99bbfee in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) src/core/metacling/src/TCling.cxx:3496:17. #19 0x7ffff77203d3 in TApplication::ExecuteFile(char const*, int*, bool) src/core/base/src/TApplication.cxx:1608:30. #20 0x7ffff771ebdf in TApplication::ProcessFile(char const*, int*, bool) src/core/base/src/TApplication.cxx:1480:11. #21 0x7ffff771e385 in TApplication::ProcessLine(char const*, bool, int*) src/core/base/src/TApplication.cxx:1453:14. #22 0x7ffff7f8157a in TRint::ProcessLineNr(char const*, char const*, int*) src/core/rint/src/TRint.cxx:766:11. #23 0x7ffff7f802f0 in TRint::Run(bool) src/core/rint/src/TRint.cxx:424:22. #24 0x4ff96d in main src/main/src/rmain.cxx:30:12. #25 0x7ffff6e040b2 in __libc_start_main /build/glibc-YbNSs7/glibc-2.31/csu/../csu/libc-start.c:308:16. #26 0x41f35d in _start (asan/bin/root.exe+0x41f35d). Address 0x7ffff3afd82a is located in stack of thread T0 at offset 42 in frame. #0 0x7fffe99b3d8f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) src/core/metacling/src/TCling.cxx:2456. This frame has 21 object(s):. [32, 56) 'sLine' (line 2462) <== Memory access at offset 42 is inside this variable. [96, 104) 'R__guard2471' (line 2471). [128, 136) 'R__guard2488' (line 2488). [160, 176) 'interpreterFlagsRAII' (line 2491). [192, 240) 'r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:4020,energy efficiency,core,core,4020,"1391:29. #15 0x7fffe9d6c1fe in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:819:9. #16 0x7fffea151826 in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:507:22. #17 0x7fffe99b585b in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) src/core/metacling/src/TCling.cxx:2570:39. #18 0x7fffe99bbfee in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) src/core/metacling/src/TCling.cxx:3496:17. #19 0x7ffff77203d3 in TApplication::ExecuteFile(char const*, int*, bool) src/core/base/src/TApplication.cxx:1608:30. #20 0x7ffff771ebdf in TApplication::ProcessFile(char const*, int*, bool) src/core/base/src/TApplication.cxx:1480:11. #21 0x7ffff771e385 in TApplication::ProcessLine(char const*, bool, int*) src/core/base/src/TApplication.cxx:1453:14. #22 0x7ffff7f8157a in TRint::ProcessLineNr(char const*, char const*, int*) src/core/rint/src/TRint.cxx:766:11. #23 0x7ffff7f802f0 in TRint::Run(bool) src/core/rint/src/TRint.cxx:424:22. #24 0x4ff96d in main src/main/src/rmain.cxx:30:12. #25 0x7ffff6e040b2 in __libc_start_main /build/glibc-YbNSs7/glibc-2.31/csu/../csu/libc-start.c:308:16. #26 0x41f35d in _start (asan/bin/root.exe+0x41f35d). Address 0x7ffff3afd82a is located in stack of thread T0 at offset 42 in frame. #0 0x7fffe99b3d8f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) src/core/metacling/src/TCling.cxx:2456. This frame has 21 object(s):. [32, 56) 'sLine' (line 2462) <== Memory access at offset 42 is inside this variable. [96, 104) 'R__guard2471' (line 2471). [128, 136) 'R__guard2488' (line 2488). [160, 176) 'interpreterFlagsRAII' (line 2491). [192, 240) 'result' (line 2511). [272, 276) 'compRes' (line 2512). [288, 312) 'mod_line' (line 2517). [352, 376) 'aclicMode' (line",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:4139,energy efficiency,core,core,4139,"::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:819:9. #16 0x7fffea151826 in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:507:22. #17 0x7fffe99b585b in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) src/core/metacling/src/TCling.cxx:2570:39. #18 0x7fffe99bbfee in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) src/core/metacling/src/TCling.cxx:3496:17. #19 0x7ffff77203d3 in TApplication::ExecuteFile(char const*, int*, bool) src/core/base/src/TApplication.cxx:1608:30. #20 0x7ffff771ebdf in TApplication::ProcessFile(char const*, int*, bool) src/core/base/src/TApplication.cxx:1480:11. #21 0x7ffff771e385 in TApplication::ProcessLine(char const*, bool, int*) src/core/base/src/TApplication.cxx:1453:14. #22 0x7ffff7f8157a in TRint::ProcessLineNr(char const*, char const*, int*) src/core/rint/src/TRint.cxx:766:11. #23 0x7ffff7f802f0 in TRint::Run(bool) src/core/rint/src/TRint.cxx:424:22. #24 0x4ff96d in main src/main/src/rmain.cxx:30:12. #25 0x7ffff6e040b2 in __libc_start_main /build/glibc-YbNSs7/glibc-2.31/csu/../csu/libc-start.c:308:16. #26 0x41f35d in _start (asan/bin/root.exe+0x41f35d). Address 0x7ffff3afd82a is located in stack of thread T0 at offset 42 in frame. #0 0x7fffe99b3d8f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) src/core/metacling/src/TCling.cxx:2456. This frame has 21 object(s):. [32, 56) 'sLine' (line 2462) <== Memory access at offset 42 is inside this variable. [96, 104) 'R__guard2471' (line 2471). [128, 136) 'R__guard2488' (line 2488). [160, 176) 'interpreterFlagsRAII' (line 2491). [192, 240) 'result' (line 2511). [272, 276) 'compRes' (line 2512). [288, 312) 'mod_line' (line 2517). [352, 376) 'aclicMode' (line 2518). [416, 440) 'arguments' (line 2519). [480, 504) 'io' (line 2520). [544, 568) 'fname' (line 2521). [608, 632) 're",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:4214,energy efficiency,core,core,4214,"interpreter/cling/lib/Interpreter/Interpreter.cpp:819:9. #16 0x7fffea151826 in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:507:22. #17 0x7fffe99b585b in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) src/core/metacling/src/TCling.cxx:2570:39. #18 0x7fffe99bbfee in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) src/core/metacling/src/TCling.cxx:3496:17. #19 0x7ffff77203d3 in TApplication::ExecuteFile(char const*, int*, bool) src/core/base/src/TApplication.cxx:1608:30. #20 0x7ffff771ebdf in TApplication::ProcessFile(char const*, int*, bool) src/core/base/src/TApplication.cxx:1480:11. #21 0x7ffff771e385 in TApplication::ProcessLine(char const*, bool, int*) src/core/base/src/TApplication.cxx:1453:14. #22 0x7ffff7f8157a in TRint::ProcessLineNr(char const*, char const*, int*) src/core/rint/src/TRint.cxx:766:11. #23 0x7ffff7f802f0 in TRint::Run(bool) src/core/rint/src/TRint.cxx:424:22. #24 0x4ff96d in main src/main/src/rmain.cxx:30:12. #25 0x7ffff6e040b2 in __libc_start_main /build/glibc-YbNSs7/glibc-2.31/csu/../csu/libc-start.c:308:16. #26 0x41f35d in _start (asan/bin/root.exe+0x41f35d). Address 0x7ffff3afd82a is located in stack of thread T0 at offset 42 in frame. #0 0x7fffe99b3d8f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) src/core/metacling/src/TCling.cxx:2456. This frame has 21 object(s):. [32, 56) 'sLine' (line 2462) <== Memory access at offset 42 is inside this variable. [96, 104) 'R__guard2471' (line 2471). [128, 136) 'R__guard2488' (line 2488). [160, 176) 'interpreterFlagsRAII' (line 2491). [192, 240) 'result' (line 2511). [272, 276) 'compRes' (line 2512). [288, 312) 'mod_line' (line 2517). [352, 376) 'aclicMode' (line 2518). [416, 440) 'arguments' (line 2519). [480, 504) 'io' (line 2520). [544, 568) 'fname' (line 2521). [608, 632) 'ref.tmp' (line 2547). [672, 696) 'ref.tmp145' (line 2547). [736, 768) 'code' ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:4617,energy efficiency,core,core,4617,"eSynch(char const*, TInterpreter::EErrorCode*) src/core/metacling/src/TCling.cxx:3496:17. #19 0x7ffff77203d3 in TApplication::ExecuteFile(char const*, int*, bool) src/core/base/src/TApplication.cxx:1608:30. #20 0x7ffff771ebdf in TApplication::ProcessFile(char const*, int*, bool) src/core/base/src/TApplication.cxx:1480:11. #21 0x7ffff771e385 in TApplication::ProcessLine(char const*, bool, int*) src/core/base/src/TApplication.cxx:1453:14. #22 0x7ffff7f8157a in TRint::ProcessLineNr(char const*, char const*, int*) src/core/rint/src/TRint.cxx:766:11. #23 0x7ffff7f802f0 in TRint::Run(bool) src/core/rint/src/TRint.cxx:424:22. #24 0x4ff96d in main src/main/src/rmain.cxx:30:12. #25 0x7ffff6e040b2 in __libc_start_main /build/glibc-YbNSs7/glibc-2.31/csu/../csu/libc-start.c:308:16. #26 0x41f35d in _start (asan/bin/root.exe+0x41f35d). Address 0x7ffff3afd82a is located in stack of thread T0 at offset 42 in frame. #0 0x7fffe99b3d8f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) src/core/metacling/src/TCling.cxx:2456. This frame has 21 object(s):. [32, 56) 'sLine' (line 2462) <== Memory access at offset 42 is inside this variable. [96, 104) 'R__guard2471' (line 2471). [128, 136) 'R__guard2488' (line 2488). [160, 176) 'interpreterFlagsRAII' (line 2491). [192, 240) 'result' (line 2511). [272, 276) 'compRes' (line 2512). [288, 312) 'mod_line' (line 2517). [352, 376) 'aclicMode' (line 2518). [416, 440) 'arguments' (line 2519). [480, 504) 'io' (line 2520). [544, 568) 'fname' (line 2521). [608, 632) 'ref.tmp' (line 2547). [672, 696) 'ref.tmp145' (line 2547). [736, 768) 'code' (line 2555). [800, 832) 'codeline' (line 2556). [864, 1384) 'in' (line 2559). [1520, 1552) 'ref.tmp176' (line 2562). [1584, 1600) 'agg.tmp'. [1616, 1624) 'ref.tmp198' (line 2568). [1648, 1664) 'agg.tmp207'. [1680, 1696) 'autoParseRaii' (line 2588). HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork. (longjmp and C++ exceptions *are* suppor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:6991,energy efficiency,alloc,alloca,6991," f5 f5 f5 f5 f5. 0x10007e757ae0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757af0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. =>0x10007e757b00: f5 f5 f5 f5 f5[f5]f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b10: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b20: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b30: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b40: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b50: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==529104==ABORTING. ```. ```. at src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:49. at src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:41. compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess, result=0x7ffff3afd8c0, disableValuePrinting=false). at src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:314. input_line=0x7ffff3afd829 ""#define XYZ 21"", compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess,. result=0x7ffff3afd8c0) at src/core/metacling/src/TCling.cxx:2431. error=0x7fffd78cb0f4 <x>) at src/core/metacling/src/TCling.cxx:2591. sync=false, err=0x7fffd78cb0f4 <x>) at src/core/base/src/TApplication.cxx:1472. line=0x7fffd78c9000 ""#define XYZ 21"", error=0x7fffd78cb0f4 <x>). at src/core/base/src/TROOT.cxx:2328. from asan/roottest/cling/other/fileClose_C.so. filename=0x6070000f0fd0 ""asan/roottest/cling/other/fileClose_C.so"", flag=257). at /home/axel/build/llvm/llvm-project/compiler-rt/lib/asan/../sanitizer_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:7017,energy efficiency,alloc,alloca,7017,"57ae0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757af0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. =>0x10007e757b00: f5 f5 f5 f5 f5[f5]f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b10: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b20: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b30: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b40: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b50: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==529104==ABORTING. ```. ```. at src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:49. at src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:41. compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess, result=0x7ffff3afd8c0, disableValuePrinting=false). at src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:314. input_line=0x7ffff3afd829 ""#define XYZ 21"", compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess,. result=0x7ffff3afd8c0) at src/core/metacling/src/TCling.cxx:2431. error=0x7fffd78cb0f4 <x>) at src/core/metacling/src/TCling.cxx:2591. sync=false, err=0x7fffd78cb0f4 <x>) at src/core/base/src/TApplication.cxx:1472. line=0x7fffd78c9000 ""#define XYZ 21"", error=0x7fffd78cb0f4 <x>). at src/core/base/src/TROOT.cxx:2328. from asan/roottest/cling/other/fileClose_C.so. filename=0x6070000f0fd0 ""asan/roottest/cling/other/fileClose_C.so"", flag=257). at /home/axel/build/llvm/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:7509,energy efficiency,core,core,7509," f5 f5. 0x10007e757b50: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==529104==ABORTING. ```. ```. at src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:49. at src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:41. compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess, result=0x7ffff3afd8c0, disableValuePrinting=false). at src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:314. input_line=0x7ffff3afd829 ""#define XYZ 21"", compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess,. result=0x7ffff3afd8c0) at src/core/metacling/src/TCling.cxx:2431. error=0x7fffd78cb0f4 <x>) at src/core/metacling/src/TCling.cxx:2591. sync=false, err=0x7fffd78cb0f4 <x>) at src/core/base/src/TApplication.cxx:1472. line=0x7fffd78c9000 ""#define XYZ 21"", error=0x7fffd78cb0f4 <x>). at src/core/base/src/TROOT.cxx:2328. from asan/roottest/cling/other/fileClose_C.so. filename=0x6070000f0fd0 ""asan/roottest/cling/other/fileClose_C.so"", flag=257). at /home/axel/build/llvm/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:6270. at src/interpreter/cling/lib/Utils/PlatformPosix.cpp:118. permanent=false, resolved=true). at src/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:184. at src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1444. T=0x0) at src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1560. at src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:57. actionResult=@0x7ffff39532b0: cling::MetaSema::AR_Success). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:7578,energy efficiency,core,core,7578," f5 f5. 0x10007e757b50: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==529104==ABORTING. ```. ```. at src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:49. at src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:41. compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess, result=0x7ffff3afd8c0, disableValuePrinting=false). at src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:314. input_line=0x7ffff3afd829 ""#define XYZ 21"", compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess,. result=0x7ffff3afd8c0) at src/core/metacling/src/TCling.cxx:2431. error=0x7fffd78cb0f4 <x>) at src/core/metacling/src/TCling.cxx:2591. sync=false, err=0x7fffd78cb0f4 <x>) at src/core/base/src/TApplication.cxx:1472. line=0x7fffd78c9000 ""#define XYZ 21"", error=0x7fffd78cb0f4 <x>). at src/core/base/src/TROOT.cxx:2328. from asan/roottest/cling/other/fileClose_C.so. filename=0x6070000f0fd0 ""asan/roottest/cling/other/fileClose_C.so"", flag=257). at /home/axel/build/llvm/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:6270. at src/interpreter/cling/lib/Utils/PlatformPosix.cpp:118. permanent=false, resolved=true). at src/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:184. at src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1444. T=0x0) at src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1560. at src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:57. actionResult=@0x7ffff39532b0: cling::MetaSema::AR_Success). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:7657,energy efficiency,core,core,7657," f5 f5. 0x10007e757b50: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==529104==ABORTING. ```. ```. at src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:49. at src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:41. compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess, result=0x7ffff3afd8c0, disableValuePrinting=false). at src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:314. input_line=0x7ffff3afd829 ""#define XYZ 21"", compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess,. result=0x7ffff3afd8c0) at src/core/metacling/src/TCling.cxx:2431. error=0x7fffd78cb0f4 <x>) at src/core/metacling/src/TCling.cxx:2591. sync=false, err=0x7fffd78cb0f4 <x>) at src/core/base/src/TApplication.cxx:1472. line=0x7fffd78c9000 ""#define XYZ 21"", error=0x7fffd78cb0f4 <x>). at src/core/base/src/TROOT.cxx:2328. from asan/roottest/cling/other/fileClose_C.so. filename=0x6070000f0fd0 ""asan/roottest/cling/other/fileClose_C.so"", flag=257). at /home/axel/build/llvm/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:6270. at src/interpreter/cling/lib/Utils/PlatformPosix.cpp:118. permanent=false, resolved=true). at src/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:184. at src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1444. T=0x0) at src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1560. at src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:57. actionResult=@0x7ffff39532b0: cling::MetaSema::AR_Success). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:7766,energy efficiency,core,core,7766," f5 f5. 0x10007e757b50: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==529104==ABORTING. ```. ```. at src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:49. at src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:41. compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess, result=0x7ffff3afd8c0, disableValuePrinting=false). at src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:314. input_line=0x7ffff3afd829 ""#define XYZ 21"", compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess,. result=0x7ffff3afd8c0) at src/core/metacling/src/TCling.cxx:2431. error=0x7fffd78cb0f4 <x>) at src/core/metacling/src/TCling.cxx:2591. sync=false, err=0x7fffd78cb0f4 <x>) at src/core/base/src/TApplication.cxx:1472. line=0x7fffd78c9000 ""#define XYZ 21"", error=0x7fffd78cb0f4 <x>). at src/core/base/src/TROOT.cxx:2328. from asan/roottest/cling/other/fileClose_C.so. filename=0x6070000f0fd0 ""asan/roottest/cling/other/fileClose_C.so"", flag=257). at /home/axel/build/llvm/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:6270. at src/interpreter/cling/lib/Utils/PlatformPosix.cpp:118. permanent=false, resolved=true). at src/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:184. at src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1444. T=0x0) at src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1560. at src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:57. actionResult=@0x7ffff39532b0: cling::MetaSema::AR_Success). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:8076,interoperability,Platform,PlatformPosix,8076," f5 f5. 0x10007e757b50: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==529104==ABORTING. ```. ```. at src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:49. at src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:41. compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess, result=0x7ffff3afd8c0, disableValuePrinting=false). at src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:314. input_line=0x7ffff3afd829 ""#define XYZ 21"", compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess,. result=0x7ffff3afd8c0) at src/core/metacling/src/TCling.cxx:2431. error=0x7fffd78cb0f4 <x>) at src/core/metacling/src/TCling.cxx:2591. sync=false, err=0x7fffd78cb0f4 <x>) at src/core/base/src/TApplication.cxx:1472. line=0x7fffd78c9000 ""#define XYZ 21"", error=0x7fffd78cb0f4 <x>). at src/core/base/src/TROOT.cxx:2328. from asan/roottest/cling/other/fileClose_C.so. filename=0x6070000f0fd0 ""asan/roottest/cling/other/fileClose_C.so"", flag=257). at /home/axel/build/llvm/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:6270. at src/interpreter/cling/lib/Utils/PlatformPosix.cpp:118. permanent=false, resolved=true). at src/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:184. at src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1444. T=0x0) at src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1560. at src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:57. actionResult=@0x7ffff39532b0: cling::MetaSema::AR_Success). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:2400,modifiability,modul,module,2400,"cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:123:12. #5 0x7fffea191216 in cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:101:33. #6 0x7fffea14e5aa in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317:24. #7 0x7fffe99b67b7 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) src/core/metacling/src/TCling.cxx:2431:29. #8 0x7fffe99bde30 in TCling::Load(char const*, bool) src/core/metacling/src/TCling.cxx:3454:10. #9 0x7ffff7865f11 in TSystem::Load(char const*, char const*, bool) src/core/base/src/TSystem.cxx:1941:27. #10 0x7ffff7b8a0e3 in TUnixSystem::Load(char const*, char const*, bool) src/core/unix/src/TUnixSystem.cxx:2789:20. #11 0x7fffd78dd08b (<unknown module>). #12 0x7fffe9f8a5d9 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const src/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:376:3. #13 0x7fffe9d73dc2 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1141:20. #14 0x7fffe9d6e317 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1391:29. #15 0x7fffe9d6c1fe in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:819:9. #16 0x7fffea151826 in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) src/interpreter",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:4758,modifiability,variab,variable,4758,"const*, int*, bool) src/core/base/src/TApplication.cxx:1608:30. #20 0x7ffff771ebdf in TApplication::ProcessFile(char const*, int*, bool) src/core/base/src/TApplication.cxx:1480:11. #21 0x7ffff771e385 in TApplication::ProcessLine(char const*, bool, int*) src/core/base/src/TApplication.cxx:1453:14. #22 0x7ffff7f8157a in TRint::ProcessLineNr(char const*, char const*, int*) src/core/rint/src/TRint.cxx:766:11. #23 0x7ffff7f802f0 in TRint::Run(bool) src/core/rint/src/TRint.cxx:424:22. #24 0x4ff96d in main src/main/src/rmain.cxx:30:12. #25 0x7ffff6e040b2 in __libc_start_main /build/glibc-YbNSs7/glibc-2.31/csu/../csu/libc-start.c:308:16. #26 0x41f35d in _start (asan/bin/root.exe+0x41f35d). Address 0x7ffff3afd82a is located in stack of thread T0 at offset 42 in frame. #0 0x7fffe99b3d8f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) src/core/metacling/src/TCling.cxx:2456. This frame has 21 object(s):. [32, 56) 'sLine' (line 2462) <== Memory access at offset 42 is inside this variable. [96, 104) 'R__guard2471' (line 2471). [128, 136) 'R__guard2488' (line 2488). [160, 176) 'interpreterFlagsRAII' (line 2491). [192, 240) 'result' (line 2511). [272, 276) 'compRes' (line 2512). [288, 312) 'mod_line' (line 2517). [352, 376) 'aclicMode' (line 2518). [416, 440) 'arguments' (line 2519). [480, 504) 'io' (line 2520). [544, 568) 'fname' (line 2521). [608, 632) 'ref.tmp' (line 2547). [672, 696) 'ref.tmp145' (line 2547). [736, 768) 'code' (line 2555). [800, 832) 'codeline' (line 2556). [864, 1384) 'in' (line 2559). [1520, 1552) 'ref.tmp176' (line 2562). [1584, 1600) 'agg.tmp'. [1616, 1624) 'ref.tmp198' (line 2568). [1648, 1664) 'agg.tmp207'. [1680, 1696) 'autoParseRaii' (line 2588). HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork. (longjmp and C++ exceptions *are* supported). SUMMARY: AddressSanitizer: stack-use-after-return src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:58:11 in cling::MetaLexer::Lex(cl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:141,performance,failur,failure,141,"[cling] Lifetime of MetaParser is that of its input:; Before, MetaParser might have pointed to a StringRef whose storage. was gone, see asan failure in roottest/cling/other/runfileClose.C below. This was caused by recursive uses of MetaParser; see stack trace below:. the inner recursion returned, but as the same MetaParser object was used. by both frames, the objects cursor now pointed to freed memory. Instead, create a MetaParser (and MetaLexer) object per input. That way,. their lifetime corresponds to the lifetime of their input. ```. =================================================================. ==529104==ERROR: AddressSanitizer: stack-use-after-return on address 0x7ffff3afd82a at pc 0x7fffea18df6d bp 0x7fffffff8170 sp 0x7fffffff8168. READ of size 1 at 0x7ffff3afd82a thread T0. [Detaching after fork from child process 529183]. #0 0x7fffea18df6c in cling::MetaLexer::Lex(cling::Token&) src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:58:11. #1 0x7fffea190d7c in cling::MetaParser::lookAhead(unsigned int) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:89:15. #2 0x7fffea190bd5 in cling::MetaParser::consumeToken() src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:49:5. #3 0x7fffea191d4d in cling::MetaParser::isLCommand(cling::MetaSema::ActionResult&) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147:9. #4 0x7fffea1914dd in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:123:12. #5 0x7fffea191216 in cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:101:33. #6 0x7fffea14e5aa in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317:24. #7 0x7fffe99b67b7 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, clin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:398,performance,memor,memory,398,"[cling] Lifetime of MetaParser is that of its input:; Before, MetaParser might have pointed to a StringRef whose storage. was gone, see asan failure in roottest/cling/other/runfileClose.C below. This was caused by recursive uses of MetaParser; see stack trace below:. the inner recursion returned, but as the same MetaParser object was used. by both frames, the objects cursor now pointed to freed memory. Instead, create a MetaParser (and MetaLexer) object per input. That way,. their lifetime corresponds to the lifetime of their input. ```. =================================================================. ==529104==ERROR: AddressSanitizer: stack-use-after-return on address 0x7ffff3afd82a at pc 0x7fffea18df6d bp 0x7fffffff8170 sp 0x7fffffff8168. READ of size 1 at 0x7ffff3afd82a thread T0. [Detaching after fork from child process 529183]. #0 0x7fffea18df6c in cling::MetaLexer::Lex(cling::Token&) src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:58:11. #1 0x7fffea190d7c in cling::MetaParser::lookAhead(unsigned int) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:89:15. #2 0x7fffea190bd5 in cling::MetaParser::consumeToken() src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:49:5. #3 0x7fffea191d4d in cling::MetaParser::isLCommand(cling::MetaSema::ActionResult&) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147:9. #4 0x7fffea1914dd in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:123:12. #5 0x7fffea191216 in cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:101:33. #6 0x7fffea14e5aa in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317:24. #7 0x7fffe99b67b7 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, clin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:621,performance,ERROR,ERROR,621,"[cling] Lifetime of MetaParser is that of its input:; Before, MetaParser might have pointed to a StringRef whose storage. was gone, see asan failure in roottest/cling/other/runfileClose.C below. This was caused by recursive uses of MetaParser; see stack trace below:. the inner recursion returned, but as the same MetaParser object was used. by both frames, the objects cursor now pointed to freed memory. Instead, create a MetaParser (and MetaLexer) object per input. That way,. their lifetime corresponds to the lifetime of their input. ```. =================================================================. ==529104==ERROR: AddressSanitizer: stack-use-after-return on address 0x7ffff3afd82a at pc 0x7fffea18df6d bp 0x7fffffff8170 sp 0x7fffffff8168. READ of size 1 at 0x7ffff3afd82a thread T0. [Detaching after fork from child process 529183]. #0 0x7fffea18df6c in cling::MetaLexer::Lex(cling::Token&) src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:58:11. #1 0x7fffea190d7c in cling::MetaParser::lookAhead(unsigned int) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:89:15. #2 0x7fffea190bd5 in cling::MetaParser::consumeToken() src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:49:5. #3 0x7fffea191d4d in cling::MetaParser::isLCommand(cling::MetaSema::ActionResult&) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147:9. #4 0x7fffea1914dd in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:123:12. #5 0x7fffea191216 in cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:101:33. #6 0x7fffea14e5aa in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317:24. #7 0x7fffe99b67b7 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, clin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:2083,performance,Load,Load,2083,"89:15. #2 0x7fffea190bd5 in cling::MetaParser::consumeToken() src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:49:5. #3 0x7fffea191d4d in cling::MetaParser::isLCommand(cling::MetaSema::ActionResult&) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147:9. #4 0x7fffea1914dd in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:123:12. #5 0x7fffea191216 in cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:101:33. #6 0x7fffea14e5aa in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317:24. #7 0x7fffe99b67b7 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) src/core/metacling/src/TCling.cxx:2431:29. #8 0x7fffe99bde30 in TCling::Load(char const*, bool) src/core/metacling/src/TCling.cxx:3454:10. #9 0x7ffff7865f11 in TSystem::Load(char const*, char const*, bool) src/core/base/src/TSystem.cxx:1941:27. #10 0x7ffff7b8a0e3 in TUnixSystem::Load(char const*, char const*, bool) src/core/unix/src/TUnixSystem.cxx:2789:20. #11 0x7fffd78dd08b (<unknown module>). #12 0x7fffe9f8a5d9 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const src/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:376:3. #13 0x7fffe9d73dc2 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1141:20. #14 0x7fffe9d6e317 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1391:29. #15 0x7fffe9d6c1fe in cling::Interpreter::process(std:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:2180,performance,Load,Load,2180,"ssor/MetaParser.cpp:49:5. #3 0x7fffea191d4d in cling::MetaParser::isLCommand(cling::MetaSema::ActionResult&) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147:9. #4 0x7fffea1914dd in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:123:12. #5 0x7fffea191216 in cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:101:33. #6 0x7fffea14e5aa in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317:24. #7 0x7fffe99b67b7 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) src/core/metacling/src/TCling.cxx:2431:29. #8 0x7fffe99bde30 in TCling::Load(char const*, bool) src/core/metacling/src/TCling.cxx:3454:10. #9 0x7ffff7865f11 in TSystem::Load(char const*, char const*, bool) src/core/base/src/TSystem.cxx:1941:27. #10 0x7ffff7b8a0e3 in TUnixSystem::Load(char const*, char const*, bool) src/core/unix/src/TUnixSystem.cxx:2789:20. #11 0x7fffd78dd08b (<unknown module>). #12 0x7fffe9f8a5d9 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const src/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:376:3. #13 0x7fffe9d73dc2 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1141:20. #14 0x7fffe9d6e317 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1391:29. #15 0x7fffe9d6c1fe in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:2291,performance,Load,Load,2291,"c/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147:9. #4 0x7fffea1914dd in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:123:12. #5 0x7fffea191216 in cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:101:33. #6 0x7fffea14e5aa in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317:24. #7 0x7fffe99b67b7 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) src/core/metacling/src/TCling.cxx:2431:29. #8 0x7fffe99bde30 in TCling::Load(char const*, bool) src/core/metacling/src/TCling.cxx:3454:10. #9 0x7ffff7865f11 in TSystem::Load(char const*, char const*, bool) src/core/base/src/TSystem.cxx:1941:27. #10 0x7ffff7b8a0e3 in TUnixSystem::Load(char const*, char const*, bool) src/core/unix/src/TUnixSystem.cxx:2789:20. #11 0x7fffd78dd08b (<unknown module>). #12 0x7fffe9f8a5d9 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const src/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:376:3. #13 0x7fffe9d73dc2 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1141:20. #14 0x7fffe9d6e317 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1391:29. #15 0x7fffe9d6c1fe in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:819:9. #16 0x7fffea151826 i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:4716,performance,Memor,Memory,4716,"f77203d3 in TApplication::ExecuteFile(char const*, int*, bool) src/core/base/src/TApplication.cxx:1608:30. #20 0x7ffff771ebdf in TApplication::ProcessFile(char const*, int*, bool) src/core/base/src/TApplication.cxx:1480:11. #21 0x7ffff771e385 in TApplication::ProcessLine(char const*, bool, int*) src/core/base/src/TApplication.cxx:1453:14. #22 0x7ffff7f8157a in TRint::ProcessLineNr(char const*, char const*, int*) src/core/rint/src/TRint.cxx:766:11. #23 0x7ffff7f802f0 in TRint::Run(bool) src/core/rint/src/TRint.cxx:424:22. #24 0x4ff96d in main src/main/src/rmain.cxx:30:12. #25 0x7ffff6e040b2 in __libc_start_main /build/glibc-YbNSs7/glibc-2.31/csu/../csu/libc-start.c:308:16. #26 0x41f35d in _start (asan/bin/root.exe+0x41f35d). Address 0x7ffff3afd82a is located in stack of thread T0 at offset 42 in frame. #0 0x7fffe99b3d8f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) src/core/metacling/src/TCling.cxx:2456. This frame has 21 object(s):. [32, 56) 'sLine' (line 2462) <== Memory access at offset 42 is inside this variable. [96, 104) 'R__guard2471' (line 2471). [128, 136) 'R__guard2488' (line 2488). [160, 176) 'interpreterFlagsRAII' (line 2491). [192, 240) 'result' (line 2511). [272, 276) 'compRes' (line 2512). [288, 312) 'mod_line' (line 2517). [352, 376) 'aclicMode' (line 2518). [416, 440) 'arguments' (line 2519). [480, 504) 'io' (line 2520). [544, 568) 'fname' (line 2521). [608, 632) 'ref.tmp' (line 2547). [672, 696) 'ref.tmp145' (line 2547). [736, 768) 'code' (line 2555). [800, 832) 'codeline' (line 2556). [864, 1384) 'in' (line 2559). [1520, 1552) 'ref.tmp176' (line 2562). [1584, 1600) 'agg.tmp'. [1616, 1624) 'ref.tmp198' (line 2568). [1648, 1664) 'agg.tmp207'. [1680, 1696) 'autoParseRaii' (line 2588). HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork. (longjmp and C++ exceptions *are* supported). SUMMARY: AddressSanitizer: stack-use-after-return src/interpreter/cling/lib/MetaProcessor/Meta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:7545,performance,error,error,7545," f5 f5. 0x10007e757b50: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==529104==ABORTING. ```. ```. at src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:49. at src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:41. compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess, result=0x7ffff3afd8c0, disableValuePrinting=false). at src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:314. input_line=0x7ffff3afd829 ""#define XYZ 21"", compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess,. result=0x7ffff3afd8c0) at src/core/metacling/src/TCling.cxx:2431. error=0x7fffd78cb0f4 <x>) at src/core/metacling/src/TCling.cxx:2591. sync=false, err=0x7fffd78cb0f4 <x>) at src/core/base/src/TApplication.cxx:1472. line=0x7fffd78c9000 ""#define XYZ 21"", error=0x7fffd78cb0f4 <x>). at src/core/base/src/TROOT.cxx:2328. from asan/roottest/cling/other/fileClose_C.so. filename=0x6070000f0fd0 ""asan/roottest/cling/other/fileClose_C.so"", flag=257). at /home/axel/build/llvm/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:6270. at src/interpreter/cling/lib/Utils/PlatformPosix.cpp:118. permanent=false, resolved=true). at src/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:184. at src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1444. T=0x0) at src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1560. at src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:57. actionResult=@0x7ffff39532b0: cling::MetaSema::AR_Success). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:7732,performance,error,error,7732," f5 f5. 0x10007e757b50: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==529104==ABORTING. ```. ```. at src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:49. at src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:41. compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess, result=0x7ffff3afd8c0, disableValuePrinting=false). at src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:314. input_line=0x7ffff3afd829 ""#define XYZ 21"", compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess,. result=0x7ffff3afd8c0) at src/core/metacling/src/TCling.cxx:2431. error=0x7fffd78cb0f4 <x>) at src/core/metacling/src/TCling.cxx:2591. sync=false, err=0x7fffd78cb0f4 <x>) at src/core/base/src/TApplication.cxx:1472. line=0x7fffd78c9000 ""#define XYZ 21"", error=0x7fffd78cb0f4 <x>). at src/core/base/src/TROOT.cxx:2328. from asan/roottest/cling/other/fileClose_C.so. filename=0x6070000f0fd0 ""asan/roottest/cling/other/fileClose_C.so"", flag=257). at /home/axel/build/llvm/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:6270. at src/interpreter/cling/lib/Utils/PlatformPosix.cpp:118. permanent=false, resolved=true). at src/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:184. at src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1444. T=0x0) at src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1560. at src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:57. actionResult=@0x7ffff39532b0: cling::MetaSema::AR_Success). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:141,reliability,fail,failure,141,"[cling] Lifetime of MetaParser is that of its input:; Before, MetaParser might have pointed to a StringRef whose storage. was gone, see asan failure in roottest/cling/other/runfileClose.C below. This was caused by recursive uses of MetaParser; see stack trace below:. the inner recursion returned, but as the same MetaParser object was used. by both frames, the objects cursor now pointed to freed memory. Instead, create a MetaParser (and MetaLexer) object per input. That way,. their lifetime corresponds to the lifetime of their input. ```. =================================================================. ==529104==ERROR: AddressSanitizer: stack-use-after-return on address 0x7ffff3afd82a at pc 0x7fffea18df6d bp 0x7fffffff8170 sp 0x7fffffff8168. READ of size 1 at 0x7ffff3afd82a thread T0. [Detaching after fork from child process 529183]. #0 0x7fffea18df6c in cling::MetaLexer::Lex(cling::Token&) src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:58:11. #1 0x7fffea190d7c in cling::MetaParser::lookAhead(unsigned int) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:89:15. #2 0x7fffea190bd5 in cling::MetaParser::consumeToken() src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:49:5. #3 0x7fffea191d4d in cling::MetaParser::isLCommand(cling::MetaSema::ActionResult&) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147:9. #4 0x7fffea1914dd in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:123:12. #5 0x7fffea191216 in cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:101:33. #6 0x7fffea14e5aa in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317:24. #7 0x7fffe99b67b7 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, clin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:4693,reliability,sLi,sLine,4693,"cxx:3496:17. #19 0x7ffff77203d3 in TApplication::ExecuteFile(char const*, int*, bool) src/core/base/src/TApplication.cxx:1608:30. #20 0x7ffff771ebdf in TApplication::ProcessFile(char const*, int*, bool) src/core/base/src/TApplication.cxx:1480:11. #21 0x7ffff771e385 in TApplication::ProcessLine(char const*, bool, int*) src/core/base/src/TApplication.cxx:1453:14. #22 0x7ffff7f8157a in TRint::ProcessLineNr(char const*, char const*, int*) src/core/rint/src/TRint.cxx:766:11. #23 0x7ffff7f802f0 in TRint::Run(bool) src/core/rint/src/TRint.cxx:424:22. #24 0x4ff96d in main src/main/src/rmain.cxx:30:12. #25 0x7ffff6e040b2 in __libc_start_main /build/glibc-YbNSs7/glibc-2.31/csu/../csu/libc-start.c:308:16. #26 0x41f35d in _start (asan/bin/root.exe+0x41f35d). Address 0x7ffff3afd82a is located in stack of thread T0 at offset 42 in frame. #0 0x7fffe99b3d8f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) src/core/metacling/src/TCling.cxx:2456. This frame has 21 object(s):. [32, 56) 'sLine' (line 2462) <== Memory access at offset 42 is inside this variable. [96, 104) 'R__guard2471' (line 2471). [128, 136) 'R__guard2488' (line 2488). [160, 176) 'interpreterFlagsRAII' (line 2491). [192, 240) 'result' (line 2511). [272, 276) 'compRes' (line 2512). [288, 312) 'mod_line' (line 2517). [352, 376) 'aclicMode' (line 2518). [416, 440) 'arguments' (line 2519). [480, 504) 'io' (line 2520). [544, 568) 'fname' (line 2521). [608, 632) 'ref.tmp' (line 2547). [672, 696) 'ref.tmp145' (line 2547). [736, 768) 'code' (line 2555). [800, 832) 'codeline' (line 2556). [864, 1384) 'in' (line 2559). [1520, 1552) 'ref.tmp176' (line 2562). [1584, 1600) 'agg.tmp'. [1616, 1624) 'ref.tmp198' (line 2568). [1648, 1664) 'agg.tmp207'. [1680, 1696) 'autoParseRaii' (line 2588). HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork. (longjmp and C++ exceptions *are* supported). SUMMARY: AddressSanitizer: stack-use-after-return src/interpreter/cling",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:46,safety,input,input,46,"[cling] Lifetime of MetaParser is that of its input:; Before, MetaParser might have pointed to a StringRef whose storage. was gone, see asan failure in roottest/cling/other/runfileClose.C below. This was caused by recursive uses of MetaParser; see stack trace below:. the inner recursion returned, but as the same MetaParser object was used. by both frames, the objects cursor now pointed to freed memory. Instead, create a MetaParser (and MetaLexer) object per input. That way,. their lifetime corresponds to the lifetime of their input. ```. =================================================================. ==529104==ERROR: AddressSanitizer: stack-use-after-return on address 0x7ffff3afd82a at pc 0x7fffea18df6d bp 0x7fffffff8170 sp 0x7fffffff8168. READ of size 1 at 0x7ffff3afd82a thread T0. [Detaching after fork from child process 529183]. #0 0x7fffea18df6c in cling::MetaLexer::Lex(cling::Token&) src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:58:11. #1 0x7fffea190d7c in cling::MetaParser::lookAhead(unsigned int) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:89:15. #2 0x7fffea190bd5 in cling::MetaParser::consumeToken() src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:49:5. #3 0x7fffea191d4d in cling::MetaParser::isLCommand(cling::MetaSema::ActionResult&) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147:9. #4 0x7fffea1914dd in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:123:12. #5 0x7fffea191216 in cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:101:33. #6 0x7fffea14e5aa in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317:24. #7 0x7fffe99b67b7 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, clin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:462,safety,input,input,462,"[cling] Lifetime of MetaParser is that of its input:; Before, MetaParser might have pointed to a StringRef whose storage. was gone, see asan failure in roottest/cling/other/runfileClose.C below. This was caused by recursive uses of MetaParser; see stack trace below:. the inner recursion returned, but as the same MetaParser object was used. by both frames, the objects cursor now pointed to freed memory. Instead, create a MetaParser (and MetaLexer) object per input. That way,. their lifetime corresponds to the lifetime of their input. ```. =================================================================. ==529104==ERROR: AddressSanitizer: stack-use-after-return on address 0x7ffff3afd82a at pc 0x7fffea18df6d bp 0x7fffffff8170 sp 0x7fffffff8168. READ of size 1 at 0x7ffff3afd82a thread T0. [Detaching after fork from child process 529183]. #0 0x7fffea18df6c in cling::MetaLexer::Lex(cling::Token&) src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:58:11. #1 0x7fffea190d7c in cling::MetaParser::lookAhead(unsigned int) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:89:15. #2 0x7fffea190bd5 in cling::MetaParser::consumeToken() src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:49:5. #3 0x7fffea191d4d in cling::MetaParser::isLCommand(cling::MetaSema::ActionResult&) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147:9. #4 0x7fffea1914dd in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:123:12. #5 0x7fffea191216 in cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:101:33. #6 0x7fffea14e5aa in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317:24. #7 0x7fffe99b67b7 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, clin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:532,safety,input,input,532,"[cling] Lifetime of MetaParser is that of its input:; Before, MetaParser might have pointed to a StringRef whose storage. was gone, see asan failure in roottest/cling/other/runfileClose.C below. This was caused by recursive uses of MetaParser; see stack trace below:. the inner recursion returned, but as the same MetaParser object was used. by both frames, the objects cursor now pointed to freed memory. Instead, create a MetaParser (and MetaLexer) object per input. That way,. their lifetime corresponds to the lifetime of their input. ```. =================================================================. ==529104==ERROR: AddressSanitizer: stack-use-after-return on address 0x7ffff3afd82a at pc 0x7fffea18df6d bp 0x7fffffff8170 sp 0x7fffffff8168. READ of size 1 at 0x7ffff3afd82a thread T0. [Detaching after fork from child process 529183]. #0 0x7fffea18df6c in cling::MetaLexer::Lex(cling::Token&) src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:58:11. #1 0x7fffea190d7c in cling::MetaParser::lookAhead(unsigned int) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:89:15. #2 0x7fffea190bd5 in cling::MetaParser::consumeToken() src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:49:5. #3 0x7fffea191d4d in cling::MetaParser::isLCommand(cling::MetaSema::ActionResult&) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147:9. #4 0x7fffea1914dd in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:123:12. #5 0x7fffea191216 in cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:101:33. #6 0x7fffea14e5aa in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317:24. #7 0x7fffe99b67b7 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, clin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:621,safety,ERROR,ERROR,621,"[cling] Lifetime of MetaParser is that of its input:; Before, MetaParser might have pointed to a StringRef whose storage. was gone, see asan failure in roottest/cling/other/runfileClose.C below. This was caused by recursive uses of MetaParser; see stack trace below:. the inner recursion returned, but as the same MetaParser object was used. by both frames, the objects cursor now pointed to freed memory. Instead, create a MetaParser (and MetaLexer) object per input. That way,. their lifetime corresponds to the lifetime of their input. ```. =================================================================. ==529104==ERROR: AddressSanitizer: stack-use-after-return on address 0x7ffff3afd82a at pc 0x7fffea18df6d bp 0x7fffffff8170 sp 0x7fffffff8168. READ of size 1 at 0x7ffff3afd82a thread T0. [Detaching after fork from child process 529183]. #0 0x7fffea18df6c in cling::MetaLexer::Lex(cling::Token&) src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:58:11. #1 0x7fffea190d7c in cling::MetaParser::lookAhead(unsigned int) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:89:15. #2 0x7fffea190bd5 in cling::MetaParser::consumeToken() src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:49:5. #3 0x7fffea191d4d in cling::MetaParser::isLCommand(cling::MetaSema::ActionResult&) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147:9. #4 0x7fffea1914dd in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:123:12. #5 0x7fffea191216 in cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:101:33. #6 0x7fffea14e5aa in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317:24. #7 0x7fffe99b67b7 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, clin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:2400,safety,modul,module,2400,"cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:123:12. #5 0x7fffea191216 in cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:101:33. #6 0x7fffea14e5aa in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317:24. #7 0x7fffe99b67b7 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) src/core/metacling/src/TCling.cxx:2431:29. #8 0x7fffe99bde30 in TCling::Load(char const*, bool) src/core/metacling/src/TCling.cxx:3454:10. #9 0x7ffff7865f11 in TSystem::Load(char const*, char const*, bool) src/core/base/src/TSystem.cxx:1941:27. #10 0x7ffff7b8a0e3 in TUnixSystem::Load(char const*, char const*, bool) src/core/unix/src/TUnixSystem.cxx:2789:20. #11 0x7fffd78dd08b (<unknown module>). #12 0x7fffe9f8a5d9 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const src/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:376:3. #13 0x7fffe9d73dc2 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1141:20. #14 0x7fffe9d6e317 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1391:29. #15 0x7fffe9d6c1fe in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:819:9. #16 0x7fffea151826 in cling::MetaProcessor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) src/interpreter",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:5596,safety,except,exceptions,5596,"ErrorCode*) src/core/metacling/src/TCling.cxx:2456. This frame has 21 object(s):. [32, 56) 'sLine' (line 2462) <== Memory access at offset 42 is inside this variable. [96, 104) 'R__guard2471' (line 2471). [128, 136) 'R__guard2488' (line 2488). [160, 176) 'interpreterFlagsRAII' (line 2491). [192, 240) 'result' (line 2511). [272, 276) 'compRes' (line 2512). [288, 312) 'mod_line' (line 2517). [352, 376) 'aclicMode' (line 2518). [416, 440) 'arguments' (line 2519). [480, 504) 'io' (line 2520). [544, 568) 'fname' (line 2521). [608, 632) 'ref.tmp' (line 2547). [672, 696) 'ref.tmp145' (line 2547). [736, 768) 'code' (line 2555). [800, 832) 'codeline' (line 2556). [864, 1384) 'in' (line 2559). [1520, 1552) 'ref.tmp176' (line 2562). [1584, 1600) 'agg.tmp'. [1616, 1624) 'ref.tmp198' (line 2568). [1648, 1664) 'agg.tmp207'. [1680, 1696) 'autoParseRaii' (line 2588). HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork. (longjmp and C++ exceptions *are* supported). SUMMARY: AddressSanitizer: stack-use-after-return src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:58:11 in cling::MetaLexer::Lex(cling::Token&). Shadow bytes around the buggy address:. 0x10007e757ab0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757ac0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757ad0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757ae0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757af0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. =>0x10007e757b00: f5 f5 f5 f5 f5[f5]f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b10: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b20: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b30: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b40: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b50: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. Shadow byte legend (one shadow byte represents 8 application bytes):",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:7545,safety,error,error,7545," f5 f5. 0x10007e757b50: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==529104==ABORTING. ```. ```. at src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:49. at src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:41. compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess, result=0x7ffff3afd8c0, disableValuePrinting=false). at src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:314. input_line=0x7ffff3afd829 ""#define XYZ 21"", compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess,. result=0x7ffff3afd8c0) at src/core/metacling/src/TCling.cxx:2431. error=0x7fffd78cb0f4 <x>) at src/core/metacling/src/TCling.cxx:2591. sync=false, err=0x7fffd78cb0f4 <x>) at src/core/base/src/TApplication.cxx:1472. line=0x7fffd78c9000 ""#define XYZ 21"", error=0x7fffd78cb0f4 <x>). at src/core/base/src/TROOT.cxx:2328. from asan/roottest/cling/other/fileClose_C.so. filename=0x6070000f0fd0 ""asan/roottest/cling/other/fileClose_C.so"", flag=257). at /home/axel/build/llvm/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:6270. at src/interpreter/cling/lib/Utils/PlatformPosix.cpp:118. permanent=false, resolved=true). at src/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:184. at src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1444. T=0x0) at src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1560. at src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:57. actionResult=@0x7ffff39532b0: cling::MetaSema::AR_Success). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:7732,safety,error,error,7732," f5 f5. 0x10007e757b50: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==529104==ABORTING. ```. ```. at src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:49. at src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:41. compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess, result=0x7ffff3afd8c0, disableValuePrinting=false). at src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:314. input_line=0x7ffff3afd829 ""#define XYZ 21"", compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess,. result=0x7ffff3afd8c0) at src/core/metacling/src/TCling.cxx:2431. error=0x7fffd78cb0f4 <x>) at src/core/metacling/src/TCling.cxx:2591. sync=false, err=0x7fffd78cb0f4 <x>) at src/core/base/src/TApplication.cxx:1472. line=0x7fffd78c9000 ""#define XYZ 21"", error=0x7fffd78cb0f4 <x>). at src/core/base/src/TROOT.cxx:2328. from asan/roottest/cling/other/fileClose_C.so. filename=0x6070000f0fd0 ""asan/roottest/cling/other/fileClose_C.so"", flag=257). at /home/axel/build/llvm/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:6270. at src/interpreter/cling/lib/Utils/PlatformPosix.cpp:118. permanent=false, resolved=true). at src/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:184. at src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1444. T=0x0) at src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1560. at src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:57. actionResult=@0x7ffff39532b0: cling::MetaSema::AR_Success). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:897,security,Token,Token,897,"[cling] Lifetime of MetaParser is that of its input:; Before, MetaParser might have pointed to a StringRef whose storage. was gone, see asan failure in roottest/cling/other/runfileClose.C below. This was caused by recursive uses of MetaParser; see stack trace below:. the inner recursion returned, but as the same MetaParser object was used. by both frames, the objects cursor now pointed to freed memory. Instead, create a MetaParser (and MetaLexer) object per input. That way,. their lifetime corresponds to the lifetime of their input. ```. =================================================================. ==529104==ERROR: AddressSanitizer: stack-use-after-return on address 0x7ffff3afd82a at pc 0x7fffea18df6d bp 0x7fffffff8170 sp 0x7fffffff8168. READ of size 1 at 0x7ffff3afd82a thread T0. [Detaching after fork from child process 529183]. #0 0x7fffea18df6c in cling::MetaLexer::Lex(cling::Token&) src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:58:11. #1 0x7fffea190d7c in cling::MetaParser::lookAhead(unsigned int) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:89:15. #2 0x7fffea190bd5 in cling::MetaParser::consumeToken() src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:49:5. #3 0x7fffea191d4d in cling::MetaParser::isLCommand(cling::MetaSema::ActionResult&) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147:9. #4 0x7fffea1914dd in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:123:12. #5 0x7fffea191216 in cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:101:33. #6 0x7fffea14e5aa in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317:24. #7 0x7fffe99b67b7 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, clin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:4723,security,access,access,4723,"3 in TApplication::ExecuteFile(char const*, int*, bool) src/core/base/src/TApplication.cxx:1608:30. #20 0x7ffff771ebdf in TApplication::ProcessFile(char const*, int*, bool) src/core/base/src/TApplication.cxx:1480:11. #21 0x7ffff771e385 in TApplication::ProcessLine(char const*, bool, int*) src/core/base/src/TApplication.cxx:1453:14. #22 0x7ffff7f8157a in TRint::ProcessLineNr(char const*, char const*, int*) src/core/rint/src/TRint.cxx:766:11. #23 0x7ffff7f802f0 in TRint::Run(bool) src/core/rint/src/TRint.cxx:424:22. #24 0x4ff96d in main src/main/src/rmain.cxx:30:12. #25 0x7ffff6e040b2 in __libc_start_main /build/glibc-YbNSs7/glibc-2.31/csu/../csu/libc-start.c:308:16. #26 0x41f35d in _start (asan/bin/root.exe+0x41f35d). Address 0x7ffff3afd82a is located in stack of thread T0 at offset 42 in frame. #0 0x7fffe99b3d8f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) src/core/metacling/src/TCling.cxx:2456. This frame has 21 object(s):. [32, 56) 'sLine' (line 2462) <== Memory access at offset 42 is inside this variable. [96, 104) 'R__guard2471' (line 2471). [128, 136) 'R__guard2488' (line 2488). [160, 176) 'interpreterFlagsRAII' (line 2491). [192, 240) 'result' (line 2511). [272, 276) 'compRes' (line 2512). [288, 312) 'mod_line' (line 2517). [352, 376) 'aclicMode' (line 2518). [416, 440) 'arguments' (line 2519). [480, 504) 'io' (line 2520). [544, 568) 'fname' (line 2521). [608, 632) 'ref.tmp' (line 2547). [672, 696) 'ref.tmp145' (line 2547). [736, 768) 'code' (line 2555). [800, 832) 'codeline' (line 2556). [864, 1384) 'in' (line 2559). [1520, 1552) 'ref.tmp176' (line 2562). [1584, 1600) 'agg.tmp'. [1616, 1624) 'ref.tmp198' (line 2568). [1648, 1664) 'agg.tmp207'. [1680, 1696) 'autoParseRaii' (line 2588). HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork. (longjmp and C++ exceptions *are* supported). SUMMARY: AddressSanitizer: stack-use-after-return src/interpreter/cling/lib/MetaProcessor/MetaLexer.c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:5767,security,Token,Token,5767,"6, 104) 'R__guard2471' (line 2471). [128, 136) 'R__guard2488' (line 2488). [160, 176) 'interpreterFlagsRAII' (line 2491). [192, 240) 'result' (line 2511). [272, 276) 'compRes' (line 2512). [288, 312) 'mod_line' (line 2517). [352, 376) 'aclicMode' (line 2518). [416, 440) 'arguments' (line 2519). [480, 504) 'io' (line 2520). [544, 568) 'fname' (line 2521). [608, 632) 'ref.tmp' (line 2547). [672, 696) 'ref.tmp145' (line 2547). [736, 768) 'code' (line 2555). [800, 832) 'codeline' (line 2556). [864, 1384) 'in' (line 2559). [1520, 1552) 'ref.tmp176' (line 2562). [1584, 1600) 'agg.tmp'. [1616, 1624) 'ref.tmp198' (line 2568). [1648, 1664) 'agg.tmp207'. [1680, 1696) 'autoParseRaii' (line 2588). HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork. (longjmp and C++ exceptions *are* supported). SUMMARY: AddressSanitizer: stack-use-after-return src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:58:11 in cling::MetaLexer::Lex(cling::Token&). Shadow bytes around the buggy address:. 0x10007e757ab0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757ac0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757ad0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757ae0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757af0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. =>0x10007e757b00: f5 f5 f5 f5 f5[f5]f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b10: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b20: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b30: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b40: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b50: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:6929,security,cookie,cookie,6929," f5 f5 f5 f5. 0x10007e757ad0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757ae0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757af0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. =>0x10007e757b00: f5 f5 f5 f5 f5[f5]f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b10: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b20: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b30: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b40: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b50: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==529104==ABORTING. ```. ```. at src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:49. at src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:41. compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess, result=0x7ffff3afd8c0, disableValuePrinting=false). at src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:314. input_line=0x7ffff3afd829 ""#define XYZ 21"", compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess,. result=0x7ffff3afd8c0) at src/core/metacling/src/TCling.cxx:2431. error=0x7fffd78cb0f4 <x>) at src/core/metacling/src/TCling.cxx:2591. sync=false, err=0x7fffd78cb0f4 <x>) at src/core/base/src/TApplication.cxx:1472. line=0x7fffd78c9000 ""#define XYZ 21"", error=0x7fffd78cb0f4 <x>). at src/core/base/src/TROOT.cxx:2328. from asan/roottest/cling/other/fileClose_C.so. filename=0x6070000f0fd0 ""asan/roottest/cling/other/fileClose_C.so"", flag=257). at /home/a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:254,testability,trace,trace,254,"[cling] Lifetime of MetaParser is that of its input:; Before, MetaParser might have pointed to a StringRef whose storage. was gone, see asan failure in roottest/cling/other/runfileClose.C below. This was caused by recursive uses of MetaParser; see stack trace below:. the inner recursion returned, but as the same MetaParser object was used. by both frames, the objects cursor now pointed to freed memory. Instead, create a MetaParser (and MetaLexer) object per input. That way,. their lifetime corresponds to the lifetime of their input. ```. =================================================================. ==529104==ERROR: AddressSanitizer: stack-use-after-return on address 0x7ffff3afd82a at pc 0x7fffea18df6d bp 0x7fffffff8170 sp 0x7fffffff8168. READ of size 1 at 0x7ffff3afd82a thread T0. [Detaching after fork from child process 529183]. #0 0x7fffea18df6c in cling::MetaLexer::Lex(cling::Token&) src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:58:11. #1 0x7fffea190d7c in cling::MetaParser::lookAhead(unsigned int) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:89:15. #2 0x7fffea190bd5 in cling::MetaParser::consumeToken() src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:49:5. #3 0x7fffea191d4d in cling::MetaParser::isLCommand(cling::MetaSema::ActionResult&) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147:9. #4 0x7fffea1914dd in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:123:12. #5 0x7fffea191216 in cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:101:33. #6 0x7fffea14e5aa in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317:24. #7 0x7fffe99b67b7 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, clin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:46,usability,input,input,46,"[cling] Lifetime of MetaParser is that of its input:; Before, MetaParser might have pointed to a StringRef whose storage. was gone, see asan failure in roottest/cling/other/runfileClose.C below. This was caused by recursive uses of MetaParser; see stack trace below:. the inner recursion returned, but as the same MetaParser object was used. by both frames, the objects cursor now pointed to freed memory. Instead, create a MetaParser (and MetaLexer) object per input. That way,. their lifetime corresponds to the lifetime of their input. ```. =================================================================. ==529104==ERROR: AddressSanitizer: stack-use-after-return on address 0x7ffff3afd82a at pc 0x7fffea18df6d bp 0x7fffffff8170 sp 0x7fffffff8168. READ of size 1 at 0x7ffff3afd82a thread T0. [Detaching after fork from child process 529183]. #0 0x7fffea18df6c in cling::MetaLexer::Lex(cling::Token&) src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:58:11. #1 0x7fffea190d7c in cling::MetaParser::lookAhead(unsigned int) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:89:15. #2 0x7fffea190bd5 in cling::MetaParser::consumeToken() src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:49:5. #3 0x7fffea191d4d in cling::MetaParser::isLCommand(cling::MetaSema::ActionResult&) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147:9. #4 0x7fffea1914dd in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:123:12. #5 0x7fffea191216 in cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:101:33. #6 0x7fffea14e5aa in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317:24. #7 0x7fffe99b67b7 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, clin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:370,usability,cursor,cursor,370,"[cling] Lifetime of MetaParser is that of its input:; Before, MetaParser might have pointed to a StringRef whose storage. was gone, see asan failure in roottest/cling/other/runfileClose.C below. This was caused by recursive uses of MetaParser; see stack trace below:. the inner recursion returned, but as the same MetaParser object was used. by both frames, the objects cursor now pointed to freed memory. Instead, create a MetaParser (and MetaLexer) object per input. That way,. their lifetime corresponds to the lifetime of their input. ```. =================================================================. ==529104==ERROR: AddressSanitizer: stack-use-after-return on address 0x7ffff3afd82a at pc 0x7fffea18df6d bp 0x7fffffff8170 sp 0x7fffffff8168. READ of size 1 at 0x7ffff3afd82a thread T0. [Detaching after fork from child process 529183]. #0 0x7fffea18df6c in cling::MetaLexer::Lex(cling::Token&) src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:58:11. #1 0x7fffea190d7c in cling::MetaParser::lookAhead(unsigned int) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:89:15. #2 0x7fffea190bd5 in cling::MetaParser::consumeToken() src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:49:5. #3 0x7fffea191d4d in cling::MetaParser::isLCommand(cling::MetaSema::ActionResult&) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147:9. #4 0x7fffea1914dd in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:123:12. #5 0x7fffea191216 in cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:101:33. #6 0x7fffea14e5aa in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317:24. #7 0x7fffe99b67b7 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, clin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:398,usability,memor,memory,398,"[cling] Lifetime of MetaParser is that of its input:; Before, MetaParser might have pointed to a StringRef whose storage. was gone, see asan failure in roottest/cling/other/runfileClose.C below. This was caused by recursive uses of MetaParser; see stack trace below:. the inner recursion returned, but as the same MetaParser object was used. by both frames, the objects cursor now pointed to freed memory. Instead, create a MetaParser (and MetaLexer) object per input. That way,. their lifetime corresponds to the lifetime of their input. ```. =================================================================. ==529104==ERROR: AddressSanitizer: stack-use-after-return on address 0x7ffff3afd82a at pc 0x7fffea18df6d bp 0x7fffffff8170 sp 0x7fffffff8168. READ of size 1 at 0x7ffff3afd82a thread T0. [Detaching after fork from child process 529183]. #0 0x7fffea18df6c in cling::MetaLexer::Lex(cling::Token&) src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:58:11. #1 0x7fffea190d7c in cling::MetaParser::lookAhead(unsigned int) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:89:15. #2 0x7fffea190bd5 in cling::MetaParser::consumeToken() src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:49:5. #3 0x7fffea191d4d in cling::MetaParser::isLCommand(cling::MetaSema::ActionResult&) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147:9. #4 0x7fffea1914dd in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:123:12. #5 0x7fffea191216 in cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:101:33. #6 0x7fffea14e5aa in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317:24. #7 0x7fffe99b67b7 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, clin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:462,usability,input,input,462,"[cling] Lifetime of MetaParser is that of its input:; Before, MetaParser might have pointed to a StringRef whose storage. was gone, see asan failure in roottest/cling/other/runfileClose.C below. This was caused by recursive uses of MetaParser; see stack trace below:. the inner recursion returned, but as the same MetaParser object was used. by both frames, the objects cursor now pointed to freed memory. Instead, create a MetaParser (and MetaLexer) object per input. That way,. their lifetime corresponds to the lifetime of their input. ```. =================================================================. ==529104==ERROR: AddressSanitizer: stack-use-after-return on address 0x7ffff3afd82a at pc 0x7fffea18df6d bp 0x7fffffff8170 sp 0x7fffffff8168. READ of size 1 at 0x7ffff3afd82a thread T0. [Detaching after fork from child process 529183]. #0 0x7fffea18df6c in cling::MetaLexer::Lex(cling::Token&) src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:58:11. #1 0x7fffea190d7c in cling::MetaParser::lookAhead(unsigned int) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:89:15. #2 0x7fffea190bd5 in cling::MetaParser::consumeToken() src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:49:5. #3 0x7fffea191d4d in cling::MetaParser::isLCommand(cling::MetaSema::ActionResult&) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147:9. #4 0x7fffea1914dd in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:123:12. #5 0x7fffea191216 in cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:101:33. #6 0x7fffea14e5aa in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317:24. #7 0x7fffe99b67b7 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, clin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:532,usability,input,input,532,"[cling] Lifetime of MetaParser is that of its input:; Before, MetaParser might have pointed to a StringRef whose storage. was gone, see asan failure in roottest/cling/other/runfileClose.C below. This was caused by recursive uses of MetaParser; see stack trace below:. the inner recursion returned, but as the same MetaParser object was used. by both frames, the objects cursor now pointed to freed memory. Instead, create a MetaParser (and MetaLexer) object per input. That way,. their lifetime corresponds to the lifetime of their input. ```. =================================================================. ==529104==ERROR: AddressSanitizer: stack-use-after-return on address 0x7ffff3afd82a at pc 0x7fffea18df6d bp 0x7fffffff8170 sp 0x7fffffff8168. READ of size 1 at 0x7ffff3afd82a thread T0. [Detaching after fork from child process 529183]. #0 0x7fffea18df6c in cling::MetaLexer::Lex(cling::Token&) src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:58:11. #1 0x7fffea190d7c in cling::MetaParser::lookAhead(unsigned int) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:89:15. #2 0x7fffea190bd5 in cling::MetaParser::consumeToken() src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:49:5. #3 0x7fffea191d4d in cling::MetaParser::isLCommand(cling::MetaSema::ActionResult&) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147:9. #4 0x7fffea1914dd in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:123:12. #5 0x7fffea191216 in cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:101:33. #6 0x7fffea14e5aa in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317:24. #7 0x7fffe99b67b7 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, clin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:621,usability,ERROR,ERROR,621,"[cling] Lifetime of MetaParser is that of its input:; Before, MetaParser might have pointed to a StringRef whose storage. was gone, see asan failure in roottest/cling/other/runfileClose.C below. This was caused by recursive uses of MetaParser; see stack trace below:. the inner recursion returned, but as the same MetaParser object was used. by both frames, the objects cursor now pointed to freed memory. Instead, create a MetaParser (and MetaLexer) object per input. That way,. their lifetime corresponds to the lifetime of their input. ```. =================================================================. ==529104==ERROR: AddressSanitizer: stack-use-after-return on address 0x7ffff3afd82a at pc 0x7fffea18df6d bp 0x7fffffff8170 sp 0x7fffffff8168. READ of size 1 at 0x7ffff3afd82a thread T0. [Detaching after fork from child process 529183]. #0 0x7fffea18df6c in cling::MetaLexer::Lex(cling::Token&) src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:58:11. #1 0x7fffea190d7c in cling::MetaParser::lookAhead(unsigned int) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:89:15. #2 0x7fffea190bd5 in cling::MetaParser::consumeToken() src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:49:5. #3 0x7fffea191d4d in cling::MetaParser::isLCommand(cling::MetaSema::ActionResult&) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147:9. #4 0x7fffea1914dd in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:123:12. #5 0x7fffea191216 in cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:101:33. #6 0x7fffea14e5aa in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317:24. #7 0x7fffe99b67b7 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, clin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:4716,usability,Memor,Memory,4716,"f77203d3 in TApplication::ExecuteFile(char const*, int*, bool) src/core/base/src/TApplication.cxx:1608:30. #20 0x7ffff771ebdf in TApplication::ProcessFile(char const*, int*, bool) src/core/base/src/TApplication.cxx:1480:11. #21 0x7ffff771e385 in TApplication::ProcessLine(char const*, bool, int*) src/core/base/src/TApplication.cxx:1453:14. #22 0x7ffff7f8157a in TRint::ProcessLineNr(char const*, char const*, int*) src/core/rint/src/TRint.cxx:766:11. #23 0x7ffff7f802f0 in TRint::Run(bool) src/core/rint/src/TRint.cxx:424:22. #24 0x4ff96d in main src/main/src/rmain.cxx:30:12. #25 0x7ffff6e040b2 in __libc_start_main /build/glibc-YbNSs7/glibc-2.31/csu/../csu/libc-start.c:308:16. #26 0x41f35d in _start (asan/bin/root.exe+0x41f35d). Address 0x7ffff3afd82a is located in stack of thread T0 at offset 42 in frame. #0 0x7fffe99b3d8f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) src/core/metacling/src/TCling.cxx:2456. This frame has 21 object(s):. [32, 56) 'sLine' (line 2462) <== Memory access at offset 42 is inside this variable. [96, 104) 'R__guard2471' (line 2471). [128, 136) 'R__guard2488' (line 2488). [160, 176) 'interpreterFlagsRAII' (line 2491). [192, 240) 'result' (line 2511). [272, 276) 'compRes' (line 2512). [288, 312) 'mod_line' (line 2517). [352, 376) 'aclicMode' (line 2518). [416, 440) 'arguments' (line 2519). [480, 504) 'io' (line 2520). [544, 568) 'fname' (line 2521). [608, 632) 'ref.tmp' (line 2547). [672, 696) 'ref.tmp145' (line 2547). [736, 768) 'code' (line 2555). [800, 832) 'codeline' (line 2556). [864, 1384) 'in' (line 2559). [1520, 1552) 'ref.tmp176' (line 2562). [1584, 1600) 'agg.tmp'. [1616, 1624) 'ref.tmp198' (line 2568). [1648, 1664) 'agg.tmp207'. [1680, 1696) 'autoParseRaii' (line 2588). HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork. (longjmp and C++ exceptions *are* supported). SUMMARY: AddressSanitizer: stack-use-after-return src/interpreter/cling/lib/MetaProcessor/Meta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:5465,usability,HINT,HINT,5465,"f3afd82a is located in stack of thread T0 at offset 42 in frame. #0 0x7fffe99b3d8f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) src/core/metacling/src/TCling.cxx:2456. This frame has 21 object(s):. [32, 56) 'sLine' (line 2462) <== Memory access at offset 42 is inside this variable. [96, 104) 'R__guard2471' (line 2471). [128, 136) 'R__guard2488' (line 2488). [160, 176) 'interpreterFlagsRAII' (line 2491). [192, 240) 'result' (line 2511). [272, 276) 'compRes' (line 2512). [288, 312) 'mod_line' (line 2517). [352, 376) 'aclicMode' (line 2518). [416, 440) 'arguments' (line 2519). [480, 504) 'io' (line 2520). [544, 568) 'fname' (line 2521). [608, 632) 'ref.tmp' (line 2547). [672, 696) 'ref.tmp145' (line 2547). [736, 768) 'code' (line 2555). [800, 832) 'codeline' (line 2556). [864, 1384) 'in' (line 2559). [1520, 1552) 'ref.tmp176' (line 2562). [1584, 1600) 'agg.tmp'. [1616, 1624) 'ref.tmp198' (line 2568). [1648, 1664) 'agg.tmp207'. [1680, 1696) 'autoParseRaii' (line 2588). HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork. (longjmp and C++ exceptions *are* supported). SUMMARY: AddressSanitizer: stack-use-after-return src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:58:11 in cling::MetaLexer::Lex(cling::Token&). Shadow bytes around the buggy address:. 0x10007e757ab0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757ac0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757ad0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757ae0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757af0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. =>0x10007e757b00: f5 f5 f5 f5 f5[f5]f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b10: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b20: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b30: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b40: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:5526,usability,custom,custom,5526,"e. #0 0x7fffe99b3d8f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) src/core/metacling/src/TCling.cxx:2456. This frame has 21 object(s):. [32, 56) 'sLine' (line 2462) <== Memory access at offset 42 is inside this variable. [96, 104) 'R__guard2471' (line 2471). [128, 136) 'R__guard2488' (line 2488). [160, 176) 'interpreterFlagsRAII' (line 2491). [192, 240) 'result' (line 2511). [272, 276) 'compRes' (line 2512). [288, 312) 'mod_line' (line 2517). [352, 376) 'aclicMode' (line 2518). [416, 440) 'arguments' (line 2519). [480, 504) 'io' (line 2520). [544, 568) 'fname' (line 2521). [608, 632) 'ref.tmp' (line 2547). [672, 696) 'ref.tmp145' (line 2547). [736, 768) 'code' (line 2555). [800, 832) 'codeline' (line 2556). [864, 1384) 'in' (line 2559). [1520, 1552) 'ref.tmp176' (line 2562). [1584, 1600) 'agg.tmp'. [1616, 1624) 'ref.tmp198' (line 2568). [1648, 1664) 'agg.tmp207'. [1680, 1696) 'autoParseRaii' (line 2588). HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork. (longjmp and C++ exceptions *are* supported). SUMMARY: AddressSanitizer: stack-use-after-return src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:58:11 in cling::MetaLexer::Lex(cling::Token&). Shadow bytes around the buggy address:. 0x10007e757ab0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757ac0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757ad0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757ae0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757af0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. =>0x10007e757b00: f5 f5 f5 f5 f5[f5]f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b10: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b20: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b30: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b40: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b50: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:5613,usability,support,supported,5613,"ore/metacling/src/TCling.cxx:2456. This frame has 21 object(s):. [32, 56) 'sLine' (line 2462) <== Memory access at offset 42 is inside this variable. [96, 104) 'R__guard2471' (line 2471). [128, 136) 'R__guard2488' (line 2488). [160, 176) 'interpreterFlagsRAII' (line 2491). [192, 240) 'result' (line 2511). [272, 276) 'compRes' (line 2512). [288, 312) 'mod_line' (line 2517). [352, 376) 'aclicMode' (line 2518). [416, 440) 'arguments' (line 2519). [480, 504) 'io' (line 2520). [544, 568) 'fname' (line 2521). [608, 632) 'ref.tmp' (line 2547). [672, 696) 'ref.tmp145' (line 2547). [736, 768) 'code' (line 2555). [800, 832) 'codeline' (line 2556). [864, 1384) 'in' (line 2559). [1520, 1552) 'ref.tmp176' (line 2562). [1584, 1600) 'agg.tmp'. [1616, 1624) 'ref.tmp198' (line 2568). [1648, 1664) 'agg.tmp207'. [1680, 1696) 'autoParseRaii' (line 2588). HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork. (longjmp and C++ exceptions *are* supported). SUMMARY: AddressSanitizer: stack-use-after-return src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:58:11 in cling::MetaLexer::Lex(cling::Token&). Shadow bytes around the buggy address:. 0x10007e757ab0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757ac0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757ad0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757ae0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757af0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. =>0x10007e757b00: f5 f5 f5 f5 f5[f5]f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b10: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b20: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b30: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b40: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b50: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:6889,usability,user,user,6889,"7ac0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757ad0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757ae0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757af0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. =>0x10007e757b00: f5 f5 f5 f5 f5[f5]f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b10: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b20: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b30: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b40: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. 0x10007e757b50: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==529104==ABORTING. ```. ```. at src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:49. at src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:41. compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess, result=0x7ffff3afd8c0, disableValuePrinting=false). at src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:314. input_line=0x7ffff3afd829 ""#define XYZ 21"", compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess,. result=0x7ffff3afd8c0) at src/core/metacling/src/TCling.cxx:2431. error=0x7fffd78cb0f4 <x>) at src/core/metacling/src/TCling.cxx:2591. sync=false, err=0x7fffd78cb0f4 <x>) at src/core/base/src/TApplication.cxx:1472. line=0x7fffd78c9000 ""#define XYZ 21"", error=0x7fffd78cb0f4 <x>). at src/core/base/src/TROOT.cxx:2328. from asan/roottest/cling/other/fileClose_C.so. filename=0x6070000f0fd0 ""asan/roottest/cling/oth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:7545,usability,error,error,7545," f5 f5. 0x10007e757b50: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==529104==ABORTING. ```. ```. at src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:49. at src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:41. compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess, result=0x7ffff3afd8c0, disableValuePrinting=false). at src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:314. input_line=0x7ffff3afd829 ""#define XYZ 21"", compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess,. result=0x7ffff3afd8c0) at src/core/metacling/src/TCling.cxx:2431. error=0x7fffd78cb0f4 <x>) at src/core/metacling/src/TCling.cxx:2591. sync=false, err=0x7fffd78cb0f4 <x>) at src/core/base/src/TApplication.cxx:1472. line=0x7fffd78c9000 ""#define XYZ 21"", error=0x7fffd78cb0f4 <x>). at src/core/base/src/TROOT.cxx:2328. from asan/roottest/cling/other/fileClose_C.so. filename=0x6070000f0fd0 ""asan/roottest/cling/other/fileClose_C.so"", flag=257). at /home/axel/build/llvm/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:6270. at src/interpreter/cling/lib/Utils/PlatformPosix.cpp:118. permanent=false, resolved=true). at src/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:184. at src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1444. T=0x0) at src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1560. at src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:57. actionResult=@0x7ffff39532b0: cling::MetaSema::AR_Success). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8041:7732,usability,error,error,7732," f5 f5. 0x10007e757b50: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5. Shadow byte legend (one shadow byte represents 8 application bytes):. Addressable: 00. Partially addressable: 01 02 03 04 05 06 07. Heap left redzone: fa. Freed heap region: fd. Stack left redzone: f1. Stack mid redzone: f2. Stack right redzone: f3. Stack after return: f5. Stack use after scope: f8. Global redzone: f9. Global init order: f6. Poisoned by user: f7. Container overflow: fc. Array cookie: ac. Intra object redzone: bb. ASan internal: fe. Left alloca redzone: ca. Right alloca redzone: cb. Shadow gap: cc. ==529104==ABORTING. ```. ```. at src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:49. at src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:41. compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess, result=0x7ffff3afd8c0, disableValuePrinting=false). at src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:314. input_line=0x7ffff3afd829 ""#define XYZ 21"", compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess,. result=0x7ffff3afd8c0) at src/core/metacling/src/TCling.cxx:2431. error=0x7fffd78cb0f4 <x>) at src/core/metacling/src/TCling.cxx:2591. sync=false, err=0x7fffd78cb0f4 <x>) at src/core/base/src/TApplication.cxx:1472. line=0x7fffd78c9000 ""#define XYZ 21"", error=0x7fffd78cb0f4 <x>). at src/core/base/src/TROOT.cxx:2328. from asan/roottest/cling/other/fileClose_C.so. filename=0x6070000f0fd0 ""asan/roottest/cling/other/fileClose_C.so"", flag=257). at /home/axel/build/llvm/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:6270. at src/interpreter/cling/lib/Utils/PlatformPosix.cpp:118. permanent=false, resolved=true). at src/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:184. at src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1444. T=0x0) at src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1560. at src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:57. actionResult=@0x7ffff39532b0: cling::MetaSema::AR_Success). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8041
https://github.com/root-project/root/pull/8042:355,interoperability,platform,platforms,355,"[RF] Add unit test for pythonization of RooArgList iterator; In Jira issue [ROOT-10457](https://sft.its.cern.ch/jira/browse/ROOT-10457), it was reported that creating an iterator form. a RooArgList in Python does not work. In ROOT master it seems to work, and this commit suggests to put the. issue in a unit test so that we are sure that is works on all platforms.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8042
https://github.com/root-project/root/pull/8042:208,reliability,doe,does,208,"[RF] Add unit test for pythonization of RooArgList iterator; In Jira issue [ROOT-10457](https://sft.its.cern.ch/jira/browse/ROOT-10457), it was reported that creating an iterator form. a RooArgList in Python does not work. In ROOT master it seems to work, and this commit suggests to put the. issue in a unit test so that we are sure that is works on all platforms.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8042
https://github.com/root-project/root/pull/8042:14,safety,test,test,14,"[RF] Add unit test for pythonization of RooArgList iterator; In Jira issue [ROOT-10457](https://sft.its.cern.ch/jira/browse/ROOT-10457), it was reported that creating an iterator form. a RooArgList in Python does not work. In ROOT master it seems to work, and this commit suggests to put the. issue in a unit test so that we are sure that is works on all platforms.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8042
https://github.com/root-project/root/pull/8042:309,safety,test,test,309,"[RF] Add unit test for pythonization of RooArgList iterator; In Jira issue [ROOT-10457](https://sft.its.cern.ch/jira/browse/ROOT-10457), it was reported that creating an iterator form. a RooArgList in Python does not work. In ROOT master it seems to work, and this commit suggests to put the. issue in a unit test so that we are sure that is works on all platforms.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8042
https://github.com/root-project/root/pull/8042:9,testability,unit,unit,9,"[RF] Add unit test for pythonization of RooArgList iterator; In Jira issue [ROOT-10457](https://sft.its.cern.ch/jira/browse/ROOT-10457), it was reported that creating an iterator form. a RooArgList in Python does not work. In ROOT master it seems to work, and this commit suggests to put the. issue in a unit test so that we are sure that is works on all platforms.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8042
https://github.com/root-project/root/pull/8042:14,testability,test,test,14,"[RF] Add unit test for pythonization of RooArgList iterator; In Jira issue [ROOT-10457](https://sft.its.cern.ch/jira/browse/ROOT-10457), it was reported that creating an iterator form. a RooArgList in Python does not work. In ROOT master it seems to work, and this commit suggests to put the. issue in a unit test so that we are sure that is works on all platforms.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8042
https://github.com/root-project/root/pull/8042:304,testability,unit,unit,304,"[RF] Add unit test for pythonization of RooArgList iterator; In Jira issue [ROOT-10457](https://sft.its.cern.ch/jira/browse/ROOT-10457), it was reported that creating an iterator form. a RooArgList in Python does not work. In ROOT master it seems to work, and this commit suggests to put the. issue in a unit test so that we are sure that is works on all platforms.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8042
https://github.com/root-project/root/pull/8042:309,testability,test,test,309,"[RF] Add unit test for pythonization of RooArgList iterator; In Jira issue [ROOT-10457](https://sft.its.cern.ch/jira/browse/ROOT-10457), it was reported that creating an iterator form. a RooArgList in Python does not work. In ROOT master it seems to work, and this commit suggests to put the. issue in a unit test so that we are sure that is works on all platforms.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8042
https://github.com/root-project/root/pull/8043:53,deployability,fail,failed,53,prevent crash when using TPython after 'import ROOT' failed; @etejedor supersedes https://github.com/root-project/root/pull/7370,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8043
https://github.com/root-project/root/pull/8043:53,reliability,fail,failed,53,prevent crash when using TPython after 'import ROOT' failed; @etejedor supersedes https://github.com/root-project/root/pull/7370,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8043
https://github.com/root-project/root/pull/8043:0,safety,prevent,prevent,0,prevent crash when using TPython after 'import ROOT' failed; @etejedor supersedes https://github.com/root-project/root/pull/7370,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8043
https://github.com/root-project/root/pull/8043:0,security,preven,prevent,0,prevent crash when using TPython after 'import ROOT' failed; @etejedor supersedes https://github.com/root-project/root/pull/7370,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8043
https://github.com/root-project/root/pull/8044:308,deployability,version,version,308,"[cmake] Do not regenerate llvm VCSVersion.inc:; To prevent llvm/clang, cling, rootcling, dicts and all libs. from being rebuilt, just do not regenerate VCSVersion.inc. This feature was originally part of LLVM_APPEND_VC_REV=Off. but got lost in llvm monorepo 23fdd5a37ff4e0512af0b40f6ff3e6db4694e937. Another version of this will be reintroduced in llvm upstream.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8044
https://github.com/root-project/root/pull/8044:308,integrability,version,version,308,"[cmake] Do not regenerate llvm VCSVersion.inc:; To prevent llvm/clang, cling, rootcling, dicts and all libs. from being rebuilt, just do not regenerate VCSVersion.inc. This feature was originally part of LLVM_APPEND_VC_REV=Off. but got lost in llvm monorepo 23fdd5a37ff4e0512af0b40f6ff3e6db4694e937. Another version of this will be reintroduced in llvm upstream.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8044
https://github.com/root-project/root/pull/8044:308,modifiability,version,version,308,"[cmake] Do not regenerate llvm VCSVersion.inc:; To prevent llvm/clang, cling, rootcling, dicts and all libs. from being rebuilt, just do not regenerate VCSVersion.inc. This feature was originally part of LLVM_APPEND_VC_REV=Off. but got lost in llvm monorepo 23fdd5a37ff4e0512af0b40f6ff3e6db4694e937. Another version of this will be reintroduced in llvm upstream.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8044
https://github.com/root-project/root/pull/8044:51,safety,prevent,prevent,51,"[cmake] Do not regenerate llvm VCSVersion.inc:; To prevent llvm/clang, cling, rootcling, dicts and all libs. from being rebuilt, just do not regenerate VCSVersion.inc. This feature was originally part of LLVM_APPEND_VC_REV=Off. but got lost in llvm monorepo 23fdd5a37ff4e0512af0b40f6ff3e6db4694e937. Another version of this will be reintroduced in llvm upstream.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8044
https://github.com/root-project/root/pull/8044:51,security,preven,prevent,51,"[cmake] Do not regenerate llvm VCSVersion.inc:; To prevent llvm/clang, cling, rootcling, dicts and all libs. from being rebuilt, just do not regenerate VCSVersion.inc. This feature was originally part of LLVM_APPEND_VC_REV=Off. but got lost in llvm monorepo 23fdd5a37ff4e0512af0b40f6ff3e6db4694e937. Another version of this will be reintroduced in llvm upstream.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8044
https://github.com/root-project/root/pull/8045:1,energy efficiency,core,core,1,[core/base] clang-tidy modernize nullptr; supersedes https://github.com/root-project/root/pull/7457. rebased as suggested by @pcanal,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8045
https://github.com/root-project/root/issues/8046:36,availability,slo,slow,36,"TDirectory::GetObject is needlessly slow; Hello,. I was trying to improve the throughput of a program that deals with ROOT files containing gazillions of histograms. I ended up using linux perf, and found that the culprit is. ```TDirectoryFile::GetObjectChecked(const char *namecycle, const TClass* expectedClass)```. A quick read through the code shows that the problem is that in the case of a histogram not yet read in memory, the iteration through the list of keys is linear !!! On the other hand the function. ```TKey *TDirectoryFile::GetKey(const char *name, Short_t cycle) const```. is correctly implemented, i.e see. ```TIter next( ((THashList *)(GetListOfKeys()))->GetListForObject(name) );```. to make use of the `THashList` capabilities of the list of keys. I ended up cutting the running time of my program by a factor 4-5 by replacing. ```m_baseDir->GetObject(hname, res);```. by. ```. TKey* res_key = m_baseDir->GetKey(hname);. if(res_key) {. res = (TH1*)(res_key->ReadObj());. }. ```. Would be nicer to fix `TDirectoryFile::GetObjectChecked` directly, as well as `TDirectoryFile::Get`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8046
https://github.com/root-project/root/issues/8046:129,deployability,contain,containing,129,"TDirectory::GetObject is needlessly slow; Hello,. I was trying to improve the throughput of a program that deals with ROOT files containing gazillions of histograms. I ended up using linux perf, and found that the culprit is. ```TDirectoryFile::GetObjectChecked(const char *namecycle, const TClass* expectedClass)```. A quick read through the code shows that the problem is that in the case of a histogram not yet read in memory, the iteration through the list of keys is linear !!! On the other hand the function. ```TKey *TDirectoryFile::GetKey(const char *name, Short_t cycle) const```. is correctly implemented, i.e see. ```TIter next( ((THashList *)(GetListOfKeys()))->GetListForObject(name) );```. to make use of the `THashList` capabilities of the list of keys. I ended up cutting the running time of my program by a factor 4-5 by replacing. ```m_baseDir->GetObject(hname, res);```. by. ```. TKey* res_key = m_baseDir->GetKey(hname);. if(res_key) {. res = (TH1*)(res_key->ReadObj());. }. ```. Would be nicer to fix `TDirectoryFile::GetObjectChecked` directly, as well as `TDirectoryFile::Get`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8046
https://github.com/root-project/root/issues/8046:78,performance,throughput,throughput,78,"TDirectory::GetObject is needlessly slow; Hello,. I was trying to improve the throughput of a program that deals with ROOT files containing gazillions of histograms. I ended up using linux perf, and found that the culprit is. ```TDirectoryFile::GetObjectChecked(const char *namecycle, const TClass* expectedClass)```. A quick read through the code shows that the problem is that in the case of a histogram not yet read in memory, the iteration through the list of keys is linear !!! On the other hand the function. ```TKey *TDirectoryFile::GetKey(const char *name, Short_t cycle) const```. is correctly implemented, i.e see. ```TIter next( ((THashList *)(GetListOfKeys()))->GetListForObject(name) );```. to make use of the `THashList` capabilities of the list of keys. I ended up cutting the running time of my program by a factor 4-5 by replacing. ```m_baseDir->GetObject(hname, res);```. by. ```. TKey* res_key = m_baseDir->GetKey(hname);. if(res_key) {. res = (TH1*)(res_key->ReadObj());. }. ```. Would be nicer to fix `TDirectoryFile::GetObjectChecked` directly, as well as `TDirectoryFile::Get`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8046
https://github.com/root-project/root/issues/8046:422,performance,memor,memory,422,"TDirectory::GetObject is needlessly slow; Hello,. I was trying to improve the throughput of a program that deals with ROOT files containing gazillions of histograms. I ended up using linux perf, and found that the culprit is. ```TDirectoryFile::GetObjectChecked(const char *namecycle, const TClass* expectedClass)```. A quick read through the code shows that the problem is that in the case of a histogram not yet read in memory, the iteration through the list of keys is linear !!! On the other hand the function. ```TKey *TDirectoryFile::GetKey(const char *name, Short_t cycle) const```. is correctly implemented, i.e see. ```TIter next( ((THashList *)(GetListOfKeys()))->GetListForObject(name) );```. to make use of the `THashList` capabilities of the list of keys. I ended up cutting the running time of my program by a factor 4-5 by replacing. ```m_baseDir->GetObject(hname, res);```. by. ```. TKey* res_key = m_baseDir->GetKey(hname);. if(res_key) {. res = (TH1*)(res_key->ReadObj());. }. ```. Would be nicer to fix `TDirectoryFile::GetObjectChecked` directly, as well as `TDirectoryFile::Get`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8046
https://github.com/root-project/root/issues/8046:800,performance,time,time,800,"TDirectory::GetObject is needlessly slow; Hello,. I was trying to improve the throughput of a program that deals with ROOT files containing gazillions of histograms. I ended up using linux perf, and found that the culprit is. ```TDirectoryFile::GetObjectChecked(const char *namecycle, const TClass* expectedClass)```. A quick read through the code shows that the problem is that in the case of a histogram not yet read in memory, the iteration through the list of keys is linear !!! On the other hand the function. ```TKey *TDirectoryFile::GetKey(const char *name, Short_t cycle) const```. is correctly implemented, i.e see. ```TIter next( ((THashList *)(GetListOfKeys()))->GetListForObject(name) );```. to make use of the `THashList` capabilities of the list of keys. I ended up cutting the running time of my program by a factor 4-5 by replacing. ```m_baseDir->GetObject(hname, res);```. by. ```. TKey* res_key = m_baseDir->GetKey(hname);. if(res_key) {. res = (TH1*)(res_key->ReadObj());. }. ```. Would be nicer to fix `TDirectoryFile::GetObjectChecked` directly, as well as `TDirectoryFile::Get`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8046
https://github.com/root-project/root/issues/8046:36,reliability,slo,slow,36,"TDirectory::GetObject is needlessly slow; Hello,. I was trying to improve the throughput of a program that deals with ROOT files containing gazillions of histograms. I ended up using linux perf, and found that the culprit is. ```TDirectoryFile::GetObjectChecked(const char *namecycle, const TClass* expectedClass)```. A quick read through the code shows that the problem is that in the case of a histogram not yet read in memory, the iteration through the list of keys is linear !!! On the other hand the function. ```TKey *TDirectoryFile::GetKey(const char *name, Short_t cycle) const```. is correctly implemented, i.e see. ```TIter next( ((THashList *)(GetListOfKeys()))->GetListForObject(name) );```. to make use of the `THashList` capabilities of the list of keys. I ended up cutting the running time of my program by a factor 4-5 by replacing. ```m_baseDir->GetObject(hname, res);```. by. ```. TKey* res_key = m_baseDir->GetKey(hname);. if(res_key) {. res = (TH1*)(res_key->ReadObj());. }. ```. Would be nicer to fix `TDirectoryFile::GetObjectChecked` directly, as well as `TDirectoryFile::Get`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8046
https://github.com/root-project/root/issues/8046:422,usability,memor,memory,422,"TDirectory::GetObject is needlessly slow; Hello,. I was trying to improve the throughput of a program that deals with ROOT files containing gazillions of histograms. I ended up using linux perf, and found that the culprit is. ```TDirectoryFile::GetObjectChecked(const char *namecycle, const TClass* expectedClass)```. A quick read through the code shows that the problem is that in the case of a histogram not yet read in memory, the iteration through the list of keys is linear !!! On the other hand the function. ```TKey *TDirectoryFile::GetKey(const char *name, Short_t cycle) const```. is correctly implemented, i.e see. ```TIter next( ((THashList *)(GetListOfKeys()))->GetListForObject(name) );```. to make use of the `THashList` capabilities of the list of keys. I ended up cutting the running time of my program by a factor 4-5 by replacing. ```m_baseDir->GetObject(hname, res);```. by. ```. TKey* res_key = m_baseDir->GetKey(hname);. if(res_key) {. res = (TH1*)(res_key->ReadObj());. }. ```. Would be nicer to fix `TDirectoryFile::GetObjectChecked` directly, as well as `TDirectoryFile::Get`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8046
https://github.com/root-project/root/issues/8048:33,availability,error,error,33,"TTreeCache::FillBuffer spurrious error.; As seen in https://github.com/cms-sw/cmssw/issues/33361, in some normal usage circumstances, TTreeCache::FillBuffer will issue an Error message (turned into an exception by CMSSW):. ```. fCurrentClusterStart=11348 fEntryCurrent=11392 fNextClusterStart=11394. but fEntryCurrent should not be in between the two . ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8048
https://github.com/root-project/root/issues/8048:171,availability,Error,Error,171,"TTreeCache::FillBuffer spurrious error.; As seen in https://github.com/cms-sw/cmssw/issues/33361, in some normal usage circumstances, TTreeCache::FillBuffer will issue an Error message (turned into an exception by CMSSW):. ```. fCurrentClusterStart=11348 fEntryCurrent=11392 fNextClusterStart=11394. but fEntryCurrent should not be in between the two . ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8048
https://github.com/root-project/root/issues/8048:177,integrability,messag,message,177,"TTreeCache::FillBuffer spurrious error.; As seen in https://github.com/cms-sw/cmssw/issues/33361, in some normal usage circumstances, TTreeCache::FillBuffer will issue an Error message (turned into an exception by CMSSW):. ```. fCurrentClusterStart=11348 fEntryCurrent=11392 fNextClusterStart=11394. but fEntryCurrent should not be in between the two . ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8048
https://github.com/root-project/root/issues/8048:177,interoperability,messag,message,177,"TTreeCache::FillBuffer spurrious error.; As seen in https://github.com/cms-sw/cmssw/issues/33361, in some normal usage circumstances, TTreeCache::FillBuffer will issue an Error message (turned into an exception by CMSSW):. ```. fCurrentClusterStart=11348 fEntryCurrent=11392 fNextClusterStart=11394. but fEntryCurrent should not be in between the two . ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8048
https://github.com/root-project/root/issues/8048:33,performance,error,error,33,"TTreeCache::FillBuffer spurrious error.; As seen in https://github.com/cms-sw/cmssw/issues/33361, in some normal usage circumstances, TTreeCache::FillBuffer will issue an Error message (turned into an exception by CMSSW):. ```. fCurrentClusterStart=11348 fEntryCurrent=11392 fNextClusterStart=11394. but fEntryCurrent should not be in between the two . ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8048
https://github.com/root-project/root/issues/8048:171,performance,Error,Error,171,"TTreeCache::FillBuffer spurrious error.; As seen in https://github.com/cms-sw/cmssw/issues/33361, in some normal usage circumstances, TTreeCache::FillBuffer will issue an Error message (turned into an exception by CMSSW):. ```. fCurrentClusterStart=11348 fEntryCurrent=11392 fNextClusterStart=11394. but fEntryCurrent should not be in between the two . ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8048
https://github.com/root-project/root/issues/8048:33,safety,error,error,33,"TTreeCache::FillBuffer spurrious error.; As seen in https://github.com/cms-sw/cmssw/issues/33361, in some normal usage circumstances, TTreeCache::FillBuffer will issue an Error message (turned into an exception by CMSSW):. ```. fCurrentClusterStart=11348 fEntryCurrent=11392 fNextClusterStart=11394. but fEntryCurrent should not be in between the two . ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8048
https://github.com/root-project/root/issues/8048:171,safety,Error,Error,171,"TTreeCache::FillBuffer spurrious error.; As seen in https://github.com/cms-sw/cmssw/issues/33361, in some normal usage circumstances, TTreeCache::FillBuffer will issue an Error message (turned into an exception by CMSSW):. ```. fCurrentClusterStart=11348 fEntryCurrent=11392 fNextClusterStart=11394. but fEntryCurrent should not be in between the two . ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8048
https://github.com/root-project/root/issues/8048:201,safety,except,exception,201,"TTreeCache::FillBuffer spurrious error.; As seen in https://github.com/cms-sw/cmssw/issues/33361, in some normal usage circumstances, TTreeCache::FillBuffer will issue an Error message (turned into an exception by CMSSW):. ```. fCurrentClusterStart=11348 fEntryCurrent=11392 fNextClusterStart=11394. but fEntryCurrent should not be in between the two . ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8048
https://github.com/root-project/root/issues/8048:33,usability,error,error,33,"TTreeCache::FillBuffer spurrious error.; As seen in https://github.com/cms-sw/cmssw/issues/33361, in some normal usage circumstances, TTreeCache::FillBuffer will issue an Error message (turned into an exception by CMSSW):. ```. fCurrentClusterStart=11348 fEntryCurrent=11392 fNextClusterStart=11394. but fEntryCurrent should not be in between the two . ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8048
https://github.com/root-project/root/issues/8048:171,usability,Error,Error,171,"TTreeCache::FillBuffer spurrious error.; As seen in https://github.com/cms-sw/cmssw/issues/33361, in some normal usage circumstances, TTreeCache::FillBuffer will issue an Error message (turned into an exception by CMSSW):. ```. fCurrentClusterStart=11348 fEntryCurrent=11392 fNextClusterStart=11394. but fEntryCurrent should not be in between the two . ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8048
https://github.com/root-project/root/pull/8049:215,availability,cluster,cluster,215,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:300,availability,error,error,300,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:456,availability,cluster,cluster,456,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:526,availability,cluster,cluster,526,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:567,availability,down,downloaded,567,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:578,availability,cluster,cluster,578,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:658,availability,error,error,658,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:817,availability,avail,available,817,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:911,availability,avail,available,911,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:1034,availability,avail,available,1034,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:1158,availability,avail,available,1158,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:215,deployability,cluster,cluster,215,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:456,deployability,cluster,cluster,456,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:526,deployability,cluster,cluster,526,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:578,deployability,cluster,cluster,578,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:207,energy efficiency,current,current,207,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:306,integrability,messag,message,306,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:794,integrability,asynchron,asynchronous,794,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:888,integrability,asynchron,asynchronous,888,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:1007,integrability,asynchron,asynchronous,1007,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:1135,integrability,asynchron,asynchronous,1135,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:306,interoperability,messag,message,306,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:300,performance,error,error,300,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:411,performance,cach,cache,411,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:658,performance,error,error,658,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:794,performance,asynch,asynchronous,794,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:888,performance,asynch,asynchronous,888,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:956,performance,network,network,956,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:1007,performance,asynch,asynchronous,1007,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:1135,performance,asynch,asynchronous,1135,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:817,reliability,availab,available,817,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:911,reliability,availab,available,911,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:1034,reliability,availab,available,1034,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:1158,reliability,availab,available,1158,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:300,safety,error,error,300,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:658,safety,error,error,658,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:817,safety,avail,available,817,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:911,safety,avail,available,911,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:1034,safety,avail,available,1034,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:1158,safety,avail,available,1158,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:817,security,availab,available,817,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:911,security,availab,available,911,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:956,security,network,network,956,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:1034,security,availab,available,1034,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:1158,security,availab,available,1158,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:300,usability,error,error,300,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8049:658,usability,error,error,658,"TTreeCache: start a new fill at the end of the previous one. ; See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes. be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8049
https://github.com/root-project/root/pull/8050:23,deployability,scale,scale,23,Add public function to scale TGraph and TGraphErrors; Based on https://root-forum.cern.ch/t/tgraph-and-scale/6255,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8050
https://github.com/root-project/root/pull/8050:103,deployability,scale,scale,103,Add public function to scale TGraph and TGraphErrors; Based on https://root-forum.cern.ch/t/tgraph-and-scale/6255,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8050
https://github.com/root-project/root/pull/8050:23,energy efficiency,scale,scale,23,Add public function to scale TGraph and TGraphErrors; Based on https://root-forum.cern.ch/t/tgraph-and-scale/6255,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8050
https://github.com/root-project/root/pull/8050:103,energy efficiency,scale,scale,103,Add public function to scale TGraph and TGraphErrors; Based on https://root-forum.cern.ch/t/tgraph-and-scale/6255,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8050
https://github.com/root-project/root/pull/8050:4,integrability,pub,public,4,Add public function to scale TGraph and TGraphErrors; Based on https://root-forum.cern.ch/t/tgraph-and-scale/6255,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8050
https://github.com/root-project/root/pull/8050:23,modifiability,scal,scale,23,Add public function to scale TGraph and TGraphErrors; Based on https://root-forum.cern.ch/t/tgraph-and-scale/6255,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8050
https://github.com/root-project/root/pull/8050:103,modifiability,scal,scale,103,Add public function to scale TGraph and TGraphErrors; Based on https://root-forum.cern.ch/t/tgraph-and-scale/6255,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8050
https://github.com/root-project/root/pull/8050:23,performance,scale,scale,23,Add public function to scale TGraph and TGraphErrors; Based on https://root-forum.cern.ch/t/tgraph-and-scale/6255,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8050
https://github.com/root-project/root/pull/8050:103,performance,scale,scale,103,Add public function to scale TGraph and TGraphErrors; Based on https://root-forum.cern.ch/t/tgraph-and-scale/6255,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8050
https://github.com/root-project/root/issues/8051:429,reliability,doe,doesn,429,"Impossible to understand what to `#include` for `ROOT::Math::PtEtaPhiMVector` etc; ### Describe the bug. Entering `PtEtaPhiMVector` in Doxygen's search brings us here: https://root.cern/doc/master/namespaceROOT_1_1Math.html#a6cea5921731c7ac99dea921fb188df31 - the documentation of the typedef, which happens to be in `Vector4Dfwd.h`. That header cannot be included as `Vector4Dfwd.h` (but only as `ROOT/Vector4Dfwd.h` - *and* it doesn't provide the definition of this type! ### Expected behavior. Instead, the forward header should be reserved for the specialists, and documentation should point to `Vector4D.h`. It's fine if this header repeats the `typedef`s, and those in `Vector4Dfwd.h` are hidden from Doxygen. In the end, Doxygen's search should get me to the header that I need to `#include`, as a user, to access `PtEtaPhiMVector`, and it should be obvious how to see `PtEtaPhiMVector`'s members.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8051
https://github.com/root-project/root/issues/8051:814,security,access,access,814,"Impossible to understand what to `#include` for `ROOT::Math::PtEtaPhiMVector` etc; ### Describe the bug. Entering `PtEtaPhiMVector` in Doxygen's search brings us here: https://root.cern/doc/master/namespaceROOT_1_1Math.html#a6cea5921731c7ac99dea921fb188df31 - the documentation of the typedef, which happens to be in `Vector4Dfwd.h`. That header cannot be included as `Vector4Dfwd.h` (but only as `ROOT/Vector4Dfwd.h` - *and* it doesn't provide the definition of this type! ### Expected behavior. Instead, the forward header should be reserved for the specialists, and documentation should point to `Vector4D.h`. It's fine if this header repeats the `typedef`s, and those in `Vector4Dfwd.h` are hidden from Doxygen. In the end, Doxygen's search should get me to the header that I need to `#include`, as a user, to access `PtEtaPhiMVector`, and it should be obvious how to see `PtEtaPhiMVector`'s members.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8051
https://github.com/root-project/root/issues/8051:14,testability,understand,understand,14,"Impossible to understand what to `#include` for `ROOT::Math::PtEtaPhiMVector` etc; ### Describe the bug. Entering `PtEtaPhiMVector` in Doxygen's search brings us here: https://root.cern/doc/master/namespaceROOT_1_1Math.html#a6cea5921731c7ac99dea921fb188df31 - the documentation of the typedef, which happens to be in `Vector4Dfwd.h`. That header cannot be included as `Vector4Dfwd.h` (but only as `ROOT/Vector4Dfwd.h` - *and* it doesn't provide the definition of this type! ### Expected behavior. Instead, the forward header should be reserved for the specialists, and documentation should point to `Vector4D.h`. It's fine if this header repeats the `typedef`s, and those in `Vector4Dfwd.h` are hidden from Doxygen. In the end, Doxygen's search should get me to the header that I need to `#include`, as a user, to access `PtEtaPhiMVector`, and it should be obvious how to see `PtEtaPhiMVector`'s members.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8051
https://github.com/root-project/root/issues/8051:264,usability,document,documentation,264,"Impossible to understand what to `#include` for `ROOT::Math::PtEtaPhiMVector` etc; ### Describe the bug. Entering `PtEtaPhiMVector` in Doxygen's search brings us here: https://root.cern/doc/master/namespaceROOT_1_1Math.html#a6cea5921731c7ac99dea921fb188df31 - the documentation of the typedef, which happens to be in `Vector4Dfwd.h`. That header cannot be included as `Vector4Dfwd.h` (but only as `ROOT/Vector4Dfwd.h` - *and* it doesn't provide the definition of this type! ### Expected behavior. Instead, the forward header should be reserved for the specialists, and documentation should point to `Vector4D.h`. It's fine if this header repeats the `typedef`s, and those in `Vector4Dfwd.h` are hidden from Doxygen. In the end, Doxygen's search should get me to the header that I need to `#include`, as a user, to access `PtEtaPhiMVector`, and it should be obvious how to see `PtEtaPhiMVector`'s members.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8051
https://github.com/root-project/root/issues/8051:487,usability,behavi,behavior,487,"Impossible to understand what to `#include` for `ROOT::Math::PtEtaPhiMVector` etc; ### Describe the bug. Entering `PtEtaPhiMVector` in Doxygen's search brings us here: https://root.cern/doc/master/namespaceROOT_1_1Math.html#a6cea5921731c7ac99dea921fb188df31 - the documentation of the typedef, which happens to be in `Vector4Dfwd.h`. That header cannot be included as `Vector4Dfwd.h` (but only as `ROOT/Vector4Dfwd.h` - *and* it doesn't provide the definition of this type! ### Expected behavior. Instead, the forward header should be reserved for the specialists, and documentation should point to `Vector4D.h`. It's fine if this header repeats the `typedef`s, and those in `Vector4Dfwd.h` are hidden from Doxygen. In the end, Doxygen's search should get me to the header that I need to `#include`, as a user, to access `PtEtaPhiMVector`, and it should be obvious how to see `PtEtaPhiMVector`'s members.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8051
https://github.com/root-project/root/issues/8051:569,usability,document,documentation,569,"Impossible to understand what to `#include` for `ROOT::Math::PtEtaPhiMVector` etc; ### Describe the bug. Entering `PtEtaPhiMVector` in Doxygen's search brings us here: https://root.cern/doc/master/namespaceROOT_1_1Math.html#a6cea5921731c7ac99dea921fb188df31 - the documentation of the typedef, which happens to be in `Vector4Dfwd.h`. That header cannot be included as `Vector4Dfwd.h` (but only as `ROOT/Vector4Dfwd.h` - *and* it doesn't provide the definition of this type! ### Expected behavior. Instead, the forward header should be reserved for the specialists, and documentation should point to `Vector4D.h`. It's fine if this header repeats the `typedef`s, and those in `Vector4Dfwd.h` are hidden from Doxygen. In the end, Doxygen's search should get me to the header that I need to `#include`, as a user, to access `PtEtaPhiMVector`, and it should be obvious how to see `PtEtaPhiMVector`'s members.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8051
https://github.com/root-project/root/issues/8051:805,usability,user,user,805,"Impossible to understand what to `#include` for `ROOT::Math::PtEtaPhiMVector` etc; ### Describe the bug. Entering `PtEtaPhiMVector` in Doxygen's search brings us here: https://root.cern/doc/master/namespaceROOT_1_1Math.html#a6cea5921731c7ac99dea921fb188df31 - the documentation of the typedef, which happens to be in `Vector4Dfwd.h`. That header cannot be included as `Vector4Dfwd.h` (but only as `ROOT/Vector4Dfwd.h` - *and* it doesn't provide the definition of this type! ### Expected behavior. Instead, the forward header should be reserved for the specialists, and documentation should point to `Vector4D.h`. It's fine if this header repeats the `typedef`s, and those in `Vector4Dfwd.h` are hidden from Doxygen. In the end, Doxygen's search should get me to the header that I need to `#include`, as a user, to access `PtEtaPhiMVector`, and it should be obvious how to see `PtEtaPhiMVector`'s members.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8051
https://github.com/root-project/root/issues/8052:1275,availability,error,error,1275,". ""uniform_exp_z_nt"", ""uniform (x) exp (z) nt"",. z, nt_h_top, nt_h_bot, l. );. RooProdPdf uxy_nt(. ""uxy_nt"", ""uxy_nt"",. RooArgList(RooUniform(""u_nt_x"", ""u_nt_x"", x),. RooUniform(""u_nt_y"", ""u_nt_y"", y)). );. RooProdPdf nt(""nt"", ""nt"", RooArgList(uxy_nt, neutrino_target_z));. // fit. RooFitResult *res = nt.fitTo(data, RooFit::Save(true), RooFit::NumCPU(8));. However, when I write RooUniform definition outside of that RooArgList, everything works fine:. RooUniform u_nt_x(""u_nt_x"", ""u_nt_x"", x);. RooUniform u_nt_y(""u_nt_y"", ""u_nt_y"", y);. RooProdPdf uxy_nt(. ""uxy_nt"", ""uxy_nt"",. RooArgList(u_nt_x, u_nt_y). );. ### Expected behavior. Should be the same for variables defined inside and outside the constructor. ### To Reproduce. 3. I compile this code with gcc. Sorry if the format of this bug report is not good :/. ### Setup. 1. ROOT version 6.22/06. 2. Arch Linux. 3. Built myself. ### Additional context. Unfortunately (I don't know whether it must be considered a bug) the output about the error appears only when I comment out a lot of code. Usually it only writes . > Command terminated by signal 11. Here is the output when I manage to get that:. > *** Break *** segmentation violation. >. > ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f21b73d20ca in wait4 () from /usr/lib64/libc.so.6. #1 0x00007f21b734fd6f in do_system () from /usr/lib64/libc.so.6. #2 0x00007f21b9bfc3c6 in TUnixSystem::StackTrace() () from /opt/root/cur/lib/libCore.so. #3 0x00007f21b9bf9705 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root/cur/lib/libCore.so. #4 <signal handler called>. #5 0x0000000000000000 in ?? (). #6 0x00007f21b7bf1322 in RooAbsArg::treeNodeServerList(RooAbsCollection*, RooAbsArg const*, bool, bool, bool, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #7 0x00007f21b7bf880d in RooAbsArg::getObservables(RooArgSet const",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8052
https://github.com/root-project/root/issues/8052:1116,deployability,version,version,1116,"ates. ### Describe the bug. When I use RooUniform inside RooProdPdf, this leads to SIGSEGV during execution. This code raises:. UniformExpZ neutrino_target_z(. ""uniform_exp_z_nt"", ""uniform (x) exp (z) nt"",. z, nt_h_top, nt_h_bot, l. );. RooProdPdf uxy_nt(. ""uxy_nt"", ""uxy_nt"",. RooArgList(RooUniform(""u_nt_x"", ""u_nt_x"", x),. RooUniform(""u_nt_y"", ""u_nt_y"", y)). );. RooProdPdf nt(""nt"", ""nt"", RooArgList(uxy_nt, neutrino_target_z));. // fit. RooFitResult *res = nt.fitTo(data, RooFit::Save(true), RooFit::NumCPU(8));. However, when I write RooUniform definition outside of that RooArgList, everything works fine:. RooUniform u_nt_x(""u_nt_x"", ""u_nt_x"", x);. RooUniform u_nt_y(""u_nt_y"", ""u_nt_y"", y);. RooProdPdf uxy_nt(. ""uxy_nt"", ""uxy_nt"",. RooArgList(u_nt_x, u_nt_y). );. ### Expected behavior. Should be the same for variables defined inside and outside the constructor. ### To Reproduce. 3. I compile this code with gcc. Sorry if the format of this bug report is not good :/. ### Setup. 1. ROOT version 6.22/06. 2. Arch Linux. 3. Built myself. ### Additional context. Unfortunately (I don't know whether it must be considered a bug) the output about the error appears only when I comment out a lot of code. Usually it only writes . > Command terminated by signal 11. Here is the output when I manage to get that:. > *** Break *** segmentation violation. >. > ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f21b73d20ca in wait4 () from /usr/lib64/libc.so.6. #1 0x00007f21b734fd6f in do_system () from /usr/lib64/libc.so.6. #2 0x00007f21b9bfc3c6 in TUnixSystem::StackTrace() () from /opt/root/cur/lib/libCore.so. #3 0x00007f21b9bf9705 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root/cur/lib/libCore.so. #4 <signal handler called>. #5 0x0000000000000000 in ?? (). #6 0x00007f21b7bf1322 in RooAbsArg::treeNodeServerList(RooAbsCollection*, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8052
https://github.com/root-project/root/issues/8052:1414,deployability,manag,manage,1414,"rm(""u_nt_x"", ""u_nt_x"", x),. RooUniform(""u_nt_y"", ""u_nt_y"", y)). );. RooProdPdf nt(""nt"", ""nt"", RooArgList(uxy_nt, neutrino_target_z));. // fit. RooFitResult *res = nt.fitTo(data, RooFit::Save(true), RooFit::NumCPU(8));. However, when I write RooUniform definition outside of that RooArgList, everything works fine:. RooUniform u_nt_x(""u_nt_x"", ""u_nt_x"", x);. RooUniform u_nt_y(""u_nt_y"", ""u_nt_y"", y);. RooProdPdf uxy_nt(. ""uxy_nt"", ""uxy_nt"",. RooArgList(u_nt_x, u_nt_y). );. ### Expected behavior. Should be the same for variables defined inside and outside the constructor. ### To Reproduce. 3. I compile this code with gcc. Sorry if the format of this bug report is not good :/. ### Setup. 1. ROOT version 6.22/06. 2. Arch Linux. 3. Built myself. ### Additional context. Unfortunately (I don't know whether it must be considered a bug) the output about the error appears only when I comment out a lot of code. Usually it only writes . > Command terminated by signal 11. Here is the output when I manage to get that:. > *** Break *** segmentation violation. >. > ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f21b73d20ca in wait4 () from /usr/lib64/libc.so.6. #1 0x00007f21b734fd6f in do_system () from /usr/lib64/libc.so.6. #2 0x00007f21b9bfc3c6 in TUnixSystem::StackTrace() () from /opt/root/cur/lib/libCore.so. #3 0x00007f21b9bf9705 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root/cur/lib/libCore.so. #4 <signal handler called>. #5 0x0000000000000000 in ?? (). #6 0x00007f21b7bf1322 in RooAbsArg::treeNodeServerList(RooAbsCollection*, RooAbsArg const*, bool, bool, bool, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #7 0x00007f21b7bf880d in RooAbsArg::getObservables(RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #8 0x00007f21b7dd0362 in RooProdPdf::factorizeProduct(RooArgSet const&, RooArgSe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8052
https://github.com/root-project/root/issues/8052:1579,deployability,stack,stack,1579,".fitTo(data, RooFit::Save(true), RooFit::NumCPU(8));. However, when I write RooUniform definition outside of that RooArgList, everything works fine:. RooUniform u_nt_x(""u_nt_x"", ""u_nt_x"", x);. RooUniform u_nt_y(""u_nt_y"", ""u_nt_y"", y);. RooProdPdf uxy_nt(. ""uxy_nt"", ""uxy_nt"",. RooArgList(u_nt_x, u_nt_y). );. ### Expected behavior. Should be the same for variables defined inside and outside the constructor. ### To Reproduce. 3. I compile this code with gcc. Sorry if the format of this bug report is not good :/. ### Setup. 1. ROOT version 6.22/06. 2. Arch Linux. 3. Built myself. ### Additional context. Unfortunately (I don't know whether it must be considered a bug) the output about the error appears only when I comment out a lot of code. Usually it only writes . > Command terminated by signal 11. Here is the output when I manage to get that:. > *** Break *** segmentation violation. >. > ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f21b73d20ca in wait4 () from /usr/lib64/libc.so.6. #1 0x00007f21b734fd6f in do_system () from /usr/lib64/libc.so.6. #2 0x00007f21b9bfc3c6 in TUnixSystem::StackTrace() () from /opt/root/cur/lib/libCore.so. #3 0x00007f21b9bf9705 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root/cur/lib/libCore.so. #4 <signal handler called>. #5 0x0000000000000000 in ?? (). #6 0x00007f21b7bf1322 in RooAbsArg::treeNodeServerList(RooAbsCollection*, RooAbsArg const*, bool, bool, bool, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #7 0x00007f21b7bf880d in RooAbsArg::getObservables(RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #8 0x00007f21b7dd0362 in RooProdPdf::factorizeProduct(RooArgSet const&, RooArgSet const&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&) const () from /opt/root/cur/lib/libRooFitCore.so. #9 0x00007f21b7dd0f20 in ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8052
https://github.com/root-project/root/issues/8052:1833,deployability,Stack,StackTrace,1833,"""uxy_nt"", ""uxy_nt"",. RooArgList(u_nt_x, u_nt_y). );. ### Expected behavior. Should be the same for variables defined inside and outside the constructor. ### To Reproduce. 3. I compile this code with gcc. Sorry if the format of this bug report is not good :/. ### Setup. 1. ROOT version 6.22/06. 2. Arch Linux. 3. Built myself. ### Additional context. Unfortunately (I don't know whether it must be considered a bug) the output about the error appears only when I comment out a lot of code. Usually it only writes . > Command terminated by signal 11. Here is the output when I manage to get that:. > *** Break *** segmentation violation. >. > ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f21b73d20ca in wait4 () from /usr/lib64/libc.so.6. #1 0x00007f21b734fd6f in do_system () from /usr/lib64/libc.so.6. #2 0x00007f21b9bfc3c6 in TUnixSystem::StackTrace() () from /opt/root/cur/lib/libCore.so. #3 0x00007f21b9bf9705 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root/cur/lib/libCore.so. #4 <signal handler called>. #5 0x0000000000000000 in ?? (). #6 0x00007f21b7bf1322 in RooAbsArg::treeNodeServerList(RooAbsCollection*, RooAbsArg const*, bool, bool, bool, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #7 0x00007f21b7bf880d in RooAbsArg::getObservables(RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #8 0x00007f21b7dd0362 in RooProdPdf::factorizeProduct(RooArgSet const&, RooArgSet const&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&) const () from /opt/root/cur/lib/libRooFitCore.so. #9 0x00007f21b7dd0f20 in RooProdPdf::getPartIntList(RooArgSet const*, RooArgSet const*, char const*) const () from /opt/root/cur/lib/libRooFitCore.so. #10 0x00007f21b7dd5487 in RooProdPdf::getParametersHook(RooArgSet const*, RooArgSet*, bool) const () from /opt/root/cur/lib/libRoo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8052
https://github.com/root-project/root/issues/8052:4306,deployability,stack,stack,4306,"RooLinkedList const&) () from /opt/root/cur/lib/libRooFitCore.so. #15 0x00007f21b7c4447a in RooAbsPdf::fitTo(RooAbsData&, RooLinkedList const&) () from /opt/root/cur/lib/libRooFitCore.so. #16 0x00007f21b7c42c78 in RooAbsPdf::fitTo(RooAbsData&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) () from /opt/root/cur/lib/libRooFitCore.so. #17 0x000055cbe4ef65ad in fit_small_rho(std::vector<double, std::allocator<double> >, std::vector<double, std::allocator<double> >, std::vector<double, std::allocator<double> >, double, char const*) (). #18 0x000055cbe4ef2964 in main (). ===========================================================. >. > The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x0000000000000000 in ?? (). #6 0x00007f21b7bf1322 in RooAbsArg::treeNodeServerList(RooAbsCollection*, RooAbsArg const*, bool, bool, bool, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #7 0x00007f21b7bf880d in RooAbsArg::getObservables(RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #8 0x00007f21b7dd0362 in RooProdPdf::factorizeProduct(RooArgSet const&, RooArgSet const&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&) const () from /opt/root/cur/lib/libRooFitCore.so. #9 0x00007f21b7dd0f20 in RooProdPdf::getPartIntList(RooArgSet const*, RooArgSet const*, char const*) const () from /opt/root/cur/lib/libRooFitCore.so. #10 0x00007f21b7dd5487 in RooProdPdf::getParametersHook(RooArgSet const*, RooArgSet*, bool) const () from /opt/root/cur/lib/libRooFitCore.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8052
https://github.com/root-project/root/issues/8052:1414,energy efficiency,manag,manage,1414,"rm(""u_nt_x"", ""u_nt_x"", x),. RooUniform(""u_nt_y"", ""u_nt_y"", y)). );. RooProdPdf nt(""nt"", ""nt"", RooArgList(uxy_nt, neutrino_target_z));. // fit. RooFitResult *res = nt.fitTo(data, RooFit::Save(true), RooFit::NumCPU(8));. However, when I write RooUniform definition outside of that RooArgList, everything works fine:. RooUniform u_nt_x(""u_nt_x"", ""u_nt_x"", x);. RooUniform u_nt_y(""u_nt_y"", ""u_nt_y"", y);. RooProdPdf uxy_nt(. ""uxy_nt"", ""uxy_nt"",. RooArgList(u_nt_x, u_nt_y). );. ### Expected behavior. Should be the same for variables defined inside and outside the constructor. ### To Reproduce. 3. I compile this code with gcc. Sorry if the format of this bug report is not good :/. ### Setup. 1. ROOT version 6.22/06. 2. Arch Linux. 3. Built myself. ### Additional context. Unfortunately (I don't know whether it must be considered a bug) the output about the error appears only when I comment out a lot of code. Usually it only writes . > Command terminated by signal 11. Here is the output when I manage to get that:. > *** Break *** segmentation violation. >. > ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f21b73d20ca in wait4 () from /usr/lib64/libc.so.6. #1 0x00007f21b734fd6f in do_system () from /usr/lib64/libc.so.6. #2 0x00007f21b9bfc3c6 in TUnixSystem::StackTrace() () from /opt/root/cur/lib/libCore.so. #3 0x00007f21b9bf9705 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root/cur/lib/libCore.so. #4 <signal handler called>. #5 0x0000000000000000 in ?? (). #6 0x00007f21b7bf1322 in RooAbsArg::treeNodeServerList(RooAbsCollection*, RooAbsArg const*, bool, bool, bool, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #7 0x00007f21b7bf880d in RooAbsArg::getObservables(RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #8 0x00007f21b7dd0362 in RooProdPdf::factorizeProduct(RooArgSet const&, RooArgSe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8052
https://github.com/root-project/root/issues/8052:3806,energy efficiency,alloc,allocator,3806,"om /opt/root/cur/lib/libRooFitCore.so. #11 0x00007f21b7bf8758 in RooAbsArg::addParameters(RooArgSet&, RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #12 0x00007f21b7bf869d in RooAbsArg::addParameters(RooArgSet&, RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #13 0x00007f21b7bfab85 in RooAbsArg::getParameters(RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #14 0x00007f21b7c3e251 in RooAbsPdf::createNLL(RooAbsData&, RooLinkedList const&) () from /opt/root/cur/lib/libRooFitCore.so. #15 0x00007f21b7c4447a in RooAbsPdf::fitTo(RooAbsData&, RooLinkedList const&) () from /opt/root/cur/lib/libRooFitCore.so. #16 0x00007f21b7c42c78 in RooAbsPdf::fitTo(RooAbsData&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) () from /opt/root/cur/lib/libRooFitCore.so. #17 0x000055cbe4ef65ad in fit_small_rho(std::vector<double, std::allocator<double> >, std::vector<double, std::allocator<double> >, std::vector<double, std::allocator<double> >, double, char const*) (). #18 0x000055cbe4ef2964 in main (). ===========================================================. >. > The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x0000000000000000 in ?? (). #6 0x00007f21b7bf1322 in RooAbsArg::treeNodeServerList(RooAbsCollection*, RooAbsArg const*, bool, bool, bool, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #7 0x00007f21b7bf880d in RooAbsArg::getObservables(RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #8 0x00007f2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8052
https://github.com/root-project/root/issues/8052:3852,energy efficiency,alloc,allocator,3852,"0007f21b7bf8758 in RooAbsArg::addParameters(RooArgSet&, RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #12 0x00007f21b7bf869d in RooAbsArg::addParameters(RooArgSet&, RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #13 0x00007f21b7bfab85 in RooAbsArg::getParameters(RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #14 0x00007f21b7c3e251 in RooAbsPdf::createNLL(RooAbsData&, RooLinkedList const&) () from /opt/root/cur/lib/libRooFitCore.so. #15 0x00007f21b7c4447a in RooAbsPdf::fitTo(RooAbsData&, RooLinkedList const&) () from /opt/root/cur/lib/libRooFitCore.so. #16 0x00007f21b7c42c78 in RooAbsPdf::fitTo(RooAbsData&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) () from /opt/root/cur/lib/libRooFitCore.so. #17 0x000055cbe4ef65ad in fit_small_rho(std::vector<double, std::allocator<double> >, std::vector<double, std::allocator<double> >, std::vector<double, std::allocator<double> >, double, char const*) (). #18 0x000055cbe4ef2964 in main (). ===========================================================. >. > The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x0000000000000000 in ?? (). #6 0x00007f21b7bf1322 in RooAbsArg::treeNodeServerList(RooAbsCollection*, RooAbsArg const*, bool, bool, bool, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #7 0x00007f21b7bf880d in RooAbsArg::getObservables(RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #8 0x00007f21b7dd0362 in RooProdPdf::factorizeProduct(RooA",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8052
https://github.com/root-project/root/issues/8052:3898,energy efficiency,alloc,allocator,3898,"oArgSet&, RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #12 0x00007f21b7bf869d in RooAbsArg::addParameters(RooArgSet&, RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #13 0x00007f21b7bfab85 in RooAbsArg::getParameters(RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #14 0x00007f21b7c3e251 in RooAbsPdf::createNLL(RooAbsData&, RooLinkedList const&) () from /opt/root/cur/lib/libRooFitCore.so. #15 0x00007f21b7c4447a in RooAbsPdf::fitTo(RooAbsData&, RooLinkedList const&) () from /opt/root/cur/lib/libRooFitCore.so. #16 0x00007f21b7c42c78 in RooAbsPdf::fitTo(RooAbsData&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) () from /opt/root/cur/lib/libRooFitCore.so. #17 0x000055cbe4ef65ad in fit_small_rho(std::vector<double, std::allocator<double> >, std::vector<double, std::allocator<double> >, std::vector<double, std::allocator<double> >, double, char const*) (). #18 0x000055cbe4ef2964 in main (). ===========================================================. >. > The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x0000000000000000 in ?? (). #6 0x00007f21b7bf1322 in RooAbsArg::treeNodeServerList(RooAbsCollection*, RooAbsArg const*, bool, bool, bool, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #7 0x00007f21b7bf880d in RooAbsArg::getObservables(RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #8 0x00007f21b7dd0362 in RooProdPdf::factorizeProduct(RooArgSet const&, RooArgSet const&, RooLinkedList&",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8052
https://github.com/root-project/root/issues/8052:6268,energy efficiency,alloc,allocator,6268,"eNodeServerList(RooAbsCollection*, RooAbsArg const*, bool, bool, bool, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #7 0x00007f21b7bf880d in RooAbsArg::getObservables(RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #8 0x00007f21b7dd0362 in RooProdPdf::factorizeProduct(RooArgSet const&, RooArgSet const&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&) const () from /opt/root/cur/lib/libRooFitCore.so. #9 0x00007f21b7dd0f20 in RooProdPdf::getPartIntList(RooArgSet const*, RooArgSet const*, char const*) const () from /opt/root/cur/lib/libRooFitCore.so. #10 0x00007f21b7dd5487 in RooProdPdf::getParametersHook(RooArgSet const*, RooArgSet*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #11 0x00007f21b7bf8758 in RooAbsArg::addParameters(RooArgSet&, RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #12 0x00007f21b7bf869d in RooAbsArg::addParameters(RooArgSet&, RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #13 0x00007f21b7bfab85 in RooAbsArg::getParameters(RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #14 0x00007f21b7c3e251 in RooAbsPdf::createNLL(RooAbsData&, RooLinkedList const&) () from /opt/root/cur/lib/libRooFitCore.so. #15 0x00007f21b7c4447a in RooAbsPdf::fitTo(RooAbsData&, RooLinkedList const&) () from /opt/root/cur/lib/libRooFitCore.so. #16 0x00007f21b7c42c78 in RooAbsPdf::fitTo(RooAbsData&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) () from /opt/root/cur/lib/libRooFitCore.so. #17 0x000055cbe4ef65ad in fit_small_rho(std::vector<double, std::allocator<double> >, std::vector<double, std::allocator<double> >, std::vector<double, std::allocator<double> >, double, char const*) (). #18 0x000055cbe4ef2964 in main (). ===========================================================. >. > Command exited with non-zero status 139.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8052
https://github.com/root-project/root/issues/8052:6314,energy efficiency,alloc,allocator,6314,"eNodeServerList(RooAbsCollection*, RooAbsArg const*, bool, bool, bool, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #7 0x00007f21b7bf880d in RooAbsArg::getObservables(RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #8 0x00007f21b7dd0362 in RooProdPdf::factorizeProduct(RooArgSet const&, RooArgSet const&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&) const () from /opt/root/cur/lib/libRooFitCore.so. #9 0x00007f21b7dd0f20 in RooProdPdf::getPartIntList(RooArgSet const*, RooArgSet const*, char const*) const () from /opt/root/cur/lib/libRooFitCore.so. #10 0x00007f21b7dd5487 in RooProdPdf::getParametersHook(RooArgSet const*, RooArgSet*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #11 0x00007f21b7bf8758 in RooAbsArg::addParameters(RooArgSet&, RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #12 0x00007f21b7bf869d in RooAbsArg::addParameters(RooArgSet&, RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #13 0x00007f21b7bfab85 in RooAbsArg::getParameters(RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #14 0x00007f21b7c3e251 in RooAbsPdf::createNLL(RooAbsData&, RooLinkedList const&) () from /opt/root/cur/lib/libRooFitCore.so. #15 0x00007f21b7c4447a in RooAbsPdf::fitTo(RooAbsData&, RooLinkedList const&) () from /opt/root/cur/lib/libRooFitCore.so. #16 0x00007f21b7c42c78 in RooAbsPdf::fitTo(RooAbsData&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) () from /opt/root/cur/lib/libRooFitCore.so. #17 0x000055cbe4ef65ad in fit_small_rho(std::vector<double, std::allocator<double> >, std::vector<double, std::allocator<double> >, std::vector<double, std::allocator<double> >, double, char const*) (). #18 0x000055cbe4ef2964 in main (). ===========================================================. >. > Command exited with non-zero status 139.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8052
https://github.com/root-project/root/issues/8052:6360,energy efficiency,alloc,allocator,6360,"eNodeServerList(RooAbsCollection*, RooAbsArg const*, bool, bool, bool, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #7 0x00007f21b7bf880d in RooAbsArg::getObservables(RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #8 0x00007f21b7dd0362 in RooProdPdf::factorizeProduct(RooArgSet const&, RooArgSet const&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&) const () from /opt/root/cur/lib/libRooFitCore.so. #9 0x00007f21b7dd0f20 in RooProdPdf::getPartIntList(RooArgSet const*, RooArgSet const*, char const*) const () from /opt/root/cur/lib/libRooFitCore.so. #10 0x00007f21b7dd5487 in RooProdPdf::getParametersHook(RooArgSet const*, RooArgSet*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #11 0x00007f21b7bf8758 in RooAbsArg::addParameters(RooArgSet&, RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #12 0x00007f21b7bf869d in RooAbsArg::addParameters(RooArgSet&, RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #13 0x00007f21b7bfab85 in RooAbsArg::getParameters(RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #14 0x00007f21b7c3e251 in RooAbsPdf::createNLL(RooAbsData&, RooLinkedList const&) () from /opt/root/cur/lib/libRooFitCore.so. #15 0x00007f21b7c4447a in RooAbsPdf::fitTo(RooAbsData&, RooLinkedList const&) () from /opt/root/cur/lib/libRooFitCore.so. #16 0x00007f21b7c42c78 in RooAbsPdf::fitTo(RooAbsData&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) () from /opt/root/cur/lib/libRooFitCore.so. #17 0x000055cbe4ef65ad in fit_small_rho(std::vector<double, std::allocator<double> >, std::vector<double, std::allocator<double> >, std::vector<double, std::allocator<double> >, double, char const*) (). #18 0x000055cbe4ef2964 in main (). ===========================================================. >. > Command exited with non-zero status 139.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8052
https://github.com/root-project/root/issues/8052:1116,integrability,version,version,1116,"ates. ### Describe the bug. When I use RooUniform inside RooProdPdf, this leads to SIGSEGV during execution. This code raises:. UniformExpZ neutrino_target_z(. ""uniform_exp_z_nt"", ""uniform (x) exp (z) nt"",. z, nt_h_top, nt_h_bot, l. );. RooProdPdf uxy_nt(. ""uxy_nt"", ""uxy_nt"",. RooArgList(RooUniform(""u_nt_x"", ""u_nt_x"", x),. RooUniform(""u_nt_y"", ""u_nt_y"", y)). );. RooProdPdf nt(""nt"", ""nt"", RooArgList(uxy_nt, neutrino_target_z));. // fit. RooFitResult *res = nt.fitTo(data, RooFit::Save(true), RooFit::NumCPU(8));. However, when I write RooUniform definition outside of that RooArgList, everything works fine:. RooUniform u_nt_x(""u_nt_x"", ""u_nt_x"", x);. RooUniform u_nt_y(""u_nt_y"", ""u_nt_y"", y);. RooProdPdf uxy_nt(. ""uxy_nt"", ""uxy_nt"",. RooArgList(u_nt_x, u_nt_y). );. ### Expected behavior. Should be the same for variables defined inside and outside the constructor. ### To Reproduce. 3. I compile this code with gcc. Sorry if the format of this bug report is not good :/. ### Setup. 1. ROOT version 6.22/06. 2. Arch Linux. 3. Built myself. ### Additional context. Unfortunately (I don't know whether it must be considered a bug) the output about the error appears only when I comment out a lot of code. Usually it only writes . > Command terminated by signal 11. Here is the output when I manage to get that:. > *** Break *** segmentation violation. >. > ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f21b73d20ca in wait4 () from /usr/lib64/libc.so.6. #1 0x00007f21b734fd6f in do_system () from /usr/lib64/libc.so.6. #2 0x00007f21b9bfc3c6 in TUnixSystem::StackTrace() () from /opt/root/cur/lib/libCore.so. #3 0x00007f21b9bf9705 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root/cur/lib/libCore.so. #4 <signal handler called>. #5 0x0000000000000000 in ?? (). #6 0x00007f21b7bf1322 in RooAbsArg::treeNodeServerList(RooAbsCollection*, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8052
https://github.com/root-project/root/issues/8052:4237,integrability,sub,submit,4237,"Core.so. #14 0x00007f21b7c3e251 in RooAbsPdf::createNLL(RooAbsData&, RooLinkedList const&) () from /opt/root/cur/lib/libRooFitCore.so. #15 0x00007f21b7c4447a in RooAbsPdf::fitTo(RooAbsData&, RooLinkedList const&) () from /opt/root/cur/lib/libRooFitCore.so. #16 0x00007f21b7c42c78 in RooAbsPdf::fitTo(RooAbsData&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) () from /opt/root/cur/lib/libRooFitCore.so. #17 0x000055cbe4ef65ad in fit_small_rho(std::vector<double, std::allocator<double> >, std::vector<double, std::allocator<double> >, std::vector<double, std::allocator<double> >, double, char const*) (). #18 0x000055cbe4ef2964 in main (). ===========================================================. >. > The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x0000000000000000 in ?? (). #6 0x00007f21b7bf1322 in RooAbsArg::treeNodeServerList(RooAbsCollection*, RooAbsArg const*, bool, bool, bool, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #7 0x00007f21b7bf880d in RooAbsArg::getObservables(RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #8 0x00007f21b7dd0362 in RooProdPdf::factorizeProduct(RooArgSet const&, RooArgSet const&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&) const () from /opt/root/cur/lib/libRooFitCore.so. #9 0x00007f21b7dd0f20 in RooProdPdf::getPartIntList(RooArgSet const*, RooArgSet const*, char const*) const () from /opt/root/cur/lib/libRooFitCore.so. #10 0x00007f21b7dd5487 in RooProdPdf::getParametersHook(RooArgSet cons",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8052
https://github.com/root-project/root/issues/8052:1055,interoperability,format,format,1055,"violation during fit; - [google and issues] Checked for duplicates. ### Describe the bug. When I use RooUniform inside RooProdPdf, this leads to SIGSEGV during execution. This code raises:. UniformExpZ neutrino_target_z(. ""uniform_exp_z_nt"", ""uniform (x) exp (z) nt"",. z, nt_h_top, nt_h_bot, l. );. RooProdPdf uxy_nt(. ""uxy_nt"", ""uxy_nt"",. RooArgList(RooUniform(""u_nt_x"", ""u_nt_x"", x),. RooUniform(""u_nt_y"", ""u_nt_y"", y)). );. RooProdPdf nt(""nt"", ""nt"", RooArgList(uxy_nt, neutrino_target_z));. // fit. RooFitResult *res = nt.fitTo(data, RooFit::Save(true), RooFit::NumCPU(8));. However, when I write RooUniform definition outside of that RooArgList, everything works fine:. RooUniform u_nt_x(""u_nt_x"", ""u_nt_x"", x);. RooUniform u_nt_y(""u_nt_y"", ""u_nt_y"", y);. RooProdPdf uxy_nt(. ""uxy_nt"", ""uxy_nt"",. RooArgList(u_nt_x, u_nt_y). );. ### Expected behavior. Should be the same for variables defined inside and outside the constructor. ### To Reproduce. 3. I compile this code with gcc. Sorry if the format of this bug report is not good :/. ### Setup. 1. ROOT version 6.22/06. 2. Arch Linux. 3. Built myself. ### Additional context. Unfortunately (I don't know whether it must be considered a bug) the output about the error appears only when I comment out a lot of code. Usually it only writes . > Command terminated by signal 11. Here is the output when I manage to get that:. > *** Break *** segmentation violation. >. > ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f21b73d20ca in wait4 () from /usr/lib64/libc.so.6. #1 0x00007f21b734fd6f in do_system () from /usr/lib64/libc.so.6. #2 0x00007f21b9bfc3c6 in TUnixSystem::StackTrace() () from /opt/root/cur/lib/libCore.so. #3 0x00007f21b9bf9705 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root/cur/lib/libCore.so. #4 <signal handler called>. #5 0x0000000000000000 in ?? (). #6 0x00007f2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8052
https://github.com/root-project/root/issues/8052:937,modifiability,variab,variables,937,"[RF] RooUniform in RooArgList in RooProdPdf: segmentation violation during fit; - [google and issues] Checked for duplicates. ### Describe the bug. When I use RooUniform inside RooProdPdf, this leads to SIGSEGV during execution. This code raises:. UniformExpZ neutrino_target_z(. ""uniform_exp_z_nt"", ""uniform (x) exp (z) nt"",. z, nt_h_top, nt_h_bot, l. );. RooProdPdf uxy_nt(. ""uxy_nt"", ""uxy_nt"",. RooArgList(RooUniform(""u_nt_x"", ""u_nt_x"", x),. RooUniform(""u_nt_y"", ""u_nt_y"", y)). );. RooProdPdf nt(""nt"", ""nt"", RooArgList(uxy_nt, neutrino_target_z));. // fit. RooFitResult *res = nt.fitTo(data, RooFit::Save(true), RooFit::NumCPU(8));. However, when I write RooUniform definition outside of that RooArgList, everything works fine:. RooUniform u_nt_x(""u_nt_x"", ""u_nt_x"", x);. RooUniform u_nt_y(""u_nt_y"", ""u_nt_y"", y);. RooProdPdf uxy_nt(. ""uxy_nt"", ""uxy_nt"",. RooArgList(u_nt_x, u_nt_y). );. ### Expected behavior. Should be the same for variables defined inside and outside the constructor. ### To Reproduce. 3. I compile this code with gcc. Sorry if the format of this bug report is not good :/. ### Setup. 1. ROOT version 6.22/06. 2. Arch Linux. 3. Built myself. ### Additional context. Unfortunately (I don't know whether it must be considered a bug) the output about the error appears only when I comment out a lot of code. Usually it only writes . > Command terminated by signal 11. Here is the output when I manage to get that:. > *** Break *** segmentation violation. >. > ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f21b73d20ca in wait4 () from /usr/lib64/libc.so.6. #1 0x00007f21b734fd6f in do_system () from /usr/lib64/libc.so.6. #2 0x00007f21b9bfc3c6 in TUnixSystem::StackTrace() () from /opt/root/cur/lib/libCore.so. #3 0x00007f21b9bf9705 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root/cur/lib/libCore.so. #4 <signal han",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8052
https://github.com/root-project/root/issues/8052:1116,modifiability,version,version,1116,"ates. ### Describe the bug. When I use RooUniform inside RooProdPdf, this leads to SIGSEGV during execution. This code raises:. UniformExpZ neutrino_target_z(. ""uniform_exp_z_nt"", ""uniform (x) exp (z) nt"",. z, nt_h_top, nt_h_bot, l. );. RooProdPdf uxy_nt(. ""uxy_nt"", ""uxy_nt"",. RooArgList(RooUniform(""u_nt_x"", ""u_nt_x"", x),. RooUniform(""u_nt_y"", ""u_nt_y"", y)). );. RooProdPdf nt(""nt"", ""nt"", RooArgList(uxy_nt, neutrino_target_z));. // fit. RooFitResult *res = nt.fitTo(data, RooFit::Save(true), RooFit::NumCPU(8));. However, when I write RooUniform definition outside of that RooArgList, everything works fine:. RooUniform u_nt_x(""u_nt_x"", ""u_nt_x"", x);. RooUniform u_nt_y(""u_nt_y"", ""u_nt_y"", y);. RooProdPdf uxy_nt(. ""uxy_nt"", ""uxy_nt"",. RooArgList(u_nt_x, u_nt_y). );. ### Expected behavior. Should be the same for variables defined inside and outside the constructor. ### To Reproduce. 3. I compile this code with gcc. Sorry if the format of this bug report is not good :/. ### Setup. 1. ROOT version 6.22/06. 2. Arch Linux. 3. Built myself. ### Additional context. Unfortunately (I don't know whether it must be considered a bug) the output about the error appears only when I comment out a lot of code. Usually it only writes . > Command terminated by signal 11. Here is the output when I manage to get that:. > *** Break *** segmentation violation. >. > ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f21b73d20ca in wait4 () from /usr/lib64/libc.so.6. #1 0x00007f21b734fd6f in do_system () from /usr/lib64/libc.so.6. #2 0x00007f21b9bfc3c6 in TUnixSystem::StackTrace() () from /opt/root/cur/lib/libCore.so. #3 0x00007f21b9bf9705 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root/cur/lib/libCore.so. #4 <signal handler called>. #5 0x0000000000000000 in ?? (). #6 0x00007f21b7bf1322 in RooAbsArg::treeNodeServerList(RooAbsCollection*, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8052
https://github.com/root-project/root/issues/8052:1275,performance,error,error,1275,". ""uniform_exp_z_nt"", ""uniform (x) exp (z) nt"",. z, nt_h_top, nt_h_bot, l. );. RooProdPdf uxy_nt(. ""uxy_nt"", ""uxy_nt"",. RooArgList(RooUniform(""u_nt_x"", ""u_nt_x"", x),. RooUniform(""u_nt_y"", ""u_nt_y"", y)). );. RooProdPdf nt(""nt"", ""nt"", RooArgList(uxy_nt, neutrino_target_z));. // fit. RooFitResult *res = nt.fitTo(data, RooFit::Save(true), RooFit::NumCPU(8));. However, when I write RooUniform definition outside of that RooArgList, everything works fine:. RooUniform u_nt_x(""u_nt_x"", ""u_nt_x"", x);. RooUniform u_nt_y(""u_nt_y"", ""u_nt_y"", y);. RooProdPdf uxy_nt(. ""uxy_nt"", ""uxy_nt"",. RooArgList(u_nt_x, u_nt_y). );. ### Expected behavior. Should be the same for variables defined inside and outside the constructor. ### To Reproduce. 3. I compile this code with gcc. Sorry if the format of this bug report is not good :/. ### Setup. 1. ROOT version 6.22/06. 2. Arch Linux. 3. Built myself. ### Additional context. Unfortunately (I don't know whether it must be considered a bug) the output about the error appears only when I comment out a lot of code. Usually it only writes . > Command terminated by signal 11. Here is the output when I manage to get that:. > *** Break *** segmentation violation. >. > ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f21b73d20ca in wait4 () from /usr/lib64/libc.so.6. #1 0x00007f21b734fd6f in do_system () from /usr/lib64/libc.so.6. #2 0x00007f21b9bfc3c6 in TUnixSystem::StackTrace() () from /opt/root/cur/lib/libCore.so. #3 0x00007f21b9bf9705 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root/cur/lib/libCore.so. #4 <signal handler called>. #5 0x0000000000000000 in ?? (). #6 0x00007f21b7bf1322 in RooAbsArg::treeNodeServerList(RooAbsCollection*, RooAbsArg const*, bool, bool, bool, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #7 0x00007f21b7bf880d in RooAbsArg::getObservables(RooArgSet const",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8052
https://github.com/root-project/root/issues/8052:1275,safety,error,error,1275,". ""uniform_exp_z_nt"", ""uniform (x) exp (z) nt"",. z, nt_h_top, nt_h_bot, l. );. RooProdPdf uxy_nt(. ""uxy_nt"", ""uxy_nt"",. RooArgList(RooUniform(""u_nt_x"", ""u_nt_x"", x),. RooUniform(""u_nt_y"", ""u_nt_y"", y)). );. RooProdPdf nt(""nt"", ""nt"", RooArgList(uxy_nt, neutrino_target_z));. // fit. RooFitResult *res = nt.fitTo(data, RooFit::Save(true), RooFit::NumCPU(8));. However, when I write RooUniform definition outside of that RooArgList, everything works fine:. RooUniform u_nt_x(""u_nt_x"", ""u_nt_x"", x);. RooUniform u_nt_y(""u_nt_y"", ""u_nt_y"", y);. RooProdPdf uxy_nt(. ""uxy_nt"", ""uxy_nt"",. RooArgList(u_nt_x, u_nt_y). );. ### Expected behavior. Should be the same for variables defined inside and outside the constructor. ### To Reproduce. 3. I compile this code with gcc. Sorry if the format of this bug report is not good :/. ### Setup. 1. ROOT version 6.22/06. 2. Arch Linux. 3. Built myself. ### Additional context. Unfortunately (I don't know whether it must be considered a bug) the output about the error appears only when I comment out a lot of code. Usually it only writes . > Command terminated by signal 11. Here is the output when I manage to get that:. > *** Break *** segmentation violation. >. > ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f21b73d20ca in wait4 () from /usr/lib64/libc.so.6. #1 0x00007f21b734fd6f in do_system () from /usr/lib64/libc.so.6. #2 0x00007f21b9bfc3c6 in TUnixSystem::StackTrace() () from /opt/root/cur/lib/libCore.so. #3 0x00007f21b9bf9705 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root/cur/lib/libCore.so. #4 <signal handler called>. #5 0x0000000000000000 in ?? (). #6 0x00007f21b7bf1322 in RooAbsArg::treeNodeServerList(RooAbsCollection*, RooAbsArg const*, bool, bool, bool, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #7 0x00007f21b7bf880d in RooAbsArg::getObservables(RooArgSet const",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8052
https://github.com/root-project/root/issues/8052:1414,safety,manag,manage,1414,"rm(""u_nt_x"", ""u_nt_x"", x),. RooUniform(""u_nt_y"", ""u_nt_y"", y)). );. RooProdPdf nt(""nt"", ""nt"", RooArgList(uxy_nt, neutrino_target_z));. // fit. RooFitResult *res = nt.fitTo(data, RooFit::Save(true), RooFit::NumCPU(8));. However, when I write RooUniform definition outside of that RooArgList, everything works fine:. RooUniform u_nt_x(""u_nt_x"", ""u_nt_x"", x);. RooUniform u_nt_y(""u_nt_y"", ""u_nt_y"", y);. RooProdPdf uxy_nt(. ""uxy_nt"", ""uxy_nt"",. RooArgList(u_nt_x, u_nt_y). );. ### Expected behavior. Should be the same for variables defined inside and outside the constructor. ### To Reproduce. 3. I compile this code with gcc. Sorry if the format of this bug report is not good :/. ### Setup. 1. ROOT version 6.22/06. 2. Arch Linux. 3. Built myself. ### Additional context. Unfortunately (I don't know whether it must be considered a bug) the output about the error appears only when I comment out a lot of code. Usually it only writes . > Command terminated by signal 11. Here is the output when I manage to get that:. > *** Break *** segmentation violation. >. > ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f21b73d20ca in wait4 () from /usr/lib64/libc.so.6. #1 0x00007f21b734fd6f in do_system () from /usr/lib64/libc.so.6. #2 0x00007f21b9bfc3c6 in TUnixSystem::StackTrace() () from /opt/root/cur/lib/libCore.so. #3 0x00007f21b9bf9705 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root/cur/lib/libCore.so. #4 <signal handler called>. #5 0x0000000000000000 in ?? (). #6 0x00007f21b7bf1322 in RooAbsArg::treeNodeServerList(RooAbsCollection*, RooAbsArg const*, bool, bool, bool, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #7 0x00007f21b7bf880d in RooAbsArg::getObservables(RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #8 0x00007f21b7dd0362 in RooProdPdf::factorizeProduct(RooArgSet const&, RooArgSe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8052
https://github.com/root-project/root/issues/8052:1377,security,sign,signal,1377,"y_nt"", ""uxy_nt"",. RooArgList(RooUniform(""u_nt_x"", ""u_nt_x"", x),. RooUniform(""u_nt_y"", ""u_nt_y"", y)). );. RooProdPdf nt(""nt"", ""nt"", RooArgList(uxy_nt, neutrino_target_z));. // fit. RooFitResult *res = nt.fitTo(data, RooFit::Save(true), RooFit::NumCPU(8));. However, when I write RooUniform definition outside of that RooArgList, everything works fine:. RooUniform u_nt_x(""u_nt_x"", ""u_nt_x"", x);. RooUniform u_nt_y(""u_nt_y"", ""u_nt_y"", y);. RooProdPdf uxy_nt(. ""uxy_nt"", ""uxy_nt"",. RooArgList(u_nt_x, u_nt_y). );. ### Expected behavior. Should be the same for variables defined inside and outside the constructor. ### To Reproduce. 3. I compile this code with gcc. Sorry if the format of this bug report is not good :/. ### Setup. 1. ROOT version 6.22/06. 2. Arch Linux. 3. Built myself. ### Additional context. Unfortunately (I don't know whether it must be considered a bug) the output about the error appears only when I comment out a lot of code. Usually it only writes . > Command terminated by signal 11. Here is the output when I manage to get that:. > *** Break *** segmentation violation. >. > ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f21b73d20ca in wait4 () from /usr/lib64/libc.so.6. #1 0x00007f21b734fd6f in do_system () from /usr/lib64/libc.so.6. #2 0x00007f21b9bfc3c6 in TUnixSystem::StackTrace() () from /opt/root/cur/lib/libCore.so. #3 0x00007f21b9bf9705 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root/cur/lib/libCore.so. #4 <signal handler called>. #5 0x0000000000000000 in ?? (). #6 0x00007f21b7bf1322 in RooAbsArg::treeNodeServerList(RooAbsCollection*, RooAbsArg const*, bool, bool, bool, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #7 0x00007f21b7bf880d in RooAbsArg::getObservables(RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #8 0x00007f21b7dd0362 in RooProdPdf::factor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8052
https://github.com/root-project/root/issues/8052:1990,security,sign,signal,1990,"# To Reproduce. 3. I compile this code with gcc. Sorry if the format of this bug report is not good :/. ### Setup. 1. ROOT version 6.22/06. 2. Arch Linux. 3. Built myself. ### Additional context. Unfortunately (I don't know whether it must be considered a bug) the output about the error appears only when I comment out a lot of code. Usually it only writes . > Command terminated by signal 11. Here is the output when I manage to get that:. > *** Break *** segmentation violation. >. > ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f21b73d20ca in wait4 () from /usr/lib64/libc.so.6. #1 0x00007f21b734fd6f in do_system () from /usr/lib64/libc.so.6. #2 0x00007f21b9bfc3c6 in TUnixSystem::StackTrace() () from /opt/root/cur/lib/libCore.so. #3 0x00007f21b9bf9705 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root/cur/lib/libCore.so. #4 <signal handler called>. #5 0x0000000000000000 in ?? (). #6 0x00007f21b7bf1322 in RooAbsArg::treeNodeServerList(RooAbsCollection*, RooAbsArg const*, bool, bool, bool, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #7 0x00007f21b7bf880d in RooAbsArg::getObservables(RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #8 0x00007f21b7dd0362 in RooProdPdf::factorizeProduct(RooArgSet const&, RooArgSet const&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&) const () from /opt/root/cur/lib/libRooFitCore.so. #9 0x00007f21b7dd0f20 in RooProdPdf::getPartIntList(RooArgSet const*, RooArgSet const*, char const*) const () from /opt/root/cur/lib/libRooFitCore.so. #10 0x00007f21b7dd5487 in RooProdPdf::getParametersHook(RooArgSet const*, RooArgSet*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #11 0x00007f21b7bf8758 in RooAbsArg::addParameters(RooArgSet&, RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #12 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8052
https://github.com/root-project/root/issues/8052:1180,testability,context,context,1180,"Pdf, this leads to SIGSEGV during execution. This code raises:. UniformExpZ neutrino_target_z(. ""uniform_exp_z_nt"", ""uniform (x) exp (z) nt"",. z, nt_h_top, nt_h_bot, l. );. RooProdPdf uxy_nt(. ""uxy_nt"", ""uxy_nt"",. RooArgList(RooUniform(""u_nt_x"", ""u_nt_x"", x),. RooUniform(""u_nt_y"", ""u_nt_y"", y)). );. RooProdPdf nt(""nt"", ""nt"", RooArgList(uxy_nt, neutrino_target_z));. // fit. RooFitResult *res = nt.fitTo(data, RooFit::Save(true), RooFit::NumCPU(8));. However, when I write RooUniform definition outside of that RooArgList, everything works fine:. RooUniform u_nt_x(""u_nt_x"", ""u_nt_x"", x);. RooUniform u_nt_y(""u_nt_y"", ""u_nt_y"", y);. RooProdPdf uxy_nt(. ""uxy_nt"", ""uxy_nt"",. RooArgList(u_nt_x, u_nt_y). );. ### Expected behavior. Should be the same for variables defined inside and outside the constructor. ### To Reproduce. 3. I compile this code with gcc. Sorry if the format of this bug report is not good :/. ### Setup. 1. ROOT version 6.22/06. 2. Arch Linux. 3. Built myself. ### Additional context. Unfortunately (I don't know whether it must be considered a bug) the output about the error appears only when I comment out a lot of code. Usually it only writes . > Command terminated by signal 11. Here is the output when I manage to get that:. > *** Break *** segmentation violation. >. > ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f21b73d20ca in wait4 () from /usr/lib64/libc.so.6. #1 0x00007f21b734fd6f in do_system () from /usr/lib64/libc.so.6. #2 0x00007f21b9bfc3c6 in TUnixSystem::StackTrace() () from /opt/root/cur/lib/libCore.so. #3 0x00007f21b9bf9705 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root/cur/lib/libCore.so. #4 <signal handler called>. #5 0x0000000000000000 in ?? (). #6 0x00007f21b7bf1322 in RooAbsArg::treeNodeServerList(RooAbsCollection*, RooAbsArg const*, bool, bool, bool, bool) const () from /opt/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8052
https://github.com/root-project/root/issues/8052:1585,testability,trace,trace,1585,"(data, RooFit::Save(true), RooFit::NumCPU(8));. However, when I write RooUniform definition outside of that RooArgList, everything works fine:. RooUniform u_nt_x(""u_nt_x"", ""u_nt_x"", x);. RooUniform u_nt_y(""u_nt_y"", ""u_nt_y"", y);. RooProdPdf uxy_nt(. ""uxy_nt"", ""uxy_nt"",. RooArgList(u_nt_x, u_nt_y). );. ### Expected behavior. Should be the same for variables defined inside and outside the constructor. ### To Reproduce. 3. I compile this code with gcc. Sorry if the format of this bug report is not good :/. ### Setup. 1. ROOT version 6.22/06. 2. Arch Linux. 3. Built myself. ### Additional context. Unfortunately (I don't know whether it must be considered a bug) the output about the error appears only when I comment out a lot of code. Usually it only writes . > Command terminated by signal 11. Here is the output when I manage to get that:. > *** Break *** segmentation violation. >. > ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f21b73d20ca in wait4 () from /usr/lib64/libc.so.6. #1 0x00007f21b734fd6f in do_system () from /usr/lib64/libc.so.6. #2 0x00007f21b9bfc3c6 in TUnixSystem::StackTrace() () from /opt/root/cur/lib/libCore.so. #3 0x00007f21b9bf9705 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root/cur/lib/libCore.so. #4 <signal handler called>. #5 0x0000000000000000 in ?? (). #6 0x00007f21b7bf1322 in RooAbsArg::treeNodeServerList(RooAbsCollection*, RooAbsArg const*, bool, bool, bool, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #7 0x00007f21b7bf880d in RooAbsArg::getObservables(RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #8 0x00007f21b7dd0362 in RooProdPdf::factorizeProduct(RooArgSet const&, RooArgSet const&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&) const () from /opt/root/cur/lib/libRooFitCore.so. #9 0x00007f21b7dd0f20 in RooPro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8052
https://github.com/root-project/root/issues/8052:4312,testability,trace,trace,4312,"kedList const&) () from /opt/root/cur/lib/libRooFitCore.so. #15 0x00007f21b7c4447a in RooAbsPdf::fitTo(RooAbsData&, RooLinkedList const&) () from /opt/root/cur/lib/libRooFitCore.so. #16 0x00007f21b7c42c78 in RooAbsPdf::fitTo(RooAbsData&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) () from /opt/root/cur/lib/libRooFitCore.so. #17 0x000055cbe4ef65ad in fit_small_rho(std::vector<double, std::allocator<double> >, std::vector<double, std::allocator<double> >, std::vector<double, std::allocator<double> >, double, char const*) (). #18 0x000055cbe4ef2964 in main (). ===========================================================. >. > The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x0000000000000000 in ?? (). #6 0x00007f21b7bf1322 in RooAbsArg::treeNodeServerList(RooAbsCollection*, RooAbsArg const*, bool, bool, bool, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #7 0x00007f21b7bf880d in RooAbsArg::getObservables(RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #8 0x00007f21b7dd0362 in RooProdPdf::factorizeProduct(RooArgSet const&, RooArgSet const&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&) const () from /opt/root/cur/lib/libRooFitCore.so. #9 0x00007f21b7dd0f20 in RooProdPdf::getPartIntList(RooArgSet const*, RooArgSet const*, char const*) const () from /opt/root/cur/lib/libRooFitCore.so. #10 0x00007f21b7dd5487 in RooProdPdf::getParametersHook(RooArgSet const*, RooArgSet*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #11",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8052
https://github.com/root-project/root/issues/8052:904,usability,behavi,behavior,904,"[RF] RooUniform in RooArgList in RooProdPdf: segmentation violation during fit; - [google and issues] Checked for duplicates. ### Describe the bug. When I use RooUniform inside RooProdPdf, this leads to SIGSEGV during execution. This code raises:. UniformExpZ neutrino_target_z(. ""uniform_exp_z_nt"", ""uniform (x) exp (z) nt"",. z, nt_h_top, nt_h_bot, l. );. RooProdPdf uxy_nt(. ""uxy_nt"", ""uxy_nt"",. RooArgList(RooUniform(""u_nt_x"", ""u_nt_x"", x),. RooUniform(""u_nt_y"", ""u_nt_y"", y)). );. RooProdPdf nt(""nt"", ""nt"", RooArgList(uxy_nt, neutrino_target_z));. // fit. RooFitResult *res = nt.fitTo(data, RooFit::Save(true), RooFit::NumCPU(8));. However, when I write RooUniform definition outside of that RooArgList, everything works fine:. RooUniform u_nt_x(""u_nt_x"", ""u_nt_x"", x);. RooUniform u_nt_y(""u_nt_y"", ""u_nt_y"", y);. RooProdPdf uxy_nt(. ""uxy_nt"", ""uxy_nt"",. RooArgList(u_nt_x, u_nt_y). );. ### Expected behavior. Should be the same for variables defined inside and outside the constructor. ### To Reproduce. 3. I compile this code with gcc. Sorry if the format of this bug report is not good :/. ### Setup. 1. ROOT version 6.22/06. 2. Arch Linux. 3. Built myself. ### Additional context. Unfortunately (I don't know whether it must be considered a bug) the output about the error appears only when I comment out a lot of code. Usually it only writes . > Command terminated by signal 11. Here is the output when I manage to get that:. > *** Break *** segmentation violation. >. > ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f21b73d20ca in wait4 () from /usr/lib64/libc.so.6. #1 0x00007f21b734fd6f in do_system () from /usr/lib64/libc.so.6. #2 0x00007f21b9bfc3c6 in TUnixSystem::StackTrace() () from /opt/root/cur/lib/libCore.so. #3 0x00007f21b9bf9705 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root/cur/lib/libCore.so. #4 <signal han",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8052
https://github.com/root-project/root/issues/8052:1275,usability,error,error,1275,". ""uniform_exp_z_nt"", ""uniform (x) exp (z) nt"",. z, nt_h_top, nt_h_bot, l. );. RooProdPdf uxy_nt(. ""uxy_nt"", ""uxy_nt"",. RooArgList(RooUniform(""u_nt_x"", ""u_nt_x"", x),. RooUniform(""u_nt_y"", ""u_nt_y"", y)). );. RooProdPdf nt(""nt"", ""nt"", RooArgList(uxy_nt, neutrino_target_z));. // fit. RooFitResult *res = nt.fitTo(data, RooFit::Save(true), RooFit::NumCPU(8));. However, when I write RooUniform definition outside of that RooArgList, everything works fine:. RooUniform u_nt_x(""u_nt_x"", ""u_nt_x"", x);. RooUniform u_nt_y(""u_nt_y"", ""u_nt_y"", y);. RooProdPdf uxy_nt(. ""uxy_nt"", ""uxy_nt"",. RooArgList(u_nt_x, u_nt_y). );. ### Expected behavior. Should be the same for variables defined inside and outside the constructor. ### To Reproduce. 3. I compile this code with gcc. Sorry if the format of this bug report is not good :/. ### Setup. 1. ROOT version 6.22/06. 2. Arch Linux. 3. Built myself. ### Additional context. Unfortunately (I don't know whether it must be considered a bug) the output about the error appears only when I comment out a lot of code. Usually it only writes . > Command terminated by signal 11. Here is the output when I manage to get that:. > *** Break *** segmentation violation. >. > ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f21b73d20ca in wait4 () from /usr/lib64/libc.so.6. #1 0x00007f21b734fd6f in do_system () from /usr/lib64/libc.so.6. #2 0x00007f21b9bfc3c6 in TUnixSystem::StackTrace() () from /opt/root/cur/lib/libCore.so. #3 0x00007f21b9bf9705 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root/cur/lib/libCore.so. #4 <signal handler called>. #5 0x0000000000000000 in ?? (). #6 0x00007f21b7bf1322 in RooAbsArg::treeNodeServerList(RooAbsCollection*, RooAbsArg const*, bool, bool, bool, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #7 0x00007f21b7bf880d in RooAbsArg::getObservables(RooArgSet const",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8052
https://github.com/root-project/root/issues/8052:1355,usability,Command,Command,1355,"oProdPdf uxy_nt(. ""uxy_nt"", ""uxy_nt"",. RooArgList(RooUniform(""u_nt_x"", ""u_nt_x"", x),. RooUniform(""u_nt_y"", ""u_nt_y"", y)). );. RooProdPdf nt(""nt"", ""nt"", RooArgList(uxy_nt, neutrino_target_z));. // fit. RooFitResult *res = nt.fitTo(data, RooFit::Save(true), RooFit::NumCPU(8));. However, when I write RooUniform definition outside of that RooArgList, everything works fine:. RooUniform u_nt_x(""u_nt_x"", ""u_nt_x"", x);. RooUniform u_nt_y(""u_nt_y"", ""u_nt_y"", y);. RooProdPdf uxy_nt(. ""uxy_nt"", ""uxy_nt"",. RooArgList(u_nt_x, u_nt_y). );. ### Expected behavior. Should be the same for variables defined inside and outside the constructor. ### To Reproduce. 3. I compile this code with gcc. Sorry if the format of this bug report is not good :/. ### Setup. 1. ROOT version 6.22/06. 2. Arch Linux. 3. Built myself. ### Additional context. Unfortunately (I don't know whether it must be considered a bug) the output about the error appears only when I comment out a lot of code. Usually it only writes . > Command terminated by signal 11. Here is the output when I manage to get that:. > *** Break *** segmentation violation. >. > ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f21b73d20ca in wait4 () from /usr/lib64/libc.so.6. #1 0x00007f21b734fd6f in do_system () from /usr/lib64/libc.so.6. #2 0x00007f21b9bfc3c6 in TUnixSystem::StackTrace() () from /opt/root/cur/lib/libCore.so. #3 0x00007f21b9bf9705 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root/cur/lib/libCore.so. #4 <signal handler called>. #5 0x0000000000000000 in ?? (). #6 0x00007f21b7bf1322 in RooAbsArg::treeNodeServerList(RooAbsCollection*, RooAbsArg const*, bool, bool, bool, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #7 0x00007f21b7bf880d in RooAbsArg::getObservables(RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #8 0x00007f21b7dd0362 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8052
https://github.com/root-project/root/issues/8052:4067,usability,hint,hint,4067,"ool) const () from /opt/root/cur/lib/libRooFitCore.so. #13 0x00007f21b7bfab85 in RooAbsArg::getParameters(RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #14 0x00007f21b7c3e251 in RooAbsPdf::createNLL(RooAbsData&, RooLinkedList const&) () from /opt/root/cur/lib/libRooFitCore.so. #15 0x00007f21b7c4447a in RooAbsPdf::fitTo(RooAbsData&, RooLinkedList const&) () from /opt/root/cur/lib/libRooFitCore.so. #16 0x00007f21b7c42c78 in RooAbsPdf::fitTo(RooAbsData&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) () from /opt/root/cur/lib/libRooFitCore.so. #17 0x000055cbe4ef65ad in fit_small_rho(std::vector<double, std::allocator<double> >, std::vector<double, std::allocator<double> >, std::vector<double, std::allocator<double> >, double, char const*) (). #18 0x000055cbe4ef2964 in main (). ===========================================================. >. > The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x0000000000000000 in ?? (). #6 0x00007f21b7bf1322 in RooAbsArg::treeNodeServerList(RooAbsCollection*, RooAbsArg const*, bool, bool, bool, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #7 0x00007f21b7bf880d in RooAbsArg::getObservables(RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #8 0x00007f21b7dd0362 in RooProdPdf::factorizeProduct(RooArgSet const&, RooArgSet const&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&) const () from /opt/root/cur/lib/libRooFitCore.so. #9 0x00007f21b7dd0f20 in RooProdPdf::getPartIntLis",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8052
https://github.com/root-project/root/issues/8052:4111,usability,help,help,4111,"itCore.so. #13 0x00007f21b7bfab85 in RooAbsArg::getParameters(RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #14 0x00007f21b7c3e251 in RooAbsPdf::createNLL(RooAbsData&, RooLinkedList const&) () from /opt/root/cur/lib/libRooFitCore.so. #15 0x00007f21b7c4447a in RooAbsPdf::fitTo(RooAbsData&, RooLinkedList const&) () from /opt/root/cur/lib/libRooFitCore.so. #16 0x00007f21b7c42c78 in RooAbsPdf::fitTo(RooAbsData&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) () from /opt/root/cur/lib/libRooFitCore.so. #17 0x000055cbe4ef65ad in fit_small_rho(std::vector<double, std::allocator<double> >, std::vector<double, std::allocator<double> >, std::vector<double, std::allocator<double> >, double, char const*) (). #18 0x000055cbe4ef2964 in main (). ===========================================================. >. > The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x0000000000000000 in ?? (). #6 0x00007f21b7bf1322 in RooAbsArg::treeNodeServerList(RooAbsCollection*, RooAbsArg const*, bool, bool, bool, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #7 0x00007f21b7bf880d in RooAbsArg::getObservables(RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #8 0x00007f21b7dd0362 in RooProdPdf::factorizeProduct(RooArgSet const&, RooArgSet const&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&) const () from /opt/root/cur/lib/libRooFitCore.so. #9 0x00007f21b7dd0f20 in RooProdPdf::getPartIntList(RooArgSet const*, RooArgSet const*, char c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8052
https://github.com/root-project/root/issues/8052:4388,usability,help,help,4388,"7c4447a in RooAbsPdf::fitTo(RooAbsData&, RooLinkedList const&) () from /opt/root/cur/lib/libRooFitCore.so. #16 0x00007f21b7c42c78 in RooAbsPdf::fitTo(RooAbsData&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) () from /opt/root/cur/lib/libRooFitCore.so. #17 0x000055cbe4ef65ad in fit_small_rho(std::vector<double, std::allocator<double> >, std::vector<double, std::allocator<double> >, std::vector<double, std::allocator<double> >, double, char const*) (). #18 0x000055cbe4ef2964 in main (). ===========================================================. >. > The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x0000000000000000 in ?? (). #6 0x00007f21b7bf1322 in RooAbsArg::treeNodeServerList(RooAbsCollection*, RooAbsArg const*, bool, bool, bool, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #7 0x00007f21b7bf880d in RooAbsArg::getObservables(RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #8 0x00007f21b7dd0362 in RooProdPdf::factorizeProduct(RooArgSet const&, RooArgSet const&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&) const () from /opt/root/cur/lib/libRooFitCore.so. #9 0x00007f21b7dd0f20 in RooProdPdf::getPartIntList(RooArgSet const*, RooArgSet const*, char const*) const () from /opt/root/cur/lib/libRooFitCore.so. #10 0x00007f21b7dd5487 in RooProdPdf::getParametersHook(RooArgSet const*, RooArgSet*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #11 0x00007f21b7bf8758 in RooAbsArg::addParameters(RooArgSet&, RooArgSet const",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8052
https://github.com/root-project/root/issues/8052:6507,usability,Command,Command,6507,"eNodeServerList(RooAbsCollection*, RooAbsArg const*, bool, bool, bool, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #7 0x00007f21b7bf880d in RooAbsArg::getObservables(RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #8 0x00007f21b7dd0362 in RooProdPdf::factorizeProduct(RooArgSet const&, RooArgSet const&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&) const () from /opt/root/cur/lib/libRooFitCore.so. #9 0x00007f21b7dd0f20 in RooProdPdf::getPartIntList(RooArgSet const*, RooArgSet const*, char const*) const () from /opt/root/cur/lib/libRooFitCore.so. #10 0x00007f21b7dd5487 in RooProdPdf::getParametersHook(RooArgSet const*, RooArgSet*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #11 0x00007f21b7bf8758 in RooAbsArg::addParameters(RooArgSet&, RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #12 0x00007f21b7bf869d in RooAbsArg::addParameters(RooArgSet&, RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #13 0x00007f21b7bfab85 in RooAbsArg::getParameters(RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #14 0x00007f21b7c3e251 in RooAbsPdf::createNLL(RooAbsData&, RooLinkedList const&) () from /opt/root/cur/lib/libRooFitCore.so. #15 0x00007f21b7c4447a in RooAbsPdf::fitTo(RooAbsData&, RooLinkedList const&) () from /opt/root/cur/lib/libRooFitCore.so. #16 0x00007f21b7c42c78 in RooAbsPdf::fitTo(RooAbsData&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) () from /opt/root/cur/lib/libRooFitCore.so. #17 0x000055cbe4ef65ad in fit_small_rho(std::vector<double, std::allocator<double> >, std::vector<double, std::allocator<double> >, std::vector<double, std::allocator<double> >, double, char const*) (). #18 0x000055cbe4ef2964 in main (). ===========================================================. >. > Command exited with non-zero status 139.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8052
https://github.com/root-project/root/issues/8052:6536,usability,statu,status,6536,"eNodeServerList(RooAbsCollection*, RooAbsArg const*, bool, bool, bool, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #7 0x00007f21b7bf880d in RooAbsArg::getObservables(RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #8 0x00007f21b7dd0362 in RooProdPdf::factorizeProduct(RooArgSet const&, RooArgSet const&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&) const () from /opt/root/cur/lib/libRooFitCore.so. #9 0x00007f21b7dd0f20 in RooProdPdf::getPartIntList(RooArgSet const*, RooArgSet const*, char const*) const () from /opt/root/cur/lib/libRooFitCore.so. #10 0x00007f21b7dd5487 in RooProdPdf::getParametersHook(RooArgSet const*, RooArgSet*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #11 0x00007f21b7bf8758 in RooAbsArg::addParameters(RooArgSet&, RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #12 0x00007f21b7bf869d in RooAbsArg::addParameters(RooArgSet&, RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #13 0x00007f21b7bfab85 in RooAbsArg::getParameters(RooArgSet const*, bool) const () from /opt/root/cur/lib/libRooFitCore.so. #14 0x00007f21b7c3e251 in RooAbsPdf::createNLL(RooAbsData&, RooLinkedList const&) () from /opt/root/cur/lib/libRooFitCore.so. #15 0x00007f21b7c4447a in RooAbsPdf::fitTo(RooAbsData&, RooLinkedList const&) () from /opt/root/cur/lib/libRooFitCore.so. #16 0x00007f21b7c42c78 in RooAbsPdf::fitTo(RooAbsData&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) () from /opt/root/cur/lib/libRooFitCore.so. #17 0x000055cbe4ef65ad in fit_small_rho(std::vector<double, std::allocator<double> >, std::vector<double, std::allocator<double> >, std::vector<double, std::allocator<double> >, double, char const*) (). #18 0x000055cbe4ef2964 in main (). ===========================================================. >. > Command exited with non-zero status 139.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8052
https://github.com/root-project/root/issues/8055:359,reliability,doe,does,359,"[JupyROOT] Notebook hangs when importing ROOT first from a secondary process; To reproduce, in a Python notebook:. ```python. def foo():. import JupyROOT # or import ROOT. print(""foo""). import multiprocessing. p = multiprocessing.Process(target=foo). p.start(). p.join() # hangs here. ```. If ROOT is imported in the main kernel process of Jupyter, the issue does not happen. This might have to do with initializing JupyROOT in a process that is not the main kernel process. EDIT: reported by @daritter",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8055
https://github.com/root-project/root/pull/8057:32,modifiability,scal,scaling,32,[relnotes][skip-ci] Mention RDF scaling improvements;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8057
https://github.com/root-project/root/pull/8058:28,modifiability,scal,scaling,28,[relnotes][skip-ci] Mention scaling improvements in RDF;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8058
https://github.com/root-project/root/issues/8059:547,interoperability,xml,xml,547,"[RF] HistFactory: Incorrect default value for NormFactor; Hello,. As the default constructor value for the `Const` param of a `NormFactor` is `true`. https://github.com/root-project/root/blob/6be4b665f36271b698c4b1bb31eb8cfd94b98aa7/roofit/histfactory/src/Systematics.cxx#L59. then this warning issued in `hist2workspace`. https://github.com/root-project/root/blob/3ba13b74a151460ea1b69763c305f165fba0aeb9/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx#L556. is always printed even if no `Const` tag appears in the `NormFactor` line of my xml file.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8059
https://github.com/root-project/root/issues/8060:42,deployability,build,building,42,"Terminal flooded with cmake warnings when building with ninja+cmake 3.20; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The warnings look like this:. ```. CMake Warning (dev) at interpreter/llvm/src/cmake/modules/TableGen.cmake:70 (add_custom_command):. Policy CMP0116 is not set: Ninja generators transform DEPFILEs from. add_custom_command(). Run ""cmake --help-policy CMP0116"" for policy. details. Use the cmake_policy command to set the policy and suppress this. warning. Call Stack (most recent call first):. interpreter/llvm/src/include/llvm/IR/CMakeLists.txt:2 (tablegen). This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8060
https://github.com/root-project/root/issues/8060:255,deployability,modul,modules,255,"Terminal flooded with cmake warnings when building with ninja+cmake 3.20; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The warnings look like this:. ```. CMake Warning (dev) at interpreter/llvm/src/cmake/modules/TableGen.cmake:70 (add_custom_command):. Policy CMP0116 is not set: Ninja generators transform DEPFILEs from. add_custom_command(). Run ""cmake --help-policy CMP0116"" for policy. details. Use the cmake_policy command to set the policy and suppress this. warning. Call Stack (most recent call first):. interpreter/llvm/src/include/llvm/IR/CMakeLists.txt:2 (tablegen). This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8060
https://github.com/root-project/root/issues/8060:530,deployability,Stack,Stack,530,"Terminal flooded with cmake warnings when building with ninja+cmake 3.20; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The warnings look like this:. ```. CMake Warning (dev) at interpreter/llvm/src/cmake/modules/TableGen.cmake:70 (add_custom_command):. Policy CMP0116 is not set: Ninja generators transform DEPFILEs from. add_custom_command(). Run ""cmake --help-policy CMP0116"" for policy. details. Use the cmake_policy command to set the policy and suppress this. warning. Call Stack (most recent call first):. interpreter/llvm/src/include/llvm/IR/CMakeLists.txt:2 (tablegen). This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8060
https://github.com/root-project/root/issues/8060:348,integrability,transform,transform,348,"Terminal flooded with cmake warnings when building with ninja+cmake 3.20; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The warnings look like this:. ```. CMake Warning (dev) at interpreter/llvm/src/cmake/modules/TableGen.cmake:70 (add_custom_command):. Policy CMP0116 is not set: Ninja generators transform DEPFILEs from. add_custom_command(). Run ""cmake --help-policy CMP0116"" for policy. details. Use the cmake_policy command to set the policy and suppress this. warning. Call Stack (most recent call first):. interpreter/llvm/src/include/llvm/IR/CMakeLists.txt:2 (tablegen). This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8060
https://github.com/root-project/root/issues/8060:348,interoperability,transform,transform,348,"Terminal flooded with cmake warnings when building with ninja+cmake 3.20; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The warnings look like this:. ```. CMake Warning (dev) at interpreter/llvm/src/cmake/modules/TableGen.cmake:70 (add_custom_command):. Policy CMP0116 is not set: Ninja generators transform DEPFILEs from. add_custom_command(). Run ""cmake --help-policy CMP0116"" for policy. details. Use the cmake_policy command to set the policy and suppress this. warning. Call Stack (most recent call first):. interpreter/llvm/src/include/llvm/IR/CMakeLists.txt:2 (tablegen). This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8060
https://github.com/root-project/root/issues/8060:255,modifiability,modul,modules,255,"Terminal flooded with cmake warnings when building with ninja+cmake 3.20; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The warnings look like this:. ```. CMake Warning (dev) at interpreter/llvm/src/cmake/modules/TableGen.cmake:70 (add_custom_command):. Policy CMP0116 is not set: Ninja generators transform DEPFILEs from. add_custom_command(). Run ""cmake --help-policy CMP0116"" for policy. details. Use the cmake_policy command to set the policy and suppress this. warning. Call Stack (most recent call first):. interpreter/llvm/src/include/llvm/IR/CMakeLists.txt:2 (tablegen). This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8060
https://github.com/root-project/root/issues/8060:255,safety,modul,modules,255,"Terminal flooded with cmake warnings when building with ninja+cmake 3.20; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The warnings look like this:. ```. CMake Warning (dev) at interpreter/llvm/src/cmake/modules/TableGen.cmake:70 (add_custom_command):. Policy CMP0116 is not set: Ninja generators transform DEPFILEs from. add_custom_command(). Run ""cmake --help-policy CMP0116"" for policy. details. Use the cmake_policy command to set the policy and suppress this. warning. Call Stack (most recent call first):. interpreter/llvm/src/include/llvm/IR/CMakeLists.txt:2 (tablegen). This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8060
https://github.com/root-project/root/issues/8060:304,security,Polic,Policy,304,"Terminal flooded with cmake warnings when building with ninja+cmake 3.20; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The warnings look like this:. ```. CMake Warning (dev) at interpreter/llvm/src/cmake/modules/TableGen.cmake:70 (add_custom_command):. Policy CMP0116 is not set: Ninja generators transform DEPFILEs from. add_custom_command(). Run ""cmake --help-policy CMP0116"" for policy. details. Use the cmake_policy command to set the policy and suppress this. warning. Call Stack (most recent call first):. interpreter/llvm/src/include/llvm/IR/CMakeLists.txt:2 (tablegen). This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8060
https://github.com/root-project/root/issues/8060:413,security,polic,policy,413,"Terminal flooded with cmake warnings when building with ninja+cmake 3.20; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The warnings look like this:. ```. CMake Warning (dev) at interpreter/llvm/src/cmake/modules/TableGen.cmake:70 (add_custom_command):. Policy CMP0116 is not set: Ninja generators transform DEPFILEs from. add_custom_command(). Run ""cmake --help-policy CMP0116"" for policy. details. Use the cmake_policy command to set the policy and suppress this. warning. Call Stack (most recent call first):. interpreter/llvm/src/include/llvm/IR/CMakeLists.txt:2 (tablegen). This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8060
https://github.com/root-project/root/issues/8060:433,security,polic,policy,433,"Terminal flooded with cmake warnings when building with ninja+cmake 3.20; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The warnings look like this:. ```. CMake Warning (dev) at interpreter/llvm/src/cmake/modules/TableGen.cmake:70 (add_custom_command):. Policy CMP0116 is not set: Ninja generators transform DEPFILEs from. add_custom_command(). Run ""cmake --help-policy CMP0116"" for policy. details. Use the cmake_policy command to set the policy and suppress this. warning. Call Stack (most recent call first):. interpreter/llvm/src/include/llvm/IR/CMakeLists.txt:2 (tablegen). This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8060
https://github.com/root-project/root/issues/8060:490,security,polic,policy,490,"Terminal flooded with cmake warnings when building with ninja+cmake 3.20; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The warnings look like this:. ```. CMake Warning (dev) at interpreter/llvm/src/cmake/modules/TableGen.cmake:70 (add_custom_command):. Policy CMP0116 is not set: Ninja generators transform DEPFILEs from. add_custom_command(). Run ""cmake --help-policy CMP0116"" for policy. details. Use the cmake_policy command to set the policy and suppress this. warning. Call Stack (most recent call first):. interpreter/llvm/src/include/llvm/IR/CMakeLists.txt:2 (tablegen). This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8060
https://github.com/root-project/root/issues/8060:104,usability,clear,clear,104,"Terminal flooded with cmake warnings when building with ninja+cmake 3.20; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The warnings look like this:. ```. CMake Warning (dev) at interpreter/llvm/src/cmake/modules/TableGen.cmake:70 (add_custom_command):. Policy CMP0116 is not set: Ninja generators transform DEPFILEs from. add_custom_command(). Run ""cmake --help-policy CMP0116"" for policy. details. Use the cmake_policy command to set the policy and suppress this. warning. Call Stack (most recent call first):. interpreter/llvm/src/include/llvm/IR/CMakeLists.txt:2 (tablegen). This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8060
https://github.com/root-project/root/issues/8060:152,usability,behavi,behavior,152,"Terminal flooded with cmake warnings when building with ninja+cmake 3.20; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The warnings look like this:. ```. CMake Warning (dev) at interpreter/llvm/src/cmake/modules/TableGen.cmake:70 (add_custom_command):. Policy CMP0116 is not set: Ninja generators transform DEPFILEs from. add_custom_command(). Run ""cmake --help-policy CMP0116"" for policy. details. Use the cmake_policy command to set the policy and suppress this. warning. Call Stack (most recent call first):. interpreter/llvm/src/include/llvm/IR/CMakeLists.txt:2 (tablegen). This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8060
https://github.com/root-project/root/issues/8060:408,usability,help,help-policy,408,"Terminal flooded with cmake warnings when building with ninja+cmake 3.20; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The warnings look like this:. ```. CMake Warning (dev) at interpreter/llvm/src/cmake/modules/TableGen.cmake:70 (add_custom_command):. Policy CMP0116 is not set: Ninja generators transform DEPFILEs from. add_custom_command(). Run ""cmake --help-policy CMP0116"" for policy. details. Use the cmake_policy command to set the policy and suppress this. warning. Call Stack (most recent call first):. interpreter/llvm/src/include/llvm/IR/CMakeLists.txt:2 (tablegen). This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8060
https://github.com/root-project/root/issues/8060:471,usability,command,command,471,"Terminal flooded with cmake warnings when building with ninja+cmake 3.20; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The warnings look like this:. ```. CMake Warning (dev) at interpreter/llvm/src/cmake/modules/TableGen.cmake:70 (add_custom_command):. Policy CMP0116 is not set: Ninja generators transform DEPFILEs from. add_custom_command(). Run ""cmake --help-policy CMP0116"" for policy. details. Use the cmake_policy command to set the policy and suppress this. warning. Call Stack (most recent call first):. interpreter/llvm/src/include/llvm/IR/CMakeLists.txt:2 (tablegen). This warning is for project developers. Use -Wno-dev to suppress it. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8060
https://github.com/root-project/root/pull/8061:0,deployability,Updat,Update,0,"Update Doxyfile to doxygen version 1.9; We are now using doxygen 1.9. Doxyfile was regenerated using ""doxygen -u""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8061
https://github.com/root-project/root/pull/8061:27,deployability,version,version,27,"Update Doxyfile to doxygen version 1.9; We are now using doxygen 1.9. Doxyfile was regenerated using ""doxygen -u""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8061
https://github.com/root-project/root/pull/8061:27,integrability,version,version,27,"Update Doxyfile to doxygen version 1.9; We are now using doxygen 1.9. Doxyfile was regenerated using ""doxygen -u""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8061
https://github.com/root-project/root/pull/8061:27,modifiability,version,version,27,"Update Doxyfile to doxygen version 1.9; We are now using doxygen 1.9. Doxyfile was regenerated using ""doxygen -u""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8061
https://github.com/root-project/root/pull/8061:0,safety,Updat,Update,0,"Update Doxyfile to doxygen version 1.9; We are now using doxygen 1.9. Doxyfile was regenerated using ""doxygen -u""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8061
https://github.com/root-project/root/pull/8061:0,security,Updat,Update,0,"Update Doxyfile to doxygen version 1.9; We are now using doxygen 1.9. Doxyfile was regenerated using ""doxygen -u""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8061
https://github.com/root-project/root/pull/8062:0,deployability,Updat,Update,0,Update links of the ref guide main page;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8062
https://github.com/root-project/root/pull/8062:0,safety,Updat,Update,0,Update links of the ref guide main page;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8062
https://github.com/root-project/root/pull/8062:0,security,Updat,Update,0,Update links of the ref guide main page;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8062
https://github.com/root-project/root/pull/8062:24,usability,guid,guide,24,Update links of the ref guide main page;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8062
https://github.com/root-project/root/issues/8063:11,availability,error,error,11,Gracefully error out if application compiling against ROOT is using a different C++ standard than the one with which ROOT was built; A very common source of confusion for users is compilation errors coming from ROOT when the C++ standard they use to compile their application is different from the C++ standard with which ROOT was compiled. Some examples:. - https://root-forum.cern.ch/t/solution-for-rstringview-hxx37-error/44639. - https://mattermost.web.cern.ch/root/pl/xiyid5urd7nqtgt381czew1wso. - https://root-forum.cern.ch/t/compiler-error-related-to-c-17-string-view-with-gcc9-1/34727. It would be nice if we could catch this case in a frequently-included header or similar and provide a human-friendly error message instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8063
https://github.com/root-project/root/issues/8063:192,availability,error,errors,192,Gracefully error out if application compiling against ROOT is using a different C++ standard than the one with which ROOT was built; A very common source of confusion for users is compilation errors coming from ROOT when the C++ standard they use to compile their application is different from the C++ standard with which ROOT was compiled. Some examples:. - https://root-forum.cern.ch/t/solution-for-rstringview-hxx37-error/44639. - https://mattermost.web.cern.ch/root/pl/xiyid5urd7nqtgt381czew1wso. - https://root-forum.cern.ch/t/compiler-error-related-to-c-17-string-view-with-gcc9-1/34727. It would be nice if we could catch this case in a frequently-included header or similar and provide a human-friendly error message instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8063
https://github.com/root-project/root/issues/8063:419,availability,error,error,419,Gracefully error out if application compiling against ROOT is using a different C++ standard than the one with which ROOT was built; A very common source of confusion for users is compilation errors coming from ROOT when the C++ standard they use to compile their application is different from the C++ standard with which ROOT was compiled. Some examples:. - https://root-forum.cern.ch/t/solution-for-rstringview-hxx37-error/44639. - https://mattermost.web.cern.ch/root/pl/xiyid5urd7nqtgt381czew1wso. - https://root-forum.cern.ch/t/compiler-error-related-to-c-17-string-view-with-gcc9-1/34727. It would be nice if we could catch this case in a frequently-included header or similar and provide a human-friendly error message instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8063
https://github.com/root-project/root/issues/8063:541,availability,error,error-related-to-c-,541,Gracefully error out if application compiling against ROOT is using a different C++ standard than the one with which ROOT was built; A very common source of confusion for users is compilation errors coming from ROOT when the C++ standard they use to compile their application is different from the C++ standard with which ROOT was compiled. Some examples:. - https://root-forum.cern.ch/t/solution-for-rstringview-hxx37-error/44639. - https://mattermost.web.cern.ch/root/pl/xiyid5urd7nqtgt381czew1wso. - https://root-forum.cern.ch/t/compiler-error-related-to-c-17-string-view-with-gcc9-1/34727. It would be nice if we could catch this case in a frequently-included header or similar and provide a human-friendly error message instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8063
https://github.com/root-project/root/issues/8063:711,availability,error,error,711,Gracefully error out if application compiling against ROOT is using a different C++ standard than the one with which ROOT was built; A very common source of confusion for users is compilation errors coming from ROOT when the C++ standard they use to compile their application is different from the C++ standard with which ROOT was compiled. Some examples:. - https://root-forum.cern.ch/t/solution-for-rstringview-hxx37-error/44639. - https://mattermost.web.cern.ch/root/pl/xiyid5urd7nqtgt381czew1wso. - https://root-forum.cern.ch/t/compiler-error-related-to-c-17-string-view-with-gcc9-1/34727. It would be nice if we could catch this case in a frequently-included header or similar and provide a human-friendly error message instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8063
https://github.com/root-project/root/issues/8063:717,integrability,messag,message,717,Gracefully error out if application compiling against ROOT is using a different C++ standard than the one with which ROOT was built; A very common source of confusion for users is compilation errors coming from ROOT when the C++ standard they use to compile their application is different from the C++ standard with which ROOT was compiled. Some examples:. - https://root-forum.cern.ch/t/solution-for-rstringview-hxx37-error/44639. - https://mattermost.web.cern.ch/root/pl/xiyid5urd7nqtgt381czew1wso. - https://root-forum.cern.ch/t/compiler-error-related-to-c-17-string-view-with-gcc9-1/34727. It would be nice if we could catch this case in a frequently-included header or similar and provide a human-friendly error message instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8063
https://github.com/root-project/root/issues/8063:84,interoperability,standard,standard,84,Gracefully error out if application compiling against ROOT is using a different C++ standard than the one with which ROOT was built; A very common source of confusion for users is compilation errors coming from ROOT when the C++ standard they use to compile their application is different from the C++ standard with which ROOT was compiled. Some examples:. - https://root-forum.cern.ch/t/solution-for-rstringview-hxx37-error/44639. - https://mattermost.web.cern.ch/root/pl/xiyid5urd7nqtgt381czew1wso. - https://root-forum.cern.ch/t/compiler-error-related-to-c-17-string-view-with-gcc9-1/34727. It would be nice if we could catch this case in a frequently-included header or similar and provide a human-friendly error message instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8063
https://github.com/root-project/root/issues/8063:229,interoperability,standard,standard,229,Gracefully error out if application compiling against ROOT is using a different C++ standard than the one with which ROOT was built; A very common source of confusion for users is compilation errors coming from ROOT when the C++ standard they use to compile their application is different from the C++ standard with which ROOT was compiled. Some examples:. - https://root-forum.cern.ch/t/solution-for-rstringview-hxx37-error/44639. - https://mattermost.web.cern.ch/root/pl/xiyid5urd7nqtgt381czew1wso. - https://root-forum.cern.ch/t/compiler-error-related-to-c-17-string-view-with-gcc9-1/34727. It would be nice if we could catch this case in a frequently-included header or similar and provide a human-friendly error message instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8063
https://github.com/root-project/root/issues/8063:302,interoperability,standard,standard,302,Gracefully error out if application compiling against ROOT is using a different C++ standard than the one with which ROOT was built; A very common source of confusion for users is compilation errors coming from ROOT when the C++ standard they use to compile their application is different from the C++ standard with which ROOT was compiled. Some examples:. - https://root-forum.cern.ch/t/solution-for-rstringview-hxx37-error/44639. - https://mattermost.web.cern.ch/root/pl/xiyid5urd7nqtgt381czew1wso. - https://root-forum.cern.ch/t/compiler-error-related-to-c-17-string-view-with-gcc9-1/34727. It would be nice if we could catch this case in a frequently-included header or similar and provide a human-friendly error message instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8063
https://github.com/root-project/root/issues/8063:717,interoperability,messag,message,717,Gracefully error out if application compiling against ROOT is using a different C++ standard than the one with which ROOT was built; A very common source of confusion for users is compilation errors coming from ROOT when the C++ standard they use to compile their application is different from the C++ standard with which ROOT was compiled. Some examples:. - https://root-forum.cern.ch/t/solution-for-rstringview-hxx37-error/44639. - https://mattermost.web.cern.ch/root/pl/xiyid5urd7nqtgt381czew1wso. - https://root-forum.cern.ch/t/compiler-error-related-to-c-17-string-view-with-gcc9-1/34727. It would be nice if we could catch this case in a frequently-included header or similar and provide a human-friendly error message instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8063
https://github.com/root-project/root/issues/8063:11,performance,error,error,11,Gracefully error out if application compiling against ROOT is using a different C++ standard than the one with which ROOT was built; A very common source of confusion for users is compilation errors coming from ROOT when the C++ standard they use to compile their application is different from the C++ standard with which ROOT was compiled. Some examples:. - https://root-forum.cern.ch/t/solution-for-rstringview-hxx37-error/44639. - https://mattermost.web.cern.ch/root/pl/xiyid5urd7nqtgt381czew1wso. - https://root-forum.cern.ch/t/compiler-error-related-to-c-17-string-view-with-gcc9-1/34727. It would be nice if we could catch this case in a frequently-included header or similar and provide a human-friendly error message instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8063
https://github.com/root-project/root/issues/8063:192,performance,error,errors,192,Gracefully error out if application compiling against ROOT is using a different C++ standard than the one with which ROOT was built; A very common source of confusion for users is compilation errors coming from ROOT when the C++ standard they use to compile their application is different from the C++ standard with which ROOT was compiled. Some examples:. - https://root-forum.cern.ch/t/solution-for-rstringview-hxx37-error/44639. - https://mattermost.web.cern.ch/root/pl/xiyid5urd7nqtgt381czew1wso. - https://root-forum.cern.ch/t/compiler-error-related-to-c-17-string-view-with-gcc9-1/34727. It would be nice if we could catch this case in a frequently-included header or similar and provide a human-friendly error message instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8063
https://github.com/root-project/root/issues/8063:419,performance,error,error,419,Gracefully error out if application compiling against ROOT is using a different C++ standard than the one with which ROOT was built; A very common source of confusion for users is compilation errors coming from ROOT when the C++ standard they use to compile their application is different from the C++ standard with which ROOT was compiled. Some examples:. - https://root-forum.cern.ch/t/solution-for-rstringview-hxx37-error/44639. - https://mattermost.web.cern.ch/root/pl/xiyid5urd7nqtgt381czew1wso. - https://root-forum.cern.ch/t/compiler-error-related-to-c-17-string-view-with-gcc9-1/34727. It would be nice if we could catch this case in a frequently-included header or similar and provide a human-friendly error message instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8063
https://github.com/root-project/root/issues/8063:541,performance,error,error-related-to-c-,541,Gracefully error out if application compiling against ROOT is using a different C++ standard than the one with which ROOT was built; A very common source of confusion for users is compilation errors coming from ROOT when the C++ standard they use to compile their application is different from the C++ standard with which ROOT was compiled. Some examples:. - https://root-forum.cern.ch/t/solution-for-rstringview-hxx37-error/44639. - https://mattermost.web.cern.ch/root/pl/xiyid5urd7nqtgt381czew1wso. - https://root-forum.cern.ch/t/compiler-error-related-to-c-17-string-view-with-gcc9-1/34727. It would be nice if we could catch this case in a frequently-included header or similar and provide a human-friendly error message instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8063
https://github.com/root-project/root/issues/8063:711,performance,error,error,711,Gracefully error out if application compiling against ROOT is using a different C++ standard than the one with which ROOT was built; A very common source of confusion for users is compilation errors coming from ROOT when the C++ standard they use to compile their application is different from the C++ standard with which ROOT was compiled. Some examples:. - https://root-forum.cern.ch/t/solution-for-rstringview-hxx37-error/44639. - https://mattermost.web.cern.ch/root/pl/xiyid5urd7nqtgt381czew1wso. - https://root-forum.cern.ch/t/compiler-error-related-to-c-17-string-view-with-gcc9-1/34727. It would be nice if we could catch this case in a frequently-included header or similar and provide a human-friendly error message instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8063
https://github.com/root-project/root/issues/8063:11,safety,error,error,11,Gracefully error out if application compiling against ROOT is using a different C++ standard than the one with which ROOT was built; A very common source of confusion for users is compilation errors coming from ROOT when the C++ standard they use to compile their application is different from the C++ standard with which ROOT was compiled. Some examples:. - https://root-forum.cern.ch/t/solution-for-rstringview-hxx37-error/44639. - https://mattermost.web.cern.ch/root/pl/xiyid5urd7nqtgt381czew1wso. - https://root-forum.cern.ch/t/compiler-error-related-to-c-17-string-view-with-gcc9-1/34727. It would be nice if we could catch this case in a frequently-included header or similar and provide a human-friendly error message instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8063
https://github.com/root-project/root/issues/8063:192,safety,error,errors,192,Gracefully error out if application compiling against ROOT is using a different C++ standard than the one with which ROOT was built; A very common source of confusion for users is compilation errors coming from ROOT when the C++ standard they use to compile their application is different from the C++ standard with which ROOT was compiled. Some examples:. - https://root-forum.cern.ch/t/solution-for-rstringview-hxx37-error/44639. - https://mattermost.web.cern.ch/root/pl/xiyid5urd7nqtgt381czew1wso. - https://root-forum.cern.ch/t/compiler-error-related-to-c-17-string-view-with-gcc9-1/34727. It would be nice if we could catch this case in a frequently-included header or similar and provide a human-friendly error message instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8063
https://github.com/root-project/root/issues/8063:419,safety,error,error,419,Gracefully error out if application compiling against ROOT is using a different C++ standard than the one with which ROOT was built; A very common source of confusion for users is compilation errors coming from ROOT when the C++ standard they use to compile their application is different from the C++ standard with which ROOT was compiled. Some examples:. - https://root-forum.cern.ch/t/solution-for-rstringview-hxx37-error/44639. - https://mattermost.web.cern.ch/root/pl/xiyid5urd7nqtgt381czew1wso. - https://root-forum.cern.ch/t/compiler-error-related-to-c-17-string-view-with-gcc9-1/34727. It would be nice if we could catch this case in a frequently-included header or similar and provide a human-friendly error message instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8063
https://github.com/root-project/root/issues/8063:541,safety,error,error-related-to-c-,541,Gracefully error out if application compiling against ROOT is using a different C++ standard than the one with which ROOT was built; A very common source of confusion for users is compilation errors coming from ROOT when the C++ standard they use to compile their application is different from the C++ standard with which ROOT was compiled. Some examples:. - https://root-forum.cern.ch/t/solution-for-rstringview-hxx37-error/44639. - https://mattermost.web.cern.ch/root/pl/xiyid5urd7nqtgt381czew1wso. - https://root-forum.cern.ch/t/compiler-error-related-to-c-17-string-view-with-gcc9-1/34727. It would be nice if we could catch this case in a frequently-included header or similar and provide a human-friendly error message instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8063
https://github.com/root-project/root/issues/8063:711,safety,error,error,711,Gracefully error out if application compiling against ROOT is using a different C++ standard than the one with which ROOT was built; A very common source of confusion for users is compilation errors coming from ROOT when the C++ standard they use to compile their application is different from the C++ standard with which ROOT was compiled. Some examples:. - https://root-forum.cern.ch/t/solution-for-rstringview-hxx37-error/44639. - https://mattermost.web.cern.ch/root/pl/xiyid5urd7nqtgt381czew1wso. - https://root-forum.cern.ch/t/compiler-error-related-to-c-17-string-view-with-gcc9-1/34727. It would be nice if we could catch this case in a frequently-included header or similar and provide a human-friendly error message instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8063
https://github.com/root-project/root/issues/8063:11,usability,error,error,11,Gracefully error out if application compiling against ROOT is using a different C++ standard than the one with which ROOT was built; A very common source of confusion for users is compilation errors coming from ROOT when the C++ standard they use to compile their application is different from the C++ standard with which ROOT was compiled. Some examples:. - https://root-forum.cern.ch/t/solution-for-rstringview-hxx37-error/44639. - https://mattermost.web.cern.ch/root/pl/xiyid5urd7nqtgt381czew1wso. - https://root-forum.cern.ch/t/compiler-error-related-to-c-17-string-view-with-gcc9-1/34727. It would be nice if we could catch this case in a frequently-included header or similar and provide a human-friendly error message instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8063
https://github.com/root-project/root/issues/8063:171,usability,user,users,171,Gracefully error out if application compiling against ROOT is using a different C++ standard than the one with which ROOT was built; A very common source of confusion for users is compilation errors coming from ROOT when the C++ standard they use to compile their application is different from the C++ standard with which ROOT was compiled. Some examples:. - https://root-forum.cern.ch/t/solution-for-rstringview-hxx37-error/44639. - https://mattermost.web.cern.ch/root/pl/xiyid5urd7nqtgt381czew1wso. - https://root-forum.cern.ch/t/compiler-error-related-to-c-17-string-view-with-gcc9-1/34727. It would be nice if we could catch this case in a frequently-included header or similar and provide a human-friendly error message instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8063
https://github.com/root-project/root/issues/8063:192,usability,error,errors,192,Gracefully error out if application compiling against ROOT is using a different C++ standard than the one with which ROOT was built; A very common source of confusion for users is compilation errors coming from ROOT when the C++ standard they use to compile their application is different from the C++ standard with which ROOT was compiled. Some examples:. - https://root-forum.cern.ch/t/solution-for-rstringview-hxx37-error/44639. - https://mattermost.web.cern.ch/root/pl/xiyid5urd7nqtgt381czew1wso. - https://root-forum.cern.ch/t/compiler-error-related-to-c-17-string-view-with-gcc9-1/34727. It would be nice if we could catch this case in a frequently-included header or similar and provide a human-friendly error message instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8063
https://github.com/root-project/root/issues/8063:419,usability,error,error,419,Gracefully error out if application compiling against ROOT is using a different C++ standard than the one with which ROOT was built; A very common source of confusion for users is compilation errors coming from ROOT when the C++ standard they use to compile their application is different from the C++ standard with which ROOT was compiled. Some examples:. - https://root-forum.cern.ch/t/solution-for-rstringview-hxx37-error/44639. - https://mattermost.web.cern.ch/root/pl/xiyid5urd7nqtgt381czew1wso. - https://root-forum.cern.ch/t/compiler-error-related-to-c-17-string-view-with-gcc9-1/34727. It would be nice if we could catch this case in a frequently-included header or similar and provide a human-friendly error message instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8063
https://github.com/root-project/root/issues/8063:541,usability,error,error-related-to-c-,541,Gracefully error out if application compiling against ROOT is using a different C++ standard than the one with which ROOT was built; A very common source of confusion for users is compilation errors coming from ROOT when the C++ standard they use to compile their application is different from the C++ standard with which ROOT was compiled. Some examples:. - https://root-forum.cern.ch/t/solution-for-rstringview-hxx37-error/44639. - https://mattermost.web.cern.ch/root/pl/xiyid5urd7nqtgt381czew1wso. - https://root-forum.cern.ch/t/compiler-error-related-to-c-17-string-view-with-gcc9-1/34727. It would be nice if we could catch this case in a frequently-included header or similar and provide a human-friendly error message instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8063
https://github.com/root-project/root/issues/8063:711,usability,error,error,711,Gracefully error out if application compiling against ROOT is using a different C++ standard than the one with which ROOT was built; A very common source of confusion for users is compilation errors coming from ROOT when the C++ standard they use to compile their application is different from the C++ standard with which ROOT was compiled. Some examples:. - https://root-forum.cern.ch/t/solution-for-rstringview-hxx37-error/44639. - https://mattermost.web.cern.ch/root/pl/xiyid5urd7nqtgt381czew1wso. - https://root-forum.cern.ch/t/compiler-error-related-to-c-17-string-view-with-gcc9-1/34727. It would be nice if we could catch this case in a frequently-included header or similar and provide a human-friendly error message instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8063
https://github.com/root-project/root/issues/8064:1053,availability,error,error,1053,"[cling] The interpreter requires a `;` after `using namespace ROOT`; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. The interpreter's behavior w.r.t. putting `;` at the end of a line is inconsistent:. ```bash. ~ root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Apr 30 2021, 13:01:03 |. | From heads/master@v6-25-01-813-g3ba13b74a1 |. | With c++ (GCC) 10.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] struct A {}. root [1] using namespace ROOT. ROOT_prompt_1:1:21: error: expected ';' after namespace name. using namespace ROOT. ^. ;. root [2] int a, b. root (cont'ed, cancel with .@) [3]. ```. I think if `;` is not required after `struct A {}`, it should not be required anywhere. The issue with `int a, b` is tracked separately, as https://sft.its.cern.ch/jira/browse/ROOT-9202 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8064
https://github.com/root-project/root/issues/8064:1053,performance,error,error,1053,"[cling] The interpreter requires a `;` after `using namespace ROOT`; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. The interpreter's behavior w.r.t. putting `;` at the end of a line is inconsistent:. ```bash. ~ root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Apr 30 2021, 13:01:03 |. | From heads/master@v6-25-01-813-g3ba13b74a1 |. | With c++ (GCC) 10.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] struct A {}. root [1] using namespace ROOT. ROOT_prompt_1:1:21: error: expected ';' after namespace name. using namespace ROOT. ^. ;. root [2] int a, b. root (cont'ed, cancel with .@) [3]. ```. I think if `;` is not required after `struct A {}`, it should not be required anywhere. The issue with `int a, b` is tracked separately, as https://sft.its.cern.ch/jira/browse/ROOT-9202 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8064
https://github.com/root-project/root/issues/8064:1053,safety,error,error,1053,"[cling] The interpreter requires a `;` after `using namespace ROOT`; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. The interpreter's behavior w.r.t. putting `;` at the end of a line is inconsistent:. ```bash. ~ root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Apr 30 2021, 13:01:03 |. | From heads/master@v6-25-01-813-g3ba13b74a1 |. | With c++ (GCC) 10.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] struct A {}. root [1] using namespace ROOT. ROOT_prompt_1:1:21: error: expected ';' after namespace name. using namespace ROOT. ^. ;. root [2] int a, b. root (cont'ed, cancel with .@) [3]. ```. I think if `;` is not required after `struct A {}`, it should not be required anywhere. The issue with `int a, b` is tracked separately, as https://sft.its.cern.ch/jira/browse/ROOT-9202 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8064
https://github.com/root-project/root/issues/8064:675,security,Team,Team,675,"[cling] The interpreter requires a `;` after `using namespace ROOT`; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. The interpreter's behavior w.r.t. putting `;` at the end of a line is inconsistent:. ```bash. ~ root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Apr 30 2021, 13:01:03 |. | From heads/master@v6-25-01-813-g3ba13b74a1 |. | With c++ (GCC) 10.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] struct A {}. root [1] using namespace ROOT. ROOT_prompt_1:1:21: error: expected ';' after namespace name. using namespace ROOT. ^. ;. root [2] int a, b. root (cont'ed, cancel with .@) [3]. ```. I think if `;` is not required after `struct A {}`, it should not be required anywhere. The issue with `int a, b` is tracked separately, as https://sft.its.cern.ch/jira/browse/ROOT-9202 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8064
https://github.com/root-project/root/issues/8064:447,usability,behavi,behavior,447,"[cling] The interpreter requires a `;` after `using namespace ROOT`; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. The interpreter's behavior w.r.t. putting `;` at the end of a line is inconsistent:. ```bash. ~ root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Apr 30 2021, 13:01:03 |. | From heads/master@v6-25-01-813-g3ba13b74a1 |. | With c++ (GCC) 10.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] struct A {}. root [1] using namespace ROOT. ROOT_prompt_1:1:21: error: expected ';' after namespace name. using namespace ROOT. ^. ;. root [2] int a, b. root (cont'ed, cancel with .@) [3]. ```. I think if `;` is not required after `struct A {}`, it should not be required anywhere. The issue with `int a, b` is tracked separately, as https://sft.its.cern.ch/jira/browse/ROOT-9202 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8064
https://github.com/root-project/root/issues/8064:856,usability,help,help,856,"[cling] The interpreter requires a `;` after `using namespace ROOT`; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. The interpreter's behavior w.r.t. putting `;` at the end of a line is inconsistent:. ```bash. ~ root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Apr 30 2021, 13:01:03 |. | From heads/master@v6-25-01-813-g3ba13b74a1 |. | With c++ (GCC) 10.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] struct A {}. root [1] using namespace ROOT. ROOT_prompt_1:1:21: error: expected ';' after namespace name. using namespace ROOT. ^. ;. root [2] int a, b. root (cont'ed, cancel with .@) [3]. ```. I think if `;` is not required after `struct A {}`, it should not be required anywhere. The issue with `int a, b` is tracked separately, as https://sft.its.cern.ch/jira/browse/ROOT-9202 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8064
https://github.com/root-project/root/issues/8064:1053,usability,error,error,1053,"[cling] The interpreter requires a `;` after `using namespace ROOT`; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. The interpreter's behavior w.r.t. putting `;` at the end of a line is inconsistent:. ```bash. ~ root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Apr 30 2021, 13:01:03 |. | From heads/master@v6-25-01-813-g3ba13b74a1 |. | With c++ (GCC) 10.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] struct A {}. root [1] using namespace ROOT. ROOT_prompt_1:1:21: error: expected ';' after namespace name. using namespace ROOT. ^. ;. root [2] int a, b. root (cont'ed, cancel with .@) [3]. ```. I think if `;` is not required after `struct A {}`, it should not be required anywhere. The issue with `int a, b` is tracked separately, as https://sft.its.cern.ch/jira/browse/ROOT-9202 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8064
https://github.com/root-project/root/issues/8064:1157,usability,cancel,cancel,1157,"[cling] The interpreter requires a `;` after `using namespace ROOT`; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. The interpreter's behavior w.r.t. putting `;` at the end of a line is inconsistent:. ```bash. ~ root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Apr 30 2021, 13:01:03 |. | From heads/master@v6-25-01-813-g3ba13b74a1 |. | With c++ (GCC) 10.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] struct A {}. root [1] using namespace ROOT. ROOT_prompt_1:1:21: error: expected ';' after namespace name. using namespace ROOT. ^. ;. root [2] int a, b. root (cont'ed, cancel with .@) [3]. ```. I think if `;` is not required after `struct A {}`, it should not be required anywhere. The issue with `int a, b` is tracked separately, as https://sft.its.cern.ch/jira/browse/ROOT-9202 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8064
https://github.com/root-project/root/pull/8065:1040,availability,error,errors,1040,"[RF] Don't allow passing temporaries to RooArgList/Set constructors; The two classes inheriting from RooAbsCollection, namely RooArgList and. RooArgSet are by default non-owning collections. This means they should. not be initialized with temporary objects, otherwise they contain. invalid pointers right after construction. To avoid that this can ever happen, the universal reference mechanism is. used to statically check for temporaries, such that your code doesn't. even compile if you try to construct a RooArgList or RooArgSet from. temporaries. This fixes https://github.com/root-project/root/issues/8052. Some C++ code to validate that the `static_assert` works:. ```C++. #include ""RooRealVar.h"". #include ""RooArgList.h"". #include ""RooArgSet.h"". #include ""RooUniform.h"". void test() {. RooRealVar x(""x"", ""x"", 0, 0, 10);. RooRealVar y(""y"", ""y"", 0, 0, 10);. RooUniform u1(""u1"", ""u1"", x);. RooUniform u2(""u2"", ""u2"", y);. // this should work. RooArgSet (u1, u2);. RooArgList(u1, u2);. // all of these combinations should cause compiler errors. ///RooArgSet (RooUniform(""u1"", ""u1"", x), u2 );. //RooArgSet (u1, RooUniform(""u2"", ""u2"", y));. //RooArgSet (RooUniform(""u1"", ""u1"", x), RooUniform(""u2"", ""u2"", y));. //RooArgList(RooUniform(""u1"", ""u1"", x), u2 );. //RooArgList(u1, RooUniform(""u2"", ""u2"", y));. //RooArgList(RooUniform(""u1"", ""u1"", x), RooUniform(""u2"", ""u2"", y));. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8065
https://github.com/root-project/root/pull/8065:273,deployability,contain,contain,273,"[RF] Don't allow passing temporaries to RooArgList/Set constructors; The two classes inheriting from RooAbsCollection, namely RooArgList and. RooArgSet are by default non-owning collections. This means they should. not be initialized with temporary objects, otherwise they contain. invalid pointers right after construction. To avoid that this can ever happen, the universal reference mechanism is. used to statically check for temporaries, such that your code doesn't. even compile if you try to construct a RooArgList or RooArgSet from. temporaries. This fixes https://github.com/root-project/root/issues/8052. Some C++ code to validate that the `static_assert` works:. ```C++. #include ""RooRealVar.h"". #include ""RooArgList.h"". #include ""RooArgSet.h"". #include ""RooUniform.h"". void test() {. RooRealVar x(""x"", ""x"", 0, 0, 10);. RooRealVar y(""y"", ""y"", 0, 0, 10);. RooUniform u1(""u1"", ""u1"", x);. RooUniform u2(""u2"", ""u2"", y);. // this should work. RooArgSet (u1, u2);. RooArgList(u1, u2);. // all of these combinations should cause compiler errors. ///RooArgSet (RooUniform(""u1"", ""u1"", x), u2 );. //RooArgSet (u1, RooUniform(""u2"", ""u2"", y));. //RooArgSet (RooUniform(""u1"", ""u1"", x), RooUniform(""u2"", ""u2"", y));. //RooArgList(RooUniform(""u1"", ""u1"", x), u2 );. //RooArgList(u1, RooUniform(""u2"", ""u2"", y));. //RooArgList(RooUniform(""u1"", ""u1"", x), RooUniform(""u2"", ""u2"", y));. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8065
https://github.com/root-project/root/pull/8065:85,modifiability,inherit,inheriting,85,"[RF] Don't allow passing temporaries to RooArgList/Set constructors; The two classes inheriting from RooAbsCollection, namely RooArgList and. RooArgSet are by default non-owning collections. This means they should. not be initialized with temporary objects, otherwise they contain. invalid pointers right after construction. To avoid that this can ever happen, the universal reference mechanism is. used to statically check for temporaries, such that your code doesn't. even compile if you try to construct a RooArgList or RooArgSet from. temporaries. This fixes https://github.com/root-project/root/issues/8052. Some C++ code to validate that the `static_assert` works:. ```C++. #include ""RooRealVar.h"". #include ""RooArgList.h"". #include ""RooArgSet.h"". #include ""RooUniform.h"". void test() {. RooRealVar x(""x"", ""x"", 0, 0, 10);. RooRealVar y(""y"", ""y"", 0, 0, 10);. RooUniform u1(""u1"", ""u1"", x);. RooUniform u2(""u2"", ""u2"", y);. // this should work. RooArgSet (u1, u2);. RooArgList(u1, u2);. // all of these combinations should cause compiler errors. ///RooArgSet (RooUniform(""u1"", ""u1"", x), u2 );. //RooArgSet (u1, RooUniform(""u2"", ""u2"", y));. //RooArgSet (RooUniform(""u1"", ""u1"", x), RooUniform(""u2"", ""u2"", y));. //RooArgList(RooUniform(""u1"", ""u1"", x), u2 );. //RooArgList(u1, RooUniform(""u2"", ""u2"", y));. //RooArgList(RooUniform(""u1"", ""u1"", x), RooUniform(""u2"", ""u2"", y));. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8065
https://github.com/root-project/root/pull/8065:1040,performance,error,errors,1040,"[RF] Don't allow passing temporaries to RooArgList/Set constructors; The two classes inheriting from RooAbsCollection, namely RooArgList and. RooArgSet are by default non-owning collections. This means they should. not be initialized with temporary objects, otherwise they contain. invalid pointers right after construction. To avoid that this can ever happen, the universal reference mechanism is. used to statically check for temporaries, such that your code doesn't. even compile if you try to construct a RooArgList or RooArgSet from. temporaries. This fixes https://github.com/root-project/root/issues/8052. Some C++ code to validate that the `static_assert` works:. ```C++. #include ""RooRealVar.h"". #include ""RooArgList.h"". #include ""RooArgSet.h"". #include ""RooUniform.h"". void test() {. RooRealVar x(""x"", ""x"", 0, 0, 10);. RooRealVar y(""y"", ""y"", 0, 0, 10);. RooUniform u1(""u1"", ""u1"", x);. RooUniform u2(""u2"", ""u2"", y);. // this should work. RooArgSet (u1, u2);. RooArgList(u1, u2);. // all of these combinations should cause compiler errors. ///RooArgSet (RooUniform(""u1"", ""u1"", x), u2 );. //RooArgSet (u1, RooUniform(""u2"", ""u2"", y));. //RooArgSet (RooUniform(""u1"", ""u1"", x), RooUniform(""u2"", ""u2"", y));. //RooArgList(RooUniform(""u1"", ""u1"", x), u2 );. //RooArgList(u1, RooUniform(""u2"", ""u2"", y));. //RooArgList(RooUniform(""u1"", ""u1"", x), RooUniform(""u2"", ""u2"", y));. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8065
https://github.com/root-project/root/pull/8065:461,reliability,doe,doesn,461,"[RF] Don't allow passing temporaries to RooArgList/Set constructors; The two classes inheriting from RooAbsCollection, namely RooArgList and. RooArgSet are by default non-owning collections. This means they should. not be initialized with temporary objects, otherwise they contain. invalid pointers right after construction. To avoid that this can ever happen, the universal reference mechanism is. used to statically check for temporaries, such that your code doesn't. even compile if you try to construct a RooArgList or RooArgSet from. temporaries. This fixes https://github.com/root-project/root/issues/8052. Some C++ code to validate that the `static_assert` works:. ```C++. #include ""RooRealVar.h"". #include ""RooArgList.h"". #include ""RooArgSet.h"". #include ""RooUniform.h"". void test() {. RooRealVar x(""x"", ""x"", 0, 0, 10);. RooRealVar y(""y"", ""y"", 0, 0, 10);. RooUniform u1(""u1"", ""u1"", x);. RooUniform u2(""u2"", ""u2"", y);. // this should work. RooArgSet (u1, u2);. RooArgList(u1, u2);. // all of these combinations should cause compiler errors. ///RooArgSet (RooUniform(""u1"", ""u1"", x), u2 );. //RooArgSet (u1, RooUniform(""u2"", ""u2"", y));. //RooArgSet (RooUniform(""u1"", ""u1"", x), RooUniform(""u2"", ""u2"", y));. //RooArgList(RooUniform(""u1"", ""u1"", x), u2 );. //RooArgList(u1, RooUniform(""u2"", ""u2"", y));. //RooArgList(RooUniform(""u1"", ""u1"", x), RooUniform(""u2"", ""u2"", y));. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8065
https://github.com/root-project/root/pull/8065:328,safety,avoid,avoid,328,"[RF] Don't allow passing temporaries to RooArgList/Set constructors; The two classes inheriting from RooAbsCollection, namely RooArgList and. RooArgSet are by default non-owning collections. This means they should. not be initialized with temporary objects, otherwise they contain. invalid pointers right after construction. To avoid that this can ever happen, the universal reference mechanism is. used to statically check for temporaries, such that your code doesn't. even compile if you try to construct a RooArgList or RooArgSet from. temporaries. This fixes https://github.com/root-project/root/issues/8052. Some C++ code to validate that the `static_assert` works:. ```C++. #include ""RooRealVar.h"". #include ""RooArgList.h"". #include ""RooArgSet.h"". #include ""RooUniform.h"". void test() {. RooRealVar x(""x"", ""x"", 0, 0, 10);. RooRealVar y(""y"", ""y"", 0, 0, 10);. RooUniform u1(""u1"", ""u1"", x);. RooUniform u2(""u2"", ""u2"", y);. // this should work. RooArgSet (u1, u2);. RooArgList(u1, u2);. // all of these combinations should cause compiler errors. ///RooArgSet (RooUniform(""u1"", ""u1"", x), u2 );. //RooArgSet (u1, RooUniform(""u2"", ""u2"", y));. //RooArgSet (RooUniform(""u1"", ""u1"", x), RooUniform(""u2"", ""u2"", y));. //RooArgList(RooUniform(""u1"", ""u1"", x), u2 );. //RooArgList(u1, RooUniform(""u2"", ""u2"", y));. //RooArgList(RooUniform(""u1"", ""u1"", x), RooUniform(""u2"", ""u2"", y));. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8065
https://github.com/root-project/root/pull/8065:630,safety,valid,validate,630,"[RF] Don't allow passing temporaries to RooArgList/Set constructors; The two classes inheriting from RooAbsCollection, namely RooArgList and. RooArgSet are by default non-owning collections. This means they should. not be initialized with temporary objects, otherwise they contain. invalid pointers right after construction. To avoid that this can ever happen, the universal reference mechanism is. used to statically check for temporaries, such that your code doesn't. even compile if you try to construct a RooArgList or RooArgSet from. temporaries. This fixes https://github.com/root-project/root/issues/8052. Some C++ code to validate that the `static_assert` works:. ```C++. #include ""RooRealVar.h"". #include ""RooArgList.h"". #include ""RooArgSet.h"". #include ""RooUniform.h"". void test() {. RooRealVar x(""x"", ""x"", 0, 0, 10);. RooRealVar y(""y"", ""y"", 0, 0, 10);. RooUniform u1(""u1"", ""u1"", x);. RooUniform u2(""u2"", ""u2"", y);. // this should work. RooArgSet (u1, u2);. RooArgList(u1, u2);. // all of these combinations should cause compiler errors. ///RooArgSet (RooUniform(""u1"", ""u1"", x), u2 );. //RooArgSet (u1, RooUniform(""u2"", ""u2"", y));. //RooArgSet (RooUniform(""u1"", ""u1"", x), RooUniform(""u2"", ""u2"", y));. //RooArgList(RooUniform(""u1"", ""u1"", x), u2 );. //RooArgList(u1, RooUniform(""u2"", ""u2"", y));. //RooArgList(RooUniform(""u1"", ""u1"", x), RooUniform(""u2"", ""u2"", y));. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8065
https://github.com/root-project/root/pull/8065:784,safety,test,test,784,"[RF] Don't allow passing temporaries to RooArgList/Set constructors; The two classes inheriting from RooAbsCollection, namely RooArgList and. RooArgSet are by default non-owning collections. This means they should. not be initialized with temporary objects, otherwise they contain. invalid pointers right after construction. To avoid that this can ever happen, the universal reference mechanism is. used to statically check for temporaries, such that your code doesn't. even compile if you try to construct a RooArgList or RooArgSet from. temporaries. This fixes https://github.com/root-project/root/issues/8052. Some C++ code to validate that the `static_assert` works:. ```C++. #include ""RooRealVar.h"". #include ""RooArgList.h"". #include ""RooArgSet.h"". #include ""RooUniform.h"". void test() {. RooRealVar x(""x"", ""x"", 0, 0, 10);. RooRealVar y(""y"", ""y"", 0, 0, 10);. RooUniform u1(""u1"", ""u1"", x);. RooUniform u2(""u2"", ""u2"", y);. // this should work. RooArgSet (u1, u2);. RooArgList(u1, u2);. // all of these combinations should cause compiler errors. ///RooArgSet (RooUniform(""u1"", ""u1"", x), u2 );. //RooArgSet (u1, RooUniform(""u2"", ""u2"", y));. //RooArgSet (RooUniform(""u1"", ""u1"", x), RooUniform(""u2"", ""u2"", y));. //RooArgList(RooUniform(""u1"", ""u1"", x), u2 );. //RooArgList(u1, RooUniform(""u2"", ""u2"", y));. //RooArgList(RooUniform(""u1"", ""u1"", x), RooUniform(""u2"", ""u2"", y));. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8065
https://github.com/root-project/root/pull/8065:1040,safety,error,errors,1040,"[RF] Don't allow passing temporaries to RooArgList/Set constructors; The two classes inheriting from RooAbsCollection, namely RooArgList and. RooArgSet are by default non-owning collections. This means they should. not be initialized with temporary objects, otherwise they contain. invalid pointers right after construction. To avoid that this can ever happen, the universal reference mechanism is. used to statically check for temporaries, such that your code doesn't. even compile if you try to construct a RooArgList or RooArgSet from. temporaries. This fixes https://github.com/root-project/root/issues/8052. Some C++ code to validate that the `static_assert` works:. ```C++. #include ""RooRealVar.h"". #include ""RooArgList.h"". #include ""RooArgSet.h"". #include ""RooUniform.h"". void test() {. RooRealVar x(""x"", ""x"", 0, 0, 10);. RooRealVar y(""y"", ""y"", 0, 0, 10);. RooUniform u1(""u1"", ""u1"", x);. RooUniform u2(""u2"", ""u2"", y);. // this should work. RooArgSet (u1, u2);. RooArgList(u1, u2);. // all of these combinations should cause compiler errors. ///RooArgSet (RooUniform(""u1"", ""u1"", x), u2 );. //RooArgSet (u1, RooUniform(""u2"", ""u2"", y));. //RooArgSet (RooUniform(""u1"", ""u1"", x), RooUniform(""u2"", ""u2"", y));. //RooArgList(RooUniform(""u1"", ""u1"", x), u2 );. //RooArgList(u1, RooUniform(""u2"", ""u2"", y));. //RooArgList(RooUniform(""u1"", ""u1"", x), RooUniform(""u2"", ""u2"", y));. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8065
https://github.com/root-project/root/pull/8065:630,security,validat,validate,630,"[RF] Don't allow passing temporaries to RooArgList/Set constructors; The two classes inheriting from RooAbsCollection, namely RooArgList and. RooArgSet are by default non-owning collections. This means they should. not be initialized with temporary objects, otherwise they contain. invalid pointers right after construction. To avoid that this can ever happen, the universal reference mechanism is. used to statically check for temporaries, such that your code doesn't. even compile if you try to construct a RooArgList or RooArgSet from. temporaries. This fixes https://github.com/root-project/root/issues/8052. Some C++ code to validate that the `static_assert` works:. ```C++. #include ""RooRealVar.h"". #include ""RooArgList.h"". #include ""RooArgSet.h"". #include ""RooUniform.h"". void test() {. RooRealVar x(""x"", ""x"", 0, 0, 10);. RooRealVar y(""y"", ""y"", 0, 0, 10);. RooUniform u1(""u1"", ""u1"", x);. RooUniform u2(""u2"", ""u2"", y);. // this should work. RooArgSet (u1, u2);. RooArgList(u1, u2);. // all of these combinations should cause compiler errors. ///RooArgSet (RooUniform(""u1"", ""u1"", x), u2 );. //RooArgSet (u1, RooUniform(""u2"", ""u2"", y));. //RooArgSet (RooUniform(""u1"", ""u1"", x), RooUniform(""u2"", ""u2"", y));. //RooArgList(RooUniform(""u1"", ""u1"", x), u2 );. //RooArgList(u1, RooUniform(""u2"", ""u2"", y));. //RooArgList(RooUniform(""u1"", ""u1"", x), RooUniform(""u2"", ""u2"", y));. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8065
https://github.com/root-project/root/pull/8065:784,testability,test,test,784,"[RF] Don't allow passing temporaries to RooArgList/Set constructors; The two classes inheriting from RooAbsCollection, namely RooArgList and. RooArgSet are by default non-owning collections. This means they should. not be initialized with temporary objects, otherwise they contain. invalid pointers right after construction. To avoid that this can ever happen, the universal reference mechanism is. used to statically check for temporaries, such that your code doesn't. even compile if you try to construct a RooArgList or RooArgSet from. temporaries. This fixes https://github.com/root-project/root/issues/8052. Some C++ code to validate that the `static_assert` works:. ```C++. #include ""RooRealVar.h"". #include ""RooArgList.h"". #include ""RooArgSet.h"". #include ""RooUniform.h"". void test() {. RooRealVar x(""x"", ""x"", 0, 0, 10);. RooRealVar y(""y"", ""y"", 0, 0, 10);. RooUniform u1(""u1"", ""u1"", x);. RooUniform u2(""u2"", ""u2"", y);. // this should work. RooArgSet (u1, u2);. RooArgList(u1, u2);. // all of these combinations should cause compiler errors. ///RooArgSet (RooUniform(""u1"", ""u1"", x), u2 );. //RooArgSet (u1, RooUniform(""u2"", ""u2"", y));. //RooArgSet (RooUniform(""u1"", ""u1"", x), RooUniform(""u2"", ""u2"", y));. //RooArgList(RooUniform(""u1"", ""u1"", x), u2 );. //RooArgList(u1, RooUniform(""u2"", ""u2"", y));. //RooArgList(RooUniform(""u1"", ""u1"", x), RooUniform(""u2"", ""u2"", y));. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8065
https://github.com/root-project/root/pull/8065:1040,usability,error,errors,1040,"[RF] Don't allow passing temporaries to RooArgList/Set constructors; The two classes inheriting from RooAbsCollection, namely RooArgList and. RooArgSet are by default non-owning collections. This means they should. not be initialized with temporary objects, otherwise they contain. invalid pointers right after construction. To avoid that this can ever happen, the universal reference mechanism is. used to statically check for temporaries, such that your code doesn't. even compile if you try to construct a RooArgList or RooArgSet from. temporaries. This fixes https://github.com/root-project/root/issues/8052. Some C++ code to validate that the `static_assert` works:. ```C++. #include ""RooRealVar.h"". #include ""RooArgList.h"". #include ""RooArgSet.h"". #include ""RooUniform.h"". void test() {. RooRealVar x(""x"", ""x"", 0, 0, 10);. RooRealVar y(""y"", ""y"", 0, 0, 10);. RooUniform u1(""u1"", ""u1"", x);. RooUniform u2(""u2"", ""u2"", y);. // this should work. RooArgSet (u1, u2);. RooArgList(u1, u2);. // all of these combinations should cause compiler errors. ///RooArgSet (RooUniform(""u1"", ""u1"", x), u2 );. //RooArgSet (u1, RooUniform(""u2"", ""u2"", y));. //RooArgSet (RooUniform(""u1"", ""u1"", x), RooUniform(""u2"", ""u2"", y));. //RooArgList(RooUniform(""u1"", ""u1"", x), u2 );. //RooArgList(u1, RooUniform(""u2"", ""u2"", y));. //RooArgList(RooUniform(""u1"", ""u1"", x), RooUniform(""u2"", ""u2"", y));. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8065
https://github.com/root-project/root/pull/8066:28,deployability,patch,patch,28,"[LLVM] Replace ""&"" printing patch with LLVM commit; Revert ROOT's ""&"" printing patch of LLVM and backport https://reviews.llvm.org/rG8518742104ab075296722ef6151f65aee7a0646d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8066
https://github.com/root-project/root/pull/8066:79,deployability,patch,patch,79,"[LLVM] Replace ""&"" printing patch with LLVM commit; Revert ROOT's ""&"" printing patch of LLVM and backport https://reviews.llvm.org/rG8518742104ab075296722ef6151f65aee7a0646d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8066
https://github.com/root-project/root/pull/8066:28,safety,patch,patch,28,"[LLVM] Replace ""&"" printing patch with LLVM commit; Revert ROOT's ""&"" printing patch of LLVM and backport https://reviews.llvm.org/rG8518742104ab075296722ef6151f65aee7a0646d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8066
https://github.com/root-project/root/pull/8066:79,safety,patch,patch,79,"[LLVM] Replace ""&"" printing patch with LLVM commit; Revert ROOT's ""&"" printing patch of LLVM and backport https://reviews.llvm.org/rG8518742104ab075296722ef6151f65aee7a0646d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8066
https://github.com/root-project/root/pull/8066:114,safety,review,reviews,114,"[LLVM] Replace ""&"" printing patch with LLVM commit; Revert ROOT's ""&"" printing patch of LLVM and backport https://reviews.llvm.org/rG8518742104ab075296722ef6151f65aee7a0646d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8066
https://github.com/root-project/root/pull/8066:28,security,patch,patch,28,"[LLVM] Replace ""&"" printing patch with LLVM commit; Revert ROOT's ""&"" printing patch of LLVM and backport https://reviews.llvm.org/rG8518742104ab075296722ef6151f65aee7a0646d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8066
https://github.com/root-project/root/pull/8066:79,security,patch,patch,79,"[LLVM] Replace ""&"" printing patch with LLVM commit; Revert ROOT's ""&"" printing patch of LLVM and backport https://reviews.llvm.org/rG8518742104ab075296722ef6151f65aee7a0646d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8066
https://github.com/root-project/root/pull/8066:114,testability,review,reviews,114,"[LLVM] Replace ""&"" printing patch with LLVM commit; Revert ROOT's ""&"" printing patch of LLVM and backport https://reviews.llvm.org/rG8518742104ab075296722ef6151f65aee7a0646d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8066
https://github.com/root-project/root/pull/8067:338,interoperability,convers,conversions,338,"[ntuple] Add support for column type casting; When connecting fields of fundamental types and their columns, distinguish between reading and writing. On writing, pick a preferred column type for a given fundamental memory type. On reading. - Check the column types found on disk and bail out if they don't match. - Allow for certain type conversions. This PR adds support to read an `std::int32_t` on disk in an `std::int64_t` in memory. The mechanics can later be reused to add support for more type conversions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8067
https://github.com/root-project/root/pull/8067:501,interoperability,convers,conversions,501,"[ntuple] Add support for column type casting; When connecting fields of fundamental types and their columns, distinguish between reading and writing. On writing, pick a preferred column type for a given fundamental memory type. On reading. - Check the column types found on disk and bail out if they don't match. - Allow for certain type conversions. This PR adds support to read an `std::int32_t` on disk in an `std::int64_t` in memory. The mechanics can later be reused to add support for more type conversions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8067
https://github.com/root-project/root/pull/8067:465,modifiability,reu,reused,465,"[ntuple] Add support for column type casting; When connecting fields of fundamental types and their columns, distinguish between reading and writing. On writing, pick a preferred column type for a given fundamental memory type. On reading. - Check the column types found on disk and bail out if they don't match. - Allow for certain type conversions. This PR adds support to read an `std::int32_t` on disk in an `std::int64_t` in memory. The mechanics can later be reused to add support for more type conversions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8067
https://github.com/root-project/root/pull/8067:215,performance,memor,memory,215,"[ntuple] Add support for column type casting; When connecting fields of fundamental types and their columns, distinguish between reading and writing. On writing, pick a preferred column type for a given fundamental memory type. On reading. - Check the column types found on disk and bail out if they don't match. - Allow for certain type conversions. This PR adds support to read an `std::int32_t` on disk in an `std::int64_t` in memory. The mechanics can later be reused to add support for more type conversions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8067
https://github.com/root-project/root/pull/8067:274,performance,disk,disk,274,"[ntuple] Add support for column type casting; When connecting fields of fundamental types and their columns, distinguish between reading and writing. On writing, pick a preferred column type for a given fundamental memory type. On reading. - Check the column types found on disk and bail out if they don't match. - Allow for certain type conversions. This PR adds support to read an `std::int32_t` on disk in an `std::int64_t` in memory. The mechanics can later be reused to add support for more type conversions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8067
https://github.com/root-project/root/pull/8067:401,performance,disk,disk,401,"[ntuple] Add support for column type casting; When connecting fields of fundamental types and their columns, distinguish between reading and writing. On writing, pick a preferred column type for a given fundamental memory type. On reading. - Check the column types found on disk and bail out if they don't match. - Allow for certain type conversions. This PR adds support to read an `std::int32_t` on disk in an `std::int64_t` in memory. The mechanics can later be reused to add support for more type conversions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8067
https://github.com/root-project/root/pull/8067:430,performance,memor,memory,430,"[ntuple] Add support for column type casting; When connecting fields of fundamental types and their columns, distinguish between reading and writing. On writing, pick a preferred column type for a given fundamental memory type. On reading. - Check the column types found on disk and bail out if they don't match. - Allow for certain type conversions. This PR adds support to read an `std::int32_t` on disk in an `std::int64_t` in memory. The mechanics can later be reused to add support for more type conversions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8067
https://github.com/root-project/root/pull/8067:13,usability,support,support,13,"[ntuple] Add support for column type casting; When connecting fields of fundamental types and their columns, distinguish between reading and writing. On writing, pick a preferred column type for a given fundamental memory type. On reading. - Check the column types found on disk and bail out if they don't match. - Allow for certain type conversions. This PR adds support to read an `std::int32_t` on disk in an `std::int64_t` in memory. The mechanics can later be reused to add support for more type conversions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8067
https://github.com/root-project/root/pull/8067:169,usability,prefer,preferred,169,"[ntuple] Add support for column type casting; When connecting fields of fundamental types and their columns, distinguish between reading and writing. On writing, pick a preferred column type for a given fundamental memory type. On reading. - Check the column types found on disk and bail out if they don't match. - Allow for certain type conversions. This PR adds support to read an `std::int32_t` on disk in an `std::int64_t` in memory. The mechanics can later be reused to add support for more type conversions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8067
https://github.com/root-project/root/pull/8067:215,usability,memor,memory,215,"[ntuple] Add support for column type casting; When connecting fields of fundamental types and their columns, distinguish between reading and writing. On writing, pick a preferred column type for a given fundamental memory type. On reading. - Check the column types found on disk and bail out if they don't match. - Allow for certain type conversions. This PR adds support to read an `std::int32_t` on disk in an `std::int64_t` in memory. The mechanics can later be reused to add support for more type conversions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8067
https://github.com/root-project/root/pull/8067:364,usability,support,support,364,"[ntuple] Add support for column type casting; When connecting fields of fundamental types and their columns, distinguish between reading and writing. On writing, pick a preferred column type for a given fundamental memory type. On reading. - Check the column types found on disk and bail out if they don't match. - Allow for certain type conversions. This PR adds support to read an `std::int32_t` on disk in an `std::int64_t` in memory. The mechanics can later be reused to add support for more type conversions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8067
https://github.com/root-project/root/pull/8067:430,usability,memor,memory,430,"[ntuple] Add support for column type casting; When connecting fields of fundamental types and their columns, distinguish between reading and writing. On writing, pick a preferred column type for a given fundamental memory type. On reading. - Check the column types found on disk and bail out if they don't match. - Allow for certain type conversions. This PR adds support to read an `std::int32_t` on disk in an `std::int64_t` in memory. The mechanics can later be reused to add support for more type conversions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8067
https://github.com/root-project/root/pull/8067:479,usability,support,support,479,"[ntuple] Add support for column type casting; When connecting fields of fundamental types and their columns, distinguish between reading and writing. On writing, pick a preferred column type for a given fundamental memory type. On reading. - Check the column types found on disk and bail out if they don't match. - Allow for certain type conversions. This PR adds support to read an `std::int32_t` on disk in an `std::int64_t` in memory. The mechanics can later be reused to add support for more type conversions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8067
https://github.com/root-project/root/pull/8068:54,energy efficiency,core,cores,54,"Fix multicore tests when running on machines with few cores; When running on machines with few cores, enabling multithreading can. give you fewer cores than requested. For most of the tests this does. not matter. However, some tests verify the number of threads used. This commit adapts those tests for this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8068
https://github.com/root-project/root/pull/8068:95,energy efficiency,core,cores,95,"Fix multicore tests when running on machines with few cores; When running on machines with few cores, enabling multithreading can. give you fewer cores than requested. For most of the tests this does. not matter. However, some tests verify the number of threads used. This commit adapts those tests for this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8068
https://github.com/root-project/root/pull/8068:146,energy efficiency,core,cores,146,"Fix multicore tests when running on machines with few cores; When running on machines with few cores, enabling multithreading can. give you fewer cores than requested. For most of the tests this does. not matter. However, some tests verify the number of threads used. This commit adapts those tests for this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8068
https://github.com/root-project/root/pull/8068:280,energy efficiency,adapt,adapts,280,"Fix multicore tests when running on machines with few cores; When running on machines with few cores, enabling multithreading can. give you fewer cores than requested. For most of the tests this does. not matter. However, some tests verify the number of threads used. This commit adapts those tests for this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8068
https://github.com/root-project/root/pull/8068:280,integrability,adapt,adapts,280,"Fix multicore tests when running on machines with few cores; When running on machines with few cores, enabling multithreading can. give you fewer cores than requested. For most of the tests this does. not matter. However, some tests verify the number of threads used. This commit adapts those tests for this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8068
https://github.com/root-project/root/pull/8068:280,interoperability,adapt,adapts,280,"Fix multicore tests when running on machines with few cores; When running on machines with few cores, enabling multithreading can. give you fewer cores than requested. For most of the tests this does. not matter. However, some tests verify the number of threads used. This commit adapts those tests for this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8068
https://github.com/root-project/root/pull/8068:280,modifiability,adapt,adapts,280,"Fix multicore tests when running on machines with few cores; When running on machines with few cores, enabling multithreading can. give you fewer cores than requested. For most of the tests this does. not matter. However, some tests verify the number of threads used. This commit adapts those tests for this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8068
https://github.com/root-project/root/pull/8068:195,reliability,doe,does,195,"Fix multicore tests when running on machines with few cores; When running on machines with few cores, enabling multithreading can. give you fewer cores than requested. For most of the tests this does. not matter. However, some tests verify the number of threads used. This commit adapts those tests for this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8068
https://github.com/root-project/root/pull/8068:14,safety,test,tests,14,"Fix multicore tests when running on machines with few cores; When running on machines with few cores, enabling multithreading can. give you fewer cores than requested. For most of the tests this does. not matter. However, some tests verify the number of threads used. This commit adapts those tests for this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8068
https://github.com/root-project/root/pull/8068:184,safety,test,tests,184,"Fix multicore tests when running on machines with few cores; When running on machines with few cores, enabling multithreading can. give you fewer cores than requested. For most of the tests this does. not matter. However, some tests verify the number of threads used. This commit adapts those tests for this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8068
https://github.com/root-project/root/pull/8068:227,safety,test,tests,227,"Fix multicore tests when running on machines with few cores; When running on machines with few cores, enabling multithreading can. give you fewer cores than requested. For most of the tests this does. not matter. However, some tests verify the number of threads used. This commit adapts those tests for this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8068
https://github.com/root-project/root/pull/8068:293,safety,test,tests,293,"Fix multicore tests when running on machines with few cores; When running on machines with few cores, enabling multithreading can. give you fewer cores than requested. For most of the tests this does. not matter. However, some tests verify the number of threads used. This commit adapts those tests for this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8068
https://github.com/root-project/root/pull/8068:14,testability,test,tests,14,"Fix multicore tests when running on machines with few cores; When running on machines with few cores, enabling multithreading can. give you fewer cores than requested. For most of the tests this does. not matter. However, some tests verify the number of threads used. This commit adapts those tests for this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8068
https://github.com/root-project/root/pull/8068:184,testability,test,tests,184,"Fix multicore tests when running on machines with few cores; When running on machines with few cores, enabling multithreading can. give you fewer cores than requested. For most of the tests this does. not matter. However, some tests verify the number of threads used. This commit adapts those tests for this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8068
https://github.com/root-project/root/pull/8068:227,testability,test,tests,227,"Fix multicore tests when running on machines with few cores; When running on machines with few cores, enabling multithreading can. give you fewer cores than requested. For most of the tests this does. not matter. However, some tests verify the number of threads used. This commit adapts those tests for this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8068
https://github.com/root-project/root/pull/8068:233,testability,verif,verify,233,"Fix multicore tests when running on machines with few cores; When running on machines with few cores, enabling multithreading can. give you fewer cores than requested. For most of the tests this does. not matter. However, some tests verify the number of threads used. This commit adapts those tests for this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8068
https://github.com/root-project/root/pull/8068:293,testability,test,tests,293,"Fix multicore tests when running on machines with few cores; When running on machines with few cores, enabling multithreading can. give you fewer cores than requested. For most of the tests this does. not matter. However, some tests verify the number of threads used. This commit adapts those tests for this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8068
https://github.com/root-project/root/pull/8069:68,deployability,upgrad,upgrade,68,Fix ppc64le compilation with gcc 10; Reapply fix lost in the LLVM 9 upgrade. This fix is in LLVM 10. Backported from llvm upstream. https://reviews.llvm.org/D74129,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8069
https://github.com/root-project/root/pull/8069:68,modifiability,upgrad,upgrade,68,Fix ppc64le compilation with gcc 10; Reapply fix lost in the LLVM 9 upgrade. This fix is in LLVM 10. Backported from llvm upstream. https://reviews.llvm.org/D74129,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8069
https://github.com/root-project/root/pull/8069:140,safety,review,reviews,140,Fix ppc64le compilation with gcc 10; Reapply fix lost in the LLVM 9 upgrade. This fix is in LLVM 10. Backported from llvm upstream. https://reviews.llvm.org/D74129,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8069
https://github.com/root-project/root/pull/8069:140,testability,review,reviews,140,Fix ppc64le compilation with gcc 10; Reapply fix lost in the LLVM 9 upgrade. This fix is in LLVM 10. Backported from llvm upstream. https://reviews.llvm.org/D74129,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8069
https://github.com/root-project/root/pull/8070:18,usability,document,documentation,18,[RF] Improve some documentation and usability; Collection of small tweaks that came up in recent discussions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8070
https://github.com/root-project/root/pull/8070:36,usability,usab,usability,36,[RF] Improve some documentation and usability; Collection of small tweaks that came up in recent discussions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8070
https://github.com/root-project/root/issues/8071:243,availability,failur,failures,243,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:365,availability,Operat,Operating,365,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:436,availability,error,errors,436,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:659,availability,Error,Error,659,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:804,availability,Error,Error,804,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:948,availability,Error,Error,948,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:1217,availability,operat,operator,1217,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:113,deployability,build,build,113,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:161,deployability,fail,fail,161,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:178,deployability,fail,fail,178,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:243,deployability,fail,failures,243,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:274,deployability,Build,Build,274,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:344,deployability,version,version,344,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:564,deployability,log,log,564,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:628,deployability,log,log,628,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:1118,deployability,build,builddir,1118,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:1127,deployability,build,build,1127,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:1133,deployability,BUILD,BUILD,1133,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:1278,deployability,fail,failed,1278,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:344,integrability,version,version,344,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:344,modifiability,version,version,344,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:243,performance,failur,failures,243,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:436,performance,error,errors,436,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:659,performance,Error,Error,659,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:804,performance,Error,Error,804,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:948,performance,Error,Error,948,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:161,reliability,fail,fail,161,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:178,reliability,fail,fail,178,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:243,reliability,fail,failures,243,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:1278,reliability,fail,failed,1278,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:1291,reliability,Doe,Does,1291,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:98,safety,test,test,98,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:155,safety,test,tests,155,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:238,safety,test,test,238,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:319,safety,test,test,319,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:436,safety,error,errors,436,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:559,safety,test,test,559,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:564,safety,log,log,564,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:623,safety,test,test,623,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:628,safety,log,log,628,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:659,safety,Error,Error,659,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:804,safety,Error,Error,804,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:948,safety,Error,Error,948,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:564,security,log,log,564,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:628,security,log,log,628,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:98,testability,test,test,98,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:155,testability,test,tests,155,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:238,testability,test,test,238,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:319,testability,test,test,319,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:415,testability,context,context,415,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:559,testability,test,test,559,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:564,testability,log,log,564,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:623,testability,test,test,623,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:628,testability,log,log,628,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:1239,testability,Assert,Assertion,1239,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:225,usability,behavi,behavior,225,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:436,usability,error,errors,436,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:659,usability,Error,Error,659,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:804,usability,Error,Error,804,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8071:948,usability,Error,Error,948,"Problems compiling root 6.24.00 with gcc 11 on Fedora 34; ### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior. No test failures. ### To Reproduce. 1. Build root 6.24.00 on Fedora 34. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 34. ### Additional context. The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: . ```. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72. Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72. ```. and. ```. python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed. ```. Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8071
https://github.com/root-project/root/issues/8072:0,availability,Failur,Failures,0,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:686,availability,fault,fault,686,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:953,availability,fault,fault,953,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:1290,availability,fault,fault,1290,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:1491,availability,Operat,Operating,1491,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:0,deployability,Fail,Failures,0,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:249,deployability,upgrad,upgrade,249,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:320,deployability,fail,fails,320,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:549,deployability,fail,fail,549,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:654,deployability,build,build,654,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:660,deployability,fail,fails,660,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:715,deployability,build,build,715,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:981,deployability,fail,fail,981,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:1058,deployability,build,builddir,1058,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:1067,deployability,build,build,1067,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:1073,deployability,BUILD,BUILD,1073,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:1308,deployability,version,versions,1308,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:1470,deployability,version,version,1470,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:524,energy efficiency,model,model,524,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:686,energy efficiency,fault,fault,686,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:826,energy efficiency,model,model,826,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:876,energy efficiency,model,model,876,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:901,energy efficiency,model,model,901,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:953,energy efficiency,fault,fault,953,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:1208,energy efficiency,model,model,1208,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:1239,energy efficiency,model,model,1239,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:1290,energy efficiency,fault,fault,1290,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:1308,integrability,version,versions,1308,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:1470,integrability,version,version,1470,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:249,modifiability,upgrad,upgrade,249,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:1308,modifiability,version,versions,1308,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:1470,modifiability,version,version,1470,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:0,performance,Failur,Failures,0,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:686,performance,fault,fault,686,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:953,performance,fault,fault,953,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:1290,performance,fault,fault,1290,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:0,reliability,Fail,Failures,0,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:320,reliability,fail,fails,320,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:549,reliability,fail,fail,549,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:635,reliability,doe,does,635,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:660,reliability,fail,fails,660,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:686,reliability,fault,fault,686,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:953,reliability,fault,fault,953,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:981,reliability,fail,fail,981,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:1290,reliability,fault,fault,1290,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:686,safety,fault,fault,686,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:789,safety,Test,Testing,789,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:929,safety,avoid,avoids,929,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:953,safety,fault,fault,953,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:975,safety,test,tests,975,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:1290,safety,fault,fault,1290,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:524,security,model,model,524,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:826,security,model,model,826,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:876,security,model,model,876,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:901,security,model,model,901,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:1208,security,model,model,1208,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:1239,security,model,model,1239,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:334,testability,assert,assert,334,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:542,testability,assert,assert,542,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:789,testability,Test,Testing,789,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:887,testability,assert,assert,887,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:975,testability,test,tests,975,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:1339,testability,regress,regression,1339,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8072:1364,usability,behavi,behavior,1364,"Failures with root 6.24.00 on Fedora 33 ppc64le; ### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:. ```. Relocation R_PPC64_REL32 overflow. UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800! ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior. Working root on ppc64le. ### To Reproduce. Compile root 6.24.00 for ppc64le. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8072
https://github.com/root-project/root/issues/8073:5,availability,failur,failures,5,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:909,availability,Error,Errors,909,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:946,availability,error,error,946,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1487,availability,Error,Error,1487,"e bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" run during RPM package build (%check section).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1592,availability,error,error,1592,"e bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" run during RPM package build (%check section).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1926,availability,Operat,Operating,1926,"e bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" run during RPM package build (%check section).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1971,availability,Failur,Failures,1971,"e bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" run during RPM package build (%check section).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:5,deployability,fail,failures,5,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:128,deployability,fail,fail,128,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:160,deployability,FAIL,FAILED,160,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:208,deployability,Fail,Failed,208,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:246,deployability,Fail,Failed,246,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:290,deployability,Fail,Failed,290,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:335,deployability,Fail,Failed,335,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:376,deployability,Fail,Failed,376,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:418,deployability,Fail,Failed,418,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:466,deployability,Fail,Failed,466,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:508,deployability,Fail,Failed,508,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:555,deployability,Fail,Failed,555,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:603,deployability,Fail,Failed,603,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:645,deployability,Fail,Failed,645,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:693,deployability,Fail,Failed,693,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:739,deployability,Fail,Failed,739,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:780,deployability,Fail,Failed,780,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:818,deployability,Fail,Failed,818,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:860,deployability,Fail,Failed,860,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:900,deployability,Fail,Failed,900,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1079,deployability,Fail,Failed,1079,"e bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" run during RPM package build (%check section).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1108,deployability,build,builddir,1108,"e bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" run during RPM package build (%check section).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1117,deployability,build,build,1117,"e bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" run during RPM package build (%check section).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1123,deployability,BUILD,BUILD,1123,"e bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" run during RPM package build (%check section).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1188,deployability,build,builddir,1188,"e bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" run during RPM package build (%check section).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1197,deployability,build,build,1197,"e bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" run during RPM package build (%check section).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1203,deployability,BUILD,BUILD,1203,"e bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" run during RPM package build (%check section).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1409,deployability,Modul,Modules,1409,"e bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" run during RPM package build (%check section).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1473,deployability,fail,failed,1473,"e bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" run during RPM package build (%check section).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1497,deployability,build,builddir,1497,"e bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" run during RPM package build (%check section).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1506,deployability,build,build,1506,"e bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" run during RPM package build (%check section).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1512,deployability,BUILD,BUILD,1512,"e bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" run during RPM package build (%check section).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1835,deployability,Build,Build,1835,"e bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" run during RPM package build (%check section).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1905,deployability,version,version,1905,"e bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" run during RPM package build (%check section).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1971,deployability,Fail,Failures,1971,"e bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" run during RPM package build (%check section).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:2022,deployability,build,build,2022,"e bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" run during RPM package build (%check section).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:236,energy efficiency,draw,draw,236,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1581,integrability,messag,message,1581,"e bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" run during RPM package build (%check section).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1604,integrability,Sub,Subprocess,1604,"e bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" run during RPM package build (%check section).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1905,integrability,version,version,1905,"e bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" run during RPM package build (%check section).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1581,interoperability,messag,message,1581,"e bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" run during RPM package build (%check section).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1409,modifiability,Modul,Modules,1409,"e bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" run during RPM package build (%check section).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1905,modifiability,version,version,1905,"e bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" run during RPM package build (%check section).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:2014,modifiability,pac,package,2014,"e bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" run during RPM package build (%check section).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:5,performance,failur,failures,5,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:188,performance,concurren,concurrentfill,188,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:909,performance,Error,Errors,909,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:946,performance,error,error,946,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1019,performance,concurren,concurrentfill,1019,"ts; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" run during RPM package buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1155,performance,concurren,concurrentfill,1155,"e bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" run during RPM package build (%check section).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1487,performance,Error,Error,1487,"e bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" run during RPM package build (%check section).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1592,performance,error,error,1592,"e bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" run during RPM package build (%check section).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1971,performance,Failur,Failures,1971,"e bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" run during RPM package build (%check section).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:5,reliability,fail,failures,5,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:128,reliability,fail,fail,128,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:160,reliability,FAIL,FAILED,160,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:208,reliability,Fail,Failed,208,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:246,reliability,Fail,Failed,246,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:290,reliability,Fail,Failed,290,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:335,reliability,Fail,Failed,335,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:376,reliability,Fail,Failed,376,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:418,reliability,Fail,Failed,418,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:466,reliability,Fail,Failed,466,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:508,reliability,Fail,Failed,508,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:555,reliability,Fail,Failed,555,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:603,reliability,Fail,Failed,603,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:645,reliability,Fail,Failed,645,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:693,reliability,Fail,Failed,693,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:739,reliability,Fail,Failed,739,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:780,reliability,Fail,Failed,780,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:818,reliability,Fail,Failed,818,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:860,reliability,Fail,Failed,860,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:900,reliability,Fail,Failed,900,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1079,reliability,Fail,Failed,1079,"e bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" run during RPM package build (%check section).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1473,reliability,fail,failed,1473,"e bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" run during RPM package build (%check section).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1971,reliability,Fail,Failures,1971,"e bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" run during RPM package build (%check section).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:0,safety,Test,Test,0,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:23,safety,test,tests,23,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:69,safety,test,tests,69,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:122,safety,test,tests,122,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:154,safety,test,tests,154,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:909,safety,Error,Errors,909,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:946,safety,error,error,946,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:996,safety,Test,Test,996,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1409,safety,Modul,Modules,1409,"e bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" run during RPM package build (%check section).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1487,safety,Error,Error,1487,"e bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" run during RPM package build (%check section).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1592,safety,error,error,1592,"e bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" run during RPM package build (%check section).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1773,safety,test,tests,1773,"e bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" run during RPM package build (%check section).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1880,safety,test,test,1880,"e bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" run during RPM package build (%check section).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:1993,safety,test,test,1993,"e bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" run during RPM package build (%check section).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:0,testability,Test,Test,0,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:23,testability,test,tests,23,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:69,testability,test,tests,69,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:122,testability,test,tests,122,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:154,testability,test,tests,154,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:888,testability,simpl,simple,888,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
https://github.com/root-project/root/issues/8073:996,testability,Test,Test,996,"Test failures in root7 tests; ### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:. ```. The following tests FAILED:. 	972 - tutorial-v7-concurrentfill.cxx (Failed). 	973 - tutorial-v7-draw.cxx (Failed). 	975 - tutorial-v7-draw_frame.cxx (Failed). 	976 - tutorial-v7-draw_legend.cxx (Failed). 	977 - tutorial-v7-draw_mt.cxx (Failed). 	979 - tutorial-v7-draw_rh1.cxx (Failed). 	980 - tutorial-v7-draw_rh1_large.cxx (Failed). 	981 - tutorial-v7-draw_rh2.cxx (Failed). 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed). 	983 - tutorial-v7-draw_rh2_large.cxx (Failed). 	984 - tutorial-v7-draw_rh3.cxx (Failed). 	985 - tutorial-v7-draw_rh3_large.cxx (Failed). 	986 - tutorial-v7-draw_subpads.cxx (Failed). 	989 - tutorial-v7-histops.cxx (Failed). 	996 - tutorial-v7-perf.cxx (Failed). 	997 - tutorial-v7-perfcomp.cxx (Failed). 	998 - tutorial-v7-simple.cxx (Failed). Errors while running CTest. ```. The error is the same for all of them:. ```. 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec. Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx... root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed. CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior. Successful tests. ### To Reproduce. Steps to reproduce the behavior:. 1. Build root with -Droot7:BOOL=ON. 2. Run make test. ### Setup. 1. ROOT version: 6.24.00. 2. Operating system: Fedora Linux 33 and 34. 3. Failures during ""make test"" r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8073
