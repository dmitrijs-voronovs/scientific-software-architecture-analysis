id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/pull/7184:323,availability,error,error,323,"OK, well, it doesn't work for me:. ```. [bellenot@bbcc7x64 gui]$ root -l games.C. root [0]. Processing games.C... input_line_14:1:10: fatal error: 'Hello.h' file not found. #include ""Hello.h"". ^~~~~~~~~. input_line_15:1:10: fatal error: 'Aclock.h' file not found. #include ""Aclock.h"". ^~~~~~~~~~. input_line_16:1:10: fatal error: 'Tetris.h' file not found. #include ""Tetris.h"". ^~~~~~~~~~. In file included from input_line_17:1:. ./games.C:72:23: error: allocation of incomplete type 'Hello'. Hello *hello = new Hello();. ^~~~~. ./games.C:65:7: note: forward declaration of 'Hello'. class Hello;. ^. input_line_19:2:3: error: use of undeclared identifier 'rungames'. (rungames()). ^. Error in <HandleInterpreterException>: Error evaluating expression (rungames()). Execution of your code was aborted. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7184:447,availability,error,error,447,"OK, well, it doesn't work for me:. ```. [bellenot@bbcc7x64 gui]$ root -l games.C. root [0]. Processing games.C... input_line_14:1:10: fatal error: 'Hello.h' file not found. #include ""Hello.h"". ^~~~~~~~~. input_line_15:1:10: fatal error: 'Aclock.h' file not found. #include ""Aclock.h"". ^~~~~~~~~~. input_line_16:1:10: fatal error: 'Tetris.h' file not found. #include ""Tetris.h"". ^~~~~~~~~~. In file included from input_line_17:1:. ./games.C:72:23: error: allocation of incomplete type 'Hello'. Hello *hello = new Hello();. ^~~~~. ./games.C:65:7: note: forward declaration of 'Hello'. class Hello;. ^. input_line_19:2:3: error: use of undeclared identifier 'rungames'. (rungames()). ^. Error in <HandleInterpreterException>: Error evaluating expression (rungames()). Execution of your code was aborted. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7184:619,availability,error,error,619,"OK, well, it doesn't work for me:. ```. [bellenot@bbcc7x64 gui]$ root -l games.C. root [0]. Processing games.C... input_line_14:1:10: fatal error: 'Hello.h' file not found. #include ""Hello.h"". ^~~~~~~~~. input_line_15:1:10: fatal error: 'Aclock.h' file not found. #include ""Aclock.h"". ^~~~~~~~~~. input_line_16:1:10: fatal error: 'Tetris.h' file not found. #include ""Tetris.h"". ^~~~~~~~~~. In file included from input_line_17:1:. ./games.C:72:23: error: allocation of incomplete type 'Hello'. Hello *hello = new Hello();. ^~~~~. ./games.C:65:7: note: forward declaration of 'Hello'. class Hello;. ^. input_line_19:2:3: error: use of undeclared identifier 'rungames'. (rungames()). ^. Error in <HandleInterpreterException>: Error evaluating expression (rungames()). Execution of your code was aborted. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7184:684,availability,Error,Error,684,"OK, well, it doesn't work for me:. ```. [bellenot@bbcc7x64 gui]$ root -l games.C. root [0]. Processing games.C... input_line_14:1:10: fatal error: 'Hello.h' file not found. #include ""Hello.h"". ^~~~~~~~~. input_line_15:1:10: fatal error: 'Aclock.h' file not found. #include ""Aclock.h"". ^~~~~~~~~~. input_line_16:1:10: fatal error: 'Tetris.h' file not found. #include ""Tetris.h"". ^~~~~~~~~~. In file included from input_line_17:1:. ./games.C:72:23: error: allocation of incomplete type 'Hello'. Hello *hello = new Hello();. ^~~~~. ./games.C:65:7: note: forward declaration of 'Hello'. class Hello;. ^. input_line_19:2:3: error: use of undeclared identifier 'rungames'. (rungames()). ^. Error in <HandleInterpreterException>: Error evaluating expression (rungames()). Execution of your code was aborted. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7184:723,availability,Error,Error,723,"OK, well, it doesn't work for me:. ```. [bellenot@bbcc7x64 gui]$ root -l games.C. root [0]. Processing games.C... input_line_14:1:10: fatal error: 'Hello.h' file not found. #include ""Hello.h"". ^~~~~~~~~. input_line_15:1:10: fatal error: 'Aclock.h' file not found. #include ""Aclock.h"". ^~~~~~~~~~. input_line_16:1:10: fatal error: 'Tetris.h' file not found. #include ""Tetris.h"". ^~~~~~~~~~. In file included from input_line_17:1:. ./games.C:72:23: error: allocation of incomplete type 'Hello'. Hello *hello = new Hello();. ^~~~~. ./games.C:65:7: note: forward declaration of 'Hello'. class Hello;. ^. input_line_19:2:3: error: use of undeclared identifier 'rungames'. (rungames()). ^. Error in <HandleInterpreterException>: Error evaluating expression (rungames()). Execution of your code was aborted. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7184:454,energy efficiency,alloc,allocation,454,"OK, well, it doesn't work for me:. ```. [bellenot@bbcc7x64 gui]$ root -l games.C. root [0]. Processing games.C... input_line_14:1:10: fatal error: 'Hello.h' file not found. #include ""Hello.h"". ^~~~~~~~~. input_line_15:1:10: fatal error: 'Aclock.h' file not found. #include ""Aclock.h"". ^~~~~~~~~~. input_line_16:1:10: fatal error: 'Tetris.h' file not found. #include ""Tetris.h"". ^~~~~~~~~~. In file included from input_line_17:1:. ./games.C:72:23: error: allocation of incomplete type 'Hello'. Hello *hello = new Hello();. ^~~~~. ./games.C:65:7: note: forward declaration of 'Hello'. class Hello;. ^. input_line_19:2:3: error: use of undeclared identifier 'rungames'. (rungames()). ^. Error in <HandleInterpreterException>: Error evaluating expression (rungames()). Execution of your code was aborted. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7184:140,performance,error,error,140,"OK, well, it doesn't work for me:. ```. [bellenot@bbcc7x64 gui]$ root -l games.C. root [0]. Processing games.C... input_line_14:1:10: fatal error: 'Hello.h' file not found. #include ""Hello.h"". ^~~~~~~~~. input_line_15:1:10: fatal error: 'Aclock.h' file not found. #include ""Aclock.h"". ^~~~~~~~~~. input_line_16:1:10: fatal error: 'Tetris.h' file not found. #include ""Tetris.h"". ^~~~~~~~~~. In file included from input_line_17:1:. ./games.C:72:23: error: allocation of incomplete type 'Hello'. Hello *hello = new Hello();. ^~~~~. ./games.C:65:7: note: forward declaration of 'Hello'. class Hello;. ^. input_line_19:2:3: error: use of undeclared identifier 'rungames'. (rungames()). ^. Error in <HandleInterpreterException>: Error evaluating expression (rungames()). Execution of your code was aborted. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7184:230,performance,error,error,230,"OK, well, it doesn't work for me:. ```. [bellenot@bbcc7x64 gui]$ root -l games.C. root [0]. Processing games.C... input_line_14:1:10: fatal error: 'Hello.h' file not found. #include ""Hello.h"". ^~~~~~~~~. input_line_15:1:10: fatal error: 'Aclock.h' file not found. #include ""Aclock.h"". ^~~~~~~~~~. input_line_16:1:10: fatal error: 'Tetris.h' file not found. #include ""Tetris.h"". ^~~~~~~~~~. In file included from input_line_17:1:. ./games.C:72:23: error: allocation of incomplete type 'Hello'. Hello *hello = new Hello();. ^~~~~. ./games.C:65:7: note: forward declaration of 'Hello'. class Hello;. ^. input_line_19:2:3: error: use of undeclared identifier 'rungames'. (rungames()). ^. Error in <HandleInterpreterException>: Error evaluating expression (rungames()). Execution of your code was aborted. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7184:323,performance,error,error,323,"OK, well, it doesn't work for me:. ```. [bellenot@bbcc7x64 gui]$ root -l games.C. root [0]. Processing games.C... input_line_14:1:10: fatal error: 'Hello.h' file not found. #include ""Hello.h"". ^~~~~~~~~. input_line_15:1:10: fatal error: 'Aclock.h' file not found. #include ""Aclock.h"". ^~~~~~~~~~. input_line_16:1:10: fatal error: 'Tetris.h' file not found. #include ""Tetris.h"". ^~~~~~~~~~. In file included from input_line_17:1:. ./games.C:72:23: error: allocation of incomplete type 'Hello'. Hello *hello = new Hello();. ^~~~~. ./games.C:65:7: note: forward declaration of 'Hello'. class Hello;. ^. input_line_19:2:3: error: use of undeclared identifier 'rungames'. (rungames()). ^. Error in <HandleInterpreterException>: Error evaluating expression (rungames()). Execution of your code was aborted. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7184:447,performance,error,error,447,"OK, well, it doesn't work for me:. ```. [bellenot@bbcc7x64 gui]$ root -l games.C. root [0]. Processing games.C... input_line_14:1:10: fatal error: 'Hello.h' file not found. #include ""Hello.h"". ^~~~~~~~~. input_line_15:1:10: fatal error: 'Aclock.h' file not found. #include ""Aclock.h"". ^~~~~~~~~~. input_line_16:1:10: fatal error: 'Tetris.h' file not found. #include ""Tetris.h"". ^~~~~~~~~~. In file included from input_line_17:1:. ./games.C:72:23: error: allocation of incomplete type 'Hello'. Hello *hello = new Hello();. ^~~~~. ./games.C:65:7: note: forward declaration of 'Hello'. class Hello;. ^. input_line_19:2:3: error: use of undeclared identifier 'rungames'. (rungames()). ^. Error in <HandleInterpreterException>: Error evaluating expression (rungames()). Execution of your code was aborted. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7184:619,performance,error,error,619,"OK, well, it doesn't work for me:. ```. [bellenot@bbcc7x64 gui]$ root -l games.C. root [0]. Processing games.C... input_line_14:1:10: fatal error: 'Hello.h' file not found. #include ""Hello.h"". ^~~~~~~~~. input_line_15:1:10: fatal error: 'Aclock.h' file not found. #include ""Aclock.h"". ^~~~~~~~~~. input_line_16:1:10: fatal error: 'Tetris.h' file not found. #include ""Tetris.h"". ^~~~~~~~~~. In file included from input_line_17:1:. ./games.C:72:23: error: allocation of incomplete type 'Hello'. Hello *hello = new Hello();. ^~~~~. ./games.C:65:7: note: forward declaration of 'Hello'. class Hello;. ^. input_line_19:2:3: error: use of undeclared identifier 'rungames'. (rungames()). ^. Error in <HandleInterpreterException>: Error evaluating expression (rungames()). Execution of your code was aborted. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7184:684,performance,Error,Error,684,"OK, well, it doesn't work for me:. ```. [bellenot@bbcc7x64 gui]$ root -l games.C. root [0]. Processing games.C... input_line_14:1:10: fatal error: 'Hello.h' file not found. #include ""Hello.h"". ^~~~~~~~~. input_line_15:1:10: fatal error: 'Aclock.h' file not found. #include ""Aclock.h"". ^~~~~~~~~~. input_line_16:1:10: fatal error: 'Tetris.h' file not found. #include ""Tetris.h"". ^~~~~~~~~~. In file included from input_line_17:1:. ./games.C:72:23: error: allocation of incomplete type 'Hello'. Hello *hello = new Hello();. ^~~~~. ./games.C:65:7: note: forward declaration of 'Hello'. class Hello;. ^. input_line_19:2:3: error: use of undeclared identifier 'rungames'. (rungames()). ^. Error in <HandleInterpreterException>: Error evaluating expression (rungames()). Execution of your code was aborted. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7184:723,performance,Error,Error,723,"OK, well, it doesn't work for me:. ```. [bellenot@bbcc7x64 gui]$ root -l games.C. root [0]. Processing games.C... input_line_14:1:10: fatal error: 'Hello.h' file not found. #include ""Hello.h"". ^~~~~~~~~. input_line_15:1:10: fatal error: 'Aclock.h' file not found. #include ""Aclock.h"". ^~~~~~~~~~. input_line_16:1:10: fatal error: 'Tetris.h' file not found. #include ""Tetris.h"". ^~~~~~~~~~. In file included from input_line_17:1:. ./games.C:72:23: error: allocation of incomplete type 'Hello'. Hello *hello = new Hello();. ^~~~~. ./games.C:65:7: note: forward declaration of 'Hello'. class Hello;. ^. input_line_19:2:3: error: use of undeclared identifier 'rungames'. (rungames()). ^. Error in <HandleInterpreterException>: Error evaluating expression (rungames()). Execution of your code was aborted. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7184:13,reliability,doe,doesn,13,"OK, well, it doesn't work for me:. ```. [bellenot@bbcc7x64 gui]$ root -l games.C. root [0]. Processing games.C... input_line_14:1:10: fatal error: 'Hello.h' file not found. #include ""Hello.h"". ^~~~~~~~~. input_line_15:1:10: fatal error: 'Aclock.h' file not found. #include ""Aclock.h"". ^~~~~~~~~~. input_line_16:1:10: fatal error: 'Tetris.h' file not found. #include ""Tetris.h"". ^~~~~~~~~~. In file included from input_line_17:1:. ./games.C:72:23: error: allocation of incomplete type 'Hello'. Hello *hello = new Hello();. ^~~~~. ./games.C:65:7: note: forward declaration of 'Hello'. class Hello;. ^. input_line_19:2:3: error: use of undeclared identifier 'rungames'. (rungames()). ^. Error in <HandleInterpreterException>: Error evaluating expression (rungames()). Execution of your code was aborted. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7184:140,safety,error,error,140,"OK, well, it doesn't work for me:. ```. [bellenot@bbcc7x64 gui]$ root -l games.C. root [0]. Processing games.C... input_line_14:1:10: fatal error: 'Hello.h' file not found. #include ""Hello.h"". ^~~~~~~~~. input_line_15:1:10: fatal error: 'Aclock.h' file not found. #include ""Aclock.h"". ^~~~~~~~~~. input_line_16:1:10: fatal error: 'Tetris.h' file not found. #include ""Tetris.h"". ^~~~~~~~~~. In file included from input_line_17:1:. ./games.C:72:23: error: allocation of incomplete type 'Hello'. Hello *hello = new Hello();. ^~~~~. ./games.C:65:7: note: forward declaration of 'Hello'. class Hello;. ^. input_line_19:2:3: error: use of undeclared identifier 'rungames'. (rungames()). ^. Error in <HandleInterpreterException>: Error evaluating expression (rungames()). Execution of your code was aborted. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7184:230,safety,error,error,230,"OK, well, it doesn't work for me:. ```. [bellenot@bbcc7x64 gui]$ root -l games.C. root [0]. Processing games.C... input_line_14:1:10: fatal error: 'Hello.h' file not found. #include ""Hello.h"". ^~~~~~~~~. input_line_15:1:10: fatal error: 'Aclock.h' file not found. #include ""Aclock.h"". ^~~~~~~~~~. input_line_16:1:10: fatal error: 'Tetris.h' file not found. #include ""Tetris.h"". ^~~~~~~~~~. In file included from input_line_17:1:. ./games.C:72:23: error: allocation of incomplete type 'Hello'. Hello *hello = new Hello();. ^~~~~. ./games.C:65:7: note: forward declaration of 'Hello'. class Hello;. ^. input_line_19:2:3: error: use of undeclared identifier 'rungames'. (rungames()). ^. Error in <HandleInterpreterException>: Error evaluating expression (rungames()). Execution of your code was aborted. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7184:323,safety,error,error,323,"OK, well, it doesn't work for me:. ```. [bellenot@bbcc7x64 gui]$ root -l games.C. root [0]. Processing games.C... input_line_14:1:10: fatal error: 'Hello.h' file not found. #include ""Hello.h"". ^~~~~~~~~. input_line_15:1:10: fatal error: 'Aclock.h' file not found. #include ""Aclock.h"". ^~~~~~~~~~. input_line_16:1:10: fatal error: 'Tetris.h' file not found. #include ""Tetris.h"". ^~~~~~~~~~. In file included from input_line_17:1:. ./games.C:72:23: error: allocation of incomplete type 'Hello'. Hello *hello = new Hello();. ^~~~~. ./games.C:65:7: note: forward declaration of 'Hello'. class Hello;. ^. input_line_19:2:3: error: use of undeclared identifier 'rungames'. (rungames()). ^. Error in <HandleInterpreterException>: Error evaluating expression (rungames()). Execution of your code was aborted. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7184:447,safety,error,error,447,"OK, well, it doesn't work for me:. ```. [bellenot@bbcc7x64 gui]$ root -l games.C. root [0]. Processing games.C... input_line_14:1:10: fatal error: 'Hello.h' file not found. #include ""Hello.h"". ^~~~~~~~~. input_line_15:1:10: fatal error: 'Aclock.h' file not found. #include ""Aclock.h"". ^~~~~~~~~~. input_line_16:1:10: fatal error: 'Tetris.h' file not found. #include ""Tetris.h"". ^~~~~~~~~~. In file included from input_line_17:1:. ./games.C:72:23: error: allocation of incomplete type 'Hello'. Hello *hello = new Hello();. ^~~~~. ./games.C:65:7: note: forward declaration of 'Hello'. class Hello;. ^. input_line_19:2:3: error: use of undeclared identifier 'rungames'. (rungames()). ^. Error in <HandleInterpreterException>: Error evaluating expression (rungames()). Execution of your code was aborted. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7184:619,safety,error,error,619,"OK, well, it doesn't work for me:. ```. [bellenot@bbcc7x64 gui]$ root -l games.C. root [0]. Processing games.C... input_line_14:1:10: fatal error: 'Hello.h' file not found. #include ""Hello.h"". ^~~~~~~~~. input_line_15:1:10: fatal error: 'Aclock.h' file not found. #include ""Aclock.h"". ^~~~~~~~~~. input_line_16:1:10: fatal error: 'Tetris.h' file not found. #include ""Tetris.h"". ^~~~~~~~~~. In file included from input_line_17:1:. ./games.C:72:23: error: allocation of incomplete type 'Hello'. Hello *hello = new Hello();. ^~~~~. ./games.C:65:7: note: forward declaration of 'Hello'. class Hello;. ^. input_line_19:2:3: error: use of undeclared identifier 'rungames'. (rungames()). ^. Error in <HandleInterpreterException>: Error evaluating expression (rungames()). Execution of your code was aborted. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7184:684,safety,Error,Error,684,"OK, well, it doesn't work for me:. ```. [bellenot@bbcc7x64 gui]$ root -l games.C. root [0]. Processing games.C... input_line_14:1:10: fatal error: 'Hello.h' file not found. #include ""Hello.h"". ^~~~~~~~~. input_line_15:1:10: fatal error: 'Aclock.h' file not found. #include ""Aclock.h"". ^~~~~~~~~~. input_line_16:1:10: fatal error: 'Tetris.h' file not found. #include ""Tetris.h"". ^~~~~~~~~~. In file included from input_line_17:1:. ./games.C:72:23: error: allocation of incomplete type 'Hello'. Hello *hello = new Hello();. ^~~~~. ./games.C:65:7: note: forward declaration of 'Hello'. class Hello;. ^. input_line_19:2:3: error: use of undeclared identifier 'rungames'. (rungames()). ^. Error in <HandleInterpreterException>: Error evaluating expression (rungames()). Execution of your code was aborted. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7184:723,safety,Error,Error,723,"OK, well, it doesn't work for me:. ```. [bellenot@bbcc7x64 gui]$ root -l games.C. root [0]. Processing games.C... input_line_14:1:10: fatal error: 'Hello.h' file not found. #include ""Hello.h"". ^~~~~~~~~. input_line_15:1:10: fatal error: 'Aclock.h' file not found. #include ""Aclock.h"". ^~~~~~~~~~. input_line_16:1:10: fatal error: 'Tetris.h' file not found. #include ""Tetris.h"". ^~~~~~~~~~. In file included from input_line_17:1:. ./games.C:72:23: error: allocation of incomplete type 'Hello'. Hello *hello = new Hello();. ^~~~~. ./games.C:65:7: note: forward declaration of 'Hello'. class Hello;. ^. input_line_19:2:3: error: use of undeclared identifier 'rungames'. (rungames()). ^. Error in <HandleInterpreterException>: Error evaluating expression (rungames()). Execution of your code was aborted. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7184:644,security,ident,identifier,644,"OK, well, it doesn't work for me:. ```. [bellenot@bbcc7x64 gui]$ root -l games.C. root [0]. Processing games.C... input_line_14:1:10: fatal error: 'Hello.h' file not found. #include ""Hello.h"". ^~~~~~~~~. input_line_15:1:10: fatal error: 'Aclock.h' file not found. #include ""Aclock.h"". ^~~~~~~~~~. input_line_16:1:10: fatal error: 'Tetris.h' file not found. #include ""Tetris.h"". ^~~~~~~~~~. In file included from input_line_17:1:. ./games.C:72:23: error: allocation of incomplete type 'Hello'. Hello *hello = new Hello();. ^~~~~. ./games.C:65:7: note: forward declaration of 'Hello'. class Hello;. ^. input_line_19:2:3: error: use of undeclared identifier 'rungames'. (rungames()). ^. Error in <HandleInterpreterException>: Error evaluating expression (rungames()). Execution of your code was aborted. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7184:140,usability,error,error,140,"OK, well, it doesn't work for me:. ```. [bellenot@bbcc7x64 gui]$ root -l games.C. root [0]. Processing games.C... input_line_14:1:10: fatal error: 'Hello.h' file not found. #include ""Hello.h"". ^~~~~~~~~. input_line_15:1:10: fatal error: 'Aclock.h' file not found. #include ""Aclock.h"". ^~~~~~~~~~. input_line_16:1:10: fatal error: 'Tetris.h' file not found. #include ""Tetris.h"". ^~~~~~~~~~. In file included from input_line_17:1:. ./games.C:72:23: error: allocation of incomplete type 'Hello'. Hello *hello = new Hello();. ^~~~~. ./games.C:65:7: note: forward declaration of 'Hello'. class Hello;. ^. input_line_19:2:3: error: use of undeclared identifier 'rungames'. (rungames()). ^. Error in <HandleInterpreterException>: Error evaluating expression (rungames()). Execution of your code was aborted. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7184:230,usability,error,error,230,"OK, well, it doesn't work for me:. ```. [bellenot@bbcc7x64 gui]$ root -l games.C. root [0]. Processing games.C... input_line_14:1:10: fatal error: 'Hello.h' file not found. #include ""Hello.h"". ^~~~~~~~~. input_line_15:1:10: fatal error: 'Aclock.h' file not found. #include ""Aclock.h"". ^~~~~~~~~~. input_line_16:1:10: fatal error: 'Tetris.h' file not found. #include ""Tetris.h"". ^~~~~~~~~~. In file included from input_line_17:1:. ./games.C:72:23: error: allocation of incomplete type 'Hello'. Hello *hello = new Hello();. ^~~~~. ./games.C:65:7: note: forward declaration of 'Hello'. class Hello;. ^. input_line_19:2:3: error: use of undeclared identifier 'rungames'. (rungames()). ^. Error in <HandleInterpreterException>: Error evaluating expression (rungames()). Execution of your code was aborted. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7184:323,usability,error,error,323,"OK, well, it doesn't work for me:. ```. [bellenot@bbcc7x64 gui]$ root -l games.C. root [0]. Processing games.C... input_line_14:1:10: fatal error: 'Hello.h' file not found. #include ""Hello.h"". ^~~~~~~~~. input_line_15:1:10: fatal error: 'Aclock.h' file not found. #include ""Aclock.h"". ^~~~~~~~~~. input_line_16:1:10: fatal error: 'Tetris.h' file not found. #include ""Tetris.h"". ^~~~~~~~~~. In file included from input_line_17:1:. ./games.C:72:23: error: allocation of incomplete type 'Hello'. Hello *hello = new Hello();. ^~~~~. ./games.C:65:7: note: forward declaration of 'Hello'. class Hello;. ^. input_line_19:2:3: error: use of undeclared identifier 'rungames'. (rungames()). ^. Error in <HandleInterpreterException>: Error evaluating expression (rungames()). Execution of your code was aborted. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7184:447,usability,error,error,447,"OK, well, it doesn't work for me:. ```. [bellenot@bbcc7x64 gui]$ root -l games.C. root [0]. Processing games.C... input_line_14:1:10: fatal error: 'Hello.h' file not found. #include ""Hello.h"". ^~~~~~~~~. input_line_15:1:10: fatal error: 'Aclock.h' file not found. #include ""Aclock.h"". ^~~~~~~~~~. input_line_16:1:10: fatal error: 'Tetris.h' file not found. #include ""Tetris.h"". ^~~~~~~~~~. In file included from input_line_17:1:. ./games.C:72:23: error: allocation of incomplete type 'Hello'. Hello *hello = new Hello();. ^~~~~. ./games.C:65:7: note: forward declaration of 'Hello'. class Hello;. ^. input_line_19:2:3: error: use of undeclared identifier 'rungames'. (rungames()). ^. Error in <HandleInterpreterException>: Error evaluating expression (rungames()). Execution of your code was aborted. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7184:619,usability,error,error,619,"OK, well, it doesn't work for me:. ```. [bellenot@bbcc7x64 gui]$ root -l games.C. root [0]. Processing games.C... input_line_14:1:10: fatal error: 'Hello.h' file not found. #include ""Hello.h"". ^~~~~~~~~. input_line_15:1:10: fatal error: 'Aclock.h' file not found. #include ""Aclock.h"". ^~~~~~~~~~. input_line_16:1:10: fatal error: 'Tetris.h' file not found. #include ""Tetris.h"". ^~~~~~~~~~. In file included from input_line_17:1:. ./games.C:72:23: error: allocation of incomplete type 'Hello'. Hello *hello = new Hello();. ^~~~~. ./games.C:65:7: note: forward declaration of 'Hello'. class Hello;. ^. input_line_19:2:3: error: use of undeclared identifier 'rungames'. (rungames()). ^. Error in <HandleInterpreterException>: Error evaluating expression (rungames()). Execution of your code was aborted. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7184:684,usability,Error,Error,684,"OK, well, it doesn't work for me:. ```. [bellenot@bbcc7x64 gui]$ root -l games.C. root [0]. Processing games.C... input_line_14:1:10: fatal error: 'Hello.h' file not found. #include ""Hello.h"". ^~~~~~~~~. input_line_15:1:10: fatal error: 'Aclock.h' file not found. #include ""Aclock.h"". ^~~~~~~~~~. input_line_16:1:10: fatal error: 'Tetris.h' file not found. #include ""Tetris.h"". ^~~~~~~~~~. In file included from input_line_17:1:. ./games.C:72:23: error: allocation of incomplete type 'Hello'. Hello *hello = new Hello();. ^~~~~. ./games.C:65:7: note: forward declaration of 'Hello'. class Hello;. ^. input_line_19:2:3: error: use of undeclared identifier 'rungames'. (rungames()). ^. Error in <HandleInterpreterException>: Error evaluating expression (rungames()). Execution of your code was aborted. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7184:723,usability,Error,Error,723,"OK, well, it doesn't work for me:. ```. [bellenot@bbcc7x64 gui]$ root -l games.C. root [0]. Processing games.C... input_line_14:1:10: fatal error: 'Hello.h' file not found. #include ""Hello.h"". ^~~~~~~~~. input_line_15:1:10: fatal error: 'Aclock.h' file not found. #include ""Aclock.h"". ^~~~~~~~~~. input_line_16:1:10: fatal error: 'Tetris.h' file not found. #include ""Tetris.h"". ^~~~~~~~~~. In file included from input_line_17:1:. ./games.C:72:23: error: allocation of incomplete type 'Hello'. Hello *hello = new Hello();. ^~~~~. ./games.C:65:7: note: forward declaration of 'Hello'. class Hello;. ^. input_line_19:2:3: error: use of undeclared identifier 'rungames'. (rungames()). ^. Error in <HandleInterpreterException>: Error evaluating expression (rungames()). Execution of your code was aborted. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7184:8,deployability,fail,fails,8,"> macro fails if `${ROOTSYS}/test` is not in the include path.. games.C seems to do that already in my case, see below:. ```. /opt/root_bld/tutorials/gui $ root -l. root [0] .include. root [1] Int_t st1 = gSystem->Load(""$(ROOTSYS)/test/Aclock"");. root [2] st1. (int) 0. root [3] Int_t st2 = gSystem->Load(""$(ROOTSYS)/test/Hello"");. root [4] Int_t st3 = gSystem->Load(""$(ROOTSYS)/test/Tetris"");. root [5] st2. (int) 0. root [6] st3. (int) 0. root [7] .include. (...). /opt/root_bld/test/. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7184:214,energy efficiency,Load,Load,214,"> macro fails if `${ROOTSYS}/test` is not in the include path.. games.C seems to do that already in my case, see below:. ```. /opt/root_bld/tutorials/gui $ root -l. root [0] .include. root [1] Int_t st1 = gSystem->Load(""$(ROOTSYS)/test/Aclock"");. root [2] st1. (int) 0. root [3] Int_t st2 = gSystem->Load(""$(ROOTSYS)/test/Hello"");. root [4] Int_t st3 = gSystem->Load(""$(ROOTSYS)/test/Tetris"");. root [5] st2. (int) 0. root [6] st3. (int) 0. root [7] .include. (...). /opt/root_bld/test/. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7184:300,energy efficiency,Load,Load,300,"> macro fails if `${ROOTSYS}/test` is not in the include path.. games.C seems to do that already in my case, see below:. ```. /opt/root_bld/tutorials/gui $ root -l. root [0] .include. root [1] Int_t st1 = gSystem->Load(""$(ROOTSYS)/test/Aclock"");. root [2] st1. (int) 0. root [3] Int_t st2 = gSystem->Load(""$(ROOTSYS)/test/Hello"");. root [4] Int_t st3 = gSystem->Load(""$(ROOTSYS)/test/Tetris"");. root [5] st2. (int) 0. root [6] st3. (int) 0. root [7] .include. (...). /opt/root_bld/test/. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7184:362,energy efficiency,Load,Load,362,"> macro fails if `${ROOTSYS}/test` is not in the include path.. games.C seems to do that already in my case, see below:. ```. /opt/root_bld/tutorials/gui $ root -l. root [0] .include. root [1] Int_t st1 = gSystem->Load(""$(ROOTSYS)/test/Aclock"");. root [2] st1. (int) 0. root [3] Int_t st2 = gSystem->Load(""$(ROOTSYS)/test/Hello"");. root [4] Int_t st3 = gSystem->Load(""$(ROOTSYS)/test/Tetris"");. root [5] st2. (int) 0. root [6] st3. (int) 0. root [7] .include. (...). /opt/root_bld/test/. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7184:214,performance,Load,Load,214,"> macro fails if `${ROOTSYS}/test` is not in the include path.. games.C seems to do that already in my case, see below:. ```. /opt/root_bld/tutorials/gui $ root -l. root [0] .include. root [1] Int_t st1 = gSystem->Load(""$(ROOTSYS)/test/Aclock"");. root [2] st1. (int) 0. root [3] Int_t st2 = gSystem->Load(""$(ROOTSYS)/test/Hello"");. root [4] Int_t st3 = gSystem->Load(""$(ROOTSYS)/test/Tetris"");. root [5] st2. (int) 0. root [6] st3. (int) 0. root [7] .include. (...). /opt/root_bld/test/. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7184:300,performance,Load,Load,300,"> macro fails if `${ROOTSYS}/test` is not in the include path.. games.C seems to do that already in my case, see below:. ```. /opt/root_bld/tutorials/gui $ root -l. root [0] .include. root [1] Int_t st1 = gSystem->Load(""$(ROOTSYS)/test/Aclock"");. root [2] st1. (int) 0. root [3] Int_t st2 = gSystem->Load(""$(ROOTSYS)/test/Hello"");. root [4] Int_t st3 = gSystem->Load(""$(ROOTSYS)/test/Tetris"");. root [5] st2. (int) 0. root [6] st3. (int) 0. root [7] .include. (...). /opt/root_bld/test/. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7184:362,performance,Load,Load,362,"> macro fails if `${ROOTSYS}/test` is not in the include path.. games.C seems to do that already in my case, see below:. ```. /opt/root_bld/tutorials/gui $ root -l. root [0] .include. root [1] Int_t st1 = gSystem->Load(""$(ROOTSYS)/test/Aclock"");. root [2] st1. (int) 0. root [3] Int_t st2 = gSystem->Load(""$(ROOTSYS)/test/Hello"");. root [4] Int_t st3 = gSystem->Load(""$(ROOTSYS)/test/Tetris"");. root [5] st2. (int) 0. root [6] st3. (int) 0. root [7] .include. (...). /opt/root_bld/test/. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7184:8,reliability,fail,fails,8,"> macro fails if `${ROOTSYS}/test` is not in the include path.. games.C seems to do that already in my case, see below:. ```. /opt/root_bld/tutorials/gui $ root -l. root [0] .include. root [1] Int_t st1 = gSystem->Load(""$(ROOTSYS)/test/Aclock"");. root [2] st1. (int) 0. root [3] Int_t st2 = gSystem->Load(""$(ROOTSYS)/test/Hello"");. root [4] Int_t st3 = gSystem->Load(""$(ROOTSYS)/test/Tetris"");. root [5] st2. (int) 0. root [6] st3. (int) 0. root [7] .include. (...). /opt/root_bld/test/. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7184:29,safety,test,test,29,"> macro fails if `${ROOTSYS}/test` is not in the include path.. games.C seems to do that already in my case, see below:. ```. /opt/root_bld/tutorials/gui $ root -l. root [0] .include. root [1] Int_t st1 = gSystem->Load(""$(ROOTSYS)/test/Aclock"");. root [2] st1. (int) 0. root [3] Int_t st2 = gSystem->Load(""$(ROOTSYS)/test/Hello"");. root [4] Int_t st3 = gSystem->Load(""$(ROOTSYS)/test/Tetris"");. root [5] st2. (int) 0. root [6] st3. (int) 0. root [7] .include. (...). /opt/root_bld/test/. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7184:231,safety,test,test,231,"> macro fails if `${ROOTSYS}/test` is not in the include path.. games.C seems to do that already in my case, see below:. ```. /opt/root_bld/tutorials/gui $ root -l. root [0] .include. root [1] Int_t st1 = gSystem->Load(""$(ROOTSYS)/test/Aclock"");. root [2] st1. (int) 0. root [3] Int_t st2 = gSystem->Load(""$(ROOTSYS)/test/Hello"");. root [4] Int_t st3 = gSystem->Load(""$(ROOTSYS)/test/Tetris"");. root [5] st2. (int) 0. root [6] st3. (int) 0. root [7] .include. (...). /opt/root_bld/test/. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7184:317,safety,test,test,317,"> macro fails if `${ROOTSYS}/test` is not in the include path.. games.C seems to do that already in my case, see below:. ```. /opt/root_bld/tutorials/gui $ root -l. root [0] .include. root [1] Int_t st1 = gSystem->Load(""$(ROOTSYS)/test/Aclock"");. root [2] st1. (int) 0. root [3] Int_t st2 = gSystem->Load(""$(ROOTSYS)/test/Hello"");. root [4] Int_t st3 = gSystem->Load(""$(ROOTSYS)/test/Tetris"");. root [5] st2. (int) 0. root [6] st3. (int) 0. root [7] .include. (...). /opt/root_bld/test/. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7184:379,safety,test,test,379,"> macro fails if `${ROOTSYS}/test` is not in the include path.. games.C seems to do that already in my case, see below:. ```. /opt/root_bld/tutorials/gui $ root -l. root [0] .include. root [1] Int_t st1 = gSystem->Load(""$(ROOTSYS)/test/Aclock"");. root [2] st1. (int) 0. root [3] Int_t st2 = gSystem->Load(""$(ROOTSYS)/test/Hello"");. root [4] Int_t st3 = gSystem->Load(""$(ROOTSYS)/test/Tetris"");. root [5] st2. (int) 0. root [6] st3. (int) 0. root [7] .include. (...). /opt/root_bld/test/. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7184:481,safety,test,test,481,"> macro fails if `${ROOTSYS}/test` is not in the include path.. games.C seems to do that already in my case, see below:. ```. /opt/root_bld/tutorials/gui $ root -l. root [0] .include. root [1] Int_t st1 = gSystem->Load(""$(ROOTSYS)/test/Aclock"");. root [2] st1. (int) 0. root [3] Int_t st2 = gSystem->Load(""$(ROOTSYS)/test/Hello"");. root [4] Int_t st3 = gSystem->Load(""$(ROOTSYS)/test/Tetris"");. root [5] st2. (int) 0. root [6] st3. (int) 0. root [7] .include. (...). /opt/root_bld/test/. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7184:29,testability,test,test,29,"> macro fails if `${ROOTSYS}/test` is not in the include path.. games.C seems to do that already in my case, see below:. ```. /opt/root_bld/tutorials/gui $ root -l. root [0] .include. root [1] Int_t st1 = gSystem->Load(""$(ROOTSYS)/test/Aclock"");. root [2] st1. (int) 0. root [3] Int_t st2 = gSystem->Load(""$(ROOTSYS)/test/Hello"");. root [4] Int_t st3 = gSystem->Load(""$(ROOTSYS)/test/Tetris"");. root [5] st2. (int) 0. root [6] st3. (int) 0. root [7] .include. (...). /opt/root_bld/test/. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7184:231,testability,test,test,231,"> macro fails if `${ROOTSYS}/test` is not in the include path.. games.C seems to do that already in my case, see below:. ```. /opt/root_bld/tutorials/gui $ root -l. root [0] .include. root [1] Int_t st1 = gSystem->Load(""$(ROOTSYS)/test/Aclock"");. root [2] st1. (int) 0. root [3] Int_t st2 = gSystem->Load(""$(ROOTSYS)/test/Hello"");. root [4] Int_t st3 = gSystem->Load(""$(ROOTSYS)/test/Tetris"");. root [5] st2. (int) 0. root [6] st3. (int) 0. root [7] .include. (...). /opt/root_bld/test/. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7184:317,testability,test,test,317,"> macro fails if `${ROOTSYS}/test` is not in the include path.. games.C seems to do that already in my case, see below:. ```. /opt/root_bld/tutorials/gui $ root -l. root [0] .include. root [1] Int_t st1 = gSystem->Load(""$(ROOTSYS)/test/Aclock"");. root [2] st1. (int) 0. root [3] Int_t st2 = gSystem->Load(""$(ROOTSYS)/test/Hello"");. root [4] Int_t st3 = gSystem->Load(""$(ROOTSYS)/test/Tetris"");. root [5] st2. (int) 0. root [6] st3. (int) 0. root [7] .include. (...). /opt/root_bld/test/. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7184:379,testability,test,test,379,"> macro fails if `${ROOTSYS}/test` is not in the include path.. games.C seems to do that already in my case, see below:. ```. /opt/root_bld/tutorials/gui $ root -l. root [0] .include. root [1] Int_t st1 = gSystem->Load(""$(ROOTSYS)/test/Aclock"");. root [2] st1. (int) 0. root [3] Int_t st2 = gSystem->Load(""$(ROOTSYS)/test/Hello"");. root [4] Int_t st3 = gSystem->Load(""$(ROOTSYS)/test/Tetris"");. root [5] st2. (int) 0. root [6] st3. (int) 0. root [7] .include. (...). /opt/root_bld/test/. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7184:481,testability,test,test,481,"> macro fails if `${ROOTSYS}/test` is not in the include path.. games.C seems to do that already in my case, see below:. ```. /opt/root_bld/tutorials/gui $ root -l. root [0] .include. root [1] Int_t st1 = gSystem->Load(""$(ROOTSYS)/test/Aclock"");. root [2] st1. (int) 0. root [3] Int_t st2 = gSystem->Load(""$(ROOTSYS)/test/Hello"");. root [4] Int_t st3 = gSystem->Load(""$(ROOTSYS)/test/Tetris"");. root [5] st2. (int) 0. root [6] st3. (int) 0. root [7] .include. (...). /opt/root_bld/test/. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7184
https://github.com/root-project/root/pull/7186:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:163,availability,servic,services,163,> Build failed on ROOT-ubuntu16/nortcxxmod. > Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMak,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:248,availability,Error,Errors,248,> Build failed on ROOT-ubuntu16/nortcxxmod. > Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMak,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:2262,availability,error,error,2262,"ation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_gaussian. The multivariate Gaussian random number generation in GSL was only introduced in version 2.2.1. I bypass this with an `#ifdef` that will define the function if the GSL version is < 2.2 by simply copying it from a higher version of GSL. Hopefully, this doesn't break the GPL license under which GSL is distributed. I think that I could also replace the function call to `gsl_ran_multivariate_gaussian` with the wrapper's full implementation. I am open to comments. I don't have access to a windows machine now; I will do the same and use a virtual machine to test that part.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:2473,availability,error,error,2473,"ation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_gaussian. The multivariate Gaussian random number generation in GSL was only introduced in version 2.2.1. I bypass this with an `#ifdef` that will define the function if the GSL version is < 2.2 by simply copying it from a higher version of GSL. Hopefully, this doesn't break the GPL license under which GSL is distributed. I think that I could also replace the function call to `gsl_ran_multivariate_gaussian` with the wrapper's full implementation. I am open to comments. I don't have access to a windows machine now; I will do the same and use a virtual machine to test that part.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:2,deployability,Build,Build,2,> Build failed on ROOT-ubuntu16/nortcxxmod. > Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMak,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:8,deployability,fail,failed,8,> Build failed on ROOT-ubuntu16/nortcxxmod. > Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMak,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:84,deployability,build,build,84,> Build failed on ROOT-ubuntu16/nortcxxmod. > Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMak,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:118,deployability,build,build,118,> Build failed on ROOT-ubuntu16/nortcxxmod. > Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMak,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:163,deployability,servic,services,163,> Build failed on ROOT-ubuntu16/nortcxxmod. > Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMak,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:215,deployability,build,build,215,> Build failed on ROOT-ubuntu16/nortcxxmod. > Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMak,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:288,deployability,FAIL,FAILED,288,> Build failed on ROOT-ubuntu16/nortcxxmod. > Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMak,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:352,deployability,build,build,352,> Build failed on ROOT-ubuntu16/nortcxxmod. > Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMak,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:386,deployability,build,build,386,> Build failed on ROOT-ubuntu16/nortcxxmod. > Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMak,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:422,deployability,build,build,422,> Build failed on ROOT-ubuntu16/nortcxxmod. > Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMak,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:456,deployability,build,build,456,> Build failed on ROOT-ubuntu16/nortcxxmod. > Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMak,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:488,deployability,build,build,488,> Build failed on ROOT-ubuntu16/nortcxxmod. > Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMak,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:522,deployability,build,build,522,> Build failed on ROOT-ubuntu16/nortcxxmod. > Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMak,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:560,deployability,build,build,560,> Build failed on ROOT-ubuntu16/nortcxxmod. > Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMak,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:594,deployability,build,build,594,> Build failed on ROOT-ubuntu16/nortcxxmod. > Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMak,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:631,deployability,build,build,631,> Build failed on ROOT-ubuntu16/nortcxxmod. > Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMak,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:665,deployability,build,build,665,> Build failed on ROOT-ubuntu16/nortcxxmod. > Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMak,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:699,deployability,build,build,699,> Build failed on ROOT-ubuntu16/nortcxxmod. > Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMak,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:733,deployability,build,build,733,> Build failed on ROOT-ubuntu16/nortcxxmod. > Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMak,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:764,deployability,build,build,764,> Build failed on ROOT-ubuntu16/nortcxxmod. > Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMak,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:798,deployability,build,build,798,> Build failed on ROOT-ubuntu16/nortcxxmod. > Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMak,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:830,deployability,build,build,830,> Build failed on ROOT-ubuntu16/nortcxxmod. > Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMak,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:864,deployability,build,build,864,> Build failed on ROOT-ubuntu16/nortcxxmod. > Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMak,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:896,deployability,build,build,896,> Build failed on ROOT-ubuntu16/nortcxxmod. > Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMak,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:930,deployability,build,build,930,> Build failed on ROOT-ubuntu16/nortcxxmod. > Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMak,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:962,deployability,build,build,962,> Build failed on ROOT-ubuntu16/nortcxxmod. > Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMak,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:996,deployability,build,build,996,> Build failed on ROOT-ubuntu16/nortcxxmod. > Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMak,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:1027,deployability,build,build,1027,6/nortcxxmod. > Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRnd,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:1061,deployability,build,build,1061,ntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/works,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:1093,deployability,build,build,1093,ace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:1127,deployability,build,build,1127,e console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:1165,deployability,build,build,1165,ces.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:1199,deployability,build,build,1199,pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullreque,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:1242,deployability,build,build,1242,## Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEng,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:1276,deployability,build,build,1276,58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_m,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:1312,deployability,build,build,1312,r/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declar,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:1346,deployability,build,build,1346,nt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it to,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:1385,deployability,build,build,1385,ild/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:1419,deployability,build,build,1419,build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual ma,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:1450,deployability,build,build,1450,"ts-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:1484,deployability,build,build,1484,"/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:1530,deployability,build,build,1530,"core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, wh",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:1564,deployability,build,build,1564,"orkspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_ga",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:1570,deployability,instal,install,1570,"e/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_gaussian.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:1593,deployability,build,build,1593,"ild/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_gaussian. The multivariate Gaus",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:1627,deployability,build,build,1627,"/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_gaussian. The multivariate Gaussian random number generation in G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:1657,deployability,build,build,1657,"ests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_gaussian. The multivariate Gaussian random number generation in GSL was only introduced in vers",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:1691,deployability,build,build,1691,"/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_gaussian. The multivariate Gaussian random number generation in GSL was only introduced in version 2.2.1. I bypass this with an `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:2053,deployability,build,build,2053,"ests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_gaussian. The multivariate Gaussian random number generation in GSL was only introduced in version 2.2.1. I bypass this with an `#ifdef` that will define the function if the GSL version is < 2.2 by simply copying it from a higher version of GSL. Hopefully, this doesn't break the GPL license under which GSL is distributed. I think that I could also replace the function call to `gsl_ran_multivariate_gaussian` with the wrapper's full implementation. I am open to comments. I don't have acce",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:2087,deployability,build,build,2087,"nt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_gaussian. The multivariate Gaussian random number generation in GSL was only introduced in version 2.2.1. I bypass this with an `#ifdef` that will define the function if the GSL version is < 2.2 by simply copying it from a higher version of GSL. Hopefully, this doesn't break the GPL license under which GSL is distributed. I think that I could also replace the function call to `gsl_ran_multivariate_gaussian` with the wrapper's full implementation. I am open to comments. I don't have access to a windows machine now; I wil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:2172,deployability,build,build,2172,"ation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_gaussian. The multivariate Gaussian random number generation in GSL was only introduced in version 2.2.1. I bypass this with an `#ifdef` that will define the function if the GSL version is < 2.2 by simply copying it from a higher version of GSL. Hopefully, this doesn't break the GPL license under which GSL is distributed. I think that I could also replace the function call to `gsl_ran_multivariate_gaussian` with the wrapper's full implementation. I am open to comments. I don't have access to a windows machine now; I will do the same and use a virtual machine to test that part.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:2206,deployability,build,build,2206,"ation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_gaussian. The multivariate Gaussian random number generation in GSL was only introduced in version 2.2.1. I bypass this with an `#ifdef` that will define the function if the GSL version is < 2.2 by simply copying it from a higher version of GSL. Hopefully, this doesn't break the GPL license under which GSL is distributed. I think that I could also replace the function call to `gsl_ran_multivariate_gaussian` with the wrapper's full implementation. I am open to comments. I don't have access to a windows machine now; I will do the same and use a virtual machine to test that part.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:2518,deployability,version,version,2518,"ation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_gaussian. The multivariate Gaussian random number generation in GSL was only introduced in version 2.2.1. I bypass this with an `#ifdef` that will define the function if the GSL version is < 2.2 by simply copying it from a higher version of GSL. Hopefully, this doesn't break the GPL license under which GSL is distributed. I think that I could also replace the function call to `gsl_ran_multivariate_gaussian` with the wrapper's full implementation. I am open to comments. I don't have access to a windows machine now; I will do the same and use a virtual machine to test that part.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:2656,deployability,version,version,2656,"ation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_gaussian. The multivariate Gaussian random number generation in GSL was only introduced in version 2.2.1. I bypass this with an `#ifdef` that will define the function if the GSL version is < 2.2 by simply copying it from a higher version of GSL. Hopefully, this doesn't break the GPL license under which GSL is distributed. I think that I could also replace the function call to `gsl_ran_multivariate_gaussian` with the wrapper's full implementation. I am open to comments. I don't have access to a windows machine now; I will do the same and use a virtual machine to test that part.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:2743,deployability,version,version,2743,"ation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_gaussian. The multivariate Gaussian random number generation in GSL was only introduced in version 2.2.1. I bypass this with an `#ifdef` that will define the function if the GSL version is < 2.2 by simply copying it from a higher version of GSL. Hopefully, this doesn't break the GPL license under which GSL is distributed. I think that I could also replace the function call to `gsl_ran_multivariate_gaussian` with the wrapper's full implementation. I am open to comments. I don't have access to a windows machine now; I will do the same and use a virtual machine to test that part.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:2795,deployability,version,version,2795,"ation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_gaussian. The multivariate Gaussian random number generation in GSL was only introduced in version 2.2.1. I bypass this with an `#ifdef` that will define the function if the GSL version is < 2.2 by simply copying it from a higher version of GSL. Hopefully, this doesn't break the GPL license under which GSL is distributed. I think that I could also replace the function call to `gsl_ran_multivariate_gaussian` with the wrapper's full implementation. I am open to comments. I don't have access to a windows machine now; I will do the same and use a virtual machine to test that part.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:467,energy efficiency,core,core,467,> Build failed on ROOT-ubuntu16/nortcxxmod. > Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMak,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:533,energy efficiency,core,core,533,> Build failed on ROOT-ubuntu16/nortcxxmod. > Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMak,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:605,energy efficiency,core,core,605,> Build failed on ROOT-ubuntu16/nortcxxmod. > Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMak,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:676,energy efficiency,core,core,676,> Build failed on ROOT-ubuntu16/nortcxxmod. > Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMak,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:744,energy efficiency,core,core,744,> Build failed on ROOT-ubuntu16/nortcxxmod. > Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMak,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:809,energy efficiency,core,core,809,> Build failed on ROOT-ubuntu16/nortcxxmod. > Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMak,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:875,energy efficiency,core,core,875,> Build failed on ROOT-ubuntu16/nortcxxmod. > Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMak,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:941,energy efficiency,core,core,941,> Build failed on ROOT-ubuntu16/nortcxxmod. > Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMak,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:1007,energy efficiency,core,core,1007,ailed on ROOT-ubuntu16/nortcxxmod. > Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/Ma,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:1072,energy efficiency,core,core,1072,.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:1138,energy efficiency,core,core,1138,output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:1210,energy efficiency,core,core,1210,ts-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:1430,energy efficiency,core,core,1430,space/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:1495,energy efficiency,core,core,1495,"kspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ub",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:163,integrability,servic,services,163,> Build failed on ROOT-ubuntu16/nortcxxmod. > Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMak,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:2518,integrability,version,version,2518,"ation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_gaussian. The multivariate Gaussian random number generation in GSL was only introduced in version 2.2.1. I bypass this with an `#ifdef` that will define the function if the GSL version is < 2.2 by simply copying it from a higher version of GSL. Hopefully, this doesn't break the GPL license under which GSL is distributed. I think that I could also replace the function call to `gsl_ran_multivariate_gaussian` with the wrapper's full implementation. I am open to comments. I don't have access to a windows machine now; I will do the same and use a virtual machine to test that part.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:2656,integrability,version,version,2656,"ation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_gaussian. The multivariate Gaussian random number generation in GSL was only introduced in version 2.2.1. I bypass this with an `#ifdef` that will define the function if the GSL version is < 2.2 by simply copying it from a higher version of GSL. Hopefully, this doesn't break the GPL license under which GSL is distributed. I think that I could also replace the function call to `gsl_ran_multivariate_gaussian` with the wrapper's full implementation. I am open to comments. I don't have access to a windows machine now; I will do the same and use a virtual machine to test that part.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:2743,integrability,version,version,2743,"ation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_gaussian. The multivariate Gaussian random number generation in GSL was only introduced in version 2.2.1. I bypass this with an `#ifdef` that will define the function if the GSL version is < 2.2 by simply copying it from a higher version of GSL. Hopefully, this doesn't break the GPL license under which GSL is distributed. I think that I could also replace the function call to `gsl_ran_multivariate_gaussian` with the wrapper's full implementation. I am open to comments. I don't have access to a windows machine now; I will do the same and use a virtual machine to test that part.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:2795,integrability,version,version,2795,"ation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_gaussian. The multivariate Gaussian random number generation in GSL was only introduced in version 2.2.1. I bypass this with an `#ifdef` that will define the function if the GSL version is < 2.2 by simply copying it from a higher version of GSL. Hopefully, this doesn't break the GPL license under which GSL is distributed. I think that I could also replace the function call to `gsl_ran_multivariate_gaussian` with the wrapper's full implementation. I am open to comments. I don't have access to a windows machine now; I will do the same and use a virtual machine to test that part.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:2985,integrability,wrap,wrapper,2985,"ation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_gaussian. The multivariate Gaussian random number generation in GSL was only introduced in version 2.2.1. I bypass this with an `#ifdef` that will define the function if the GSL version is < 2.2 by simply copying it from a higher version of GSL. Hopefully, this doesn't break the GPL license under which GSL is distributed. I think that I could also replace the function call to `gsl_ran_multivariate_gaussian` with the wrapper's full implementation. I am open to comments. I don't have access to a windows machine now; I will do the same and use a virtual machine to test that part.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:2876,interoperability,distribut,distributed,2876,"ation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_gaussian. The multivariate Gaussian random number generation in GSL was only introduced in version 2.2.1. I bypass this with an `#ifdef` that will define the function if the GSL version is < 2.2 by simply copying it from a higher version of GSL. Hopefully, this doesn't break the GPL license under which GSL is distributed. I think that I could also replace the function call to `gsl_ran_multivariate_gaussian` with the wrapper's full implementation. I am open to comments. I don't have access to a windows machine now; I will do the same and use a virtual machine to test that part.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:2985,interoperability,wrapper,wrapper,2985,"ation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_gaussian. The multivariate Gaussian random number generation in GSL was only introduced in version 2.2.1. I bypass this with an `#ifdef` that will define the function if the GSL version is < 2.2 by simply copying it from a higher version of GSL. Hopefully, this doesn't break the GPL license under which GSL is distributed. I think that I could also replace the function call to `gsl_ran_multivariate_gaussian` with the wrapper's full implementation. I am open to comments. I don't have access to a windows machine now; I will do the same and use a virtual machine to test that part.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:163,modifiability,servic,services,163,> Build failed on ROOT-ubuntu16/nortcxxmod. > Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMak,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:2518,modifiability,version,version,2518,"ation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_gaussian. The multivariate Gaussian random number generation in GSL was only introduced in version 2.2.1. I bypass this with an `#ifdef` that will define the function if the GSL version is < 2.2 by simply copying it from a higher version of GSL. Hopefully, this doesn't break the GPL license under which GSL is distributed. I think that I could also replace the function call to `gsl_ran_multivariate_gaussian` with the wrapper's full implementation. I am open to comments. I don't have access to a windows machine now; I will do the same and use a virtual machine to test that part.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:2656,modifiability,version,version,2656,"ation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_gaussian. The multivariate Gaussian random number generation in GSL was only introduced in version 2.2.1. I bypass this with an `#ifdef` that will define the function if the GSL version is < 2.2 by simply copying it from a higher version of GSL. Hopefully, this doesn't break the GPL license under which GSL is distributed. I think that I could also replace the function call to `gsl_ran_multivariate_gaussian` with the wrapper's full implementation. I am open to comments. I don't have access to a windows machine now; I will do the same and use a virtual machine to test that part.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:2743,modifiability,version,version,2743,"ation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_gaussian. The multivariate Gaussian random number generation in GSL was only introduced in version 2.2.1. I bypass this with an `#ifdef` that will define the function if the GSL version is < 2.2 by simply copying it from a higher version of GSL. Hopefully, this doesn't break the GPL license under which GSL is distributed. I think that I could also replace the function call to `gsl_ran_multivariate_gaussian` with the wrapper's full implementation. I am open to comments. I don't have access to a windows machine now; I will do the same and use a virtual machine to test that part.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:2795,modifiability,version,version,2795,"ation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_gaussian. The multivariate Gaussian random number generation in GSL was only introduced in version 2.2.1. I bypass this with an `#ifdef` that will define the function if the GSL version is < 2.2 by simply copying it from a higher version of GSL. Hopefully, this doesn't break the GPL license under which GSL is distributed. I think that I could also replace the function call to `gsl_ran_multivariate_gaussian` with the wrapper's full implementation. I am open to comments. I don't have access to a windows machine now; I will do the same and use a virtual machine to test that part.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:248,performance,Error,Errors,248,> Build failed on ROOT-ubuntu16/nortcxxmod. > Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMak,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:2262,performance,error,error,2262,"ation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_gaussian. The multivariate Gaussian random number generation in GSL was only introduced in version 2.2.1. I bypass this with an `#ifdef` that will define the function if the GSL version is < 2.2 by simply copying it from a higher version of GSL. Hopefully, this doesn't break the GPL license under which GSL is distributed. I think that I could also replace the function call to `gsl_ran_multivariate_gaussian` with the wrapper's full implementation. I am open to comments. I don't have access to a windows machine now; I will do the same and use a virtual machine to test that part.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:2473,performance,error,error,2473,"ation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_gaussian. The multivariate Gaussian random number generation in GSL was only introduced in version 2.2.1. I bypass this with an `#ifdef` that will define the function if the GSL version is < 2.2 by simply copying it from a higher version of GSL. Hopefully, this doesn't break the GPL license under which GSL is distributed. I think that I could also replace the function call to `gsl_ran_multivariate_gaussian` with the wrapper's full implementation. I am open to comments. I don't have access to a windows machine now; I will do the same and use a virtual machine to test that part.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:8,reliability,fail,failed,8,> Build failed on ROOT-ubuntu16/nortcxxmod. > Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMak,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:288,reliability,FAIL,FAILED,288,> Build failed on ROOT-ubuntu16/nortcxxmod. > Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMak,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:2827,reliability,doe,doesn,2827,"ation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_gaussian. The multivariate Gaussian random number generation in GSL was only introduced in version 2.2.1. I bypass this with an `#ifdef` that will define the function if the GSL version is < 2.2 by simply copying it from a higher version of GSL. Hopefully, this doesn't break the GPL license under which GSL is distributed. I think that I could also replace the function call to `gsl_ran_multivariate_gaussian` with the wrapper's full implementation. I am open to comments. I don't have access to a windows machine now; I will do the same and use a virtual machine to test that part.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:248,safety,Error,Errors,248,> Build failed on ROOT-ubuntu16/nortcxxmod. > Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMak,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:2262,safety,error,error,2262,"ation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_gaussian. The multivariate Gaussian random number generation in GSL was only introduced in version 2.2.1. I bypass this with an `#ifdef` that will define the function if the GSL version is < 2.2 by simply copying it from a higher version of GSL. Hopefully, this doesn't break the GPL license under which GSL is distributed. I think that I could also replace the function call to `gsl_ran_multivariate_gaussian` with the wrapper's full implementation. I am open to comments. I don't have access to a windows machine now; I will do the same and use a virtual machine to test that part.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:2432,safety,test,testing,2432,"ation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_gaussian. The multivariate Gaussian random number generation in GSL was only introduced in version 2.2.1. I bypass this with an `#ifdef` that will define the function if the GSL version is < 2.2 by simply copying it from a higher version of GSL. Hopefully, this doesn't break the GPL license under which GSL is distributed. I think that I could also replace the function call to `gsl_ran_multivariate_gaussian` with the wrapper's full implementation. I am open to comments. I don't have access to a windows machine now; I will do the same and use a virtual machine to test that part.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:2473,safety,error,error,2473,"ation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_gaussian. The multivariate Gaussian random number generation in GSL was only introduced in version 2.2.1. I bypass this with an `#ifdef` that will define the function if the GSL version is < 2.2 by simply copying it from a higher version of GSL. Hopefully, this doesn't break the GPL license under which GSL is distributed. I think that I could also replace the function call to `gsl_ran_multivariate_gaussian` with the wrapper's full implementation. I am open to comments. I don't have access to a windows machine now; I will do the same and use a virtual machine to test that part.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:3133,safety,test,test,3133,"ation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_gaussian. The multivariate Gaussian random number generation in GSL was only introduced in version 2.2.1. I bypass this with an `#ifdef` that will define the function if the GSL version is < 2.2 by simply copying it from a higher version of GSL. Hopefully, this doesn't break the GPL license under which GSL is distributed. I think that I could also replace the function call to `gsl_ran_multivariate_gaussian` with the wrapper's full implementation. I am open to comments. I don't have access to a windows machine now; I will do the same and use a virtual machine to test that part.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:3052,security,access,access,3052,"ation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_gaussian. The multivariate Gaussian random number generation in GSL was only introduced in version 2.2.1. I bypass this with an `#ifdef` that will define the function if the GSL version is < 2.2 by simply copying it from a higher version of GSL. Hopefully, this doesn't break the GPL license under which GSL is distributed. I think that I could also replace the function call to `gsl_ran_multivariate_gaussian` with the wrapper's full implementation. I am open to comments. I don't have access to a windows machine now; I will do the same and use a virtual machine to test that part.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:2432,testability,test,testing,2432,"ation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_gaussian. The multivariate Gaussian random number generation in GSL was only introduced in version 2.2.1. I bypass this with an `#ifdef` that will define the function if the GSL version is < 2.2 by simply copying it from a higher version of GSL. Hopefully, this doesn't break the GPL license under which GSL is distributed. I think that I could also replace the function call to `gsl_ran_multivariate_gaussian` with the wrapper's full implementation. I am open to comments. I don't have access to a windows machine now; I will do the same and use a virtual machine to test that part.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:2763,testability,simpl,simply,2763,"ation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_gaussian. The multivariate Gaussian random number generation in GSL was only introduced in version 2.2.1. I bypass this with an `#ifdef` that will define the function if the GSL version is < 2.2 by simply copying it from a higher version of GSL. Hopefully, this doesn't break the GPL license under which GSL is distributed. I think that I could also replace the function call to `gsl_ran_multivariate_gaussian` with the wrapper's full implementation. I am open to comments. I don't have access to a windows machine now; I will do the same and use a virtual machine to test that part.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:3133,testability,test,test,3133,"ation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_gaussian. The multivariate Gaussian random number generation in GSL was only introduced in version 2.2.1. I bypass this with an `#ifdef` that will define the function if the GSL version is < 2.2 by simply copying it from a higher version of GSL. Hopefully, this doesn't break the GPL license under which GSL is distributed. I think that I could also replace the function call to `gsl_ran_multivariate_gaussian` with the wrapper's full implementation. I am open to comments. I don't have access to a windows machine now; I will do the same and use a virtual machine to test that part.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:248,usability,Error,Errors,248,> Build failed on ROOT-ubuntu16/nortcxxmod. > Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108296/console). > . > ### Errors:. > * [2021-03-01T16:00:58.827Z] FAILED: /usr/bin/ccache /usr/bin/c++ -DVECCORE_ENABLE_VC -I/mnt/build/workspace/root-pullrequests-build/root/math/mathmore/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/unix/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/textinput/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/rint/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMak,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:2262,usability,error,error,2262,"ation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_gaussian. The multivariate Gaussian random number generation in GSL was only introduced in version 2.2.1. I bypass this with an `#ifdef` that will define the function if the GSL version is < 2.2 by simply copying it from a higher version of GSL. Hopefully, this doesn't break the GPL license under which GSL is distributed. I think that I could also replace the function call to `gsl_ran_multivariate_gaussian` with the wrapper's full implementation. I am open to comments. I don't have access to a windows machine now; I will do the same and use a virtual machine to test that part.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:2473,usability,error,error,2473,"ation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_gaussian. The multivariate Gaussian random number generation in GSL was only introduced in version 2.2.1. I bypass this with an `#ifdef` that will define the function if the GSL version is < 2.2 by simply copying it from a higher version of GSL. Hopefully, this doesn't break the GPL license under which GSL is distributed. I think that I could also replace the function call to `gsl_ran_multivariate_gaussian` with the wrapper's full implementation. I am open to comments. I don't have access to a windows machine now; I will do the same and use a virtual machine to test that part.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:2763,usability,simpl,simply,2763,"ation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx. > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_gaussian. The multivariate Gaussian random number generation in GSL was only introduced in version 2.2.1. I bypass this with an `#ifdef` that will define the function if the GSL version is < 2.2 by simply copying it from a higher version of GSL. Hopefully, this doesn't break the GPL license under which GSL is distributed. I think that I could also replace the function call to `gsl_ran_multivariate_gaussian` with the wrapper's full implementation. I am open to comments. I don't have access to a windows machine now; I will do the same and use a virtual machine to test that part.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu16/nortcxxmod!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:54,deployability,version,versions,54,Thank you for the contribution and for fixing for GSL versions < 2.1 . Looks good to me and I will merge it now,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:54,integrability,version,versions,54,Thank you for the contribution and for fixing for GSL versions < 2.1 . Looks good to me and I will merge it now,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/pull/7186:54,modifiability,version,versions,54,Thank you for the contribution and for fixing for GSL versions < 2.1 . Looks good to me and I will merge it now,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7186
https://github.com/root-project/root/issues/7187:96,testability,trace,traces,96,"Hi @stwunsch, let me comment on this issue. . This hogging is expected and due to the fact that traces in the AST are left upon interpretation of code by cling. However, for PyROOT, which is the case that triggered the creation of this issue, the problem has been fixed: https://github.com/root-project/root/pull/13901",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7187
https://github.com/root-project/root/pull/7190:27,safety,review,review,27,@vgvassilev Can you please review the PR?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7190
https://github.com/root-project/root/pull/7190:27,testability,review,review,27,@vgvassilev Can you please review the PR?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7190
https://github.com/root-project/root/pull/7190:12,availability,failur,failure,12,The windows failure seems unrelated to the changes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7190
https://github.com/root-project/root/pull/7190:12,deployability,fail,failure,12,The windows failure seems unrelated to the changes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7190
https://github.com/root-project/root/pull/7190:12,performance,failur,failure,12,The windows failure seems unrelated to the changes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7190
https://github.com/root-project/root/pull/7190:12,reliability,fail,failure,12,The windows failure seems unrelated to the changes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7190
https://github.com/root-project/root/pull/7190:14,availability,failur,failure,14,"> The windows failure seems unrelated to the changes. Yes Axel also mentioned is this PR, that is unrelated: https://github.com/root-project/root/pull/6707#issuecomment-773865371 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7190
https://github.com/root-project/root/pull/7190:14,deployability,fail,failure,14,"> The windows failure seems unrelated to the changes. Yes Axel also mentioned is this PR, that is unrelated: https://github.com/root-project/root/pull/6707#issuecomment-773865371 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7190
https://github.com/root-project/root/pull/7190:14,performance,failur,failure,14,"> The windows failure seems unrelated to the changes. Yes Axel also mentioned is this PR, that is unrelated: https://github.com/root-project/root/pull/6707#issuecomment-773865371 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7190
https://github.com/root-project/root/pull/7190:14,reliability,fail,failure,14,"> The windows failure seems unrelated to the changes. Yes Axel also mentioned is this PR, that is unrelated: https://github.com/root-project/root/pull/6707#issuecomment-773865371 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7190
https://github.com/root-project/root/pull/7193:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:278,availability,consist,consistently,278,"I added the TH1 changes, this leads to a lot of warnings,. I guess this comes from implementations expecting the old interfaces. Should I keep the old interfaces as well so whatever was implementing them to ""see"" what's expected ? (excuse my ignorance but I haven't been coding consistently for some time to remember this much by heart)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:117,integrability,interfac,interfaces,117,"I added the TH1 changes, this leads to a lot of warnings,. I guess this comes from implementations expecting the old interfaces. Should I keep the old interfaces as well so whatever was implementing them to ""see"" what's expected ? (excuse my ignorance but I haven't been coding consistently for some time to remember this much by heart)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:151,integrability,interfac,interfaces,151,"I added the TH1 changes, this leads to a lot of warnings,. I guess this comes from implementations expecting the old interfaces. Should I keep the old interfaces as well so whatever was implementing them to ""see"" what's expected ? (excuse my ignorance but I haven't been coding consistently for some time to remember this much by heart)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:117,interoperability,interfac,interfaces,117,"I added the TH1 changes, this leads to a lot of warnings,. I guess this comes from implementations expecting the old interfaces. Should I keep the old interfaces as well so whatever was implementing them to ""see"" what's expected ? (excuse my ignorance but I haven't been coding consistently for some time to remember this much by heart)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:151,interoperability,interfac,interfaces,151,"I added the TH1 changes, this leads to a lot of warnings,. I guess this comes from implementations expecting the old interfaces. Should I keep the old interfaces as well so whatever was implementing them to ""see"" what's expected ? (excuse my ignorance but I haven't been coding consistently for some time to remember this much by heart)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:117,modifiability,interfac,interfaces,117,"I added the TH1 changes, this leads to a lot of warnings,. I guess this comes from implementations expecting the old interfaces. Should I keep the old interfaces as well so whatever was implementing them to ""see"" what's expected ? (excuse my ignorance but I haven't been coding consistently for some time to remember this much by heart)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:151,modifiability,interfac,interfaces,151,"I added the TH1 changes, this leads to a lot of warnings,. I guess this comes from implementations expecting the old interfaces. Should I keep the old interfaces as well so whatever was implementing them to ""see"" what's expected ? (excuse my ignorance but I haven't been coding consistently for some time to remember this much by heart)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:300,performance,time,time,300,"I added the TH1 changes, this leads to a lot of warnings,. I guess this comes from implementations expecting the old interfaces. Should I keep the old interfaces as well so whatever was implementing them to ""see"" what's expected ? (excuse my ignorance but I haven't been coding consistently for some time to remember this much by heart)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:308,safety,reme,remember,308,"I added the TH1 changes, this leads to a lot of warnings,. I guess this comes from implementations expecting the old interfaces. Should I keep the old interfaces as well so whatever was implementing them to ""see"" what's expected ? (excuse my ignorance but I haven't been coding consistently for some time to remember this much by heart)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:278,usability,consist,consistently,278,"I added the TH1 changes, this leads to a lot of warnings,. I guess this comes from implementations expecting the old interfaces. Should I keep the old interfaces as well so whatever was implementing them to ""see"" what's expected ? (excuse my ignorance but I haven't been coding consistently for some time to remember this much by heart)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:87,reliability,doe,doesn,87,never mind the last question if the old ifaces are kept this leads to ambiguity and it doesn't compile,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:15,testability,understand,understand,15,@lmoneta did I understand correct how to get also the TH1 changes ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:127,safety,avoid,avoiding,127,"Hi, . Do you need to have the changes in GetRandom in 6.22 ? . These are more feature changes than bug fixes, so I will prefer avoiding the back port. Anyway, yes this should be in case a separate PR to distinguish the two cases. . Furthermore, if we back port the fix in TF1::Copy we should also back port this one too, . https://github.com/root-project/root/pull/7274. If you have trouble doing this back port, I can do it. But please confirm, what exactly you need to be back ported in 6.22. Cheers . Lorenzo. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:120,usability,prefer,prefer,120,"Hi, . Do you need to have the changes in GetRandom in 6.22 ? . These are more feature changes than bug fixes, so I will prefer avoiding the back port. Anyway, yes this should be in case a separate PR to distinguish the two cases. . Furthermore, if we back port the fix in TF1::Copy we should also back port this one too, . https://github.com/root-project/root/pull/7274. If you have trouble doing this back port, I can do it. But please confirm, what exactly you need to be back ported in 6.22. Cheers . Lorenzo. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:437,usability,confirm,confirm,437,"Hi, . Do you need to have the changes in GetRandom in 6.22 ? . These are more feature changes than bug fixes, so I will prefer avoiding the back port. Anyway, yes this should be in case a separate PR to distinguish the two cases. . Furthermore, if we back port the fix in TF1::Copy we should also back port this one too, . https://github.com/root-project/root/pull/7274. If you have trouble doing this back port, I can do it. But please confirm, what exactly you need to be back ported in 6.22. Cheers . Lorenzo. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:11,safety,avoid,avoiding,11,"I'd prefer avoiding it, too. All I need is the changes in TFormula and it's ClassDef . change:. https://github.com/root-project/root/pull/7193/files#diff-ca4416e47d798b9a8d5fbf80c478df1437d0ea6a9def18939f8d9c6d29869906R254. If I take line 96 and 254 alone, where I assume 96 is the reason for incrementing the ClassDef . will that be enough ? I need the TFormula ClassDef change, thats it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:4,usability,prefer,prefer,4,"I'd prefer avoiding it, too. All I need is the changes in TFormula and it's ClassDef . change:. https://github.com/root-project/root/pull/7193/files#diff-ca4416e47d798b9a8d5fbf80c478df1437d0ea6a9def18939f8d9c6d29869906R254. If I take line 96 and 254 alone, where I assume 96 is the reason for incrementing the ClassDef . will that be enough ? I need the TFormula ClassDef change, thats it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:151,safety,avoid,avoids,151,@lmoneta I took only the TFormula changes that I need . `std::unique_ptr<TMethodCall> fMethod` is private so I don't see how it can be a problem. this avoids the other backports,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:253,deployability,updat,updating,253,"Yes, this back port should be fine, also fMethod is transient so there will be no issue in the I/O. . If you need the back port for the TF1 (memory leak fixes in TF1 Copy) we can add as a separate PR. I will run the CI before merging it . Thank you for updating this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:95,performance,I/O,I/O,95,"Yes, this back port should be fine, also fMethod is transient so there will be no issue in the I/O. . If you need the back port for the TF1 (memory leak fixes in TF1 Copy) we can add as a separate PR. I will run the CI before merging it . Thank you for updating this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:141,performance,memor,memory,141,"Yes, this back port should be fine, also fMethod is transient so there will be no issue in the I/O. . If you need the back port for the TF1 (memory leak fixes in TF1 Copy) we can add as a separate PR. I will run the CI before merging it . Thank you for updating this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:253,safety,updat,updating,253,"Yes, this back port should be fine, also fMethod is transient so there will be no issue in the I/O. . If you need the back port for the TF1 (memory leak fixes in TF1 Copy) we can add as a separate PR. I will run the CI before merging it . Thank you for updating this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:253,security,updat,updating,253,"Yes, this back port should be fine, also fMethod is transient so there will be no issue in the I/O. . If you need the back port for the TF1 (memory leak fixes in TF1 Copy) we can add as a separate PR. I will run the CI before merging it . Thank you for updating this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:141,usability,memor,memory,141,"Yes, this back port should be fine, also fMethod is transient so there will be no issue in the I/O. . If you need the back port for the TF1 (memory leak fixes in TF1 Copy) we can add as a separate PR. I will run the CI before merging it . Thank you for updating this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:76,availability,consist,consistent,76,"No, we don't need the TF1 changes. Only the TFormula ClassDef version to be consistent in 622 and master. We'll get the TF1 fix with 6.24",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:62,deployability,version,version,62,"No, we don't need the TF1 changes. Only the TFormula ClassDef version to be consistent in 622 and master. We'll get the TF1 fix with 6.24",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:62,integrability,version,version,62,"No, we don't need the TF1 changes. Only the TFormula ClassDef version to be consistent in 622 and master. We'll get the TF1 fix with 6.24",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:62,modifiability,version,version,62,"No, we don't need the TF1 changes. Only the TFormula ClassDef version to be consistent in 622 and master. We'll get the TF1 fix with 6.24",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:76,usability,consist,consistent,76,"No, we don't need the TF1 changes. Only the TFormula ClassDef version to be consistent in 622 and master. We'll get the TF1 fix with 6.24",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:113,security,modif,modifications,113,@lmoneta now it's fine . I got the changes also for TF1 without touching the GetRandom changes (just the pointer modifications as in TFormula). . sorry for the noise 😅 I'll squeeze the commits if necessary,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:93,deployability,version,version,93,"Yes, I think is ok now. Maybe it would be better and more consitent to backport directly the version 12 of TF1 existing in master, which includes this recent commit:. https://github.com/root-project/root/pull/7274/commits/6a70887d3e61f71070a1ab203810e751b1db5eae.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:93,integrability,version,version,93,"Yes, I think is ok now. Maybe it would be better and more consitent to backport directly the version 12 of TF1 existing in master, which includes this recent commit:. https://github.com/root-project/root/pull/7274/commits/6a70887d3e61f71070a1ab203810e751b1db5eae.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:93,modifiability,version,version,93,"Yes, I think is ok now. Maybe it would be better and more consitent to backport directly the version 12 of TF1 existing in master, which includes this recent commit:. https://github.com/root-project/root/pull/7274/commits/6a70887d3e61f71070a1ab203810e751b1db5eae.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:5,deployability,updat,updated,5,it's updated to the last version,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:25,deployability,version,version,25,it's updated to the last version,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:25,integrability,version,version,25,it's updated to the last version,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:25,modifiability,version,version,25,it's updated to the last version,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:5,safety,updat,updated,5,it's updated to the last version,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:5,security,updat,updated,5,it's updated to the last version,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:208,deployability,fail,failing,208,I see the test values for the stress test were increased in the same PR. https://github.com/root-project/root/pull/7274/commits/fe5c74b5ed6045eb72091bad693f7af1fdf2266e. but I don't see why the other test is failing :/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:208,reliability,fail,failing,208,I see the test values for the stress test were increased in the same PR. https://github.com/root-project/root/pull/7274/commits/fe5c74b5ed6045eb72091bad693f7af1fdf2266e. but I don't see why the other test is failing :/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:10,safety,test,test,10,I see the test values for the stress test were increased in the same PR. https://github.com/root-project/root/pull/7274/commits/fe5c74b5ed6045eb72091bad693f7af1fdf2266e. but I don't see why the other test is failing :/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:37,safety,test,test,37,I see the test values for the stress test were increased in the same PR. https://github.com/root-project/root/pull/7274/commits/fe5c74b5ed6045eb72091bad693f7af1fdf2266e. but I don't see why the other test is failing :/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:200,safety,test,test,200,I see the test values for the stress test were increased in the same PR. https://github.com/root-project/root/pull/7274/commits/fe5c74b5ed6045eb72091bad693f7af1fdf2266e. but I don't see why the other test is failing :/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:10,testability,test,test,10,I see the test values for the stress test were increased in the same PR. https://github.com/root-project/root/pull/7274/commits/fe5c74b5ed6045eb72091bad693f7af1fdf2266e. but I don't see why the other test is failing :/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:37,testability,test,test,37,I see the test values for the stress test were increased in the same PR. https://github.com/root-project/root/pull/7274/commits/fe5c74b5ed6045eb72091bad693f7af1fdf2266e. but I don't see why the other test is failing :/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:200,testability,test,test,200,I see the test values for the stress test were increased in the same PR. https://github.com/root-project/root/pull/7274/commits/fe5c74b5ed6045eb72091bad693f7af1fdf2266e. but I don't see why the other test is failing :/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:40,safety,test,test,40,@lmoneta can I do something to fix this test ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:40,testability,test,test,40,@lmoneta can I do something to fix this test ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:136,deployability,fail,failing,136,"Hi, . Yes this PR needs to include the changes in the stresss test of fe5c74b. I will check and try to understand why the other test is failing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:136,reliability,fail,failing,136,"Hi, . Yes this PR needs to include the changes in the stresss test of fe5c74b. I will check and try to understand why the other test is failing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:62,safety,test,test,62,"Hi, . Yes this PR needs to include the changes in the stresss test of fe5c74b. I will check and try to understand why the other test is failing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:128,safety,test,test,128,"Hi, . Yes this PR needs to include the changes in the stresss test of fe5c74b. I will check and try to understand why the other test is failing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:62,testability,test,test,62,"Hi, . Yes this PR needs to include the changes in the stresss test of fe5c74b. I will check and try to understand why the other test is failing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:103,testability,understand,understand,103,"Hi, . Yes this PR needs to include the changes in the stresss test of fe5c74b. I will check and try to understand why the other test is failing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:128,testability,test,test,128,"Hi, . Yes this PR needs to include the changes in the stresss test of fe5c74b. I will check and try to understand why the other test is failing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:11,deployability,updat,updated,11,limits are updated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:11,safety,updat,updated,11,limits are updated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:11,security,updat,updated,11,limits are updated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:8,deployability,updat,updated,8,ok it's updated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:8,safety,updat,updated,8,ok it's updated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:8,security,updat,updated,8,ok it's updated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/pull/7193:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7193
https://github.com/root-project/root/issues/7195:125,availability,Error,Error,125,"Thanks for the hint. I just tried that, now I do not get a crash, but rather a warning and the button name is not changed:. `Error in <TClingCallFunc::exec>: The method ChangeText is called without an object.`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:125,performance,Error,Error,125,"Thanks for the hint. I just tried that, now I do not get a crash, but rather a warning and the button name is not changed:. `Error in <TClingCallFunc::exec>: The method ChangeText is called without an object.`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:125,safety,Error,Error,125,"Thanks for the hint. I just tried that, now I do not get a crash, but rather a warning and the button name is not changed:. `Error in <TClingCallFunc::exec>: The method ChangeText is called without an object.`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:15,usability,hint,hint,15,"Thanks for the hint. I just tried that, now I do not get a crash, but rather a warning and the button name is not changed:. `Error in <TClingCallFunc::exec>: The method ChangeText is called without an object.`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:125,usability,Error,Error,125,"Thanks for the hint. I just tried that, now I do not get a crash, but rather a warning and the button name is not changed:. `Error in <TClingCallFunc::exec>: The method ChangeText is called without an object.`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:84,safety,test,testSignalSlot,84,"Well, this simple example works just fine for me on Windows and CentOS7:. ```. void testSignalSlot(). {. TGMainFrame *mainframe = new TGMainFrame(gClient->GetRoot(), 300, 170);. TGCheckButton *myTGCheckBox = new TGCheckButton(mainframe, new TGHotString(""Change Text""), -1);. mainframe->AddFrame(myTGCheckBox, new TGLayoutHints(kLHintsCenterX | kLHintsCenterY));. TGTextButton *myButton = new TGTextButton(mainframe, ""&Any Text"");. mainframe->AddFrame(myButton, new TGLayoutHints(kLHintsExpandX | kLHintsCenterY));. myTGCheckBox->Connect(""Clicked()"", ""TGTextButton"", myButton, ""ChangeText(=\""LEGOlegoemoryABCDEF\"")"");. mainframe->MapSubwindows();. mainframe->Layout();. mainframe->MapWindow();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:11,testability,simpl,simple,11,"Well, this simple example works just fine for me on Windows and CentOS7:. ```. void testSignalSlot(). {. TGMainFrame *mainframe = new TGMainFrame(gClient->GetRoot(), 300, 170);. TGCheckButton *myTGCheckBox = new TGCheckButton(mainframe, new TGHotString(""Change Text""), -1);. mainframe->AddFrame(myTGCheckBox, new TGLayoutHints(kLHintsCenterX | kLHintsCenterY));. TGTextButton *myButton = new TGTextButton(mainframe, ""&Any Text"");. mainframe->AddFrame(myButton, new TGLayoutHints(kLHintsExpandX | kLHintsCenterY));. myTGCheckBox->Connect(""Clicked()"", ""TGTextButton"", myButton, ""ChangeText(=\""LEGOlegoemoryABCDEF\"")"");. mainframe->MapSubwindows();. mainframe->Layout();. mainframe->MapWindow();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:84,testability,test,testSignalSlot,84,"Well, this simple example works just fine for me on Windows and CentOS7:. ```. void testSignalSlot(). {. TGMainFrame *mainframe = new TGMainFrame(gClient->GetRoot(), 300, 170);. TGCheckButton *myTGCheckBox = new TGCheckButton(mainframe, new TGHotString(""Change Text""), -1);. mainframe->AddFrame(myTGCheckBox, new TGLayoutHints(kLHintsCenterX | kLHintsCenterY));. TGTextButton *myButton = new TGTextButton(mainframe, ""&Any Text"");. mainframe->AddFrame(myButton, new TGLayoutHints(kLHintsExpandX | kLHintsCenterY));. myTGCheckBox->Connect(""Clicked()"", ""TGTextButton"", myButton, ""ChangeText(=\""LEGOlegoemoryABCDEF\"")"");. mainframe->MapSubwindows();. mainframe->Layout();. mainframe->MapWindow();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:11,usability,simpl,simple,11,"Well, this simple example works just fine for me on Windows and CentOS7:. ```. void testSignalSlot(). {. TGMainFrame *mainframe = new TGMainFrame(gClient->GetRoot(), 300, 170);. TGCheckButton *myTGCheckBox = new TGCheckButton(mainframe, new TGHotString(""Change Text""), -1);. mainframe->AddFrame(myTGCheckBox, new TGLayoutHints(kLHintsCenterX | kLHintsCenterY));. TGTextButton *myButton = new TGTextButton(mainframe, ""&Any Text"");. mainframe->AddFrame(myButton, new TGLayoutHints(kLHintsExpandX | kLHintsCenterY));. myTGCheckBox->Connect(""Clicked()"", ""TGTextButton"", myButton, ""ChangeText(=\""LEGOlegoemoryABCDEF\"")"");. mainframe->MapSubwindows();. mainframe->Layout();. mainframe->MapWindow();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:85,availability,error,error,85,"Thanks for the nice example. It works on Ubuntu, too. (Sorry, my last message was an error on my side, I was passing a nullptr as myButton). Why is SetText() leading to a crash? Maybe we could add a short comment here in the documentation:. https://root.cern/doc/master/classTGTextButton.html#aa2d8b609e96fb43c0a11b6b9ece52c83. ""If you use a signal-slot connection with inline argument passed as (text) value, use ChangeText instead of SetText"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:349,availability,slo,slot,349,"Thanks for the nice example. It works on Ubuntu, too. (Sorry, my last message was an error on my side, I was passing a nullptr as myButton). Why is SetText() leading to a crash? Maybe we could add a short comment here in the documentation:. https://root.cern/doc/master/classTGTextButton.html#aa2d8b609e96fb43c0a11b6b9ece52c83. ""If you use a signal-slot connection with inline argument passed as (text) value, use ChangeText instead of SetText"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:70,integrability,messag,message,70,"Thanks for the nice example. It works on Ubuntu, too. (Sorry, my last message was an error on my side, I was passing a nullptr as myButton). Why is SetText() leading to a crash? Maybe we could add a short comment here in the documentation:. https://root.cern/doc/master/classTGTextButton.html#aa2d8b609e96fb43c0a11b6b9ece52c83. ""If you use a signal-slot connection with inline argument passed as (text) value, use ChangeText instead of SetText"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:70,interoperability,messag,message,70,"Thanks for the nice example. It works on Ubuntu, too. (Sorry, my last message was an error on my side, I was passing a nullptr as myButton). Why is SetText() leading to a crash? Maybe we could add a short comment here in the documentation:. https://root.cern/doc/master/classTGTextButton.html#aa2d8b609e96fb43c0a11b6b9ece52c83. ""If you use a signal-slot connection with inline argument passed as (text) value, use ChangeText instead of SetText"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:85,performance,error,error,85,"Thanks for the nice example. It works on Ubuntu, too. (Sorry, my last message was an error on my side, I was passing a nullptr as myButton). Why is SetText() leading to a crash? Maybe we could add a short comment here in the documentation:. https://root.cern/doc/master/classTGTextButton.html#aa2d8b609e96fb43c0a11b6b9ece52c83. ""If you use a signal-slot connection with inline argument passed as (text) value, use ChangeText instead of SetText"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:349,reliability,slo,slot,349,"Thanks for the nice example. It works on Ubuntu, too. (Sorry, my last message was an error on my side, I was passing a nullptr as myButton). Why is SetText() leading to a crash? Maybe we could add a short comment here in the documentation:. https://root.cern/doc/master/classTGTextButton.html#aa2d8b609e96fb43c0a11b6b9ece52c83. ""If you use a signal-slot connection with inline argument passed as (text) value, use ChangeText instead of SetText"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:85,safety,error,error,85,"Thanks for the nice example. It works on Ubuntu, too. (Sorry, my last message was an error on my side, I was passing a nullptr as myButton). Why is SetText() leading to a crash? Maybe we could add a short comment here in the documentation:. https://root.cern/doc/master/classTGTextButton.html#aa2d8b609e96fb43c0a11b6b9ece52c83. ""If you use a signal-slot connection with inline argument passed as (text) value, use ChangeText instead of SetText"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:342,security,sign,signal-slot,342,"Thanks for the nice example. It works on Ubuntu, too. (Sorry, my last message was an error on my side, I was passing a nullptr as myButton). Why is SetText() leading to a crash? Maybe we could add a short comment here in the documentation:. https://root.cern/doc/master/classTGTextButton.html#aa2d8b609e96fb43c0a11b6b9ece52c83. ""If you use a signal-slot connection with inline argument passed as (text) value, use ChangeText instead of SetText"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:85,usability,error,error,85,"Thanks for the nice example. It works on Ubuntu, too. (Sorry, my last message was an error on my side, I was passing a nullptr as myButton). Why is SetText() leading to a crash? Maybe we could add a short comment here in the documentation:. https://root.cern/doc/master/classTGTextButton.html#aa2d8b609e96fb43c0a11b6b9ece52c83. ""If you use a signal-slot connection with inline argument passed as (text) value, use ChangeText instead of SetText"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:225,usability,document,documentation,225,"Thanks for the nice example. It works on Ubuntu, too. (Sorry, my last message was an error on my side, I was passing a nullptr as myButton). Why is SetText() leading to a crash? Maybe we could add a short comment here in the documentation:. https://root.cern/doc/master/classTGTextButton.html#aa2d8b609e96fb43c0a11b6b9ece52c83. ""If you use a signal-slot connection with inline argument passed as (text) value, use ChangeText instead of SetText"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:402,safety,compl,complain,402,"Well, I'll check, but the signatures of `SetText` are : [void TGTextButton::SetText(const TString &new_label)](https://root.cern/doc/master/classTGTextButton.html#a799dba6e9d376cb1dc7709efe3c21aeb) and [void SetText (TGHotString *new_label)](https://root.cern/doc/master/classTGTextButton.html#a72045eca394d5bb77bddef50d54958e2). I.e. no `char *` (or `const char *`) argument. But I agree, ROOT should complain about it, somehow...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:26,security,sign,signatures,26,"Well, I'll check, but the signatures of `SetText` are : [void TGTextButton::SetText(const TString &new_label)](https://root.cern/doc/master/classTGTextButton.html#a799dba6e9d376cb1dc7709efe3c21aeb) and [void SetText (TGHotString *new_label)](https://root.cern/doc/master/classTGTextButton.html#a72045eca394d5bb77bddef50d54958e2). I.e. no `char *` (or `const char *`) argument. But I agree, ROOT should complain about it, somehow...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:402,security,compl,complain,402,"Well, I'll check, but the signatures of `SetText` are : [void TGTextButton::SetText(const TString &new_label)](https://root.cern/doc/master/classTGTextButton.html#a799dba6e9d376cb1dc7709efe3c21aeb) and [void SetText (TGHotString *new_label)](https://root.cern/doc/master/classTGTextButton.html#a72045eca394d5bb77bddef50d54958e2). I.e. no `char *` (or `const char *`) argument. But I agree, ROOT should complain about it, somehow...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:1539,deployability,stack,stack,1539,"erY));. TGComboBox *myTGComboBox = new TGComboBox(mainframe, ""Select..."");. myTGComboBox->AddEntry(""test1"", 0);. myTGComboBox->AddEntry(""test2"", 1);. mainframe->AddFrame(myTGComboBox, new TGLayoutHints(kLHintsExpandX | kLHintsCenterY));. TGTextButton *myButton = new TGTextButton(mainframe, ""&Any Text"");. mainframe->AddFrame(myButton, new TGLayoutHints(kLHintsExpandX | kLHintsCenterY));. myTGCheckBox->Connect(""Clicked()"", ""TGTextButton"", myButton, ""ChangeText(=\""LEGOlegoemoryABCDEF\"")"");. myTGComboBox->Connect(""Selected(Int_t)"", ""TGTextButton"", myButton, ""ChangeText(=\""LEGOlegoemoryABCDEF\"")"");. mainframe->MapSubwindows();. mainframe->Layout();. mainframe->MapWindow();. }. ```. ```. root -l testSignalSlot.cpp+. root [0] . Processing testSignalSlot.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /tmp/./testSignalSlot_cpp.so. root [1] . *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f49a0ab5457 in __GI___waitpid (pid=3907, stat_loc=stat_loc. entry=0x7ffe8def7918, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007f49a0a20177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007f49a1660340 in TUnixSystem::StackTrace() () from /opt/root_bld/lib/libCore.so. #3 0x00007f49a1662eb5 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root_bld/lib/libCore.so. #4 <signal handler called>. #5 __strlen_avx2 () at ../sysdeps/x86_64/multiarch/strlen-avx2.S:65. #6 0x00007f49a1561565 in TString::TString(char const*) () from /opt/root_bld/lib/libCore.so. #7 0x00007f499261ff70 in TGTextButton::SetTitle(char const*) () from /opt/root_bld/lib/libGui.so. #8 0x00007f4993663032 in ?? (). #9 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. Y",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:1921,deployability,Stack,StackTrace,1921,"Y));. myTGCheckBox->Connect(""Clicked()"", ""TGTextButton"", myButton, ""ChangeText(=\""LEGOlegoemoryABCDEF\"")"");. myTGComboBox->Connect(""Selected(Int_t)"", ""TGTextButton"", myButton, ""ChangeText(=\""LEGOlegoemoryABCDEF\"")"");. mainframe->MapSubwindows();. mainframe->Layout();. mainframe->MapWindow();. }. ```. ```. root -l testSignalSlot.cpp+. root [0] . Processing testSignalSlot.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /tmp/./testSignalSlot_cpp.so. root [1] . *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f49a0ab5457 in __GI___waitpid (pid=3907, stat_loc=stat_loc. entry=0x7ffe8def7918, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007f49a0a20177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007f49a1660340 in TUnixSystem::StackTrace() () from /opt/root_bld/lib/libCore.so. #3 0x00007f49a1662eb5 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root_bld/lib/libCore.so. #4 <signal handler called>. #5 __strlen_avx2 () at ../sysdeps/x86_64/multiarch/strlen-avx2.S:65. #6 0x00007f49a1561565 in TString::TString(char const*) () from /opt/root_bld/lib/libCore.so. #7 0x00007f499261ff70 in TGTextButton::SetTitle(char const*) () from /opt/root_bld/lib/libGui.so. #8 0x00007f4993663032 in ?? (). #9 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 __str",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:2748,deployability,stack,stack,2748,"===========. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f49a0ab5457 in __GI___waitpid (pid=3907, stat_loc=stat_loc. entry=0x7ffe8def7918, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007f49a0a20177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007f49a1660340 in TUnixSystem::StackTrace() () from /opt/root_bld/lib/libCore.so. #3 0x00007f49a1662eb5 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root_bld/lib/libCore.so. #4 <signal handler called>. #5 __strlen_avx2 () at ../sysdeps/x86_64/multiarch/strlen-avx2.S:65. #6 0x00007f49a1561565 in TString::TString(char const*) () from /opt/root_bld/lib/libCore.so. #7 0x00007f499261ff70 in TGTextButton::SetTitle(char const*) () from /opt/root_bld/lib/libGui.so. #8 0x00007f4993663032 in ?? (). #9 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 __strlen_avx2 () at ../sysdeps/x86_64/multiarch/strlen-avx2.S:65. #6 0x00007f49a1561565 in TString::TString(char const*) () from /opt/root_bld/lib/libCore.so. #7 0x00007f499261ff70 in TGTextButton::SetTitle(char const*) () from /opt/root_bld/lib/libGui.so. #8 0x00007f4993663032 in ?? (). #9 0x0000000000000000 in ?? (). ===========================================================. ```. If I run it with the QtCreator debugger, it completely freezes the mouse, I have to open a terminal and call pkill qtcreator. (Which is something I rarely had needed to do before.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:1833,energy efficiency,optim,optimized,1833," Text"");. mainframe->AddFrame(myButton, new TGLayoutHints(kLHintsExpandX | kLHintsCenterY));. myTGCheckBox->Connect(""Clicked()"", ""TGTextButton"", myButton, ""ChangeText(=\""LEGOlegoemoryABCDEF\"")"");. myTGComboBox->Connect(""Selected(Int_t)"", ""TGTextButton"", myButton, ""ChangeText(=\""LEGOlegoemoryABCDEF\"")"");. mainframe->MapSubwindows();. mainframe->Layout();. mainframe->MapWindow();. }. ```. ```. root -l testSignalSlot.cpp+. root [0] . Processing testSignalSlot.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /tmp/./testSignalSlot_cpp.so. root [1] . *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f49a0ab5457 in __GI___waitpid (pid=3907, stat_loc=stat_loc. entry=0x7ffe8def7918, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007f49a0a20177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007f49a1660340 in TUnixSystem::StackTrace() () from /opt/root_bld/lib/libCore.so. #3 0x00007f49a1662eb5 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root_bld/lib/libCore.so. #4 <signal handler called>. #5 __strlen_avx2 () at ../sysdeps/x86_64/multiarch/strlen-avx2.S:65. #6 0x00007f49a1561565 in TString::TString(char const*) () from /opt/root_bld/lib/libCore.so. #7 0x00007f499261ff70 in TGTextButton::SetTitle(char const*) () from /opt/root_bld/lib/libGui.so. #8 0x00007f4993663032 in ?? (). #9 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:2679,integrability,sub,submit,2679,"===========. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f49a0ab5457 in __GI___waitpid (pid=3907, stat_loc=stat_loc. entry=0x7ffe8def7918, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007f49a0a20177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007f49a1660340 in TUnixSystem::StackTrace() () from /opt/root_bld/lib/libCore.so. #3 0x00007f49a1662eb5 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root_bld/lib/libCore.so. #4 <signal handler called>. #5 __strlen_avx2 () at ../sysdeps/x86_64/multiarch/strlen-avx2.S:65. #6 0x00007f49a1561565 in TString::TString(char const*) () from /opt/root_bld/lib/libCore.so. #7 0x00007f499261ff70 in TGTextButton::SetTitle(char const*) () from /opt/root_bld/lib/libGui.so. #8 0x00007f4993663032 in ?? (). #9 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 __strlen_avx2 () at ../sysdeps/x86_64/multiarch/strlen-avx2.S:65. #6 0x00007f49a1561565 in TString::TString(char const*) () from /opt/root_bld/lib/libCore.so. #7 0x00007f499261ff70 in TGTextButton::SetTitle(char const*) () from /opt/root_bld/lib/libGui.so. #8 0x00007f4993663032 in ?? (). #9 0x0000000000000000 in ?? (). ===========================================================. ```. If I run it with the QtCreator debugger, it completely freezes the mouse, I have to open a terminal and call pkill qtcreator. (Which is something I rarely had needed to do before.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:1346,interoperability,share,shared,1346,"(), 300, 170);. TGCheckButton *myTGCheckBox = new TGCheckButton(mainframe, new TGHotString(""Change Text""), -1);. mainframe->AddFrame(myTGCheckBox, new TGLayoutHints(kLHintsCenterX | kLHintsCenterY));. TGComboBox *myTGComboBox = new TGComboBox(mainframe, ""Select..."");. myTGComboBox->AddEntry(""test1"", 0);. myTGComboBox->AddEntry(""test2"", 1);. mainframe->AddFrame(myTGComboBox, new TGLayoutHints(kLHintsExpandX | kLHintsCenterY));. TGTextButton *myButton = new TGTextButton(mainframe, ""&Any Text"");. mainframe->AddFrame(myButton, new TGLayoutHints(kLHintsExpandX | kLHintsCenterY));. myTGCheckBox->Connect(""Clicked()"", ""TGTextButton"", myButton, ""ChangeText(=\""LEGOlegoemoryABCDEF\"")"");. myTGComboBox->Connect(""Selected(Int_t)"", ""TGTextButton"", myButton, ""ChangeText(=\""LEGOlegoemoryABCDEF\"")"");. mainframe->MapSubwindows();. mainframe->Layout();. mainframe->MapWindow();. }. ```. ```. root -l testSignalSlot.cpp+. root [0] . Processing testSignalSlot.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /tmp/./testSignalSlot_cpp.so. root [1] . *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f49a0ab5457 in __GI___waitpid (pid=3907, stat_loc=stat_loc. entry=0x7ffe8def7918, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007f49a0a20177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007f49a1660340 in TUnixSystem::StackTrace() () from /opt/root_bld/lib/libCore.so. #3 0x00007f49a1662eb5 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root_bld/lib/libCore.so. #4 <signal handler called>. #5 __strlen_avx2 () at ../sysdeps/x86_64/multiarch/strlen-avx2.S:65. #6 0x00007f49a1561565 in TString::TString(char const*) () from /opt/root_bld/lib/libCore.so. #7 0x00007f499261ff70 in TGTextButton::SetTitle(char const*) () from /opt/root_bld/li",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:1833,performance,optimiz,optimized,1833," Text"");. mainframe->AddFrame(myButton, new TGLayoutHints(kLHintsExpandX | kLHintsCenterY));. myTGCheckBox->Connect(""Clicked()"", ""TGTextButton"", myButton, ""ChangeText(=\""LEGOlegoemoryABCDEF\"")"");. myTGComboBox->Connect(""Selected(Int_t)"", ""TGTextButton"", myButton, ""ChangeText(=\""LEGOlegoemoryABCDEF\"")"");. mainframe->MapSubwindows();. mainframe->Layout();. mainframe->MapWindow();. }. ```. ```. root -l testSignalSlot.cpp+. root [0] . Processing testSignalSlot.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /tmp/./testSignalSlot_cpp.so. root [1] . *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f49a0ab5457 in __GI___waitpid (pid=3907, stat_loc=stat_loc. entry=0x7ffe8def7918, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007f49a0a20177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007f49a1660340 in TUnixSystem::StackTrace() () from /opt/root_bld/lib/libCore.so. #3 0x00007f49a1662eb5 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root_bld/lib/libCore.so. #4 <signal handler called>. #5 __strlen_avx2 () at ../sysdeps/x86_64/multiarch/strlen-avx2.S:65. #6 0x00007f49a1561565 in TString::TString(char const*) () from /opt/root_bld/lib/libCore.so. #7 0x00007f499261ff70 in TGTextButton::SetTitle(char const*) () from /opt/root_bld/lib/libGui.so. #8 0x00007f4993663032 in ?? (). #9 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:271,safety,test,testSignalSlot,271,"Thanks for checking. My second use case was a combobox selection leading to a tgtextbutton change. I tried it with your example, but it is not working. Do you get a similar crash on Windows? ```. #include ""TGFrame.h"". #include ""TGButton.h"". #include ""TGComboBox.h"". void testSignalSlot(). {. TGMainFrame *mainframe = new TGMainFrame(gClient->GetRoot(), 300, 170);. TGCheckButton *myTGCheckBox = new TGCheckButton(mainframe, new TGHotString(""Change Text""), -1);. mainframe->AddFrame(myTGCheckBox, new TGLayoutHints(kLHintsCenterX | kLHintsCenterY));. TGComboBox *myTGComboBox = new TGComboBox(mainframe, ""Select..."");. myTGComboBox->AddEntry(""test1"", 0);. myTGComboBox->AddEntry(""test2"", 1);. mainframe->AddFrame(myTGComboBox, new TGLayoutHints(kLHintsExpandX | kLHintsCenterY));. TGTextButton *myButton = new TGTextButton(mainframe, ""&Any Text"");. mainframe->AddFrame(myButton, new TGLayoutHints(kLHintsExpandX | kLHintsCenterY));. myTGCheckBox->Connect(""Clicked()"", ""TGTextButton"", myButton, ""ChangeText(=\""LEGOlegoemoryABCDEF\"")"");. myTGComboBox->Connect(""Selected(Int_t)"", ""TGTextButton"", myButton, ""ChangeText(=\""LEGOlegoemoryABCDEF\"")"");. mainframe->MapSubwindows();. mainframe->Layout();. mainframe->MapWindow();. }. ```. ```. root -l testSignalSlot.cpp+. root [0] . Processing testSignalSlot.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /tmp/./testSignalSlot_cpp.so. root [1] . *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f49a0ab5457 in __GI___waitpid (pid=3907, stat_loc=stat_loc. entry=0x7ffe8def7918, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007f49a0a20177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007f49a1660340 in TUnixSystem::StackTrace() () from /opt/root_bld/lib/libCore.so. #3 0x00007f49a1662eb5 in TUn",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:1241,safety,test,testSignalSlot,1241,"e ""TGComboBox.h"". void testSignalSlot(). {. TGMainFrame *mainframe = new TGMainFrame(gClient->GetRoot(), 300, 170);. TGCheckButton *myTGCheckBox = new TGCheckButton(mainframe, new TGHotString(""Change Text""), -1);. mainframe->AddFrame(myTGCheckBox, new TGLayoutHints(kLHintsCenterX | kLHintsCenterY));. TGComboBox *myTGComboBox = new TGComboBox(mainframe, ""Select..."");. myTGComboBox->AddEntry(""test1"", 0);. myTGComboBox->AddEntry(""test2"", 1);. mainframe->AddFrame(myTGComboBox, new TGLayoutHints(kLHintsExpandX | kLHintsCenterY));. TGTextButton *myButton = new TGTextButton(mainframe, ""&Any Text"");. mainframe->AddFrame(myButton, new TGLayoutHints(kLHintsExpandX | kLHintsCenterY));. myTGCheckBox->Connect(""Clicked()"", ""TGTextButton"", myButton, ""ChangeText(=\""LEGOlegoemoryABCDEF\"")"");. myTGComboBox->Connect(""Selected(Int_t)"", ""TGTextButton"", myButton, ""ChangeText(=\""LEGOlegoemoryABCDEF\"")"");. mainframe->MapSubwindows();. mainframe->Layout();. mainframe->MapWindow();. }. ```. ```. root -l testSignalSlot.cpp+. root [0] . Processing testSignalSlot.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /tmp/./testSignalSlot_cpp.so. root [1] . *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f49a0ab5457 in __GI___waitpid (pid=3907, stat_loc=stat_loc. entry=0x7ffe8def7918, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007f49a0a20177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007f49a1660340 in TUnixSystem::StackTrace() () from /opt/root_bld/lib/libCore.so. #3 0x00007f49a1662eb5 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root_bld/lib/libCore.so. #4 <signal handler called>. #5 __strlen_avx2 () at ../sysdeps/x86_64/multiarch/strlen-avx2.S:65. #6 0x00007f49a1561565 in TString::TString(char const*) () from /opt/root_bld/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:1284,safety,test,testSignalSlot,1284," TGMainFrame *mainframe = new TGMainFrame(gClient->GetRoot(), 300, 170);. TGCheckButton *myTGCheckBox = new TGCheckButton(mainframe, new TGHotString(""Change Text""), -1);. mainframe->AddFrame(myTGCheckBox, new TGLayoutHints(kLHintsCenterX | kLHintsCenterY));. TGComboBox *myTGComboBox = new TGComboBox(mainframe, ""Select..."");. myTGComboBox->AddEntry(""test1"", 0);. myTGComboBox->AddEntry(""test2"", 1);. mainframe->AddFrame(myTGComboBox, new TGLayoutHints(kLHintsExpandX | kLHintsCenterY));. TGTextButton *myButton = new TGTextButton(mainframe, ""&Any Text"");. mainframe->AddFrame(myButton, new TGLayoutHints(kLHintsExpandX | kLHintsCenterY));. myTGCheckBox->Connect(""Clicked()"", ""TGTextButton"", myButton, ""ChangeText(=\""LEGOlegoemoryABCDEF\"")"");. myTGComboBox->Connect(""Selected(Int_t)"", ""TGTextButton"", myButton, ""ChangeText(=\""LEGOlegoemoryABCDEF\"")"");. mainframe->MapSubwindows();. mainframe->Layout();. mainframe->MapWindow();. }. ```. ```. root -l testSignalSlot.cpp+. root [0] . Processing testSignalSlot.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /tmp/./testSignalSlot_cpp.so. root [1] . *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f49a0ab5457 in __GI___waitpid (pid=3907, stat_loc=stat_loc. entry=0x7ffe8def7918, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007f49a0a20177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007f49a1660340 in TUnixSystem::StackTrace() () from /opt/root_bld/lib/libCore.so. #3 0x00007f49a1662eb5 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root_bld/lib/libCore.so. #4 <signal handler called>. #5 __strlen_avx2 () at ../sysdeps/x86_64/multiarch/strlen-avx2.S:65. #6 0x00007f49a1561565 in TString::TString(char const*) () from /opt/root_bld/lib/libCore.so. #7 0x00007f499261ff70 in TG",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:3352,safety,compl,completely,3352,"===========. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f49a0ab5457 in __GI___waitpid (pid=3907, stat_loc=stat_loc. entry=0x7ffe8def7918, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007f49a0a20177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007f49a1660340 in TUnixSystem::StackTrace() () from /opt/root_bld/lib/libCore.so. #3 0x00007f49a1662eb5 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root_bld/lib/libCore.so. #4 <signal handler called>. #5 __strlen_avx2 () at ../sysdeps/x86_64/multiarch/strlen-avx2.S:65. #6 0x00007f49a1561565 in TString::TString(char const*) () from /opt/root_bld/lib/libCore.so. #7 0x00007f499261ff70 in TGTextButton::SetTitle(char const*) () from /opt/root_bld/lib/libGui.so. #8 0x00007f4993663032 in ?? (). #9 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 __strlen_avx2 () at ../sysdeps/x86_64/multiarch/strlen-avx2.S:65. #6 0x00007f49a1561565 in TString::TString(char const*) () from /opt/root_bld/lib/libCore.so. #7 0x00007f499261ff70 in TGTextButton::SetTitle(char const*) () from /opt/root_bld/lib/libGui.so. #8 0x00007f4993663032 in ?? (). #9 0x0000000000000000 in ?? (). ===========================================================. ```. If I run it with the QtCreator debugger, it completely freezes the mouse, I have to open a terminal and call pkill qtcreator. (Which is something I rarely had needed to do before.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:2078,security,sign,signal,2078,"xtButton"", myButton, ""ChangeText(=\""LEGOlegoemoryABCDEF\"")"");. mainframe->MapSubwindows();. mainframe->Layout();. mainframe->MapWindow();. }. ```. ```. root -l testSignalSlot.cpp+. root [0] . Processing testSignalSlot.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /tmp/./testSignalSlot_cpp.so. root [1] . *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f49a0ab5457 in __GI___waitpid (pid=3907, stat_loc=stat_loc. entry=0x7ffe8def7918, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007f49a0a20177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007f49a1660340 in TUnixSystem::StackTrace() () from /opt/root_bld/lib/libCore.so. #3 0x00007f49a1662eb5 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root_bld/lib/libCore.so. #4 <signal handler called>. #5 __strlen_avx2 () at ../sysdeps/x86_64/multiarch/strlen-avx2.S:65. #6 0x00007f49a1561565 in TString::TString(char const*) () from /opt/root_bld/lib/libCore.so. #7 0x00007f499261ff70 in TGTextButton::SetTitle(char const*) () from /opt/root_bld/lib/libGui.so. #8 0x00007f4993663032 in ?? (). #9 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 __strlen_avx2 () at ../sysdeps/x86_64/multiarch/strlen-avx2.S:65. #6 0x00007f49a1561565 in TString::TString(char const*) () from /opt/root_bld/lib/libCore.so. #",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:3352,security,compl,completely,3352,"===========. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f49a0ab5457 in __GI___waitpid (pid=3907, stat_loc=stat_loc. entry=0x7ffe8def7918, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007f49a0a20177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007f49a1660340 in TUnixSystem::StackTrace() () from /opt/root_bld/lib/libCore.so. #3 0x00007f49a1662eb5 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root_bld/lib/libCore.so. #4 <signal handler called>. #5 __strlen_avx2 () at ../sysdeps/x86_64/multiarch/strlen-avx2.S:65. #6 0x00007f49a1561565 in TString::TString(char const*) () from /opt/root_bld/lib/libCore.so. #7 0x00007f499261ff70 in TGTextButton::SetTitle(char const*) () from /opt/root_bld/lib/libGui.so. #8 0x00007f4993663032 in ?? (). #9 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 __strlen_avx2 () at ../sysdeps/x86_64/multiarch/strlen-avx2.S:65. #6 0x00007f49a1561565 in TString::TString(char const*) () from /opt/root_bld/lib/libCore.so. #7 0x00007f499261ff70 in TGTextButton::SetTitle(char const*) () from /opt/root_bld/lib/libGui.so. #8 0x00007f4993663032 in ?? (). #9 0x0000000000000000 in ?? (). ===========================================================. ```. If I run it with the QtCreator debugger, it completely freezes the mouse, I have to open a terminal and call pkill qtcreator. (Which is something I rarely had needed to do before.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:271,testability,test,testSignalSlot,271,"Thanks for checking. My second use case was a combobox selection leading to a tgtextbutton change. I tried it with your example, but it is not working. Do you get a similar crash on Windows? ```. #include ""TGFrame.h"". #include ""TGButton.h"". #include ""TGComboBox.h"". void testSignalSlot(). {. TGMainFrame *mainframe = new TGMainFrame(gClient->GetRoot(), 300, 170);. TGCheckButton *myTGCheckBox = new TGCheckButton(mainframe, new TGHotString(""Change Text""), -1);. mainframe->AddFrame(myTGCheckBox, new TGLayoutHints(kLHintsCenterX | kLHintsCenterY));. TGComboBox *myTGComboBox = new TGComboBox(mainframe, ""Select..."");. myTGComboBox->AddEntry(""test1"", 0);. myTGComboBox->AddEntry(""test2"", 1);. mainframe->AddFrame(myTGComboBox, new TGLayoutHints(kLHintsExpandX | kLHintsCenterY));. TGTextButton *myButton = new TGTextButton(mainframe, ""&Any Text"");. mainframe->AddFrame(myButton, new TGLayoutHints(kLHintsExpandX | kLHintsCenterY));. myTGCheckBox->Connect(""Clicked()"", ""TGTextButton"", myButton, ""ChangeText(=\""LEGOlegoemoryABCDEF\"")"");. myTGComboBox->Connect(""Selected(Int_t)"", ""TGTextButton"", myButton, ""ChangeText(=\""LEGOlegoemoryABCDEF\"")"");. mainframe->MapSubwindows();. mainframe->Layout();. mainframe->MapWindow();. }. ```. ```. root -l testSignalSlot.cpp+. root [0] . Processing testSignalSlot.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /tmp/./testSignalSlot_cpp.so. root [1] . *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f49a0ab5457 in __GI___waitpid (pid=3907, stat_loc=stat_loc. entry=0x7ffe8def7918, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007f49a0a20177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007f49a1660340 in TUnixSystem::StackTrace() () from /opt/root_bld/lib/libCore.so. #3 0x00007f49a1662eb5 in TUn",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:1241,testability,test,testSignalSlot,1241,"e ""TGComboBox.h"". void testSignalSlot(). {. TGMainFrame *mainframe = new TGMainFrame(gClient->GetRoot(), 300, 170);. TGCheckButton *myTGCheckBox = new TGCheckButton(mainframe, new TGHotString(""Change Text""), -1);. mainframe->AddFrame(myTGCheckBox, new TGLayoutHints(kLHintsCenterX | kLHintsCenterY));. TGComboBox *myTGComboBox = new TGComboBox(mainframe, ""Select..."");. myTGComboBox->AddEntry(""test1"", 0);. myTGComboBox->AddEntry(""test2"", 1);. mainframe->AddFrame(myTGComboBox, new TGLayoutHints(kLHintsExpandX | kLHintsCenterY));. TGTextButton *myButton = new TGTextButton(mainframe, ""&Any Text"");. mainframe->AddFrame(myButton, new TGLayoutHints(kLHintsExpandX | kLHintsCenterY));. myTGCheckBox->Connect(""Clicked()"", ""TGTextButton"", myButton, ""ChangeText(=\""LEGOlegoemoryABCDEF\"")"");. myTGComboBox->Connect(""Selected(Int_t)"", ""TGTextButton"", myButton, ""ChangeText(=\""LEGOlegoemoryABCDEF\"")"");. mainframe->MapSubwindows();. mainframe->Layout();. mainframe->MapWindow();. }. ```. ```. root -l testSignalSlot.cpp+. root [0] . Processing testSignalSlot.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /tmp/./testSignalSlot_cpp.so. root [1] . *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f49a0ab5457 in __GI___waitpid (pid=3907, stat_loc=stat_loc. entry=0x7ffe8def7918, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007f49a0a20177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007f49a1660340 in TUnixSystem::StackTrace() () from /opt/root_bld/lib/libCore.so. #3 0x00007f49a1662eb5 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root_bld/lib/libCore.so. #4 <signal handler called>. #5 __strlen_avx2 () at ../sysdeps/x86_64/multiarch/strlen-avx2.S:65. #6 0x00007f49a1561565 in TString::TString(char const*) () from /opt/root_bld/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:1284,testability,test,testSignalSlot,1284," TGMainFrame *mainframe = new TGMainFrame(gClient->GetRoot(), 300, 170);. TGCheckButton *myTGCheckBox = new TGCheckButton(mainframe, new TGHotString(""Change Text""), -1);. mainframe->AddFrame(myTGCheckBox, new TGLayoutHints(kLHintsCenterX | kLHintsCenterY));. TGComboBox *myTGComboBox = new TGComboBox(mainframe, ""Select..."");. myTGComboBox->AddEntry(""test1"", 0);. myTGComboBox->AddEntry(""test2"", 1);. mainframe->AddFrame(myTGComboBox, new TGLayoutHints(kLHintsExpandX | kLHintsCenterY));. TGTextButton *myButton = new TGTextButton(mainframe, ""&Any Text"");. mainframe->AddFrame(myButton, new TGLayoutHints(kLHintsExpandX | kLHintsCenterY));. myTGCheckBox->Connect(""Clicked()"", ""TGTextButton"", myButton, ""ChangeText(=\""LEGOlegoemoryABCDEF\"")"");. myTGComboBox->Connect(""Selected(Int_t)"", ""TGTextButton"", myButton, ""ChangeText(=\""LEGOlegoemoryABCDEF\"")"");. mainframe->MapSubwindows();. mainframe->Layout();. mainframe->MapWindow();. }. ```. ```. root -l testSignalSlot.cpp+. root [0] . Processing testSignalSlot.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /tmp/./testSignalSlot_cpp.so. root [1] . *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f49a0ab5457 in __GI___waitpid (pid=3907, stat_loc=stat_loc. entry=0x7ffe8def7918, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007f49a0a20177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007f49a1660340 in TUnixSystem::StackTrace() () from /opt/root_bld/lib/libCore.so. #3 0x00007f49a1662eb5 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root_bld/lib/libCore.so. #4 <signal handler called>. #5 __strlen_avx2 () at ../sysdeps/x86_64/multiarch/strlen-avx2.S:65. #6 0x00007f49a1561565 in TString::TString(char const*) () from /opt/root_bld/lib/libCore.so. #7 0x00007f499261ff70 in TG",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:1545,testability,trace,trace,1545,". TGComboBox *myTGComboBox = new TGComboBox(mainframe, ""Select..."");. myTGComboBox->AddEntry(""test1"", 0);. myTGComboBox->AddEntry(""test2"", 1);. mainframe->AddFrame(myTGComboBox, new TGLayoutHints(kLHintsExpandX | kLHintsCenterY));. TGTextButton *myButton = new TGTextButton(mainframe, ""&Any Text"");. mainframe->AddFrame(myButton, new TGLayoutHints(kLHintsExpandX | kLHintsCenterY));. myTGCheckBox->Connect(""Clicked()"", ""TGTextButton"", myButton, ""ChangeText(=\""LEGOlegoemoryABCDEF\"")"");. myTGComboBox->Connect(""Selected(Int_t)"", ""TGTextButton"", myButton, ""ChangeText(=\""LEGOlegoemoryABCDEF\"")"");. mainframe->MapSubwindows();. mainframe->Layout();. mainframe->MapWindow();. }. ```. ```. root -l testSignalSlot.cpp+. root [0] . Processing testSignalSlot.cpp+... Info in <TUnixSystem::ACLiC>: creating shared library /tmp/./testSignalSlot_cpp.so. root [1] . *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f49a0ab5457 in __GI___waitpid (pid=3907, stat_loc=stat_loc. entry=0x7ffe8def7918, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007f49a0a20177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007f49a1660340 in TUnixSystem::StackTrace() () from /opt/root_bld/lib/libCore.so. #3 0x00007f49a1662eb5 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root_bld/lib/libCore.so. #4 <signal handler called>. #5 __strlen_avx2 () at ../sysdeps/x86_64/multiarch/strlen-avx2.S:65. #6 0x00007f49a1561565 in TString::TString(char const*) () from /opt/root_bld/lib/libCore.so. #7 0x00007f499261ff70 in TGTextButton::SetTitle(char const*) () from /opt/root_bld/lib/libGui.so. #8 0x00007f4993663032 in ?? (). #9 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. You may",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:2754,testability,trace,trace,2754,"===========. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f49a0ab5457 in __GI___waitpid (pid=3907, stat_loc=stat_loc. entry=0x7ffe8def7918, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007f49a0a20177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007f49a1660340 in TUnixSystem::StackTrace() () from /opt/root_bld/lib/libCore.so. #3 0x00007f49a1662eb5 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root_bld/lib/libCore.so. #4 <signal handler called>. #5 __strlen_avx2 () at ../sysdeps/x86_64/multiarch/strlen-avx2.S:65. #6 0x00007f49a1561565 in TString::TString(char const*) () from /opt/root_bld/lib/libCore.so. #7 0x00007f499261ff70 in TGTextButton::SetTitle(char const*) () from /opt/root_bld/lib/libGui.so. #8 0x00007f4993663032 in ?? (). #9 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 __strlen_avx2 () at ../sysdeps/x86_64/multiarch/strlen-avx2.S:65. #6 0x00007f49a1561565 in TString::TString(char const*) () from /opt/root_bld/lib/libCore.so. #7 0x00007f499261ff70 in TGTextButton::SetTitle(char const*) () from /opt/root_bld/lib/libGui.so. #8 0x00007f4993663032 in ?? (). #9 0x0000000000000000 in ?? (). ===========================================================. ```. If I run it with the QtCreator debugger, it completely freezes the mouse, I have to open a terminal and call pkill qtcreator. (Which is something I rarely had needed to do before.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:2509,usability,hint,hint,2509,"===========. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f49a0ab5457 in __GI___waitpid (pid=3907, stat_loc=stat_loc. entry=0x7ffe8def7918, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007f49a0a20177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007f49a1660340 in TUnixSystem::StackTrace() () from /opt/root_bld/lib/libCore.so. #3 0x00007f49a1662eb5 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root_bld/lib/libCore.so. #4 <signal handler called>. #5 __strlen_avx2 () at ../sysdeps/x86_64/multiarch/strlen-avx2.S:65. #6 0x00007f49a1561565 in TString::TString(char const*) () from /opt/root_bld/lib/libCore.so. #7 0x00007f499261ff70 in TGTextButton::SetTitle(char const*) () from /opt/root_bld/lib/libGui.so. #8 0x00007f4993663032 in ?? (). #9 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 __strlen_avx2 () at ../sysdeps/x86_64/multiarch/strlen-avx2.S:65. #6 0x00007f49a1561565 in TString::TString(char const*) () from /opt/root_bld/lib/libCore.so. #7 0x00007f499261ff70 in TGTextButton::SetTitle(char const*) () from /opt/root_bld/lib/libGui.so. #8 0x00007f4993663032 in ?? (). #9 0x0000000000000000 in ?? (). ===========================================================. ```. If I run it with the QtCreator debugger, it completely freezes the mouse, I have to open a terminal and call pkill qtcreator. (Which is something I rarely had needed to do before.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:2553,usability,help,help,2553,"===========. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f49a0ab5457 in __GI___waitpid (pid=3907, stat_loc=stat_loc. entry=0x7ffe8def7918, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007f49a0a20177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007f49a1660340 in TUnixSystem::StackTrace() () from /opt/root_bld/lib/libCore.so. #3 0x00007f49a1662eb5 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root_bld/lib/libCore.so. #4 <signal handler called>. #5 __strlen_avx2 () at ../sysdeps/x86_64/multiarch/strlen-avx2.S:65. #6 0x00007f49a1561565 in TString::TString(char const*) () from /opt/root_bld/lib/libCore.so. #7 0x00007f499261ff70 in TGTextButton::SetTitle(char const*) () from /opt/root_bld/lib/libGui.so. #8 0x00007f4993663032 in ?? (). #9 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 __strlen_avx2 () at ../sysdeps/x86_64/multiarch/strlen-avx2.S:65. #6 0x00007f49a1561565 in TString::TString(char const*) () from /opt/root_bld/lib/libCore.so. #7 0x00007f499261ff70 in TGTextButton::SetTitle(char const*) () from /opt/root_bld/lib/libGui.so. #8 0x00007f4993663032 in ?? (). #9 0x0000000000000000 in ?? (). ===========================================================. ```. If I run it with the QtCreator debugger, it completely freezes the mouse, I have to open a terminal and call pkill qtcreator. (Which is something I rarely had needed to do before.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:2830,usability,help,help,2830,"===========. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f49a0ab5457 in __GI___waitpid (pid=3907, stat_loc=stat_loc. entry=0x7ffe8def7918, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007f49a0a20177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007f49a1660340 in TUnixSystem::StackTrace() () from /opt/root_bld/lib/libCore.so. #3 0x00007f49a1662eb5 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root_bld/lib/libCore.so. #4 <signal handler called>. #5 __strlen_avx2 () at ../sysdeps/x86_64/multiarch/strlen-avx2.S:65. #6 0x00007f49a1561565 in TString::TString(char const*) () from /opt/root_bld/lib/libCore.so. #7 0x00007f499261ff70 in TGTextButton::SetTitle(char const*) () from /opt/root_bld/lib/libGui.so. #8 0x00007f4993663032 in ?? (). #9 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 __strlen_avx2 () at ../sysdeps/x86_64/multiarch/strlen-avx2.S:65. #6 0x00007f49a1561565 in TString::TString(char const*) () from /opt/root_bld/lib/libCore.so. #7 0x00007f499261ff70 in TGTextButton::SetTitle(char const*) () from /opt/root_bld/lib/libGui.so. #8 0x00007f4993663032 in ?? (). #9 0x0000000000000000 in ?? (). ===========================================================. ```. If I run it with the QtCreator debugger, it completely freezes the mouse, I have to open a terminal and call pkill qtcreator. (Which is something I rarely had needed to do before.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:3375,usability,mous,mouse,3375,"===========. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f49a0ab5457 in __GI___waitpid (pid=3907, stat_loc=stat_loc. entry=0x7ffe8def7918, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007f49a0a20177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007f49a1660340 in TUnixSystem::StackTrace() () from /opt/root_bld/lib/libCore.so. #3 0x00007f49a1662eb5 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root_bld/lib/libCore.so. #4 <signal handler called>. #5 __strlen_avx2 () at ../sysdeps/x86_64/multiarch/strlen-avx2.S:65. #6 0x00007f49a1561565 in TString::TString(char const*) () from /opt/root_bld/lib/libCore.so. #7 0x00007f499261ff70 in TGTextButton::SetTitle(char const*) () from /opt/root_bld/lib/libGui.so. #8 0x00007f4993663032 in ?? (). #9 0x0000000000000000 in ?? (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 __strlen_avx2 () at ../sysdeps/x86_64/multiarch/strlen-avx2.S:65. #6 0x00007f49a1561565 in TString::TString(char const*) () from /opt/root_bld/lib/libCore.so. #7 0x00007f499261ff70 in TGTextButton::SetTitle(char const*) () from /opt/root_bld/lib/libGui.so. #8 0x00007f4993663032 in ?? (). #9 0x0000000000000000 in ?? (). ===========================================================. ```. If I run it with the QtCreator debugger, it completely freezes the mouse, I have to open a terminal and call pkill qtcreator. (Which is something I rarely had needed to do before.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:2975,availability,error,error,2975,"c_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /opt/root_bld/lib/libCling.so. #14 0x00007fa532d60f2b in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /opt/root_bld/lib/libCling.so. #15 0x00007fa532e38e25 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /opt/root_bld/lib/libCling.so. #16 0x00007fa532ba4e14 in HandleInterpreterException (metaProcessor=0x55bdc9e8b7a0, input_line=0x55bdca3173a0 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", compRes=. 0x7ffc922b1024: cling::Interpreter::kSuccess, result=0x7ffc922b1070) at /opt/root_src/core/metacling/src/TCling.cxx:2433. #17 0x00007fa532ba5aa6 in TCling::ProcessLine (this=0x55bdc9765c30, line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/metacling/src/TCling.cxx:2591. #18 0x00007fa539bb646a in TApplication::ProcessLine (this=0x55bdc97497e0, line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", sync=false, err=0x7ffc922b1588) at /opt/root_src/core/base/src/TApplication.cxx:1471. #19 0x00007fa53a245bb9 in TRint::ProcessLineNr (this=0x55bdc97497e0, filestem=0x7fa53a255f2f ""ROOT_prompt_"", line=0x7ffc922b1649 ""strlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/rint/src/TRint.cxx:751. #20 0x00007fa53a245484 in TRint::HandleTermInput (this=0x55bdc97497e0) at /opt/root_src/core/rint/src/TRint.cxx:612. #21 0x00007fa53a242df1 in TTermInputHandler::Notify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:132. #22 0x00007fa53a2473f7 in TTermInputHandler::ReadNotify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:124. #23 0x00007fa539d4b871 in TUnixSystem::CheckDescriptors (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1322. #24 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:3414,availability,error,error,3414,"ling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /opt/root_bld/lib/libCling.so. #16 0x00007fa532ba4e14 in HandleInterpreterException (metaProcessor=0x55bdc9e8b7a0, input_line=0x55bdca3173a0 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", compRes=. 0x7ffc922b1024: cling::Interpreter::kSuccess, result=0x7ffc922b1070) at /opt/root_src/core/metacling/src/TCling.cxx:2433. #17 0x00007fa532ba5aa6 in TCling::ProcessLine (this=0x55bdc9765c30, line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/metacling/src/TCling.cxx:2591. #18 0x00007fa539bb646a in TApplication::ProcessLine (this=0x55bdc97497e0, line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", sync=false, err=0x7ffc922b1588) at /opt/root_src/core/base/src/TApplication.cxx:1471. #19 0x00007fa53a245bb9 in TRint::ProcessLineNr (this=0x55bdc97497e0, filestem=0x7fa53a255f2f ""ROOT_prompt_"", line=0x7ffc922b1649 ""strlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/rint/src/TRint.cxx:751. #20 0x00007fa53a245484 in TRint::HandleTermInput (this=0x55bdc97497e0) at /opt/root_src/core/rint/src/TRint.cxx:612. #21 0x00007fa53a242df1 in TTermInputHandler::Notify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:132. #22 0x00007fa53a2473f7 in TTermInputHandler::ReadNotify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:124. #23 0x00007fa539d4b871 in TUnixSystem::CheckDescriptors (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1322. #24 0x00007fa539d4aae7 in TUnixSystem::DispatchOneEvent (this=0x55bdc96f17c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1077. #25 0x00007fa539c2dc49 in TSystem::InnerLoop (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:404. #26 0x00007fa539c2d9de in TSystem::Run (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:354. #27 0x00007fa539bb6fea in TApplication::Run (this=0x55bdc97497e0, ret",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:4700,availability,Error,Error,4700,"line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", sync=false, err=0x7ffc922b1588) at /opt/root_src/core/base/src/TApplication.cxx:1471. #19 0x00007fa53a245bb9 in TRint::ProcessLineNr (this=0x55bdc97497e0, filestem=0x7fa53a255f2f ""ROOT_prompt_"", line=0x7ffc922b1649 ""strlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/rint/src/TRint.cxx:751. #20 0x00007fa53a245484 in TRint::HandleTermInput (this=0x55bdc97497e0) at /opt/root_src/core/rint/src/TRint.cxx:612. #21 0x00007fa53a242df1 in TTermInputHandler::Notify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:132. #22 0x00007fa53a2473f7 in TTermInputHandler::ReadNotify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:124. #23 0x00007fa539d4b871 in TUnixSystem::CheckDescriptors (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1322. #24 0x00007fa539d4aae7 in TUnixSystem::DispatchOneEvent (this=0x55bdc96f17c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1077. #25 0x00007fa539c2dc49 in TSystem::InnerLoop (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:404. #26 0x00007fa539c2d9de in TSystem::Run (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:354. #27 0x00007fa539bb6fea in TApplication::Run (this=0x55bdc97497e0, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1623. #28 0x00007fa53a2447ef in TRint::Run (this=0x55bdc97497e0, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:463. #29 0x000055bdc8f70a99 in main (argc=1, argv=0x7ffc922b3ac8) at /opt/root_src/main/src/rmain.cxx:30. Error in <HandleInterpreterException>: Trying to access a pointer that points to an invalid memory address.. Execution of your code was aborted. ROOT_prompt_6:1:8: warning: invalid memory pointer passed to a callee:. strlen(cs). ^~. root [7] cs. (const char *) 0x1 <invalid memory address>. ```. If I select the first element of the Combo-Box, then cs = 0 and it does not crash because the if(cs) in the TString constructor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:876,deployability,Stack,StackTrace,876,"This is what my debugger shows before it freezes:. ![image](https://user-images.githubusercontent.com/10653970/108070249-4bf5ae80-7032-11eb-9f35-124c473c0521.png). It looks as if the Selected(Int_t) signal argument (integer) is being passed as a string?. I was able to reproduce the crash isolatedly in a ROOT terminal:. ```. const char* cs = reinterpret_cast<const char*>(0x1);. strlen(cs). #0 0x00007fa539040457 in __GI___waitpid (pid=20783, stat_loc=stat_loc. entry=0x7ffc922ae768, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007fa538fab177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007fa539d4d5c4 in TUnixSystem::Exec (this=0x55bdc96f17c0, shellcmd=0x55bdca31f240 ""/opt/root_bld/etc/gdb-backtrace.sh 20254 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007fa539d4de75 in TUnixSystem::StackTrace (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007fa532b992f1 in TCling__PrintStackTrace () at /opt/root_src/core/metacling/src/TCling.cxx:324. #5 0x00007fa532cecc2b in TClingCallbacks::PrintStackTrace (this=0x55bdc9c9adc0) at /opt/root_src/core/metacling/src/TClingCallbacks.cxx:921. #6 0x00007fa532d5dfc8 in cling::MultiplexInterpreterCallbacks::PrintStackTrace() () from /opt/root_bld/lib/libCling.so. #7 0x00007fa532d5d902 in cling_runtime_internal_throwIfInvalidPointer () from /opt/root_bld/lib/libCling.so. #8 0x00007fa53a595075 in ?? (). #9 0x00007ffc922b0b70 in ?? (). #10 0x00007fa532b99375 in TCling__ResetInterpreterMutex () at /opt/root_src/core/metacling/src/TCling.cxx:351. #11 0x00007fa532ddb133 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /opt/root_bld/lib/libCling.so. #12 0x00007fa532d5fcf0 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /opt/root_bld/lib/libCling.so. #13 0x00007fa532d60d58 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::ch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:597,energy efficiency,optim,optimized,597,"This is what my debugger shows before it freezes:. ![image](https://user-images.githubusercontent.com/10653970/108070249-4bf5ae80-7032-11eb-9f35-124c473c0521.png). It looks as if the Selected(Int_t) signal argument (integer) is being passed as a string?. I was able to reproduce the crash isolatedly in a ROOT terminal:. ```. const char* cs = reinterpret_cast<const char*>(0x1);. strlen(cs). #0 0x00007fa539040457 in __GI___waitpid (pid=20783, stat_loc=stat_loc. entry=0x7ffc922ae768, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007fa538fab177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007fa539d4d5c4 in TUnixSystem::Exec (this=0x55bdc96f17c0, shellcmd=0x55bdca31f240 ""/opt/root_bld/etc/gdb-backtrace.sh 20254 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007fa539d4de75 in TUnixSystem::StackTrace (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007fa532b992f1 in TCling__PrintStackTrace () at /opt/root_src/core/metacling/src/TCling.cxx:324. #5 0x00007fa532cecc2b in TClingCallbacks::PrintStackTrace (this=0x55bdc9c9adc0) at /opt/root_src/core/metacling/src/TClingCallbacks.cxx:921. #6 0x00007fa532d5dfc8 in cling::MultiplexInterpreterCallbacks::PrintStackTrace() () from /opt/root_bld/lib/libCling.so. #7 0x00007fa532d5d902 in cling_runtime_internal_throwIfInvalidPointer () from /opt/root_bld/lib/libCling.so. #8 0x00007fa53a595075 in ?? (). #9 0x00007ffc922b0b70 in ?? (). #10 0x00007fa532b99375 in TCling__ResetInterpreterMutex () at /opt/root_src/core/metacling/src/TCling.cxx:351. #11 0x00007fa532ddb133 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /opt/root_bld/lib/libCling.so. #12 0x00007fa532d5fcf0 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /opt/root_bld/lib/libCling.so. #13 0x00007fa532d60d58 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::ch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:802,energy efficiency,core,core,802,"This is what my debugger shows before it freezes:. ![image](https://user-images.githubusercontent.com/10653970/108070249-4bf5ae80-7032-11eb-9f35-124c473c0521.png). It looks as if the Selected(Int_t) signal argument (integer) is being passed as a string?. I was able to reproduce the crash isolatedly in a ROOT terminal:. ```. const char* cs = reinterpret_cast<const char*>(0x1);. strlen(cs). #0 0x00007fa539040457 in __GI___waitpid (pid=20783, stat_loc=stat_loc. entry=0x7ffc922ae768, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007fa538fab177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007fa539d4d5c4 in TUnixSystem::Exec (this=0x55bdc96f17c0, shellcmd=0x55bdca31f240 ""/opt/root_bld/etc/gdb-backtrace.sh 20254 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007fa539d4de75 in TUnixSystem::StackTrace (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007fa532b992f1 in TCling__PrintStackTrace () at /opt/root_src/core/metacling/src/TCling.cxx:324. #5 0x00007fa532cecc2b in TClingCallbacks::PrintStackTrace (this=0x55bdc9c9adc0) at /opt/root_src/core/metacling/src/TClingCallbacks.cxx:921. #6 0x00007fa532d5dfc8 in cling::MultiplexInterpreterCallbacks::PrintStackTrace() () from /opt/root_bld/lib/libCling.so. #7 0x00007fa532d5d902 in cling_runtime_internal_throwIfInvalidPointer () from /opt/root_bld/lib/libCling.so. #8 0x00007fa53a595075 in ?? (). #9 0x00007ffc922b0b70 in ?? (). #10 0x00007fa532b99375 in TCling__ResetInterpreterMutex () at /opt/root_src/core/metacling/src/TCling.cxx:351. #11 0x00007fa532ddb133 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /opt/root_bld/lib/libCling.so. #12 0x00007fa532d5fcf0 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /opt/root_bld/lib/libCling.so. #13 0x00007fa532d60d58 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::ch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:926,energy efficiency,core,core,926,"This is what my debugger shows before it freezes:. ![image](https://user-images.githubusercontent.com/10653970/108070249-4bf5ae80-7032-11eb-9f35-124c473c0521.png). It looks as if the Selected(Int_t) signal argument (integer) is being passed as a string?. I was able to reproduce the crash isolatedly in a ROOT terminal:. ```. const char* cs = reinterpret_cast<const char*>(0x1);. strlen(cs). #0 0x00007fa539040457 in __GI___waitpid (pid=20783, stat_loc=stat_loc. entry=0x7ffc922ae768, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007fa538fab177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007fa539d4d5c4 in TUnixSystem::Exec (this=0x55bdc96f17c0, shellcmd=0x55bdca31f240 ""/opt/root_bld/etc/gdb-backtrace.sh 20254 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007fa539d4de75 in TUnixSystem::StackTrace (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007fa532b992f1 in TCling__PrintStackTrace () at /opt/root_src/core/metacling/src/TCling.cxx:324. #5 0x00007fa532cecc2b in TClingCallbacks::PrintStackTrace (this=0x55bdc9c9adc0) at /opt/root_src/core/metacling/src/TClingCallbacks.cxx:921. #6 0x00007fa532d5dfc8 in cling::MultiplexInterpreterCallbacks::PrintStackTrace() () from /opt/root_bld/lib/libCling.so. #7 0x00007fa532d5d902 in cling_runtime_internal_throwIfInvalidPointer () from /opt/root_bld/lib/libCling.so. #8 0x00007fa53a595075 in ?? (). #9 0x00007ffc922b0b70 in ?? (). #10 0x00007fa532b99375 in TCling__ResetInterpreterMutex () at /opt/root_src/core/metacling/src/TCling.cxx:351. #11 0x00007fa532ddb133 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /opt/root_bld/lib/libCling.so. #12 0x00007fa532d5fcf0 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /opt/root_bld/lib/libCling.so. #13 0x00007fa532d60d58 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::ch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:1031,energy efficiency,core,core,1031,"fore it freezes:. ![image](https://user-images.githubusercontent.com/10653970/108070249-4bf5ae80-7032-11eb-9f35-124c473c0521.png). It looks as if the Selected(Int_t) signal argument (integer) is being passed as a string?. I was able to reproduce the crash isolatedly in a ROOT terminal:. ```. const char* cs = reinterpret_cast<const char*>(0x1);. strlen(cs). #0 0x00007fa539040457 in __GI___waitpid (pid=20783, stat_loc=stat_loc. entry=0x7ffc922ae768, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007fa538fab177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007fa539d4d5c4 in TUnixSystem::Exec (this=0x55bdc96f17c0, shellcmd=0x55bdca31f240 ""/opt/root_bld/etc/gdb-backtrace.sh 20254 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007fa539d4de75 in TUnixSystem::StackTrace (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007fa532b992f1 in TCling__PrintStackTrace () at /opt/root_src/core/metacling/src/TCling.cxx:324. #5 0x00007fa532cecc2b in TClingCallbacks::PrintStackTrace (this=0x55bdc9c9adc0) at /opt/root_src/core/metacling/src/TClingCallbacks.cxx:921. #6 0x00007fa532d5dfc8 in cling::MultiplexInterpreterCallbacks::PrintStackTrace() () from /opt/root_bld/lib/libCling.so. #7 0x00007fa532d5d902 in cling_runtime_internal_throwIfInvalidPointer () from /opt/root_bld/lib/libCling.so. #8 0x00007fa53a595075 in ?? (). #9 0x00007ffc922b0b70 in ?? (). #10 0x00007fa532b99375 in TCling__ResetInterpreterMutex () at /opt/root_src/core/metacling/src/TCling.cxx:351. #11 0x00007fa532ddb133 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /opt/root_bld/lib/libCling.so. #12 0x00007fa532d5fcf0 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /opt/root_bld/lib/libCling.so. #13 0x00007fa532d60d58 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:1163,energy efficiency,core,core,1163,"t looks as if the Selected(Int_t) signal argument (integer) is being passed as a string?. I was able to reproduce the crash isolatedly in a ROOT terminal:. ```. const char* cs = reinterpret_cast<const char*>(0x1);. strlen(cs). #0 0x00007fa539040457 in __GI___waitpid (pid=20783, stat_loc=stat_loc. entry=0x7ffc922ae768, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007fa538fab177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007fa539d4d5c4 in TUnixSystem::Exec (this=0x55bdc96f17c0, shellcmd=0x55bdca31f240 ""/opt/root_bld/etc/gdb-backtrace.sh 20254 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007fa539d4de75 in TUnixSystem::StackTrace (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007fa532b992f1 in TCling__PrintStackTrace () at /opt/root_src/core/metacling/src/TCling.cxx:324. #5 0x00007fa532cecc2b in TClingCallbacks::PrintStackTrace (this=0x55bdc9c9adc0) at /opt/root_src/core/metacling/src/TClingCallbacks.cxx:921. #6 0x00007fa532d5dfc8 in cling::MultiplexInterpreterCallbacks::PrintStackTrace() () from /opt/root_bld/lib/libCling.so. #7 0x00007fa532d5d902 in cling_runtime_internal_throwIfInvalidPointer () from /opt/root_bld/lib/libCling.so. #8 0x00007fa53a595075 in ?? (). #9 0x00007ffc922b0b70 in ?? (). #10 0x00007fa532b99375 in TCling__ResetInterpreterMutex () at /opt/root_src/core/metacling/src/TCling.cxx:351. #11 0x00007fa532ddb133 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /opt/root_bld/lib/libCling.so. #12 0x00007fa532d5fcf0 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /opt/root_bld/lib/libCling.so. #13 0x00007fa532d60d58 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /opt/root_bld/lib/libCling.so.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:1576,energy efficiency,core,core,1576,"n do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007fa539d4d5c4 in TUnixSystem::Exec (this=0x55bdc96f17c0, shellcmd=0x55bdca31f240 ""/opt/root_bld/etc/gdb-backtrace.sh 20254 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007fa539d4de75 in TUnixSystem::StackTrace (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007fa532b992f1 in TCling__PrintStackTrace () at /opt/root_src/core/metacling/src/TCling.cxx:324. #5 0x00007fa532cecc2b in TClingCallbacks::PrintStackTrace (this=0x55bdc9c9adc0) at /opt/root_src/core/metacling/src/TClingCallbacks.cxx:921. #6 0x00007fa532d5dfc8 in cling::MultiplexInterpreterCallbacks::PrintStackTrace() () from /opt/root_bld/lib/libCling.so. #7 0x00007fa532d5d902 in cling_runtime_internal_throwIfInvalidPointer () from /opt/root_bld/lib/libCling.so. #8 0x00007fa53a595075 in ?? (). #9 0x00007ffc922b0b70 in ?? (). #10 0x00007fa532b99375 in TCling__ResetInterpreterMutex () at /opt/root_src/core/metacling/src/TCling.cxx:351. #11 0x00007fa532ddb133 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /opt/root_bld/lib/libCling.so. #12 0x00007fa532d5fcf0 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /opt/root_bld/lib/libCling.so. #13 0x00007fa532d60d58 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /opt/root_bld/lib/libCling.so. #14 0x00007fa532d60f2b in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /opt/root_bld/lib/libCling.so. #15 0x00007fa532e38e25 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /opt/root_bld/lib/libCling.so. #16 0x00007fa53",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:2022,energy efficiency,alloc,allocator,2022,"src/core/metacling/src/TCling.cxx:324. #5 0x00007fa532cecc2b in TClingCallbacks::PrintStackTrace (this=0x55bdc9c9adc0) at /opt/root_src/core/metacling/src/TClingCallbacks.cxx:921. #6 0x00007fa532d5dfc8 in cling::MultiplexInterpreterCallbacks::PrintStackTrace() () from /opt/root_bld/lib/libCling.so. #7 0x00007fa532d5d902 in cling_runtime_internal_throwIfInvalidPointer () from /opt/root_bld/lib/libCling.so. #8 0x00007fa53a595075 in ?? (). #9 0x00007ffc922b0b70 in ?? (). #10 0x00007fa532b99375 in TCling__ResetInterpreterMutex () at /opt/root_src/core/metacling/src/TCling.cxx:351. #11 0x00007fa532ddb133 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /opt/root_bld/lib/libCling.so. #12 0x00007fa532d5fcf0 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /opt/root_bld/lib/libCling.so. #13 0x00007fa532d60d58 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /opt/root_bld/lib/libCling.so. #14 0x00007fa532d60f2b in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /opt/root_bld/lib/libCling.so. #15 0x00007fa532e38e25 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /opt/root_bld/lib/libCling.so. #16 0x00007fa532ba4e14 in HandleInterpreterException (metaProcessor=0x55bdc9e8b7a0, input_line=0x55bdca3173a0 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", compRes=. 0x7ffc922b1024: cling::Interpreter::kSuccess, result=0x7ffc922b1070) at /opt/root_src/core/metacling/src/TCling.cxx:2433. #17 0x00007fa532ba5aa6 in TCling::ProcessLine (this=0x55bdc9765c30, line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/metaclin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:2282,energy efficiency,alloc,allocator,2282," () from /opt/root_bld/lib/libCling.so. #7 0x00007fa532d5d902 in cling_runtime_internal_throwIfInvalidPointer () from /opt/root_bld/lib/libCling.so. #8 0x00007fa53a595075 in ?? (). #9 0x00007ffc922b0b70 in ?? (). #10 0x00007fa532b99375 in TCling__ResetInterpreterMutex () at /opt/root_src/core/metacling/src/TCling.cxx:351. #11 0x00007fa532ddb133 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /opt/root_bld/lib/libCling.so. #12 0x00007fa532d5fcf0 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /opt/root_bld/lib/libCling.so. #13 0x00007fa532d60d58 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /opt/root_bld/lib/libCling.so. #14 0x00007fa532d60f2b in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /opt/root_bld/lib/libCling.so. #15 0x00007fa532e38e25 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /opt/root_bld/lib/libCling.so. #16 0x00007fa532ba4e14 in HandleInterpreterException (metaProcessor=0x55bdc9e8b7a0, input_line=0x55bdca3173a0 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", compRes=. 0x7ffc922b1024: cling::Interpreter::kSuccess, result=0x7ffc922b1070) at /opt/root_src/core/metacling/src/TCling.cxx:2433. #17 0x00007fa532ba5aa6 in TCling::ProcessLine (this=0x55bdc9765c30, line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/metacling/src/TCling.cxx:2591. #18 0x00007fa539bb646a in TApplication::ProcessLine (this=0x55bdc97497e0, line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", sync=false, err=0x7ffc922b1588) at /opt/root_src/core/base/src/TApplication.cxx:1471. #19 0x00007fa53a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:2810,energy efficiency,core,core,2810,"on(clang::FunctionDecl const*, cling::Value*) () from /opt/root_bld/lib/libCling.so. #13 0x00007fa532d60d58 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /opt/root_bld/lib/libCling.so. #14 0x00007fa532d60f2b in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /opt/root_bld/lib/libCling.so. #15 0x00007fa532e38e25 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /opt/root_bld/lib/libCling.so. #16 0x00007fa532ba4e14 in HandleInterpreterException (metaProcessor=0x55bdc9e8b7a0, input_line=0x55bdca3173a0 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", compRes=. 0x7ffc922b1024: cling::Interpreter::kSuccess, result=0x7ffc922b1070) at /opt/root_src/core/metacling/src/TCling.cxx:2433. #17 0x00007fa532ba5aa6 in TCling::ProcessLine (this=0x55bdc9765c30, line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/metacling/src/TCling.cxx:2591. #18 0x00007fa539bb646a in TApplication::ProcessLine (this=0x55bdc97497e0, line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", sync=false, err=0x7ffc922b1588) at /opt/root_src/core/base/src/TApplication.cxx:1471. #19 0x00007fa53a245bb9 in TRint::ProcessLineNr (this=0x55bdc97497e0, filestem=0x7fa53a255f2f ""ROOT_prompt_"", line=0x7ffc922b1649 ""strlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/rint/src/TRint.cxx:751. #20 0x00007fa53a245484 in TRint::HandleTermInput (this=0x55bdc97497e0) at /opt/root_src/core/rint/src/TRint.cxx:612. #21 0x00007fa53a242df1 in TTermInputHandler::Notify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:132. #22 0x00007fa53a2473f7 in TTermInputHandler::ReadNotify (this=0x55bdca28cb00) at /opt/root_sr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:3014,energy efficiency,core,core,3014," std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /opt/root_bld/lib/libCling.so. #14 0x00007fa532d60f2b in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /opt/root_bld/lib/libCling.so. #15 0x00007fa532e38e25 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /opt/root_bld/lib/libCling.so. #16 0x00007fa532ba4e14 in HandleInterpreterException (metaProcessor=0x55bdc9e8b7a0, input_line=0x55bdca3173a0 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", compRes=. 0x7ffc922b1024: cling::Interpreter::kSuccess, result=0x7ffc922b1070) at /opt/root_src/core/metacling/src/TCling.cxx:2433. #17 0x00007fa532ba5aa6 in TCling::ProcessLine (this=0x55bdc9765c30, line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/metacling/src/TCling.cxx:2591. #18 0x00007fa539bb646a in TApplication::ProcessLine (this=0x55bdc97497e0, line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", sync=false, err=0x7ffc922b1588) at /opt/root_src/core/base/src/TApplication.cxx:1471. #19 0x00007fa53a245bb9 in TRint::ProcessLineNr (this=0x55bdc97497e0, filestem=0x7fa53a255f2f ""ROOT_prompt_"", line=0x7ffc922b1649 ""strlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/rint/src/TRint.cxx:751. #20 0x00007fa53a245484 in TRint::HandleTermInput (this=0x55bdc97497e0) at /opt/root_src/core/rint/src/TRint.cxx:612. #21 0x00007fa53a242df1 in TTermInputHandler::Notify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:132. #22 0x00007fa53a2473f7 in TTermInputHandler::ReadNotify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:124. #23 0x00007fa539d4b871 in TUnixSystem::CheckDescriptors (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1322. #24 0x00007fa539d4aae7 in TUnixSystem::Dis",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:3234,energy efficiency,core,core,3234,"sic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /opt/root_bld/lib/libCling.so. #15 0x00007fa532e38e25 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /opt/root_bld/lib/libCling.so. #16 0x00007fa532ba4e14 in HandleInterpreterException (metaProcessor=0x55bdc9e8b7a0, input_line=0x55bdca3173a0 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", compRes=. 0x7ffc922b1024: cling::Interpreter::kSuccess, result=0x7ffc922b1070) at /opt/root_src/core/metacling/src/TCling.cxx:2433. #17 0x00007fa532ba5aa6 in TCling::ProcessLine (this=0x55bdc9765c30, line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/metacling/src/TCling.cxx:2591. #18 0x00007fa539bb646a in TApplication::ProcessLine (this=0x55bdc97497e0, line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", sync=false, err=0x7ffc922b1588) at /opt/root_src/core/base/src/TApplication.cxx:1471. #19 0x00007fa53a245bb9 in TRint::ProcessLineNr (this=0x55bdc97497e0, filestem=0x7fa53a255f2f ""ROOT_prompt_"", line=0x7ffc922b1649 ""strlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/rint/src/TRint.cxx:751. #20 0x00007fa53a245484 in TRint::HandleTermInput (this=0x55bdc97497e0) at /opt/root_src/core/rint/src/TRint.cxx:612. #21 0x00007fa53a242df1 in TTermInputHandler::Notify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:132. #22 0x00007fa53a2473f7 in TTermInputHandler::ReadNotify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:124. #23 0x00007fa539d4b871 in TUnixSystem::CheckDescriptors (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1322. #24 0x00007fa539d4aae7 in TUnixSystem::DispatchOneEvent (this=0x55bdc96f17c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1077. #25 0x00007fa539c2dc49 in TSystem::InnerLoop (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:40",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:3453,energy efficiency,core,core,3453,"ingRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /opt/root_bld/lib/libCling.so. #16 0x00007fa532ba4e14 in HandleInterpreterException (metaProcessor=0x55bdc9e8b7a0, input_line=0x55bdca3173a0 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", compRes=. 0x7ffc922b1024: cling::Interpreter::kSuccess, result=0x7ffc922b1070) at /opt/root_src/core/metacling/src/TCling.cxx:2433. #17 0x00007fa532ba5aa6 in TCling::ProcessLine (this=0x55bdc9765c30, line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/metacling/src/TCling.cxx:2591. #18 0x00007fa539bb646a in TApplication::ProcessLine (this=0x55bdc97497e0, line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", sync=false, err=0x7ffc922b1588) at /opt/root_src/core/base/src/TApplication.cxx:1471. #19 0x00007fa53a245bb9 in TRint::ProcessLineNr (this=0x55bdc97497e0, filestem=0x7fa53a255f2f ""ROOT_prompt_"", line=0x7ffc922b1649 ""strlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/rint/src/TRint.cxx:751. #20 0x00007fa53a245484 in TRint::HandleTermInput (this=0x55bdc97497e0) at /opt/root_src/core/rint/src/TRint.cxx:612. #21 0x00007fa53a242df1 in TTermInputHandler::Notify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:132. #22 0x00007fa53a2473f7 in TTermInputHandler::ReadNotify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:124. #23 0x00007fa539d4b871 in TUnixSystem::CheckDescriptors (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1322. #24 0x00007fa539d4aae7 in TUnixSystem::DispatchOneEvent (this=0x55bdc96f17c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1077. #25 0x00007fa539c2dc49 in TSystem::InnerLoop (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:404. #26 0x00007fa539c2d9de in TSystem::Run (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:354. #27 0x00007fa539bb6fea in TApplication::Run (this=0x55bdc97497e0, retrn=false) at /opt/root_src/core/base/s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:3570,energy efficiency,core,core,3570,"07fa532ba4e14 in HandleInterpreterException (metaProcessor=0x55bdc9e8b7a0, input_line=0x55bdca3173a0 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", compRes=. 0x7ffc922b1024: cling::Interpreter::kSuccess, result=0x7ffc922b1070) at /opt/root_src/core/metacling/src/TCling.cxx:2433. #17 0x00007fa532ba5aa6 in TCling::ProcessLine (this=0x55bdc9765c30, line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/metacling/src/TCling.cxx:2591. #18 0x00007fa539bb646a in TApplication::ProcessLine (this=0x55bdc97497e0, line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", sync=false, err=0x7ffc922b1588) at /opt/root_src/core/base/src/TApplication.cxx:1471. #19 0x00007fa53a245bb9 in TRint::ProcessLineNr (this=0x55bdc97497e0, filestem=0x7fa53a255f2f ""ROOT_prompt_"", line=0x7ffc922b1649 ""strlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/rint/src/TRint.cxx:751. #20 0x00007fa53a245484 in TRint::HandleTermInput (this=0x55bdc97497e0) at /opt/root_src/core/rint/src/TRint.cxx:612. #21 0x00007fa53a242df1 in TTermInputHandler::Notify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:132. #22 0x00007fa53a2473f7 in TTermInputHandler::ReadNotify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:124. #23 0x00007fa539d4b871 in TUnixSystem::CheckDescriptors (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1322. #24 0x00007fa539d4aae7 in TUnixSystem::DispatchOneEvent (this=0x55bdc96f17c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1077. #25 0x00007fa539c2dc49 in TSystem::InnerLoop (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:404. #26 0x00007fa539c2d9de in TSystem::Run (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:354. #27 0x00007fa539bb6fea in TApplication::Run (this=0x55bdc97497e0, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1623. #28 0x00007fa53a2447ef in TRint::Run (this=0x55bdc97497e0, retrn=false) at /opt/root_src/co",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:3690,energy efficiency,core,core,3690,"mpt_6\""\nstrlen(cs)"", compRes=. 0x7ffc922b1024: cling::Interpreter::kSuccess, result=0x7ffc922b1070) at /opt/root_src/core/metacling/src/TCling.cxx:2433. #17 0x00007fa532ba5aa6 in TCling::ProcessLine (this=0x55bdc9765c30, line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/metacling/src/TCling.cxx:2591. #18 0x00007fa539bb646a in TApplication::ProcessLine (this=0x55bdc97497e0, line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", sync=false, err=0x7ffc922b1588) at /opt/root_src/core/base/src/TApplication.cxx:1471. #19 0x00007fa53a245bb9 in TRint::ProcessLineNr (this=0x55bdc97497e0, filestem=0x7fa53a255f2f ""ROOT_prompt_"", line=0x7ffc922b1649 ""strlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/rint/src/TRint.cxx:751. #20 0x00007fa53a245484 in TRint::HandleTermInput (this=0x55bdc97497e0) at /opt/root_src/core/rint/src/TRint.cxx:612. #21 0x00007fa53a242df1 in TTermInputHandler::Notify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:132. #22 0x00007fa53a2473f7 in TTermInputHandler::ReadNotify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:124. #23 0x00007fa539d4b871 in TUnixSystem::CheckDescriptors (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1322. #24 0x00007fa539d4aae7 in TUnixSystem::DispatchOneEvent (this=0x55bdc96f17c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1077. #25 0x00007fa539c2dc49 in TSystem::InnerLoop (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:404. #26 0x00007fa539c2d9de in TSystem::Run (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:354. #27 0x00007fa539bb6fea in TApplication::Run (this=0x55bdc97497e0, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1623. #28 0x00007fa53a2447ef in TRint::Run (this=0x55bdc97497e0, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:463. #29 0x000055bdc8f70a99 in main (argc=1, argv=0x7ffc922b3ac8) at /opt/root_src/main/src/rmain.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:3814,energy efficiency,core,core,3814,"etacling/src/TCling.cxx:2433. #17 0x00007fa532ba5aa6 in TCling::ProcessLine (this=0x55bdc9765c30, line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/metacling/src/TCling.cxx:2591. #18 0x00007fa539bb646a in TApplication::ProcessLine (this=0x55bdc97497e0, line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", sync=false, err=0x7ffc922b1588) at /opt/root_src/core/base/src/TApplication.cxx:1471. #19 0x00007fa53a245bb9 in TRint::ProcessLineNr (this=0x55bdc97497e0, filestem=0x7fa53a255f2f ""ROOT_prompt_"", line=0x7ffc922b1649 ""strlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/rint/src/TRint.cxx:751. #20 0x00007fa53a245484 in TRint::HandleTermInput (this=0x55bdc97497e0) at /opt/root_src/core/rint/src/TRint.cxx:612. #21 0x00007fa53a242df1 in TTermInputHandler::Notify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:132. #22 0x00007fa53a2473f7 in TTermInputHandler::ReadNotify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:124. #23 0x00007fa539d4b871 in TUnixSystem::CheckDescriptors (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1322. #24 0x00007fa539d4aae7 in TUnixSystem::DispatchOneEvent (this=0x55bdc96f17c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1077. #25 0x00007fa539c2dc49 in TSystem::InnerLoop (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:404. #26 0x00007fa539c2d9de in TSystem::Run (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:354. #27 0x00007fa539bb6fea in TApplication::Run (this=0x55bdc97497e0, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1623. #28 0x00007fa53a2447ef in TRint::Run (this=0x55bdc97497e0, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:463. #29 0x000055bdc8f70a99 in main (argc=1, argv=0x7ffc922b3ac8) at /opt/root_src/main/src/rmain.cxx:30. Error in <HandleInterpreterException>: Trying to access a pointer that points to an invalid memory address.. Executi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:3938,energy efficiency,core,core,3938," 1 \""ROOT_prompt_6\""\nstrlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/metacling/src/TCling.cxx:2591. #18 0x00007fa539bb646a in TApplication::ProcessLine (this=0x55bdc97497e0, line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", sync=false, err=0x7ffc922b1588) at /opt/root_src/core/base/src/TApplication.cxx:1471. #19 0x00007fa53a245bb9 in TRint::ProcessLineNr (this=0x55bdc97497e0, filestem=0x7fa53a255f2f ""ROOT_prompt_"", line=0x7ffc922b1649 ""strlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/rint/src/TRint.cxx:751. #20 0x00007fa53a245484 in TRint::HandleTermInput (this=0x55bdc97497e0) at /opt/root_src/core/rint/src/TRint.cxx:612. #21 0x00007fa53a242df1 in TTermInputHandler::Notify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:132. #22 0x00007fa53a2473f7 in TTermInputHandler::ReadNotify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:124. #23 0x00007fa539d4b871 in TUnixSystem::CheckDescriptors (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1322. #24 0x00007fa539d4aae7 in TUnixSystem::DispatchOneEvent (this=0x55bdc96f17c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1077. #25 0x00007fa539c2dc49 in TSystem::InnerLoop (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:404. #26 0x00007fa539c2d9de in TSystem::Run (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:354. #27 0x00007fa539bb6fea in TApplication::Run (this=0x55bdc97497e0, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1623. #28 0x00007fa53a2447ef in TRint::Run (this=0x55bdc97497e0, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:463. #29 0x000055bdc8f70a99 in main (argc=1, argv=0x7ffc922b3ac8) at /opt/root_src/main/src/rmain.cxx:30. Error in <HandleInterpreterException>: Trying to access a pointer that points to an invalid memory address.. Execution of your code was aborted. ROOT_prompt_6:1:8: warning: invalid memory pointer passed to a callee:. strlen(cs). ^~. root [7",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:4088,energy efficiency,core,core,4088,"ProcessLine (this=0x55bdc97497e0, line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", sync=false, err=0x7ffc922b1588) at /opt/root_src/core/base/src/TApplication.cxx:1471. #19 0x00007fa53a245bb9 in TRint::ProcessLineNr (this=0x55bdc97497e0, filestem=0x7fa53a255f2f ""ROOT_prompt_"", line=0x7ffc922b1649 ""strlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/rint/src/TRint.cxx:751. #20 0x00007fa53a245484 in TRint::HandleTermInput (this=0x55bdc97497e0) at /opt/root_src/core/rint/src/TRint.cxx:612. #21 0x00007fa53a242df1 in TTermInputHandler::Notify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:132. #22 0x00007fa53a2473f7 in TTermInputHandler::ReadNotify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:124. #23 0x00007fa539d4b871 in TUnixSystem::CheckDescriptors (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1322. #24 0x00007fa539d4aae7 in TUnixSystem::DispatchOneEvent (this=0x55bdc96f17c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1077. #25 0x00007fa539c2dc49 in TSystem::InnerLoop (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:404. #26 0x00007fa539c2d9de in TSystem::Run (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:354. #27 0x00007fa539bb6fea in TApplication::Run (this=0x55bdc97497e0, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1623. #28 0x00007fa53a2447ef in TRint::Run (this=0x55bdc97497e0, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:463. #29 0x000055bdc8f70a99 in main (argc=1, argv=0x7ffc922b3ac8) at /opt/root_src/main/src/rmain.cxx:30. Error in <HandleInterpreterException>: Trying to access a pointer that points to an invalid memory address.. Execution of your code was aborted. ROOT_prompt_6:1:8: warning: invalid memory pointer passed to a callee:. strlen(cs). ^~. root [7] cs. (const char *) 0x1 <invalid memory address>. ```. If I select the first element of the Combo-Box, then cs = 0 and it does not crash because the ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:4208,energy efficiency,core,core,4208,"line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", sync=false, err=0x7ffc922b1588) at /opt/root_src/core/base/src/TApplication.cxx:1471. #19 0x00007fa53a245bb9 in TRint::ProcessLineNr (this=0x55bdc97497e0, filestem=0x7fa53a255f2f ""ROOT_prompt_"", line=0x7ffc922b1649 ""strlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/rint/src/TRint.cxx:751. #20 0x00007fa53a245484 in TRint::HandleTermInput (this=0x55bdc97497e0) at /opt/root_src/core/rint/src/TRint.cxx:612. #21 0x00007fa53a242df1 in TTermInputHandler::Notify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:132. #22 0x00007fa53a2473f7 in TTermInputHandler::ReadNotify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:124. #23 0x00007fa539d4b871 in TUnixSystem::CheckDescriptors (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1322. #24 0x00007fa539d4aae7 in TUnixSystem::DispatchOneEvent (this=0x55bdc96f17c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1077. #25 0x00007fa539c2dc49 in TSystem::InnerLoop (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:404. #26 0x00007fa539c2d9de in TSystem::Run (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:354. #27 0x00007fa539bb6fea in TApplication::Run (this=0x55bdc97497e0, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1623. #28 0x00007fa53a2447ef in TRint::Run (this=0x55bdc97497e0, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:463. #29 0x000055bdc8f70a99 in main (argc=1, argv=0x7ffc922b3ac8) at /opt/root_src/main/src/rmain.cxx:30. Error in <HandleInterpreterException>: Trying to access a pointer that points to an invalid memory address.. Execution of your code was aborted. ROOT_prompt_6:1:8: warning: invalid memory pointer passed to a callee:. strlen(cs). ^~. root [7] cs. (const char *) 0x1 <invalid memory address>. ```. If I select the first element of the Combo-Box, then cs = 0 and it does not crash because the if(cs) in the TString constructor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:4317,energy efficiency,core,core,4317,"line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", sync=false, err=0x7ffc922b1588) at /opt/root_src/core/base/src/TApplication.cxx:1471. #19 0x00007fa53a245bb9 in TRint::ProcessLineNr (this=0x55bdc97497e0, filestem=0x7fa53a255f2f ""ROOT_prompt_"", line=0x7ffc922b1649 ""strlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/rint/src/TRint.cxx:751. #20 0x00007fa53a245484 in TRint::HandleTermInput (this=0x55bdc97497e0) at /opt/root_src/core/rint/src/TRint.cxx:612. #21 0x00007fa53a242df1 in TTermInputHandler::Notify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:132. #22 0x00007fa53a2473f7 in TTermInputHandler::ReadNotify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:124. #23 0x00007fa539d4b871 in TUnixSystem::CheckDescriptors (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1322. #24 0x00007fa539d4aae7 in TUnixSystem::DispatchOneEvent (this=0x55bdc96f17c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1077. #25 0x00007fa539c2dc49 in TSystem::InnerLoop (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:404. #26 0x00007fa539c2d9de in TSystem::Run (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:354. #27 0x00007fa539bb6fea in TApplication::Run (this=0x55bdc97497e0, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1623. #28 0x00007fa53a2447ef in TRint::Run (this=0x55bdc97497e0, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:463. #29 0x000055bdc8f70a99 in main (argc=1, argv=0x7ffc922b3ac8) at /opt/root_src/main/src/rmain.cxx:30. Error in <HandleInterpreterException>: Trying to access a pointer that points to an invalid memory address.. Execution of your code was aborted. ROOT_prompt_6:1:8: warning: invalid memory pointer passed to a callee:. strlen(cs). ^~. root [7] cs. (const char *) 0x1 <invalid memory address>. ```. If I select the first element of the Combo-Box, then cs = 0 and it does not crash because the if(cs) in the TString constructor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:4444,energy efficiency,core,core,4444,"line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", sync=false, err=0x7ffc922b1588) at /opt/root_src/core/base/src/TApplication.cxx:1471. #19 0x00007fa53a245bb9 in TRint::ProcessLineNr (this=0x55bdc97497e0, filestem=0x7fa53a255f2f ""ROOT_prompt_"", line=0x7ffc922b1649 ""strlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/rint/src/TRint.cxx:751. #20 0x00007fa53a245484 in TRint::HandleTermInput (this=0x55bdc97497e0) at /opt/root_src/core/rint/src/TRint.cxx:612. #21 0x00007fa53a242df1 in TTermInputHandler::Notify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:132. #22 0x00007fa53a2473f7 in TTermInputHandler::ReadNotify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:124. #23 0x00007fa539d4b871 in TUnixSystem::CheckDescriptors (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1322. #24 0x00007fa539d4aae7 in TUnixSystem::DispatchOneEvent (this=0x55bdc96f17c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1077. #25 0x00007fa539c2dc49 in TSystem::InnerLoop (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:404. #26 0x00007fa539c2d9de in TSystem::Run (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:354. #27 0x00007fa539bb6fea in TApplication::Run (this=0x55bdc97497e0, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1623. #28 0x00007fa53a2447ef in TRint::Run (this=0x55bdc97497e0, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:463. #29 0x000055bdc8f70a99 in main (argc=1, argv=0x7ffc922b3ac8) at /opt/root_src/main/src/rmain.cxx:30. Error in <HandleInterpreterException>: Trying to access a pointer that points to an invalid memory address.. Execution of your code was aborted. ROOT_prompt_6:1:8: warning: invalid memory pointer passed to a callee:. strlen(cs). ^~. root [7] cs. (const char *) 0x1 <invalid memory address>. ```. If I select the first element of the Combo-Box, then cs = 0 and it does not crash because the if(cs) in the TString constructor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:4570,energy efficiency,core,core,4570,"line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", sync=false, err=0x7ffc922b1588) at /opt/root_src/core/base/src/TApplication.cxx:1471. #19 0x00007fa53a245bb9 in TRint::ProcessLineNr (this=0x55bdc97497e0, filestem=0x7fa53a255f2f ""ROOT_prompt_"", line=0x7ffc922b1649 ""strlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/rint/src/TRint.cxx:751. #20 0x00007fa53a245484 in TRint::HandleTermInput (this=0x55bdc97497e0) at /opt/root_src/core/rint/src/TRint.cxx:612. #21 0x00007fa53a242df1 in TTermInputHandler::Notify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:132. #22 0x00007fa53a2473f7 in TTermInputHandler::ReadNotify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:124. #23 0x00007fa539d4b871 in TUnixSystem::CheckDescriptors (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1322. #24 0x00007fa539d4aae7 in TUnixSystem::DispatchOneEvent (this=0x55bdc96f17c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1077. #25 0x00007fa539c2dc49 in TSystem::InnerLoop (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:404. #26 0x00007fa539c2d9de in TSystem::Run (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:354. #27 0x00007fa539bb6fea in TApplication::Run (this=0x55bdc97497e0, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1623. #28 0x00007fa53a2447ef in TRint::Run (this=0x55bdc97497e0, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:463. #29 0x000055bdc8f70a99 in main (argc=1, argv=0x7ffc922b3ac8) at /opt/root_src/main/src/rmain.cxx:30. Error in <HandleInterpreterException>: Trying to access a pointer that points to an invalid memory address.. Execution of your code was aborted. ROOT_prompt_6:1:8: warning: invalid memory pointer passed to a callee:. strlen(cs). ^~. root [7] cs. (const char *) 0x1 <invalid memory address>. ```. If I select the first element of the Combo-Box, then cs = 0 and it does not crash because the if(cs) in the TString constructor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:597,performance,optimiz,optimized,597,"This is what my debugger shows before it freezes:. ![image](https://user-images.githubusercontent.com/10653970/108070249-4bf5ae80-7032-11eb-9f35-124c473c0521.png). It looks as if the Selected(Int_t) signal argument (integer) is being passed as a string?. I was able to reproduce the crash isolatedly in a ROOT terminal:. ```. const char* cs = reinterpret_cast<const char*>(0x1);. strlen(cs). #0 0x00007fa539040457 in __GI___waitpid (pid=20783, stat_loc=stat_loc. entry=0x7ffc922ae768, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007fa538fab177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007fa539d4d5c4 in TUnixSystem::Exec (this=0x55bdc96f17c0, shellcmd=0x55bdca31f240 ""/opt/root_bld/etc/gdb-backtrace.sh 20254 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007fa539d4de75 in TUnixSystem::StackTrace (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007fa532b992f1 in TCling__PrintStackTrace () at /opt/root_src/core/metacling/src/TCling.cxx:324. #5 0x00007fa532cecc2b in TClingCallbacks::PrintStackTrace (this=0x55bdc9c9adc0) at /opt/root_src/core/metacling/src/TClingCallbacks.cxx:921. #6 0x00007fa532d5dfc8 in cling::MultiplexInterpreterCallbacks::PrintStackTrace() () from /opt/root_bld/lib/libCling.so. #7 0x00007fa532d5d902 in cling_runtime_internal_throwIfInvalidPointer () from /opt/root_bld/lib/libCling.so. #8 0x00007fa53a595075 in ?? (). #9 0x00007ffc922b0b70 in ?? (). #10 0x00007fa532b99375 in TCling__ResetInterpreterMutex () at /opt/root_src/core/metacling/src/TCling.cxx:351. #11 0x00007fa532ddb133 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /opt/root_bld/lib/libCling.so. #12 0x00007fa532d5fcf0 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /opt/root_bld/lib/libCling.so. #13 0x00007fa532d60d58 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::ch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:1239,performance,Multiplex,MultiplexInterpreterCallbacks,1239," I was able to reproduce the crash isolatedly in a ROOT terminal:. ```. const char* cs = reinterpret_cast<const char*>(0x1);. strlen(cs). #0 0x00007fa539040457 in __GI___waitpid (pid=20783, stat_loc=stat_loc. entry=0x7ffc922ae768, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007fa538fab177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007fa539d4d5c4 in TUnixSystem::Exec (this=0x55bdc96f17c0, shellcmd=0x55bdca31f240 ""/opt/root_bld/etc/gdb-backtrace.sh 20254 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007fa539d4de75 in TUnixSystem::StackTrace (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007fa532b992f1 in TCling__PrintStackTrace () at /opt/root_src/core/metacling/src/TCling.cxx:324. #5 0x00007fa532cecc2b in TClingCallbacks::PrintStackTrace (this=0x55bdc9c9adc0) at /opt/root_src/core/metacling/src/TClingCallbacks.cxx:921. #6 0x00007fa532d5dfc8 in cling::MultiplexInterpreterCallbacks::PrintStackTrace() () from /opt/root_bld/lib/libCling.so. #7 0x00007fa532d5d902 in cling_runtime_internal_throwIfInvalidPointer () from /opt/root_bld/lib/libCling.so. #8 0x00007fa53a595075 in ?? (). #9 0x00007ffc922b0b70 in ?? (). #10 0x00007fa532b99375 in TCling__ResetInterpreterMutex () at /opt/root_src/core/metacling/src/TCling.cxx:351. #11 0x00007fa532ddb133 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /opt/root_bld/lib/libCling.so. #12 0x00007fa532d5fcf0 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /opt/root_bld/lib/libCling.so. #13 0x00007fa532d60d58 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /opt/root_bld/lib/libCling.so. #14 0x00007fa532d60f2b in cling::Interpreter::process(std::__cxx11::basic_string<char, s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:2975,performance,error,error,2975,"c_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /opt/root_bld/lib/libCling.so. #14 0x00007fa532d60f2b in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /opt/root_bld/lib/libCling.so. #15 0x00007fa532e38e25 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /opt/root_bld/lib/libCling.so. #16 0x00007fa532ba4e14 in HandleInterpreterException (metaProcessor=0x55bdc9e8b7a0, input_line=0x55bdca3173a0 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", compRes=. 0x7ffc922b1024: cling::Interpreter::kSuccess, result=0x7ffc922b1070) at /opt/root_src/core/metacling/src/TCling.cxx:2433. #17 0x00007fa532ba5aa6 in TCling::ProcessLine (this=0x55bdc9765c30, line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/metacling/src/TCling.cxx:2591. #18 0x00007fa539bb646a in TApplication::ProcessLine (this=0x55bdc97497e0, line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", sync=false, err=0x7ffc922b1588) at /opt/root_src/core/base/src/TApplication.cxx:1471. #19 0x00007fa53a245bb9 in TRint::ProcessLineNr (this=0x55bdc97497e0, filestem=0x7fa53a255f2f ""ROOT_prompt_"", line=0x7ffc922b1649 ""strlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/rint/src/TRint.cxx:751. #20 0x00007fa53a245484 in TRint::HandleTermInput (this=0x55bdc97497e0) at /opt/root_src/core/rint/src/TRint.cxx:612. #21 0x00007fa53a242df1 in TTermInputHandler::Notify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:132. #22 0x00007fa53a2473f7 in TTermInputHandler::ReadNotify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:124. #23 0x00007fa539d4b871 in TUnixSystem::CheckDescriptors (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1322. #24 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:3414,performance,error,error,3414,"ling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /opt/root_bld/lib/libCling.so. #16 0x00007fa532ba4e14 in HandleInterpreterException (metaProcessor=0x55bdc9e8b7a0, input_line=0x55bdca3173a0 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", compRes=. 0x7ffc922b1024: cling::Interpreter::kSuccess, result=0x7ffc922b1070) at /opt/root_src/core/metacling/src/TCling.cxx:2433. #17 0x00007fa532ba5aa6 in TCling::ProcessLine (this=0x55bdc9765c30, line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/metacling/src/TCling.cxx:2591. #18 0x00007fa539bb646a in TApplication::ProcessLine (this=0x55bdc97497e0, line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", sync=false, err=0x7ffc922b1588) at /opt/root_src/core/base/src/TApplication.cxx:1471. #19 0x00007fa53a245bb9 in TRint::ProcessLineNr (this=0x55bdc97497e0, filestem=0x7fa53a255f2f ""ROOT_prompt_"", line=0x7ffc922b1649 ""strlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/rint/src/TRint.cxx:751. #20 0x00007fa53a245484 in TRint::HandleTermInput (this=0x55bdc97497e0) at /opt/root_src/core/rint/src/TRint.cxx:612. #21 0x00007fa53a242df1 in TTermInputHandler::Notify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:132. #22 0x00007fa53a2473f7 in TTermInputHandler::ReadNotify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:124. #23 0x00007fa539d4b871 in TUnixSystem::CheckDescriptors (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1322. #24 0x00007fa539d4aae7 in TUnixSystem::DispatchOneEvent (this=0x55bdc96f17c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1077. #25 0x00007fa539c2dc49 in TSystem::InnerLoop (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:404. #26 0x00007fa539c2d9de in TSystem::Run (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:354. #27 0x00007fa539bb6fea in TApplication::Run (this=0x55bdc97497e0, ret",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:4700,performance,Error,Error,4700,"line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", sync=false, err=0x7ffc922b1588) at /opt/root_src/core/base/src/TApplication.cxx:1471. #19 0x00007fa53a245bb9 in TRint::ProcessLineNr (this=0x55bdc97497e0, filestem=0x7fa53a255f2f ""ROOT_prompt_"", line=0x7ffc922b1649 ""strlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/rint/src/TRint.cxx:751. #20 0x00007fa53a245484 in TRint::HandleTermInput (this=0x55bdc97497e0) at /opt/root_src/core/rint/src/TRint.cxx:612. #21 0x00007fa53a242df1 in TTermInputHandler::Notify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:132. #22 0x00007fa53a2473f7 in TTermInputHandler::ReadNotify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:124. #23 0x00007fa539d4b871 in TUnixSystem::CheckDescriptors (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1322. #24 0x00007fa539d4aae7 in TUnixSystem::DispatchOneEvent (this=0x55bdc96f17c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1077. #25 0x00007fa539c2dc49 in TSystem::InnerLoop (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:404. #26 0x00007fa539c2d9de in TSystem::Run (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:354. #27 0x00007fa539bb6fea in TApplication::Run (this=0x55bdc97497e0, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1623. #28 0x00007fa53a2447ef in TRint::Run (this=0x55bdc97497e0, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:463. #29 0x000055bdc8f70a99 in main (argc=1, argv=0x7ffc922b3ac8) at /opt/root_src/main/src/rmain.cxx:30. Error in <HandleInterpreterException>: Trying to access a pointer that points to an invalid memory address.. Execution of your code was aborted. ROOT_prompt_6:1:8: warning: invalid memory pointer passed to a callee:. strlen(cs). ^~. root [7] cs. (const char *) 0x1 <invalid memory address>. ```. If I select the first element of the Combo-Box, then cs = 0 and it does not crash because the if(cs) in the TString constructor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:4792,performance,memor,memory,4792,"line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", sync=false, err=0x7ffc922b1588) at /opt/root_src/core/base/src/TApplication.cxx:1471. #19 0x00007fa53a245bb9 in TRint::ProcessLineNr (this=0x55bdc97497e0, filestem=0x7fa53a255f2f ""ROOT_prompt_"", line=0x7ffc922b1649 ""strlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/rint/src/TRint.cxx:751. #20 0x00007fa53a245484 in TRint::HandleTermInput (this=0x55bdc97497e0) at /opt/root_src/core/rint/src/TRint.cxx:612. #21 0x00007fa53a242df1 in TTermInputHandler::Notify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:132. #22 0x00007fa53a2473f7 in TTermInputHandler::ReadNotify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:124. #23 0x00007fa539d4b871 in TUnixSystem::CheckDescriptors (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1322. #24 0x00007fa539d4aae7 in TUnixSystem::DispatchOneEvent (this=0x55bdc96f17c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1077. #25 0x00007fa539c2dc49 in TSystem::InnerLoop (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:404. #26 0x00007fa539c2d9de in TSystem::Run (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:354. #27 0x00007fa539bb6fea in TApplication::Run (this=0x55bdc97497e0, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1623. #28 0x00007fa53a2447ef in TRint::Run (this=0x55bdc97497e0, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:463. #29 0x000055bdc8f70a99 in main (argc=1, argv=0x7ffc922b3ac8) at /opt/root_src/main/src/rmain.cxx:30. Error in <HandleInterpreterException>: Trying to access a pointer that points to an invalid memory address.. Execution of your code was aborted. ROOT_prompt_6:1:8: warning: invalid memory pointer passed to a callee:. strlen(cs). ^~. root [7] cs. (const char *) 0x1 <invalid memory address>. ```. If I select the first element of the Combo-Box, then cs = 0 and it does not crash because the if(cs) in the TString constructor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:4881,performance,memor,memory,4881,"line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", sync=false, err=0x7ffc922b1588) at /opt/root_src/core/base/src/TApplication.cxx:1471. #19 0x00007fa53a245bb9 in TRint::ProcessLineNr (this=0x55bdc97497e0, filestem=0x7fa53a255f2f ""ROOT_prompt_"", line=0x7ffc922b1649 ""strlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/rint/src/TRint.cxx:751. #20 0x00007fa53a245484 in TRint::HandleTermInput (this=0x55bdc97497e0) at /opt/root_src/core/rint/src/TRint.cxx:612. #21 0x00007fa53a242df1 in TTermInputHandler::Notify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:132. #22 0x00007fa53a2473f7 in TTermInputHandler::ReadNotify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:124. #23 0x00007fa539d4b871 in TUnixSystem::CheckDescriptors (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1322. #24 0x00007fa539d4aae7 in TUnixSystem::DispatchOneEvent (this=0x55bdc96f17c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1077. #25 0x00007fa539c2dc49 in TSystem::InnerLoop (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:404. #26 0x00007fa539c2d9de in TSystem::Run (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:354. #27 0x00007fa539bb6fea in TApplication::Run (this=0x55bdc97497e0, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1623. #28 0x00007fa53a2447ef in TRint::Run (this=0x55bdc97497e0, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:463. #29 0x000055bdc8f70a99 in main (argc=1, argv=0x7ffc922b3ac8) at /opt/root_src/main/src/rmain.cxx:30. Error in <HandleInterpreterException>: Trying to access a pointer that points to an invalid memory address.. Execution of your code was aborted. ROOT_prompt_6:1:8: warning: invalid memory pointer passed to a callee:. strlen(cs). ^~. root [7] cs. (const char *) 0x1 <invalid memory address>. ```. If I select the first element of the Combo-Box, then cs = 0 and it does not crash because the if(cs) in the TString constructor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:4974,performance,memor,memory,4974,"line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", sync=false, err=0x7ffc922b1588) at /opt/root_src/core/base/src/TApplication.cxx:1471. #19 0x00007fa53a245bb9 in TRint::ProcessLineNr (this=0x55bdc97497e0, filestem=0x7fa53a255f2f ""ROOT_prompt_"", line=0x7ffc922b1649 ""strlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/rint/src/TRint.cxx:751. #20 0x00007fa53a245484 in TRint::HandleTermInput (this=0x55bdc97497e0) at /opt/root_src/core/rint/src/TRint.cxx:612. #21 0x00007fa53a242df1 in TTermInputHandler::Notify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:132. #22 0x00007fa53a2473f7 in TTermInputHandler::ReadNotify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:124. #23 0x00007fa539d4b871 in TUnixSystem::CheckDescriptors (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1322. #24 0x00007fa539d4aae7 in TUnixSystem::DispatchOneEvent (this=0x55bdc96f17c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1077. #25 0x00007fa539c2dc49 in TSystem::InnerLoop (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:404. #26 0x00007fa539c2d9de in TSystem::Run (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:354. #27 0x00007fa539bb6fea in TApplication::Run (this=0x55bdc97497e0, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1623. #28 0x00007fa53a2447ef in TRint::Run (this=0x55bdc97497e0, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:463. #29 0x000055bdc8f70a99 in main (argc=1, argv=0x7ffc922b3ac8) at /opt/root_src/main/src/rmain.cxx:30. Error in <HandleInterpreterException>: Trying to access a pointer that points to an invalid memory address.. Execution of your code was aborted. ROOT_prompt_6:1:8: warning: invalid memory pointer passed to a callee:. strlen(cs). ^~. root [7] cs. (const char *) 0x1 <invalid memory address>. ```. If I select the first element of the Combo-Box, then cs = 0 and it does not crash because the if(cs) in the TString constructor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:5063,reliability,doe,does,5063,"line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", sync=false, err=0x7ffc922b1588) at /opt/root_src/core/base/src/TApplication.cxx:1471. #19 0x00007fa53a245bb9 in TRint::ProcessLineNr (this=0x55bdc97497e0, filestem=0x7fa53a255f2f ""ROOT_prompt_"", line=0x7ffc922b1649 ""strlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/rint/src/TRint.cxx:751. #20 0x00007fa53a245484 in TRint::HandleTermInput (this=0x55bdc97497e0) at /opt/root_src/core/rint/src/TRint.cxx:612. #21 0x00007fa53a242df1 in TTermInputHandler::Notify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:132. #22 0x00007fa53a2473f7 in TTermInputHandler::ReadNotify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:124. #23 0x00007fa539d4b871 in TUnixSystem::CheckDescriptors (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1322. #24 0x00007fa539d4aae7 in TUnixSystem::DispatchOneEvent (this=0x55bdc96f17c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1077. #25 0x00007fa539c2dc49 in TSystem::InnerLoop (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:404. #26 0x00007fa539c2d9de in TSystem::Run (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:354. #27 0x00007fa539bb6fea in TApplication::Run (this=0x55bdc97497e0, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1623. #28 0x00007fa53a2447ef in TRint::Run (this=0x55bdc97497e0, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:463. #29 0x000055bdc8f70a99 in main (argc=1, argv=0x7ffc922b3ac8) at /opt/root_src/main/src/rmain.cxx:30. Error in <HandleInterpreterException>: Trying to access a pointer that points to an invalid memory address.. Execution of your code was aborted. ROOT_prompt_6:1:8: warning: invalid memory pointer passed to a callee:. strlen(cs). ^~. root [7] cs. (const char *) 0x1 <invalid memory address>. ```. If I select the first element of the Combo-Box, then cs = 0 and it does not crash because the if(cs) in the TString constructor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:289,safety,isol,isolatedly,289,"This is what my debugger shows before it freezes:. ![image](https://user-images.githubusercontent.com/10653970/108070249-4bf5ae80-7032-11eb-9f35-124c473c0521.png). It looks as if the Selected(Int_t) signal argument (integer) is being passed as a string?. I was able to reproduce the crash isolatedly in a ROOT terminal:. ```. const char* cs = reinterpret_cast<const char*>(0x1);. strlen(cs). #0 0x00007fa539040457 in __GI___waitpid (pid=20783, stat_loc=stat_loc. entry=0x7ffc922ae768, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007fa538fab177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007fa539d4d5c4 in TUnixSystem::Exec (this=0x55bdc96f17c0, shellcmd=0x55bdca31f240 ""/opt/root_bld/etc/gdb-backtrace.sh 20254 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007fa539d4de75 in TUnixSystem::StackTrace (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007fa532b992f1 in TCling__PrintStackTrace () at /opt/root_src/core/metacling/src/TCling.cxx:324. #5 0x00007fa532cecc2b in TClingCallbacks::PrintStackTrace (this=0x55bdc9c9adc0) at /opt/root_src/core/metacling/src/TClingCallbacks.cxx:921. #6 0x00007fa532d5dfc8 in cling::MultiplexInterpreterCallbacks::PrintStackTrace() () from /opt/root_bld/lib/libCling.so. #7 0x00007fa532d5d902 in cling_runtime_internal_throwIfInvalidPointer () from /opt/root_bld/lib/libCling.so. #8 0x00007fa53a595075 in ?? (). #9 0x00007ffc922b0b70 in ?? (). #10 0x00007fa532b99375 in TCling__ResetInterpreterMutex () at /opt/root_src/core/metacling/src/TCling.cxx:351. #11 0x00007fa532ddb133 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /opt/root_bld/lib/libCling.so. #12 0x00007fa532d5fcf0 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /opt/root_bld/lib/libCling.so. #13 0x00007fa532d60d58 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::ch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:2975,safety,error,error,2975,"c_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /opt/root_bld/lib/libCling.so. #14 0x00007fa532d60f2b in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /opt/root_bld/lib/libCling.so. #15 0x00007fa532e38e25 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /opt/root_bld/lib/libCling.so. #16 0x00007fa532ba4e14 in HandleInterpreterException (metaProcessor=0x55bdc9e8b7a0, input_line=0x55bdca3173a0 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", compRes=. 0x7ffc922b1024: cling::Interpreter::kSuccess, result=0x7ffc922b1070) at /opt/root_src/core/metacling/src/TCling.cxx:2433. #17 0x00007fa532ba5aa6 in TCling::ProcessLine (this=0x55bdc9765c30, line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/metacling/src/TCling.cxx:2591. #18 0x00007fa539bb646a in TApplication::ProcessLine (this=0x55bdc97497e0, line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", sync=false, err=0x7ffc922b1588) at /opt/root_src/core/base/src/TApplication.cxx:1471. #19 0x00007fa53a245bb9 in TRint::ProcessLineNr (this=0x55bdc97497e0, filestem=0x7fa53a255f2f ""ROOT_prompt_"", line=0x7ffc922b1649 ""strlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/rint/src/TRint.cxx:751. #20 0x00007fa53a245484 in TRint::HandleTermInput (this=0x55bdc97497e0) at /opt/root_src/core/rint/src/TRint.cxx:612. #21 0x00007fa53a242df1 in TTermInputHandler::Notify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:132. #22 0x00007fa53a2473f7 in TTermInputHandler::ReadNotify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:124. #23 0x00007fa539d4b871 in TUnixSystem::CheckDescriptors (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1322. #24 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:3414,safety,error,error,3414,"ling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /opt/root_bld/lib/libCling.so. #16 0x00007fa532ba4e14 in HandleInterpreterException (metaProcessor=0x55bdc9e8b7a0, input_line=0x55bdca3173a0 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", compRes=. 0x7ffc922b1024: cling::Interpreter::kSuccess, result=0x7ffc922b1070) at /opt/root_src/core/metacling/src/TCling.cxx:2433. #17 0x00007fa532ba5aa6 in TCling::ProcessLine (this=0x55bdc9765c30, line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/metacling/src/TCling.cxx:2591. #18 0x00007fa539bb646a in TApplication::ProcessLine (this=0x55bdc97497e0, line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", sync=false, err=0x7ffc922b1588) at /opt/root_src/core/base/src/TApplication.cxx:1471. #19 0x00007fa53a245bb9 in TRint::ProcessLineNr (this=0x55bdc97497e0, filestem=0x7fa53a255f2f ""ROOT_prompt_"", line=0x7ffc922b1649 ""strlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/rint/src/TRint.cxx:751. #20 0x00007fa53a245484 in TRint::HandleTermInput (this=0x55bdc97497e0) at /opt/root_src/core/rint/src/TRint.cxx:612. #21 0x00007fa53a242df1 in TTermInputHandler::Notify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:132. #22 0x00007fa53a2473f7 in TTermInputHandler::ReadNotify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:124. #23 0x00007fa539d4b871 in TUnixSystem::CheckDescriptors (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1322. #24 0x00007fa539d4aae7 in TUnixSystem::DispatchOneEvent (this=0x55bdc96f17c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1077. #25 0x00007fa539c2dc49 in TSystem::InnerLoop (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:404. #26 0x00007fa539c2d9de in TSystem::Run (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:354. #27 0x00007fa539bb6fea in TApplication::Run (this=0x55bdc97497e0, ret",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:4700,safety,Error,Error,4700,"line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", sync=false, err=0x7ffc922b1588) at /opt/root_src/core/base/src/TApplication.cxx:1471. #19 0x00007fa53a245bb9 in TRint::ProcessLineNr (this=0x55bdc97497e0, filestem=0x7fa53a255f2f ""ROOT_prompt_"", line=0x7ffc922b1649 ""strlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/rint/src/TRint.cxx:751. #20 0x00007fa53a245484 in TRint::HandleTermInput (this=0x55bdc97497e0) at /opt/root_src/core/rint/src/TRint.cxx:612. #21 0x00007fa53a242df1 in TTermInputHandler::Notify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:132. #22 0x00007fa53a2473f7 in TTermInputHandler::ReadNotify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:124. #23 0x00007fa539d4b871 in TUnixSystem::CheckDescriptors (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1322. #24 0x00007fa539d4aae7 in TUnixSystem::DispatchOneEvent (this=0x55bdc96f17c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1077. #25 0x00007fa539c2dc49 in TSystem::InnerLoop (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:404. #26 0x00007fa539c2d9de in TSystem::Run (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:354. #27 0x00007fa539bb6fea in TApplication::Run (this=0x55bdc97497e0, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1623. #28 0x00007fa53a2447ef in TRint::Run (this=0x55bdc97497e0, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:463. #29 0x000055bdc8f70a99 in main (argc=1, argv=0x7ffc922b3ac8) at /opt/root_src/main/src/rmain.cxx:30. Error in <HandleInterpreterException>: Trying to access a pointer that points to an invalid memory address.. Execution of your code was aborted. ROOT_prompt_6:1:8: warning: invalid memory pointer passed to a callee:. strlen(cs). ^~. root [7] cs. (const char *) 0x1 <invalid memory address>. ```. If I select the first element of the Combo-Box, then cs = 0 and it does not crash because the if(cs) in the TString constructor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:199,security,sign,signal,199,"This is what my debugger shows before it freezes:. ![image](https://user-images.githubusercontent.com/10653970/108070249-4bf5ae80-7032-11eb-9f35-124c473c0521.png). It looks as if the Selected(Int_t) signal argument (integer) is being passed as a string?. I was able to reproduce the crash isolatedly in a ROOT terminal:. ```. const char* cs = reinterpret_cast<const char*>(0x1);. strlen(cs). #0 0x00007fa539040457 in __GI___waitpid (pid=20783, stat_loc=stat_loc. entry=0x7ffc922ae768, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007fa538fab177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007fa539d4d5c4 in TUnixSystem::Exec (this=0x55bdc96f17c0, shellcmd=0x55bdca31f240 ""/opt/root_bld/etc/gdb-backtrace.sh 20254 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007fa539d4de75 in TUnixSystem::StackTrace (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007fa532b992f1 in TCling__PrintStackTrace () at /opt/root_src/core/metacling/src/TCling.cxx:324. #5 0x00007fa532cecc2b in TClingCallbacks::PrintStackTrace (this=0x55bdc9c9adc0) at /opt/root_src/core/metacling/src/TClingCallbacks.cxx:921. #6 0x00007fa532d5dfc8 in cling::MultiplexInterpreterCallbacks::PrintStackTrace() () from /opt/root_bld/lib/libCling.so. #7 0x00007fa532d5d902 in cling_runtime_internal_throwIfInvalidPointer () from /opt/root_bld/lib/libCling.so. #8 0x00007fa53a595075 in ?? (). #9 0x00007ffc922b0b70 in ?? (). #10 0x00007fa532b99375 in TCling__ResetInterpreterMutex () at /opt/root_src/core/metacling/src/TCling.cxx:351. #11 0x00007fa532ddb133 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /opt/root_bld/lib/libCling.so. #12 0x00007fa532d5fcf0 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /opt/root_bld/lib/libCling.so. #13 0x00007fa532d60d58 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::ch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:289,security,iso,isolatedly,289,"This is what my debugger shows before it freezes:. ![image](https://user-images.githubusercontent.com/10653970/108070249-4bf5ae80-7032-11eb-9f35-124c473c0521.png). It looks as if the Selected(Int_t) signal argument (integer) is being passed as a string?. I was able to reproduce the crash isolatedly in a ROOT terminal:. ```. const char* cs = reinterpret_cast<const char*>(0x1);. strlen(cs). #0 0x00007fa539040457 in __GI___waitpid (pid=20783, stat_loc=stat_loc. entry=0x7ffc922ae768, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007fa538fab177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007fa539d4d5c4 in TUnixSystem::Exec (this=0x55bdc96f17c0, shellcmd=0x55bdca31f240 ""/opt/root_bld/etc/gdb-backtrace.sh 20254 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007fa539d4de75 in TUnixSystem::StackTrace (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007fa532b992f1 in TCling__PrintStackTrace () at /opt/root_src/core/metacling/src/TCling.cxx:324. #5 0x00007fa532cecc2b in TClingCallbacks::PrintStackTrace (this=0x55bdc9c9adc0) at /opt/root_src/core/metacling/src/TClingCallbacks.cxx:921. #6 0x00007fa532d5dfc8 in cling::MultiplexInterpreterCallbacks::PrintStackTrace() () from /opt/root_bld/lib/libCling.so. #7 0x00007fa532d5d902 in cling_runtime_internal_throwIfInvalidPointer () from /opt/root_bld/lib/libCling.so. #8 0x00007fa53a595075 in ?? (). #9 0x00007ffc922b0b70 in ?? (). #10 0x00007fa532b99375 in TCling__ResetInterpreterMutex () at /opt/root_src/core/metacling/src/TCling.cxx:351. #11 0x00007fa532ddb133 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /opt/root_bld/lib/libCling.so. #12 0x00007fa532d5fcf0 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /opt/root_bld/lib/libCling.so. #13 0x00007fa532d60d58 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::ch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:4749,security,access,access,4749,"line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", sync=false, err=0x7ffc922b1588) at /opt/root_src/core/base/src/TApplication.cxx:1471. #19 0x00007fa53a245bb9 in TRint::ProcessLineNr (this=0x55bdc97497e0, filestem=0x7fa53a255f2f ""ROOT_prompt_"", line=0x7ffc922b1649 ""strlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/rint/src/TRint.cxx:751. #20 0x00007fa53a245484 in TRint::HandleTermInput (this=0x55bdc97497e0) at /opt/root_src/core/rint/src/TRint.cxx:612. #21 0x00007fa53a242df1 in TTermInputHandler::Notify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:132. #22 0x00007fa53a2473f7 in TTermInputHandler::ReadNotify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:124. #23 0x00007fa539d4b871 in TUnixSystem::CheckDescriptors (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1322. #24 0x00007fa539d4aae7 in TUnixSystem::DispatchOneEvent (this=0x55bdc96f17c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1077. #25 0x00007fa539c2dc49 in TSystem::InnerLoop (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:404. #26 0x00007fa539c2d9de in TSystem::Run (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:354. #27 0x00007fa539bb6fea in TApplication::Run (this=0x55bdc97497e0, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1623. #28 0x00007fa53a2447ef in TRint::Run (this=0x55bdc97497e0, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:463. #29 0x000055bdc8f70a99 in main (argc=1, argv=0x7ffc922b3ac8) at /opt/root_src/main/src/rmain.cxx:30. Error in <HandleInterpreterException>: Trying to access a pointer that points to an invalid memory address.. Execution of your code was aborted. ROOT_prompt_6:1:8: warning: invalid memory pointer passed to a callee:. strlen(cs). ^~. root [7] cs. (const char *) 0x1 <invalid memory address>. ```. If I select the first element of the Combo-Box, then cs = 0 and it does not crash because the if(cs) in the TString constructor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:289,testability,isol,isolatedly,289,"This is what my debugger shows before it freezes:. ![image](https://user-images.githubusercontent.com/10653970/108070249-4bf5ae80-7032-11eb-9f35-124c473c0521.png). It looks as if the Selected(Int_t) signal argument (integer) is being passed as a string?. I was able to reproduce the crash isolatedly in a ROOT terminal:. ```. const char* cs = reinterpret_cast<const char*>(0x1);. strlen(cs). #0 0x00007fa539040457 in __GI___waitpid (pid=20783, stat_loc=stat_loc. entry=0x7ffc922ae768, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007fa538fab177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007fa539d4d5c4 in TUnixSystem::Exec (this=0x55bdc96f17c0, shellcmd=0x55bdca31f240 ""/opt/root_bld/etc/gdb-backtrace.sh 20254 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007fa539d4de75 in TUnixSystem::StackTrace (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007fa532b992f1 in TCling__PrintStackTrace () at /opt/root_src/core/metacling/src/TCling.cxx:324. #5 0x00007fa532cecc2b in TClingCallbacks::PrintStackTrace (this=0x55bdc9c9adc0) at /opt/root_src/core/metacling/src/TClingCallbacks.cxx:921. #6 0x00007fa532d5dfc8 in cling::MultiplexInterpreterCallbacks::PrintStackTrace() () from /opt/root_bld/lib/libCling.so. #7 0x00007fa532d5d902 in cling_runtime_internal_throwIfInvalidPointer () from /opt/root_bld/lib/libCling.so. #8 0x00007fa53a595075 in ?? (). #9 0x00007ffc922b0b70 in ?? (). #10 0x00007fa532b99375 in TCling__ResetInterpreterMutex () at /opt/root_src/core/metacling/src/TCling.cxx:351. #11 0x00007fa532ddb133 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /opt/root_bld/lib/libCling.so. #12 0x00007fa532d5fcf0 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /opt/root_bld/lib/libCling.so. #13 0x00007fa532d60d58 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::ch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:68,usability,user,user-images,68,"This is what my debugger shows before it freezes:. ![image](https://user-images.githubusercontent.com/10653970/108070249-4bf5ae80-7032-11eb-9f35-124c473c0521.png). It looks as if the Selected(Int_t) signal argument (integer) is being passed as a string?. I was able to reproduce the crash isolatedly in a ROOT terminal:. ```. const char* cs = reinterpret_cast<const char*>(0x1);. strlen(cs). #0 0x00007fa539040457 in __GI___waitpid (pid=20783, stat_loc=stat_loc. entry=0x7ffc922ae768, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30. #1 0x00007fa538fab177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149. #2 0x00007fa539d4d5c4 in TUnixSystem::Exec (this=0x55bdc96f17c0, shellcmd=0x55bdca31f240 ""/opt/root_bld/etc/gdb-backtrace.sh 20254 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007fa539d4de75 in TUnixSystem::StackTrace (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007fa532b992f1 in TCling__PrintStackTrace () at /opt/root_src/core/metacling/src/TCling.cxx:324. #5 0x00007fa532cecc2b in TClingCallbacks::PrintStackTrace (this=0x55bdc9c9adc0) at /opt/root_src/core/metacling/src/TClingCallbacks.cxx:921. #6 0x00007fa532d5dfc8 in cling::MultiplexInterpreterCallbacks::PrintStackTrace() () from /opt/root_bld/lib/libCling.so. #7 0x00007fa532d5d902 in cling_runtime_internal_throwIfInvalidPointer () from /opt/root_bld/lib/libCling.so. #8 0x00007fa53a595075 in ?? (). #9 0x00007ffc922b0b70 in ?? (). #10 0x00007fa532b99375 in TCling__ResetInterpreterMutex () at /opt/root_src/core/metacling/src/TCling.cxx:351. #11 0x00007fa532ddb133 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /opt/root_bld/lib/libCling.so. #12 0x00007fa532d5fcf0 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /opt/root_bld/lib/libCling.so. #13 0x00007fa532d60d58 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::ch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:2975,usability,error,error,2975,"c_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /opt/root_bld/lib/libCling.so. #14 0x00007fa532d60f2b in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /opt/root_bld/lib/libCling.so. #15 0x00007fa532e38e25 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /opt/root_bld/lib/libCling.so. #16 0x00007fa532ba4e14 in HandleInterpreterException (metaProcessor=0x55bdc9e8b7a0, input_line=0x55bdca3173a0 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", compRes=. 0x7ffc922b1024: cling::Interpreter::kSuccess, result=0x7ffc922b1070) at /opt/root_src/core/metacling/src/TCling.cxx:2433. #17 0x00007fa532ba5aa6 in TCling::ProcessLine (this=0x55bdc9765c30, line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/metacling/src/TCling.cxx:2591. #18 0x00007fa539bb646a in TApplication::ProcessLine (this=0x55bdc97497e0, line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", sync=false, err=0x7ffc922b1588) at /opt/root_src/core/base/src/TApplication.cxx:1471. #19 0x00007fa53a245bb9 in TRint::ProcessLineNr (this=0x55bdc97497e0, filestem=0x7fa53a255f2f ""ROOT_prompt_"", line=0x7ffc922b1649 ""strlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/rint/src/TRint.cxx:751. #20 0x00007fa53a245484 in TRint::HandleTermInput (this=0x55bdc97497e0) at /opt/root_src/core/rint/src/TRint.cxx:612. #21 0x00007fa53a242df1 in TTermInputHandler::Notify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:132. #22 0x00007fa53a2473f7 in TTermInputHandler::ReadNotify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:124. #23 0x00007fa539d4b871 in TUnixSystem::CheckDescriptors (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1322. #24 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:3414,usability,error,error,3414,"ling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /opt/root_bld/lib/libCling.so. #16 0x00007fa532ba4e14 in HandleInterpreterException (metaProcessor=0x55bdc9e8b7a0, input_line=0x55bdca3173a0 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", compRes=. 0x7ffc922b1024: cling::Interpreter::kSuccess, result=0x7ffc922b1070) at /opt/root_src/core/metacling/src/TCling.cxx:2433. #17 0x00007fa532ba5aa6 in TCling::ProcessLine (this=0x55bdc9765c30, line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/metacling/src/TCling.cxx:2591. #18 0x00007fa539bb646a in TApplication::ProcessLine (this=0x55bdc97497e0, line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", sync=false, err=0x7ffc922b1588) at /opt/root_src/core/base/src/TApplication.cxx:1471. #19 0x00007fa53a245bb9 in TRint::ProcessLineNr (this=0x55bdc97497e0, filestem=0x7fa53a255f2f ""ROOT_prompt_"", line=0x7ffc922b1649 ""strlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/rint/src/TRint.cxx:751. #20 0x00007fa53a245484 in TRint::HandleTermInput (this=0x55bdc97497e0) at /opt/root_src/core/rint/src/TRint.cxx:612. #21 0x00007fa53a242df1 in TTermInputHandler::Notify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:132. #22 0x00007fa53a2473f7 in TTermInputHandler::ReadNotify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:124. #23 0x00007fa539d4b871 in TUnixSystem::CheckDescriptors (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1322. #24 0x00007fa539d4aae7 in TUnixSystem::DispatchOneEvent (this=0x55bdc96f17c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1077. #25 0x00007fa539c2dc49 in TSystem::InnerLoop (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:404. #26 0x00007fa539c2d9de in TSystem::Run (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:354. #27 0x00007fa539bb6fea in TApplication::Run (this=0x55bdc97497e0, ret",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:4700,usability,Error,Error,4700,"line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", sync=false, err=0x7ffc922b1588) at /opt/root_src/core/base/src/TApplication.cxx:1471. #19 0x00007fa53a245bb9 in TRint::ProcessLineNr (this=0x55bdc97497e0, filestem=0x7fa53a255f2f ""ROOT_prompt_"", line=0x7ffc922b1649 ""strlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/rint/src/TRint.cxx:751. #20 0x00007fa53a245484 in TRint::HandleTermInput (this=0x55bdc97497e0) at /opt/root_src/core/rint/src/TRint.cxx:612. #21 0x00007fa53a242df1 in TTermInputHandler::Notify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:132. #22 0x00007fa53a2473f7 in TTermInputHandler::ReadNotify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:124. #23 0x00007fa539d4b871 in TUnixSystem::CheckDescriptors (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1322. #24 0x00007fa539d4aae7 in TUnixSystem::DispatchOneEvent (this=0x55bdc96f17c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1077. #25 0x00007fa539c2dc49 in TSystem::InnerLoop (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:404. #26 0x00007fa539c2d9de in TSystem::Run (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:354. #27 0x00007fa539bb6fea in TApplication::Run (this=0x55bdc97497e0, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1623. #28 0x00007fa53a2447ef in TRint::Run (this=0x55bdc97497e0, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:463. #29 0x000055bdc8f70a99 in main (argc=1, argv=0x7ffc922b3ac8) at /opt/root_src/main/src/rmain.cxx:30. Error in <HandleInterpreterException>: Trying to access a pointer that points to an invalid memory address.. Execution of your code was aborted. ROOT_prompt_6:1:8: warning: invalid memory pointer passed to a callee:. strlen(cs). ^~. root [7] cs. (const char *) 0x1 <invalid memory address>. ```. If I select the first element of the Combo-Box, then cs = 0 and it does not crash because the if(cs) in the TString constructor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:4792,usability,memor,memory,4792,"line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", sync=false, err=0x7ffc922b1588) at /opt/root_src/core/base/src/TApplication.cxx:1471. #19 0x00007fa53a245bb9 in TRint::ProcessLineNr (this=0x55bdc97497e0, filestem=0x7fa53a255f2f ""ROOT_prompt_"", line=0x7ffc922b1649 ""strlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/rint/src/TRint.cxx:751. #20 0x00007fa53a245484 in TRint::HandleTermInput (this=0x55bdc97497e0) at /opt/root_src/core/rint/src/TRint.cxx:612. #21 0x00007fa53a242df1 in TTermInputHandler::Notify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:132. #22 0x00007fa53a2473f7 in TTermInputHandler::ReadNotify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:124. #23 0x00007fa539d4b871 in TUnixSystem::CheckDescriptors (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1322. #24 0x00007fa539d4aae7 in TUnixSystem::DispatchOneEvent (this=0x55bdc96f17c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1077. #25 0x00007fa539c2dc49 in TSystem::InnerLoop (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:404. #26 0x00007fa539c2d9de in TSystem::Run (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:354. #27 0x00007fa539bb6fea in TApplication::Run (this=0x55bdc97497e0, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1623. #28 0x00007fa53a2447ef in TRint::Run (this=0x55bdc97497e0, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:463. #29 0x000055bdc8f70a99 in main (argc=1, argv=0x7ffc922b3ac8) at /opt/root_src/main/src/rmain.cxx:30. Error in <HandleInterpreterException>: Trying to access a pointer that points to an invalid memory address.. Execution of your code was aborted. ROOT_prompt_6:1:8: warning: invalid memory pointer passed to a callee:. strlen(cs). ^~. root [7] cs. (const char *) 0x1 <invalid memory address>. ```. If I select the first element of the Combo-Box, then cs = 0 and it does not crash because the if(cs) in the TString constructor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:4881,usability,memor,memory,4881,"line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", sync=false, err=0x7ffc922b1588) at /opt/root_src/core/base/src/TApplication.cxx:1471. #19 0x00007fa53a245bb9 in TRint::ProcessLineNr (this=0x55bdc97497e0, filestem=0x7fa53a255f2f ""ROOT_prompt_"", line=0x7ffc922b1649 ""strlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/rint/src/TRint.cxx:751. #20 0x00007fa53a245484 in TRint::HandleTermInput (this=0x55bdc97497e0) at /opt/root_src/core/rint/src/TRint.cxx:612. #21 0x00007fa53a242df1 in TTermInputHandler::Notify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:132. #22 0x00007fa53a2473f7 in TTermInputHandler::ReadNotify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:124. #23 0x00007fa539d4b871 in TUnixSystem::CheckDescriptors (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1322. #24 0x00007fa539d4aae7 in TUnixSystem::DispatchOneEvent (this=0x55bdc96f17c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1077. #25 0x00007fa539c2dc49 in TSystem::InnerLoop (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:404. #26 0x00007fa539c2d9de in TSystem::Run (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:354. #27 0x00007fa539bb6fea in TApplication::Run (this=0x55bdc97497e0, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1623. #28 0x00007fa53a2447ef in TRint::Run (this=0x55bdc97497e0, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:463. #29 0x000055bdc8f70a99 in main (argc=1, argv=0x7ffc922b3ac8) at /opt/root_src/main/src/rmain.cxx:30. Error in <HandleInterpreterException>: Trying to access a pointer that points to an invalid memory address.. Execution of your code was aborted. ROOT_prompt_6:1:8: warning: invalid memory pointer passed to a callee:. strlen(cs). ^~. root [7] cs. (const char *) 0x1 <invalid memory address>. ```. If I select the first element of the Combo-Box, then cs = 0 and it does not crash because the if(cs) in the TString constructor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:4974,usability,memor,memory,4974,"line=0x55bdca174110 ""#line 1 \""ROOT_prompt_6\""\nstrlen(cs)"", sync=false, err=0x7ffc922b1588) at /opt/root_src/core/base/src/TApplication.cxx:1471. #19 0x00007fa53a245bb9 in TRint::ProcessLineNr (this=0x55bdc97497e0, filestem=0x7fa53a255f2f ""ROOT_prompt_"", line=0x7ffc922b1649 ""strlen(cs)"", error=0x7ffc922b1588) at /opt/root_src/core/rint/src/TRint.cxx:751. #20 0x00007fa53a245484 in TRint::HandleTermInput (this=0x55bdc97497e0) at /opt/root_src/core/rint/src/TRint.cxx:612. #21 0x00007fa53a242df1 in TTermInputHandler::Notify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:132. #22 0x00007fa53a2473f7 in TTermInputHandler::ReadNotify (this=0x55bdca28cb00) at /opt/root_src/core/rint/src/TRint.cxx:124. #23 0x00007fa539d4b871 in TUnixSystem::CheckDescriptors (this=0x55bdc96f17c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1322. #24 0x00007fa539d4aae7 in TUnixSystem::DispatchOneEvent (this=0x55bdc96f17c0, pendingOnly=false) at /opt/root_src/core/unix/src/TUnixSystem.cxx:1077. #25 0x00007fa539c2dc49 in TSystem::InnerLoop (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:404. #26 0x00007fa539c2d9de in TSystem::Run (this=0x55bdc96f17c0) at /opt/root_src/core/base/src/TSystem.cxx:354. #27 0x00007fa539bb6fea in TApplication::Run (this=0x55bdc97497e0, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1623. #28 0x00007fa53a2447ef in TRint::Run (this=0x55bdc97497e0, retrn=false) at /opt/root_src/core/rint/src/TRint.cxx:463. #29 0x000055bdc8f70a99 in main (argc=1, argv=0x7ffc922b3ac8) at /opt/root_src/main/src/rmain.cxx:30. Error in <HandleInterpreterException>: Trying to access a pointer that points to an invalid memory address.. Execution of your code was aborted. ROOT_prompt_6:1:8: warning: invalid memory pointer passed to a callee:. strlen(cs). ^~. root [7] cs. (const char *) 0x1 <invalid memory address>. ```. If I select the first element of the Combo-Box, then cs = 0 and it does not crash because the if(cs) in the TString constructor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:135,availability,slo,slot,135,"I didn't have time to look at it yet, but the integer is maybe the argument of the signal `Selected(Int_t)` trying to be passed to the slot. And it's maybe a limitation of the signal/slot mechanism",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:183,availability,slo,slot,183,"I didn't have time to look at it yet, but the integer is maybe the argument of the signal `Selected(Int_t)` trying to be passed to the slot. And it's maybe a limitation of the signal/slot mechanism",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:14,performance,time,time,14,"I didn't have time to look at it yet, but the integer is maybe the argument of the signal `Selected(Int_t)` trying to be passed to the slot. And it's maybe a limitation of the signal/slot mechanism",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:135,reliability,slo,slot,135,"I didn't have time to look at it yet, but the integer is maybe the argument of the signal `Selected(Int_t)` trying to be passed to the slot. And it's maybe a limitation of the signal/slot mechanism",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:183,reliability,slo,slot,183,"I didn't have time to look at it yet, but the integer is maybe the argument of the signal `Selected(Int_t)` trying to be passed to the slot. And it's maybe a limitation of the signal/slot mechanism",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:83,security,sign,signal,83,"I didn't have time to look at it yet, but the integer is maybe the argument of the signal `Selected(Int_t)` trying to be passed to the slot. And it's maybe a limitation of the signal/slot mechanism",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:176,security,sign,signal,176,"I didn't have time to look at it yet, but the integer is maybe the argument of the signal `Selected(Int_t)` trying to be passed to the slot. And it's maybe a limitation of the signal/slot mechanism",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:168,reliability,doe,does,168,"Yes, I just confirmed it by changing this:. `myTGComboBox->Connect(""Selected(const char*)"", ""TGTextButton"", myButton, ""ChangeText(=\""LEGOlegoemoryABCDEF\"")"");`. Now it does not crash, but instead of changing the text to the one I pass by value, it replaces it with the TGCombo text entry. Weird... I thought the idea to pass by value was to override this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:12,usability,confirm,confirmed,12,"Yes, I just confirmed it by changing this:. `myTGComboBox->Connect(""Selected(const char*)"", ""TGTextButton"", myButton, ""ChangeText(=\""LEGOlegoemoryABCDEF\"")"");`. Now it does not crash, but instead of changing the text to the one I pass by value, it replaces it with the TGCombo text entry. Weird... I thought the idea to pass by value was to override this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:23,availability,slo,slot,23,"I know that the signal/slot mechanism has some limitations, so that might well be one of them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:23,reliability,slo,slot,23,"I know that the signal/slot mechanism has some limitations, so that might well be one of them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:16,security,sign,signal,16,"I know that the signal/slot mechanism has some limitations, so that might well be one of them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:286,availability,slo,slots,286,"Ok, thanks for the reply. Maybe a note in the documentation could be added specifying that it only works if the signal has the shape of Clicked() or Pressed(), not with extra arguments ?: https://root.cern.ch/root/htmldoc/guides/users-guide/WritingGUI.html#event-processing-signals-and-slots",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:257,integrability,event,event-processing-signals-and-slots,257,"Ok, thanks for the reply. Maybe a note in the documentation could be added specifying that it only works if the signal has the shape of Clicked() or Pressed(), not with extra arguments ?: https://root.cern.ch/root/htmldoc/guides/users-guide/WritingGUI.html#event-processing-signals-and-slots",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:75,interoperability,specif,specifying,75,"Ok, thanks for the reply. Maybe a note in the documentation could be added specifying that it only works if the signal has the shape of Clicked() or Pressed(), not with extra arguments ?: https://root.cern.ch/root/htmldoc/guides/users-guide/WritingGUI.html#event-processing-signals-and-slots",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:286,reliability,slo,slots,286,"Ok, thanks for the reply. Maybe a note in the documentation could be added specifying that it only works if the signal has the shape of Clicked() or Pressed(), not with extra arguments ?: https://root.cern.ch/root/htmldoc/guides/users-guide/WritingGUI.html#event-processing-signals-and-slots",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:112,security,sign,signal,112,"Ok, thanks for the reply. Maybe a note in the documentation could be added specifying that it only works if the signal has the shape of Clicked() or Pressed(), not with extra arguments ?: https://root.cern.ch/root/htmldoc/guides/users-guide/WritingGUI.html#event-processing-signals-and-slots",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:274,security,sign,signals-and-slots,274,"Ok, thanks for the reply. Maybe a note in the documentation could be added specifying that it only works if the signal has the shape of Clicked() or Pressed(), not with extra arguments ?: https://root.cern.ch/root/htmldoc/guides/users-guide/WritingGUI.html#event-processing-signals-and-slots",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:46,usability,document,documentation,46,"Ok, thanks for the reply. Maybe a note in the documentation could be added specifying that it only works if the signal has the shape of Clicked() or Pressed(), not with extra arguments ?: https://root.cern.ch/root/htmldoc/guides/users-guide/WritingGUI.html#event-processing-signals-and-slots",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:222,usability,guid,guides,222,"Ok, thanks for the reply. Maybe a note in the documentation could be added specifying that it only works if the signal has the shape of Clicked() or Pressed(), not with extra arguments ?: https://root.cern.ch/root/htmldoc/guides/users-guide/WritingGUI.html#event-processing-signals-and-slots",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:229,usability,user,users-guide,229,"Ok, thanks for the reply. Maybe a note in the documentation could be added specifying that it only works if the signal has the shape of Clicked() or Pressed(), not with extra arguments ?: https://root.cern.ch/root/htmldoc/guides/users-guide/WritingGUI.html#event-processing-signals-and-slots",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:77,reliability,doe,does,77,"I provided a PR for this. I have tested the new signal in my code and now it does not crash, all works well :). Thanks for the excellent support.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:33,safety,test,tested,33,"I provided a PR for this. I have tested the new signal in my code and now it does not crash, all works well :). Thanks for the excellent support.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:48,security,sign,signal,48,"I provided a PR for this. I have tested the new signal in my code and now it does not crash, all works well :). Thanks for the excellent support.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:33,testability,test,tested,33,"I provided a PR for this. I have tested the new signal in my code and now it does not crash, all works well :). Thanks for the excellent support.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7195:137,usability,support,support,137,"I provided a PR for this. I have tested the new signal in my code and now it does not crash, all works well :). Thanks for the excellent support.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7195
https://github.com/root-project/root/issues/7196:169,deployability,updat,update,169,> or add a new variable inside the MemInfo_t struct that specifies the 9.3 'cached' memory. I would go for this solutions (add missing information). This would requires update in `GetLinuxMemInfo` and `GetDarwinMemInfo` in `TUnixSystem.cxx` and `GetWinNTMemInfo` in `TWinNTSystem.cxx`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:57,interoperability,specif,specifies,57,> or add a new variable inside the MemInfo_t struct that specifies the 9.3 'cached' memory. I would go for this solutions (add missing information). This would requires update in `GetLinuxMemInfo` and `GetDarwinMemInfo` in `TUnixSystem.cxx` and `GetWinNTMemInfo` in `TWinNTSystem.cxx`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:15,modifiability,variab,variable,15,> or add a new variable inside the MemInfo_t struct that specifies the 9.3 'cached' memory. I would go for this solutions (add missing information). This would requires update in `GetLinuxMemInfo` and `GetDarwinMemInfo` in `TUnixSystem.cxx` and `GetWinNTMemInfo` in `TWinNTSystem.cxx`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:76,performance,cach,cached,76,> or add a new variable inside the MemInfo_t struct that specifies the 9.3 'cached' memory. I would go for this solutions (add missing information). This would requires update in `GetLinuxMemInfo` and `GetDarwinMemInfo` in `TUnixSystem.cxx` and `GetWinNTMemInfo` in `TWinNTSystem.cxx`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:84,performance,memor,memory,84,> or add a new variable inside the MemInfo_t struct that specifies the 9.3 'cached' memory. I would go for this solutions (add missing information). This would requires update in `GetLinuxMemInfo` and `GetDarwinMemInfo` in `TUnixSystem.cxx` and `GetWinNTMemInfo` in `TWinNTSystem.cxx`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:169,safety,updat,update,169,> or add a new variable inside the MemInfo_t struct that specifies the 9.3 'cached' memory. I would go for this solutions (add missing information). This would requires update in `GetLinuxMemInfo` and `GetDarwinMemInfo` in `TUnixSystem.cxx` and `GetWinNTMemInfo` in `TWinNTSystem.cxx`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:169,security,updat,update,169,> or add a new variable inside the MemInfo_t struct that specifies the 9.3 'cached' memory. I would go for this solutions (add missing information). This would requires update in `GetLinuxMemInfo` and `GetDarwinMemInfo` in `TUnixSystem.cxx` and `GetWinNTMemInfo` in `TWinNTSystem.cxx`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:84,usability,memor,memory,84,> or add a new variable inside the MemInfo_t struct that specifies the 9.3 'cached' memory. I would go for this solutions (add missing information). This would requires update in `GetLinuxMemInfo` and `GetDarwinMemInfo` in `TUnixSystem.cxx` and `GetWinNTMemInfo` in `TWinNTSystem.cxx`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:59,interoperability,specif,specifies,59,> > or add a new variable inside the MemInfo_t struct that specifies the 9.3 'cached' memory. > . > I would go for this solutions (add missing information). Sounds good. And also document well what Used means in the MemInfo struct (as it is ambiguous and it does not correspond to any value in /proc/meminfo).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:17,modifiability,variab,variable,17,> > or add a new variable inside the MemInfo_t struct that specifies the 9.3 'cached' memory. > . > I would go for this solutions (add missing information). Sounds good. And also document well what Used means in the MemInfo struct (as it is ambiguous and it does not correspond to any value in /proc/meminfo).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:78,performance,cach,cached,78,> > or add a new variable inside the MemInfo_t struct that specifies the 9.3 'cached' memory. > . > I would go for this solutions (add missing information). Sounds good. And also document well what Used means in the MemInfo struct (as it is ambiguous and it does not correspond to any value in /proc/meminfo).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:86,performance,memor,memory,86,> > or add a new variable inside the MemInfo_t struct that specifies the 9.3 'cached' memory. > . > I would go for this solutions (add missing information). Sounds good. And also document well what Used means in the MemInfo struct (as it is ambiguous and it does not correspond to any value in /proc/meminfo).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:258,reliability,doe,does,258,> > or add a new variable inside the MemInfo_t struct that specifies the 9.3 'cached' memory. > . > I would go for this solutions (add missing information). Sounds good. And also document well what Used means in the MemInfo struct (as it is ambiguous and it does not correspond to any value in /proc/meminfo).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:86,usability,memor,memory,86,> > or add a new variable inside the MemInfo_t struct that specifies the 9.3 'cached' memory. > . > I would go for this solutions (add missing information). Sounds good. And also document well what Used means in the MemInfo struct (as it is ambiguous and it does not correspond to any value in /proc/meminfo).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:179,usability,document,document,179,> > or add a new variable inside the MemInfo_t struct that specifies the 9.3 'cached' memory. > . > I would go for this solutions (add missing information). Sounds good. And also document well what Used means in the MemInfo struct (as it is ambiguous and it does not correspond to any value in /proc/meminfo).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:131,deployability,version,version,131,"If it were only Linux, I would do it, but I am not familiar with OSx or WinNT... I have put some code snippets above for the Linux version (MemAvailable), I tested it already and it seems to work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:131,integrability,version,version,131,"If it were only Linux, I would do it, but I am not familiar with OSx or WinNT... I have put some code snippets above for the Linux version (MemAvailable), I tested it already and it seems to work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:131,modifiability,version,version,131,"If it were only Linux, I would do it, but I am not familiar with OSx or WinNT... I have put some code snippets above for the Linux version (MemAvailable), I tested it already and it seems to work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:157,safety,test,tested,157,"If it were only Linux, I would do it, but I am not familiar with OSx or WinNT... I have put some code snippets above for the Linux version (MemAvailable), I tested it already and it seems to work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:157,testability,test,tested,157,"If it were only Linux, I would do it, but I am not familiar with OSx or WinNT... I have put some code snippets above for the Linux version (MemAvailable), I tested it already and it seems to work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:226,availability,sli,slightly,226,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:1213,availability,avail,available,1213,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:1415,availability,sla,slab,1415,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:24,deployability,depend,dependent,24,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:331,deployability,stack,stackoverflow,331,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:621,deployability,manag,managed,621,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:621,energy efficiency,manag,managed,621,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:1054,energy efficiency,current,current,1054,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:24,integrability,depend,dependent,24,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:131,integrability,buffer,buffer,131,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:256,integrability,buffer,buffer,256,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:548,integrability,buffer,buffer,548,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:585,integrability,Buffer,Buffers,585,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:799,integrability,buffer,buffersMem,799,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:1294,integrability,buffer,buffer,1294,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:153,interoperability,share,shared,153,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:272,interoperability,share,shared,272,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:1333,interoperability,share,shared,1333,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:24,modifiability,depend,dependent,24,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:60,performance,memor,memory,60,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:99,performance,memor,memory,99,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:140,performance,cach,cached,140,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:160,performance,memor,memory,160,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:200,performance,cach,cache,200,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:263,performance,cach,cache,263,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:388,performance,memor,memory-utilisation-of-a-linux-server-using-sar-report,388,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:507,performance,memor,memory,507,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:542,performance,cach,cache,542,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:555,performance,memor,memory,555,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:575,performance,memor,memory,575,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:595,performance,Cach,Cached,595,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:602,performance,memor,memory,602,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:769,performance,cach,cachedMem,769,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:944,performance,memor,memory,944,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:962,performance,cach,cached,962,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:1255,performance,cach,cached,1255,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:1373,performance,cach,cached,1373,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:226,reliability,sli,slightly,226,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:781,reliability,sre,sreclaimableMem,781,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:1213,reliability,availab,available,1213,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:1415,reliability,sla,slab,1415,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:24,safety,depend,dependent,24,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:621,safety,manag,managed,621,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:1213,safety,avail,available,1213,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:285,security,auth,author,285,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:1213,security,availab,available,1213,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:24,testability,depend,dependent,24,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:60,usability,memor,memory,60,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:99,usability,memor,memory,99,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:160,usability,memor,memory,160,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:388,usability,memor,memory-utilisation-of-a-linux-server-using-sar-report,388,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:507,usability,memor,memory,507,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:555,usability,memor,memory,555,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:575,usability,memor,memory,575,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:602,usability,memor,memory,602,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:944,usability,memor,memory,944,"This issue is very case-dependent. When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:. `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree. - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```. const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;. host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;. ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. I have implemented the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```. Int_t fMemAvailable; // available RAM in MB. Int_t fMemCached; // cached RAM in MB. Int_t fMemBuffer; // buffer RAM in MB. Int_t fMemShared; // shared RAM in MB. Int_t fSwapCached; // cached swap in MB. Int_t fSReclaimable // slab that might be reclaimed. ```. Fixed in . - https://github.com/root-project/root/pull/14695",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:80,security,modif,modified,80,"@silverweed To fully close this issue, I guess that GetWinNTInfo should also be modified, as suggested by https://github.com/root-project/root/issues/7196#issuecomment-778310928 ? (Or we open a separate ""Issue"" for the Windows case). Thanks a lot for the merged PR in any case!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:21,usability,close,close,21,"@silverweed To fully close this issue, I guess that GetWinNTInfo should also be modified, as suggested by https://github.com/root-project/root/issues/7196#issuecomment-778310928 ? (Or we open a separate ""Issue"" for the Windows case). Thanks a lot for the merged PR in any case!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:355,interoperability,platform,platforms,355,"> @silverweed To fully close this issue, I guess that GetWinNTInfo should also be modified, as suggested by [#7196 (comment)](https://github.com/root-project/root/issues/7196#issuecomment-778310928) ? (Or we open a separate ""Issue"" for the Windows case). Thanks a lot for the merged PR in any case! Yes, let's keep it open until it's fully working on all platforms. For Windows do we already know if this is an issue? I.e. what's the expected output and what's the actual output? Maybe @bellenot can help with this",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:82,security,modif,modified,82,"> @silverweed To fully close this issue, I guess that GetWinNTInfo should also be modified, as suggested by [#7196 (comment)](https://github.com/root-project/root/issues/7196#issuecomment-778310928) ? (Or we open a separate ""Issue"" for the Windows case). Thanks a lot for the merged PR in any case! Yes, let's keep it open until it's fully working on all platforms. For Windows do we already know if this is an issue? I.e. what's the expected output and what's the actual output? Maybe @bellenot can help with this",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:23,usability,close,close,23,"> @silverweed To fully close this issue, I guess that GetWinNTInfo should also be modified, as suggested by [#7196 (comment)](https://github.com/root-project/root/issues/7196#issuecomment-778310928) ? (Or we open a separate ""Issue"" for the Windows case). Thanks a lot for the merged PR in any case! Yes, let's keep it open until it's fully working on all platforms. For Windows do we already know if this is an issue? I.e. what's the expected output and what's the actual output? Maybe @bellenot can help with this",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:500,usability,help,help,500,"> @silverweed To fully close this issue, I guess that GetWinNTInfo should also be modified, as suggested by [#7196 (comment)](https://github.com/root-project/root/issues/7196#issuecomment-778310928) ? (Or we open a separate ""Issue"" for the Windows case). Thanks a lot for the merged PR in any case! Yes, let's keep it open until it's fully working on all platforms. For Windows do we already know if this is an issue? I.e. what's the expected output and what's the actual output? Maybe @bellenot can help with this",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:267,deployability,api,api,267,"Nope, I do not know if it is an issue on Windows. I think we could just make sure that the ROOT code does the same as:. https://github.com/gsass1/NTop/blob/3ceac499d7c3bfc5f7a073df6e0bd7aa1babf790/ntop.c#L907. See also https://learn.microsoft.com/en-us/windows/win32/api/sysinfoapi/nf-sysinfoapi-globalmemorystatusex.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:267,integrability,api,api,267,"Nope, I do not know if it is an issue on Windows. I think we could just make sure that the ROOT code does the same as:. https://github.com/gsass1/NTop/blob/3ceac499d7c3bfc5f7a073df6e0bd7aa1babf790/ntop.c#L907. See also https://learn.microsoft.com/en-us/windows/win32/api/sysinfoapi/nf-sysinfoapi-globalmemorystatusex.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:267,interoperability,api,api,267,"Nope, I do not know if it is an issue on Windows. I think we could just make sure that the ROOT code does the same as:. https://github.com/gsass1/NTop/blob/3ceac499d7c3bfc5f7a073df6e0bd7aa1babf790/ntop.c#L907. See also https://learn.microsoft.com/en-us/windows/win32/api/sysinfoapi/nf-sysinfoapi-globalmemorystatusex.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:101,reliability,doe,does,101,"Nope, I do not know if it is an issue on Windows. I think we could just make sure that the ROOT code does the same as:. https://github.com/gsass1/NTop/blob/3ceac499d7c3bfc5f7a073df6e0bd7aa1babf790/ntop.c#L907. See also https://learn.microsoft.com/en-us/windows/win32/api/sysinfoapi/nf-sysinfoapi-globalmemorystatusex.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:227,usability,learn,learn,227,"Nope, I do not know if it is an issue on Windows. I think we could just make sure that the ROOT code does the same as:. https://github.com/gsass1/NTop/blob/3ceac499d7c3bfc5f7a073df6e0bd7aa1babf790/ntop.c#L907. See also https://learn.microsoft.com/en-us/windows/win32/api/sysinfoapi/nf-sysinfoapi-globalmemorystatusex.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:94,deployability,stack,stackoverflow,94,"Actually, I am not sure the ntop implementation is correct. This seems more accurate: https://stackoverflow.com/questions/14371521/how-to-find-the-current-system-cache-size-on-windows",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:147,energy efficiency,current,current-system-cache-size-on-windows,147,"Actually, I am not sure the ntop implementation is correct. This seems more accurate: https://stackoverflow.com/questions/14371521/how-to-find-the-current-system-cache-size-on-windows",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:162,performance,cach,cache-size-on-windows,162,"Actually, I am not sure the ntop implementation is correct. This seems more accurate: https://stackoverflow.com/questions/14371521/how-to-find-the-current-system-cache-size-on-windows",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:10,energy efficiency,current,current,10,Isn't the current implementation good enough? https://github.com/root-project/root/blob/master/core/winnt/src/TWinNTSystem.cxx#L6037.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:95,energy efficiency,core,core,95,Isn't the current implementation good enough? https://github.com/root-project/root/blob/master/core/winnt/src/TWinNTSystem.cxx#L6037.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:109,integrability,sub,subtract,109,"On Linux, this type of implementation was not correct when there was a lot of 'cached' RAM memory. We had to subtract cache by hand. But it might be that in Windows, this subtraction is already done behind the scenes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:171,integrability,sub,subtraction,171,"On Linux, this type of implementation was not correct when there was a lot of 'cached' RAM memory. We had to subtract cache by hand. But it might be that in Windows, this subtraction is already done behind the scenes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:79,performance,cach,cached,79,"On Linux, this type of implementation was not correct when there was a lot of 'cached' RAM memory. We had to subtract cache by hand. But it might be that in Windows, this subtraction is already done behind the scenes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:91,performance,memor,memory,91,"On Linux, this type of implementation was not correct when there was a lot of 'cached' RAM memory. We had to subtract cache by hand. But it might be that in Windows, this subtraction is already done behind the scenes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:118,performance,cach,cache,118,"On Linux, this type of implementation was not correct when there was a lot of 'cached' RAM memory. We had to subtract cache by hand. But it might be that in Windows, this subtraction is already done behind the scenes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/issues/7196:91,usability,memor,memory,91,"On Linux, this type of implementation was not correct when there was a lot of 'cached' RAM memory. We had to subtract cache by hand. But it might be that in Windows, this subtraction is already done behind the scenes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7196
https://github.com/root-project/root/pull/7200:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7200
https://github.com/root-project/root/pull/7200:135,availability,servic,services,135,> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106671/console). @pcanal I can't check the error log (no permission). Let me know if I can fix the error somehow. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7200
https://github.com/root-project/root/pull/7200:236,availability,error,error,236,> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106671/console). @pcanal I can't check the error log (no permission). Let me know if I can fix the error somehow. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7200
https://github.com/root-project/root/pull/7200:292,availability,error,error,292,> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106671/console). @pcanal I can't check the error log (no permission). Let me know if I can fix the error somehow. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7200
https://github.com/root-project/root/pull/7200:2,deployability,Build,Build,2,> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106671/console). @pcanal I can't check the error log (no permission). Let me know if I can fix the error somehow. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7200
https://github.com/root-project/root/pull/7200:8,deployability,fail,failed,8,> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106671/console). @pcanal I can't check the error log (no permission). Let me know if I can fix the error somehow. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7200
https://github.com/root-project/root/pull/7200:56,deployability,build,build,56,> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106671/console). @pcanal I can't check the error log (no permission). Let me know if I can fix the error somehow. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7200
https://github.com/root-project/root/pull/7200:90,deployability,build,build,90,> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106671/console). @pcanal I can't check the error log (no permission). Let me know if I can fix the error somehow. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7200
https://github.com/root-project/root/pull/7200:135,deployability,servic,services,135,> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106671/console). @pcanal I can't check the error log (no permission). Let me know if I can fix the error somehow. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7200
https://github.com/root-project/root/pull/7200:187,deployability,build,build,187,> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106671/console). @pcanal I can't check the error log (no permission). Let me know if I can fix the error somehow. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7200
https://github.com/root-project/root/pull/7200:242,deployability,log,log,242,> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106671/console). @pcanal I can't check the error log (no permission). Let me know if I can fix the error somehow. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7200
https://github.com/root-project/root/pull/7200:135,integrability,servic,services,135,> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106671/console). @pcanal I can't check the error log (no permission). Let me know if I can fix the error somehow. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7200
https://github.com/root-project/root/pull/7200:135,modifiability,servic,services,135,> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106671/console). @pcanal I can't check the error log (no permission). Let me know if I can fix the error somehow. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7200
https://github.com/root-project/root/pull/7200:236,performance,error,error,236,> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106671/console). @pcanal I can't check the error log (no permission). Let me know if I can fix the error somehow. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7200
https://github.com/root-project/root/pull/7200:292,performance,error,error,292,> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106671/console). @pcanal I can't check the error log (no permission). Let me know if I can fix the error somehow. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7200
https://github.com/root-project/root/pull/7200:8,reliability,fail,failed,8,> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106671/console). @pcanal I can't check the error log (no permission). Let me know if I can fix the error somehow. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7200
https://github.com/root-project/root/pull/7200:236,safety,error,error,236,> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106671/console). @pcanal I can't check the error log (no permission). Let me know if I can fix the error somehow. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7200
https://github.com/root-project/root/pull/7200:242,safety,log,log,242,> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106671/console). @pcanal I can't check the error log (no permission). Let me know if I can fix the error somehow. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7200
https://github.com/root-project/root/pull/7200:250,safety,permiss,permission,250,> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106671/console). @pcanal I can't check the error log (no permission). Let me know if I can fix the error somehow. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7200
https://github.com/root-project/root/pull/7200:292,safety,error,error,292,> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106671/console). @pcanal I can't check the error log (no permission). Let me know if I can fix the error somehow. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7200
https://github.com/root-project/root/pull/7200:242,security,log,log,242,> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106671/console). @pcanal I can't check the error log (no permission). Let me know if I can fix the error somehow. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7200
https://github.com/root-project/root/pull/7200:242,testability,log,log,242,> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106671/console). @pcanal I can't check the error log (no permission). Let me know if I can fix the error somehow. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7200
https://github.com/root-project/root/pull/7200:236,usability,error,error,236,> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106671/console). @pcanal I can't check the error log (no permission). Let me know if I can fix the error somehow. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7200
https://github.com/root-project/root/pull/7200:292,usability,error,error,292,> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106671/console). @pcanal I can't check the error log (no permission). Let me know if I can fix the error somehow. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7200
https://github.com/root-project/root/pull/7200:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7200
https://github.com/root-project/root/issues/7201:120,deployability,Unload,Unloading,120,"The only thing I see fixable (and not breaking existing use cases) is the case for returning integer types. Details:. - Unloading a transaction also unloads its generated code, AST, etc - that's violating a contract that existing uses rely on. - `Calc` etc return whatever cast to long, since CINT, return a reference (cast to long) for ""objects"". As you know that means the temporary must be stored until the end of the process. Bad interface, but it is what it is, and breaking the interface contract is out of question. - Memory allocated by `MachineFunctionPass` is likely the object code output of the JIT. It's a common use case to `Declare()` something and then `Calc()` say the address of a template instantiation - unloading the binary code after `Calc()` would again violate the usage contract. I believe much of this issue comes from a misunderstanding, as you point out:. > they are in fact not insulated one-offs of evaluating the code in some context. Would you like us to improve the documentation on those? So what we're left with is adding new interfaces. We are considering employing nested interpreters for that (`RDataFrame` being a main customer), but due to person power constraints that won't happen in 2021. I'll let you know once I implemented the optimization for integer returns - thanks for reporting that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:149,deployability,unload,unloads,149,"The only thing I see fixable (and not breaking existing use cases) is the case for returning integer types. Details:. - Unloading a transaction also unloads its generated code, AST, etc - that's violating a contract that existing uses rely on. - `Calc` etc return whatever cast to long, since CINT, return a reference (cast to long) for ""objects"". As you know that means the temporary must be stored until the end of the process. Bad interface, but it is what it is, and breaking the interface contract is out of question. - Memory allocated by `MachineFunctionPass` is likely the object code output of the JIT. It's a common use case to `Declare()` something and then `Calc()` say the address of a template instantiation - unloading the binary code after `Calc()` would again violate the usage contract. I believe much of this issue comes from a misunderstanding, as you point out:. > they are in fact not insulated one-offs of evaluating the code in some context. Would you like us to improve the documentation on those? So what we're left with is adding new interfaces. We are considering employing nested interpreters for that (`RDataFrame` being a main customer), but due to person power constraints that won't happen in 2021. I'll let you know once I implemented the optimization for integer returns - thanks for reporting that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:724,deployability,unload,unloading,724,"The only thing I see fixable (and not breaking existing use cases) is the case for returning integer types. Details:. - Unloading a transaction also unloads its generated code, AST, etc - that's violating a contract that existing uses rely on. - `Calc` etc return whatever cast to long, since CINT, return a reference (cast to long) for ""objects"". As you know that means the temporary must be stored until the end of the process. Bad interface, but it is what it is, and breaking the interface contract is out of question. - Memory allocated by `MachineFunctionPass` is likely the object code output of the JIT. It's a common use case to `Declare()` something and then `Calc()` say the address of a template instantiation - unloading the binary code after `Calc()` would again violate the usage contract. I believe much of this issue comes from a misunderstanding, as you point out:. > they are in fact not insulated one-offs of evaluating the code in some context. Would you like us to improve the documentation on those? So what we're left with is adding new interfaces. We are considering employing nested interpreters for that (`RDataFrame` being a main customer), but due to person power constraints that won't happen in 2021. I'll let you know once I implemented the optimization for integer returns - thanks for reporting that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:532,energy efficiency,alloc,allocated,532,"The only thing I see fixable (and not breaking existing use cases) is the case for returning integer types. Details:. - Unloading a transaction also unloads its generated code, AST, etc - that's violating a contract that existing uses rely on. - `Calc` etc return whatever cast to long, since CINT, return a reference (cast to long) for ""objects"". As you know that means the temporary must be stored until the end of the process. Bad interface, but it is what it is, and breaking the interface contract is out of question. - Memory allocated by `MachineFunctionPass` is likely the object code output of the JIT. It's a common use case to `Declare()` something and then `Calc()` say the address of a template instantiation - unloading the binary code after `Calc()` would again violate the usage contract. I believe much of this issue comes from a misunderstanding, as you point out:. > they are in fact not insulated one-offs of evaluating the code in some context. Would you like us to improve the documentation on those? So what we're left with is adding new interfaces. We are considering employing nested interpreters for that (`RDataFrame` being a main customer), but due to person power constraints that won't happen in 2021. I'll let you know once I implemented the optimization for integer returns - thanks for reporting that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:1187,energy efficiency,power,power,1187,"The only thing I see fixable (and not breaking existing use cases) is the case for returning integer types. Details:. - Unloading a transaction also unloads its generated code, AST, etc - that's violating a contract that existing uses rely on. - `Calc` etc return whatever cast to long, since CINT, return a reference (cast to long) for ""objects"". As you know that means the temporary must be stored until the end of the process. Bad interface, but it is what it is, and breaking the interface contract is out of question. - Memory allocated by `MachineFunctionPass` is likely the object code output of the JIT. It's a common use case to `Declare()` something and then `Calc()` say the address of a template instantiation - unloading the binary code after `Calc()` would again violate the usage contract. I believe much of this issue comes from a misunderstanding, as you point out:. > they are in fact not insulated one-offs of evaluating the code in some context. Would you like us to improve the documentation on those? So what we're left with is adding new interfaces. We are considering employing nested interpreters for that (`RDataFrame` being a main customer), but due to person power constraints that won't happen in 2021. I'll let you know once I implemented the optimization for integer returns - thanks for reporting that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:1273,energy efficiency,optim,optimization,1273,"The only thing I see fixable (and not breaking existing use cases) is the case for returning integer types. Details:. - Unloading a transaction also unloads its generated code, AST, etc - that's violating a contract that existing uses rely on. - `Calc` etc return whatever cast to long, since CINT, return a reference (cast to long) for ""objects"". As you know that means the temporary must be stored until the end of the process. Bad interface, but it is what it is, and breaking the interface contract is out of question. - Memory allocated by `MachineFunctionPass` is likely the object code output of the JIT. It's a common use case to `Declare()` something and then `Calc()` say the address of a template instantiation - unloading the binary code after `Calc()` would again violate the usage contract. I believe much of this issue comes from a misunderstanding, as you point out:. > they are in fact not insulated one-offs of evaluating the code in some context. Would you like us to improve the documentation on those? So what we're left with is adding new interfaces. We are considering employing nested interpreters for that (`RDataFrame` being a main customer), but due to person power constraints that won't happen in 2021. I'll let you know once I implemented the optimization for integer returns - thanks for reporting that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:207,integrability,contract,contract,207,"The only thing I see fixable (and not breaking existing use cases) is the case for returning integer types. Details:. - Unloading a transaction also unloads its generated code, AST, etc - that's violating a contract that existing uses rely on. - `Calc` etc return whatever cast to long, since CINT, return a reference (cast to long) for ""objects"". As you know that means the temporary must be stored until the end of the process. Bad interface, but it is what it is, and breaking the interface contract is out of question. - Memory allocated by `MachineFunctionPass` is likely the object code output of the JIT. It's a common use case to `Declare()` something and then `Calc()` say the address of a template instantiation - unloading the binary code after `Calc()` would again violate the usage contract. I believe much of this issue comes from a misunderstanding, as you point out:. > they are in fact not insulated one-offs of evaluating the code in some context. Would you like us to improve the documentation on those? So what we're left with is adding new interfaces. We are considering employing nested interpreters for that (`RDataFrame` being a main customer), but due to person power constraints that won't happen in 2021. I'll let you know once I implemented the optimization for integer returns - thanks for reporting that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:434,integrability,interfac,interface,434,"The only thing I see fixable (and not breaking existing use cases) is the case for returning integer types. Details:. - Unloading a transaction also unloads its generated code, AST, etc - that's violating a contract that existing uses rely on. - `Calc` etc return whatever cast to long, since CINT, return a reference (cast to long) for ""objects"". As you know that means the temporary must be stored until the end of the process. Bad interface, but it is what it is, and breaking the interface contract is out of question. - Memory allocated by `MachineFunctionPass` is likely the object code output of the JIT. It's a common use case to `Declare()` something and then `Calc()` say the address of a template instantiation - unloading the binary code after `Calc()` would again violate the usage contract. I believe much of this issue comes from a misunderstanding, as you point out:. > they are in fact not insulated one-offs of evaluating the code in some context. Would you like us to improve the documentation on those? So what we're left with is adding new interfaces. We are considering employing nested interpreters for that (`RDataFrame` being a main customer), but due to person power constraints that won't happen in 2021. I'll let you know once I implemented the optimization for integer returns - thanks for reporting that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:484,integrability,interfac,interface,484,"The only thing I see fixable (and not breaking existing use cases) is the case for returning integer types. Details:. - Unloading a transaction also unloads its generated code, AST, etc - that's violating a contract that existing uses rely on. - `Calc` etc return whatever cast to long, since CINT, return a reference (cast to long) for ""objects"". As you know that means the temporary must be stored until the end of the process. Bad interface, but it is what it is, and breaking the interface contract is out of question. - Memory allocated by `MachineFunctionPass` is likely the object code output of the JIT. It's a common use case to `Declare()` something and then `Calc()` say the address of a template instantiation - unloading the binary code after `Calc()` would again violate the usage contract. I believe much of this issue comes from a misunderstanding, as you point out:. > they are in fact not insulated one-offs of evaluating the code in some context. Would you like us to improve the documentation on those? So what we're left with is adding new interfaces. We are considering employing nested interpreters for that (`RDataFrame` being a main customer), but due to person power constraints that won't happen in 2021. I'll let you know once I implemented the optimization for integer returns - thanks for reporting that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:494,integrability,contract,contract,494,"The only thing I see fixable (and not breaking existing use cases) is the case for returning integer types. Details:. - Unloading a transaction also unloads its generated code, AST, etc - that's violating a contract that existing uses rely on. - `Calc` etc return whatever cast to long, since CINT, return a reference (cast to long) for ""objects"". As you know that means the temporary must be stored until the end of the process. Bad interface, but it is what it is, and breaking the interface contract is out of question. - Memory allocated by `MachineFunctionPass` is likely the object code output of the JIT. It's a common use case to `Declare()` something and then `Calc()` say the address of a template instantiation - unloading the binary code after `Calc()` would again violate the usage contract. I believe much of this issue comes from a misunderstanding, as you point out:. > they are in fact not insulated one-offs of evaluating the code in some context. Would you like us to improve the documentation on those? So what we're left with is adding new interfaces. We are considering employing nested interpreters for that (`RDataFrame` being a main customer), but due to person power constraints that won't happen in 2021. I'll let you know once I implemented the optimization for integer returns - thanks for reporting that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:795,integrability,contract,contract,795,"The only thing I see fixable (and not breaking existing use cases) is the case for returning integer types. Details:. - Unloading a transaction also unloads its generated code, AST, etc - that's violating a contract that existing uses rely on. - `Calc` etc return whatever cast to long, since CINT, return a reference (cast to long) for ""objects"". As you know that means the temporary must be stored until the end of the process. Bad interface, but it is what it is, and breaking the interface contract is out of question. - Memory allocated by `MachineFunctionPass` is likely the object code output of the JIT. It's a common use case to `Declare()` something and then `Calc()` say the address of a template instantiation - unloading the binary code after `Calc()` would again violate the usage contract. I believe much of this issue comes from a misunderstanding, as you point out:. > they are in fact not insulated one-offs of evaluating the code in some context. Would you like us to improve the documentation on those? So what we're left with is adding new interfaces. We are considering employing nested interpreters for that (`RDataFrame` being a main customer), but due to person power constraints that won't happen in 2021. I'll let you know once I implemented the optimization for integer returns - thanks for reporting that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:1061,integrability,interfac,interfaces,1061,"The only thing I see fixable (and not breaking existing use cases) is the case for returning integer types. Details:. - Unloading a transaction also unloads its generated code, AST, etc - that's violating a contract that existing uses rely on. - `Calc` etc return whatever cast to long, since CINT, return a reference (cast to long) for ""objects"". As you know that means the temporary must be stored until the end of the process. Bad interface, but it is what it is, and breaking the interface contract is out of question. - Memory allocated by `MachineFunctionPass` is likely the object code output of the JIT. It's a common use case to `Declare()` something and then `Calc()` say the address of a template instantiation - unloading the binary code after `Calc()` would again violate the usage contract. I believe much of this issue comes from a misunderstanding, as you point out:. > they are in fact not insulated one-offs of evaluating the code in some context. Would you like us to improve the documentation on those? So what we're left with is adding new interfaces. We are considering employing nested interpreters for that (`RDataFrame` being a main customer), but due to person power constraints that won't happen in 2021. I'll let you know once I implemented the optimization for integer returns - thanks for reporting that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:207,interoperability,contract,contract,207,"The only thing I see fixable (and not breaking existing use cases) is the case for returning integer types. Details:. - Unloading a transaction also unloads its generated code, AST, etc - that's violating a contract that existing uses rely on. - `Calc` etc return whatever cast to long, since CINT, return a reference (cast to long) for ""objects"". As you know that means the temporary must be stored until the end of the process. Bad interface, but it is what it is, and breaking the interface contract is out of question. - Memory allocated by `MachineFunctionPass` is likely the object code output of the JIT. It's a common use case to `Declare()` something and then `Calc()` say the address of a template instantiation - unloading the binary code after `Calc()` would again violate the usage contract. I believe much of this issue comes from a misunderstanding, as you point out:. > they are in fact not insulated one-offs of evaluating the code in some context. Would you like us to improve the documentation on those? So what we're left with is adding new interfaces. We are considering employing nested interpreters for that (`RDataFrame` being a main customer), but due to person power constraints that won't happen in 2021. I'll let you know once I implemented the optimization for integer returns - thanks for reporting that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:434,interoperability,interfac,interface,434,"The only thing I see fixable (and not breaking existing use cases) is the case for returning integer types. Details:. - Unloading a transaction also unloads its generated code, AST, etc - that's violating a contract that existing uses rely on. - `Calc` etc return whatever cast to long, since CINT, return a reference (cast to long) for ""objects"". As you know that means the temporary must be stored until the end of the process. Bad interface, but it is what it is, and breaking the interface contract is out of question. - Memory allocated by `MachineFunctionPass` is likely the object code output of the JIT. It's a common use case to `Declare()` something and then `Calc()` say the address of a template instantiation - unloading the binary code after `Calc()` would again violate the usage contract. I believe much of this issue comes from a misunderstanding, as you point out:. > they are in fact not insulated one-offs of evaluating the code in some context. Would you like us to improve the documentation on those? So what we're left with is adding new interfaces. We are considering employing nested interpreters for that (`RDataFrame` being a main customer), but due to person power constraints that won't happen in 2021. I'll let you know once I implemented the optimization for integer returns - thanks for reporting that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:484,interoperability,interfac,interface,484,"The only thing I see fixable (and not breaking existing use cases) is the case for returning integer types. Details:. - Unloading a transaction also unloads its generated code, AST, etc - that's violating a contract that existing uses rely on. - `Calc` etc return whatever cast to long, since CINT, return a reference (cast to long) for ""objects"". As you know that means the temporary must be stored until the end of the process. Bad interface, but it is what it is, and breaking the interface contract is out of question. - Memory allocated by `MachineFunctionPass` is likely the object code output of the JIT. It's a common use case to `Declare()` something and then `Calc()` say the address of a template instantiation - unloading the binary code after `Calc()` would again violate the usage contract. I believe much of this issue comes from a misunderstanding, as you point out:. > they are in fact not insulated one-offs of evaluating the code in some context. Would you like us to improve the documentation on those? So what we're left with is adding new interfaces. We are considering employing nested interpreters for that (`RDataFrame` being a main customer), but due to person power constraints that won't happen in 2021. I'll let you know once I implemented the optimization for integer returns - thanks for reporting that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:494,interoperability,contract,contract,494,"The only thing I see fixable (and not breaking existing use cases) is the case for returning integer types. Details:. - Unloading a transaction also unloads its generated code, AST, etc - that's violating a contract that existing uses rely on. - `Calc` etc return whatever cast to long, since CINT, return a reference (cast to long) for ""objects"". As you know that means the temporary must be stored until the end of the process. Bad interface, but it is what it is, and breaking the interface contract is out of question. - Memory allocated by `MachineFunctionPass` is likely the object code output of the JIT. It's a common use case to `Declare()` something and then `Calc()` say the address of a template instantiation - unloading the binary code after `Calc()` would again violate the usage contract. I believe much of this issue comes from a misunderstanding, as you point out:. > they are in fact not insulated one-offs of evaluating the code in some context. Would you like us to improve the documentation on those? So what we're left with is adding new interfaces. We are considering employing nested interpreters for that (`RDataFrame` being a main customer), but due to person power constraints that won't happen in 2021. I'll let you know once I implemented the optimization for integer returns - thanks for reporting that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:795,interoperability,contract,contract,795,"The only thing I see fixable (and not breaking existing use cases) is the case for returning integer types. Details:. - Unloading a transaction also unloads its generated code, AST, etc - that's violating a contract that existing uses rely on. - `Calc` etc return whatever cast to long, since CINT, return a reference (cast to long) for ""objects"". As you know that means the temporary must be stored until the end of the process. Bad interface, but it is what it is, and breaking the interface contract is out of question. - Memory allocated by `MachineFunctionPass` is likely the object code output of the JIT. It's a common use case to `Declare()` something and then `Calc()` say the address of a template instantiation - unloading the binary code after `Calc()` would again violate the usage contract. I believe much of this issue comes from a misunderstanding, as you point out:. > they are in fact not insulated one-offs of evaluating the code in some context. Would you like us to improve the documentation on those? So what we're left with is adding new interfaces. We are considering employing nested interpreters for that (`RDataFrame` being a main customer), but due to person power constraints that won't happen in 2021. I'll let you know once I implemented the optimization for integer returns - thanks for reporting that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:1061,interoperability,interfac,interfaces,1061,"The only thing I see fixable (and not breaking existing use cases) is the case for returning integer types. Details:. - Unloading a transaction also unloads its generated code, AST, etc - that's violating a contract that existing uses rely on. - `Calc` etc return whatever cast to long, since CINT, return a reference (cast to long) for ""objects"". As you know that means the temporary must be stored until the end of the process. Bad interface, but it is what it is, and breaking the interface contract is out of question. - Memory allocated by `MachineFunctionPass` is likely the object code output of the JIT. It's a common use case to `Declare()` something and then `Calc()` say the address of a template instantiation - unloading the binary code after `Calc()` would again violate the usage contract. I believe much of this issue comes from a misunderstanding, as you point out:. > they are in fact not insulated one-offs of evaluating the code in some context. Would you like us to improve the documentation on those? So what we're left with is adding new interfaces. We are considering employing nested interpreters for that (`RDataFrame` being a main customer), but due to person power constraints that won't happen in 2021. I'll let you know once I implemented the optimization for integer returns - thanks for reporting that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:434,modifiability,interfac,interface,434,"The only thing I see fixable (and not breaking existing use cases) is the case for returning integer types. Details:. - Unloading a transaction also unloads its generated code, AST, etc - that's violating a contract that existing uses rely on. - `Calc` etc return whatever cast to long, since CINT, return a reference (cast to long) for ""objects"". As you know that means the temporary must be stored until the end of the process. Bad interface, but it is what it is, and breaking the interface contract is out of question. - Memory allocated by `MachineFunctionPass` is likely the object code output of the JIT. It's a common use case to `Declare()` something and then `Calc()` say the address of a template instantiation - unloading the binary code after `Calc()` would again violate the usage contract. I believe much of this issue comes from a misunderstanding, as you point out:. > they are in fact not insulated one-offs of evaluating the code in some context. Would you like us to improve the documentation on those? So what we're left with is adding new interfaces. We are considering employing nested interpreters for that (`RDataFrame` being a main customer), but due to person power constraints that won't happen in 2021. I'll let you know once I implemented the optimization for integer returns - thanks for reporting that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:484,modifiability,interfac,interface,484,"The only thing I see fixable (and not breaking existing use cases) is the case for returning integer types. Details:. - Unloading a transaction also unloads its generated code, AST, etc - that's violating a contract that existing uses rely on. - `Calc` etc return whatever cast to long, since CINT, return a reference (cast to long) for ""objects"". As you know that means the temporary must be stored until the end of the process. Bad interface, but it is what it is, and breaking the interface contract is out of question. - Memory allocated by `MachineFunctionPass` is likely the object code output of the JIT. It's a common use case to `Declare()` something and then `Calc()` say the address of a template instantiation - unloading the binary code after `Calc()` would again violate the usage contract. I believe much of this issue comes from a misunderstanding, as you point out:. > they are in fact not insulated one-offs of evaluating the code in some context. Would you like us to improve the documentation on those? So what we're left with is adding new interfaces. We are considering employing nested interpreters for that (`RDataFrame` being a main customer), but due to person power constraints that won't happen in 2021. I'll let you know once I implemented the optimization for integer returns - thanks for reporting that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:1061,modifiability,interfac,interfaces,1061,"The only thing I see fixable (and not breaking existing use cases) is the case for returning integer types. Details:. - Unloading a transaction also unloads its generated code, AST, etc - that's violating a contract that existing uses rely on. - `Calc` etc return whatever cast to long, since CINT, return a reference (cast to long) for ""objects"". As you know that means the temporary must be stored until the end of the process. Bad interface, but it is what it is, and breaking the interface contract is out of question. - Memory allocated by `MachineFunctionPass` is likely the object code output of the JIT. It's a common use case to `Declare()` something and then `Calc()` say the address of a template instantiation - unloading the binary code after `Calc()` would again violate the usage contract. I believe much of this issue comes from a misunderstanding, as you point out:. > they are in fact not insulated one-offs of evaluating the code in some context. Would you like us to improve the documentation on those? So what we're left with is adding new interfaces. We are considering employing nested interpreters for that (`RDataFrame` being a main customer), but due to person power constraints that won't happen in 2021. I'll let you know once I implemented the optimization for integer returns - thanks for reporting that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:525,performance,Memor,Memory,525,"The only thing I see fixable (and not breaking existing use cases) is the case for returning integer types. Details:. - Unloading a transaction also unloads its generated code, AST, etc - that's violating a contract that existing uses rely on. - `Calc` etc return whatever cast to long, since CINT, return a reference (cast to long) for ""objects"". As you know that means the temporary must be stored until the end of the process. Bad interface, but it is what it is, and breaking the interface contract is out of question. - Memory allocated by `MachineFunctionPass` is likely the object code output of the JIT. It's a common use case to `Declare()` something and then `Calc()` say the address of a template instantiation - unloading the binary code after `Calc()` would again violate the usage contract. I believe much of this issue comes from a misunderstanding, as you point out:. > they are in fact not insulated one-offs of evaluating the code in some context. Would you like us to improve the documentation on those? So what we're left with is adding new interfaces. We are considering employing nested interpreters for that (`RDataFrame` being a main customer), but due to person power constraints that won't happen in 2021. I'll let you know once I implemented the optimization for integer returns - thanks for reporting that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:1273,performance,optimiz,optimization,1273,"The only thing I see fixable (and not breaking existing use cases) is the case for returning integer types. Details:. - Unloading a transaction also unloads its generated code, AST, etc - that's violating a contract that existing uses rely on. - `Calc` etc return whatever cast to long, since CINT, return a reference (cast to long) for ""objects"". As you know that means the temporary must be stored until the end of the process. Bad interface, but it is what it is, and breaking the interface contract is out of question. - Memory allocated by `MachineFunctionPass` is likely the object code output of the JIT. It's a common use case to `Declare()` something and then `Calc()` say the address of a template instantiation - unloading the binary code after `Calc()` would again violate the usage contract. I believe much of this issue comes from a misunderstanding, as you point out:. > they are in fact not insulated one-offs of evaluating the code in some context. Would you like us to improve the documentation on those? So what we're left with is adding new interfaces. We are considering employing nested interpreters for that (`RDataFrame` being a main customer), but due to person power constraints that won't happen in 2021. I'll let you know once I implemented the optimization for integer returns - thanks for reporting that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:957,testability,context,context,957,"The only thing I see fixable (and not breaking existing use cases) is the case for returning integer types. Details:. - Unloading a transaction also unloads its generated code, AST, etc - that's violating a contract that existing uses rely on. - `Calc` etc return whatever cast to long, since CINT, return a reference (cast to long) for ""objects"". As you know that means the temporary must be stored until the end of the process. Bad interface, but it is what it is, and breaking the interface contract is out of question. - Memory allocated by `MachineFunctionPass` is likely the object code output of the JIT. It's a common use case to `Declare()` something and then `Calc()` say the address of a template instantiation - unloading the binary code after `Calc()` would again violate the usage contract. I believe much of this issue comes from a misunderstanding, as you point out:. > they are in fact not insulated one-offs of evaluating the code in some context. Would you like us to improve the documentation on those? So what we're left with is adding new interfaces. We are considering employing nested interpreters for that (`RDataFrame` being a main customer), but due to person power constraints that won't happen in 2021. I'll let you know once I implemented the optimization for integer returns - thanks for reporting that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:525,usability,Memor,Memory,525,"The only thing I see fixable (and not breaking existing use cases) is the case for returning integer types. Details:. - Unloading a transaction also unloads its generated code, AST, etc - that's violating a contract that existing uses rely on. - `Calc` etc return whatever cast to long, since CINT, return a reference (cast to long) for ""objects"". As you know that means the temporary must be stored until the end of the process. Bad interface, but it is what it is, and breaking the interface contract is out of question. - Memory allocated by `MachineFunctionPass` is likely the object code output of the JIT. It's a common use case to `Declare()` something and then `Calc()` say the address of a template instantiation - unloading the binary code after `Calc()` would again violate the usage contract. I believe much of this issue comes from a misunderstanding, as you point out:. > they are in fact not insulated one-offs of evaluating the code in some context. Would you like us to improve the documentation on those? So what we're left with is adding new interfaces. We are considering employing nested interpreters for that (`RDataFrame` being a main customer), but due to person power constraints that won't happen in 2021. I'll let you know once I implemented the optimization for integer returns - thanks for reporting that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:999,usability,document,documentation,999,"The only thing I see fixable (and not breaking existing use cases) is the case for returning integer types. Details:. - Unloading a transaction also unloads its generated code, AST, etc - that's violating a contract that existing uses rely on. - `Calc` etc return whatever cast to long, since CINT, return a reference (cast to long) for ""objects"". As you know that means the temporary must be stored until the end of the process. Bad interface, but it is what it is, and breaking the interface contract is out of question. - Memory allocated by `MachineFunctionPass` is likely the object code output of the JIT. It's a common use case to `Declare()` something and then `Calc()` say the address of a template instantiation - unloading the binary code after `Calc()` would again violate the usage contract. I believe much of this issue comes from a misunderstanding, as you point out:. > they are in fact not insulated one-offs of evaluating the code in some context. Would you like us to improve the documentation on those? So what we're left with is adding new interfaces. We are considering employing nested interpreters for that (`RDataFrame` being a main customer), but due to person power constraints that won't happen in 2021. I'll let you know once I implemented the optimization for integer returns - thanks for reporting that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:1158,usability,custom,customer,1158,"The only thing I see fixable (and not breaking existing use cases) is the case for returning integer types. Details:. - Unloading a transaction also unloads its generated code, AST, etc - that's violating a contract that existing uses rely on. - `Calc` etc return whatever cast to long, since CINT, return a reference (cast to long) for ""objects"". As you know that means the temporary must be stored until the end of the process. Bad interface, but it is what it is, and breaking the interface contract is out of question. - Memory allocated by `MachineFunctionPass` is likely the object code output of the JIT. It's a common use case to `Declare()` something and then `Calc()` say the address of a template instantiation - unloading the binary code after `Calc()` would again violate the usage contract. I believe much of this issue comes from a misunderstanding, as you point out:. > they are in fact not insulated one-offs of evaluating the code in some context. Would you like us to improve the documentation on those? So what we're left with is adding new interfaces. We are considering employing nested interpreters for that (`RDataFrame` being a main customer), but due to person power constraints that won't happen in 2021. I'll let you know once I implemented the optimization for integer returns - thanks for reporting that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:1180,usability,person,person,1180,"The only thing I see fixable (and not breaking existing use cases) is the case for returning integer types. Details:. - Unloading a transaction also unloads its generated code, AST, etc - that's violating a contract that existing uses rely on. - `Calc` etc return whatever cast to long, since CINT, return a reference (cast to long) for ""objects"". As you know that means the temporary must be stored until the end of the process. Bad interface, but it is what it is, and breaking the interface contract is out of question. - Memory allocated by `MachineFunctionPass` is likely the object code output of the JIT. It's a common use case to `Declare()` something and then `Calc()` say the address of a template instantiation - unloading the binary code after `Calc()` would again violate the usage contract. I believe much of this issue comes from a misunderstanding, as you point out:. > they are in fact not insulated one-offs of evaluating the code in some context. Would you like us to improve the documentation on those? So what we're left with is adding new interfaces. We are considering employing nested interpreters for that (`RDataFrame` being a main customer), but due to person power constraints that won't happen in 2021. I'll let you know once I implemented the optimization for integer returns - thanks for reporting that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:158,deployability,fail,failed,158,"A new interface is perfectly fine. Right now, there is no way to run even an expression with zero side effects without leaking. But as to your first point, a failed transaction (such as the lookup of a type or function that does not exist) also leaks, and is even more common. Such a transaction should, by design, not have any side effects. These leaks affect any PyROOT user and it would not surprise me if ROOT I/O is hit by this, too, given the double lookups everywhere, with and without `std::`, with one of the two regularly failing. As for your second point, that interface is broken on Windows 64b already and simply changing the return to `intptr_t` has a massive ripple effect, so if that platform is ever in the cards, you're going to have to deal with it anyway. Plus, a trivial augmentation would be to take a pointer to a value wrapper, which by default is `nullptr`. If given, return the value there, if not, keep the old behavior. That won't break any code, but will allow current clients to stop part of the leaking. My preference would be to have such a new interface in Cling anyway, not on `TInterpreter`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:532,deployability,fail,failing,532,"A new interface is perfectly fine. Right now, there is no way to run even an expression with zero side effects without leaking. But as to your first point, a failed transaction (such as the lookup of a type or function that does not exist) also leaks, and is even more common. Such a transaction should, by design, not have any side effects. These leaks affect any PyROOT user and it would not surprise me if ROOT I/O is hit by this, too, given the double lookups everywhere, with and without `std::`, with one of the two regularly failing. As for your second point, that interface is broken on Windows 64b already and simply changing the return to `intptr_t` has a massive ripple effect, so if that platform is ever in the cards, you're going to have to deal with it anyway. Plus, a trivial augmentation would be to take a pointer to a value wrapper, which by default is `nullptr`. If given, return the value there, if not, keep the old behavior. That won't break any code, but will allow current clients to stop part of the leaking. My preference would be to have such a new interface in Cling anyway, not on `TInterpreter`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:990,energy efficiency,current,current,990,"A new interface is perfectly fine. Right now, there is no way to run even an expression with zero side effects without leaking. But as to your first point, a failed transaction (such as the lookup of a type or function that does not exist) also leaks, and is even more common. Such a transaction should, by design, not have any side effects. These leaks affect any PyROOT user and it would not surprise me if ROOT I/O is hit by this, too, given the double lookups everywhere, with and without `std::`, with one of the two regularly failing. As for your second point, that interface is broken on Windows 64b already and simply changing the return to `intptr_t` has a massive ripple effect, so if that platform is ever in the cards, you're going to have to deal with it anyway. Plus, a trivial augmentation would be to take a pointer to a value wrapper, which by default is `nullptr`. If given, return the value there, if not, keep the old behavior. That won't break any code, but will allow current clients to stop part of the leaking. My preference would be to have such a new interface in Cling anyway, not on `TInterpreter`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:6,integrability,interfac,interface,6,"A new interface is perfectly fine. Right now, there is no way to run even an expression with zero side effects without leaking. But as to your first point, a failed transaction (such as the lookup of a type or function that does not exist) also leaks, and is even more common. Such a transaction should, by design, not have any side effects. These leaks affect any PyROOT user and it would not surprise me if ROOT I/O is hit by this, too, given the double lookups everywhere, with and without `std::`, with one of the two regularly failing. As for your second point, that interface is broken on Windows 64b already and simply changing the return to `intptr_t` has a massive ripple effect, so if that platform is ever in the cards, you're going to have to deal with it anyway. Plus, a trivial augmentation would be to take a pointer to a value wrapper, which by default is `nullptr`. If given, return the value there, if not, keep the old behavior. That won't break any code, but will allow current clients to stop part of the leaking. My preference would be to have such a new interface in Cling anyway, not on `TInterpreter`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:572,integrability,interfac,interface,572,"A new interface is perfectly fine. Right now, there is no way to run even an expression with zero side effects without leaking. But as to your first point, a failed transaction (such as the lookup of a type or function that does not exist) also leaks, and is even more common. Such a transaction should, by design, not have any side effects. These leaks affect any PyROOT user and it would not surprise me if ROOT I/O is hit by this, too, given the double lookups everywhere, with and without `std::`, with one of the two regularly failing. As for your second point, that interface is broken on Windows 64b already and simply changing the return to `intptr_t` has a massive ripple effect, so if that platform is ever in the cards, you're going to have to deal with it anyway. Plus, a trivial augmentation would be to take a pointer to a value wrapper, which by default is `nullptr`. If given, return the value there, if not, keep the old behavior. That won't break any code, but will allow current clients to stop part of the leaking. My preference would be to have such a new interface in Cling anyway, not on `TInterpreter`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:843,integrability,wrap,wrapper,843,"A new interface is perfectly fine. Right now, there is no way to run even an expression with zero side effects without leaking. But as to your first point, a failed transaction (such as the lookup of a type or function that does not exist) also leaks, and is even more common. Such a transaction should, by design, not have any side effects. These leaks affect any PyROOT user and it would not surprise me if ROOT I/O is hit by this, too, given the double lookups everywhere, with and without `std::`, with one of the two regularly failing. As for your second point, that interface is broken on Windows 64b already and simply changing the return to `intptr_t` has a massive ripple effect, so if that platform is ever in the cards, you're going to have to deal with it anyway. Plus, a trivial augmentation would be to take a pointer to a value wrapper, which by default is `nullptr`. If given, return the value there, if not, keep the old behavior. That won't break any code, but will allow current clients to stop part of the leaking. My preference would be to have such a new interface in Cling anyway, not on `TInterpreter`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:1077,integrability,interfac,interface,1077,"A new interface is perfectly fine. Right now, there is no way to run even an expression with zero side effects without leaking. But as to your first point, a failed transaction (such as the lookup of a type or function that does not exist) also leaks, and is even more common. Such a transaction should, by design, not have any side effects. These leaks affect any PyROOT user and it would not surprise me if ROOT I/O is hit by this, too, given the double lookups everywhere, with and without `std::`, with one of the two regularly failing. As for your second point, that interface is broken on Windows 64b already and simply changing the return to `intptr_t` has a massive ripple effect, so if that platform is ever in the cards, you're going to have to deal with it anyway. Plus, a trivial augmentation would be to take a pointer to a value wrapper, which by default is `nullptr`. If given, return the value there, if not, keep the old behavior. That won't break any code, but will allow current clients to stop part of the leaking. My preference would be to have such a new interface in Cling anyway, not on `TInterpreter`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:6,interoperability,interfac,interface,6,"A new interface is perfectly fine. Right now, there is no way to run even an expression with zero side effects without leaking. But as to your first point, a failed transaction (such as the lookup of a type or function that does not exist) also leaks, and is even more common. Such a transaction should, by design, not have any side effects. These leaks affect any PyROOT user and it would not surprise me if ROOT I/O is hit by this, too, given the double lookups everywhere, with and without `std::`, with one of the two regularly failing. As for your second point, that interface is broken on Windows 64b already and simply changing the return to `intptr_t` has a massive ripple effect, so if that platform is ever in the cards, you're going to have to deal with it anyway. Plus, a trivial augmentation would be to take a pointer to a value wrapper, which by default is `nullptr`. If given, return the value there, if not, keep the old behavior. That won't break any code, but will allow current clients to stop part of the leaking. My preference would be to have such a new interface in Cling anyway, not on `TInterpreter`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:572,interoperability,interfac,interface,572,"A new interface is perfectly fine. Right now, there is no way to run even an expression with zero side effects without leaking. But as to your first point, a failed transaction (such as the lookup of a type or function that does not exist) also leaks, and is even more common. Such a transaction should, by design, not have any side effects. These leaks affect any PyROOT user and it would not surprise me if ROOT I/O is hit by this, too, given the double lookups everywhere, with and without `std::`, with one of the two regularly failing. As for your second point, that interface is broken on Windows 64b already and simply changing the return to `intptr_t` has a massive ripple effect, so if that platform is ever in the cards, you're going to have to deal with it anyway. Plus, a trivial augmentation would be to take a pointer to a value wrapper, which by default is `nullptr`. If given, return the value there, if not, keep the old behavior. That won't break any code, but will allow current clients to stop part of the leaking. My preference would be to have such a new interface in Cling anyway, not on `TInterpreter`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:700,interoperability,platform,platform,700,"A new interface is perfectly fine. Right now, there is no way to run even an expression with zero side effects without leaking. But as to your first point, a failed transaction (such as the lookup of a type or function that does not exist) also leaks, and is even more common. Such a transaction should, by design, not have any side effects. These leaks affect any PyROOT user and it would not surprise me if ROOT I/O is hit by this, too, given the double lookups everywhere, with and without `std::`, with one of the two regularly failing. As for your second point, that interface is broken on Windows 64b already and simply changing the return to `intptr_t` has a massive ripple effect, so if that platform is ever in the cards, you're going to have to deal with it anyway. Plus, a trivial augmentation would be to take a pointer to a value wrapper, which by default is `nullptr`. If given, return the value there, if not, keep the old behavior. That won't break any code, but will allow current clients to stop part of the leaking. My preference would be to have such a new interface in Cling anyway, not on `TInterpreter`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:843,interoperability,wrapper,wrapper,843,"A new interface is perfectly fine. Right now, there is no way to run even an expression with zero side effects without leaking. But as to your first point, a failed transaction (such as the lookup of a type or function that does not exist) also leaks, and is even more common. Such a transaction should, by design, not have any side effects. These leaks affect any PyROOT user and it would not surprise me if ROOT I/O is hit by this, too, given the double lookups everywhere, with and without `std::`, with one of the two regularly failing. As for your second point, that interface is broken on Windows 64b already and simply changing the return to `intptr_t` has a massive ripple effect, so if that platform is ever in the cards, you're going to have to deal with it anyway. Plus, a trivial augmentation would be to take a pointer to a value wrapper, which by default is `nullptr`. If given, return the value there, if not, keep the old behavior. That won't break any code, but will allow current clients to stop part of the leaking. My preference would be to have such a new interface in Cling anyway, not on `TInterpreter`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:1077,interoperability,interfac,interface,1077,"A new interface is perfectly fine. Right now, there is no way to run even an expression with zero side effects without leaking. But as to your first point, a failed transaction (such as the lookup of a type or function that does not exist) also leaks, and is even more common. Such a transaction should, by design, not have any side effects. These leaks affect any PyROOT user and it would not surprise me if ROOT I/O is hit by this, too, given the double lookups everywhere, with and without `std::`, with one of the two regularly failing. As for your second point, that interface is broken on Windows 64b already and simply changing the return to `intptr_t` has a massive ripple effect, so if that platform is ever in the cards, you're going to have to deal with it anyway. Plus, a trivial augmentation would be to take a pointer to a value wrapper, which by default is `nullptr`. If given, return the value there, if not, keep the old behavior. That won't break any code, but will allow current clients to stop part of the leaking. My preference would be to have such a new interface in Cling anyway, not on `TInterpreter`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:6,modifiability,interfac,interface,6,"A new interface is perfectly fine. Right now, there is no way to run even an expression with zero side effects without leaking. But as to your first point, a failed transaction (such as the lookup of a type or function that does not exist) also leaks, and is even more common. Such a transaction should, by design, not have any side effects. These leaks affect any PyROOT user and it would not surprise me if ROOT I/O is hit by this, too, given the double lookups everywhere, with and without `std::`, with one of the two regularly failing. As for your second point, that interface is broken on Windows 64b already and simply changing the return to `intptr_t` has a massive ripple effect, so if that platform is ever in the cards, you're going to have to deal with it anyway. Plus, a trivial augmentation would be to take a pointer to a value wrapper, which by default is `nullptr`. If given, return the value there, if not, keep the old behavior. That won't break any code, but will allow current clients to stop part of the leaking. My preference would be to have such a new interface in Cling anyway, not on `TInterpreter`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:572,modifiability,interfac,interface,572,"A new interface is perfectly fine. Right now, there is no way to run even an expression with zero side effects without leaking. But as to your first point, a failed transaction (such as the lookup of a type or function that does not exist) also leaks, and is even more common. Such a transaction should, by design, not have any side effects. These leaks affect any PyROOT user and it would not surprise me if ROOT I/O is hit by this, too, given the double lookups everywhere, with and without `std::`, with one of the two regularly failing. As for your second point, that interface is broken on Windows 64b already and simply changing the return to `intptr_t` has a massive ripple effect, so if that platform is ever in the cards, you're going to have to deal with it anyway. Plus, a trivial augmentation would be to take a pointer to a value wrapper, which by default is `nullptr`. If given, return the value there, if not, keep the old behavior. That won't break any code, but will allow current clients to stop part of the leaking. My preference would be to have such a new interface in Cling anyway, not on `TInterpreter`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:1077,modifiability,interfac,interface,1077,"A new interface is perfectly fine. Right now, there is no way to run even an expression with zero side effects without leaking. But as to your first point, a failed transaction (such as the lookup of a type or function that does not exist) also leaks, and is even more common. Such a transaction should, by design, not have any side effects. These leaks affect any PyROOT user and it would not surprise me if ROOT I/O is hit by this, too, given the double lookups everywhere, with and without `std::`, with one of the two regularly failing. As for your second point, that interface is broken on Windows 64b already and simply changing the return to `intptr_t` has a massive ripple effect, so if that platform is ever in the cards, you're going to have to deal with it anyway. Plus, a trivial augmentation would be to take a pointer to a value wrapper, which by default is `nullptr`. If given, return the value there, if not, keep the old behavior. That won't break any code, but will allow current clients to stop part of the leaking. My preference would be to have such a new interface in Cling anyway, not on `TInterpreter`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:414,performance,I/O,I/O,414,"A new interface is perfectly fine. Right now, there is no way to run even an expression with zero side effects without leaking. But as to your first point, a failed transaction (such as the lookup of a type or function that does not exist) also leaks, and is even more common. Such a transaction should, by design, not have any side effects. These leaks affect any PyROOT user and it would not surprise me if ROOT I/O is hit by this, too, given the double lookups everywhere, with and without `std::`, with one of the two regularly failing. As for your second point, that interface is broken on Windows 64b already and simply changing the return to `intptr_t` has a massive ripple effect, so if that platform is ever in the cards, you're going to have to deal with it anyway. Plus, a trivial augmentation would be to take a pointer to a value wrapper, which by default is `nullptr`. If given, return the value there, if not, keep the old behavior. That won't break any code, but will allow current clients to stop part of the leaking. My preference would be to have such a new interface in Cling anyway, not on `TInterpreter`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:158,reliability,fail,failed,158,"A new interface is perfectly fine. Right now, there is no way to run even an expression with zero side effects without leaking. But as to your first point, a failed transaction (such as the lookup of a type or function that does not exist) also leaks, and is even more common. Such a transaction should, by design, not have any side effects. These leaks affect any PyROOT user and it would not surprise me if ROOT I/O is hit by this, too, given the double lookups everywhere, with and without `std::`, with one of the two regularly failing. As for your second point, that interface is broken on Windows 64b already and simply changing the return to `intptr_t` has a massive ripple effect, so if that platform is ever in the cards, you're going to have to deal with it anyway. Plus, a trivial augmentation would be to take a pointer to a value wrapper, which by default is `nullptr`. If given, return the value there, if not, keep the old behavior. That won't break any code, but will allow current clients to stop part of the leaking. My preference would be to have such a new interface in Cling anyway, not on `TInterpreter`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:224,reliability,doe,does,224,"A new interface is perfectly fine. Right now, there is no way to run even an expression with zero side effects without leaking. But as to your first point, a failed transaction (such as the lookup of a type or function that does not exist) also leaks, and is even more common. Such a transaction should, by design, not have any side effects. These leaks affect any PyROOT user and it would not surprise me if ROOT I/O is hit by this, too, given the double lookups everywhere, with and without `std::`, with one of the two regularly failing. As for your second point, that interface is broken on Windows 64b already and simply changing the return to `intptr_t` has a massive ripple effect, so if that platform is ever in the cards, you're going to have to deal with it anyway. Plus, a trivial augmentation would be to take a pointer to a value wrapper, which by default is `nullptr`. If given, return the value there, if not, keep the old behavior. That won't break any code, but will allow current clients to stop part of the leaking. My preference would be to have such a new interface in Cling anyway, not on `TInterpreter`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:532,reliability,fail,failing,532,"A new interface is perfectly fine. Right now, there is no way to run even an expression with zero side effects without leaking. But as to your first point, a failed transaction (such as the lookup of a type or function that does not exist) also leaks, and is even more common. Such a transaction should, by design, not have any side effects. These leaks affect any PyROOT user and it would not surprise me if ROOT I/O is hit by this, too, given the double lookups everywhere, with and without `std::`, with one of the two regularly failing. As for your second point, that interface is broken on Windows 64b already and simply changing the return to `intptr_t` has a massive ripple effect, so if that platform is ever in the cards, you're going to have to deal with it anyway. Plus, a trivial augmentation would be to take a pointer to a value wrapper, which by default is `nullptr`. If given, return the value there, if not, keep the old behavior. That won't break any code, but will allow current clients to stop part of the leaking. My preference would be to have such a new interface in Cling anyway, not on `TInterpreter`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:619,testability,simpl,simply,619,"A new interface is perfectly fine. Right now, there is no way to run even an expression with zero side effects without leaking. But as to your first point, a failed transaction (such as the lookup of a type or function that does not exist) also leaks, and is even more common. Such a transaction should, by design, not have any side effects. These leaks affect any PyROOT user and it would not surprise me if ROOT I/O is hit by this, too, given the double lookups everywhere, with and without `std::`, with one of the two regularly failing. As for your second point, that interface is broken on Windows 64b already and simply changing the return to `intptr_t` has a massive ripple effect, so if that platform is ever in the cards, you're going to have to deal with it anyway. Plus, a trivial augmentation would be to take a pointer to a value wrapper, which by default is `nullptr`. If given, return the value there, if not, keep the old behavior. That won't break any code, but will allow current clients to stop part of the leaking. My preference would be to have such a new interface in Cling anyway, not on `TInterpreter`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:372,usability,user,user,372,"A new interface is perfectly fine. Right now, there is no way to run even an expression with zero side effects without leaking. But as to your first point, a failed transaction (such as the lookup of a type or function that does not exist) also leaks, and is even more common. Such a transaction should, by design, not have any side effects. These leaks affect any PyROOT user and it would not surprise me if ROOT I/O is hit by this, too, given the double lookups everywhere, with and without `std::`, with one of the two regularly failing. As for your second point, that interface is broken on Windows 64b already and simply changing the return to `intptr_t` has a massive ripple effect, so if that platform is ever in the cards, you're going to have to deal with it anyway. Plus, a trivial augmentation would be to take a pointer to a value wrapper, which by default is `nullptr`. If given, return the value there, if not, keep the old behavior. That won't break any code, but will allow current clients to stop part of the leaking. My preference would be to have such a new interface in Cling anyway, not on `TInterpreter`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:619,usability,simpl,simply,619,"A new interface is perfectly fine. Right now, there is no way to run even an expression with zero side effects without leaking. But as to your first point, a failed transaction (such as the lookup of a type or function that does not exist) also leaks, and is even more common. Such a transaction should, by design, not have any side effects. These leaks affect any PyROOT user and it would not surprise me if ROOT I/O is hit by this, too, given the double lookups everywhere, with and without `std::`, with one of the two regularly failing. As for your second point, that interface is broken on Windows 64b already and simply changing the return to `intptr_t` has a massive ripple effect, so if that platform is ever in the cards, you're going to have to deal with it anyway. Plus, a trivial augmentation would be to take a pointer to a value wrapper, which by default is `nullptr`. If given, return the value there, if not, keep the old behavior. That won't break any code, but will allow current clients to stop part of the leaking. My preference would be to have such a new interface in Cling anyway, not on `TInterpreter`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:938,usability,behavi,behavior,938,"A new interface is perfectly fine. Right now, there is no way to run even an expression with zero side effects without leaking. But as to your first point, a failed transaction (such as the lookup of a type or function that does not exist) also leaks, and is even more common. Such a transaction should, by design, not have any side effects. These leaks affect any PyROOT user and it would not surprise me if ROOT I/O is hit by this, too, given the double lookups everywhere, with and without `std::`, with one of the two regularly failing. As for your second point, that interface is broken on Windows 64b already and simply changing the return to `intptr_t` has a massive ripple effect, so if that platform is ever in the cards, you're going to have to deal with it anyway. Plus, a trivial augmentation would be to take a pointer to a value wrapper, which by default is `nullptr`. If given, return the value there, if not, keep the old behavior. That won't break any code, but will allow current clients to stop part of the leaking. My preference would be to have such a new interface in Cling anyway, not on `TInterpreter`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:1009,usability,stop,stop,1009,"A new interface is perfectly fine. Right now, there is no way to run even an expression with zero side effects without leaking. But as to your first point, a failed transaction (such as the lookup of a type or function that does not exist) also leaks, and is even more common. Such a transaction should, by design, not have any side effects. These leaks affect any PyROOT user and it would not surprise me if ROOT I/O is hit by this, too, given the double lookups everywhere, with and without `std::`, with one of the two regularly failing. As for your second point, that interface is broken on Windows 64b already and simply changing the return to `intptr_t` has a massive ripple effect, so if that platform is ever in the cards, you're going to have to deal with it anyway. Plus, a trivial augmentation would be to take a pointer to a value wrapper, which by default is `nullptr`. If given, return the value there, if not, keep the old behavior. That won't break any code, but will allow current clients to stop part of the leaking. My preference would be to have such a new interface in Cling anyway, not on `TInterpreter`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:1038,usability,prefer,preference,1038,"A new interface is perfectly fine. Right now, there is no way to run even an expression with zero side effects without leaking. But as to your first point, a failed transaction (such as the lookup of a type or function that does not exist) also leaks, and is even more common. Such a transaction should, by design, not have any side effects. These leaks affect any PyROOT user and it would not surprise me if ROOT I/O is hit by this, too, given the double lookups everywhere, with and without `std::`, with one of the two regularly failing. As for your second point, that interface is broken on Windows 64b already and simply changing the return to `intptr_t` has a massive ripple effect, so if that platform is ever in the cards, you're going to have to deal with it anyway. Plus, a trivial augmentation would be to take a pointer to a value wrapper, which by default is `nullptr`. If given, return the value there, if not, keep the old behavior. That won't break any code, but will allow current clients to stop part of the leaking. My preference would be to have such a new interface in Cling anyway, not on `TInterpreter`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:366,deployability,depend,depends,366,"> run even an expression with zero side effects without leaking. Indeed, see my comment on the child interpreter. clang is a compiler, cling adds to its translation unit - it's growing, and even `42` is source code that clang wants to remain in memory, corresponds to AST nodes, and object code that's emitted by the JIT. So whether something is ""zero side effects"" depends on who you talk to :-). > I'll let you know once I implemented the optimization for integer returns - thanks for reporting that! That's actually already there, see https://github.com/root-project/root/blob/34fc1dcd8c12b49349c3e54c033effdb6f6354f0/core/metacling/src/TCling.cxx#L7636. > a failed transaction (such as the lookup of a type or function that does not exist) also leaks. I bet that's the memory buffer and the bump allocator in the clang AST: for invalid code we don't codegen (so no leak there), the transaction gets recycled (no leak there either), and nothing gets run (no values leaking). I don't have plans to change the allocator for the clang AST (if that's at all ""possible"" i.e. ""reasonably feasible""). @vgvassilev do you think that's something you might be interested in? With the AST nodes sticking around we also need the memory buffer that they point to (`SourceLocation`-wise). > a trivial augmentation would be to take a pointer to a value wrapper. We have `TCling::Evaluate(const char* code, TInterpreterValue& value)`. Is that enough for you, or what is missing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:662,deployability,fail,failed,662,"> run even an expression with zero side effects without leaking. Indeed, see my comment on the child interpreter. clang is a compiler, cling adds to its translation unit - it's growing, and even `42` is source code that clang wants to remain in memory, corresponds to AST nodes, and object code that's emitted by the JIT. So whether something is ""zero side effects"" depends on who you talk to :-). > I'll let you know once I implemented the optimization for integer returns - thanks for reporting that! That's actually already there, see https://github.com/root-project/root/blob/34fc1dcd8c12b49349c3e54c033effdb6f6354f0/core/metacling/src/TCling.cxx#L7636. > a failed transaction (such as the lookup of a type or function that does not exist) also leaks. I bet that's the memory buffer and the bump allocator in the clang AST: for invalid code we don't codegen (so no leak there), the transaction gets recycled (no leak there either), and nothing gets run (no values leaking). I don't have plans to change the allocator for the clang AST (if that's at all ""possible"" i.e. ""reasonably feasible""). @vgvassilev do you think that's something you might be interested in? With the AST nodes sticking around we also need the memory buffer that they point to (`SourceLocation`-wise). > a trivial augmentation would be to take a pointer to a value wrapper. We have `TCling::Evaluate(const char* code, TInterpreterValue& value)`. Is that enough for you, or what is missing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:441,energy efficiency,optim,optimization,441,"> run even an expression with zero side effects without leaking. Indeed, see my comment on the child interpreter. clang is a compiler, cling adds to its translation unit - it's growing, and even `42` is source code that clang wants to remain in memory, corresponds to AST nodes, and object code that's emitted by the JIT. So whether something is ""zero side effects"" depends on who you talk to :-). > I'll let you know once I implemented the optimization for integer returns - thanks for reporting that! That's actually already there, see https://github.com/root-project/root/blob/34fc1dcd8c12b49349c3e54c033effdb6f6354f0/core/metacling/src/TCling.cxx#L7636. > a failed transaction (such as the lookup of a type or function that does not exist) also leaks. I bet that's the memory buffer and the bump allocator in the clang AST: for invalid code we don't codegen (so no leak there), the transaction gets recycled (no leak there either), and nothing gets run (no values leaking). I don't have plans to change the allocator for the clang AST (if that's at all ""possible"" i.e. ""reasonably feasible""). @vgvassilev do you think that's something you might be interested in? With the AST nodes sticking around we also need the memory buffer that they point to (`SourceLocation`-wise). > a trivial augmentation would be to take a pointer to a value wrapper. We have `TCling::Evaluate(const char* code, TInterpreterValue& value)`. Is that enough for you, or what is missing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:621,energy efficiency,core,core,621,"> run even an expression with zero side effects without leaking. Indeed, see my comment on the child interpreter. clang is a compiler, cling adds to its translation unit - it's growing, and even `42` is source code that clang wants to remain in memory, corresponds to AST nodes, and object code that's emitted by the JIT. So whether something is ""zero side effects"" depends on who you talk to :-). > I'll let you know once I implemented the optimization for integer returns - thanks for reporting that! That's actually already there, see https://github.com/root-project/root/blob/34fc1dcd8c12b49349c3e54c033effdb6f6354f0/core/metacling/src/TCling.cxx#L7636. > a failed transaction (such as the lookup of a type or function that does not exist) also leaks. I bet that's the memory buffer and the bump allocator in the clang AST: for invalid code we don't codegen (so no leak there), the transaction gets recycled (no leak there either), and nothing gets run (no values leaking). I don't have plans to change the allocator for the clang AST (if that's at all ""possible"" i.e. ""reasonably feasible""). @vgvassilev do you think that's something you might be interested in? With the AST nodes sticking around we also need the memory buffer that they point to (`SourceLocation`-wise). > a trivial augmentation would be to take a pointer to a value wrapper. We have `TCling::Evaluate(const char* code, TInterpreterValue& value)`. Is that enough for you, or what is missing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:800,energy efficiency,alloc,allocator,800,"> run even an expression with zero side effects without leaking. Indeed, see my comment on the child interpreter. clang is a compiler, cling adds to its translation unit - it's growing, and even `42` is source code that clang wants to remain in memory, corresponds to AST nodes, and object code that's emitted by the JIT. So whether something is ""zero side effects"" depends on who you talk to :-). > I'll let you know once I implemented the optimization for integer returns - thanks for reporting that! That's actually already there, see https://github.com/root-project/root/blob/34fc1dcd8c12b49349c3e54c033effdb6f6354f0/core/metacling/src/TCling.cxx#L7636. > a failed transaction (such as the lookup of a type or function that does not exist) also leaks. I bet that's the memory buffer and the bump allocator in the clang AST: for invalid code we don't codegen (so no leak there), the transaction gets recycled (no leak there either), and nothing gets run (no values leaking). I don't have plans to change the allocator for the clang AST (if that's at all ""possible"" i.e. ""reasonably feasible""). @vgvassilev do you think that's something you might be interested in? With the AST nodes sticking around we also need the memory buffer that they point to (`SourceLocation`-wise). > a trivial augmentation would be to take a pointer to a value wrapper. We have `TCling::Evaluate(const char* code, TInterpreterValue& value)`. Is that enough for you, or what is missing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:1011,energy efficiency,alloc,allocator,1011,"> run even an expression with zero side effects without leaking. Indeed, see my comment on the child interpreter. clang is a compiler, cling adds to its translation unit - it's growing, and even `42` is source code that clang wants to remain in memory, corresponds to AST nodes, and object code that's emitted by the JIT. So whether something is ""zero side effects"" depends on who you talk to :-). > I'll let you know once I implemented the optimization for integer returns - thanks for reporting that! That's actually already there, see https://github.com/root-project/root/blob/34fc1dcd8c12b49349c3e54c033effdb6f6354f0/core/metacling/src/TCling.cxx#L7636. > a failed transaction (such as the lookup of a type or function that does not exist) also leaks. I bet that's the memory buffer and the bump allocator in the clang AST: for invalid code we don't codegen (so no leak there), the transaction gets recycled (no leak there either), and nothing gets run (no values leaking). I don't have plans to change the allocator for the clang AST (if that's at all ""possible"" i.e. ""reasonably feasible""). @vgvassilev do you think that's something you might be interested in? With the AST nodes sticking around we also need the memory buffer that they point to (`SourceLocation`-wise). > a trivial augmentation would be to take a pointer to a value wrapper. We have `TCling::Evaluate(const char* code, TInterpreterValue& value)`. Is that enough for you, or what is missing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:153,integrability,translat,translation,153,"> run even an expression with zero side effects without leaking. Indeed, see my comment on the child interpreter. clang is a compiler, cling adds to its translation unit - it's growing, and even `42` is source code that clang wants to remain in memory, corresponds to AST nodes, and object code that's emitted by the JIT. So whether something is ""zero side effects"" depends on who you talk to :-). > I'll let you know once I implemented the optimization for integer returns - thanks for reporting that! That's actually already there, see https://github.com/root-project/root/blob/34fc1dcd8c12b49349c3e54c033effdb6f6354f0/core/metacling/src/TCling.cxx#L7636. > a failed transaction (such as the lookup of a type or function that does not exist) also leaks. I bet that's the memory buffer and the bump allocator in the clang AST: for invalid code we don't codegen (so no leak there), the transaction gets recycled (no leak there either), and nothing gets run (no values leaking). I don't have plans to change the allocator for the clang AST (if that's at all ""possible"" i.e. ""reasonably feasible""). @vgvassilev do you think that's something you might be interested in? With the AST nodes sticking around we also need the memory buffer that they point to (`SourceLocation`-wise). > a trivial augmentation would be to take a pointer to a value wrapper. We have `TCling::Evaluate(const char* code, TInterpreterValue& value)`. Is that enough for you, or what is missing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:366,integrability,depend,depends,366,"> run even an expression with zero side effects without leaking. Indeed, see my comment on the child interpreter. clang is a compiler, cling adds to its translation unit - it's growing, and even `42` is source code that clang wants to remain in memory, corresponds to AST nodes, and object code that's emitted by the JIT. So whether something is ""zero side effects"" depends on who you talk to :-). > I'll let you know once I implemented the optimization for integer returns - thanks for reporting that! That's actually already there, see https://github.com/root-project/root/blob/34fc1dcd8c12b49349c3e54c033effdb6f6354f0/core/metacling/src/TCling.cxx#L7636. > a failed transaction (such as the lookup of a type or function that does not exist) also leaks. I bet that's the memory buffer and the bump allocator in the clang AST: for invalid code we don't codegen (so no leak there), the transaction gets recycled (no leak there either), and nothing gets run (no values leaking). I don't have plans to change the allocator for the clang AST (if that's at all ""possible"" i.e. ""reasonably feasible""). @vgvassilev do you think that's something you might be interested in? With the AST nodes sticking around we also need the memory buffer that they point to (`SourceLocation`-wise). > a trivial augmentation would be to take a pointer to a value wrapper. We have `TCling::Evaluate(const char* code, TInterpreterValue& value)`. Is that enough for you, or what is missing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:780,integrability,buffer,buffer,780,"> run even an expression with zero side effects without leaking. Indeed, see my comment on the child interpreter. clang is a compiler, cling adds to its translation unit - it's growing, and even `42` is source code that clang wants to remain in memory, corresponds to AST nodes, and object code that's emitted by the JIT. So whether something is ""zero side effects"" depends on who you talk to :-). > I'll let you know once I implemented the optimization for integer returns - thanks for reporting that! That's actually already there, see https://github.com/root-project/root/blob/34fc1dcd8c12b49349c3e54c033effdb6f6354f0/core/metacling/src/TCling.cxx#L7636. > a failed transaction (such as the lookup of a type or function that does not exist) also leaks. I bet that's the memory buffer and the bump allocator in the clang AST: for invalid code we don't codegen (so no leak there), the transaction gets recycled (no leak there either), and nothing gets run (no values leaking). I don't have plans to change the allocator for the clang AST (if that's at all ""possible"" i.e. ""reasonably feasible""). @vgvassilev do you think that's something you might be interested in? With the AST nodes sticking around we also need the memory buffer that they point to (`SourceLocation`-wise). > a trivial augmentation would be to take a pointer to a value wrapper. We have `TCling::Evaluate(const char* code, TInterpreterValue& value)`. Is that enough for you, or what is missing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:1226,integrability,buffer,buffer,1226,"> run even an expression with zero side effects without leaking. Indeed, see my comment on the child interpreter. clang is a compiler, cling adds to its translation unit - it's growing, and even `42` is source code that clang wants to remain in memory, corresponds to AST nodes, and object code that's emitted by the JIT. So whether something is ""zero side effects"" depends on who you talk to :-). > I'll let you know once I implemented the optimization for integer returns - thanks for reporting that! That's actually already there, see https://github.com/root-project/root/blob/34fc1dcd8c12b49349c3e54c033effdb6f6354f0/core/metacling/src/TCling.cxx#L7636. > a failed transaction (such as the lookup of a type or function that does not exist) also leaks. I bet that's the memory buffer and the bump allocator in the clang AST: for invalid code we don't codegen (so no leak there), the transaction gets recycled (no leak there either), and nothing gets run (no values leaking). I don't have plans to change the allocator for the clang AST (if that's at all ""possible"" i.e. ""reasonably feasible""). @vgvassilev do you think that's something you might be interested in? With the AST nodes sticking around we also need the memory buffer that they point to (`SourceLocation`-wise). > a trivial augmentation would be to take a pointer to a value wrapper. We have `TCling::Evaluate(const char* code, TInterpreterValue& value)`. Is that enough for you, or what is missing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:1340,integrability,wrap,wrapper,1340,"> run even an expression with zero side effects without leaking. Indeed, see my comment on the child interpreter. clang is a compiler, cling adds to its translation unit - it's growing, and even `42` is source code that clang wants to remain in memory, corresponds to AST nodes, and object code that's emitted by the JIT. So whether something is ""zero side effects"" depends on who you talk to :-). > I'll let you know once I implemented the optimization for integer returns - thanks for reporting that! That's actually already there, see https://github.com/root-project/root/blob/34fc1dcd8c12b49349c3e54c033effdb6f6354f0/core/metacling/src/TCling.cxx#L7636. > a failed transaction (such as the lookup of a type or function that does not exist) also leaks. I bet that's the memory buffer and the bump allocator in the clang AST: for invalid code we don't codegen (so no leak there), the transaction gets recycled (no leak there either), and nothing gets run (no values leaking). I don't have plans to change the allocator for the clang AST (if that's at all ""possible"" i.e. ""reasonably feasible""). @vgvassilev do you think that's something you might be interested in? With the AST nodes sticking around we also need the memory buffer that they point to (`SourceLocation`-wise). > a trivial augmentation would be to take a pointer to a value wrapper. We have `TCling::Evaluate(const char* code, TInterpreterValue& value)`. Is that enough for you, or what is missing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:153,interoperability,translat,translation,153,"> run even an expression with zero side effects without leaking. Indeed, see my comment on the child interpreter. clang is a compiler, cling adds to its translation unit - it's growing, and even `42` is source code that clang wants to remain in memory, corresponds to AST nodes, and object code that's emitted by the JIT. So whether something is ""zero side effects"" depends on who you talk to :-). > I'll let you know once I implemented the optimization for integer returns - thanks for reporting that! That's actually already there, see https://github.com/root-project/root/blob/34fc1dcd8c12b49349c3e54c033effdb6f6354f0/core/metacling/src/TCling.cxx#L7636. > a failed transaction (such as the lookup of a type or function that does not exist) also leaks. I bet that's the memory buffer and the bump allocator in the clang AST: for invalid code we don't codegen (so no leak there), the transaction gets recycled (no leak there either), and nothing gets run (no values leaking). I don't have plans to change the allocator for the clang AST (if that's at all ""possible"" i.e. ""reasonably feasible""). @vgvassilev do you think that's something you might be interested in? With the AST nodes sticking around we also need the memory buffer that they point to (`SourceLocation`-wise). > a trivial augmentation would be to take a pointer to a value wrapper. We have `TCling::Evaluate(const char* code, TInterpreterValue& value)`. Is that enough for you, or what is missing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:1340,interoperability,wrapper,wrapper,1340,"> run even an expression with zero side effects without leaking. Indeed, see my comment on the child interpreter. clang is a compiler, cling adds to its translation unit - it's growing, and even `42` is source code that clang wants to remain in memory, corresponds to AST nodes, and object code that's emitted by the JIT. So whether something is ""zero side effects"" depends on who you talk to :-). > I'll let you know once I implemented the optimization for integer returns - thanks for reporting that! That's actually already there, see https://github.com/root-project/root/blob/34fc1dcd8c12b49349c3e54c033effdb6f6354f0/core/metacling/src/TCling.cxx#L7636. > a failed transaction (such as the lookup of a type or function that does not exist) also leaks. I bet that's the memory buffer and the bump allocator in the clang AST: for invalid code we don't codegen (so no leak there), the transaction gets recycled (no leak there either), and nothing gets run (no values leaking). I don't have plans to change the allocator for the clang AST (if that's at all ""possible"" i.e. ""reasonably feasible""). @vgvassilev do you think that's something you might be interested in? With the AST nodes sticking around we also need the memory buffer that they point to (`SourceLocation`-wise). > a trivial augmentation would be to take a pointer to a value wrapper. We have `TCling::Evaluate(const char* code, TInterpreterValue& value)`. Is that enough for you, or what is missing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:366,modifiability,depend,depends,366,"> run even an expression with zero side effects without leaking. Indeed, see my comment on the child interpreter. clang is a compiler, cling adds to its translation unit - it's growing, and even `42` is source code that clang wants to remain in memory, corresponds to AST nodes, and object code that's emitted by the JIT. So whether something is ""zero side effects"" depends on who you talk to :-). > I'll let you know once I implemented the optimization for integer returns - thanks for reporting that! That's actually already there, see https://github.com/root-project/root/blob/34fc1dcd8c12b49349c3e54c033effdb6f6354f0/core/metacling/src/TCling.cxx#L7636. > a failed transaction (such as the lookup of a type or function that does not exist) also leaks. I bet that's the memory buffer and the bump allocator in the clang AST: for invalid code we don't codegen (so no leak there), the transaction gets recycled (no leak there either), and nothing gets run (no values leaking). I don't have plans to change the allocator for the clang AST (if that's at all ""possible"" i.e. ""reasonably feasible""). @vgvassilev do you think that's something you might be interested in? With the AST nodes sticking around we also need the memory buffer that they point to (`SourceLocation`-wise). > a trivial augmentation would be to take a pointer to a value wrapper. We have `TCling::Evaluate(const char* code, TInterpreterValue& value)`. Is that enough for you, or what is missing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:245,performance,memor,memory,245,"> run even an expression with zero side effects without leaking. Indeed, see my comment on the child interpreter. clang is a compiler, cling adds to its translation unit - it's growing, and even `42` is source code that clang wants to remain in memory, corresponds to AST nodes, and object code that's emitted by the JIT. So whether something is ""zero side effects"" depends on who you talk to :-). > I'll let you know once I implemented the optimization for integer returns - thanks for reporting that! That's actually already there, see https://github.com/root-project/root/blob/34fc1dcd8c12b49349c3e54c033effdb6f6354f0/core/metacling/src/TCling.cxx#L7636. > a failed transaction (such as the lookup of a type or function that does not exist) also leaks. I bet that's the memory buffer and the bump allocator in the clang AST: for invalid code we don't codegen (so no leak there), the transaction gets recycled (no leak there either), and nothing gets run (no values leaking). I don't have plans to change the allocator for the clang AST (if that's at all ""possible"" i.e. ""reasonably feasible""). @vgvassilev do you think that's something you might be interested in? With the AST nodes sticking around we also need the memory buffer that they point to (`SourceLocation`-wise). > a trivial augmentation would be to take a pointer to a value wrapper. We have `TCling::Evaluate(const char* code, TInterpreterValue& value)`. Is that enough for you, or what is missing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:441,performance,optimiz,optimization,441,"> run even an expression with zero side effects without leaking. Indeed, see my comment on the child interpreter. clang is a compiler, cling adds to its translation unit - it's growing, and even `42` is source code that clang wants to remain in memory, corresponds to AST nodes, and object code that's emitted by the JIT. So whether something is ""zero side effects"" depends on who you talk to :-). > I'll let you know once I implemented the optimization for integer returns - thanks for reporting that! That's actually already there, see https://github.com/root-project/root/blob/34fc1dcd8c12b49349c3e54c033effdb6f6354f0/core/metacling/src/TCling.cxx#L7636. > a failed transaction (such as the lookup of a type or function that does not exist) also leaks. I bet that's the memory buffer and the bump allocator in the clang AST: for invalid code we don't codegen (so no leak there), the transaction gets recycled (no leak there either), and nothing gets run (no values leaking). I don't have plans to change the allocator for the clang AST (if that's at all ""possible"" i.e. ""reasonably feasible""). @vgvassilev do you think that's something you might be interested in? With the AST nodes sticking around we also need the memory buffer that they point to (`SourceLocation`-wise). > a trivial augmentation would be to take a pointer to a value wrapper. We have `TCling::Evaluate(const char* code, TInterpreterValue& value)`. Is that enough for you, or what is missing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:773,performance,memor,memory,773,"> run even an expression with zero side effects without leaking. Indeed, see my comment on the child interpreter. clang is a compiler, cling adds to its translation unit - it's growing, and even `42` is source code that clang wants to remain in memory, corresponds to AST nodes, and object code that's emitted by the JIT. So whether something is ""zero side effects"" depends on who you talk to :-). > I'll let you know once I implemented the optimization for integer returns - thanks for reporting that! That's actually already there, see https://github.com/root-project/root/blob/34fc1dcd8c12b49349c3e54c033effdb6f6354f0/core/metacling/src/TCling.cxx#L7636. > a failed transaction (such as the lookup of a type or function that does not exist) also leaks. I bet that's the memory buffer and the bump allocator in the clang AST: for invalid code we don't codegen (so no leak there), the transaction gets recycled (no leak there either), and nothing gets run (no values leaking). I don't have plans to change the allocator for the clang AST (if that's at all ""possible"" i.e. ""reasonably feasible""). @vgvassilev do you think that's something you might be interested in? With the AST nodes sticking around we also need the memory buffer that they point to (`SourceLocation`-wise). > a trivial augmentation would be to take a pointer to a value wrapper. We have `TCling::Evaluate(const char* code, TInterpreterValue& value)`. Is that enough for you, or what is missing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:1219,performance,memor,memory,1219,"> run even an expression with zero side effects without leaking. Indeed, see my comment on the child interpreter. clang is a compiler, cling adds to its translation unit - it's growing, and even `42` is source code that clang wants to remain in memory, corresponds to AST nodes, and object code that's emitted by the JIT. So whether something is ""zero side effects"" depends on who you talk to :-). > I'll let you know once I implemented the optimization for integer returns - thanks for reporting that! That's actually already there, see https://github.com/root-project/root/blob/34fc1dcd8c12b49349c3e54c033effdb6f6354f0/core/metacling/src/TCling.cxx#L7636. > a failed transaction (such as the lookup of a type or function that does not exist) also leaks. I bet that's the memory buffer and the bump allocator in the clang AST: for invalid code we don't codegen (so no leak there), the transaction gets recycled (no leak there either), and nothing gets run (no values leaking). I don't have plans to change the allocator for the clang AST (if that's at all ""possible"" i.e. ""reasonably feasible""). @vgvassilev do you think that's something you might be interested in? With the AST nodes sticking around we also need the memory buffer that they point to (`SourceLocation`-wise). > a trivial augmentation would be to take a pointer to a value wrapper. We have `TCling::Evaluate(const char* code, TInterpreterValue& value)`. Is that enough for you, or what is missing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:662,reliability,fail,failed,662,"> run even an expression with zero side effects without leaking. Indeed, see my comment on the child interpreter. clang is a compiler, cling adds to its translation unit - it's growing, and even `42` is source code that clang wants to remain in memory, corresponds to AST nodes, and object code that's emitted by the JIT. So whether something is ""zero side effects"" depends on who you talk to :-). > I'll let you know once I implemented the optimization for integer returns - thanks for reporting that! That's actually already there, see https://github.com/root-project/root/blob/34fc1dcd8c12b49349c3e54c033effdb6f6354f0/core/metacling/src/TCling.cxx#L7636. > a failed transaction (such as the lookup of a type or function that does not exist) also leaks. I bet that's the memory buffer and the bump allocator in the clang AST: for invalid code we don't codegen (so no leak there), the transaction gets recycled (no leak there either), and nothing gets run (no values leaking). I don't have plans to change the allocator for the clang AST (if that's at all ""possible"" i.e. ""reasonably feasible""). @vgvassilev do you think that's something you might be interested in? With the AST nodes sticking around we also need the memory buffer that they point to (`SourceLocation`-wise). > a trivial augmentation would be to take a pointer to a value wrapper. We have `TCling::Evaluate(const char* code, TInterpreterValue& value)`. Is that enough for you, or what is missing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:728,reliability,doe,does,728,"> run even an expression with zero side effects without leaking. Indeed, see my comment on the child interpreter. clang is a compiler, cling adds to its translation unit - it's growing, and even `42` is source code that clang wants to remain in memory, corresponds to AST nodes, and object code that's emitted by the JIT. So whether something is ""zero side effects"" depends on who you talk to :-). > I'll let you know once I implemented the optimization for integer returns - thanks for reporting that! That's actually already there, see https://github.com/root-project/root/blob/34fc1dcd8c12b49349c3e54c033effdb6f6354f0/core/metacling/src/TCling.cxx#L7636. > a failed transaction (such as the lookup of a type or function that does not exist) also leaks. I bet that's the memory buffer and the bump allocator in the clang AST: for invalid code we don't codegen (so no leak there), the transaction gets recycled (no leak there either), and nothing gets run (no values leaking). I don't have plans to change the allocator for the clang AST (if that's at all ""possible"" i.e. ""reasonably feasible""). @vgvassilev do you think that's something you might be interested in? With the AST nodes sticking around we also need the memory buffer that they point to (`SourceLocation`-wise). > a trivial augmentation would be to take a pointer to a value wrapper. We have `TCling::Evaluate(const char* code, TInterpreterValue& value)`. Is that enough for you, or what is missing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:366,safety,depend,depends,366,"> run even an expression with zero side effects without leaking. Indeed, see my comment on the child interpreter. clang is a compiler, cling adds to its translation unit - it's growing, and even `42` is source code that clang wants to remain in memory, corresponds to AST nodes, and object code that's emitted by the JIT. So whether something is ""zero side effects"" depends on who you talk to :-). > I'll let you know once I implemented the optimization for integer returns - thanks for reporting that! That's actually already there, see https://github.com/root-project/root/blob/34fc1dcd8c12b49349c3e54c033effdb6f6354f0/core/metacling/src/TCling.cxx#L7636. > a failed transaction (such as the lookup of a type or function that does not exist) also leaks. I bet that's the memory buffer and the bump allocator in the clang AST: for invalid code we don't codegen (so no leak there), the transaction gets recycled (no leak there either), and nothing gets run (no values leaking). I don't have plans to change the allocator for the clang AST (if that's at all ""possible"" i.e. ""reasonably feasible""). @vgvassilev do you think that's something you might be interested in? With the AST nodes sticking around we also need the memory buffer that they point to (`SourceLocation`-wise). > a trivial augmentation would be to take a pointer to a value wrapper. We have `TCling::Evaluate(const char* code, TInterpreterValue& value)`. Is that enough for you, or what is missing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:165,testability,unit,unit,165,"> run even an expression with zero side effects without leaking. Indeed, see my comment on the child interpreter. clang is a compiler, cling adds to its translation unit - it's growing, and even `42` is source code that clang wants to remain in memory, corresponds to AST nodes, and object code that's emitted by the JIT. So whether something is ""zero side effects"" depends on who you talk to :-). > I'll let you know once I implemented the optimization for integer returns - thanks for reporting that! That's actually already there, see https://github.com/root-project/root/blob/34fc1dcd8c12b49349c3e54c033effdb6f6354f0/core/metacling/src/TCling.cxx#L7636. > a failed transaction (such as the lookup of a type or function that does not exist) also leaks. I bet that's the memory buffer and the bump allocator in the clang AST: for invalid code we don't codegen (so no leak there), the transaction gets recycled (no leak there either), and nothing gets run (no values leaking). I don't have plans to change the allocator for the clang AST (if that's at all ""possible"" i.e. ""reasonably feasible""). @vgvassilev do you think that's something you might be interested in? With the AST nodes sticking around we also need the memory buffer that they point to (`SourceLocation`-wise). > a trivial augmentation would be to take a pointer to a value wrapper. We have `TCling::Evaluate(const char* code, TInterpreterValue& value)`. Is that enough for you, or what is missing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:366,testability,depend,depends,366,"> run even an expression with zero side effects without leaking. Indeed, see my comment on the child interpreter. clang is a compiler, cling adds to its translation unit - it's growing, and even `42` is source code that clang wants to remain in memory, corresponds to AST nodes, and object code that's emitted by the JIT. So whether something is ""zero side effects"" depends on who you talk to :-). > I'll let you know once I implemented the optimization for integer returns - thanks for reporting that! That's actually already there, see https://github.com/root-project/root/blob/34fc1dcd8c12b49349c3e54c033effdb6f6354f0/core/metacling/src/TCling.cxx#L7636. > a failed transaction (such as the lookup of a type or function that does not exist) also leaks. I bet that's the memory buffer and the bump allocator in the clang AST: for invalid code we don't codegen (so no leak there), the transaction gets recycled (no leak there either), and nothing gets run (no values leaking). I don't have plans to change the allocator for the clang AST (if that's at all ""possible"" i.e. ""reasonably feasible""). @vgvassilev do you think that's something you might be interested in? With the AST nodes sticking around we also need the memory buffer that they point to (`SourceLocation`-wise). > a trivial augmentation would be to take a pointer to a value wrapper. We have `TCling::Evaluate(const char* code, TInterpreterValue& value)`. Is that enough for you, or what is missing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:991,testability,plan,plans,991,"> run even an expression with zero side effects without leaking. Indeed, see my comment on the child interpreter. clang is a compiler, cling adds to its translation unit - it's growing, and even `42` is source code that clang wants to remain in memory, corresponds to AST nodes, and object code that's emitted by the JIT. So whether something is ""zero side effects"" depends on who you talk to :-). > I'll let you know once I implemented the optimization for integer returns - thanks for reporting that! That's actually already there, see https://github.com/root-project/root/blob/34fc1dcd8c12b49349c3e54c033effdb6f6354f0/core/metacling/src/TCling.cxx#L7636. > a failed transaction (such as the lookup of a type or function that does not exist) also leaks. I bet that's the memory buffer and the bump allocator in the clang AST: for invalid code we don't codegen (so no leak there), the transaction gets recycled (no leak there either), and nothing gets run (no values leaking). I don't have plans to change the allocator for the clang AST (if that's at all ""possible"" i.e. ""reasonably feasible""). @vgvassilev do you think that's something you might be interested in? With the AST nodes sticking around we also need the memory buffer that they point to (`SourceLocation`-wise). > a trivial augmentation would be to take a pointer to a value wrapper. We have `TCling::Evaluate(const char* code, TInterpreterValue& value)`. Is that enough for you, or what is missing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:245,usability,memor,memory,245,"> run even an expression with zero side effects without leaking. Indeed, see my comment on the child interpreter. clang is a compiler, cling adds to its translation unit - it's growing, and even `42` is source code that clang wants to remain in memory, corresponds to AST nodes, and object code that's emitted by the JIT. So whether something is ""zero side effects"" depends on who you talk to :-). > I'll let you know once I implemented the optimization for integer returns - thanks for reporting that! That's actually already there, see https://github.com/root-project/root/blob/34fc1dcd8c12b49349c3e54c033effdb6f6354f0/core/metacling/src/TCling.cxx#L7636. > a failed transaction (such as the lookup of a type or function that does not exist) also leaks. I bet that's the memory buffer and the bump allocator in the clang AST: for invalid code we don't codegen (so no leak there), the transaction gets recycled (no leak there either), and nothing gets run (no values leaking). I don't have plans to change the allocator for the clang AST (if that's at all ""possible"" i.e. ""reasonably feasible""). @vgvassilev do you think that's something you might be interested in? With the AST nodes sticking around we also need the memory buffer that they point to (`SourceLocation`-wise). > a trivial augmentation would be to take a pointer to a value wrapper. We have `TCling::Evaluate(const char* code, TInterpreterValue& value)`. Is that enough for you, or what is missing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:773,usability,memor,memory,773,"> run even an expression with zero side effects without leaking. Indeed, see my comment on the child interpreter. clang is a compiler, cling adds to its translation unit - it's growing, and even `42` is source code that clang wants to remain in memory, corresponds to AST nodes, and object code that's emitted by the JIT. So whether something is ""zero side effects"" depends on who you talk to :-). > I'll let you know once I implemented the optimization for integer returns - thanks for reporting that! That's actually already there, see https://github.com/root-project/root/blob/34fc1dcd8c12b49349c3e54c033effdb6f6354f0/core/metacling/src/TCling.cxx#L7636. > a failed transaction (such as the lookup of a type or function that does not exist) also leaks. I bet that's the memory buffer and the bump allocator in the clang AST: for invalid code we don't codegen (so no leak there), the transaction gets recycled (no leak there either), and nothing gets run (no values leaking). I don't have plans to change the allocator for the clang AST (if that's at all ""possible"" i.e. ""reasonably feasible""). @vgvassilev do you think that's something you might be interested in? With the AST nodes sticking around we also need the memory buffer that they point to (`SourceLocation`-wise). > a trivial augmentation would be to take a pointer to a value wrapper. We have `TCling::Evaluate(const char* code, TInterpreterValue& value)`. Is that enough for you, or what is missing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:1219,usability,memor,memory,1219,"> run even an expression with zero side effects without leaking. Indeed, see my comment on the child interpreter. clang is a compiler, cling adds to its translation unit - it's growing, and even `42` is source code that clang wants to remain in memory, corresponds to AST nodes, and object code that's emitted by the JIT. So whether something is ""zero side effects"" depends on who you talk to :-). > I'll let you know once I implemented the optimization for integer returns - thanks for reporting that! That's actually already there, see https://github.com/root-project/root/blob/34fc1dcd8c12b49349c3e54c033effdb6f6354f0/core/metacling/src/TCling.cxx#L7636. > a failed transaction (such as the lookup of a type or function that does not exist) also leaks. I bet that's the memory buffer and the bump allocator in the clang AST: for invalid code we don't codegen (so no leak there), the transaction gets recycled (no leak there either), and nothing gets run (no values leaking). I don't have plans to change the allocator for the clang AST (if that's at all ""possible"" i.e. ""reasonably feasible""). @vgvassilev do you think that's something you might be interested in? With the AST nodes sticking around we also need the memory buffer that they point to (`SourceLocation`-wise). > a trivial augmentation would be to take a pointer to a value wrapper. We have `TCling::Evaluate(const char* code, TInterpreterValue& value)`. Is that enough for you, or what is missing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:1224,availability,operat,operator,1224,"I actually remember trying `Evaluate` but it crashed. Didn't look into too many details as to why; it does have a couple of fewer ""protection pieces"" (such as the mutex lock) than does `Calc()`, so that may be the reason. But even then, I gave up on all that when I realized that Python readily outperforms. I mean, talk about optimization, even for your integer case and compare these two macro's:. ```. int noleak() {. int result = 0;. for (int i = 0; i < 1000000; ++i) {. result += (int)TPython::Eval(""1+1"");. }. return result;. }. ```. and. ```. int leak() {. int result = 0;. for (int i = 0; i < 10000; ++i) {. result += (int)gInterpreter->Calc(""1+1"");. }. return result;. }. ```. Please note the constant: the `TPython::Eval()` is called _100x more_ than `TInterpreter::Calc()` and it is _still 4x faster_ on my box. So, my conclusion is that if you are in Cling and need to evaluate a run-time constructed expression represented in string-form, then the optimizily thing to do, is to call into Python ... (and if in a loop, then even if Python uses cppyy in turn, which uses Cling again, it will still outperform). And, of course, bonus points for not leaking ... There is one case where `cppyy` still fails: if the `operator+` in the expression above is a global `friend` (with the operands instances of some class), as so far, I've been unable to locate that method. So, I do still care, but my main problem is the leak on failed lookups, as those are very common. And I don't believe it is just the allocator, which as you tell it would re-use the memory, but I'll see first whether I can construct a pure Cling-only reproducer then. Aside, if/when the lookup helper is inverted (i.e. being able to tell what some _is_ rather than what it _isn't_), many of the failed lookups will simply go away.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:1209,deployability,fail,fails,1209,"I actually remember trying `Evaluate` but it crashed. Didn't look into too many details as to why; it does have a couple of fewer ""protection pieces"" (such as the mutex lock) than does `Calc()`, so that may be the reason. But even then, I gave up on all that when I realized that Python readily outperforms. I mean, talk about optimization, even for your integer case and compare these two macro's:. ```. int noleak() {. int result = 0;. for (int i = 0; i < 1000000; ++i) {. result += (int)TPython::Eval(""1+1"");. }. return result;. }. ```. and. ```. int leak() {. int result = 0;. for (int i = 0; i < 10000; ++i) {. result += (int)gInterpreter->Calc(""1+1"");. }. return result;. }. ```. Please note the constant: the `TPython::Eval()` is called _100x more_ than `TInterpreter::Calc()` and it is _still 4x faster_ on my box. So, my conclusion is that if you are in Cling and need to evaluate a run-time constructed expression represented in string-form, then the optimizily thing to do, is to call into Python ... (and if in a loop, then even if Python uses cppyy in turn, which uses Cling again, it will still outperform). And, of course, bonus points for not leaking ... There is one case where `cppyy` still fails: if the `operator+` in the expression above is a global `friend` (with the operands instances of some class), as so far, I've been unable to locate that method. So, I do still care, but my main problem is the leak on failed lookups, as those are very common. And I don't believe it is just the allocator, which as you tell it would re-use the memory, but I'll see first whether I can construct a pure Cling-only reproducer then. Aside, if/when the lookup helper is inverted (i.e. being able to tell what some _is_ rather than what it _isn't_), many of the failed lookups will simply go away.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:1432,deployability,fail,failed,1432,"I actually remember trying `Evaluate` but it crashed. Didn't look into too many details as to why; it does have a couple of fewer ""protection pieces"" (such as the mutex lock) than does `Calc()`, so that may be the reason. But even then, I gave up on all that when I realized that Python readily outperforms. I mean, talk about optimization, even for your integer case and compare these two macro's:. ```. int noleak() {. int result = 0;. for (int i = 0; i < 1000000; ++i) {. result += (int)TPython::Eval(""1+1"");. }. return result;. }. ```. and. ```. int leak() {. int result = 0;. for (int i = 0; i < 10000; ++i) {. result += (int)gInterpreter->Calc(""1+1"");. }. return result;. }. ```. Please note the constant: the `TPython::Eval()` is called _100x more_ than `TInterpreter::Calc()` and it is _still 4x faster_ on my box. So, my conclusion is that if you are in Cling and need to evaluate a run-time constructed expression represented in string-form, then the optimizily thing to do, is to call into Python ... (and if in a loop, then even if Python uses cppyy in turn, which uses Cling again, it will still outperform). And, of course, bonus points for not leaking ... There is one case where `cppyy` still fails: if the `operator+` in the expression above is a global `friend` (with the operands instances of some class), as so far, I've been unable to locate that method. So, I do still care, but my main problem is the leak on failed lookups, as those are very common. And I don't believe it is just the allocator, which as you tell it would re-use the memory, but I'll see first whether I can construct a pure Cling-only reproducer then. Aside, if/when the lookup helper is inverted (i.e. being able to tell what some _is_ rather than what it _isn't_), many of the failed lookups will simply go away.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:1771,deployability,fail,failed,1771,"I actually remember trying `Evaluate` but it crashed. Didn't look into too many details as to why; it does have a couple of fewer ""protection pieces"" (such as the mutex lock) than does `Calc()`, so that may be the reason. But even then, I gave up on all that when I realized that Python readily outperforms. I mean, talk about optimization, even for your integer case and compare these two macro's:. ```. int noleak() {. int result = 0;. for (int i = 0; i < 1000000; ++i) {. result += (int)TPython::Eval(""1+1"");. }. return result;. }. ```. and. ```. int leak() {. int result = 0;. for (int i = 0; i < 10000; ++i) {. result += (int)gInterpreter->Calc(""1+1"");. }. return result;. }. ```. Please note the constant: the `TPython::Eval()` is called _100x more_ than `TInterpreter::Calc()` and it is _still 4x faster_ on my box. So, my conclusion is that if you are in Cling and need to evaluate a run-time constructed expression represented in string-form, then the optimizily thing to do, is to call into Python ... (and if in a loop, then even if Python uses cppyy in turn, which uses Cling again, it will still outperform). And, of course, bonus points for not leaking ... There is one case where `cppyy` still fails: if the `operator+` in the expression above is a global `friend` (with the operands instances of some class), as so far, I've been unable to locate that method. So, I do still care, but my main problem is the leak on failed lookups, as those are very common. And I don't believe it is just the allocator, which as you tell it would re-use the memory, but I'll see first whether I can construct a pure Cling-only reproducer then. Aside, if/when the lookup helper is inverted (i.e. being able to tell what some _is_ rather than what it _isn't_), many of the failed lookups will simply go away.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:327,energy efficiency,optim,optimization,327,"I actually remember trying `Evaluate` but it crashed. Didn't look into too many details as to why; it does have a couple of fewer ""protection pieces"" (such as the mutex lock) than does `Calc()`, so that may be the reason. But even then, I gave up on all that when I realized that Python readily outperforms. I mean, talk about optimization, even for your integer case and compare these two macro's:. ```. int noleak() {. int result = 0;. for (int i = 0; i < 1000000; ++i) {. result += (int)TPython::Eval(""1+1"");. }. return result;. }. ```. and. ```. int leak() {. int result = 0;. for (int i = 0; i < 10000; ++i) {. result += (int)gInterpreter->Calc(""1+1"");. }. return result;. }. ```. Please note the constant: the `TPython::Eval()` is called _100x more_ than `TInterpreter::Calc()` and it is _still 4x faster_ on my box. So, my conclusion is that if you are in Cling and need to evaluate a run-time constructed expression represented in string-form, then the optimizily thing to do, is to call into Python ... (and if in a loop, then even if Python uses cppyy in turn, which uses Cling again, it will still outperform). And, of course, bonus points for not leaking ... There is one case where `cppyy` still fails: if the `operator+` in the expression above is a global `friend` (with the operands instances of some class), as so far, I've been unable to locate that method. So, I do still care, but my main problem is the leak on failed lookups, as those are very common. And I don't believe it is just the allocator, which as you tell it would re-use the memory, but I'll see first whether I can construct a pure Cling-only reproducer then. Aside, if/when the lookup helper is inverted (i.e. being able to tell what some _is_ rather than what it _isn't_), many of the failed lookups will simply go away.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:961,energy efficiency,optim,optimizily,961,"I actually remember trying `Evaluate` but it crashed. Didn't look into too many details as to why; it does have a couple of fewer ""protection pieces"" (such as the mutex lock) than does `Calc()`, so that may be the reason. But even then, I gave up on all that when I realized that Python readily outperforms. I mean, talk about optimization, even for your integer case and compare these two macro's:. ```. int noleak() {. int result = 0;. for (int i = 0; i < 1000000; ++i) {. result += (int)TPython::Eval(""1+1"");. }. return result;. }. ```. and. ```. int leak() {. int result = 0;. for (int i = 0; i < 10000; ++i) {. result += (int)gInterpreter->Calc(""1+1"");. }. return result;. }. ```. Please note the constant: the `TPython::Eval()` is called _100x more_ than `TInterpreter::Calc()` and it is _still 4x faster_ on my box. So, my conclusion is that if you are in Cling and need to evaluate a run-time constructed expression represented in string-form, then the optimizily thing to do, is to call into Python ... (and if in a loop, then even if Python uses cppyy in turn, which uses Cling again, it will still outperform). And, of course, bonus points for not leaking ... There is one case where `cppyy` still fails: if the `operator+` in the expression above is a global `friend` (with the operands instances of some class), as so far, I've been unable to locate that method. So, I do still care, but my main problem is the leak on failed lookups, as those are very common. And I don't believe it is just the allocator, which as you tell it would re-use the memory, but I'll see first whether I can construct a pure Cling-only reproducer then. Aside, if/when the lookup helper is inverted (i.e. being able to tell what some _is_ rather than what it _isn't_), many of the failed lookups will simply go away.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:1509,energy efficiency,alloc,allocator,1509,"I actually remember trying `Evaluate` but it crashed. Didn't look into too many details as to why; it does have a couple of fewer ""protection pieces"" (such as the mutex lock) than does `Calc()`, so that may be the reason. But even then, I gave up on all that when I realized that Python readily outperforms. I mean, talk about optimization, even for your integer case and compare these two macro's:. ```. int noleak() {. int result = 0;. for (int i = 0; i < 1000000; ++i) {. result += (int)TPython::Eval(""1+1"");. }. return result;. }. ```. and. ```. int leak() {. int result = 0;. for (int i = 0; i < 10000; ++i) {. result += (int)gInterpreter->Calc(""1+1"");. }. return result;. }. ```. Please note the constant: the `TPython::Eval()` is called _100x more_ than `TInterpreter::Calc()` and it is _still 4x faster_ on my box. So, my conclusion is that if you are in Cling and need to evaluate a run-time constructed expression represented in string-form, then the optimizily thing to do, is to call into Python ... (and if in a loop, then even if Python uses cppyy in turn, which uses Cling again, it will still outperform). And, of course, bonus points for not leaking ... There is one case where `cppyy` still fails: if the `operator+` in the expression above is a global `friend` (with the operands instances of some class), as so far, I've been unable to locate that method. So, I do still care, but my main problem is the leak on failed lookups, as those are very common. And I don't believe it is just the allocator, which as you tell it would re-use the memory, but I'll see first whether I can construct a pure Cling-only reproducer then. Aside, if/when the lookup helper is inverted (i.e. being able to tell what some _is_ rather than what it _isn't_), many of the failed lookups will simply go away.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:114,integrability,coupl,couple,114,"I actually remember trying `Evaluate` but it crashed. Didn't look into too many details as to why; it does have a couple of fewer ""protection pieces"" (such as the mutex lock) than does `Calc()`, so that may be the reason. But even then, I gave up on all that when I realized that Python readily outperforms. I mean, talk about optimization, even for your integer case and compare these two macro's:. ```. int noleak() {. int result = 0;. for (int i = 0; i < 1000000; ++i) {. result += (int)TPython::Eval(""1+1"");. }. return result;. }. ```. and. ```. int leak() {. int result = 0;. for (int i = 0; i < 10000; ++i) {. result += (int)gInterpreter->Calc(""1+1"");. }. return result;. }. ```. Please note the constant: the `TPython::Eval()` is called _100x more_ than `TInterpreter::Calc()` and it is _still 4x faster_ on my box. So, my conclusion is that if you are in Cling and need to evaluate a run-time constructed expression represented in string-form, then the optimizily thing to do, is to call into Python ... (and if in a loop, then even if Python uses cppyy in turn, which uses Cling again, it will still outperform). And, of course, bonus points for not leaking ... There is one case where `cppyy` still fails: if the `operator+` in the expression above is a global `friend` (with the operands instances of some class), as so far, I've been unable to locate that method. So, I do still care, but my main problem is the leak on failed lookups, as those are very common. And I don't believe it is just the allocator, which as you tell it would re-use the memory, but I'll see first whether I can construct a pure Cling-only reproducer then. Aside, if/when the lookup helper is inverted (i.e. being able to tell what some _is_ rather than what it _isn't_), many of the failed lookups will simply go away.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:114,modifiability,coupl,couple,114,"I actually remember trying `Evaluate` but it crashed. Didn't look into too many details as to why; it does have a couple of fewer ""protection pieces"" (such as the mutex lock) than does `Calc()`, so that may be the reason. But even then, I gave up on all that when I realized that Python readily outperforms. I mean, talk about optimization, even for your integer case and compare these two macro's:. ```. int noleak() {. int result = 0;. for (int i = 0; i < 1000000; ++i) {. result += (int)TPython::Eval(""1+1"");. }. return result;. }. ```. and. ```. int leak() {. int result = 0;. for (int i = 0; i < 10000; ++i) {. result += (int)gInterpreter->Calc(""1+1"");. }. return result;. }. ```. Please note the constant: the `TPython::Eval()` is called _100x more_ than `TInterpreter::Calc()` and it is _still 4x faster_ on my box. So, my conclusion is that if you are in Cling and need to evaluate a run-time constructed expression represented in string-form, then the optimizily thing to do, is to call into Python ... (and if in a loop, then even if Python uses cppyy in turn, which uses Cling again, it will still outperform). And, of course, bonus points for not leaking ... There is one case where `cppyy` still fails: if the `operator+` in the expression above is a global `friend` (with the operands instances of some class), as so far, I've been unable to locate that method. So, I do still care, but my main problem is the leak on failed lookups, as those are very common. And I don't believe it is just the allocator, which as you tell it would re-use the memory, but I'll see first whether I can construct a pure Cling-only reproducer then. Aside, if/when the lookup helper is inverted (i.e. being able to tell what some _is_ rather than what it _isn't_), many of the failed lookups will simply go away.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:169,performance,lock,lock,169,"I actually remember trying `Evaluate` but it crashed. Didn't look into too many details as to why; it does have a couple of fewer ""protection pieces"" (such as the mutex lock) than does `Calc()`, so that may be the reason. But even then, I gave up on all that when I realized that Python readily outperforms. I mean, talk about optimization, even for your integer case and compare these two macro's:. ```. int noleak() {. int result = 0;. for (int i = 0; i < 1000000; ++i) {. result += (int)TPython::Eval(""1+1"");. }. return result;. }. ```. and. ```. int leak() {. int result = 0;. for (int i = 0; i < 10000; ++i) {. result += (int)gInterpreter->Calc(""1+1"");. }. return result;. }. ```. Please note the constant: the `TPython::Eval()` is called _100x more_ than `TInterpreter::Calc()` and it is _still 4x faster_ on my box. So, my conclusion is that if you are in Cling and need to evaluate a run-time constructed expression represented in string-form, then the optimizily thing to do, is to call into Python ... (and if in a loop, then even if Python uses cppyy in turn, which uses Cling again, it will still outperform). And, of course, bonus points for not leaking ... There is one case where `cppyy` still fails: if the `operator+` in the expression above is a global `friend` (with the operands instances of some class), as so far, I've been unable to locate that method. So, I do still care, but my main problem is the leak on failed lookups, as those are very common. And I don't believe it is just the allocator, which as you tell it would re-use the memory, but I'll see first whether I can construct a pure Cling-only reproducer then. Aside, if/when the lookup helper is inverted (i.e. being able to tell what some _is_ rather than what it _isn't_), many of the failed lookups will simply go away.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:327,performance,optimiz,optimization,327,"I actually remember trying `Evaluate` but it crashed. Didn't look into too many details as to why; it does have a couple of fewer ""protection pieces"" (such as the mutex lock) than does `Calc()`, so that may be the reason. But even then, I gave up on all that when I realized that Python readily outperforms. I mean, talk about optimization, even for your integer case and compare these two macro's:. ```. int noleak() {. int result = 0;. for (int i = 0; i < 1000000; ++i) {. result += (int)TPython::Eval(""1+1"");. }. return result;. }. ```. and. ```. int leak() {. int result = 0;. for (int i = 0; i < 10000; ++i) {. result += (int)gInterpreter->Calc(""1+1"");. }. return result;. }. ```. Please note the constant: the `TPython::Eval()` is called _100x more_ than `TInterpreter::Calc()` and it is _still 4x faster_ on my box. So, my conclusion is that if you are in Cling and need to evaluate a run-time constructed expression represented in string-form, then the optimizily thing to do, is to call into Python ... (and if in a loop, then even if Python uses cppyy in turn, which uses Cling again, it will still outperform). And, of course, bonus points for not leaking ... There is one case where `cppyy` still fails: if the `operator+` in the expression above is a global `friend` (with the operands instances of some class), as so far, I've been unable to locate that method. So, I do still care, but my main problem is the leak on failed lookups, as those are very common. And I don't believe it is just the allocator, which as you tell it would re-use the memory, but I'll see first whether I can construct a pure Cling-only reproducer then. Aside, if/when the lookup helper is inverted (i.e. being able to tell what some _is_ rather than what it _isn't_), many of the failed lookups will simply go away.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:896,performance,time,time,896,"I actually remember trying `Evaluate` but it crashed. Didn't look into too many details as to why; it does have a couple of fewer ""protection pieces"" (such as the mutex lock) than does `Calc()`, so that may be the reason. But even then, I gave up on all that when I realized that Python readily outperforms. I mean, talk about optimization, even for your integer case and compare these two macro's:. ```. int noleak() {. int result = 0;. for (int i = 0; i < 1000000; ++i) {. result += (int)TPython::Eval(""1+1"");. }. return result;. }. ```. and. ```. int leak() {. int result = 0;. for (int i = 0; i < 10000; ++i) {. result += (int)gInterpreter->Calc(""1+1"");. }. return result;. }. ```. Please note the constant: the `TPython::Eval()` is called _100x more_ than `TInterpreter::Calc()` and it is _still 4x faster_ on my box. So, my conclusion is that if you are in Cling and need to evaluate a run-time constructed expression represented in string-form, then the optimizily thing to do, is to call into Python ... (and if in a loop, then even if Python uses cppyy in turn, which uses Cling again, it will still outperform). And, of course, bonus points for not leaking ... There is one case where `cppyy` still fails: if the `operator+` in the expression above is a global `friend` (with the operands instances of some class), as so far, I've been unable to locate that method. So, I do still care, but my main problem is the leak on failed lookups, as those are very common. And I don't believe it is just the allocator, which as you tell it would re-use the memory, but I'll see first whether I can construct a pure Cling-only reproducer then. Aside, if/when the lookup helper is inverted (i.e. being able to tell what some _is_ rather than what it _isn't_), many of the failed lookups will simply go away.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:961,performance,optimiz,optimizily,961,"I actually remember trying `Evaluate` but it crashed. Didn't look into too many details as to why; it does have a couple of fewer ""protection pieces"" (such as the mutex lock) than does `Calc()`, so that may be the reason. But even then, I gave up on all that when I realized that Python readily outperforms. I mean, talk about optimization, even for your integer case and compare these two macro's:. ```. int noleak() {. int result = 0;. for (int i = 0; i < 1000000; ++i) {. result += (int)TPython::Eval(""1+1"");. }. return result;. }. ```. and. ```. int leak() {. int result = 0;. for (int i = 0; i < 10000; ++i) {. result += (int)gInterpreter->Calc(""1+1"");. }. return result;. }. ```. Please note the constant: the `TPython::Eval()` is called _100x more_ than `TInterpreter::Calc()` and it is _still 4x faster_ on my box. So, my conclusion is that if you are in Cling and need to evaluate a run-time constructed expression represented in string-form, then the optimizily thing to do, is to call into Python ... (and if in a loop, then even if Python uses cppyy in turn, which uses Cling again, it will still outperform). And, of course, bonus points for not leaking ... There is one case where `cppyy` still fails: if the `operator+` in the expression above is a global `friend` (with the operands instances of some class), as so far, I've been unable to locate that method. So, I do still care, but my main problem is the leak on failed lookups, as those are very common. And I don't believe it is just the allocator, which as you tell it would re-use the memory, but I'll see first whether I can construct a pure Cling-only reproducer then. Aside, if/when the lookup helper is inverted (i.e. being able to tell what some _is_ rather than what it _isn't_), many of the failed lookups will simply go away.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:1558,performance,memor,memory,1558,"I actually remember trying `Evaluate` but it crashed. Didn't look into too many details as to why; it does have a couple of fewer ""protection pieces"" (such as the mutex lock) than does `Calc()`, so that may be the reason. But even then, I gave up on all that when I realized that Python readily outperforms. I mean, talk about optimization, even for your integer case and compare these two macro's:. ```. int noleak() {. int result = 0;. for (int i = 0; i < 1000000; ++i) {. result += (int)TPython::Eval(""1+1"");. }. return result;. }. ```. and. ```. int leak() {. int result = 0;. for (int i = 0; i < 10000; ++i) {. result += (int)gInterpreter->Calc(""1+1"");. }. return result;. }. ```. Please note the constant: the `TPython::Eval()` is called _100x more_ than `TInterpreter::Calc()` and it is _still 4x faster_ on my box. So, my conclusion is that if you are in Cling and need to evaluate a run-time constructed expression represented in string-form, then the optimizily thing to do, is to call into Python ... (and if in a loop, then even if Python uses cppyy in turn, which uses Cling again, it will still outperform). And, of course, bonus points for not leaking ... There is one case where `cppyy` still fails: if the `operator+` in the expression above is a global `friend` (with the operands instances of some class), as so far, I've been unable to locate that method. So, I do still care, but my main problem is the leak on failed lookups, as those are very common. And I don't believe it is just the allocator, which as you tell it would re-use the memory, but I'll see first whether I can construct a pure Cling-only reproducer then. Aside, if/when the lookup helper is inverted (i.e. being able to tell what some _is_ rather than what it _isn't_), many of the failed lookups will simply go away.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:102,reliability,doe,does,102,"I actually remember trying `Evaluate` but it crashed. Didn't look into too many details as to why; it does have a couple of fewer ""protection pieces"" (such as the mutex lock) than does `Calc()`, so that may be the reason. But even then, I gave up on all that when I realized that Python readily outperforms. I mean, talk about optimization, even for your integer case and compare these two macro's:. ```. int noleak() {. int result = 0;. for (int i = 0; i < 1000000; ++i) {. result += (int)TPython::Eval(""1+1"");. }. return result;. }. ```. and. ```. int leak() {. int result = 0;. for (int i = 0; i < 10000; ++i) {. result += (int)gInterpreter->Calc(""1+1"");. }. return result;. }. ```. Please note the constant: the `TPython::Eval()` is called _100x more_ than `TInterpreter::Calc()` and it is _still 4x faster_ on my box. So, my conclusion is that if you are in Cling and need to evaluate a run-time constructed expression represented in string-form, then the optimizily thing to do, is to call into Python ... (and if in a loop, then even if Python uses cppyy in turn, which uses Cling again, it will still outperform). And, of course, bonus points for not leaking ... There is one case where `cppyy` still fails: if the `operator+` in the expression above is a global `friend` (with the operands instances of some class), as so far, I've been unable to locate that method. So, I do still care, but my main problem is the leak on failed lookups, as those are very common. And I don't believe it is just the allocator, which as you tell it would re-use the memory, but I'll see first whether I can construct a pure Cling-only reproducer then. Aside, if/when the lookup helper is inverted (i.e. being able to tell what some _is_ rather than what it _isn't_), many of the failed lookups will simply go away.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:180,reliability,doe,does,180,"I actually remember trying `Evaluate` but it crashed. Didn't look into too many details as to why; it does have a couple of fewer ""protection pieces"" (such as the mutex lock) than does `Calc()`, so that may be the reason. But even then, I gave up on all that when I realized that Python readily outperforms. I mean, talk about optimization, even for your integer case and compare these two macro's:. ```. int noleak() {. int result = 0;. for (int i = 0; i < 1000000; ++i) {. result += (int)TPython::Eval(""1+1"");. }. return result;. }. ```. and. ```. int leak() {. int result = 0;. for (int i = 0; i < 10000; ++i) {. result += (int)gInterpreter->Calc(""1+1"");. }. return result;. }. ```. Please note the constant: the `TPython::Eval()` is called _100x more_ than `TInterpreter::Calc()` and it is _still 4x faster_ on my box. So, my conclusion is that if you are in Cling and need to evaluate a run-time constructed expression represented in string-form, then the optimizily thing to do, is to call into Python ... (and if in a loop, then even if Python uses cppyy in turn, which uses Cling again, it will still outperform). And, of course, bonus points for not leaking ... There is one case where `cppyy` still fails: if the `operator+` in the expression above is a global `friend` (with the operands instances of some class), as so far, I've been unable to locate that method. So, I do still care, but my main problem is the leak on failed lookups, as those are very common. And I don't believe it is just the allocator, which as you tell it would re-use the memory, but I'll see first whether I can construct a pure Cling-only reproducer then. Aside, if/when the lookup helper is inverted (i.e. being able to tell what some _is_ rather than what it _isn't_), many of the failed lookups will simply go away.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:1209,reliability,fail,fails,1209,"I actually remember trying `Evaluate` but it crashed. Didn't look into too many details as to why; it does have a couple of fewer ""protection pieces"" (such as the mutex lock) than does `Calc()`, so that may be the reason. But even then, I gave up on all that when I realized that Python readily outperforms. I mean, talk about optimization, even for your integer case and compare these two macro's:. ```. int noleak() {. int result = 0;. for (int i = 0; i < 1000000; ++i) {. result += (int)TPython::Eval(""1+1"");. }. return result;. }. ```. and. ```. int leak() {. int result = 0;. for (int i = 0; i < 10000; ++i) {. result += (int)gInterpreter->Calc(""1+1"");. }. return result;. }. ```. Please note the constant: the `TPython::Eval()` is called _100x more_ than `TInterpreter::Calc()` and it is _still 4x faster_ on my box. So, my conclusion is that if you are in Cling and need to evaluate a run-time constructed expression represented in string-form, then the optimizily thing to do, is to call into Python ... (and if in a loop, then even if Python uses cppyy in turn, which uses Cling again, it will still outperform). And, of course, bonus points for not leaking ... There is one case where `cppyy` still fails: if the `operator+` in the expression above is a global `friend` (with the operands instances of some class), as so far, I've been unable to locate that method. So, I do still care, but my main problem is the leak on failed lookups, as those are very common. And I don't believe it is just the allocator, which as you tell it would re-use the memory, but I'll see first whether I can construct a pure Cling-only reproducer then. Aside, if/when the lookup helper is inverted (i.e. being able to tell what some _is_ rather than what it _isn't_), many of the failed lookups will simply go away.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:1432,reliability,fail,failed,1432,"I actually remember trying `Evaluate` but it crashed. Didn't look into too many details as to why; it does have a couple of fewer ""protection pieces"" (such as the mutex lock) than does `Calc()`, so that may be the reason. But even then, I gave up on all that when I realized that Python readily outperforms. I mean, talk about optimization, even for your integer case and compare these two macro's:. ```. int noleak() {. int result = 0;. for (int i = 0; i < 1000000; ++i) {. result += (int)TPython::Eval(""1+1"");. }. return result;. }. ```. and. ```. int leak() {. int result = 0;. for (int i = 0; i < 10000; ++i) {. result += (int)gInterpreter->Calc(""1+1"");. }. return result;. }. ```. Please note the constant: the `TPython::Eval()` is called _100x more_ than `TInterpreter::Calc()` and it is _still 4x faster_ on my box. So, my conclusion is that if you are in Cling and need to evaluate a run-time constructed expression represented in string-form, then the optimizily thing to do, is to call into Python ... (and if in a loop, then even if Python uses cppyy in turn, which uses Cling again, it will still outperform). And, of course, bonus points for not leaking ... There is one case where `cppyy` still fails: if the `operator+` in the expression above is a global `friend` (with the operands instances of some class), as so far, I've been unable to locate that method. So, I do still care, but my main problem is the leak on failed lookups, as those are very common. And I don't believe it is just the allocator, which as you tell it would re-use the memory, but I'll see first whether I can construct a pure Cling-only reproducer then. Aside, if/when the lookup helper is inverted (i.e. being able to tell what some _is_ rather than what it _isn't_), many of the failed lookups will simply go away.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:1771,reliability,fail,failed,1771,"I actually remember trying `Evaluate` but it crashed. Didn't look into too many details as to why; it does have a couple of fewer ""protection pieces"" (such as the mutex lock) than does `Calc()`, so that may be the reason. But even then, I gave up on all that when I realized that Python readily outperforms. I mean, talk about optimization, even for your integer case and compare these two macro's:. ```. int noleak() {. int result = 0;. for (int i = 0; i < 1000000; ++i) {. result += (int)TPython::Eval(""1+1"");. }. return result;. }. ```. and. ```. int leak() {. int result = 0;. for (int i = 0; i < 10000; ++i) {. result += (int)gInterpreter->Calc(""1+1"");. }. return result;. }. ```. Please note the constant: the `TPython::Eval()` is called _100x more_ than `TInterpreter::Calc()` and it is _still 4x faster_ on my box. So, my conclusion is that if you are in Cling and need to evaluate a run-time constructed expression represented in string-form, then the optimizily thing to do, is to call into Python ... (and if in a loop, then even if Python uses cppyy in turn, which uses Cling again, it will still outperform). And, of course, bonus points for not leaking ... There is one case where `cppyy` still fails: if the `operator+` in the expression above is a global `friend` (with the operands instances of some class), as so far, I've been unable to locate that method. So, I do still care, but my main problem is the leak on failed lookups, as those are very common. And I don't believe it is just the allocator, which as you tell it would re-use the memory, but I'll see first whether I can construct a pure Cling-only reproducer then. Aside, if/when the lookup helper is inverted (i.e. being able to tell what some _is_ rather than what it _isn't_), many of the failed lookups will simply go away.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:11,safety,reme,remember,11,"I actually remember trying `Evaluate` but it crashed. Didn't look into too many details as to why; it does have a couple of fewer ""protection pieces"" (such as the mutex lock) than does `Calc()`, so that may be the reason. But even then, I gave up on all that when I realized that Python readily outperforms. I mean, talk about optimization, even for your integer case and compare these two macro's:. ```. int noleak() {. int result = 0;. for (int i = 0; i < 1000000; ++i) {. result += (int)TPython::Eval(""1+1"");. }. return result;. }. ```. and. ```. int leak() {. int result = 0;. for (int i = 0; i < 10000; ++i) {. result += (int)gInterpreter->Calc(""1+1"");. }. return result;. }. ```. Please note the constant: the `TPython::Eval()` is called _100x more_ than `TInterpreter::Calc()` and it is _still 4x faster_ on my box. So, my conclusion is that if you are in Cling and need to evaluate a run-time constructed expression represented in string-form, then the optimizily thing to do, is to call into Python ... (and if in a loop, then even if Python uses cppyy in turn, which uses Cling again, it will still outperform). And, of course, bonus points for not leaking ... There is one case where `cppyy` still fails: if the `operator+` in the expression above is a global `friend` (with the operands instances of some class), as so far, I've been unable to locate that method. So, I do still care, but my main problem is the leak on failed lookups, as those are very common. And I don't believe it is just the allocator, which as you tell it would re-use the memory, but I'll see first whether I can construct a pure Cling-only reproducer then. Aside, if/when the lookup helper is inverted (i.e. being able to tell what some _is_ rather than what it _isn't_), many of the failed lookups will simply go away.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:169,security,lock,lock,169,"I actually remember trying `Evaluate` but it crashed. Didn't look into too many details as to why; it does have a couple of fewer ""protection pieces"" (such as the mutex lock) than does `Calc()`, so that may be the reason. But even then, I gave up on all that when I realized that Python readily outperforms. I mean, talk about optimization, even for your integer case and compare these two macro's:. ```. int noleak() {. int result = 0;. for (int i = 0; i < 1000000; ++i) {. result += (int)TPython::Eval(""1+1"");. }. return result;. }. ```. and. ```. int leak() {. int result = 0;. for (int i = 0; i < 10000; ++i) {. result += (int)gInterpreter->Calc(""1+1"");. }. return result;. }. ```. Please note the constant: the `TPython::Eval()` is called _100x more_ than `TInterpreter::Calc()` and it is _still 4x faster_ on my box. So, my conclusion is that if you are in Cling and need to evaluate a run-time constructed expression represented in string-form, then the optimizily thing to do, is to call into Python ... (and if in a loop, then even if Python uses cppyy in turn, which uses Cling again, it will still outperform). And, of course, bonus points for not leaking ... There is one case where `cppyy` still fails: if the `operator+` in the expression above is a global `friend` (with the operands instances of some class), as so far, I've been unable to locate that method. So, I do still care, but my main problem is the leak on failed lookups, as those are very common. And I don't believe it is just the allocator, which as you tell it would re-use the memory, but I'll see first whether I can construct a pure Cling-only reproducer then. Aside, if/when the lookup helper is inverted (i.e. being able to tell what some _is_ rather than what it _isn't_), many of the failed lookups will simply go away.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:114,testability,coupl,couple,114,"I actually remember trying `Evaluate` but it crashed. Didn't look into too many details as to why; it does have a couple of fewer ""protection pieces"" (such as the mutex lock) than does `Calc()`, so that may be the reason. But even then, I gave up on all that when I realized that Python readily outperforms. I mean, talk about optimization, even for your integer case and compare these two macro's:. ```. int noleak() {. int result = 0;. for (int i = 0; i < 1000000; ++i) {. result += (int)TPython::Eval(""1+1"");. }. return result;. }. ```. and. ```. int leak() {. int result = 0;. for (int i = 0; i < 10000; ++i) {. result += (int)gInterpreter->Calc(""1+1"");. }. return result;. }. ```. Please note the constant: the `TPython::Eval()` is called _100x more_ than `TInterpreter::Calc()` and it is _still 4x faster_ on my box. So, my conclusion is that if you are in Cling and need to evaluate a run-time constructed expression represented in string-form, then the optimizily thing to do, is to call into Python ... (and if in a loop, then even if Python uses cppyy in turn, which uses Cling again, it will still outperform). And, of course, bonus points for not leaking ... There is one case where `cppyy` still fails: if the `operator+` in the expression above is a global `friend` (with the operands instances of some class), as so far, I've been unable to locate that method. So, I do still care, but my main problem is the leak on failed lookups, as those are very common. And I don't believe it is just the allocator, which as you tell it would re-use the memory, but I'll see first whether I can construct a pure Cling-only reproducer then. Aside, if/when the lookup helper is inverted (i.e. being able to tell what some _is_ rather than what it _isn't_), many of the failed lookups will simply go away.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:1791,testability,simpl,simply,1791,"I actually remember trying `Evaluate` but it crashed. Didn't look into too many details as to why; it does have a couple of fewer ""protection pieces"" (such as the mutex lock) than does `Calc()`, so that may be the reason. But even then, I gave up on all that when I realized that Python readily outperforms. I mean, talk about optimization, even for your integer case and compare these two macro's:. ```. int noleak() {. int result = 0;. for (int i = 0; i < 1000000; ++i) {. result += (int)TPython::Eval(""1+1"");. }. return result;. }. ```. and. ```. int leak() {. int result = 0;. for (int i = 0; i < 10000; ++i) {. result += (int)gInterpreter->Calc(""1+1"");. }. return result;. }. ```. Please note the constant: the `TPython::Eval()` is called _100x more_ than `TInterpreter::Calc()` and it is _still 4x faster_ on my box. So, my conclusion is that if you are in Cling and need to evaluate a run-time constructed expression represented in string-form, then the optimizily thing to do, is to call into Python ... (and if in a loop, then even if Python uses cppyy in turn, which uses Cling again, it will still outperform). And, of course, bonus points for not leaking ... There is one case where `cppyy` still fails: if the `operator+` in the expression above is a global `friend` (with the operands instances of some class), as so far, I've been unable to locate that method. So, I do still care, but my main problem is the leak on failed lookups, as those are very common. And I don't believe it is just the allocator, which as you tell it would re-use the memory, but I'll see first whether I can construct a pure Cling-only reproducer then. Aside, if/when the lookup helper is inverted (i.e. being able to tell what some _is_ rather than what it _isn't_), many of the failed lookups will simply go away.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:1558,usability,memor,memory,1558,"I actually remember trying `Evaluate` but it crashed. Didn't look into too many details as to why; it does have a couple of fewer ""protection pieces"" (such as the mutex lock) than does `Calc()`, so that may be the reason. But even then, I gave up on all that when I realized that Python readily outperforms. I mean, talk about optimization, even for your integer case and compare these two macro's:. ```. int noleak() {. int result = 0;. for (int i = 0; i < 1000000; ++i) {. result += (int)TPython::Eval(""1+1"");. }. return result;. }. ```. and. ```. int leak() {. int result = 0;. for (int i = 0; i < 10000; ++i) {. result += (int)gInterpreter->Calc(""1+1"");. }. return result;. }. ```. Please note the constant: the `TPython::Eval()` is called _100x more_ than `TInterpreter::Calc()` and it is _still 4x faster_ on my box. So, my conclusion is that if you are in Cling and need to evaluate a run-time constructed expression represented in string-form, then the optimizily thing to do, is to call into Python ... (and if in a loop, then even if Python uses cppyy in turn, which uses Cling again, it will still outperform). And, of course, bonus points for not leaking ... There is one case where `cppyy` still fails: if the `operator+` in the expression above is a global `friend` (with the operands instances of some class), as so far, I've been unable to locate that method. So, I do still care, but my main problem is the leak on failed lookups, as those are very common. And I don't believe it is just the allocator, which as you tell it would re-use the memory, but I'll see first whether I can construct a pure Cling-only reproducer then. Aside, if/when the lookup helper is inverted (i.e. being able to tell what some _is_ rather than what it _isn't_), many of the failed lookups will simply go away.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:1670,usability,help,helper,1670,"I actually remember trying `Evaluate` but it crashed. Didn't look into too many details as to why; it does have a couple of fewer ""protection pieces"" (such as the mutex lock) than does `Calc()`, so that may be the reason. But even then, I gave up on all that when I realized that Python readily outperforms. I mean, talk about optimization, even for your integer case and compare these two macro's:. ```. int noleak() {. int result = 0;. for (int i = 0; i < 1000000; ++i) {. result += (int)TPython::Eval(""1+1"");. }. return result;. }. ```. and. ```. int leak() {. int result = 0;. for (int i = 0; i < 10000; ++i) {. result += (int)gInterpreter->Calc(""1+1"");. }. return result;. }. ```. Please note the constant: the `TPython::Eval()` is called _100x more_ than `TInterpreter::Calc()` and it is _still 4x faster_ on my box. So, my conclusion is that if you are in Cling and need to evaluate a run-time constructed expression represented in string-form, then the optimizily thing to do, is to call into Python ... (and if in a loop, then even if Python uses cppyy in turn, which uses Cling again, it will still outperform). And, of course, bonus points for not leaking ... There is one case where `cppyy` still fails: if the `operator+` in the expression above is a global `friend` (with the operands instances of some class), as so far, I've been unable to locate that method. So, I do still care, but my main problem is the leak on failed lookups, as those are very common. And I don't believe it is just the allocator, which as you tell it would re-use the memory, but I'll see first whether I can construct a pure Cling-only reproducer then. Aside, if/when the lookup helper is inverted (i.e. being able to tell what some _is_ rather than what it _isn't_), many of the failed lookups will simply go away.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/issues/7201:1791,usability,simpl,simply,1791,"I actually remember trying `Evaluate` but it crashed. Didn't look into too many details as to why; it does have a couple of fewer ""protection pieces"" (such as the mutex lock) than does `Calc()`, so that may be the reason. But even then, I gave up on all that when I realized that Python readily outperforms. I mean, talk about optimization, even for your integer case and compare these two macro's:. ```. int noleak() {. int result = 0;. for (int i = 0; i < 1000000; ++i) {. result += (int)TPython::Eval(""1+1"");. }. return result;. }. ```. and. ```. int leak() {. int result = 0;. for (int i = 0; i < 10000; ++i) {. result += (int)gInterpreter->Calc(""1+1"");. }. return result;. }. ```. Please note the constant: the `TPython::Eval()` is called _100x more_ than `TInterpreter::Calc()` and it is _still 4x faster_ on my box. So, my conclusion is that if you are in Cling and need to evaluate a run-time constructed expression represented in string-form, then the optimizily thing to do, is to call into Python ... (and if in a loop, then even if Python uses cppyy in turn, which uses Cling again, it will still outperform). And, of course, bonus points for not leaking ... There is one case where `cppyy` still fails: if the `operator+` in the expression above is a global `friend` (with the operands instances of some class), as so far, I've been unable to locate that method. So, I do still care, but my main problem is the leak on failed lookups, as those are very common. And I don't believe it is just the allocator, which as you tell it would re-use the memory, but I'll see first whether I can construct a pure Cling-only reproducer then. Aside, if/when the lookup helper is inverted (i.e. being able to tell what some _is_ rather than what it _isn't_), many of the failed lookups will simply go away.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7201
https://github.com/root-project/root/pull/7203:30,security,modif,modified,30,@osschar Please check if such modified tutorial ok,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7203
https://github.com/root-project/root/pull/7204:134,deployability,configurat,configuration,134,"Hey, thanks for your PR! I'm a little bit confused, aren't the strides set by the memory layout and the shape of the tensor? In which configuration you would want to set custom strides? Also I'm not too sure whether then the transformations are still valid. Can you confirm this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:134,integrability,configur,configuration,134,"Hey, thanks for your PR! I'm a little bit confused, aren't the strides set by the memory layout and the shape of the tensor? In which configuration you would want to set custom strides? Also I'm not too sure whether then the transformations are still valid. Can you confirm this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:225,integrability,transform,transformations,225,"Hey, thanks for your PR! I'm a little bit confused, aren't the strides set by the memory layout and the shape of the tensor? In which configuration you would want to set custom strides? Also I'm not too sure whether then the transformations are still valid. Can you confirm this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:225,interoperability,transform,transformations,225,"Hey, thanks for your PR! I'm a little bit confused, aren't the strides set by the memory layout and the shape of the tensor? In which configuration you would want to set custom strides? Also I'm not too sure whether then the transformations are still valid. Can you confirm this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:134,modifiability,configur,configuration,134,"Hey, thanks for your PR! I'm a little bit confused, aren't the strides set by the memory layout and the shape of the tensor? In which configuration you would want to set custom strides? Also I'm not too sure whether then the transformations are still valid. Can you confirm this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:82,performance,memor,memory,82,"Hey, thanks for your PR! I'm a little bit confused, aren't the strides set by the memory layout and the shape of the tensor? In which configuration you would want to set custom strides? Also I'm not too sure whether then the transformations are still valid. Can you confirm this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:251,safety,valid,valid,251,"Hey, thanks for your PR! I'm a little bit confused, aren't the strides set by the memory layout and the shape of the tensor? In which configuration you would want to set custom strides? Also I'm not too sure whether then the transformations are still valid. Can you confirm this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:63,security,stride,strides,63,"Hey, thanks for your PR! I'm a little bit confused, aren't the strides set by the memory layout and the shape of the tensor? In which configuration you would want to set custom strides? Also I'm not too sure whether then the transformations are still valid. Can you confirm this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:134,security,configur,configuration,134,"Hey, thanks for your PR! I'm a little bit confused, aren't the strides set by the memory layout and the shape of the tensor? In which configuration you would want to set custom strides? Also I'm not too sure whether then the transformations are still valid. Can you confirm this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:177,security,stride,strides,177,"Hey, thanks for your PR! I'm a little bit confused, aren't the strides set by the memory layout and the shape of the tensor? In which configuration you would want to set custom strides? Also I'm not too sure whether then the transformations are still valid. Can you confirm this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:82,usability,memor,memory,82,"Hey, thanks for your PR! I'm a little bit confused, aren't the strides set by the memory layout and the shape of the tensor? In which configuration you would want to set custom strides? Also I'm not too sure whether then the transformations are still valid. Can you confirm this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:170,usability,custom,custom,170,"Hey, thanks for your PR! I'm a little bit confused, aren't the strides set by the memory layout and the shape of the tensor? In which configuration you would want to set custom strides? Also I'm not too sure whether then the transformations are still valid. Can you confirm this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:266,usability,confirm,confirm,266,"Hey, thanks for your PR! I'm a little bit confused, aren't the strides set by the memory layout and the shape of the tensor? In which configuration you would want to set custom strides? Also I'm not too sure whether then the transformations are still valid. Can you confirm this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:489,energy efficiency,model,models,489,"Hi @stwunsch,. I think that the strides are set by the memory layout (row-major or column-major), the memory format (CHWN, NCHW, ...) and the shape of the tensor. CHWN is the format supported by RTensor.So when computing the strides, the function Internal::ComputeStridesFromShape assumes that the memory format is CHWN. NCHW is the only format supported by ONNX (Open Neural Network Exchange). That’s why I need to set custom strides to comply to the ONNX standards and to inference ONNX models. A better approach would be to support these two formats like in CuDNN:. ```{c++}. enum class MemoryFormat{. CHWN = 0;. NCHW = 1. };. ```. I have checked and Reshape is not valid. it calls the function Internal::ComputeStridesFromShape which computes the strides in the CHWN format. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:109,interoperability,format,format,109,"Hi @stwunsch,. I think that the strides are set by the memory layout (row-major or column-major), the memory format (CHWN, NCHW, ...) and the shape of the tensor. CHWN is the format supported by RTensor.So when computing the strides, the function Internal::ComputeStridesFromShape assumes that the memory format is CHWN. NCHW is the only format supported by ONNX (Open Neural Network Exchange). That’s why I need to set custom strides to comply to the ONNX standards and to inference ONNX models. A better approach would be to support these two formats like in CuDNN:. ```{c++}. enum class MemoryFormat{. CHWN = 0;. NCHW = 1. };. ```. I have checked and Reshape is not valid. it calls the function Internal::ComputeStridesFromShape which computes the strides in the CHWN format. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:175,interoperability,format,format,175,"Hi @stwunsch,. I think that the strides are set by the memory layout (row-major or column-major), the memory format (CHWN, NCHW, ...) and the shape of the tensor. CHWN is the format supported by RTensor.So when computing the strides, the function Internal::ComputeStridesFromShape assumes that the memory format is CHWN. NCHW is the only format supported by ONNX (Open Neural Network Exchange). That’s why I need to set custom strides to comply to the ONNX standards and to inference ONNX models. A better approach would be to support these two formats like in CuDNN:. ```{c++}. enum class MemoryFormat{. CHWN = 0;. NCHW = 1. };. ```. I have checked and Reshape is not valid. it calls the function Internal::ComputeStridesFromShape which computes the strides in the CHWN format. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:305,interoperability,format,format,305,"Hi @stwunsch,. I think that the strides are set by the memory layout (row-major or column-major), the memory format (CHWN, NCHW, ...) and the shape of the tensor. CHWN is the format supported by RTensor.So when computing the strides, the function Internal::ComputeStridesFromShape assumes that the memory format is CHWN. NCHW is the only format supported by ONNX (Open Neural Network Exchange). That’s why I need to set custom strides to comply to the ONNX standards and to inference ONNX models. A better approach would be to support these two formats like in CuDNN:. ```{c++}. enum class MemoryFormat{. CHWN = 0;. NCHW = 1. };. ```. I have checked and Reshape is not valid. it calls the function Internal::ComputeStridesFromShape which computes the strides in the CHWN format. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:338,interoperability,format,format,338,"Hi @stwunsch,. I think that the strides are set by the memory layout (row-major or column-major), the memory format (CHWN, NCHW, ...) and the shape of the tensor. CHWN is the format supported by RTensor.So when computing the strides, the function Internal::ComputeStridesFromShape assumes that the memory format is CHWN. NCHW is the only format supported by ONNX (Open Neural Network Exchange). That’s why I need to set custom strides to comply to the ONNX standards and to inference ONNX models. A better approach would be to support these two formats like in CuDNN:. ```{c++}. enum class MemoryFormat{. CHWN = 0;. NCHW = 1. };. ```. I have checked and Reshape is not valid. it calls the function Internal::ComputeStridesFromShape which computes the strides in the CHWN format. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:384,interoperability,Exchang,Exchange,384,"Hi @stwunsch,. I think that the strides are set by the memory layout (row-major or column-major), the memory format (CHWN, NCHW, ...) and the shape of the tensor. CHWN is the format supported by RTensor.So when computing the strides, the function Internal::ComputeStridesFromShape assumes that the memory format is CHWN. NCHW is the only format supported by ONNX (Open Neural Network Exchange). That’s why I need to set custom strides to comply to the ONNX standards and to inference ONNX models. A better approach would be to support these two formats like in CuDNN:. ```{c++}. enum class MemoryFormat{. CHWN = 0;. NCHW = 1. };. ```. I have checked and Reshape is not valid. it calls the function Internal::ComputeStridesFromShape which computes the strides in the CHWN format. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:457,interoperability,standard,standards,457,"Hi @stwunsch,. I think that the strides are set by the memory layout (row-major or column-major), the memory format (CHWN, NCHW, ...) and the shape of the tensor. CHWN is the format supported by RTensor.So when computing the strides, the function Internal::ComputeStridesFromShape assumes that the memory format is CHWN. NCHW is the only format supported by ONNX (Open Neural Network Exchange). That’s why I need to set custom strides to comply to the ONNX standards and to inference ONNX models. A better approach would be to support these two formats like in CuDNN:. ```{c++}. enum class MemoryFormat{. CHWN = 0;. NCHW = 1. };. ```. I have checked and Reshape is not valid. it calls the function Internal::ComputeStridesFromShape which computes the strides in the CHWN format. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:545,interoperability,format,formats,545,"Hi @stwunsch,. I think that the strides are set by the memory layout (row-major or column-major), the memory format (CHWN, NCHW, ...) and the shape of the tensor. CHWN is the format supported by RTensor.So when computing the strides, the function Internal::ComputeStridesFromShape assumes that the memory format is CHWN. NCHW is the only format supported by ONNX (Open Neural Network Exchange). That’s why I need to set custom strides to comply to the ONNX standards and to inference ONNX models. A better approach would be to support these two formats like in CuDNN:. ```{c++}. enum class MemoryFormat{. CHWN = 0;. NCHW = 1. };. ```. I have checked and Reshape is not valid. it calls the function Internal::ComputeStridesFromShape which computes the strides in the CHWN format. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:771,interoperability,format,format,771,"Hi @stwunsch,. I think that the strides are set by the memory layout (row-major or column-major), the memory format (CHWN, NCHW, ...) and the shape of the tensor. CHWN is the format supported by RTensor.So when computing the strides, the function Internal::ComputeStridesFromShape assumes that the memory format is CHWN. NCHW is the only format supported by ONNX (Open Neural Network Exchange). That’s why I need to set custom strides to comply to the ONNX standards and to inference ONNX models. A better approach would be to support these two formats like in CuDNN:. ```{c++}. enum class MemoryFormat{. CHWN = 0;. NCHW = 1. };. ```. I have checked and Reshape is not valid. it calls the function Internal::ComputeStridesFromShape which computes the strides in the CHWN format. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:55,performance,memor,memory,55,"Hi @stwunsch,. I think that the strides are set by the memory layout (row-major or column-major), the memory format (CHWN, NCHW, ...) and the shape of the tensor. CHWN is the format supported by RTensor.So when computing the strides, the function Internal::ComputeStridesFromShape assumes that the memory format is CHWN. NCHW is the only format supported by ONNX (Open Neural Network Exchange). That’s why I need to set custom strides to comply to the ONNX standards and to inference ONNX models. A better approach would be to support these two formats like in CuDNN:. ```{c++}. enum class MemoryFormat{. CHWN = 0;. NCHW = 1. };. ```. I have checked and Reshape is not valid. it calls the function Internal::ComputeStridesFromShape which computes the strides in the CHWN format. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:102,performance,memor,memory,102,"Hi @stwunsch,. I think that the strides are set by the memory layout (row-major or column-major), the memory format (CHWN, NCHW, ...) and the shape of the tensor. CHWN is the format supported by RTensor.So when computing the strides, the function Internal::ComputeStridesFromShape assumes that the memory format is CHWN. NCHW is the only format supported by ONNX (Open Neural Network Exchange). That’s why I need to set custom strides to comply to the ONNX standards and to inference ONNX models. A better approach would be to support these two formats like in CuDNN:. ```{c++}. enum class MemoryFormat{. CHWN = 0;. NCHW = 1. };. ```. I have checked and Reshape is not valid. it calls the function Internal::ComputeStridesFromShape which computes the strides in the CHWN format. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:298,performance,memor,memory,298,"Hi @stwunsch,. I think that the strides are set by the memory layout (row-major or column-major), the memory format (CHWN, NCHW, ...) and the shape of the tensor. CHWN is the format supported by RTensor.So when computing the strides, the function Internal::ComputeStridesFromShape assumes that the memory format is CHWN. NCHW is the only format supported by ONNX (Open Neural Network Exchange). That’s why I need to set custom strides to comply to the ONNX standards and to inference ONNX models. A better approach would be to support these two formats like in CuDNN:. ```{c++}. enum class MemoryFormat{. CHWN = 0;. NCHW = 1. };. ```. I have checked and Reshape is not valid. it calls the function Internal::ComputeStridesFromShape which computes the strides in the CHWN format. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:376,performance,Network,Network,376,"Hi @stwunsch,. I think that the strides are set by the memory layout (row-major or column-major), the memory format (CHWN, NCHW, ...) and the shape of the tensor. CHWN is the format supported by RTensor.So when computing the strides, the function Internal::ComputeStridesFromShape assumes that the memory format is CHWN. NCHW is the only format supported by ONNX (Open Neural Network Exchange). That’s why I need to set custom strides to comply to the ONNX standards and to inference ONNX models. A better approach would be to support these two formats like in CuDNN:. ```{c++}. enum class MemoryFormat{. CHWN = 0;. NCHW = 1. };. ```. I have checked and Reshape is not valid. it calls the function Internal::ComputeStridesFromShape which computes the strides in the CHWN format. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:590,performance,Memor,MemoryFormat,590,"Hi @stwunsch,. I think that the strides are set by the memory layout (row-major or column-major), the memory format (CHWN, NCHW, ...) and the shape of the tensor. CHWN is the format supported by RTensor.So when computing the strides, the function Internal::ComputeStridesFromShape assumes that the memory format is CHWN. NCHW is the only format supported by ONNX (Open Neural Network Exchange). That’s why I need to set custom strides to comply to the ONNX standards and to inference ONNX models. A better approach would be to support these two formats like in CuDNN:. ```{c++}. enum class MemoryFormat{. CHWN = 0;. NCHW = 1. };. ```. I have checked and Reshape is not valid. it calls the function Internal::ComputeStridesFromShape which computes the strides in the CHWN format. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:438,safety,compl,comply,438,"Hi @stwunsch,. I think that the strides are set by the memory layout (row-major or column-major), the memory format (CHWN, NCHW, ...) and the shape of the tensor. CHWN is the format supported by RTensor.So when computing the strides, the function Internal::ComputeStridesFromShape assumes that the memory format is CHWN. NCHW is the only format supported by ONNX (Open Neural Network Exchange). That’s why I need to set custom strides to comply to the ONNX standards and to inference ONNX models. A better approach would be to support these two formats like in CuDNN:. ```{c++}. enum class MemoryFormat{. CHWN = 0;. NCHW = 1. };. ```. I have checked and Reshape is not valid. it calls the function Internal::ComputeStridesFromShape which computes the strides in the CHWN format. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:669,safety,valid,valid,669,"Hi @stwunsch,. I think that the strides are set by the memory layout (row-major or column-major), the memory format (CHWN, NCHW, ...) and the shape of the tensor. CHWN is the format supported by RTensor.So when computing the strides, the function Internal::ComputeStridesFromShape assumes that the memory format is CHWN. NCHW is the only format supported by ONNX (Open Neural Network Exchange). That’s why I need to set custom strides to comply to the ONNX standards and to inference ONNX models. A better approach would be to support these two formats like in CuDNN:. ```{c++}. enum class MemoryFormat{. CHWN = 0;. NCHW = 1. };. ```. I have checked and Reshape is not valid. it calls the function Internal::ComputeStridesFromShape which computes the strides in the CHWN format. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:32,security,stride,strides,32,"Hi @stwunsch,. I think that the strides are set by the memory layout (row-major or column-major), the memory format (CHWN, NCHW, ...) and the shape of the tensor. CHWN is the format supported by RTensor.So when computing the strides, the function Internal::ComputeStridesFromShape assumes that the memory format is CHWN. NCHW is the only format supported by ONNX (Open Neural Network Exchange). That’s why I need to set custom strides to comply to the ONNX standards and to inference ONNX models. A better approach would be to support these two formats like in CuDNN:. ```{c++}. enum class MemoryFormat{. CHWN = 0;. NCHW = 1. };. ```. I have checked and Reshape is not valid. it calls the function Internal::ComputeStridesFromShape which computes the strides in the CHWN format. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:225,security,stride,strides,225,"Hi @stwunsch,. I think that the strides are set by the memory layout (row-major or column-major), the memory format (CHWN, NCHW, ...) and the shape of the tensor. CHWN is the format supported by RTensor.So when computing the strides, the function Internal::ComputeStridesFromShape assumes that the memory format is CHWN. NCHW is the only format supported by ONNX (Open Neural Network Exchange). That’s why I need to set custom strides to comply to the ONNX standards and to inference ONNX models. A better approach would be to support these two formats like in CuDNN:. ```{c++}. enum class MemoryFormat{. CHWN = 0;. NCHW = 1. };. ```. I have checked and Reshape is not valid. it calls the function Internal::ComputeStridesFromShape which computes the strides in the CHWN format. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:376,security,Network,Network,376,"Hi @stwunsch,. I think that the strides are set by the memory layout (row-major or column-major), the memory format (CHWN, NCHW, ...) and the shape of the tensor. CHWN is the format supported by RTensor.So when computing the strides, the function Internal::ComputeStridesFromShape assumes that the memory format is CHWN. NCHW is the only format supported by ONNX (Open Neural Network Exchange). That’s why I need to set custom strides to comply to the ONNX standards and to inference ONNX models. A better approach would be to support these two formats like in CuDNN:. ```{c++}. enum class MemoryFormat{. CHWN = 0;. NCHW = 1. };. ```. I have checked and Reshape is not valid. it calls the function Internal::ComputeStridesFromShape which computes the strides in the CHWN format. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:427,security,stride,strides,427,"Hi @stwunsch,. I think that the strides are set by the memory layout (row-major or column-major), the memory format (CHWN, NCHW, ...) and the shape of the tensor. CHWN is the format supported by RTensor.So when computing the strides, the function Internal::ComputeStridesFromShape assumes that the memory format is CHWN. NCHW is the only format supported by ONNX (Open Neural Network Exchange). That’s why I need to set custom strides to comply to the ONNX standards and to inference ONNX models. A better approach would be to support these two formats like in CuDNN:. ```{c++}. enum class MemoryFormat{. CHWN = 0;. NCHW = 1. };. ```. I have checked and Reshape is not valid. it calls the function Internal::ComputeStridesFromShape which computes the strides in the CHWN format. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:438,security,compl,comply,438,"Hi @stwunsch,. I think that the strides are set by the memory layout (row-major or column-major), the memory format (CHWN, NCHW, ...) and the shape of the tensor. CHWN is the format supported by RTensor.So when computing the strides, the function Internal::ComputeStridesFromShape assumes that the memory format is CHWN. NCHW is the only format supported by ONNX (Open Neural Network Exchange). That’s why I need to set custom strides to comply to the ONNX standards and to inference ONNX models. A better approach would be to support these two formats like in CuDNN:. ```{c++}. enum class MemoryFormat{. CHWN = 0;. NCHW = 1. };. ```. I have checked and Reshape is not valid. it calls the function Internal::ComputeStridesFromShape which computes the strides in the CHWN format. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:489,security,model,models,489,"Hi @stwunsch,. I think that the strides are set by the memory layout (row-major or column-major), the memory format (CHWN, NCHW, ...) and the shape of the tensor. CHWN is the format supported by RTensor.So when computing the strides, the function Internal::ComputeStridesFromShape assumes that the memory format is CHWN. NCHW is the only format supported by ONNX (Open Neural Network Exchange). That’s why I need to set custom strides to comply to the ONNX standards and to inference ONNX models. A better approach would be to support these two formats like in CuDNN:. ```{c++}. enum class MemoryFormat{. CHWN = 0;. NCHW = 1. };. ```. I have checked and Reshape is not valid. it calls the function Internal::ComputeStridesFromShape which computes the strides in the CHWN format. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:751,security,stride,strides,751,"Hi @stwunsch,. I think that the strides are set by the memory layout (row-major or column-major), the memory format (CHWN, NCHW, ...) and the shape of the tensor. CHWN is the format supported by RTensor.So when computing the strides, the function Internal::ComputeStridesFromShape assumes that the memory format is CHWN. NCHW is the only format supported by ONNX (Open Neural Network Exchange). That’s why I need to set custom strides to comply to the ONNX standards and to inference ONNX models. A better approach would be to support these two formats like in CuDNN:. ```{c++}. enum class MemoryFormat{. CHWN = 0;. NCHW = 1. };. ```. I have checked and Reshape is not valid. it calls the function Internal::ComputeStridesFromShape which computes the strides in the CHWN format. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:55,usability,memor,memory,55,"Hi @stwunsch,. I think that the strides are set by the memory layout (row-major or column-major), the memory format (CHWN, NCHW, ...) and the shape of the tensor. CHWN is the format supported by RTensor.So when computing the strides, the function Internal::ComputeStridesFromShape assumes that the memory format is CHWN. NCHW is the only format supported by ONNX (Open Neural Network Exchange). That’s why I need to set custom strides to comply to the ONNX standards and to inference ONNX models. A better approach would be to support these two formats like in CuDNN:. ```{c++}. enum class MemoryFormat{. CHWN = 0;. NCHW = 1. };. ```. I have checked and Reshape is not valid. it calls the function Internal::ComputeStridesFromShape which computes the strides in the CHWN format. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:102,usability,memor,memory,102,"Hi @stwunsch,. I think that the strides are set by the memory layout (row-major or column-major), the memory format (CHWN, NCHW, ...) and the shape of the tensor. CHWN is the format supported by RTensor.So when computing the strides, the function Internal::ComputeStridesFromShape assumes that the memory format is CHWN. NCHW is the only format supported by ONNX (Open Neural Network Exchange). That’s why I need to set custom strides to comply to the ONNX standards and to inference ONNX models. A better approach would be to support these two formats like in CuDNN:. ```{c++}. enum class MemoryFormat{. CHWN = 0;. NCHW = 1. };. ```. I have checked and Reshape is not valid. it calls the function Internal::ComputeStridesFromShape which computes the strides in the CHWN format. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:182,usability,support,supported,182,"Hi @stwunsch,. I think that the strides are set by the memory layout (row-major or column-major), the memory format (CHWN, NCHW, ...) and the shape of the tensor. CHWN is the format supported by RTensor.So when computing the strides, the function Internal::ComputeStridesFromShape assumes that the memory format is CHWN. NCHW is the only format supported by ONNX (Open Neural Network Exchange). That’s why I need to set custom strides to comply to the ONNX standards and to inference ONNX models. A better approach would be to support these two formats like in CuDNN:. ```{c++}. enum class MemoryFormat{. CHWN = 0;. NCHW = 1. };. ```. I have checked and Reshape is not valid. it calls the function Internal::ComputeStridesFromShape which computes the strides in the CHWN format. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:298,usability,memor,memory,298,"Hi @stwunsch,. I think that the strides are set by the memory layout (row-major or column-major), the memory format (CHWN, NCHW, ...) and the shape of the tensor. CHWN is the format supported by RTensor.So when computing the strides, the function Internal::ComputeStridesFromShape assumes that the memory format is CHWN. NCHW is the only format supported by ONNX (Open Neural Network Exchange). That’s why I need to set custom strides to comply to the ONNX standards and to inference ONNX models. A better approach would be to support these two formats like in CuDNN:. ```{c++}. enum class MemoryFormat{. CHWN = 0;. NCHW = 1. };. ```. I have checked and Reshape is not valid. it calls the function Internal::ComputeStridesFromShape which computes the strides in the CHWN format. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:345,usability,support,supported,345,"Hi @stwunsch,. I think that the strides are set by the memory layout (row-major or column-major), the memory format (CHWN, NCHW, ...) and the shape of the tensor. CHWN is the format supported by RTensor.So when computing the strides, the function Internal::ComputeStridesFromShape assumes that the memory format is CHWN. NCHW is the only format supported by ONNX (Open Neural Network Exchange). That’s why I need to set custom strides to comply to the ONNX standards and to inference ONNX models. A better approach would be to support these two formats like in CuDNN:. ```{c++}. enum class MemoryFormat{. CHWN = 0;. NCHW = 1. };. ```. I have checked and Reshape is not valid. it calls the function Internal::ComputeStridesFromShape which computes the strides in the CHWN format. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:420,usability,custom,custom,420,"Hi @stwunsch,. I think that the strides are set by the memory layout (row-major or column-major), the memory format (CHWN, NCHW, ...) and the shape of the tensor. CHWN is the format supported by RTensor.So when computing the strides, the function Internal::ComputeStridesFromShape assumes that the memory format is CHWN. NCHW is the only format supported by ONNX (Open Neural Network Exchange). That’s why I need to set custom strides to comply to the ONNX standards and to inference ONNX models. A better approach would be to support these two formats like in CuDNN:. ```{c++}. enum class MemoryFormat{. CHWN = 0;. NCHW = 1. };. ```. I have checked and Reshape is not valid. it calls the function Internal::ComputeStridesFromShape which computes the strides in the CHWN format. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:527,usability,support,support,527,"Hi @stwunsch,. I think that the strides are set by the memory layout (row-major or column-major), the memory format (CHWN, NCHW, ...) and the shape of the tensor. CHWN is the format supported by RTensor.So when computing the strides, the function Internal::ComputeStridesFromShape assumes that the memory format is CHWN. NCHW is the only format supported by ONNX (Open Neural Network Exchange). That’s why I need to set custom strides to comply to the ONNX standards and to inference ONNX models. A better approach would be to support these two formats like in CuDNN:. ```{c++}. enum class MemoryFormat{. CHWN = 0;. NCHW = 1. };. ```. I have checked and Reshape is not valid. it calls the function Internal::ComputeStridesFromShape which computes the strides in the CHWN format. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:590,usability,Memor,MemoryFormat,590,"Hi @stwunsch,. I think that the strides are set by the memory layout (row-major or column-major), the memory format (CHWN, NCHW, ...) and the shape of the tensor. CHWN is the format supported by RTensor.So when computing the strides, the function Internal::ComputeStridesFromShape assumes that the memory format is CHWN. NCHW is the only format supported by ONNX (Open Neural Network Exchange). That’s why I need to set custom strides to comply to the ONNX standards and to inference ONNX models. A better approach would be to support these two formats like in CuDNN:. ```{c++}. enum class MemoryFormat{. CHWN = 0;. NCHW = 1. };. ```. I have checked and Reshape is not valid. it calls the function Internal::ComputeStridesFromShape which computes the strides in the CHWN format. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:119,integrability,batch,batch-first,119,"Hi! Could you explain further how `CHWN` vs `NCHW` matters for `RTensor`? I understand this as the ""channel-first"" or ""batch-first"" ordering of tensors in TensorFlow, ONNX, cuDNN, ... . However, this does not matter, since it's just how you interpret the indices of a 4D `RTensor` and not related to the actual memory layout. Is this correct?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:119,performance,batch,batch-first,119,"Hi! Could you explain further how `CHWN` vs `NCHW` matters for `RTensor`? I understand this as the ""channel-first"" or ""batch-first"" ordering of tensors in TensorFlow, ONNX, cuDNN, ... . However, this does not matter, since it's just how you interpret the indices of a 4D `RTensor` and not related to the actual memory layout. Is this correct?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:311,performance,memor,memory,311,"Hi! Could you explain further how `CHWN` vs `NCHW` matters for `RTensor`? I understand this as the ""channel-first"" or ""batch-first"" ordering of tensors in TensorFlow, ONNX, cuDNN, ... . However, this does not matter, since it's just how you interpret the indices of a 4D `RTensor` and not related to the actual memory layout. Is this correct?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:200,reliability,doe,does,200,"Hi! Could you explain further how `CHWN` vs `NCHW` matters for `RTensor`? I understand this as the ""channel-first"" or ""batch-first"" ordering of tensors in TensorFlow, ONNX, cuDNN, ... . However, this does not matter, since it's just how you interpret the indices of a 4D `RTensor` and not related to the actual memory layout. Is this correct?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:76,testability,understand,understand,76,"Hi! Could you explain further how `CHWN` vs `NCHW` matters for `RTensor`? I understand this as the ""channel-first"" or ""batch-first"" ordering of tensors in TensorFlow, ONNX, cuDNN, ... . However, this does not matter, since it's just how you interpret the indices of a 4D `RTensor` and not related to the actual memory layout. Is this correct?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:311,usability,memor,memory,311,"Hi! Could you explain further how `CHWN` vs `NCHW` matters for `RTensor`? I understand this as the ""channel-first"" or ""batch-first"" ordering of tensors in TensorFlow, ONNX, cuDNN, ... . However, this does not matter, since it's just how you interpret the indices of a 4D `RTensor` and not related to the actual memory layout. Is this correct?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:119,interoperability,format,format,119,"Thanks, it doesn't really matter for RTensor. I had to set custom strides to access the elements of the tensor in NCHW format. But permuting the indices or reshaping the data does the trick, I think you can close this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:11,reliability,doe,doesn,11,"Thanks, it doesn't really matter for RTensor. I had to set custom strides to access the elements of the tensor in NCHW format. But permuting the indices or reshaping the data does the trick, I think you can close this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:175,reliability,doe,does,175,"Thanks, it doesn't really matter for RTensor. I had to set custom strides to access the elements of the tensor in NCHW format. But permuting the indices or reshaping the data does the trick, I think you can close this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:66,security,stride,strides,66,"Thanks, it doesn't really matter for RTensor. I had to set custom strides to access the elements of the tensor in NCHW format. But permuting the indices or reshaping the data does the trick, I think you can close this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:77,security,access,access,77,"Thanks, it doesn't really matter for RTensor. I had to set custom strides to access the elements of the tensor in NCHW format. But permuting the indices or reshaping the data does the trick, I think you can close this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:59,usability,custom,custom,59,"Thanks, it doesn't really matter for RTensor. I had to set custom strides to access the elements of the tensor in NCHW format. But permuting the indices or reshaping the data does the trick, I think you can close this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/pull/7204:207,usability,close,close,207,"Thanks, it doesn't really matter for RTensor. I had to set custom strides to access the elements of the tensor in NCHW format. But permuting the indices or reshaping the data does the trick, I think you can close this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7204
https://github.com/root-project/root/issues/7205:65,reliability,doe,does,65,"Hi @dcervenkov ,. thank you for the suggestion! As a workaround, does it help if you use `->AsString()` to convert the display output to a `std::string` and then `cout` that string?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7205
https://github.com/root-project/root/issues/7205:73,usability,help,help,73,"Hi @dcervenkov ,. thank you for the suggestion! As a workaround, does it help if you use `->AsString()` to convert the display output to a `std::string` and then `cout` that string?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7205
https://github.com/root-project/root/issues/7205:91,deployability,configurat,configuration,91,Marking this as low priority as there is a simple workaround. We might still want to add a configuration for this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7205
https://github.com/root-project/root/issues/7205:91,integrability,configur,configuration,91,Marking this as low priority as there is a simple workaround. We might still want to add a configuration for this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7205
https://github.com/root-project/root/issues/7205:91,modifiability,configur,configuration,91,Marking this as low priority as there is a simple workaround. We might still want to add a configuration for this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7205
https://github.com/root-project/root/issues/7205:91,security,configur,configuration,91,Marking this as low priority as there is a simple workaround. We might still want to add a configuration for this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7205
https://github.com/root-project/root/issues/7205:43,testability,simpl,simple,43,Marking this as low priority as there is a simple workaround. We might still want to add a configuration for this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7205
https://github.com/root-project/root/issues/7205:43,usability,simpl,simple,43,Marking this as low priority as there is a simple workaround. We might still want to add a configuration for this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7205
https://github.com/root-project/root/issues/7206:127,deployability,upgrad,upgrade,127,"@chrisburr, the branch went out of date for ROOT and it'd be hard to keep it up to date. I'd propose to wait until we land the upgrade PR in ROOT and then fix that if there is still something to fix. How does that sound?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7206
https://github.com/root-project/root/issues/7206:127,modifiability,upgrad,upgrade,127,"@chrisburr, the branch went out of date for ROOT and it'd be hard to keep it up to date. I'd propose to wait until we land the upgrade PR in ROOT and then fix that if there is still something to fix. How does that sound?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7206
https://github.com/root-project/root/issues/7206:204,reliability,doe,does,204,"@chrisburr, the branch went out of date for ROOT and it'd be hard to keep it up to date. I'd propose to wait until we land the upgrade PR in ROOT and then fix that if there is still something to fix. How does that sound?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7206
https://github.com/root-project/root/issues/7206:42,performance,time,time,42,"@chrisburr, the PR was merged maybe it is time to check this if it works and possible start fixing it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7206
https://github.com/root-project/root/issues/7206:48,deployability,releas,release,48,Added the 6.24 milestone: issue is blocking the release of v6.24 conda packages,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7206
https://github.com/root-project/root/issues/7206:71,modifiability,pac,packages,71,Added the 6.24 milestone: issue is blocking the release of v6.24 conda packages,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7206
https://github.com/root-project/root/issues/7206:34,deployability,patch,patch,34,@chrisburr will make the attached patch a PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7206
https://github.com/root-project/root/issues/7206:34,safety,patch,patch,34,@chrisburr will make the attached patch a PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7206
https://github.com/root-project/root/issues/7206:34,security,patch,patch,34,@chrisburr will make the attached patch a PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7206
https://github.com/root-project/root/issues/7207:133,availability,operat,operator,133,"It's unrelated, but if I can just add this one here:. ```. Direct leak of 384 byte(s) in 2 object(s) allocated from:. #0 0x4f8998 in operator new(unsigned long) (/data/stephan/root-build/bin/root.exe+0x4f8998). #1 0x7fb283344768 in TClingDataMemberInfo::TClingDataMemberInfo(cling::Interpreter*, TClingClassInfo*, TDictionary::EMemberSelection) /data/stephan/root/core/metacling/src/TClingDataMemberInfo.cxx:98:61. #2 0x7fb28311bc4e in TCling::DataMemberInfo_Factory(ClassInfo_t*, TDictionary::EMemberSelection) const /data/stephan/root/core/metacling/src/TCling.cxx:8507:35. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:181,deployability,build,build,181,"It's unrelated, but if I can just add this one here:. ```. Direct leak of 384 byte(s) in 2 object(s) allocated from:. #0 0x4f8998 in operator new(unsigned long) (/data/stephan/root-build/bin/root.exe+0x4f8998). #1 0x7fb283344768 in TClingDataMemberInfo::TClingDataMemberInfo(cling::Interpreter*, TClingClassInfo*, TDictionary::EMemberSelection) /data/stephan/root/core/metacling/src/TClingDataMemberInfo.cxx:98:61. #2 0x7fb28311bc4e in TCling::DataMemberInfo_Factory(ClassInfo_t*, TDictionary::EMemberSelection) const /data/stephan/root/core/metacling/src/TCling.cxx:8507:35. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:101,energy efficiency,alloc,allocated,101,"It's unrelated, but if I can just add this one here:. ```. Direct leak of 384 byte(s) in 2 object(s) allocated from:. #0 0x4f8998 in operator new(unsigned long) (/data/stephan/root-build/bin/root.exe+0x4f8998). #1 0x7fb283344768 in TClingDataMemberInfo::TClingDataMemberInfo(cling::Interpreter*, TClingClassInfo*, TDictionary::EMemberSelection) /data/stephan/root/core/metacling/src/TClingDataMemberInfo.cxx:98:61. #2 0x7fb28311bc4e in TCling::DataMemberInfo_Factory(ClassInfo_t*, TDictionary::EMemberSelection) const /data/stephan/root/core/metacling/src/TCling.cxx:8507:35. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:364,energy efficiency,core,core,364,"It's unrelated, but if I can just add this one here:. ```. Direct leak of 384 byte(s) in 2 object(s) allocated from:. #0 0x4f8998 in operator new(unsigned long) (/data/stephan/root-build/bin/root.exe+0x4f8998). #1 0x7fb283344768 in TClingDataMemberInfo::TClingDataMemberInfo(cling::Interpreter*, TClingClassInfo*, TDictionary::EMemberSelection) /data/stephan/root/core/metacling/src/TClingDataMemberInfo.cxx:98:61. #2 0x7fb28311bc4e in TCling::DataMemberInfo_Factory(ClassInfo_t*, TDictionary::EMemberSelection) const /data/stephan/root/core/metacling/src/TCling.cxx:8507:35. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:537,energy efficiency,core,core,537,"It's unrelated, but if I can just add this one here:. ```. Direct leak of 384 byte(s) in 2 object(s) allocated from:. #0 0x4f8998 in operator new(unsigned long) (/data/stephan/root-build/bin/root.exe+0x4f8998). #1 0x7fb283344768 in TClingDataMemberInfo::TClingDataMemberInfo(cling::Interpreter*, TClingClassInfo*, TDictionary::EMemberSelection) /data/stephan/root/core/metacling/src/TClingDataMemberInfo.cxx:98:61. #2 0x7fb28311bc4e in TCling::DataMemberInfo_Factory(ClassInfo_t*, TDictionary::EMemberSelection) const /data/stephan/root/core/metacling/src/TCling.cxx:8507:35. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:8,deployability,build,builds,8,"In LHCb builds we're also seeing what @hageboeck reported. If the fix is not coming soon, perhaps it's worth it to add these to `etc/lsan-root.supp` as a temporary measure?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:164,energy efficiency,measur,measure,164,"In LHCb builds we're also seeing what @hageboeck reported. If the fix is not coming soon, perhaps it's worth it to add these to `etc/lsan-root.supp` as a temporary measure?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:10,deployability,build,builds,10,"> In LHCb builds we're also seeing what @hageboeck reported. If the fix is not coming soon, perhaps it's worth it to add these to `etc/lsan-root.supp` as a temporary measure? That one is actually fixed, but it might need backporting. https://github.com/root-project/root/commit/e6d16d66632a3f77b73b03c4547336f49a0cf2f0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:166,energy efficiency,measur,measure,166,"> In LHCb builds we're also seeing what @hageboeck reported. If the fix is not coming soon, perhaps it's worth it to add these to `etc/lsan-root.supp` as a temporary measure? That one is actually fixed, but it might need backporting. https://github.com/root-project/root/commit/e6d16d66632a3f77b73b03c4547336f49a0cf2f0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:3,deployability,updat,update,3,"An update from my side with ROOT master (as of June 8), there are much less warnings now. (right side is newer). ![image](https://user-images.githubusercontent.com/10653970/122217023-04195380-ce7b-11eb-8b68-c5994d17be6b.png). Attached the latest warnings. [valgrind.txt](https://github.com/root-project/root/files/6662915/valgrind.txt). Suggestion: a CI test could be added on GitHub to automatically check that there are 0 definitely lost bytes when opening and closing, like now. This way, one would know if a new commit 'creates' some leak.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:387,deployability,automat,automatically,387,"An update from my side with ROOT master (as of June 8), there are much less warnings now. (right side is newer). ![image](https://user-images.githubusercontent.com/10653970/122217023-04195380-ce7b-11eb-8b68-c5994d17be6b.png). Attached the latest warnings. [valgrind.txt](https://github.com/root-project/root/files/6662915/valgrind.txt). Suggestion: a CI test could be added on GitHub to automatically check that there are 0 definitely lost bytes when opening and closing, like now. This way, one would know if a new commit 'creates' some leak.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:3,safety,updat,update,3,"An update from my side with ROOT master (as of June 8), there are much less warnings now. (right side is newer). ![image](https://user-images.githubusercontent.com/10653970/122217023-04195380-ce7b-11eb-8b68-c5994d17be6b.png). Attached the latest warnings. [valgrind.txt](https://github.com/root-project/root/files/6662915/valgrind.txt). Suggestion: a CI test could be added on GitHub to automatically check that there are 0 definitely lost bytes when opening and closing, like now. This way, one would know if a new commit 'creates' some leak.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:354,safety,test,test,354,"An update from my side with ROOT master (as of June 8), there are much less warnings now. (right side is newer). ![image](https://user-images.githubusercontent.com/10653970/122217023-04195380-ce7b-11eb-8b68-c5994d17be6b.png). Attached the latest warnings. [valgrind.txt](https://github.com/root-project/root/files/6662915/valgrind.txt). Suggestion: a CI test could be added on GitHub to automatically check that there are 0 definitely lost bytes when opening and closing, like now. This way, one would know if a new commit 'creates' some leak.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:3,security,updat,update,3,"An update from my side with ROOT master (as of June 8), there are much less warnings now. (right side is newer). ![image](https://user-images.githubusercontent.com/10653970/122217023-04195380-ce7b-11eb-8b68-c5994d17be6b.png). Attached the latest warnings. [valgrind.txt](https://github.com/root-project/root/files/6662915/valgrind.txt). Suggestion: a CI test could be added on GitHub to automatically check that there are 0 definitely lost bytes when opening and closing, like now. This way, one would know if a new commit 'creates' some leak.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:354,testability,test,test,354,"An update from my side with ROOT master (as of June 8), there are much less warnings now. (right side is newer). ![image](https://user-images.githubusercontent.com/10653970/122217023-04195380-ce7b-11eb-8b68-c5994d17be6b.png). Attached the latest warnings. [valgrind.txt](https://github.com/root-project/root/files/6662915/valgrind.txt). Suggestion: a CI test could be added on GitHub to automatically check that there are 0 definitely lost bytes when opening and closing, like now. This way, one would know if a new commit 'creates' some leak.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:387,testability,automat,automatically,387,"An update from my side with ROOT master (as of June 8), there are much less warnings now. (right side is newer). ![image](https://user-images.githubusercontent.com/10653970/122217023-04195380-ce7b-11eb-8b68-c5994d17be6b.png). Attached the latest warnings. [valgrind.txt](https://github.com/root-project/root/files/6662915/valgrind.txt). Suggestion: a CI test could be added on GitHub to automatically check that there are 0 definitely lost bytes when opening and closing, like now. This way, one would know if a new commit 'creates' some leak.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:130,usability,user,user-images,130,"An update from my side with ROOT master (as of June 8), there are much less warnings now. (right side is newer). ![image](https://user-images.githubusercontent.com/10653970/122217023-04195380-ce7b-11eb-8b68-c5994d17be6b.png). Attached the latest warnings. [valgrind.txt](https://github.com/root-project/root/files/6662915/valgrind.txt). Suggestion: a CI test could be added on GitHub to automatically check that there are 0 definitely lost bytes when opening and closing, like now. This way, one would know if a new commit 'creates' some leak.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:1100,availability,error,errors,1100,"This is now fixed in ROOT master. Thanks a lot! ```. ==100870== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al. ==100870== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info. ==100870== Command: root.exe -n -l -b -q. ==100870== Parent PID: 25804. ==100870== . ==100870== . ==100870== HEAP SUMMARY:. ==100870== in use at exit: 49,467,260 bytes in 12,108 blocks. ==100870== total heap usage: 106,943 allocs, 94,835 frees, 148,855,407 bytes allocated. ==100870== . ==100870== LEAK SUMMARY:. ==100870== definitely lost: 0 bytes in 0 blocks. ==100870== indirectly lost: 0 bytes in 0 blocks. ==100870== possibly lost: 0 bytes in 0 blocks. ==100870== still reachable: 49,437,618 bytes in 11,658 blocks. ==100870== of which reachable via heuristic:. ==100870== multipleinheritance: 3,552 bytes in 6 blocks. ==100870== suppressed: 29,642 bytes in 450 blocks. ==100870== Reachable blocks (those to which a pointer was found) are not shown. ==100870== To see them, rerun with: --leak-check=full --show-leak-kinds=all. ==100870== . ==100870== For lists of detected and suppressed errors, rerun with: -s. ==100870== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 143 from 72). ```. Should we add a test in roottest for it now that it's clean? Such as:. https://honeytreelabs.com/posts/memory-checking-unit-tests/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:1135,availability,ERROR,ERROR,1135,"This is now fixed in ROOT master. Thanks a lot! ```. ==100870== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al. ==100870== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info. ==100870== Command: root.exe -n -l -b -q. ==100870== Parent PID: 25804. ==100870== . ==100870== . ==100870== HEAP SUMMARY:. ==100870== in use at exit: 49,467,260 bytes in 12,108 blocks. ==100870== total heap usage: 106,943 allocs, 94,835 frees, 148,855,407 bytes allocated. ==100870== . ==100870== LEAK SUMMARY:. ==100870== definitely lost: 0 bytes in 0 blocks. ==100870== indirectly lost: 0 bytes in 0 blocks. ==100870== possibly lost: 0 bytes in 0 blocks. ==100870== still reachable: 49,437,618 bytes in 11,658 blocks. ==100870== of which reachable via heuristic:. ==100870== multipleinheritance: 3,552 bytes in 6 blocks. ==100870== suppressed: 29,642 bytes in 450 blocks. ==100870== Reachable blocks (those to which a pointer was found) are not shown. ==100870== To see them, rerun with: --leak-check=full --show-leak-kinds=all. ==100870== . ==100870== For lists of detected and suppressed errors, rerun with: -s. ==100870== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 143 from 72). ```. Should we add a test in roottest for it now that it's clean? Such as:. https://honeytreelabs.com/posts/memory-checking-unit-tests/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:1152,availability,error,errors,1152,"This is now fixed in ROOT master. Thanks a lot! ```. ==100870== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al. ==100870== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info. ==100870== Command: root.exe -n -l -b -q. ==100870== Parent PID: 25804. ==100870== . ==100870== . ==100870== HEAP SUMMARY:. ==100870== in use at exit: 49,467,260 bytes in 12,108 blocks. ==100870== total heap usage: 106,943 allocs, 94,835 frees, 148,855,407 bytes allocated. ==100870== . ==100870== LEAK SUMMARY:. ==100870== definitely lost: 0 bytes in 0 blocks. ==100870== indirectly lost: 0 bytes in 0 blocks. ==100870== possibly lost: 0 bytes in 0 blocks. ==100870== still reachable: 49,437,618 bytes in 11,658 blocks. ==100870== of which reachable via heuristic:. ==100870== multipleinheritance: 3,552 bytes in 6 blocks. ==100870== suppressed: 29,642 bytes in 450 blocks. ==100870== Reachable blocks (those to which a pointer was found) are not shown. ==100870== To see them, rerun with: --leak-check=full --show-leak-kinds=all. ==100870== . ==100870== For lists of detected and suppressed errors, rerun with: -s. ==100870== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 143 from 72). ```. Should we add a test in roottest for it now that it's clean? Such as:. https://honeytreelabs.com/posts/memory-checking-unit-tests/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:430,energy efficiency,alloc,allocs,430,"This is now fixed in ROOT master. Thanks a lot! ```. ==100870== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al. ==100870== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info. ==100870== Command: root.exe -n -l -b -q. ==100870== Parent PID: 25804. ==100870== . ==100870== . ==100870== HEAP SUMMARY:. ==100870== in use at exit: 49,467,260 bytes in 12,108 blocks. ==100870== total heap usage: 106,943 allocs, 94,835 frees, 148,855,407 bytes allocated. ==100870== . ==100870== LEAK SUMMARY:. ==100870== definitely lost: 0 bytes in 0 blocks. ==100870== indirectly lost: 0 bytes in 0 blocks. ==100870== possibly lost: 0 bytes in 0 blocks. ==100870== still reachable: 49,437,618 bytes in 11,658 blocks. ==100870== of which reachable via heuristic:. ==100870== multipleinheritance: 3,552 bytes in 6 blocks. ==100870== suppressed: 29,642 bytes in 450 blocks. ==100870== Reachable blocks (those to which a pointer was found) are not shown. ==100870== To see them, rerun with: --leak-check=full --show-leak-kinds=all. ==100870== . ==100870== For lists of detected and suppressed errors, rerun with: -s. ==100870== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 143 from 72). ```. Should we add a test in roottest for it now that it's clean? Such as:. https://honeytreelabs.com/posts/memory-checking-unit-tests/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:470,energy efficiency,alloc,allocated,470,"This is now fixed in ROOT master. Thanks a lot! ```. ==100870== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al. ==100870== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info. ==100870== Command: root.exe -n -l -b -q. ==100870== Parent PID: 25804. ==100870== . ==100870== . ==100870== HEAP SUMMARY:. ==100870== in use at exit: 49,467,260 bytes in 12,108 blocks. ==100870== total heap usage: 106,943 allocs, 94,835 frees, 148,855,407 bytes allocated. ==100870== . ==100870== LEAK SUMMARY:. ==100870== definitely lost: 0 bytes in 0 blocks. ==100870== indirectly lost: 0 bytes in 0 blocks. ==100870== possibly lost: 0 bytes in 0 blocks. ==100870== still reachable: 49,437,618 bytes in 11,658 blocks. ==100870== of which reachable via heuristic:. ==100870== multipleinheritance: 3,552 bytes in 6 blocks. ==100870== suppressed: 29,642 bytes in 450 blocks. ==100870== Reachable blocks (those to which a pointer was found) are not shown. ==100870== To see them, rerun with: --leak-check=full --show-leak-kinds=all. ==100870== . ==100870== For lists of detected and suppressed errors, rerun with: -s. ==100870== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 143 from 72). ```. Should we add a test in roottest for it now that it's clean? Such as:. https://honeytreelabs.com/posts/memory-checking-unit-tests/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:1100,performance,error,errors,1100,"This is now fixed in ROOT master. Thanks a lot! ```. ==100870== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al. ==100870== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info. ==100870== Command: root.exe -n -l -b -q. ==100870== Parent PID: 25804. ==100870== . ==100870== . ==100870== HEAP SUMMARY:. ==100870== in use at exit: 49,467,260 bytes in 12,108 blocks. ==100870== total heap usage: 106,943 allocs, 94,835 frees, 148,855,407 bytes allocated. ==100870== . ==100870== LEAK SUMMARY:. ==100870== definitely lost: 0 bytes in 0 blocks. ==100870== indirectly lost: 0 bytes in 0 blocks. ==100870== possibly lost: 0 bytes in 0 blocks. ==100870== still reachable: 49,437,618 bytes in 11,658 blocks. ==100870== of which reachable via heuristic:. ==100870== multipleinheritance: 3,552 bytes in 6 blocks. ==100870== suppressed: 29,642 bytes in 450 blocks. ==100870== Reachable blocks (those to which a pointer was found) are not shown. ==100870== To see them, rerun with: --leak-check=full --show-leak-kinds=all. ==100870== . ==100870== For lists of detected and suppressed errors, rerun with: -s. ==100870== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 143 from 72). ```. Should we add a test in roottest for it now that it's clean? Such as:. https://honeytreelabs.com/posts/memory-checking-unit-tests/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:1135,performance,ERROR,ERROR,1135,"This is now fixed in ROOT master. Thanks a lot! ```. ==100870== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al. ==100870== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info. ==100870== Command: root.exe -n -l -b -q. ==100870== Parent PID: 25804. ==100870== . ==100870== . ==100870== HEAP SUMMARY:. ==100870== in use at exit: 49,467,260 bytes in 12,108 blocks. ==100870== total heap usage: 106,943 allocs, 94,835 frees, 148,855,407 bytes allocated. ==100870== . ==100870== LEAK SUMMARY:. ==100870== definitely lost: 0 bytes in 0 blocks. ==100870== indirectly lost: 0 bytes in 0 blocks. ==100870== possibly lost: 0 bytes in 0 blocks. ==100870== still reachable: 49,437,618 bytes in 11,658 blocks. ==100870== of which reachable via heuristic:. ==100870== multipleinheritance: 3,552 bytes in 6 blocks. ==100870== suppressed: 29,642 bytes in 450 blocks. ==100870== Reachable blocks (those to which a pointer was found) are not shown. ==100870== To see them, rerun with: --leak-check=full --show-leak-kinds=all. ==100870== . ==100870== For lists of detected and suppressed errors, rerun with: -s. ==100870== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 143 from 72). ```. Should we add a test in roottest for it now that it's clean? Such as:. https://honeytreelabs.com/posts/memory-checking-unit-tests/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:1152,performance,error,errors,1152,"This is now fixed in ROOT master. Thanks a lot! ```. ==100870== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al. ==100870== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info. ==100870== Command: root.exe -n -l -b -q. ==100870== Parent PID: 25804. ==100870== . ==100870== . ==100870== HEAP SUMMARY:. ==100870== in use at exit: 49,467,260 bytes in 12,108 blocks. ==100870== total heap usage: 106,943 allocs, 94,835 frees, 148,855,407 bytes allocated. ==100870== . ==100870== LEAK SUMMARY:. ==100870== definitely lost: 0 bytes in 0 blocks. ==100870== indirectly lost: 0 bytes in 0 blocks. ==100870== possibly lost: 0 bytes in 0 blocks. ==100870== still reachable: 49,437,618 bytes in 11,658 blocks. ==100870== of which reachable via heuristic:. ==100870== multipleinheritance: 3,552 bytes in 6 blocks. ==100870== suppressed: 29,642 bytes in 450 blocks. ==100870== Reachable blocks (those to which a pointer was found) are not shown. ==100870== To see them, rerun with: --leak-check=full --show-leak-kinds=all. ==100870== . ==100870== For lists of detected and suppressed errors, rerun with: -s. ==100870== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 143 from 72). ```. Should we add a test in roottest for it now that it's clean? Such as:. https://honeytreelabs.com/posts/memory-checking-unit-tests/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:1310,performance,memor,memory-checking-unit-tests,1310,"This is now fixed in ROOT master. Thanks a lot! ```. ==100870== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al. ==100870== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info. ==100870== Command: root.exe -n -l -b -q. ==100870== Parent PID: 25804. ==100870== . ==100870== . ==100870== HEAP SUMMARY:. ==100870== in use at exit: 49,467,260 bytes in 12,108 blocks. ==100870== total heap usage: 106,943 allocs, 94,835 frees, 148,855,407 bytes allocated. ==100870== . ==100870== LEAK SUMMARY:. ==100870== definitely lost: 0 bytes in 0 blocks. ==100870== indirectly lost: 0 bytes in 0 blocks. ==100870== possibly lost: 0 bytes in 0 blocks. ==100870== still reachable: 49,437,618 bytes in 11,658 blocks. ==100870== of which reachable via heuristic:. ==100870== multipleinheritance: 3,552 bytes in 6 blocks. ==100870== suppressed: 29,642 bytes in 450 blocks. ==100870== Reachable blocks (those to which a pointer was found) are not shown. ==100870== To see them, rerun with: --leak-check=full --show-leak-kinds=all. ==100870== . ==100870== For lists of detected and suppressed errors, rerun with: -s. ==100870== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 143 from 72). ```. Should we add a test in roottest for it now that it's clean? Such as:. https://honeytreelabs.com/posts/memory-checking-unit-tests/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:1076,safety,detect,detected,1076,"This is now fixed in ROOT master. Thanks a lot! ```. ==100870== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al. ==100870== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info. ==100870== Command: root.exe -n -l -b -q. ==100870== Parent PID: 25804. ==100870== . ==100870== . ==100870== HEAP SUMMARY:. ==100870== in use at exit: 49,467,260 bytes in 12,108 blocks. ==100870== total heap usage: 106,943 allocs, 94,835 frees, 148,855,407 bytes allocated. ==100870== . ==100870== LEAK SUMMARY:. ==100870== definitely lost: 0 bytes in 0 blocks. ==100870== indirectly lost: 0 bytes in 0 blocks. ==100870== possibly lost: 0 bytes in 0 blocks. ==100870== still reachable: 49,437,618 bytes in 11,658 blocks. ==100870== of which reachable via heuristic:. ==100870== multipleinheritance: 3,552 bytes in 6 blocks. ==100870== suppressed: 29,642 bytes in 450 blocks. ==100870== Reachable blocks (those to which a pointer was found) are not shown. ==100870== To see them, rerun with: --leak-check=full --show-leak-kinds=all. ==100870== . ==100870== For lists of detected and suppressed errors, rerun with: -s. ==100870== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 143 from 72). ```. Should we add a test in roottest for it now that it's clean? Such as:. https://honeytreelabs.com/posts/memory-checking-unit-tests/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:1100,safety,error,errors,1100,"This is now fixed in ROOT master. Thanks a lot! ```. ==100870== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al. ==100870== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info. ==100870== Command: root.exe -n -l -b -q. ==100870== Parent PID: 25804. ==100870== . ==100870== . ==100870== HEAP SUMMARY:. ==100870== in use at exit: 49,467,260 bytes in 12,108 blocks. ==100870== total heap usage: 106,943 allocs, 94,835 frees, 148,855,407 bytes allocated. ==100870== . ==100870== LEAK SUMMARY:. ==100870== definitely lost: 0 bytes in 0 blocks. ==100870== indirectly lost: 0 bytes in 0 blocks. ==100870== possibly lost: 0 bytes in 0 blocks. ==100870== still reachable: 49,437,618 bytes in 11,658 blocks. ==100870== of which reachable via heuristic:. ==100870== multipleinheritance: 3,552 bytes in 6 blocks. ==100870== suppressed: 29,642 bytes in 450 blocks. ==100870== Reachable blocks (those to which a pointer was found) are not shown. ==100870== To see them, rerun with: --leak-check=full --show-leak-kinds=all. ==100870== . ==100870== For lists of detected and suppressed errors, rerun with: -s. ==100870== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 143 from 72). ```. Should we add a test in roottest for it now that it's clean? Such as:. https://honeytreelabs.com/posts/memory-checking-unit-tests/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:1135,safety,ERROR,ERROR,1135,"This is now fixed in ROOT master. Thanks a lot! ```. ==100870== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al. ==100870== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info. ==100870== Command: root.exe -n -l -b -q. ==100870== Parent PID: 25804. ==100870== . ==100870== . ==100870== HEAP SUMMARY:. ==100870== in use at exit: 49,467,260 bytes in 12,108 blocks. ==100870== total heap usage: 106,943 allocs, 94,835 frees, 148,855,407 bytes allocated. ==100870== . ==100870== LEAK SUMMARY:. ==100870== definitely lost: 0 bytes in 0 blocks. ==100870== indirectly lost: 0 bytes in 0 blocks. ==100870== possibly lost: 0 bytes in 0 blocks. ==100870== still reachable: 49,437,618 bytes in 11,658 blocks. ==100870== of which reachable via heuristic:. ==100870== multipleinheritance: 3,552 bytes in 6 blocks. ==100870== suppressed: 29,642 bytes in 450 blocks. ==100870== Reachable blocks (those to which a pointer was found) are not shown. ==100870== To see them, rerun with: --leak-check=full --show-leak-kinds=all. ==100870== . ==100870== For lists of detected and suppressed errors, rerun with: -s. ==100870== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 143 from 72). ```. Should we add a test in roottest for it now that it's clean? Such as:. https://honeytreelabs.com/posts/memory-checking-unit-tests/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:1152,safety,error,errors,1152,"This is now fixed in ROOT master. Thanks a lot! ```. ==100870== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al. ==100870== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info. ==100870== Command: root.exe -n -l -b -q. ==100870== Parent PID: 25804. ==100870== . ==100870== . ==100870== HEAP SUMMARY:. ==100870== in use at exit: 49,467,260 bytes in 12,108 blocks. ==100870== total heap usage: 106,943 allocs, 94,835 frees, 148,855,407 bytes allocated. ==100870== . ==100870== LEAK SUMMARY:. ==100870== definitely lost: 0 bytes in 0 blocks. ==100870== indirectly lost: 0 bytes in 0 blocks. ==100870== possibly lost: 0 bytes in 0 blocks. ==100870== still reachable: 49,437,618 bytes in 11,658 blocks. ==100870== of which reachable via heuristic:. ==100870== multipleinheritance: 3,552 bytes in 6 blocks. ==100870== suppressed: 29,642 bytes in 450 blocks. ==100870== Reachable blocks (those to which a pointer was found) are not shown. ==100870== To see them, rerun with: --leak-check=full --show-leak-kinds=all. ==100870== . ==100870== For lists of detected and suppressed errors, rerun with: -s. ==100870== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 143 from 72). ```. Should we add a test in roottest for it now that it's clean? Such as:. https://honeytreelabs.com/posts/memory-checking-unit-tests/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:1223,safety,test,test,1223,"This is now fixed in ROOT master. Thanks a lot! ```. ==100870== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al. ==100870== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info. ==100870== Command: root.exe -n -l -b -q. ==100870== Parent PID: 25804. ==100870== . ==100870== . ==100870== HEAP SUMMARY:. ==100870== in use at exit: 49,467,260 bytes in 12,108 blocks. ==100870== total heap usage: 106,943 allocs, 94,835 frees, 148,855,407 bytes allocated. ==100870== . ==100870== LEAK SUMMARY:. ==100870== definitely lost: 0 bytes in 0 blocks. ==100870== indirectly lost: 0 bytes in 0 blocks. ==100870== possibly lost: 0 bytes in 0 blocks. ==100870== still reachable: 49,437,618 bytes in 11,658 blocks. ==100870== of which reachable via heuristic:. ==100870== multipleinheritance: 3,552 bytes in 6 blocks. ==100870== suppressed: 29,642 bytes in 450 blocks. ==100870== Reachable blocks (those to which a pointer was found) are not shown. ==100870== To see them, rerun with: --leak-check=full --show-leak-kinds=all. ==100870== . ==100870== For lists of detected and suppressed errors, rerun with: -s. ==100870== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 143 from 72). ```. Should we add a test in roottest for it now that it's clean? Such as:. https://honeytreelabs.com/posts/memory-checking-unit-tests/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:1331,safety,test,tests,1331,"This is now fixed in ROOT master. Thanks a lot! ```. ==100870== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al. ==100870== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info. ==100870== Command: root.exe -n -l -b -q. ==100870== Parent PID: 25804. ==100870== . ==100870== . ==100870== HEAP SUMMARY:. ==100870== in use at exit: 49,467,260 bytes in 12,108 blocks. ==100870== total heap usage: 106,943 allocs, 94,835 frees, 148,855,407 bytes allocated. ==100870== . ==100870== LEAK SUMMARY:. ==100870== definitely lost: 0 bytes in 0 blocks. ==100870== indirectly lost: 0 bytes in 0 blocks. ==100870== possibly lost: 0 bytes in 0 blocks. ==100870== still reachable: 49,437,618 bytes in 11,658 blocks. ==100870== of which reachable via heuristic:. ==100870== multipleinheritance: 3,552 bytes in 6 blocks. ==100870== suppressed: 29,642 bytes in 450 blocks. ==100870== Reachable blocks (those to which a pointer was found) are not shown. ==100870== To see them, rerun with: --leak-check=full --show-leak-kinds=all. ==100870== . ==100870== For lists of detected and suppressed errors, rerun with: -s. ==100870== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 143 from 72). ```. Should we add a test in roottest for it now that it's clean? Such as:. https://honeytreelabs.com/posts/memory-checking-unit-tests/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:1076,security,detect,detected,1076,"This is now fixed in ROOT master. Thanks a lot! ```. ==100870== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al. ==100870== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info. ==100870== Command: root.exe -n -l -b -q. ==100870== Parent PID: 25804. ==100870== . ==100870== . ==100870== HEAP SUMMARY:. ==100870== in use at exit: 49,467,260 bytes in 12,108 blocks. ==100870== total heap usage: 106,943 allocs, 94,835 frees, 148,855,407 bytes allocated. ==100870== . ==100870== LEAK SUMMARY:. ==100870== definitely lost: 0 bytes in 0 blocks. ==100870== indirectly lost: 0 bytes in 0 blocks. ==100870== possibly lost: 0 bytes in 0 blocks. ==100870== still reachable: 49,437,618 bytes in 11,658 blocks. ==100870== of which reachable via heuristic:. ==100870== multipleinheritance: 3,552 bytes in 6 blocks. ==100870== suppressed: 29,642 bytes in 450 blocks. ==100870== Reachable blocks (those to which a pointer was found) are not shown. ==100870== To see them, rerun with: --leak-check=full --show-leak-kinds=all. ==100870== . ==100870== For lists of detected and suppressed errors, rerun with: -s. ==100870== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 143 from 72). ```. Should we add a test in roottest for it now that it's clean? Such as:. https://honeytreelabs.com/posts/memory-checking-unit-tests/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:1166,testability,context,contexts,1166,"This is now fixed in ROOT master. Thanks a lot! ```. ==100870== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al. ==100870== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info. ==100870== Command: root.exe -n -l -b -q. ==100870== Parent PID: 25804. ==100870== . ==100870== . ==100870== HEAP SUMMARY:. ==100870== in use at exit: 49,467,260 bytes in 12,108 blocks. ==100870== total heap usage: 106,943 allocs, 94,835 frees, 148,855,407 bytes allocated. ==100870== . ==100870== LEAK SUMMARY:. ==100870== definitely lost: 0 bytes in 0 blocks. ==100870== indirectly lost: 0 bytes in 0 blocks. ==100870== possibly lost: 0 bytes in 0 blocks. ==100870== still reachable: 49,437,618 bytes in 11,658 blocks. ==100870== of which reachable via heuristic:. ==100870== multipleinheritance: 3,552 bytes in 6 blocks. ==100870== suppressed: 29,642 bytes in 450 blocks. ==100870== Reachable blocks (those to which a pointer was found) are not shown. ==100870== To see them, rerun with: --leak-check=full --show-leak-kinds=all. ==100870== . ==100870== For lists of detected and suppressed errors, rerun with: -s. ==100870== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 143 from 72). ```. Should we add a test in roottest for it now that it's clean? Such as:. https://honeytreelabs.com/posts/memory-checking-unit-tests/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:1223,testability,test,test,1223,"This is now fixed in ROOT master. Thanks a lot! ```. ==100870== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al. ==100870== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info. ==100870== Command: root.exe -n -l -b -q. ==100870== Parent PID: 25804. ==100870== . ==100870== . ==100870== HEAP SUMMARY:. ==100870== in use at exit: 49,467,260 bytes in 12,108 blocks. ==100870== total heap usage: 106,943 allocs, 94,835 frees, 148,855,407 bytes allocated. ==100870== . ==100870== LEAK SUMMARY:. ==100870== definitely lost: 0 bytes in 0 blocks. ==100870== indirectly lost: 0 bytes in 0 blocks. ==100870== possibly lost: 0 bytes in 0 blocks. ==100870== still reachable: 49,437,618 bytes in 11,658 blocks. ==100870== of which reachable via heuristic:. ==100870== multipleinheritance: 3,552 bytes in 6 blocks. ==100870== suppressed: 29,642 bytes in 450 blocks. ==100870== Reachable blocks (those to which a pointer was found) are not shown. ==100870== To see them, rerun with: --leak-check=full --show-leak-kinds=all. ==100870== . ==100870== For lists of detected and suppressed errors, rerun with: -s. ==100870== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 143 from 72). ```. Should we add a test in roottest for it now that it's clean? Such as:. https://honeytreelabs.com/posts/memory-checking-unit-tests/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:1326,testability,unit,unit-tests,1326,"This is now fixed in ROOT master. Thanks a lot! ```. ==100870== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al. ==100870== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info. ==100870== Command: root.exe -n -l -b -q. ==100870== Parent PID: 25804. ==100870== . ==100870== . ==100870== HEAP SUMMARY:. ==100870== in use at exit: 49,467,260 bytes in 12,108 blocks. ==100870== total heap usage: 106,943 allocs, 94,835 frees, 148,855,407 bytes allocated. ==100870== . ==100870== LEAK SUMMARY:. ==100870== definitely lost: 0 bytes in 0 blocks. ==100870== indirectly lost: 0 bytes in 0 blocks. ==100870== possibly lost: 0 bytes in 0 blocks. ==100870== still reachable: 49,437,618 bytes in 11,658 blocks. ==100870== of which reachable via heuristic:. ==100870== multipleinheritance: 3,552 bytes in 6 blocks. ==100870== suppressed: 29,642 bytes in 450 blocks. ==100870== Reachable blocks (those to which a pointer was found) are not shown. ==100870== To see them, rerun with: --leak-check=full --show-leak-kinds=all. ==100870== . ==100870== For lists of detected and suppressed errors, rerun with: -s. ==100870== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 143 from 72). ```. Should we add a test in roottest for it now that it's clean? Such as:. https://honeytreelabs.com/posts/memory-checking-unit-tests/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:218,usability,Command,Command,218,"This is now fixed in ROOT master. Thanks a lot! ```. ==100870== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al. ==100870== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info. ==100870== Command: root.exe -n -l -b -q. ==100870== Parent PID: 25804. ==100870== . ==100870== . ==100870== HEAP SUMMARY:. ==100870== in use at exit: 49,467,260 bytes in 12,108 blocks. ==100870== total heap usage: 106,943 allocs, 94,835 frees, 148,855,407 bytes allocated. ==100870== . ==100870== LEAK SUMMARY:. ==100870== definitely lost: 0 bytes in 0 blocks. ==100870== indirectly lost: 0 bytes in 0 blocks. ==100870== possibly lost: 0 bytes in 0 blocks. ==100870== still reachable: 49,437,618 bytes in 11,658 blocks. ==100870== of which reachable via heuristic:. ==100870== multipleinheritance: 3,552 bytes in 6 blocks. ==100870== suppressed: 29,642 bytes in 450 blocks. ==100870== Reachable blocks (those to which a pointer was found) are not shown. ==100870== To see them, rerun with: --leak-check=full --show-leak-kinds=all. ==100870== . ==100870== For lists of detected and suppressed errors, rerun with: -s. ==100870== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 143 from 72). ```. Should we add a test in roottest for it now that it's clean? Such as:. https://honeytreelabs.com/posts/memory-checking-unit-tests/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:1100,usability,error,errors,1100,"This is now fixed in ROOT master. Thanks a lot! ```. ==100870== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al. ==100870== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info. ==100870== Command: root.exe -n -l -b -q. ==100870== Parent PID: 25804. ==100870== . ==100870== . ==100870== HEAP SUMMARY:. ==100870== in use at exit: 49,467,260 bytes in 12,108 blocks. ==100870== total heap usage: 106,943 allocs, 94,835 frees, 148,855,407 bytes allocated. ==100870== . ==100870== LEAK SUMMARY:. ==100870== definitely lost: 0 bytes in 0 blocks. ==100870== indirectly lost: 0 bytes in 0 blocks. ==100870== possibly lost: 0 bytes in 0 blocks. ==100870== still reachable: 49,437,618 bytes in 11,658 blocks. ==100870== of which reachable via heuristic:. ==100870== multipleinheritance: 3,552 bytes in 6 blocks. ==100870== suppressed: 29,642 bytes in 450 blocks. ==100870== Reachable blocks (those to which a pointer was found) are not shown. ==100870== To see them, rerun with: --leak-check=full --show-leak-kinds=all. ==100870== . ==100870== For lists of detected and suppressed errors, rerun with: -s. ==100870== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 143 from 72). ```. Should we add a test in roottest for it now that it's clean? Such as:. https://honeytreelabs.com/posts/memory-checking-unit-tests/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:1135,usability,ERROR,ERROR,1135,"This is now fixed in ROOT master. Thanks a lot! ```. ==100870== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al. ==100870== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info. ==100870== Command: root.exe -n -l -b -q. ==100870== Parent PID: 25804. ==100870== . ==100870== . ==100870== HEAP SUMMARY:. ==100870== in use at exit: 49,467,260 bytes in 12,108 blocks. ==100870== total heap usage: 106,943 allocs, 94,835 frees, 148,855,407 bytes allocated. ==100870== . ==100870== LEAK SUMMARY:. ==100870== definitely lost: 0 bytes in 0 blocks. ==100870== indirectly lost: 0 bytes in 0 blocks. ==100870== possibly lost: 0 bytes in 0 blocks. ==100870== still reachable: 49,437,618 bytes in 11,658 blocks. ==100870== of which reachable via heuristic:. ==100870== multipleinheritance: 3,552 bytes in 6 blocks. ==100870== suppressed: 29,642 bytes in 450 blocks. ==100870== Reachable blocks (those to which a pointer was found) are not shown. ==100870== To see them, rerun with: --leak-check=full --show-leak-kinds=all. ==100870== . ==100870== For lists of detected and suppressed errors, rerun with: -s. ==100870== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 143 from 72). ```. Should we add a test in roottest for it now that it's clean? Such as:. https://honeytreelabs.com/posts/memory-checking-unit-tests/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:1152,usability,error,errors,1152,"This is now fixed in ROOT master. Thanks a lot! ```. ==100870== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al. ==100870== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info. ==100870== Command: root.exe -n -l -b -q. ==100870== Parent PID: 25804. ==100870== . ==100870== . ==100870== HEAP SUMMARY:. ==100870== in use at exit: 49,467,260 bytes in 12,108 blocks. ==100870== total heap usage: 106,943 allocs, 94,835 frees, 148,855,407 bytes allocated. ==100870== . ==100870== LEAK SUMMARY:. ==100870== definitely lost: 0 bytes in 0 blocks. ==100870== indirectly lost: 0 bytes in 0 blocks. ==100870== possibly lost: 0 bytes in 0 blocks. ==100870== still reachable: 49,437,618 bytes in 11,658 blocks. ==100870== of which reachable via heuristic:. ==100870== multipleinheritance: 3,552 bytes in 6 blocks. ==100870== suppressed: 29,642 bytes in 450 blocks. ==100870== Reachable blocks (those to which a pointer was found) are not shown. ==100870== To see them, rerun with: --leak-check=full --show-leak-kinds=all. ==100870== . ==100870== For lists of detected and suppressed errors, rerun with: -s. ==100870== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 143 from 72). ```. Should we add a test in roottest for it now that it's clean? Such as:. https://honeytreelabs.com/posts/memory-checking-unit-tests/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:1310,usability,memor,memory-checking-unit-tests,1310,"This is now fixed in ROOT master. Thanks a lot! ```. ==100870== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al. ==100870== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info. ==100870== Command: root.exe -n -l -b -q. ==100870== Parent PID: 25804. ==100870== . ==100870== . ==100870== HEAP SUMMARY:. ==100870== in use at exit: 49,467,260 bytes in 12,108 blocks. ==100870== total heap usage: 106,943 allocs, 94,835 frees, 148,855,407 bytes allocated. ==100870== . ==100870== LEAK SUMMARY:. ==100870== definitely lost: 0 bytes in 0 blocks. ==100870== indirectly lost: 0 bytes in 0 blocks. ==100870== possibly lost: 0 bytes in 0 blocks. ==100870== still reachable: 49,437,618 bytes in 11,658 blocks. ==100870== of which reachable via heuristic:. ==100870== multipleinheritance: 3,552 bytes in 6 blocks. ==100870== suppressed: 29,642 bytes in 450 blocks. ==100870== Reachable blocks (those to which a pointer was found) are not shown. ==100870== To see them, rerun with: --leak-check=full --show-leak-kinds=all. ==100870== . ==100870== For lists of detected and suppressed errors, rerun with: -s. ==100870== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 143 from 72). ```. Should we add a test in roottest for it now that it's clean? Such as:. https://honeytreelabs.com/posts/memory-checking-unit-tests/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:74,deployability,automat,automated,74,"I close the issue, leaving the door open to discussing whether we need an automated procedure to check for leaks and potentially, more in general, other kinds of sanitisers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:162,safety,sanit,sanitisers,162,"I close the issue, leaving the door open to discussing whether we need an automated procedure to check for leaks and potentially, more in general, other kinds of sanitisers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:162,security,sanit,sanitisers,162,"I close the issue, leaving the door open to discussing whether we need an automated procedure to check for leaks and potentially, more in general, other kinds of sanitisers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:74,testability,automat,automated,74,"I close the issue, leaving the door open to discussing whether we need an automated procedure to check for leaks and potentially, more in general, other kinds of sanitisers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/issues/7207:2,usability,close,close,2,"I close the issue, leaving the door open to discussing whether we need an automated procedure to check for leaks and potentially, more in general, other kinds of sanitisers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7207
https://github.com/root-project/root/pull/7208:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:96,availability,failur,failures,96,@AdvaitDhingra please fork also [roottest](https://github.com/root-project/roottest) to prevent failures (timeout) on Windows nodes. Thanks,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:96,deployability,fail,failures,96,@AdvaitDhingra please fork also [roottest](https://github.com/root-project/roottest) to prevent failures (timeout) on Windows nodes. Thanks,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:96,performance,failur,failures,96,@AdvaitDhingra please fork also [roottest](https://github.com/root-project/roottest) to prevent failures (timeout) on Windows nodes. Thanks,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:106,performance,time,timeout,106,@AdvaitDhingra please fork also [roottest](https://github.com/root-project/roottest) to prevent failures (timeout) on Windows nodes. Thanks,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:96,reliability,fail,failures,96,@AdvaitDhingra please fork also [roottest](https://github.com/root-project/roottest) to prevent failures (timeout) on Windows nodes. Thanks,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:88,safety,prevent,prevent,88,@AdvaitDhingra please fork also [roottest](https://github.com/root-project/roottest) to prevent failures (timeout) on Windows nodes. Thanks,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:106,safety,timeout,timeout,106,@AdvaitDhingra please fork also [roottest](https://github.com/root-project/roottest) to prevent failures (timeout) on Windows nodes. Thanks,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:88,security,preven,prevent,88,@AdvaitDhingra please fork also [roottest](https://github.com/root-project/roottest) to prevent failures (timeout) on Windows nodes. Thanks,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:98,availability,failur,failures,98,"> @AdvaitDhingra please fork also [roottest](https://github.com/root-project/roottest) to prevent failures (timeout) on Windows nodes. Thanks. Okay, I forked it. How can I test my changes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:98,deployability,fail,failures,98,"> @AdvaitDhingra please fork also [roottest](https://github.com/root-project/roottest) to prevent failures (timeout) on Windows nodes. Thanks. Okay, I forked it. How can I test my changes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:98,performance,failur,failures,98,"> @AdvaitDhingra please fork also [roottest](https://github.com/root-project/roottest) to prevent failures (timeout) on Windows nodes. Thanks. Okay, I forked it. How can I test my changes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:108,performance,time,timeout,108,"> @AdvaitDhingra please fork also [roottest](https://github.com/root-project/roottest) to prevent failures (timeout) on Windows nodes. Thanks. Okay, I forked it. How can I test my changes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:98,reliability,fail,failures,98,"> @AdvaitDhingra please fork also [roottest](https://github.com/root-project/roottest) to prevent failures (timeout) on Windows nodes. Thanks. Okay, I forked it. How can I test my changes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:90,safety,prevent,prevent,90,"> @AdvaitDhingra please fork also [roottest](https://github.com/root-project/roottest) to prevent failures (timeout) on Windows nodes. Thanks. Okay, I forked it. How can I test my changes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:108,safety,timeout,timeout,108,"> @AdvaitDhingra please fork also [roottest](https://github.com/root-project/roottest) to prevent failures (timeout) on Windows nodes. Thanks. Okay, I forked it. How can I test my changes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:172,safety,test,test,172,"> @AdvaitDhingra please fork also [roottest](https://github.com/root-project/roottest) to prevent failures (timeout) on Windows nodes. Thanks. Okay, I forked it. How can I test my changes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:90,security,preven,prevent,90,"> @AdvaitDhingra please fork also [roottest](https://github.com/root-project/roottest) to prevent failures (timeout) on Windows nodes. Thanks. Okay, I forked it. How can I test my changes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:172,testability,test,test,172,"> @AdvaitDhingra please fork also [roottest](https://github.com/root-project/roottest) to prevent failures (timeout) on Windows nodes. Thanks. Okay, I forked it. How can I test my changes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:10,deployability,version,version,10,The linux version looks good. The MacOS and Windows (@bellenot might be able to help with that version) needs to be updated too. In particular in this PR `MemInfo_t::fMemAvailalble` is not initialized (as a random value) on those 2 platforms.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:95,deployability,version,version,95,The linux version looks good. The MacOS and Windows (@bellenot might be able to help with that version) needs to be updated too. In particular in this PR `MemInfo_t::fMemAvailalble` is not initialized (as a random value) on those 2 platforms.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:116,deployability,updat,updated,116,The linux version looks good. The MacOS and Windows (@bellenot might be able to help with that version) needs to be updated too. In particular in this PR `MemInfo_t::fMemAvailalble` is not initialized (as a random value) on those 2 platforms.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:10,integrability,version,version,10,The linux version looks good. The MacOS and Windows (@bellenot might be able to help with that version) needs to be updated too. In particular in this PR `MemInfo_t::fMemAvailalble` is not initialized (as a random value) on those 2 platforms.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:95,integrability,version,version,95,The linux version looks good. The MacOS and Windows (@bellenot might be able to help with that version) needs to be updated too. In particular in this PR `MemInfo_t::fMemAvailalble` is not initialized (as a random value) on those 2 platforms.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:232,interoperability,platform,platforms,232,The linux version looks good. The MacOS and Windows (@bellenot might be able to help with that version) needs to be updated too. In particular in this PR `MemInfo_t::fMemAvailalble` is not initialized (as a random value) on those 2 platforms.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:10,modifiability,version,version,10,The linux version looks good. The MacOS and Windows (@bellenot might be able to help with that version) needs to be updated too. In particular in this PR `MemInfo_t::fMemAvailalble` is not initialized (as a random value) on those 2 platforms.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:95,modifiability,version,version,95,The linux version looks good. The MacOS and Windows (@bellenot might be able to help with that version) needs to be updated too. In particular in this PR `MemInfo_t::fMemAvailalble` is not initialized (as a random value) on those 2 platforms.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:116,safety,updat,updated,116,The linux version looks good. The MacOS and Windows (@bellenot might be able to help with that version) needs to be updated too. In particular in this PR `MemInfo_t::fMemAvailalble` is not initialized (as a random value) on those 2 platforms.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:116,security,updat,updated,116,The linux version looks good. The MacOS and Windows (@bellenot might be able to help with that version) needs to be updated too. In particular in this PR `MemInfo_t::fMemAvailalble` is not initialized (as a random value) on those 2 platforms.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:80,usability,help,help,80,The linux version looks good. The MacOS and Windows (@bellenot might be able to help with that version) needs to be updated too. In particular in this PR `MemInfo_t::fMemAvailalble` is not initialized (as a random value) on those 2 platforms.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:685,availability,avail,available,685,"> The linux version looks good. The MacOS and Windows (@bellenot might be able to help with that version) needs to be updated too. In particular in this PR `MemInfo_t::fMemAvailalble` is not initialized (as a random value) on those 2 platforms. @pcanal I think `MemInfo_t::fMemAvailalble` should be initialized in `TSystem.cxx`, since it is declared in `TSystem.h`. ~~My question is: Is it needed at all on Windows? We don't calculate the memory status the same in `TWinNTSystem`~~. I'll provide the code for `TWinNTSystem.cxx`. BTW, what is the difference between `fMemFree` and `fMemAvailable` ? On Windows we already set `fMemFree` equals to the amount of physical memory currently available...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:12,deployability,version,version,12,"> The linux version looks good. The MacOS and Windows (@bellenot might be able to help with that version) needs to be updated too. In particular in this PR `MemInfo_t::fMemAvailalble` is not initialized (as a random value) on those 2 platforms. @pcanal I think `MemInfo_t::fMemAvailalble` should be initialized in `TSystem.cxx`, since it is declared in `TSystem.h`. ~~My question is: Is it needed at all on Windows? We don't calculate the memory status the same in `TWinNTSystem`~~. I'll provide the code for `TWinNTSystem.cxx`. BTW, what is the difference between `fMemFree` and `fMemAvailable` ? On Windows we already set `fMemFree` equals to the amount of physical memory currently available...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:97,deployability,version,version,97,"> The linux version looks good. The MacOS and Windows (@bellenot might be able to help with that version) needs to be updated too. In particular in this PR `MemInfo_t::fMemAvailalble` is not initialized (as a random value) on those 2 platforms. @pcanal I think `MemInfo_t::fMemAvailalble` should be initialized in `TSystem.cxx`, since it is declared in `TSystem.h`. ~~My question is: Is it needed at all on Windows? We don't calculate the memory status the same in `TWinNTSystem`~~. I'll provide the code for `TWinNTSystem.cxx`. BTW, what is the difference between `fMemFree` and `fMemAvailable` ? On Windows we already set `fMemFree` equals to the amount of physical memory currently available...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:118,deployability,updat,updated,118,"> The linux version looks good. The MacOS and Windows (@bellenot might be able to help with that version) needs to be updated too. In particular in this PR `MemInfo_t::fMemAvailalble` is not initialized (as a random value) on those 2 platforms. @pcanal I think `MemInfo_t::fMemAvailalble` should be initialized in `TSystem.cxx`, since it is declared in `TSystem.h`. ~~My question is: Is it needed at all on Windows? We don't calculate the memory status the same in `TWinNTSystem`~~. I'll provide the code for `TWinNTSystem.cxx`. BTW, what is the difference between `fMemFree` and `fMemAvailable` ? On Windows we already set `fMemFree` equals to the amount of physical memory currently available...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:675,energy efficiency,current,currently,675,"> The linux version looks good. The MacOS and Windows (@bellenot might be able to help with that version) needs to be updated too. In particular in this PR `MemInfo_t::fMemAvailalble` is not initialized (as a random value) on those 2 platforms. @pcanal I think `MemInfo_t::fMemAvailalble` should be initialized in `TSystem.cxx`, since it is declared in `TSystem.h`. ~~My question is: Is it needed at all on Windows? We don't calculate the memory status the same in `TWinNTSystem`~~. I'll provide the code for `TWinNTSystem.cxx`. BTW, what is the difference between `fMemFree` and `fMemAvailable` ? On Windows we already set `fMemFree` equals to the amount of physical memory currently available...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:12,integrability,version,version,12,"> The linux version looks good. The MacOS and Windows (@bellenot might be able to help with that version) needs to be updated too. In particular in this PR `MemInfo_t::fMemAvailalble` is not initialized (as a random value) on those 2 platforms. @pcanal I think `MemInfo_t::fMemAvailalble` should be initialized in `TSystem.cxx`, since it is declared in `TSystem.h`. ~~My question is: Is it needed at all on Windows? We don't calculate the memory status the same in `TWinNTSystem`~~. I'll provide the code for `TWinNTSystem.cxx`. BTW, what is the difference between `fMemFree` and `fMemAvailable` ? On Windows we already set `fMemFree` equals to the amount of physical memory currently available...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:97,integrability,version,version,97,"> The linux version looks good. The MacOS and Windows (@bellenot might be able to help with that version) needs to be updated too. In particular in this PR `MemInfo_t::fMemAvailalble` is not initialized (as a random value) on those 2 platforms. @pcanal I think `MemInfo_t::fMemAvailalble` should be initialized in `TSystem.cxx`, since it is declared in `TSystem.h`. ~~My question is: Is it needed at all on Windows? We don't calculate the memory status the same in `TWinNTSystem`~~. I'll provide the code for `TWinNTSystem.cxx`. BTW, what is the difference between `fMemFree` and `fMemAvailable` ? On Windows we already set `fMemFree` equals to the amount of physical memory currently available...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:234,interoperability,platform,platforms,234,"> The linux version looks good. The MacOS and Windows (@bellenot might be able to help with that version) needs to be updated too. In particular in this PR `MemInfo_t::fMemAvailalble` is not initialized (as a random value) on those 2 platforms. @pcanal I think `MemInfo_t::fMemAvailalble` should be initialized in `TSystem.cxx`, since it is declared in `TSystem.h`. ~~My question is: Is it needed at all on Windows? We don't calculate the memory status the same in `TWinNTSystem`~~. I'll provide the code for `TWinNTSystem.cxx`. BTW, what is the difference between `fMemFree` and `fMemAvailable` ? On Windows we already set `fMemFree` equals to the amount of physical memory currently available...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:12,modifiability,version,version,12,"> The linux version looks good. The MacOS and Windows (@bellenot might be able to help with that version) needs to be updated too. In particular in this PR `MemInfo_t::fMemAvailalble` is not initialized (as a random value) on those 2 platforms. @pcanal I think `MemInfo_t::fMemAvailalble` should be initialized in `TSystem.cxx`, since it is declared in `TSystem.h`. ~~My question is: Is it needed at all on Windows? We don't calculate the memory status the same in `TWinNTSystem`~~. I'll provide the code for `TWinNTSystem.cxx`. BTW, what is the difference between `fMemFree` and `fMemAvailable` ? On Windows we already set `fMemFree` equals to the amount of physical memory currently available...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:97,modifiability,version,version,97,"> The linux version looks good. The MacOS and Windows (@bellenot might be able to help with that version) needs to be updated too. In particular in this PR `MemInfo_t::fMemAvailalble` is not initialized (as a random value) on those 2 platforms. @pcanal I think `MemInfo_t::fMemAvailalble` should be initialized in `TSystem.cxx`, since it is declared in `TSystem.h`. ~~My question is: Is it needed at all on Windows? We don't calculate the memory status the same in `TWinNTSystem`~~. I'll provide the code for `TWinNTSystem.cxx`. BTW, what is the difference between `fMemFree` and `fMemAvailable` ? On Windows we already set `fMemFree` equals to the amount of physical memory currently available...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:439,performance,memor,memory,439,"> The linux version looks good. The MacOS and Windows (@bellenot might be able to help with that version) needs to be updated too. In particular in this PR `MemInfo_t::fMemAvailalble` is not initialized (as a random value) on those 2 platforms. @pcanal I think `MemInfo_t::fMemAvailalble` should be initialized in `TSystem.cxx`, since it is declared in `TSystem.h`. ~~My question is: Is it needed at all on Windows? We don't calculate the memory status the same in `TWinNTSystem`~~. I'll provide the code for `TWinNTSystem.cxx`. BTW, what is the difference between `fMemFree` and `fMemAvailable` ? On Windows we already set `fMemFree` equals to the amount of physical memory currently available...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:668,performance,memor,memory,668,"> The linux version looks good. The MacOS and Windows (@bellenot might be able to help with that version) needs to be updated too. In particular in this PR `MemInfo_t::fMemAvailalble` is not initialized (as a random value) on those 2 platforms. @pcanal I think `MemInfo_t::fMemAvailalble` should be initialized in `TSystem.cxx`, since it is declared in `TSystem.h`. ~~My question is: Is it needed at all on Windows? We don't calculate the memory status the same in `TWinNTSystem`~~. I'll provide the code for `TWinNTSystem.cxx`. BTW, what is the difference between `fMemFree` and `fMemAvailable` ? On Windows we already set `fMemFree` equals to the amount of physical memory currently available...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:685,reliability,availab,available,685,"> The linux version looks good. The MacOS and Windows (@bellenot might be able to help with that version) needs to be updated too. In particular in this PR `MemInfo_t::fMemAvailalble` is not initialized (as a random value) on those 2 platforms. @pcanal I think `MemInfo_t::fMemAvailalble` should be initialized in `TSystem.cxx`, since it is declared in `TSystem.h`. ~~My question is: Is it needed at all on Windows? We don't calculate the memory status the same in `TWinNTSystem`~~. I'll provide the code for `TWinNTSystem.cxx`. BTW, what is the difference between `fMemFree` and `fMemAvailable` ? On Windows we already set `fMemFree` equals to the amount of physical memory currently available...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:118,safety,updat,updated,118,"> The linux version looks good. The MacOS and Windows (@bellenot might be able to help with that version) needs to be updated too. In particular in this PR `MemInfo_t::fMemAvailalble` is not initialized (as a random value) on those 2 platforms. @pcanal I think `MemInfo_t::fMemAvailalble` should be initialized in `TSystem.cxx`, since it is declared in `TSystem.h`. ~~My question is: Is it needed at all on Windows? We don't calculate the memory status the same in `TWinNTSystem`~~. I'll provide the code for `TWinNTSystem.cxx`. BTW, what is the difference between `fMemFree` and `fMemAvailable` ? On Windows we already set `fMemFree` equals to the amount of physical memory currently available...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:685,safety,avail,available,685,"> The linux version looks good. The MacOS and Windows (@bellenot might be able to help with that version) needs to be updated too. In particular in this PR `MemInfo_t::fMemAvailalble` is not initialized (as a random value) on those 2 platforms. @pcanal I think `MemInfo_t::fMemAvailalble` should be initialized in `TSystem.cxx`, since it is declared in `TSystem.h`. ~~My question is: Is it needed at all on Windows? We don't calculate the memory status the same in `TWinNTSystem`~~. I'll provide the code for `TWinNTSystem.cxx`. BTW, what is the difference between `fMemFree` and `fMemAvailable` ? On Windows we already set `fMemFree` equals to the amount of physical memory currently available...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:118,security,updat,updated,118,"> The linux version looks good. The MacOS and Windows (@bellenot might be able to help with that version) needs to be updated too. In particular in this PR `MemInfo_t::fMemAvailalble` is not initialized (as a random value) on those 2 platforms. @pcanal I think `MemInfo_t::fMemAvailalble` should be initialized in `TSystem.cxx`, since it is declared in `TSystem.h`. ~~My question is: Is it needed at all on Windows? We don't calculate the memory status the same in `TWinNTSystem`~~. I'll provide the code for `TWinNTSystem.cxx`. BTW, what is the difference between `fMemFree` and `fMemAvailable` ? On Windows we already set `fMemFree` equals to the amount of physical memory currently available...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:685,security,availab,available,685,"> The linux version looks good. The MacOS and Windows (@bellenot might be able to help with that version) needs to be updated too. In particular in this PR `MemInfo_t::fMemAvailalble` is not initialized (as a random value) on those 2 platforms. @pcanal I think `MemInfo_t::fMemAvailalble` should be initialized in `TSystem.cxx`, since it is declared in `TSystem.h`. ~~My question is: Is it needed at all on Windows? We don't calculate the memory status the same in `TWinNTSystem`~~. I'll provide the code for `TWinNTSystem.cxx`. BTW, what is the difference between `fMemFree` and `fMemAvailable` ? On Windows we already set `fMemFree` equals to the amount of physical memory currently available...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:82,usability,help,help,82,"> The linux version looks good. The MacOS and Windows (@bellenot might be able to help with that version) needs to be updated too. In particular in this PR `MemInfo_t::fMemAvailalble` is not initialized (as a random value) on those 2 platforms. @pcanal I think `MemInfo_t::fMemAvailalble` should be initialized in `TSystem.cxx`, since it is declared in `TSystem.h`. ~~My question is: Is it needed at all on Windows? We don't calculate the memory status the same in `TWinNTSystem`~~. I'll provide the code for `TWinNTSystem.cxx`. BTW, what is the difference between `fMemFree` and `fMemAvailable` ? On Windows we already set `fMemFree` equals to the amount of physical memory currently available...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:439,usability,memor,memory,439,"> The linux version looks good. The MacOS and Windows (@bellenot might be able to help with that version) needs to be updated too. In particular in this PR `MemInfo_t::fMemAvailalble` is not initialized (as a random value) on those 2 platforms. @pcanal I think `MemInfo_t::fMemAvailalble` should be initialized in `TSystem.cxx`, since it is declared in `TSystem.h`. ~~My question is: Is it needed at all on Windows? We don't calculate the memory status the same in `TWinNTSystem`~~. I'll provide the code for `TWinNTSystem.cxx`. BTW, what is the difference between `fMemFree` and `fMemAvailable` ? On Windows we already set `fMemFree` equals to the amount of physical memory currently available...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:446,usability,statu,status,446,"> The linux version looks good. The MacOS and Windows (@bellenot might be able to help with that version) needs to be updated too. In particular in this PR `MemInfo_t::fMemAvailalble` is not initialized (as a random value) on those 2 platforms. @pcanal I think `MemInfo_t::fMemAvailalble` should be initialized in `TSystem.cxx`, since it is declared in `TSystem.h`. ~~My question is: Is it needed at all on Windows? We don't calculate the memory status the same in `TWinNTSystem`~~. I'll provide the code for `TWinNTSystem.cxx`. BTW, what is the difference between `fMemFree` and `fMemAvailable` ? On Windows we already set `fMemFree` equals to the amount of physical memory currently available...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:668,usability,memor,memory,668,"> The linux version looks good. The MacOS and Windows (@bellenot might be able to help with that version) needs to be updated too. In particular in this PR `MemInfo_t::fMemAvailalble` is not initialized (as a random value) on those 2 platforms. @pcanal I think `MemInfo_t::fMemAvailalble` should be initialized in `TSystem.cxx`, since it is declared in `TSystem.h`. ~~My question is: Is it needed at all on Windows? We don't calculate the memory status the same in `TWinNTSystem`~~. I'll provide the code for `TWinNTSystem.cxx`. BTW, what is the difference between `fMemFree` and `fMemAvailable` ? On Windows we already set `fMemFree` equals to the amount of physical memory currently available...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:85,performance,memor,memory,85,"> BTW, what is the difference between fMemFree and fMemAvailable ? The ""free"" is the memory avaialble minus the memory temporarily used by the OS/kernel and easily freed, for example used for file caching.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:112,performance,memor,memory,112,"> BTW, what is the difference between fMemFree and fMemAvailable ? The ""free"" is the memory avaialble minus the memory temporarily used by the OS/kernel and easily freed, for example used for file caching.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:197,performance,cach,caching,197,"> BTW, what is the difference between fMemFree and fMemAvailable ? The ""free"" is the memory avaialble minus the memory temporarily used by the OS/kernel and easily freed, for example used for file caching.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:85,usability,memor,memory,85,"> BTW, what is the difference between fMemFree and fMemAvailable ? The ""free"" is the memory avaialble minus the memory temporarily used by the OS/kernel and easily freed, for example used for file caching.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:112,usability,memor,memory,112,"> BTW, what is the difference between fMemFree and fMemAvailable ? The ""free"" is the memory avaialble minus the memory temporarily used by the OS/kernel and easily freed, for example used for file caching.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:93,performance,memor,memory,93,"> > BTW, what is the difference between fMemFree and fMemAvailable ? > . > The ""free"" is the memory avaialble minus the memory temporarily used by the OS/kernel and easily freed, for example used for file caching. OK, thanks for the info @pcanal !",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:120,performance,memor,memory,120,"> > BTW, what is the difference between fMemFree and fMemAvailable ? > . > The ""free"" is the memory avaialble minus the memory temporarily used by the OS/kernel and easily freed, for example used for file caching. OK, thanks for the info @pcanal !",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:205,performance,cach,caching,205,"> > BTW, what is the difference between fMemFree and fMemAvailable ? > . > The ""free"" is the memory avaialble minus the memory temporarily used by the OS/kernel and easily freed, for example used for file caching. OK, thanks for the info @pcanal !",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:93,usability,memor,memory,93,"> > BTW, what is the difference between fMemFree and fMemAvailable ? > . > The ""free"" is the memory avaialble minus the memory temporarily used by the OS/kernel and easily freed, for example used for file caching. OK, thanks for the info @pcanal !",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:120,usability,memor,memory,120,"> > BTW, what is the difference between fMemFree and fMemAvailable ? > . > The ""free"" is the memory avaialble minus the memory temporarily used by the OS/kernel and easily freed, for example used for file caching. OK, thanks for the info @pcanal !",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:35,safety,test,tests,35,I have roottest working now. Which tests do I need to run? There are 2000.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:35,testability,test,tests,35,I have roottest working now. Which tests do I need to run? There are 2000.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:163,deployability,automat,automatic,163,"> I have roottest working now. Which tests do I need to run? There are 2000. I think you do not need to run it explicitly, just have a fork on GitHub, so that the automatic CI tests pass well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:37,safety,test,tests,37,"> I have roottest working now. Which tests do I need to run? There are 2000. I think you do not need to run it explicitly, just have a fork on GitHub, so that the automatic CI tests pass well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:176,safety,test,tests,176,"> I have roottest working now. Which tests do I need to run? There are 2000. I think you do not need to run it explicitly, just have a fork on GitHub, so that the automatic CI tests pass well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:37,testability,test,tests,37,"> I have roottest working now. Which tests do I need to run? There are 2000. I think you do not need to run it explicitly, just have a fork on GitHub, so that the automatic CI tests pass well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:163,testability,automat,automatic,163,"> I have roottest working now. Which tests do I need to run? There are 2000. I think you do not need to run it explicitly, just have a fork on GitHub, so that the automatic CI tests pass well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:176,testability,test,tests,176,"> I have roottest working now. Which tests do I need to run? There are 2000. I think you do not need to run it explicitly, just have a fork on GitHub, so that the automatic CI tests pass well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:61,deployability,version,version,61,We still need to (find somebody who can) implement the MacOS version.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:61,integrability,version,version,61,We still need to (find somebody who can) implement the MacOS version.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/pull/7208:61,modifiability,version,version,61,We still need to (find somebody who can) implement the MacOS version.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7208
https://github.com/root-project/root/issues/7213:35,performance,network,network,35,"We had the same kind of issue with network file systems, but I'm afraid that the only solution I see would be to add an entry in `system.rootrc`. I will investigate what can be done",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7213
https://github.com/root-project/root/issues/7213:35,security,network,network,35,"We had the same kind of issue with network file systems, but I'm afraid that the only solution I see would be to add an entry in `system.rootrc`. I will investigate what can be done",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7213
https://github.com/root-project/root/issues/7213:175,safety,prevent,prevent,175,"@ShamrockLee there is already a `Browser.ExpandDirectories` entry in `system.rootrc`, you can simply set it to false. Otherwise I can also add something like:. ```. // always prevent expanding the parent directory tree on nix/store. if (first == ""nix"" && second == ""store""). expand = kFALSE;. ```. But I would prefer not to add such special case...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7213
https://github.com/root-project/root/issues/7213:175,security,preven,prevent,175,"@ShamrockLee there is already a `Browser.ExpandDirectories` entry in `system.rootrc`, you can simply set it to false. Otherwise I can also add something like:. ```. // always prevent expanding the parent directory tree on nix/store. if (first == ""nix"" && second == ""store""). expand = kFALSE;. ```. But I would prefer not to add such special case...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7213
https://github.com/root-project/root/issues/7213:94,testability,simpl,simply,94,"@ShamrockLee there is already a `Browser.ExpandDirectories` entry in `system.rootrc`, you can simply set it to false. Otherwise I can also add something like:. ```. // always prevent expanding the parent directory tree on nix/store. if (first == ""nix"" && second == ""store""). expand = kFALSE;. ```. But I would prefer not to add such special case...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7213
https://github.com/root-project/root/issues/7213:94,usability,simpl,simply,94,"@ShamrockLee there is already a `Browser.ExpandDirectories` entry in `system.rootrc`, you can simply set it to false. Otherwise I can also add something like:. ```. // always prevent expanding the parent directory tree on nix/store. if (first == ""nix"" && second == ""store""). expand = kFALSE;. ```. But I would prefer not to add such special case...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7213
https://github.com/root-project/root/issues/7213:310,usability,prefer,prefer,310,"@ShamrockLee there is already a `Browser.ExpandDirectories` entry in `system.rootrc`, you can simply set it to false. Otherwise I can also add something like:. ```. // always prevent expanding the parent directory tree on nix/store. if (first == ""nix"" && second == ""store""). expand = kFALSE;. ```. But I would prefer not to add such special case...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7213
https://github.com/root-project/root/issues/7213:153,usability,close,close,153,@ShamrockLee can you tell me if the given solution (setting `Browser.ExpandDirectories` to `false` in `system.rootrc`) is good enough for you? (so I can close this issue). Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7213
https://github.com/root-project/root/issues/7213:98,deployability,build,building,98,"@bellenot Sorry for late reply. I was working on something else yesterday and the day before. I'm building the Nix expression for the solution now. The result will come up later. (Since `/nix/store/` is read-only, a wrapper in Nix expression is needed to apply the changes on `system.rootrc`.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7213
https://github.com/root-project/root/issues/7213:216,integrability,wrap,wrapper,216,"@bellenot Sorry for late reply. I was working on something else yesterday and the day before. I'm building the Nix expression for the solution now. The result will come up later. (Since `/nix/store/` is read-only, a wrapper in Nix expression is needed to apply the changes on `system.rootrc`.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7213
https://github.com/root-project/root/issues/7213:216,interoperability,wrapper,wrapper,216,"@bellenot Sorry for late reply. I was working on something else yesterday and the day before. I'm building the Nix expression for the solution now. The result will come up later. (Since `/nix/store/` is read-only, a wrapper in Nix expression is needed to apply the changes on `system.rootrc`.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7213
https://github.com/root-project/root/issues/7213:72,deployability,version,version,72,"FYI, you can also have a `${HOME}/.rootrc` file, being your own, custom version of `system.rootrc`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7213
https://github.com/root-project/root/issues/7213:72,integrability,version,version,72,"FYI, you can also have a `${HOME}/.rootrc` file, being your own, custom version of `system.rootrc`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7213
https://github.com/root-project/root/issues/7213:72,modifiability,version,version,72,"FYI, you can also have a `${HOME}/.rootrc` file, being your own, custom version of `system.rootrc`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7213
https://github.com/root-project/root/issues/7213:65,usability,custom,custom,65,"FYI, you can also have a `${HOME}/.rootrc` file, being your own, custom version of `system.rootrc`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7213
https://github.com/root-project/root/issues/7213:87,availability,stead,stead,87,@bellenot I finally realized that it should be. `Browser.ExpandDirectories: false`. in stead of. `Browser.ExpandDirectories = false`. in `$HOME/.rootrc`. Problem solved. :tada: . ![Screenshot_20210218_233311](https://user-images.githubusercontent.com/44064051/108380300-afa1f680-7241-11eb-9515-57eb35b17cbd.png).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7213
https://github.com/root-project/root/issues/7213:217,usability,user,user-images,217,@bellenot I finally realized that it should be. `Browser.ExpandDirectories: false`. in stead of. `Browser.ExpandDirectories = false`. in `$HOME/.rootrc`. Problem solved. :tada: . ![Screenshot_20210218_233311](https://user-images.githubusercontent.com/44064051/108380300-afa1f680-7241-11eb-9515-57eb35b17cbd.png).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7213
https://github.com/root-project/root/issues/7216:101,deployability,updat,update,101,"Hi, I think `TThread` is deprecated in favour of `std::thread` (this is not to say that we shouldn't update its docs).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:101,safety,updat,update,101,"Hi, I think `TThread` is deprecated in favour of `std::thread` (this is not to say that we shouldn't update its docs).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:101,security,updat,update,101,"Hi, I think `TThread` is deprecated in favour of `std::thread` (this is not to say that we shouldn't update its docs).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:145,deployability,upgrad,upgrade,145,"Oh, I see, thanks. Maybe it would be also interesting then to add a section on how to ""migrate"" from TThread to std::thread, I would be happy to upgrade my classes if there would be an example on the correspondence between functions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:145,modifiability,upgrad,upgrade,145,"Oh, I see, thanks. Maybe it would be also interesting then to add a section on how to ""migrate"" from TThread to std::thread, I would be happy to upgrade my classes if there would be an example on the correspondence between functions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:38,availability,error,error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function,38,See also https://root-forum.cern.ch/t/error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function/43663/6. ROOT::EnableThreadSafety() could be added to the manual.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:95,deployability,releas,released-tthread-member-function,95,See also https://root-forum.cern.ch/t/error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function/43663/6. ROOT::EnableThreadSafety() could be added to the manual.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:38,performance,error,error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function,38,See also https://root-forum.cern.ch/t/error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function/43663/6. ROOT::EnableThreadSafety() could be added to the manual.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:38,safety,error,error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function,38,See also https://root-forum.cern.ch/t/error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function/43663/6. ROOT::EnableThreadSafety() could be added to the manual.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:82,security,lock,lock-already-released-tthread-member-function,82,See also https://root-forum.cern.ch/t/error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function/43663/6. ROOT::EnableThreadSafety() could be added to the manual.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:38,usability,error,error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function,38,See also https://root-forum.cern.ch/t/error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function/43663/6. ROOT::EnableThreadSafety() could be added to the manual.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:96,deployability,updat,update,96,"By the way, you are referring to the old ""User's Guide"". This Guide is now out dated. We do not update it anymore. The two main sources of documentation are the [Reference Guide](https://root.cern/doc/master/index.html) and the [Manual](https://root.cern/manual/). If some update is needed I guess it should be done in the[ reference of TThread](https://root.cern/doc/master/classTThread.html). May be the TThread part of the user guide should be updated and move into the reference guide. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:273,deployability,updat,update,273,"By the way, you are referring to the old ""User's Guide"". This Guide is now out dated. We do not update it anymore. The two main sources of documentation are the [Reference Guide](https://root.cern/doc/master/index.html) and the [Manual](https://root.cern/manual/). If some update is needed I guess it should be done in the[ reference of TThread](https://root.cern/doc/master/classTThread.html). May be the TThread part of the user guide should be updated and move into the reference guide. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:447,deployability,updat,updated,447,"By the way, you are referring to the old ""User's Guide"". This Guide is now out dated. We do not update it anymore. The two main sources of documentation are the [Reference Guide](https://root.cern/doc/master/index.html) and the [Manual](https://root.cern/manual/). If some update is needed I guess it should be done in the[ reference of TThread](https://root.cern/doc/master/classTThread.html). May be the TThread part of the user guide should be updated and move into the reference guide. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:96,safety,updat,update,96,"By the way, you are referring to the old ""User's Guide"". This Guide is now out dated. We do not update it anymore. The two main sources of documentation are the [Reference Guide](https://root.cern/doc/master/index.html) and the [Manual](https://root.cern/manual/). If some update is needed I guess it should be done in the[ reference of TThread](https://root.cern/doc/master/classTThread.html). May be the TThread part of the user guide should be updated and move into the reference guide. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:273,safety,updat,update,273,"By the way, you are referring to the old ""User's Guide"". This Guide is now out dated. We do not update it anymore. The two main sources of documentation are the [Reference Guide](https://root.cern/doc/master/index.html) and the [Manual](https://root.cern/manual/). If some update is needed I guess it should be done in the[ reference of TThread](https://root.cern/doc/master/classTThread.html). May be the TThread part of the user guide should be updated and move into the reference guide. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:447,safety,updat,updated,447,"By the way, you are referring to the old ""User's Guide"". This Guide is now out dated. We do not update it anymore. The two main sources of documentation are the [Reference Guide](https://root.cern/doc/master/index.html) and the [Manual](https://root.cern/manual/). If some update is needed I guess it should be done in the[ reference of TThread](https://root.cern/doc/master/classTThread.html). May be the TThread part of the user guide should be updated and move into the reference guide. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:96,security,updat,update,96,"By the way, you are referring to the old ""User's Guide"". This Guide is now out dated. We do not update it anymore. The two main sources of documentation are the [Reference Guide](https://root.cern/doc/master/index.html) and the [Manual](https://root.cern/manual/). If some update is needed I guess it should be done in the[ reference of TThread](https://root.cern/doc/master/classTThread.html). May be the TThread part of the user guide should be updated and move into the reference guide. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:273,security,updat,update,273,"By the way, you are referring to the old ""User's Guide"". This Guide is now out dated. We do not update it anymore. The two main sources of documentation are the [Reference Guide](https://root.cern/doc/master/index.html) and the [Manual](https://root.cern/manual/). If some update is needed I guess it should be done in the[ reference of TThread](https://root.cern/doc/master/classTThread.html). May be the TThread part of the user guide should be updated and move into the reference guide. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:447,security,updat,updated,447,"By the way, you are referring to the old ""User's Guide"". This Guide is now out dated. We do not update it anymore. The two main sources of documentation are the [Reference Guide](https://root.cern/doc/master/index.html) and the [Manual](https://root.cern/manual/). If some update is needed I guess it should be done in the[ reference of TThread](https://root.cern/doc/master/classTThread.html). May be the TThread part of the user guide should be updated and move into the reference guide. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:42,usability,User,User,42,"By the way, you are referring to the old ""User's Guide"". This Guide is now out dated. We do not update it anymore. The two main sources of documentation are the [Reference Guide](https://root.cern/doc/master/index.html) and the [Manual](https://root.cern/manual/). If some update is needed I guess it should be done in the[ reference of TThread](https://root.cern/doc/master/classTThread.html). May be the TThread part of the user guide should be updated and move into the reference guide. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:49,usability,Guid,Guide,49,"By the way, you are referring to the old ""User's Guide"". This Guide is now out dated. We do not update it anymore. The two main sources of documentation are the [Reference Guide](https://root.cern/doc/master/index.html) and the [Manual](https://root.cern/manual/). If some update is needed I guess it should be done in the[ reference of TThread](https://root.cern/doc/master/classTThread.html). May be the TThread part of the user guide should be updated and move into the reference guide. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:62,usability,Guid,Guide,62,"By the way, you are referring to the old ""User's Guide"". This Guide is now out dated. We do not update it anymore. The two main sources of documentation are the [Reference Guide](https://root.cern/doc/master/index.html) and the [Manual](https://root.cern/manual/). If some update is needed I guess it should be done in the[ reference of TThread](https://root.cern/doc/master/classTThread.html). May be the TThread part of the user guide should be updated and move into the reference guide. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:139,usability,document,documentation,139,"By the way, you are referring to the old ""User's Guide"". This Guide is now out dated. We do not update it anymore. The two main sources of documentation are the [Reference Guide](https://root.cern/doc/master/index.html) and the [Manual](https://root.cern/manual/). If some update is needed I guess it should be done in the[ reference of TThread](https://root.cern/doc/master/classTThread.html). May be the TThread part of the user guide should be updated and move into the reference guide. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:172,usability,Guid,Guide,172,"By the way, you are referring to the old ""User's Guide"". This Guide is now out dated. We do not update it anymore. The two main sources of documentation are the [Reference Guide](https://root.cern/doc/master/index.html) and the [Manual](https://root.cern/manual/). If some update is needed I guess it should be done in the[ reference of TThread](https://root.cern/doc/master/classTThread.html). May be the TThread part of the user guide should be updated and move into the reference guide. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:426,usability,user,user,426,"By the way, you are referring to the old ""User's Guide"". This Guide is now out dated. We do not update it anymore. The two main sources of documentation are the [Reference Guide](https://root.cern/doc/master/index.html) and the [Manual](https://root.cern/manual/). If some update is needed I guess it should be done in the[ reference of TThread](https://root.cern/doc/master/classTThread.html). May be the TThread part of the user guide should be updated and move into the reference guide. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:431,usability,guid,guide,431,"By the way, you are referring to the old ""User's Guide"". This Guide is now out dated. We do not update it anymore. The two main sources of documentation are the [Reference Guide](https://root.cern/doc/master/index.html) and the [Manual](https://root.cern/manual/). If some update is needed I guess it should be done in the[ reference of TThread](https://root.cern/doc/master/classTThread.html). May be the TThread part of the user guide should be updated and move into the reference guide. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:483,usability,guid,guide,483,"By the way, you are referring to the old ""User's Guide"". This Guide is now out dated. We do not update it anymore. The two main sources of documentation are the [Reference Guide](https://root.cern/doc/master/index.html) and the [Manual](https://root.cern/manual/). If some update is needed I guess it should be done in the[ reference of TThread](https://root.cern/doc/master/classTThread.html). May be the TThread part of the user guide should be updated and move into the reference guide. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:52,usability,User,User,52,Let see with @pcanal what to do with the doc in the User's Guide . Should it be moved to the Reference Guide ? Ignored ? I am happy to help to do some editing but I do not have the expertise to decide what to do.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:59,usability,Guid,Guide,59,Let see with @pcanal what to do with the doc in the User's Guide . Should it be moved to the Reference Guide ? Ignored ? I am happy to help to do some editing but I do not have the expertise to decide what to do.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:103,usability,Guid,Guide,103,Let see with @pcanal what to do with the doc in the User's Guide . Should it be moved to the Reference Guide ? Ignored ? I am happy to help to do some editing but I do not have the expertise to decide what to do.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:135,usability,help,help,135,Let see with @pcanal what to do with the doc in the User's Guide . Should it be moved to the Reference Guide ? Ignored ? I am happy to help to do some editing but I do not have the expertise to decide what to do.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:33,availability,error,error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function,33,> See also [root-forum.cern.ch/t/error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function/43663/6](https://root-forum.cern.ch/t/error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function/43663/6) ROOT::EnableThreadSafety() could be added to the manual. I think it is already mentioned toward the end of https://root.cern/manual/multi_threading/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:161,availability,error,error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function,161,> See also [root-forum.cern.ch/t/error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function/43663/6](https://root-forum.cern.ch/t/error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function/43663/6) ROOT::EnableThreadSafety() could be added to the manual. I think it is already mentioned toward the end of https://root.cern/manual/multi_threading/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:90,deployability,releas,released-tthread-member-function,90,> See also [root-forum.cern.ch/t/error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function/43663/6](https://root-forum.cern.ch/t/error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function/43663/6) ROOT::EnableThreadSafety() could be added to the manual. I think it is already mentioned toward the end of https://root.cern/manual/multi_threading/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:218,deployability,releas,released-tthread-member-function,218,> See also [root-forum.cern.ch/t/error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function/43663/6](https://root-forum.cern.ch/t/error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function/43663/6) ROOT::EnableThreadSafety() could be added to the manual. I think it is already mentioned toward the end of https://root.cern/manual/multi_threading/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:33,performance,error,error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function,33,> See also [root-forum.cern.ch/t/error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function/43663/6](https://root-forum.cern.ch/t/error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function/43663/6) ROOT::EnableThreadSafety() could be added to the manual. I think it is already mentioned toward the end of https://root.cern/manual/multi_threading/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:161,performance,error,error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function,161,> See also [root-forum.cern.ch/t/error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function/43663/6](https://root-forum.cern.ch/t/error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function/43663/6) ROOT::EnableThreadSafety() could be added to the manual. I think it is already mentioned toward the end of https://root.cern/manual/multi_threading/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:33,safety,error,error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function,33,> See also [root-forum.cern.ch/t/error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function/43663/6](https://root-forum.cern.ch/t/error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function/43663/6) ROOT::EnableThreadSafety() could be added to the manual. I think it is already mentioned toward the end of https://root.cern/manual/multi_threading/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:161,safety,error,error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function,161,> See also [root-forum.cern.ch/t/error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function/43663/6](https://root-forum.cern.ch/t/error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function/43663/6) ROOT::EnableThreadSafety() could be added to the manual. I think it is already mentioned toward the end of https://root.cern/manual/multi_threading/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:77,security,lock,lock-already-released-tthread-member-function,77,> See also [root-forum.cern.ch/t/error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function/43663/6](https://root-forum.cern.ch/t/error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function/43663/6) ROOT::EnableThreadSafety() could be added to the manual. I think it is already mentioned toward the end of https://root.cern/manual/multi_threading/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:205,security,lock,lock-already-released-tthread-member-function,205,> See also [root-forum.cern.ch/t/error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function/43663/6](https://root-forum.cern.ch/t/error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function/43663/6) ROOT::EnableThreadSafety() could be added to the manual. I think it is already mentioned toward the end of https://root.cern/manual/multi_threading/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:33,usability,error,error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function,33,> See also [root-forum.cern.ch/t/error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function/43663/6](https://root-forum.cern.ch/t/error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function/43663/6) ROOT::EnableThreadSafety() could be added to the manual. I think it is already mentioned toward the end of https://root.cern/manual/multi_threading/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:161,usability,error,error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function,161,> See also [root-forum.cern.ch/t/error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function/43663/6](https://root-forum.cern.ch/t/error-in-treentrantrwlock-writeunlock-write-lock-already-released-tthread-member-function/43663/6) ROOT::EnableThreadSafety() could be added to the manual. I think it is already mentioned toward the end of https://root.cern/manual/multi_threading/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:77,usability,User,Users,77,"Yes, but we meant it would be useful to add also a note or link to it in the Users Guide: https://root.cern.ch/root/htmldoc/guides/users-guide/Threads.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:83,usability,Guid,Guide,83,"Yes, but we meant it would be useful to add also a note or link to it in the Users Guide: https://root.cern.ch/root/htmldoc/guides/users-guide/Threads.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:124,usability,guid,guides,124,"Yes, but we meant it would be useful to add also a note or link to it in the Users Guide: https://root.cern.ch/root/htmldoc/guides/users-guide/Threads.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:131,usability,user,users-guide,131,"Yes, but we meant it would be useful to add also a note or link to it in the Users Guide: https://root.cern.ch/root/htmldoc/guides/users-guide/Threads.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:33,usability,User,User,33,> what to do with the doc in the User's Guide . Should it be moved to the Reference Guide ? . Some of the information is still relevant (beside the mention of TThread) in particular 25.2. The rest looks like it is all not longer recommended to use.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:40,usability,Guid,Guide,40,> what to do with the doc in the User's Guide . Should it be moved to the Reference Guide ? . Some of the information is still relevant (beside the mention of TThread) in particular 25.2. The rest looks like it is all not longer recommended to use.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7216:84,usability,Guid,Guide,84,> what to do with the doc in the User's Guide . Should it be moved to the Reference Guide ? . Some of the information is still relevant (beside the mention of TThread) in particular 25.2. The rest looks like it is all not longer recommended to use.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7216
https://github.com/root-project/root/issues/7217:301,deployability,resourc,resources,301,"Hi,. I am new to root and trying to wrap my head around some of its features. I thought a good place to start would be to work on this issue. I started by pythonizing `fitTo` and I'd like to send you a pull request. I take it that I should provide some tests for the feature, but I could not find any resources regarding the testing conventions in python for root. If there are any specific guidelines, please let me know, otherwise I'll just send you a pull request and you can take a look if it is really necessary. Cheers",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:301,energy efficiency,resourc,resources,301,"Hi,. I am new to root and trying to wrap my head around some of its features. I thought a good place to start would be to work on this issue. I started by pythonizing `fitTo` and I'd like to send you a pull request. I take it that I should provide some tests for the feature, but I could not find any resources regarding the testing conventions in python for root. If there are any specific guidelines, please let me know, otherwise I'll just send you a pull request and you can take a look if it is really necessary. Cheers",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:36,integrability,wrap,wrap,36,"Hi,. I am new to root and trying to wrap my head around some of its features. I thought a good place to start would be to work on this issue. I started by pythonizing `fitTo` and I'd like to send you a pull request. I take it that I should provide some tests for the feature, but I could not find any resources regarding the testing conventions in python for root. If there are any specific guidelines, please let me know, otherwise I'll just send you a pull request and you can take a look if it is really necessary. Cheers",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:382,interoperability,specif,specific,382,"Hi,. I am new to root and trying to wrap my head around some of its features. I thought a good place to start would be to work on this issue. I started by pythonizing `fitTo` and I'd like to send you a pull request. I take it that I should provide some tests for the feature, but I could not find any resources regarding the testing conventions in python for root. If there are any specific guidelines, please let me know, otherwise I'll just send you a pull request and you can take a look if it is really necessary. Cheers",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:301,performance,resourc,resources,301,"Hi,. I am new to root and trying to wrap my head around some of its features. I thought a good place to start would be to work on this issue. I started by pythonizing `fitTo` and I'd like to send you a pull request. I take it that I should provide some tests for the feature, but I could not find any resources regarding the testing conventions in python for root. If there are any specific guidelines, please let me know, otherwise I'll just send you a pull request and you can take a look if it is really necessary. Cheers",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:253,safety,test,tests,253,"Hi,. I am new to root and trying to wrap my head around some of its features. I thought a good place to start would be to work on this issue. I started by pythonizing `fitTo` and I'd like to send you a pull request. I take it that I should provide some tests for the feature, but I could not find any resources regarding the testing conventions in python for root. If there are any specific guidelines, please let me know, otherwise I'll just send you a pull request and you can take a look if it is really necessary. Cheers",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:301,safety,resourc,resources,301,"Hi,. I am new to root and trying to wrap my head around some of its features. I thought a good place to start would be to work on this issue. I started by pythonizing `fitTo` and I'd like to send you a pull request. I take it that I should provide some tests for the feature, but I could not find any resources regarding the testing conventions in python for root. If there are any specific guidelines, please let me know, otherwise I'll just send you a pull request and you can take a look if it is really necessary. Cheers",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:325,safety,test,testing,325,"Hi,. I am new to root and trying to wrap my head around some of its features. I thought a good place to start would be to work on this issue. I started by pythonizing `fitTo` and I'd like to send you a pull request. I take it that I should provide some tests for the feature, but I could not find any resources regarding the testing conventions in python for root. If there are any specific guidelines, please let me know, otherwise I'll just send you a pull request and you can take a look if it is really necessary. Cheers",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:253,testability,test,tests,253,"Hi,. I am new to root and trying to wrap my head around some of its features. I thought a good place to start would be to work on this issue. I started by pythonizing `fitTo` and I'd like to send you a pull request. I take it that I should provide some tests for the feature, but I could not find any resources regarding the testing conventions in python for root. If there are any specific guidelines, please let me know, otherwise I'll just send you a pull request and you can take a look if it is really necessary. Cheers",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:301,testability,resourc,resources,301,"Hi,. I am new to root and trying to wrap my head around some of its features. I thought a good place to start would be to work on this issue. I started by pythonizing `fitTo` and I'd like to send you a pull request. I take it that I should provide some tests for the feature, but I could not find any resources regarding the testing conventions in python for root. If there are any specific guidelines, please let me know, otherwise I'll just send you a pull request and you can take a look if it is really necessary. Cheers",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:325,testability,test,testing,325,"Hi,. I am new to root and trying to wrap my head around some of its features. I thought a good place to start would be to work on this issue. I started by pythonizing `fitTo` and I'd like to send you a pull request. I take it that I should provide some tests for the feature, but I could not find any resources regarding the testing conventions in python for root. If there are any specific guidelines, please let me know, otherwise I'll just send you a pull request and you can take a look if it is really necessary. Cheers",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:391,usability,guid,guidelines,391,"Hi,. I am new to root and trying to wrap my head around some of its features. I thought a good place to start would be to work on this issue. I started by pythonizing `fitTo` and I'd like to send you a pull request. I take it that I should provide some tests for the feature, but I could not find any resources regarding the testing conventions in python for root. If there are any specific guidelines, please let me know, otherwise I'll just send you a pull request and you can take a look if it is really necessary. Cheers",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:168,interoperability,bind,bindings,168,"Hi @hcmidt,. I'm not working on RF, any more, but it's great to see someone offering help! Regarding tests, see here:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py. In this folder, you have all the tests for the Pythonisations. If you have something, include a test here (I guess it makes sense to create a new file for `RooAbsPdf` etc. @etejedor is the expert on PyROOT, so make sure to request him as a reviewer when there's something to look at. And request @guitargeek for the RooFit part as well!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:168,modifiability,bind,bindings,168,"Hi @hcmidt,. I'm not working on RF, any more, but it's great to see someone offering help! Regarding tests, see here:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py. In this folder, you have all the tests for the Pythonisations. If you have something, include a test here (I guess it makes sense to create a new file for `RooAbsPdf` etc. @etejedor is the expert on PyROOT, so make sure to request him as a reviewer when there's something to look at. And request @guitargeek for the RooFit part as well!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:101,safety,test,tests,101,"Hi @hcmidt,. I'm not working on RF, any more, but it's great to see someone offering help! Regarding tests, see here:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py. In this folder, you have all the tests for the Pythonisations. If you have something, include a test here (I guess it makes sense to create a new file for `RooAbsPdf` etc. @etejedor is the expert on PyROOT, so make sure to request him as a reviewer when there's something to look at. And request @guitargeek for the RooFit part as well!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:199,safety,test,test,199,"Hi @hcmidt,. I'm not working on RF, any more, but it's great to see someone offering help! Regarding tests, see here:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py. In this folder, you have all the tests for the Pythonisations. If you have something, include a test here (I guess it makes sense to create a new file for `RooAbsPdf` etc. @etejedor is the expert on PyROOT, so make sure to request him as a reviewer when there's something to look at. And request @guitargeek for the RooFit part as well!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:260,safety,test,tests,260,"Hi @hcmidt,. I'm not working on RF, any more, but it's great to see someone offering help! Regarding tests, see here:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py. In this folder, you have all the tests for the Pythonisations. If you have something, include a test here (I guess it makes sense to create a new file for `RooAbsPdf` etc. @etejedor is the expert on PyROOT, so make sure to request him as a reviewer when there's something to look at. And request @guitargeek for the RooFit part as well!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:323,safety,test,test,323,"Hi @hcmidt,. I'm not working on RF, any more, but it's great to see someone offering help! Regarding tests, see here:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py. In this folder, you have all the tests for the Pythonisations. If you have something, include a test here (I guess it makes sense to create a new file for `RooAbsPdf` etc. @etejedor is the expert on PyROOT, so make sure to request him as a reviewer when there's something to look at. And request @guitargeek for the RooFit part as well!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:467,safety,review,reviewer,467,"Hi @hcmidt,. I'm not working on RF, any more, but it's great to see someone offering help! Regarding tests, see here:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py. In this folder, you have all the tests for the Pythonisations. If you have something, include a test here (I guess it makes sense to create a new file for `RooAbsPdf` etc. @etejedor is the expert on PyROOT, so make sure to request him as a reviewer when there's something to look at. And request @guitargeek for the RooFit part as well!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:101,testability,test,tests,101,"Hi @hcmidt,. I'm not working on RF, any more, but it's great to see someone offering help! Regarding tests, see here:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py. In this folder, you have all the tests for the Pythonisations. If you have something, include a test here (I guess it makes sense to create a new file for `RooAbsPdf` etc. @etejedor is the expert on PyROOT, so make sure to request him as a reviewer when there's something to look at. And request @guitargeek for the RooFit part as well!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:199,testability,test,test,199,"Hi @hcmidt,. I'm not working on RF, any more, but it's great to see someone offering help! Regarding tests, see here:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py. In this folder, you have all the tests for the Pythonisations. If you have something, include a test here (I guess it makes sense to create a new file for `RooAbsPdf` etc. @etejedor is the expert on PyROOT, so make sure to request him as a reviewer when there's something to look at. And request @guitargeek for the RooFit part as well!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:260,testability,test,tests,260,"Hi @hcmidt,. I'm not working on RF, any more, but it's great to see someone offering help! Regarding tests, see here:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py. In this folder, you have all the tests for the Pythonisations. If you have something, include a test here (I guess it makes sense to create a new file for `RooAbsPdf` etc. @etejedor is the expert on PyROOT, so make sure to request him as a reviewer when there's something to look at. And request @guitargeek for the RooFit part as well!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:323,testability,test,test,323,"Hi @hcmidt,. I'm not working on RF, any more, but it's great to see someone offering help! Regarding tests, see here:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py. In this folder, you have all the tests for the Pythonisations. If you have something, include a test here (I guess it makes sense to create a new file for `RooAbsPdf` etc. @etejedor is the expert on PyROOT, so make sure to request him as a reviewer when there's something to look at. And request @guitargeek for the RooFit part as well!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:467,testability,review,reviewer,467,"Hi @hcmidt,. I'm not working on RF, any more, but it's great to see someone offering help! Regarding tests, see here:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py. In this folder, you have all the tests for the Pythonisations. If you have something, include a test here (I guess it makes sense to create a new file for `RooAbsPdf` etc. @etejedor is the expert on PyROOT, so make sure to request him as a reviewer when there's something to look at. And request @guitargeek for the RooFit part as well!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:85,usability,help,help,85,"Hi @hcmidt,. I'm not working on RF, any more, but it's great to see someone offering help! Regarding tests, see here:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/roodatahist_ploton.py. In this folder, you have all the tests for the Pythonisations. If you have something, include a test here (I guess it makes sense to create a new file for `RooAbsPdf` etc. @etejedor is the expert on PyROOT, so make sure to request him as a reviewer when there's something to look at. And request @guitargeek for the RooFit part as well!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:145,interoperability,bind,bindings,145,PS:. Maybe this test is more representative of how a test for a Pythonisation would look like:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooabscollection_len.py. And here the corresponding pythonisation:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooabscollection.py,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:298,interoperability,bind,bindings,298,PS:. Maybe this test is more representative of how a test for a Pythonisation would look like:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooabscollection_len.py. And here the corresponding pythonisation:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooabscollection.py,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:145,modifiability,bind,bindings,145,PS:. Maybe this test is more representative of how a test for a Pythonisation would look like:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooabscollection_len.py. And here the corresponding pythonisation:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooabscollection.py,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:298,modifiability,bind,bindings,298,PS:. Maybe this test is more representative of how a test for a Pythonisation would look like:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooabscollection_len.py. And here the corresponding pythonisation:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooabscollection.py,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:16,safety,test,test,16,PS:. Maybe this test is more representative of how a test for a Pythonisation would look like:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooabscollection_len.py. And here the corresponding pythonisation:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooabscollection.py,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:53,safety,test,test,53,PS:. Maybe this test is more representative of how a test for a Pythonisation would look like:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooabscollection_len.py. And here the corresponding pythonisation:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooabscollection.py,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:176,safety,test,test,176,PS:. Maybe this test is more representative of how a test for a Pythonisation would look like:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooabscollection_len.py. And here the corresponding pythonisation:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooabscollection.py,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:16,testability,test,test,16,PS:. Maybe this test is more representative of how a test for a Pythonisation would look like:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooabscollection_len.py. And here the corresponding pythonisation:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooabscollection.py,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:53,testability,test,test,53,PS:. Maybe this test is more representative of how a test for a Pythonisation would look like:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooabscollection_len.py. And here the corresponding pythonisation:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooabscollection.py,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:176,testability,test,test,176,PS:. Maybe this test is more representative of how a test for a Pythonisation would look like:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/test/rooabscollection_len.py. And here the corresponding pythonisation:. https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_rooabscollection.py,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:56,safety,review,reviews,56,"Another Pythonization idea that occured to me in the PR reviews: implement `+=` for RooArgLists. So instead of doing this:. ```Python. l = ROOT.RooArgList(). l.add(x). l.add(y). ```. One can also do this, just like with Python lists:. ```Python. l = ROOT.RooArgList(). l += [x, y]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:56,testability,review,reviews,56,"Another Pythonization idea that occured to me in the PR reviews: implement `+=` for RooArgLists. So instead of doing this:. ```Python. l = ROOT.RooArgList(). l.add(x). l.add(y). ```. One can also do this, just like with Python lists:. ```Python. l = ROOT.RooArgList(). l += [x, y]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:354,availability,redund,redundant,354,"The pythonizations suggested in this issue have been implemented, so it can be closed. For any further specific RooFit pythonization ideas, please open a new issue or a PR directly. The Pythonization of RooArgLists that I suggested before is not so useful after all, because now that RooArgLists can be replaced by Python lists to begin with it would be redundant to reimplement the list behavior.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:354,deployability,redundan,redundant,354,"The pythonizations suggested in this issue have been implemented, so it can be closed. For any further specific RooFit pythonization ideas, please open a new issue or a PR directly. The Pythonization of RooArgLists that I suggested before is not so useful after all, because now that RooArgLists can be replaced by Python lists to begin with it would be redundant to reimplement the list behavior.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:103,interoperability,specif,specific,103,"The pythonizations suggested in this issue have been implemented, so it can be closed. For any further specific RooFit pythonization ideas, please open a new issue or a PR directly. The Pythonization of RooArgLists that I suggested before is not so useful after all, because now that RooArgLists can be replaced by Python lists to begin with it would be redundant to reimplement the list behavior.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:354,reliability,redundan,redundant,354,"The pythonizations suggested in this issue have been implemented, so it can be closed. For any further specific RooFit pythonization ideas, please open a new issue or a PR directly. The Pythonization of RooArgLists that I suggested before is not so useful after all, because now that RooArgLists can be replaced by Python lists to begin with it would be redundant to reimplement the list behavior.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:354,safety,redund,redundant,354,"The pythonizations suggested in this issue have been implemented, so it can be closed. For any further specific RooFit pythonization ideas, please open a new issue or a PR directly. The Pythonization of RooArgLists that I suggested before is not so useful after all, because now that RooArgLists can be replaced by Python lists to begin with it would be redundant to reimplement the list behavior.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:79,usability,close,closed,79,"The pythonizations suggested in this issue have been implemented, so it can be closed. For any further specific RooFit pythonization ideas, please open a new issue or a PR directly. The Pythonization of RooArgLists that I suggested before is not so useful after all, because now that RooArgLists can be replaced by Python lists to begin with it would be redundant to reimplement the list behavior.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:388,usability,behavi,behavior,388,"The pythonizations suggested in this issue have been implemented, so it can be closed. For any further specific RooFit pythonization ideas, please open a new issue or a PR directly. The Pythonization of RooArgLists that I suggested before is not so useful after all, because now that RooArgLists can be replaced by Python lists to begin with it would be redundant to reimplement the list behavior.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:476,integrability,coupl,couple,476,"Reopened, because there are new ideas for Pythonizations mentioned in this comment:. https://github.com/root-project/root/issues/11421#issuecomment-1257015302. To quote that comment:. > 1. sometimes I would have found useful to be able to pass python number anywhere a `RooAbsReal` is required, although I suspect this may require a pythonization for each pdf. > 2. `RooSimultaneous` map constructor does not accept a python dictionary yet. > 3. one thing that surprised me a couple of times at the beginning is that `RooAbsArg` does not keep its servers alive from the python GC so you actually need the same workarounds as in C++ (importing frequently to a workspace). However, I suspect that if they did keep servers alive, server redirection would likely lead to desync between the C++ and python views of the graph. The third one is now implemented in #11500, which also got backported to 6.26.08",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:476,modifiability,coupl,couple,476,"Reopened, because there are new ideas for Pythonizations mentioned in this comment:. https://github.com/root-project/root/issues/11421#issuecomment-1257015302. To quote that comment:. > 1. sometimes I would have found useful to be able to pass python number anywhere a `RooAbsReal` is required, although I suspect this may require a pythonization for each pdf. > 2. `RooSimultaneous` map constructor does not accept a python dictionary yet. > 3. one thing that surprised me a couple of times at the beginning is that `RooAbsArg` does not keep its servers alive from the python GC so you actually need the same workarounds as in C++ (importing frequently to a workspace). However, I suspect that if they did keep servers alive, server redirection would likely lead to desync between the C++ and python views of the graph. The third one is now implemented in #11500, which also got backported to 6.26.08",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:486,performance,time,times,486,"Reopened, because there are new ideas for Pythonizations mentioned in this comment:. https://github.com/root-project/root/issues/11421#issuecomment-1257015302. To quote that comment:. > 1. sometimes I would have found useful to be able to pass python number anywhere a `RooAbsReal` is required, although I suspect this may require a pythonization for each pdf. > 2. `RooSimultaneous` map constructor does not accept a python dictionary yet. > 3. one thing that surprised me a couple of times at the beginning is that `RooAbsArg` does not keep its servers alive from the python GC so you actually need the same workarounds as in C++ (importing frequently to a workspace). However, I suspect that if they did keep servers alive, server redirection would likely lead to desync between the C++ and python views of the graph. The third one is now implemented in #11500, which also got backported to 6.26.08",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:400,reliability,doe,does,400,"Reopened, because there are new ideas for Pythonizations mentioned in this comment:. https://github.com/root-project/root/issues/11421#issuecomment-1257015302. To quote that comment:. > 1. sometimes I would have found useful to be able to pass python number anywhere a `RooAbsReal` is required, although I suspect this may require a pythonization for each pdf. > 2. `RooSimultaneous` map constructor does not accept a python dictionary yet. > 3. one thing that surprised me a couple of times at the beginning is that `RooAbsArg` does not keep its servers alive from the python GC so you actually need the same workarounds as in C++ (importing frequently to a workspace). However, I suspect that if they did keep servers alive, server redirection would likely lead to desync between the C++ and python views of the graph. The third one is now implemented in #11500, which also got backported to 6.26.08",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:529,reliability,doe,does,529,"Reopened, because there are new ideas for Pythonizations mentioned in this comment:. https://github.com/root-project/root/issues/11421#issuecomment-1257015302. To quote that comment:. > 1. sometimes I would have found useful to be able to pass python number anywhere a `RooAbsReal` is required, although I suspect this may require a pythonization for each pdf. > 2. `RooSimultaneous` map constructor does not accept a python dictionary yet. > 3. one thing that surprised me a couple of times at the beginning is that `RooAbsArg` does not keep its servers alive from the python GC so you actually need the same workarounds as in C++ (importing frequently to a workspace). However, I suspect that if they did keep servers alive, server redirection would likely lead to desync between the C++ and python views of the graph. The third one is now implemented in #11500, which also got backported to 6.26.08",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:476,testability,coupl,couple,476,"Reopened, because there are new ideas for Pythonizations mentioned in this comment:. https://github.com/root-project/root/issues/11421#issuecomment-1257015302. To quote that comment:. > 1. sometimes I would have found useful to be able to pass python number anywhere a `RooAbsReal` is required, although I suspect this may require a pythonization for each pdf. > 2. `RooSimultaneous` map constructor does not accept a python dictionary yet. > 3. one thing that surprised me a couple of times at the beginning is that `RooAbsArg` does not keep its servers alive from the python GC so you actually need the same workarounds as in C++ (importing frequently to a workspace). However, I suspect that if they did keep servers alive, server redirection would likely lead to desync between the C++ and python views of the graph. The third one is now implemented in #11500, which also got backported to 6.26.08",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:114,usability,command,command,114,"Another idea we discussed in the RooFit developers meeting: often a `RooLinkedList` is used to pass around RooFit command arguments, so it would be nice if it could be implicitly created from a Python dictionary to be used in any function that takes a RooLinkedList.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/issues/7217:133,usability,close,close,133,The remaining Pythonization suggestions in my last two posts were either implemented or deemed not relevant enough to do so. I'll re-close this issue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7217
https://github.com/root-project/root/pull/7220:0,availability,Failur,Failures,0,Failures are unrelated. Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7220
https://github.com/root-project/root/pull/7220:0,deployability,Fail,Failures,0,Failures are unrelated. Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7220
https://github.com/root-project/root/pull/7220:0,performance,Failur,Failures,0,Failures are unrelated. Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7220
https://github.com/root-project/root/pull/7220:0,reliability,Fail,Failures,0,Failures are unrelated. Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7220
https://github.com/root-project/root/issues/7223:29,usability,custom,custom,29,I think you want a dedicated custom action that users can [Book](https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html#a9ed8313806398d106bfc2390301c0408). In general you can also just `Take` std::vectors (or other collections) out of a RDataFrame.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7223
https://github.com/root-project/root/issues/7223:48,usability,user,users,48,I think you want a dedicated custom action that users can [Book](https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html#a9ed8313806398d106bfc2390301c0408). In general you can also just `Take` std::vectors (or other collections) out of a RDataFrame.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7223
https://github.com/root-project/root/issues/7223:119,integrability,Event,Eventually,119,"Book is good-ish, it would fill the dataset one-by-one, but RF can do better. I think `Take` is exactly what's needed! Eventually, this could look like:. ```c++. auto rooDataSet = rdf.RooDataSet(""datasetname"", {""x"", ""y"", ""z""});. pdf.fitTo(*rooDataSet);. ```. Internally, this would do something like:. ```c++. RooRealVar x(...);. RooRealVar y(...);. RooRealVar z(...);. auto xData = rdf.Take(""x"");. auto yData = rdf.Take(""y"");. auto zData = rdf.Take(""z"");. return RooDataSet(datasetname, RooArgSet(x, y, z), {std::move(*xData), std::move(*yData), std::move(*zData)}); // This constructor doesn't exist. ```. There is lots of details missing, but that's what it could do eventually. Maybe the `RooRealVars` have to be passed into whatever it is I wrote above, because they have ranges and binnings and labels ... In general, the thing is just supposed to connect those `RooRealVar` objects with the data that's taken from RDF. Possible?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7223
https://github.com/root-project/root/issues/7223:670,integrability,event,eventually,670,"Book is good-ish, it would fill the dataset one-by-one, but RF can do better. I think `Take` is exactly what's needed! Eventually, this could look like:. ```c++. auto rooDataSet = rdf.RooDataSet(""datasetname"", {""x"", ""y"", ""z""});. pdf.fitTo(*rooDataSet);. ```. Internally, this would do something like:. ```c++. RooRealVar x(...);. RooRealVar y(...);. RooRealVar z(...);. auto xData = rdf.Take(""x"");. auto yData = rdf.Take(""y"");. auto zData = rdf.Take(""z"");. return RooDataSet(datasetname, RooArgSet(x, y, z), {std::move(*xData), std::move(*yData), std::move(*zData)}); // This constructor doesn't exist. ```. There is lots of details missing, but that's what it could do eventually. Maybe the `RooRealVars` have to be passed into whatever it is I wrote above, because they have ranges and binnings and labels ... In general, the thing is just supposed to connect those `RooRealVar` objects with the data that's taken from RDF. Possible?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7223
https://github.com/root-project/root/issues/7223:588,reliability,doe,doesn,588,"Book is good-ish, it would fill the dataset one-by-one, but RF can do better. I think `Take` is exactly what's needed! Eventually, this could look like:. ```c++. auto rooDataSet = rdf.RooDataSet(""datasetname"", {""x"", ""y"", ""z""});. pdf.fitTo(*rooDataSet);. ```. Internally, this would do something like:. ```c++. RooRealVar x(...);. RooRealVar y(...);. RooRealVar z(...);. auto xData = rdf.Take(""x"");. auto yData = rdf.Take(""y"");. auto zData = rdf.Take(""z"");. return RooDataSet(datasetname, RooArgSet(x, y, z), {std::move(*xData), std::move(*yData), std::move(*zData)}); // This constructor doesn't exist. ```. There is lots of details missing, but that's what it could do eventually. Maybe the `RooRealVars` have to be passed into whatever it is I wrote above, because they have ranges and binnings and labels ... In general, the thing is just supposed to connect those `RooRealVar` objects with the data that's taken from RDF. Possible?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7223
https://github.com/root-project/root/issues/7223:397,interoperability,syntact,syntactic,397,"> Book is good-ish, it would fill the dataset one-by-one, but RF can do better. Uhm, `Book` exposes the exact same mechanics that RDF uses for its own actions like `rdf.RooDataSet`, so anything you would like to do in there, you can do in the helper type you pass to `Book`. Then it's a small step to go from `df.Book(RooDataSetMaker(...), {""x"", ""y"", ""z""})` to `df.MakeRooDataSet`, basically just syntactic sugar.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7223
https://github.com/root-project/root/issues/7223:92,security,expos,exposes,92,"> Book is good-ish, it would fill the dataset one-by-one, but RF can do better. Uhm, `Book` exposes the exact same mechanics that RDF uses for its own actions like `rdf.RooDataSet`, so anything you would like to do in there, you can do in the helper type you pass to `Book`. Then it's a small step to go from `df.Book(RooDataSetMaker(...), {""x"", ""y"", ""z""})` to `df.MakeRooDataSet`, basically just syntactic sugar.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7223
https://github.com/root-project/root/issues/7223:243,usability,help,helper,243,"> Book is good-ish, it would fill the dataset one-by-one, but RF can do better. Uhm, `Book` exposes the exact same mechanics that RDF uses for its own actions like `rdf.RooDataSet`, so anything you would like to do in there, you can do in the helper type you pass to `Book`. Then it's a small step to go from `df.Book(RooDataSetMaker(...), {""x"", ""y"", ""z""})` to `df.MakeRooDataSet`, basically just syntactic sugar.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7223
https://github.com/root-project/root/issues/7223:37,safety,test,tested,37,"Reopening, because weights should be tested (and supported). What's needed:. - [x] Creating and filling bare dataset / datahist. - [ ] A way to select the a weight column in RDataFrame, and tell the RooDataHist/RooDataSet instances about what's the weight. - [ ] Passing of the weight in the `add` call. - [ ] Test of weighted filling.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7223
https://github.com/root-project/root/issues/7223:310,safety,Test,Test,310,"Reopening, because weights should be tested (and supported). What's needed:. - [x] Creating and filling bare dataset / datahist. - [ ] A way to select the a weight column in RDataFrame, and tell the RooDataHist/RooDataSet instances about what's the weight. - [ ] Passing of the weight in the `add` call. - [ ] Test of weighted filling.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7223
https://github.com/root-project/root/issues/7223:37,testability,test,tested,37,"Reopening, because weights should be tested (and supported). What's needed:. - [x] Creating and filling bare dataset / datahist. - [ ] A way to select the a weight column in RDataFrame, and tell the RooDataHist/RooDataSet instances about what's the weight. - [ ] Passing of the weight in the `add` call. - [ ] Test of weighted filling.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7223
https://github.com/root-project/root/issues/7223:310,testability,Test,Test,310,"Reopening, because weights should be tested (and supported). What's needed:. - [x] Creating and filling bare dataset / datahist. - [ ] A way to select the a weight column in RDataFrame, and tell the RooDataHist/RooDataSet instances about what's the weight. - [ ] Passing of the weight in the `add` call. - [ ] Test of weighted filling.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7223
https://github.com/root-project/root/issues/7223:49,usability,support,supported,49,"Reopening, because weights should be tested (and supported). What's needed:. - [x] Creating and filling bare dataset / datahist. - [ ] A way to select the a weight column in RDataFrame, and tell the RooDataHist/RooDataSet instances about what's the weight. - [ ] Passing of the weight in the `add` call. - [ ] Test of weighted filling.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7223
https://github.com/root-project/root/pull/7226:11,deployability,build,build,11,@phsft-bot build just on windows10/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7226
https://github.com/root-project/root/pull/7226:79,deployability,updat,update,79,"> @bellenot ""no space left on device"" 😕. Should be fixed now. Just let Jenkins update the node status...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7226
https://github.com/root-project/root/pull/7226:79,safety,updat,update,79,"> @bellenot ""no space left on device"" 😕. Should be fixed now. Just let Jenkins update the node status...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7226
https://github.com/root-project/root/pull/7226:79,security,updat,update,79,"> @bellenot ""no space left on device"" 😕. Should be fixed now. Just let Jenkins update the node status...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7226
https://github.com/root-project/root/pull/7226:95,usability,statu,status,95,"> @bellenot ""no space left on device"" 😕. Should be fixed now. Just let Jenkins update the node status...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7226
https://github.com/root-project/root/pull/7226:22,availability,avail,available,22,@eguiraud the node is available now,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7226
https://github.com/root-project/root/pull/7226:22,reliability,availab,available,22,@eguiraud the node is available now,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7226
https://github.com/root-project/root/pull/7226:22,safety,avail,available,22,@eguiraud the node is available now,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7226
https://github.com/root-project/root/pull/7226:22,security,availab,available,22,@eguiraud the node is available now,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7226
https://github.com/root-project/root/pull/7226:11,deployability,build,build,11,@phsft-bot build just on windows10/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7226
https://github.com/root-project/root/issues/7227:4,usability,person,personally,4,"I'm personally not going to do this, but a newcomer might like to do it as a first issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7227
https://github.com/root-project/root/issues/7227:110,deployability,updat,updated,110,"That's not how we do this. Any file that receives at least non-trivial edits needs to have the copyright year updated. As such it can be automatized, but it's for now part of the developers' task.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7227
https://github.com/root-project/root/issues/7227:137,deployability,automat,automatized,137,"That's not how we do this. Any file that receives at least non-trivial edits needs to have the copyright year updated. As such it can be automatized, but it's for now part of the developers' task.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7227
https://github.com/root-project/root/issues/7227:110,safety,updat,updated,110,"That's not how we do this. Any file that receives at least non-trivial edits needs to have the copyright year updated. As such it can be automatized, but it's for now part of the developers' task.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7227
https://github.com/root-project/root/issues/7227:110,security,updat,updated,110,"That's not how we do this. Any file that receives at least non-trivial edits needs to have the copyright year updated. As such it can be automatized, but it's for now part of the developers' task.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7227
https://github.com/root-project/root/issues/7227:137,testability,automat,automatized,137,"That's not how we do this. Any file that receives at least non-trivial edits needs to have the copyright year updated. As such it can be automatized, but it's for now part of the developers' task.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7227
https://github.com/root-project/root/pull/7228:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7228
https://github.com/root-project/root/pull/7228:98,availability,failur,failures,98,@ferdymercury could you fork also [roottest](https://github.com/root-project/roottest) to prevent failures (timeout) on Windows nodes. Thanks,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7228
https://github.com/root-project/root/pull/7228:98,deployability,fail,failures,98,@ferdymercury could you fork also [roottest](https://github.com/root-project/roottest) to prevent failures (timeout) on Windows nodes. Thanks,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7228
https://github.com/root-project/root/pull/7228:98,performance,failur,failures,98,@ferdymercury could you fork also [roottest](https://github.com/root-project/roottest) to prevent failures (timeout) on Windows nodes. Thanks,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7228
https://github.com/root-project/root/pull/7228:108,performance,time,timeout,108,@ferdymercury could you fork also [roottest](https://github.com/root-project/roottest) to prevent failures (timeout) on Windows nodes. Thanks,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7228
https://github.com/root-project/root/pull/7228:98,reliability,fail,failures,98,@ferdymercury could you fork also [roottest](https://github.com/root-project/roottest) to prevent failures (timeout) on Windows nodes. Thanks,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7228
https://github.com/root-project/root/pull/7228:90,safety,prevent,prevent,90,@ferdymercury could you fork also [roottest](https://github.com/root-project/roottest) to prevent failures (timeout) on Windows nodes. Thanks,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7228
https://github.com/root-project/root/pull/7228:108,safety,timeout,timeout,108,@ferdymercury could you fork also [roottest](https://github.com/root-project/roottest) to prevent failures (timeout) on Windows nodes. Thanks,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7228
https://github.com/root-project/root/pull/7228:90,security,preven,prevent,90,@ferdymercury could you fork also [roottest](https://github.com/root-project/roottest) to prevent failures (timeout) on Windows nodes. Thanks,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7228
https://github.com/root-project/root/pull/7228:100,availability,failur,failures,100,"> @ferdymercury could you fork also [roottest](https://github.com/root-project/roottest) to prevent failures (timeout) on Windows nodes. Thanks. Ok, forked. :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7228
https://github.com/root-project/root/pull/7228:100,deployability,fail,failures,100,"> @ferdymercury could you fork also [roottest](https://github.com/root-project/roottest) to prevent failures (timeout) on Windows nodes. Thanks. Ok, forked. :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7228
https://github.com/root-project/root/pull/7228:100,performance,failur,failures,100,"> @ferdymercury could you fork also [roottest](https://github.com/root-project/roottest) to prevent failures (timeout) on Windows nodes. Thanks. Ok, forked. :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7228
https://github.com/root-project/root/pull/7228:110,performance,time,timeout,110,"> @ferdymercury could you fork also [roottest](https://github.com/root-project/roottest) to prevent failures (timeout) on Windows nodes. Thanks. Ok, forked. :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7228
https://github.com/root-project/root/pull/7228:100,reliability,fail,failures,100,"> @ferdymercury could you fork also [roottest](https://github.com/root-project/roottest) to prevent failures (timeout) on Windows nodes. Thanks. Ok, forked. :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7228
https://github.com/root-project/root/pull/7228:92,safety,prevent,prevent,92,"> @ferdymercury could you fork also [roottest](https://github.com/root-project/roottest) to prevent failures (timeout) on Windows nodes. Thanks. Ok, forked. :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7228
https://github.com/root-project/root/pull/7228:110,safety,timeout,timeout,110,"> @ferdymercury could you fork also [roottest](https://github.com/root-project/roottest) to prevent failures (timeout) on Windows nodes. Thanks. Ok, forked. :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7228
https://github.com/root-project/root/pull/7228:92,security,preven,prevent,92,"> @ferdymercury could you fork also [roottest](https://github.com/root-project/roottest) to prevent failures (timeout) on Windows nodes. Thanks. Ok, forked. :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7228
https://github.com/root-project/root/pull/7232:11,deployability,build,build,11,@phsft-bot build please,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7232
https://github.com/root-project/root/pull/7232:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7232
https://github.com/root-project/root/pull/7232:5,availability,failur,failure,5,Test failure is unrelated (LLVM upgrade-related).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7232
https://github.com/root-project/root/pull/7232:5,deployability,fail,failure,5,Test failure is unrelated (LLVM upgrade-related).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7232
https://github.com/root-project/root/pull/7232:32,deployability,upgrad,upgrade-related,32,Test failure is unrelated (LLVM upgrade-related).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7232
https://github.com/root-project/root/pull/7232:32,modifiability,upgrad,upgrade-related,32,Test failure is unrelated (LLVM upgrade-related).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7232
https://github.com/root-project/root/pull/7232:5,performance,failur,failure,5,Test failure is unrelated (LLVM upgrade-related).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7232
https://github.com/root-project/root/pull/7232:5,reliability,fail,failure,5,Test failure is unrelated (LLVM upgrade-related).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7232
https://github.com/root-project/root/pull/7232:0,safety,Test,Test,0,Test failure is unrelated (LLVM upgrade-related).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7232
https://github.com/root-project/root/pull/7232:0,testability,Test,Test,0,Test failure is unrelated (LLVM upgrade-related).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7232
https://github.com/root-project/root/pull/7233:11,deployability,build,build,11,@phsft-bot build.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7233
https://github.com/root-project/root/pull/7233:11,deployability,build,build,11,@phsft-bot build.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7233
https://github.com/root-project/root/pull/7233:18,interoperability,standard,standard,18,"Hi, `INT_MAX` [is standard](https://en.cppreference.com/w/cpp/types/climits), but it's defined in `<climits>` not `<limits>`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7233
https://github.com/root-project/root/pull/7234:28,reliability,doe,does,28,"gcc 5.3, used in Ubuntu 16, does not support `__attribute__((deprecated))` in that position: https://godbolt.org/z/jz1ove",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7234
https://github.com/root-project/root/pull/7234:37,usability,support,support,37,"gcc 5.3, used in Ubuntu 16, does not support `__attribute__((deprecated))` in that position: https://godbolt.org/z/jz1ove",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7234
https://github.com/root-project/root/pull/7234:7,deployability,updat,updated,7,"I have updated the PR by rebasing on master, refreshing the version in the deprecation macros, and dropping the GCC 5 workaround because the minimum supported version is GCC 8 anyway:. https://root.cern/install/dependencies/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7234
https://github.com/root-project/root/pull/7234:60,deployability,version,version,60,"I have updated the PR by rebasing on master, refreshing the version in the deprecation macros, and dropping the GCC 5 workaround because the minimum supported version is GCC 8 anyway:. https://root.cern/install/dependencies/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7234
https://github.com/root-project/root/pull/7234:159,deployability,version,version,159,"I have updated the PR by rebasing on master, refreshing the version in the deprecation macros, and dropping the GCC 5 workaround because the minimum supported version is GCC 8 anyway:. https://root.cern/install/dependencies/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7234
https://github.com/root-project/root/pull/7234:203,deployability,instal,install,203,"I have updated the PR by rebasing on master, refreshing the version in the deprecation macros, and dropping the GCC 5 workaround because the minimum supported version is GCC 8 anyway:. https://root.cern/install/dependencies/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7234
https://github.com/root-project/root/pull/7234:211,deployability,depend,dependencies,211,"I have updated the PR by rebasing on master, refreshing the version in the deprecation macros, and dropping the GCC 5 workaround because the minimum supported version is GCC 8 anyway:. https://root.cern/install/dependencies/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7234
https://github.com/root-project/root/pull/7234:60,integrability,version,version,60,"I have updated the PR by rebasing on master, refreshing the version in the deprecation macros, and dropping the GCC 5 workaround because the minimum supported version is GCC 8 anyway:. https://root.cern/install/dependencies/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7234
https://github.com/root-project/root/pull/7234:159,integrability,version,version,159,"I have updated the PR by rebasing on master, refreshing the version in the deprecation macros, and dropping the GCC 5 workaround because the minimum supported version is GCC 8 anyway:. https://root.cern/install/dependencies/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7234
https://github.com/root-project/root/pull/7234:211,integrability,depend,dependencies,211,"I have updated the PR by rebasing on master, refreshing the version in the deprecation macros, and dropping the GCC 5 workaround because the minimum supported version is GCC 8 anyway:. https://root.cern/install/dependencies/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7234
https://github.com/root-project/root/pull/7234:60,modifiability,version,version,60,"I have updated the PR by rebasing on master, refreshing the version in the deprecation macros, and dropping the GCC 5 workaround because the minimum supported version is GCC 8 anyway:. https://root.cern/install/dependencies/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7234
https://github.com/root-project/root/pull/7234:159,modifiability,version,version,159,"I have updated the PR by rebasing on master, refreshing the version in the deprecation macros, and dropping the GCC 5 workaround because the minimum supported version is GCC 8 anyway:. https://root.cern/install/dependencies/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7234
https://github.com/root-project/root/pull/7234:211,modifiability,depend,dependencies,211,"I have updated the PR by rebasing on master, refreshing the version in the deprecation macros, and dropping the GCC 5 workaround because the minimum supported version is GCC 8 anyway:. https://root.cern/install/dependencies/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7234
https://github.com/root-project/root/pull/7234:7,safety,updat,updated,7,"I have updated the PR by rebasing on master, refreshing the version in the deprecation macros, and dropping the GCC 5 workaround because the minimum supported version is GCC 8 anyway:. https://root.cern/install/dependencies/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7234
https://github.com/root-project/root/pull/7234:211,safety,depend,dependencies,211,"I have updated the PR by rebasing on master, refreshing the version in the deprecation macros, and dropping the GCC 5 workaround because the minimum supported version is GCC 8 anyway:. https://root.cern/install/dependencies/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7234
https://github.com/root-project/root/pull/7234:7,security,updat,updated,7,"I have updated the PR by rebasing on master, refreshing the version in the deprecation macros, and dropping the GCC 5 workaround because the minimum supported version is GCC 8 anyway:. https://root.cern/install/dependencies/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7234
https://github.com/root-project/root/pull/7234:211,testability,depend,dependencies,211,"I have updated the PR by rebasing on master, refreshing the version in the deprecation macros, and dropping the GCC 5 workaround because the minimum supported version is GCC 8 anyway:. https://root.cern/install/dependencies/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7234
https://github.com/root-project/root/pull/7234:141,usability,minim,minimum,141,"I have updated the PR by rebasing on master, refreshing the version in the deprecation macros, and dropping the GCC 5 workaround because the minimum supported version is GCC 8 anyway:. https://root.cern/install/dependencies/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7234
https://github.com/root-project/root/pull/7234:149,usability,support,supported,149,"I have updated the PR by rebasing on master, refreshing the version in the deprecation macros, and dropping the GCC 5 workaround because the minimum supported version is GCC 8 anyway:. https://root.cern/install/dependencies/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7234
https://github.com/root-project/root/issues/7236:4811,availability,error,error-skeleton,4811,"char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 11: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 12: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 13: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 14: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:4973,availability,error,error-skeleton,4973,"::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 11: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 12: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 13: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 14: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:5128,availability,error,error-skeleton,5128,":2566. 11: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 12: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 13: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 14: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 5: TMemFile::TMemFile(char const*, TMemFi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:5188,availability,error,error-skeleton,5188,"ation_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 12: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 13: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 14: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 5: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:7847,availability,error,error-skeleton,7847," char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 9: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 10: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 11: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 12: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 13: call_init.part.0 in ./elf/./elf/dl-init.c:70. 14: call_init in ./elf/./elf/dl-init.c:33. 15: _dl_init in ./elf/./elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. Uninitialised value was created by a s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:8009,availability,error,error-skeleton,8009,"d::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 9: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 10: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 11: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 12: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 13: call_init.part.0 in ./elf/./elf/dl-init.c:70. 14: call_init in ./elf/./elf/dl-init.c:33. 15: _dl_init in ./elf/./elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:8164,availability,error,error-skeleton,8164,"x:2566. 9: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 10: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 11: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 12: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 13: call_init.part.0 in ./elf/./elf/dl-init.c:70. 14: call_init in ./elf/./elf/dl-init.c:33. 15: _dl_init in ./elf/./elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Invalid read of size 4. in ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 1: ROOT::Internal::DeleteChange",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:8224,availability,error,error-skeleton,8224,"ation_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 10: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 11: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 12: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 13: call_init.part.0 in ./elf/./elf/dl-init.c:70. 14: call_init in ./elf/./elf/dl-init.c:33. 15: _dl_init in ./elf/./elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Invalid read of size 4. in ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 1: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:12314,availability,operat,operator,12314,"<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 25: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 26: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. Address 0x1053183c is 12 bytes inside a block of size 16 free'd 1: operator delete(void*) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectDealloc(void*) in /opt/root_src/core/base/src/TStorage.cxx:324. 3: TObject::operator delete(void*) in /opt/root_src/core/base/src/TObject.cxx:1084. 4: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:168. 5: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:113. 6: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 7: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 8: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 9: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 10: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 11: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 12: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 13: ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:12492,availability,operat,operator,12492,"ar const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 26: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. Address 0x1053183c is 12 bytes inside a block of size 16 free'd 1: operator delete(void*) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectDealloc(void*) in /opt/root_src/core/base/src/TStorage.cxx:324. 3: TObject::operator delete(void*) in /opt/root_src/core/base/src/TObject.cxx:1084. 4: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:168. 5: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:113. 6: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 7: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 8: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 9: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 10: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 11: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 12: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 13: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 14: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:14681,availability,operat,operator,14681,"veConsistency.h:243. 16: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 17: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 18: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 19: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 20: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 21: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 22: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 23: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 24: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 25: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 26: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. Block was alloc'd at 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectAlloc(unsigned long) in /opt/root_src/core/base/src/TStorage.cxx:292. 3: TObject::operator new(unsigned long) in /opt/root_src/core/base/inc/TObject.h:181. 4: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:81. 5: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 6: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 7: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 8: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 9: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 10: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 11: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 12: TObject::~TObject() in /opt/root_src/core/base/src/TObject.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:14870,availability,operat,operator,14870,": ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 19: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 20: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 21: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 22: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 23: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 24: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 25: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 26: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. Block was alloc'd at 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectAlloc(unsigned long) in /opt/root_src/core/base/src/TStorage.cxx:292. 3: TObject::operator new(unsigned long) in /opt/root_src/core/base/inc/TObject.h:181. 4: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:81. 5: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 6: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 7: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 8: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 9: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 10: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 11: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 12: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 13: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 14: ROOT:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:22996,availability,error,error-skeleton,22996,"char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 14: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or move depends on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 4: TBufferIO::TBufferIO(TBuffer::EMod",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:23158,availability,error,error-skeleton,23158,"::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 14: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or move depends on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 4: TBufferIO::TBufferIO(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferIO.cxx:51. 5: TBufferFile::TBufferFile(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferFile.cxx:90. 6: TKey::Read",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:23313,availability,error,error-skeleton,23313,":2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 14: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or move depends on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 4: TBufferIO::TBufferIO(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferIO.cxx:51. 5: TBufferFile::TBufferFile(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferFile.cxx:90. 6: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1025. 7: TDirectoryFile::GetObjectChecked(char const*, TClass const*) in /opt/root_src/io/io/s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:23373,availability,error,error-skeleton,23373,"ation_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 14: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or move depends on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 4: TBufferIO::TBufferIO(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferIO.cxx:51. 5: TBufferFile::TBufferFile(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferFile.cxx:90. 6: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1025. 7: TDirectoryFile::GetObjectChecked(char const*, TClass const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1111. 8: void TDirectory::GetObject<TO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:26105,availability,error,error-skeleton,26105,":2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_demoMem_C_ACLiC_dict_Impl() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:89. 14: (anonymous namespace)::DictInit::DictInit() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:97. 15: __static_initialization_and_destruction_0(int, int) in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:99. 16: _GLOBAL__sub_I_demoMem_C_ACLiC_dict.cxx in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:103. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1024. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TArchiveFile::ParseUrl(char const*, TString&, TString&, TStr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:26267,availability,error,error-skeleton,26267,"har, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_demoMem_C_ACLiC_dict_Impl() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:89. 14: (anonymous namespace)::DictInit::DictInit() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:97. 15: __static_initialization_and_destruction_0(int, int) in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:99. 16: _GLOBAL__sub_I_demoMem_C_ACLiC_dict.cxx in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:103. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1024. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:152. 5: TArchiveFile::Open(char const*, TFile*) in /opt/root_src/io/io/src/TArchiveFile.cxx:131. 6: TFile::TFile",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:26422,availability,error,error-skeleton,26422,"<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_demoMem_C_ACLiC_dict_Impl() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:89. 14: (anonymous namespace)::DictInit::DictInit() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:97. 15: __static_initialization_and_destruction_0(int, int) in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:99. 16: _GLOBAL__sub_I_demoMem_C_ACLiC_dict.cxx in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:103. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1024. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:152. 5: TArchiveFile::Open(char const*, TFile*) in /opt/root_src/io/io/src/TArchiveFile.cxx:131. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:397. 7: TMemFile::TMemFile(char const*, char*, long long, char const*, ch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:26482,availability,error,error-skeleton,26482,"src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_demoMem_C_ACLiC_dict_Impl() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:89. 14: (anonymous namespace)::DictInit::DictInit() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:97. 15: __static_initialization_and_destruction_0(int, int) in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:99. 16: _GLOBAL__sub_I_demoMem_C_ACLiC_dict.cxx in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:103. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1024. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:152. 5: TArchiveFile::Open(char const*, TFile*) in /opt/root_src/io/io/src/TArchiveFile.cxx:131. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:397. 7: TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:33319,availability,operat,operator,33319,"55. 16: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 17: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 18: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 19: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 20: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 21: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 22: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3775. 96 bytes in 1 blocks are possibly lost in loss record 4,046 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:35920,availability,operat,operator,35920,"hared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 96 bytes in 1 blocks are possibly lost in loss record 4,047 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:73718,availability,operat,operator,73718,"har_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TClass::LoadClassDefault(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5779. 12: TClass::LoadClass(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5756. 13: TROOT::LoadClass(char const*, bool) const in /opt/root_src/core/base/src/TROOT.cxx:2130. 14: TClass::GetClass(ClassInfo_t*, bool, bool) in /opt/root_src/core/meta/src/TClass.cxx:3379. 15: TBaseClass::GetClassPointer(bool) in /opt/root_src/core/meta/src/TBaseClass.cxx:66. 16: TClass::GetBaseClass(TClass const*) in /opt/root_src/core/meta/src/TClass.cxx:2687. 17: TClass::InheritsFrom(TClass const*) const in /opt/root_src/core/meta/src/TClass.cxx:4905. 18: TClass::Property() const in /opt/root_src/core/meta/src/TClass.cxx:6111. 19: TClass::ClassProperty() const in /opt/root_src/core/meta/src/TClass.cxx:2398. 20: TIsAProxy::operator()(void const*) in /opt/root_src/core/meta/src/TIsAProxy.cxx:93. 21: TClass::GetActualClass(void const*) const in /opt/root_src/core/meta/src/TClass.cxx:2612. 22: TKey::TKey(void const*, TClass const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:312. 23: TFile::CreateKey(TDirectory*, void const*, TClass const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:1039. 24: TDirectoryFile::WriteObjectAny(void const*, TClass const*, char const*, char const*, int) in /opt/root_src/io/io/src/TDirectoryFile.cxx:2119. 25: TDirectoryFile::WriteObjectAny(void const*, char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TDirectoryFile.cxx:2036. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:0,deployability,Log,Log,0,"Log when running with valgrind:. ```. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:746. 5: TUnixSystem::OpenDirectory(char const*) in /opt/root_src/core/unix/src/TUnixSystem.cxx:1362. 6: TCling::LoadLibraryMap(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:5737. 7: TCling::Initialize() in /opt/root_src/core/metacling/src/TCling.cxx:1660. 8: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2116. 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 13: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:63,deployability,depend,depends,63,"Log when running with valgrind:. ```. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:746. 5: TUnixSystem::OpenDirectory(char const*) in /opt/root_src/core/unix/src/TUnixSystem.cxx:1362. 6: TCling::LoadLibraryMap(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:5737. 7: TCling::Initialize() in /opt/root_src/core/metacling/src/TCling.cxx:1660. 8: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2116. 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 13: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:188,deployability,Updat,UpdateIsOnHeap,188,"Log when running with valgrind:. ```. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:746. 5: TUnixSystem::OpenDirectory(char const*) in /opt/root_src/core/unix/src/TUnixSystem.cxx:1362. 6: TCling::LoadLibraryMap(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:5737. 7: TCling::Initialize() in /opt/root_src/core/metacling/src/TCling.cxx:1660. 8: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2116. 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 13: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:1345,deployability,stack,stack,1345,"base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:746. 5: TUnixSystem::OpenDirectory(char const*) in /opt/root_src/core/unix/src/TUnixSystem.cxx:1362. 6: TCling::LoadLibraryMap(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:5737. 7: TCling::Initialize() in /opt/root_src/core/metacling/src/TCling.cxx:1660. 8: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2116. 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 13: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:177. 6: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 7: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TApplication::GetOptions(int*, char**) in /opt/ro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:1478,deployability,depend,depends,1478,"*, void*) in /opt/root_src/core/base/src/TSystem.cxx:746. 5: TUnixSystem::OpenDirectory(char const*) in /opt/root_src/core/unix/src/TUnixSystem.cxx:1362. 6: TCling::LoadLibraryMap(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:5737. 7: TCling::Initialize() in /opt/root_src/core/metacling/src/TCling.cxx:1660. 8: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2116. 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 13: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:177. 6: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 7: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:346. Conditional jump or move depends on uninitialised value(s). in TDirectory::TDirectory() in ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:1603,deployability,Updat,UpdateIsOnHeap,1603,"src/TUnixSystem.cxx:1362. 6: TCling::LoadLibraryMap(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:5737. 7: TCling::Initialize() in /opt/root_src/core/metacling/src/TCling.cxx:1660. 8: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2116. 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 13: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:177. 6: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 7: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:346. Conditional jump or move depends on uninitialised value(s). in TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:2279,deployability,stack,stack,2279,"rc/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:177. 6: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 7: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:346. Conditional jump or move depends on uninitialised value(s). in TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed() in /opt/root_src/core/base/inc/TNamed.h:36. 4: TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 5: TDirectoryFile::TDirectoryFile() in /opt/root_src/io/io/src/TDirectoryFile.cxx:61. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 7: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 8: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:2416,deployability,depend,depends,2416,"c/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:177. 6: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 7: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:346. Conditional jump or move depends on uninitialised value(s). in TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed() in /opt/root_src/core/base/inc/TNamed.h:36. 4: TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 5: TDirectoryFile::TDirectoryFile() in /opt/root_src/io/io/src/TDirectoryFile.cxx:61. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 7: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 8: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 9: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:2542,deployability,Updat,UpdateIsOnHeap,2542,"/opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:177. 6: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 7: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:346. Conditional jump or move depends on uninitialised value(s). in TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed() in /opt/root_src/core/base/inc/TNamed.h:36. 4: TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 5: TDirectoryFile::TDirectoryFile() in /opt/root_src/io/io/src/TDirectoryFile.cxx:61. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 7: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 8: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 9: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocato",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:4230,deployability,build,build,4230,"aits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 9: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 10: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 11: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 12: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 13: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 14: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:4236,deployability,build,build-root-Desktop-Debug,4236,"::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 9: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 10: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 11: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 12: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 13: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 14: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:4349,deployability,build,build,4349," const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 10: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 11: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 12: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 13: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 14: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:4355,deployability,build,build-root-Desktop-Debug,4355,"onst**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 10: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 11: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 12: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 13: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 14: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:4476,deployability,build,build,4476,"r, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 10: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 11: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 12: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 13: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 14: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:4482,deployability,build,build-root-Desktop-Debug,4482,"aits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 10: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 11: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 12: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 13: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 14: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_trai",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:4577,deployability,build,build,4577,"_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 10: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 11: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 12: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 13: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 14: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:4583,deployability,build,build-root-Desktop-Debug,4583,"td::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 10: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 11: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 12: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 13: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 14: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Conditional ju",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:5411,deployability,stack,stack,5411,"tic_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 14: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 5: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 6: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 7: TCling::RegisterModule(char const*, char const**, c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:5606,deployability,depend,depends,5606,"t/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 5: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 6: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 7: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:5731,deployability,Updat,UpdateIsOnHeap,5731," in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 5: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 6: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 7: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_sr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:7266,deployability,build,build,7266,"traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 7: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 8: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 9: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 10: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 11: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 12: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 13: call_init.part.0 in ./elf/./elf/dl-init.c:70. 14: call_init in ./elf/./elf/dl-init.c:33. 15: _dl_init in ./elf/./elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:7272,deployability,build,build-root-Desktop-Debug,7272,"td::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 7: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 8: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 9: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 10: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 11: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 12: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 13: call_init.part.0 in ./elf/./elf/dl-init.c:70. 14: call_init in ./elf/./elf/dl-init.c:33. 15: _dl_init in ./elf/./elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:7385,deployability,build,build,7385,"ar const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 8: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 9: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 10: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 11: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 12: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 13: call_init.part.0 in ./elf/./elf/dl-init.c:70. 14: call_init in ./elf/./elf/dl-init.c:33. 15: _dl_init in ./elf/./elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:7391,deployability,build,build-root-Desktop-Debug,7391," const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 8: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 9: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 10: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 11: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 12: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 13: call_init.part.0 in ./elf/./elf/dl-init.c:70. 14: call_init in ./elf/./elf/dl-init.c:33. 15: _dl_init in ./elf/./elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:7512,deployability,build,build,7512,"har, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 8: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 9: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 10: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 11: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 12: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 13: call_init.part.0 in ./elf/./elf/dl-init.c:70. 14: call_init in ./elf/./elf/dl-init.c:33. 15: _dl_init in ./elf/./elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocato",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:7518,deployability,build,build-root-Desktop-Debug,7518,"traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 8: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 9: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 10: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 11: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 12: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 13: call_init.part.0 in ./elf/./elf/dl-init.c:70. 14: call_init in ./elf/./elf/dl-init.c:33. 15: _dl_init in ./elf/./elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:7613,deployability,build,build,7613,"ic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 8: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 9: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 10: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 11: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 12: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 13: call_init.part.0 in ./elf/./elf/dl-init.c:70. 14: call_init in ./elf/./elf/dl-init.c:33. 15: _dl_init in ./elf/./elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:7619,deployability,build,build-root-Desktop-Debug,7619," std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 8: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 9: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 10: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 11: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 12: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 13: call_init.part.0 in ./elf/./elf/dl-init.c:70. 14: call_init in ./elf/./elf/dl-init.c:33. 15: _dl_init in ./elf/./elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:8630,deployability,build,build,8630,"ktop-Debug/net/net/G__Net.cxx:3637. 13: call_init.part.0 in ./elf/./elf/dl-init.c:70. 14: call_init in ./elf/./elf/dl-init.c:33. 15: _dl_init in ./elf/./elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Invalid read of size 4. in ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 1: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 2: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 3: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 4: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 5: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 6: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:8636,deployability,build,build-root-Desktop-Debug,8636,"net/G__Net.cxx:3637. 13: call_init.part.0 in ./elf/./elf/dl-init.c:70. 14: call_init in ./elf/./elf/dl-init.c:33. 15: _dl_init in ./elf/./elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Invalid read of size 4. in ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 1: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 2: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 3: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 4: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 5: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 6: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 7: TRO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:8768,deployability,build,build,8768,"nit in ./elf/./elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Invalid read of size 4. in ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 1: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 2: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 3: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 4: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 5: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 6: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 7: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 8: ROOT::CallRecursiveRemoveIfNeeded(TObject&)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:8774,deployability,build,build-root-Desktop-Debug,8774,"elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Invalid read of size 4. in ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 1: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 2: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 3: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 4: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 5: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 6: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 7: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 8: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:8853,deployability,stack,stack,8853,"leton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Invalid read of size 4. in ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 1: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 2: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 3: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 4: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 5: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 6: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 7: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 8: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 9: TObject::~TObject() in /opt/root_src/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:17103,deployability,depend,depends,17103,":HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 17: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 18: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 19: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 20: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 21: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 22: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 23: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 24: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 25: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. 26: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. Conditional jump or move depends on uninitialised value(s). in TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:53. 4: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:241. 5: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 6: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 7: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 8: TKey::CheckTObjectHashConsistency() const in /opt/root_src/io/io/inc/TKey.h:116. 9: TObject::CheckedHash()",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:17233,deployability,Updat,UpdateIsOnHeap,17233,"root_src/core/meta/src/TClass.cxx:7373. 18: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 19: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 20: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 21: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 22: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 23: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 24: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 25: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. 26: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. Conditional jump or move depends on uninitialised value(s). in TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:53. 4: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:241. 5: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 6: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 7: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 8: TKey::CheckTObjectHashConsistency() const in /opt/root_src/io/io/inc/TKey.h:116. 9: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 10: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:19813,deployability,build,build,19813,"its<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 18: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 19: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 20: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 21: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 22: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 23: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 24: call_init.part.0 in ./elf/./elf/dl-init.c:70. 25: call_init in ./elf/./elf/dl-init.c:33. 26: _dl_init in ./elf/./elf/dl-init.c:117. Uninitialised value was created by a stack allocation 1: /home/userf/build/build-root-Desktop-Debug/lib/libCore.so. Conditional jump or move depends on uninitialised value(s). in THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TCol",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:19819,deployability,build,build-root-Desktop-Debug,19819,":allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 18: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 19: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 20: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 21: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 22: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 23: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 24: call_init.part.0 in ./elf/./elf/dl-init.c:70. 25: call_init in ./elf/./elf/dl-init.c:33. 26: _dl_init in ./elf/./elf/dl-init.c:117. Uninitialised value was created by a stack allocation 1: /home/userf/build/build-root-Desktop-Debug/lib/libCore.so. Conditional jump or move depends on uninitialised value(s). in THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TCollection::TColle",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:19932,deployability,build,build,19932," const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 19: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 20: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 21: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 22: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 23: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 24: call_init.part.0 in ./elf/./elf/dl-init.c:70. 25: call_init in ./elf/./elf/dl-init.c:33. 26: _dl_init in ./elf/./elf/dl-init.c:117. Uninitialised value was created by a stack allocation 1: /home/userf/build/build-root-Desktop-Debug/lib/libCore.so. Conditional jump or move depends on uninitialised value(s). in THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TCollection::TCollection() in /opt/root_src/core/cont/inc/TCollection.h:152. 4: TSeqCollection::TSeqCollection() in /opt/ro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:19938,deployability,build,build-root-Desktop-Debug,19938,"onst**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 19: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 20: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 21: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 22: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 23: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 24: call_init.part.0 in ./elf/./elf/dl-init.c:70. 25: call_init in ./elf/./elf/dl-init.c:33. 26: _dl_init in ./elf/./elf/dl-init.c:117. Uninitialised value was created by a stack allocation 1: /home/userf/build/build-root-Desktop-Debug/lib/libCore.so. Conditional jump or move depends on uninitialised value(s). in THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TCollection::TCollection() in /opt/root_src/core/cont/inc/TCollection.h:152. 4: TSeqCollection::TSeqCollection() in /opt/root_src/core/con",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:20059,deployability,build,build,20059,"r, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 19: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 20: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 21: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 22: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 23: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 24: call_init.part.0 in ./elf/./elf/dl-init.c:70. 25: call_init in ./elf/./elf/dl-init.c:33. 26: _dl_init in ./elf/./elf/dl-init.c:117. Uninitialised value was created by a stack allocation 1: /home/userf/build/build-root-Desktop-Debug/lib/libCore.so. Conditional jump or move depends on uninitialised value(s). in THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TCollection::TCollection() in /opt/root_src/core/cont/inc/TCollection.h:152. 4: TSeqCollection::TSeqCollection() in /opt/root_src/core/cont/inc/TSeqCollection.h:33. 5: TList::TList() in /opt/root_src/core/cont/inc/TList.h:72. 6: THashList::Delete(cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:20065,deployability,build,build-root-Desktop-Debug,20065,"aits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 19: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 20: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 21: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 22: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 23: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 24: call_init.part.0 in ./elf/./elf/dl-init.c:70. 25: call_init in ./elf/./elf/dl-init.c:33. 26: _dl_init in ./elf/./elf/dl-init.c:117. Uninitialised value was created by a stack allocation 1: /home/userf/build/build-root-Desktop-Debug/lib/libCore.so. Conditional jump or move depends on uninitialised value(s). in THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TCollection::TCollection() in /opt/root_src/core/cont/inc/TCollection.h:152. 4: TSeqCollection::TSeqCollection() in /opt/root_src/core/cont/inc/TSeqCollection.h:33. 5: TList::TList() in /opt/root_src/core/cont/inc/TList.h:72. 6: THashList::Delete(char const*) in /o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:20160,deployability,build,build,20160,"_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 19: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 20: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 21: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 22: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 23: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 24: call_init.part.0 in ./elf/./elf/dl-init.c:70. 25: call_init in ./elf/./elf/dl-init.c:33. 26: _dl_init in ./elf/./elf/dl-init.c:117. Uninitialised value was created by a stack allocation 1: /home/userf/build/build-root-Desktop-Debug/lib/libCore.so. Conditional jump or move depends on uninitialised value(s). in THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TCollection::TCollection() in /opt/root_src/core/cont/inc/TCollection.h:152. 4: TSeqCollection::TSeqCollection() in /opt/root_src/core/cont/inc/TSeqCollection.h:33. 5: TList::TList() in /opt/root_src/core/cont/inc/TList.h:72. 6: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 7: TDirectoryFile::Close(char const*) in ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:20166,deployability,build,build-root-Desktop-Debug,20166,"td::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 19: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 20: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 21: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 22: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 23: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 24: call_init.part.0 in ./elf/./elf/dl-init.c:70. 25: call_init in ./elf/./elf/dl-init.c:33. 26: _dl_init in ./elf/./elf/dl-init.c:117. Uninitialised value was created by a stack allocation 1: /home/userf/build/build-root-Desktop-Debug/lib/libCore.so. Conditional jump or move depends on uninitialised value(s). in THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TCollection::TCollection() in /opt/root_src/core/cont/inc/TCollection.h:152. 4: TSeqCollection::TSeqCollection() in /opt/root_src/core/cont/inc/TSeqCollection.h:33. 5: TList::TList() in /opt/root_src/core/cont/inc/TList.h:72. 6: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 7: TDirectoryFile::Close(char const*) in /opt/root_src/i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:20389,deployability,stack,stack,20389," const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 20: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 21: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 22: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 23: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 24: call_init.part.0 in ./elf/./elf/dl-init.c:70. 25: call_init in ./elf/./elf/dl-init.c:33. 26: _dl_init in ./elf/./elf/dl-init.c:117. Uninitialised value was created by a stack allocation 1: /home/userf/build/build-root-Desktop-Debug/lib/libCore.so. Conditional jump or move depends on uninitialised value(s). in THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TCollection::TCollection() in /opt/root_src/core/cont/inc/TCollection.h:152. 4: TSeqCollection::TSeqCollection() in /opt/root_src/core/cont/inc/TSeqCollection.h:33. 5: TList::TList() in /opt/root_src/core/cont/inc/TList.h:72. 6: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 7: TDirectoryFile::Close(char const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:592. 8: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:970. 9: TMemFile::~TMemFile() in /opt/root_src/io/io/src/TMemFile.cxx:240. 10: TCling::LoadPCM(std::__cxx11::basic_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:20421,deployability,build,build,20421,", std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 20: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 21: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 22: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 23: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 24: call_init.part.0 in ./elf/./elf/dl-init.c:70. 25: call_init in ./elf/./elf/dl-init.c:33. 26: _dl_init in ./elf/./elf/dl-init.c:117. Uninitialised value was created by a stack allocation 1: /home/userf/build/build-root-Desktop-Debug/lib/libCore.so. Conditional jump or move depends on uninitialised value(s). in THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TCollection::TCollection() in /opt/root_src/core/cont/inc/TCollection.h:152. 4: TSeqCollection::TSeqCollection() in /opt/root_src/core/cont/inc/TSeqCollection.h:33. 5: TList::TList() in /opt/root_src/core/cont/inc/TList.h:72. 6: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 7: TDirectoryFile::Close(char const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:592. 8: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:970. 9: TMemFile::~TMemFile() in /opt/root_src/io/io/src/TMemFile.cxx:240. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<ch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:20427,deployability,build,build-root-Desktop-Debug,20427,"td::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 20: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 21: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 22: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 23: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 24: call_init.part.0 in ./elf/./elf/dl-init.c:70. 25: call_init in ./elf/./elf/dl-init.c:33. 26: _dl_init in ./elf/./elf/dl-init.c:117. Uninitialised value was created by a stack allocation 1: /home/userf/build/build-root-Desktop-Debug/lib/libCore.so. Conditional jump or move depends on uninitialised value(s). in THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TCollection::TCollection() in /opt/root_src/core/cont/inc/TCollection.h:152. 4: TSeqCollection::TSeqCollection() in /opt/root_src/core/cont/inc/TSeqCollection.h:33. 5: TList::TList() in /opt/root_src/core/cont/inc/TList.h:72. 6: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 7: TDirectoryFile::Close(char const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:592. 8: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:970. 9: TMemFile::~TMemFile() in /opt/root_src/io/io/src/TMemFile.cxx:240. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::alloc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:20493,deployability,depend,depends,20493,"<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 20: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 21: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 22: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 23: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 24: call_init.part.0 in ./elf/./elf/dl-init.c:70. 25: call_init in ./elf/./elf/dl-init.c:33. 26: _dl_init in ./elf/./elf/dl-init.c:117. Uninitialised value was created by a stack allocation 1: /home/userf/build/build-root-Desktop-Debug/lib/libCore.so. Conditional jump or move depends on uninitialised value(s). in THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TCollection::TCollection() in /opt/root_src/core/cont/inc/TCollection.h:152. 4: TSeqCollection::TSeqCollection() in /opt/root_src/core/cont/inc/TSeqCollection.h:33. 5: TList::TList() in /opt/root_src/core/cont/inc/TList.h:72. 6: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 7: TDirectoryFile::Close(char const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:592. 8: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:970. 9: TMemFile::~TMemFile() in /opt/root_src/io/io/src/TMemFile.cxx:240. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:20625,deployability,Updat,UpdateIsOnHeap,20625,"char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 20: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 21: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 22: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 23: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 24: call_init.part.0 in ./elf/./elf/dl-init.c:70. 25: call_init in ./elf/./elf/dl-init.c:33. 26: _dl_init in ./elf/./elf/dl-init.c:117. Uninitialised value was created by a stack allocation 1: /home/userf/build/build-root-Desktop-Debug/lib/libCore.so. Conditional jump or move depends on uninitialised value(s). in THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TCollection::TCollection() in /opt/root_src/core/cont/inc/TCollection.h:152. 4: TSeqCollection::TSeqCollection() in /opt/root_src/core/cont/inc/TSeqCollection.h:33. 5: TList::TList() in /opt/root_src/core/cont/inc/TList.h:72. 6: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 7: TDirectoryFile::Close(char const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:592. 8: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:970. 9: TMemFile::~TMemFile() in /opt/root_src/io/io/src/TMemFile.cxx:240. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1865. 11: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pai",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:22415,deployability,build,build,22415,"its<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1865. 11: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 14: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:22421,deployability,build,build-root-Desktop-Debug,22421,":allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1865. 11: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 14: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:22534,deployability,build,build,22534," const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 14: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208. Cond",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:22540,deployability,build,build-root-Desktop-Debug,22540,"onst**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 14: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:22661,deployability,build,build,22661,"r, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 14: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or move depends on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:22667,deployability,build,build-root-Desktop-Debug,22667,"aits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 14: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or move depends on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:22762,deployability,build,build,22762,"_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 14: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or move depends on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:22768,deployability,build,build-root-Desktop-Debug,22768,"td::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 14: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or move depends on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:23432,deployability,stack,stack,23432,"ktop-Debug/net/net/G__Net.cxx:3623. 14: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or move depends on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 4: TBufferIO::TBufferIO(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferIO.cxx:51. 5: TBufferFile::TBufferFile(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferFile.cxx:90. 6: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1025. 7: TDirectoryFile::GetObjectChecked(char const*, TClass const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1111. 8: void TDirectory::GetObject<TObjArray>(char const*, TObjArray*&) in /opt/root_src/cor",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:23558,deployability,depend,depends,23558,"ug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or move depends on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 4: TBufferIO::TBufferIO(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferIO.cxx:51. 5: TBufferFile::TBufferFile(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferFile.cxx:90. 6: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1025. 7: TDirectoryFile::GetObjectChecked(char const*, TClass const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1111. 8: void TDirectory::GetObject<TObjArray>(char const*, TObjArray*&) in /opt/root_src/core/base/inc/TDirectory.h:214. 9: TCling::LoadPCMImpl(TFile&) in /opt/root_src/core/metacling/src/TCling.cxx:1722. 10: TCling::Lo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:23694,deployability,Updat,UpdateIsOnHeap,23694,"__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or move depends on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 4: TBufferIO::TBufferIO(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferIO.cxx:51. 5: TBufferFile::TBufferFile(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferFile.cxx:90. 6: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1025. 7: TDirectoryFile::GetObjectChecked(char const*, TClass const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1111. 8: void TDirectory::GetObject<TObjArray>(char const*, TObjArray*&) in /opt/root_src/core/base/inc/TDirectory.h:214. 9: TCling::LoadPCMImpl(TFile&) in /opt/root_src/core/metacling/src/TCling.cxx:1722. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1882.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:26541,deployability,stack,stack,26541,"ace)::TriggerDictionaryInitialization_demoMem_C_ACLiC_dict_Impl() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:89. 14: (anonymous namespace)::DictInit::DictInit() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:97. 15: __static_initialization_and_destruction_0(int, int) in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:99. 16: _GLOBAL__sub_I_demoMem_C_ACLiC_dict.cxx in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:103. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1024. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:152. 5: TArchiveFile::Open(char const*, TFile*) in /opt/root_src/io/io/src/TArchiveFile.cxx:131. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:397. 7: TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFile.cxx:173. 8: TMemFile::TMemFile(char const*, char con",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:26663,deployability,depend,depends,26663,"namespace)::DictInit::DictInit() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:97. 15: __static_initialization_and_destruction_0(int, int) in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:99. 16: _GLOBAL__sub_I_demoMem_C_ACLiC_dict.cxx in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:103. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1024. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:152. 5: TArchiveFile::Open(char const*, TFile*) in /opt/root_src/io/io/src/TArchiveFile.cxx:131. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:397. 7: TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFile.cxx:173. 8: TMemFile::TMemFile(char const*, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFile.cxx:163. 9: std::_MakeUniq<TMemFile>::__single_object",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:26788,deployability,Updat,UpdateIsOnHeap,26788,"t) in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:99. 16: _GLOBAL__sub_I_demoMem_C_ACLiC_dict.cxx in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:103. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1024. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:152. 5: TArchiveFile::Open(char const*, TFile*) in /opt/root_src/io/io/src/TArchiveFile.cxx:131. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:397. 7: TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFile.cxx:173. 8: TMemFile::TMemFile(char const*, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFile.cxx:163. 9: std::_MakeUniq<TMemFile>::__single_object std::make_unique<TMemFile, char const (&) [9], char const (&) [9]>(char const (&) [9], char const (&) [9]) in /usr/include/c++/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:28155,deployability,build,build,28155,"cxx:152. 5: TArchiveFile::Open(char const*, TFile*) in /opt/root_src/io/io/src/TArchiveFile.cxx:131. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:397. 7: TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFile.cxx:173. 8: TMemFile::TMemFile(char const*, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFile.cxx:163. 9: std::_MakeUniq<TMemFile>::__single_object std::make_unique<TMemFile, char const (&) [9], char const (&) [9]>(char const (&) [9], char const (&) [9]) in /usr/include/c++/11/bits/unique_ptr.h:962. 10: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:46. 11: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 12: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 13: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 14: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/co",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:28161,deployability,build,build-root-Desktop-Debug,28161,"chiveFile::Open(char const*, TFile*) in /opt/root_src/io/io/src/TArchiveFile.cxx:131. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:397. 7: TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFile.cxx:173. 8: TMemFile::TMemFile(char const*, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFile.cxx:163. 9: std::_MakeUniq<TMemFile>::__single_object std::make_unique<TMemFile, char const (&) [9], char const (&) [9]>(char const (&) [9], char const (&) [9]) in /usr/include/c++/11/bits/unique_ptr.h:962. 10: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:46. 11: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 12: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 13: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 14: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/sr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:28297,deployability,build,build,28297," char const*, int) in /opt/root_src/io/io/src/TFile.cxx:397. 7: TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFile.cxx:173. 8: TMemFile::TMemFile(char const*, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFile.cxx:163. 9: std::_MakeUniq<TMemFile>::__single_object std::make_unique<TMemFile, char const (&) [9], char const (&) [9]>(char const (&) [9], char const (&) [9]) in /usr/include/c++/11/bits/unique_ptr.h:962. 10: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:46. 11: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 12: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 13: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 14: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 18: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:28303,deployability,build,build-root-Desktop-Debug,28303,"nt) in /opt/root_src/io/io/src/TFile.cxx:397. 7: TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFile.cxx:173. 8: TMemFile::TMemFile(char const*, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFile.cxx:163. 9: std::_MakeUniq<TMemFile>::__single_object std::make_unique<TMemFile, char const (&) [9], char const (&) [9]>(char const (&) [9], char const (&) [9]) in /usr/include/c++/11/bits/unique_ptr.h:962. 10: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:46. 11: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 12: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 13: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 14: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 18: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 19: TC",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:28568,deployability,build,build,28568," long) in /opt/root_src/io/io/src/TMemFile.cxx:163. 9: std::_MakeUniq<TMemFile>::__single_object std::make_unique<TMemFile, char const (&) [9], char const (&) [9]>(char const (&) [9], char const (&) [9]) in /usr/include/c++/11/bits/unique_ptr.h:962. 10: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:46. 11: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 12: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 13: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 14: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 18: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 19: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 20: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 21: TApplication::ProcessFile(c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:28574,deployability,build,build-root-Desktop-Debug,28574,"root_src/io/io/src/TMemFile.cxx:163. 9: std::_MakeUniq<TMemFile>::__single_object std::make_unique<TMemFile, char const (&) [9], char const (&) [9]>(char const (&) [9], char const (&) [9]) in /usr/include/c++/11/bits/unique_ptr.h:962. 10: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:46. 11: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 12: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 13: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 14: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 18: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 19: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 20: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 21: TApplication::ProcessFile(char const*, int",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:28794,deployability,build,build,28794,"/bits/unique_ptr.h:962. 10: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:46. 11: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 12: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 13: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 14: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 18: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 19: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 20: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 21: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 22: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 23: TRint::ProcessLineNr(char const*, c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:28800,deployability,build,build-root-Desktop-Debug,28800,"r.h:962. 10: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:46. 11: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 12: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 13: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 14: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 18: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 19: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 20: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 21: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 22: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 23: TRint::ProcessLineNr(char const*, char const*, int",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:28969,deployability,build,build,28969," in /tmp/demoMem.C:46. 11: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 12: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 13: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 14: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 18: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 19: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 20: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 21: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 22: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 23: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 24: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 25: main in /opt/root_src/main/src/rmain.cxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:28975,deployability,build,build-root-Desktop-Debug,28975,"m.C:46. 11: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 12: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 13: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 14: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 18: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 19: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 20: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 21: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 22: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 23: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 24: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 25: main in /opt/root_src/main/src/rmain.cxx:84. Uninitiali",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:30014,deployability,stack,stack,30014,"17: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 18: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 19: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 20: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 21: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 22: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 23: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 24: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 25: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:151. Conditional jump or move depends on uninitialised value(s). in TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed(char const*, char const*) in /opt/root_src/core/base/inc/TNamed.h:37. 4: TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 5: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3837. 6: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:952. 7: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:48. 8:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:30174,deployability,depend,depends,30174,"ing.cxx:2438. 18: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 19: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 20: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 21: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 22: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 23: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 24: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 25: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:151. Conditional jump or move depends on uninitialised value(s). in TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed(char const*, char const*) in /opt/root_src/core/base/inc/TNamed.h:37. 4: TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 5: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3837. 6: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:952. 7: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:48. 8: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 9: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:30324,deployability,Updat,UpdateIsOnHeap,30324,"eSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 20: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 21: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 22: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 23: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 24: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 25: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:151. Conditional jump or move depends on uninitialised value(s). in TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed(char const*, char const*) in /opt/root_src/core/base/inc/TNamed.h:37. 4: TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 5: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3837. 6: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:952. 7: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:48. 8: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 9: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 10: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:31173,deployability,build,build,31173,"pends on uninitialised value(s). in TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed(char const*, char const*) in /opt/root_src/core/base/inc/TNamed.h:37. 4: TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 5: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3837. 6: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:952. 7: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:48. 8: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 9: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 10: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 11: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 12: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 13: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 14: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/co",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:31179,deployability,build,build-root-Desktop-Debug,31179,"ialised value(s). in TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed(char const*, char const*) in /opt/root_src/core/base/inc/TNamed.h:37. 4: TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 5: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3837. 6: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:952. 7: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:48. 8: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 9: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 10: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 11: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 12: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 13: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 14: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/sr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:31315,deployability,build,build,31315,"rage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed(char const*, char const*) in /opt/root_src/core/base/inc/TNamed.h:37. 4: TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 5: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3837. 6: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:952. 7: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:48. 8: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 9: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 10: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 11: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 12: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 13: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 14: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 15: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:31321,deployability,build,build-root-Desktop-Debug,31321,"nHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed(char const*, char const*) in /opt/root_src/core/base/inc/TNamed.h:37. 4: TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 5: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3837. 6: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:952. 7: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:48. 8: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 9: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 10: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 11: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 12: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 13: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 14: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 15: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 16: TC",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:31586,deployability,build,build,31586,".h:37. 4: TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 5: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3837. 6: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:952. 7: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:48. 8: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 9: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 10: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 11: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 12: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 13: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 14: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 15: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 16: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 17: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 18: TApplication::ProcessFile(c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:31592,deployability,build,build-root-Desktop-Debug,31592,":TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 5: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3837. 6: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:952. 7: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:48. 8: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 9: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 10: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 11: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 12: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 13: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 14: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 15: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 16: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 17: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 18: TApplication::ProcessFile(char const*, int",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:31812,deployability,build,build,31812,"c/io/io/src/TFile.cxx:952. 7: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:48. 8: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 9: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 10: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 11: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 12: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 13: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 14: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 15: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 16: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 17: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 18: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 19: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 20: TRint::ProcessLineNr(char const*, c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:31818,deployability,build,build-root-Desktop-Debug,31818,"le.cxx:952. 7: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:48. 8: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 9: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 10: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 11: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 12: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 13: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 14: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 15: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 16: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 17: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 18: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 19: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 20: TRint::ProcessLineNr(char const*, char const*, int",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:31987,deployability,build,build,31987,"t) in /tmp/demoMem.C:48. 8: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 9: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 10: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 11: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 12: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 13: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 14: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 15: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 16: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 17: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 18: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 19: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 20: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 21: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 22: main in /opt/root_src/main/src/rmain.cxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:31993,deployability,build,build-root-Desktop-Debug,31993,"Mem.C:48. 8: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 9: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 10: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 11: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 12: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 13: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 14: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 15: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 16: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 17: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 18: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 19: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 20: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 21: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 22: main in /opt/root_src/main/src/rmain.cxx:84. Uninitiali",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:33032,deployability,stack,stack,33032,"14: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 15: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 16: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 17: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 18: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 19: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 20: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 21: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 22: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3775. 96 bytes in 1 blocks are possibly lost in loss record 4,046 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:33581,deployability,Modul,ModuleFileExtension,33581,"r const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 19: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 20: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 21: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 22: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3775. 96 bytes in 1 blocks are possibly lost in loss record 4,046 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:33771,deployability,build,build,33771,". 20: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 21: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 22: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3775. 96 bytes in 1 blocks are possibly lost in loss record 4,046 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::Module",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:33777,deployability,build,build-root-Desktop-Debug,33777,"ocessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 21: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 22: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3775. 96 bytes in 1 blocks are possibly lost in loss record 4,046 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:33896,deployability,build,build,33896," in /opt/root_src/core/rint/src/TRint.cxx:461. 22: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3775. 96 bytes in 1 blocks are possibly lost in loss record 4,046 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtensio",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:33902,deployability,build,build-root-Desktop-Debug,33902,"rc/core/rint/src/TRint.cxx:461. 22: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3775. 96 bytes in 1 blocks are possibly lost in loss record 4,046 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::alloca",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:34052,deployability,Modul,ModuleFileExtension,34052,"teStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3775. 96 bytes in 1 blocks are possibly lost in loss record 4,046 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char cons",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:34112,deployability,Modul,ModuleFileExtension,34112,"96 bytes in 1 blocks are possibly lost in loss record 4,046 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacli",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:34200,deployability,build,build,34200,"TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:34206,deployability,build,build-root-Desktop-Debug,34206,"st*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:34356,deployability,Modul,ModuleFileExtension,34356,"grind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:34416,deployability,Modul,ModuleFileExtension,34416,"::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:34708,deployability,Modul,ModuleFileExtension,34708,", std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:34768,deployability,Modul,ModuleFileExtension,34768,"uild-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 96 bytes in 1 blocks are possibly lost in loss record 4",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:34881,deployability,Modul,ModuleFileExtension,34881,"serf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 96 bytes in 1 blocks are possibly lost in loss record 4,047 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metac",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:34941,deployability,Modul,ModuleFileExtension,34941,"g::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 96 bytes in 1 blocks are possibly lost in loss record 4,047 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:36182,deployability,Modul,ModuleFileExtension,36182,"acling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 96 bytes in 1 blocks are possibly lost in loss record 4,047 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:36372,deployability,build,build,36372,"ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 96 bytes in 1 blocks are possibly lost in loss record 4,047 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::Module",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:36378,deployability,build,build-root-Desktop-Debug,36378," in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 96 bytes in 1 blocks are possibly lost in loss record 4,047 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:36497,deployability,build,build,36497,", int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 96 bytes in 1 blocks are possibly lost in loss record 4,047 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtensio",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:36503,deployability,build,build-root-Desktop-Debug,36503,"root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 96 bytes in 1 blocks are possibly lost in loss record 4,047 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::alloca",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:36653,deployability,Modul,ModuleFileExtension,36653,"t.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 96 bytes in 1 blocks are possibly lost in loss record 4,047 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char cons",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:36713,deployability,Modul,ModuleFileExtension,36713,"96 bytes in 1 blocks are possibly lost in loss record 4,047 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacli",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:36801,deployability,build,build,36801,"TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:36807,deployability,build,build-root-Desktop-Debug,36807,"st*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:36957,deployability,Modul,ModuleFileExtension,36957,"grind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:37017,deployability,Modul,ModuleFileExtension,37017,"::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:37309,deployability,Modul,ModuleFileExtension,37309,", std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:37369,deployability,Modul,ModuleFileExtension,37369,"uild-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 112 bytes in 1 blocks are definitely lost in loss recor",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:37482,deployability,Modul,ModuleFileExtension,37482,"serf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 112 bytes in 1 blocks are definitely lost in loss record 4,249 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacli",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:37542,deployability,Modul,ModuleFileExtension,37542,"g::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 112 bytes in 1 blocks are definitely lost in loss record 4,249 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/v",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:38787,deployability,build,build,38787,"metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 112 bytes in 1 blocks are definitely lost in loss record 4,249 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:38793,deployability,build,build-root-Desktop-Debug,38793,"Cling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 112 bytes in 1 blocks are definitely lost in loss record 4,249 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<ch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:39018,deployability,build,build,39018,"c/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 112 bytes in 1 blocks are definitely lost in loss record 4,249 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:39024,deployability,build,build-root-Desktop-Debug,39024,". 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 112 bytes in 1 blocks are definitely lost in loss record 4,249 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:39130,deployability,build,build,39130,"e/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 112 bytes in 1 blocks are definitely lost in loss record 4,249 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/me",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:39136,deployability,build,build-root-Desktop-Debug,39136,"ion.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 112 bytes in 1 blocks are definitely lost in loss record 4,249 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:39311,deployability,build,build,39311,"n.cxx:81. 112 bytes in 1 blocks are definitely lost in loss record 4,249 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TCling::AutoLoad(std::type_info const&, bool) in /opt/r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:39317,deployability,build,build-root-Desktop-Debug,39317,"ytes in 1 blocks are definitely lost in loss record 4,249 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/me",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:40826,deployability,build,build,40826,"cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 12: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 13: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 14: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 15: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/co",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:40832,deployability,build,build-root-Desktop-Debug,40832,"ring<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 12: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 13: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 14: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 15: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/sr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:40968,deployability,build,build,40968,"ar>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 12: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 13: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 14: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 15: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 21: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:40974,deployability,build,build-root-Desktop-Debug,40974,"ator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 12: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 13: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 14: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 15: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 21: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 22: TC",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:41239,deployability,build,build,41239,"ng.cxx:6278. 11: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 12: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 13: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 14: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 15: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 21: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 22: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 23: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 24: TApplication::ProcessFile(c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:41245,deployability,build,build-root-Desktop-Debug,41245,": TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 12: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 13: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 14: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 15: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 21: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 22: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 23: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 24: TApplication::ProcessFile(char const*, int",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:41465,deployability,build,build,41465,"ta/src/TClass.cxx:3316. 13: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 14: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 15: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 21: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 22: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 23: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 24: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 25: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 112 bytes in 1 blocks are definitely lo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:41471,deployability,build,build-root-Desktop-Debug,41471,"xx:3316. 13: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 14: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 15: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 21: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 22: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 23: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 24: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 25: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 112 bytes in 1 blocks are definitely lost in loss reco",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:41640,deployability,build,build,41640," in /tmp/demoMem.C:26. 14: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 15: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 21: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 22: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 23: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 24: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 25: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 112 bytes in 1 blocks are definitely lost in loss record 4,250 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: ma",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:41646,deployability,build,build-root-Desktop-Debug,41646,"m.C:26. 14: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 15: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 21: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 22: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 23: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 24: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 25: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 112 bytes in 1 blocks are definitely lost in loss record 4,250 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/li",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:42909,deployability,build,build,42909,"::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 22: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 23: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 24: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 25: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 112 bytes in 1 blocks are definitely lost in loss record 4,250 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::ClassInfo_Factory(char const*) const in /opt/root_src/core/metacling/src/TCling.cxx:8175. 8: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:42915,deployability,build,build-root-Desktop-Debug,42915,"in /opt/root_src/core/metacling/src/TCling.cxx:2555. 22: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 23: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 24: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 25: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 112 bytes in 1 blocks are definitely lost in loss record 4,250 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::ClassInfo_Factory(char const*) const in /opt/root_src/core/metacling/src/TCling.cxx:8175. 8: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:43140,deployability,build,build,43140,", int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 24: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 25: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 112 bytes in 1 blocks are definitely lost in loss record 4,250 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::ClassInfo_Factory(char const*) const in /opt/root_src/core/metacling/src/TCling.cxx:8175. 8: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:43146,deployability,build,build-root-Desktop-Debug,43146,"n /opt/root_src/core/base/src/TApplication.cxx:1865. 24: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 25: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 112 bytes in 1 blocks are definitely lost in loss record 4,250 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::ClassInfo_Factory(char const*) const in /opt/root_src/core/metacling/src/TCling.cxx:8175. 8: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:43252,deployability,build,build,43252,"nt*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 25: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 112 bytes in 1 blocks are definitely lost in loss record 4,250 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::ClassInfo_Factory(char const*) const in /opt/root_src/core/metacling/src/TCling.cxx:8175. 8: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6191. 9: TCling::AutoLoad(char const*, bool) in /opt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:43258,deployability,build,build-root-Desktop-Debug,43258,"opt/root_src/core/base/src/TApplication.cxx:1737. 25: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 112 bytes in 1 blocks are definitely lost in loss record 4,250 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::ClassInfo_Factory(char const*) const in /opt/root_src/core/metacling/src/TCling.cxx:8175. 8: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6191. 9: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:43433,deployability,build,build,43433,"es in 1 blocks are definitely lost in loss record 4,250 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::ClassInfo_Factory(char const*) const in /opt/root_src/core/metacling/src/TCling.cxx:8175. 8: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6191. 9: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 10: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 11: TClass::GetClass(std::type_i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:43439,deployability,build,build-root-Desktop-Debug,43439,"are definitely lost in loss record 4,250 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::ClassInfo_Factory(char const*) const in /opt/root_src/core/metacling/src/TCling.cxx:8175. 8: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6191. 9: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 10: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 11: TClass::GetClass(std::type_info const&, boo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:44872,deployability,build,build,44872,"_cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6191. 9: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 10: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 11: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 12: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 13: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 14: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/co",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:44878,deployability,build,build-root-Desktop-Debug,44878,"tring<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6191. 9: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 10: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 11: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 12: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 13: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 14: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/sr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:45014,deployability,build,build,45014,"har>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6191. 9: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 10: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 11: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 12: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 13: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 14: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 20: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:45020,deployability,build,build-root-Desktop-Debug,45020,"cator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6191. 9: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 10: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 11: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 12: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 13: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 14: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 20: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 21: TC",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:45285,deployability,build,build,45285,"ng.cxx:6278. 10: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 11: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 12: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 13: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 14: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 20: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 21: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 22: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 23: TApplication::ProcessFile(c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:45291,deployability,build,build-root-Desktop-Debug,45291,": TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 11: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 12: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 13: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 14: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 20: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 21: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 22: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 23: TApplication::ProcessFile(char const*, int",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:45511,deployability,build,build,45511,"ta/src/TClass.cxx:3316. 12: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 13: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 14: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 20: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 21: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 22: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 23: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 24: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 25: TRint::ProcessLineNr(char const*, c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:45517,deployability,build,build-root-Desktop-Debug,45517,"xx:3316. 12: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 13: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 14: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 20: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 21: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 22: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 23: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 24: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 25: TRint::ProcessLineNr(char const*, char const*, int",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:45686,deployability,build,build,45686," in /tmp/demoMem.C:26. 13: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 14: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 20: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 21: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 22: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 23: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 24: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 25: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 112 bytes in 1 blocks are definitely lost in loss record 4,251 of 6,774. in TCling::CheckClassInfo(char const*,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:45692,deployability,build,build-root-Desktop-Debug,45692,"m.C:26. 13: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 14: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 20: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 21: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 22: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 23: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 24: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 25: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 112 bytes in 1 blocks are definitely lost in loss record 4,251 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:47026,deployability,build,build,47026," TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 22: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 23: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 24: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 25: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 112 bytes in 1 blocks are definitely lost in loss record 4,251 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:47032,deployability,build,build-root-Desktop-Debug,47032,"sLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 22: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 23: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 24: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 25: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 112 bytes in 1 blocks are definitely lost in loss record 4,251 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:47257,deployability,build,build,47257," TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 24: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 25: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 112 bytes in 1 blocks are definitely lost in loss record 4,251 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavio",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:47263,deployability,build,build-root-Desktop-Debug,47263,"ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 24: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 25: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 112 bytes in 1 blocks are definitely lost in loss record 4,251 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:47369,deployability,build,build,47369,"pplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 25: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 112 bytes in 1 blocks are definitely lost in loss record 4,251 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:47375,deployability,build,build-root-Desktop-Debug,47375,"cessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 25: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 112 bytes in 1 blocks are definitely lost in loss record 4,251 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:47550,deployability,build,build,47550,"/rint/src/TRint.cxx:820. 112 bytes in 1 blocks are definitely lost in loss record 4,251 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:47556,deployability,build,build-root-Desktop-Debug,47556,".cxx:820. 112 bytes in 1 blocks are definitely lost in loss record 4,251 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEunsig",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:48394,deployability,build,build,48394,"ug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEunsignedsPchargR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:274. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 15: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:48400,deployability,build,build-root-Desktop-Debug,48400,".so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEunsignedsPchargR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:274. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 15: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:48608,deployability,build,build,48608,"eckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEunsignedsPchargR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:274. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 15: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Compi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:48614,deployability,build,build-root-Desktop-Debug,48614,"ar const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEunsignedsPchargR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:274. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 15: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:49280,deployability,build,build,49280,"st*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEunsignedsPchargR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:274. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 15: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/co",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:49286,deployability,build,build-root-Desktop-Debug,49286,"::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEunsignedsPchargR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:274. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 15: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/sr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:49422,deployability,build,build,49422,"include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEunsignedsPchargR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:274. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 15: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:49428,deployability,build,build-root-Desktop-Debug,49428,"h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEunsignedsPchargR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:274. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 15: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TC",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:49693,deployability,build,build,49693,"ss(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 15: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are defin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:49699,deployability,build,build-root-Desktop-Debug,49699,"fo const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 15: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:49919,deployability,build,build,49919,"ta/src/TClass.cxx:3319. 15: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,252 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_mem",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:49925,deployability,build,build-root-Desktop-Debug,49925,"xx:3319. 15: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,252 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-lin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:50094,deployability,build,build,50094," in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,252 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, cl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:50100,deployability,build,build-root-Desktop-Debug,50100,"m.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,252 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::Unqualifie",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:51145,deployability,build,build,51145,"ndleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,252 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:51151,deployability,build,build-root-Desktop-Debug,51151,"Exception(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,252 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:51376,deployability,build,build,51376,") in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,252 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:51382,deployability,build,build-root-Desktop-Debug,51382,"src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,252 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:51488,deployability,build,build,51488,"ErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,252 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefau",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:51494,deployability,build,build-root-Desktop-Debug,51494,"/opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,252 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:51669,deployability,build,build,51669,"es in 1 blocks are definitely lost in loss record 4,252 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/inc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:51675,deployability,build,build-root-Desktop-Debug,51675,"are definitely lost in loss record 4,252 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:52638,deployability,build,build,52638," bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEunsignedsPchargR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:274. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 16: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 17: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 18: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:52644,deployability,build,build-root-Desktop-Debug,52644," /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEunsignedsPchargR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:274. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 16: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 17: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 18: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:52852,deployability,build,build,52852," TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEunsignedsPchargR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:274. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 16: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 17: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 18: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Compi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:52858,deployability,build,build-root-Desktop-Debug,52858,"ssInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEunsignedsPchargR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:274. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 16: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 17: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 18: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:53524,deployability,build,build,53524,"st*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEunsignedsPchargR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:274. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 16: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 17: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 18: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 23: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/co",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:53530,deployability,build,build-root-Desktop-Debug,53530,"::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEunsignedsPchargR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:274. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 16: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 17: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 18: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 23: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/sr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:53666,deployability,build,build,53666,"include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEunsignedsPchargR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:274. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 16: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 17: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 18: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 23: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 24: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:53672,deployability,build,build-root-Desktop-Debug,53672,"h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEunsignedsPchargR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:274. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 16: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 17: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 18: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 23: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 24: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 25: TC",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:53937,deployability,build,build,53937,"ss(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 16: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 17: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 18: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 23: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 24: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 25: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 112 bytes in 1 blocks are definitely lost in loss record 4,253 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:53943,deployability,build,build-root-Desktop-Debug,53943,"fo const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 16: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 17: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 18: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 23: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 24: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 25: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 112 bytes in 1 blocks are definitely lost in loss record 4,253 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:54163,deployability,build,build,54163,"ta/src/TClass.cxx:3319. 16: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 17: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 18: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 23: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 24: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 25: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 112 bytes in 1 blocks are definitely lost in loss record 4,253 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXSco",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:54169,deployability,build,build-root-Desktop-Debug,54169,"xx:3319. 16: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 17: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 18: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 23: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 24: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 25: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 112 bytes in 1 blocks are definitely lost in loss record 4,253 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:54338,deployability,build,build,54338," in /tmp/demoMem.C:26. 17: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 18: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 23: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 24: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 25: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 112 bytes in 1 blocks are definitely lost in loss record 4,253 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecif",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:54344,deployability,build,build-root-Desktop-Debug,54344,"m.C:26. 17: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 18: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 23: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 24: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 25: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 112 bytes in 1 blocks are definitely lost in loss record 4,253 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXS",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:55248,deployability,build,build,55248,"StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 23: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 24: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 25: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 112 bytes in 1 blocks are definitely lost in loss record 4,253 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:55254,deployability,build,build-root-Desktop-Debug,55254,"g::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 23: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 24: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 25: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 112 bytes in 1 blocks are definitely lost in loss record 4,253 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:55479,deployability,build,build,55479,"onResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 24: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 25: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 112 bytes in 1 blocks are definitely lost in loss record 4,253 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavio",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:55485,deployability,build,build-root-Desktop-Debug,55485,"g::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 24: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 25: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 112 bytes in 1 blocks are definitely lost in loss record 4,253 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:55591,deployability,build,build,55591,"t*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 25: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 112 bytes in 1 blocks are definitely lost in loss record 4,253 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:55597,deployability,build,build-root-Desktop-Debug,55597,"r::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 25: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 112 bytes in 1 blocks are definitely lost in loss record 4,253 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:55772,deployability,build,build,55772,"ing/src/TCling.cxx:3545. 112 bytes in 1 blocks are definitely lost in loss record 4,253 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:55778,deployability,build,build-root-Desktop-Debug,55778,"cxx:3545. 112 bytes in 1 blocks are definitely lost in loss record 4,253 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEfloat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:56616,deployability,build,build,56616,"ug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:56622,deployability,build,build-root-Desktop-Debug,56622,".so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:56821,deployability,build,build,56821,"Cling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:56827,deployability,build,build-root-Desktop-Debug,56827,"ssInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:57327,deployability,build,build,57327,"o const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/co",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:57333,deployability,build,build-root-Desktop-Debug,57333,"ualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/sr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:57469,deployability,build,build,57469,"nitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:57475,deployability,build,build-root-Desktop-Debug,57475,"eateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 23: TC",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:57740,deployability,build,build,57740,"nericClassInfo.cxx:255. 12: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 23: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:57746,deployability,build,build-root-Desktop-Debug,57746,"cxx:255. 12: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 23: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:57966,deployability,build,build,57966,"d long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 23: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,254 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:57972,deployability,build,build-root-Desktop-Debug,57972,"/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 23: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,254 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:58141,deployability,build,build,58141," in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 23: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,254 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(cl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:58147,deployability,build,build-root-Desktop-Debug,58147,"m.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 23: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,254 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:59301,deployability,build,build,59301,"alue*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 23: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,254 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:59307,deployability,build,build-root-Desktop-Debug,59307,"root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 23: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,254 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:59532,deployability,build,build,59532,"::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,254 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:59538,deployability,build,build-root-Desktop-Debug,59538,"in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,254 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:59644,deployability,build,build,59644,"nt*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,254 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefau",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:59650,deployability,build,build-root-Desktop-Debug,59650,"opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,254 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:59825,deployability,build,build,59825,"es in 1 blocks are definitely lost in loss record 4,254 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/inc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:59831,deployability,build,build-root-Desktop-Debug,59831,"are definitely lost in loss record 4,254 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:60794,deployability,build,build,60794," bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:60800,deployability,build,build-root-Desktop-Debug,60800," /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:60999,deployability,build,build,60999,"xx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:61005,deployability,build,build-root-Desktop-Debug,61005,"g::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:61505,deployability,build,build,61505,"o const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/co",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:61511,deployability,build,build-root-Desktop-Debug,61511,"ualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/sr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:61647,deployability,build,build,61647,"nitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:61653,deployability,build,build-root-Desktop-Debug,61653,"eateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TC",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:61918,deployability,build,build,61918,"nericClassInfo.cxx:255. 13: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are defin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:61924,deployability,build,build-root-Desktop-Debug,61924,"cxx:255. 13: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:62144,deployability,build,build,62144,"d long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,255 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:62150,deployability,build,build-root-Desktop-Debug,62150,"/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,255 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::Annotat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:62319,deployability,build,build,62319," in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,255 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:62325,deployability,build,build-root-Desktop-Debug,62325,"m.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,255 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:63338,deployability,build,build,63338,"op-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,255 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:63344,deployability,build,build-root-Desktop-Debug,63344,"bCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,255 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:63569,deployability,build,build,63569,"onst*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,255 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavio",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:63575,deployability,build,build-root-Desktop-Debug,63575,"eter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,255 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:63681,deployability,build,build,63681,"nch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,255 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:63687,deployability,build,build-root-Desktop-Debug,63687,", TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,255 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:63862,deployability,build,build,63862,"c/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,255 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:63868,deployability,build,build-root-Desktop-Debug,63868,"cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,255 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEboolg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:64706,deployability,build,build,64706,"ug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:64712,deployability,build,build-root-Desktop-Debug,64712,".so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:64910,deployability,build,build,64910,"TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:64916,deployability,build,build-root-Desktop-Debug,64916,"assInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_str",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:65412,deployability,build,build,65412,"e_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/co",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:65418,deployability,build,build-root-Desktop-Debug,65418,"TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/sr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:65554,deployability,build,build,65554,"aultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:65560,deployability,build,build-root-Desktop-Debug,65560,"r::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 23: TC",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:65825,deployability,build,build,65825,"c/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 23: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:65831,deployability,build,build-root-Desktop-Debug,65831,"Info.cxx:255. 12: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 23: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:66051,deployability,build,build,66051,"igned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 23: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,256 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:66057,deployability,build,build-root-Desktop-Debug,66057,"/opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 23: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,256 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:66226,deployability,build,build,66226," in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 23: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,256 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(cl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:66232,deployability,build,build-root-Desktop-Debug,66232,"m.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 23: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,256 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:67386,deployability,build,build,67386,"alue*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 23: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,256 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:67392,deployability,build,build-root-Desktop-Debug,67392,"root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 23: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,256 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:67617,deployability,build,build,67617,"::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,256 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:67623,deployability,build,build-root-Desktop-Debug,67623,"in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,256 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:67729,deployability,build,build,67729,"nt*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,256 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefau",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:67735,deployability,build,build-root-Desktop-Debug,67735,"opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,256 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:67910,deployability,build,build,67910,"es in 1 blocks are definitely lost in loss record 4,256 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/inc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:67916,deployability,build,build-root-Desktop-Debug,67916,"are definitely lost in loss record 4,256 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:68879,deployability,build,build,68879," bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:68885,deployability,build,build-root-Desktop-Debug,68885," /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:69083,deployability,build,build,69083,"cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:69089,deployability,build,build-root-Desktop-Debug,69089,"ng::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_str",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:69585,deployability,build,build,69585,"e_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/co",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:69591,deployability,build,build-root-Desktop-Debug,69591,"TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/sr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:69727,deployability,build,build,69727,"aultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:69733,deployability,build,build-root-Desktop-Debug,69733,"r::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TC",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:69998,deployability,build,build,69998,"c/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 448 bytes in 3 blocks are defin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:70004,deployability,build,build-root-Desktop-Debug,70004,"Info.cxx:255. 13: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 448 bytes in 3 blocks are definitely lost in l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:70224,deployability,build,build,70224,"igned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 448 bytes in 3 blocks are definitely lost in loss record 4,858 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:70230,deployability,build,build-root-Desktop-Debug,70230,"/opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 448 bytes in 3 blocks are definitely lost in loss record 4,858 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:70399,deployability,build,build,70399," in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 448 bytes in 3 blocks are definitely lost in loss record 4,858 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedI",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:70405,deployability,build,build-root-Desktop-Debug,70405,"m.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 448 bytes in 3 blocks are definitely lost in loss record 4,858 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:71433,deployability,build,build,71433,"bCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 448 bytes in 3 blocks are definitely lost in loss record 4,858 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:71439,deployability,build,build-root-Desktop-Debug,71439,"HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 448 bytes in 3 blocks are definitely lost in loss record 4,858 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<ch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:71664,deployability,build,build,71664,"eter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 448 bytes in 3 blocks are definitely lost in loss record 4,858 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:71670,deployability,build,build-root-Desktop-Debug,71670,"e*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 448 bytes in 3 blocks are definitely lost in loss record 4,858 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:71776,deployability,build,build,71776,", TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 448 bytes in 3 blocks are definitely lost in loss record 4,858 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/me",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:71782,deployability,build,build-root-Desktop-Debug,71782,":EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 448 bytes in 3 blocks are definitely lost in loss record 4,858 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:71957,deployability,build,build,71957,"cxx:1865. 448 bytes in 3 blocks are definitely lost in loss record 4,858 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TClass::LoadClassDefault(char const*, bool) in /opt/roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:71963,deployability,build,build-root-Desktop-Debug,71963,"ytes in 3 blocks are definitely lost in loss record 4,858 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TClass::LoadClassDefault(char const*, bool) in /opt/root_src/core/meta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:148,energy efficiency,core,core,148,"Log when running with valgrind:. ```. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:746. 5: TUnixSystem::OpenDirectory(char const*) in /opt/root_src/core/unix/src/TUnixSystem.cxx:1362. 6: TCling::LoadLibraryMap(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:5737. 7: TCling::Initialize() in /opt/root_src/core/metacling/src/TCling.cxx:1660. 8: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2116. 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 13: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:274,energy efficiency,core,core,274,"Log when running with valgrind:. ```. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:746. 5: TUnixSystem::OpenDirectory(char const*) in /opt/root_src/core/unix/src/TUnixSystem.cxx:1362. 6: TCling::LoadLibraryMap(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:5737. 7: TCling::Initialize() in /opt/root_src/core/metacling/src/TCling.cxx:1660. 8: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2116. 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 13: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:343,energy efficiency,core,core,343,"Log when running with valgrind:. ```. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:746. 5: TUnixSystem::OpenDirectory(char const*) in /opt/root_src/core/unix/src/TUnixSystem.cxx:1362. 6: TCling::LoadLibraryMap(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:5737. 7: TCling::Initialize() in /opt/root_src/core/metacling/src/TCling.cxx:1660. 8: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2116. 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 13: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:422,energy efficiency,core,core,422,"Log when running with valgrind:. ```. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:746. 5: TUnixSystem::OpenDirectory(char const*) in /opt/root_src/core/unix/src/TUnixSystem.cxx:1362. 6: TCling::LoadLibraryMap(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:5737. 7: TCling::Initialize() in /opt/root_src/core/metacling/src/TCling.cxx:1660. 8: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2116. 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 13: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:509,energy efficiency,core,core,509,"Log when running with valgrind:. ```. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:746. 5: TUnixSystem::OpenDirectory(char const*) in /opt/root_src/core/unix/src/TUnixSystem.cxx:1362. 6: TCling::LoadLibraryMap(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:5737. 7: TCling::Initialize() in /opt/root_src/core/metacling/src/TCling.cxx:1660. 8: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2116. 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 13: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:600,energy efficiency,core,core,600,"Log when running with valgrind:. ```. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:746. 5: TUnixSystem::OpenDirectory(char const*) in /opt/root_src/core/unix/src/TUnixSystem.cxx:1362. 6: TCling::LoadLibraryMap(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:5737. 7: TCling::Initialize() in /opt/root_src/core/metacling/src/TCling.cxx:1660. 8: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2116. 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 13: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:647,energy efficiency,Load,LoadLibraryMap,647,"Log when running with valgrind:. ```. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:746. 5: TUnixSystem::OpenDirectory(char const*) in /opt/root_src/core/unix/src/TUnixSystem.cxx:1362. 6: TCling::LoadLibraryMap(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:5737. 7: TCling::Initialize() in /opt/root_src/core/metacling/src/TCling.cxx:1660. 8: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2116. 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 13: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:692,energy efficiency,core,core,692,"Log when running with valgrind:. ```. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:746. 5: TUnixSystem::OpenDirectory(char const*) in /opt/root_src/core/unix/src/TUnixSystem.cxx:1362. 6: TCling::LoadLibraryMap(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:5737. 7: TCling::Initialize() in /opt/root_src/core/metacling/src/TCling.cxx:1660. 8: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2116. 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 13: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:769,energy efficiency,core,core,769,"Log when running with valgrind:. ```. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:746. 5: TUnixSystem::OpenDirectory(char const*) in /opt/root_src/core/unix/src/TUnixSystem.cxx:1362. 6: TCling::LoadLibraryMap(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:5737. 7: TCling::Initialize() in /opt/root_src/core/metacling/src/TCling.cxx:1660. 8: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2116. 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 13: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:850,energy efficiency,core,core,850,"Log when running with valgrind:. ```. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:746. 5: TUnixSystem::OpenDirectory(char const*) in /opt/root_src/core/unix/src/TUnixSystem.cxx:1362. 6: TCling::LoadLibraryMap(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:5737. 7: TCling::Initialize() in /opt/root_src/core/metacling/src/TCling.cxx:1660. 8: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2116. 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 13: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:927,energy efficiency,core,core,927,"Log when running with valgrind:. ```. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:746. 5: TUnixSystem::OpenDirectory(char const*) in /opt/root_src/core/unix/src/TUnixSystem.cxx:1362. 6: TCling::LoadLibraryMap(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:5737. 7: TCling::Initialize() in /opt/root_src/core/metacling/src/TCling.cxx:1660. 8: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2116. 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 13: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:993,energy efficiency,core,core,993,"Log when running with valgrind:. ```. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:746. 5: TUnixSystem::OpenDirectory(char const*) in /opt/root_src/core/unix/src/TUnixSystem.cxx:1362. 6: TCling::LoadLibraryMap(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:5737. 7: TCling::Initialize() in /opt/root_src/core/metacling/src/TCling.cxx:1660. 8: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2116. 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 13: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:1109,energy efficiency,core,core,1109,"(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:746. 5: TUnixSystem::OpenDirectory(char const*) in /opt/root_src/core/unix/src/TUnixSystem.cxx:1362. 6: TCling::LoadLibraryMap(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:5737. 7: TCling::Initialize() in /opt/root_src/core/metacling/src/TCling.cxx:1660. 8: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2116. 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 13: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:177. 6: TRint::TRint(char const*, i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:1230,energy efficiency,core,core,1230," unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:746. 5: TUnixSystem::OpenDirectory(char const*) in /opt/root_src/core/unix/src/TUnixSystem.cxx:1362. 6: TCling::LoadLibraryMap(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:5737. 7: TCling::Initialize() in /opt/root_src/core/metacling/src/TCling.cxx:1660. 8: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2116. 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 13: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:177. 6: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 7: main in /opt/root_src/main/src/rmai",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:1351,energy efficiency,alloc,allocation,1351,"/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:746. 5: TUnixSystem::OpenDirectory(char const*) in /opt/root_src/core/unix/src/TUnixSystem.cxx:1362. 6: TCling::LoadLibraryMap(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:5737. 7: TCling::Initialize() in /opt/root_src/core/metacling/src/TCling.cxx:1660. 8: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2116. 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 13: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:177. 6: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 7: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TApplication::GetOptions(int*, char**) in /opt/root_src/c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:1422,energy efficiency,core,core,1422,"re/base/src/TUrl.cxx:76. 4: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:746. 5: TUnixSystem::OpenDirectory(char const*) in /opt/root_src/core/unix/src/TUnixSystem.cxx:1362. 6: TCling::LoadLibraryMap(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:5737. 7: TCling::Initialize() in /opt/root_src/core/metacling/src/TCling.cxx:1660. 8: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2116. 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 13: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:177. 6: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 7: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:346. Conditional jump or move depends ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:1563,energy efficiency,core,core,1563,"tory(char const*) in /opt/root_src/core/unix/src/TUnixSystem.cxx:1362. 6: TCling::LoadLibraryMap(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:5737. 7: TCling::Initialize() in /opt/root_src/core/metacling/src/TCling.cxx:1660. 8: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2116. 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 13: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:177. 6: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 7: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:346. Conditional jump or move depends on uninitialised value(s). in TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 1: TStorage::UpdateIsOnHeap(unsigned",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:1689,energy efficiency,core,core,1689,"/core/metacling/src/TCling.cxx:5737. 7: TCling::Initialize() in /opt/root_src/core/metacling/src/TCling.cxx:1660. 8: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2116. 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 13: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:177. 6: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 7: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:346. Conditional jump or move depends on uninitialised value(s). in TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:1758,energy efficiency,core,core,1758,"root_src/core/metacling/src/TCling.cxx:1660. 8: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2116. 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 13: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:177. 6: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 7: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:346. Conditional jump or move depends on uninitialised value(s). in TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed() in /opt/root_s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:1837,energy efficiency,core,core,1837,"t/root_src/core/base/src/TROOT.cxx:2116. 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 13: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:177. 6: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 7: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:346. Conditional jump or move depends on uninitialised value(s). in TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed() in /opt/root_src/core/base/inc/TNamed.h:36. 4: TDirectory::TDirectory() in /opt/root_src/core",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:1923,energy efficiency,core,core,1923,"c/core/base/src/TROOT.cxx:389. 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 13: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:177. 6: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 7: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:346. Conditional jump or move depends on uninitialised value(s). in TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed() in /opt/root_src/core/base/inc/TNamed.h:36. 4: TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 5: TDirectoryFile::TDirectoryFile() in /opt/root_src/io/i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:2045,energy efficiency,core,core,2045,"ation(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 13: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:177. 6: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 7: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:346. Conditional jump or move depends on uninitialised value(s). in TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed() in /opt/root_src/core/base/inc/TNamed.h:36. 4: TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 5: TDirectoryFile::TDirectoryFile() in /opt/root_src/io/io/src/TDirectoryFile.cxx:61. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:2165,energy efficiency,core,core,2165,"const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 13: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:177. 6: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 7: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:346. Conditional jump or move depends on uninitialised value(s). in TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed() in /opt/root_src/core/base/inc/TNamed.h:36. 4: TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 5: TDirectoryFile::TDirectoryFile() in /opt/root_src/io/io/src/TDirectoryFile.cxx:61. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 7: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:2285,energy efficiency,alloc,allocation,2285,"src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:177. 6: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 7: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:346. Conditional jump or move depends on uninitialised value(s). in TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed() in /opt/root_src/core/base/inc/TNamed.h:36. 4: TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 5: TDirectoryFile::TDirectoryFile() in /opt/root_src/io/io/src/TDirectoryFile.cxx:61. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 7: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 8: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:2355,energy efficiency,core,core,2355,"tion 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:177. 6: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 7: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:346. Conditional jump or move depends on uninitialised value(s). in TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed() in /opt/root_src/core/base/inc/TNamed.h:36. 4: TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 5: TDirectoryFile::TDirectoryFile() in /opt/root_src/io/io/src/TDirectoryFile.cxx:61. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 7: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 8: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 9: TCling::RegisterModule(char cons",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:2496,energy efficiency,core,core,2496,"ised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:177. 6: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 7: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:346. Conditional jump or move depends on uninitialised value(s). in TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed() in /opt/root_src/core/base/inc/TNamed.h:36. 4: TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 5: TDirectoryFile::TDirectoryFile() in /opt/root_src/io/io/src/TDirectoryFile.cxx:61. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 7: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 8: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 9: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:2628,energy efficiency,core,core,2628," const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:177. 6: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 7: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:346. Conditional jump or move depends on uninitialised value(s). in TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed() in /opt/root_src/core/base/inc/TNamed.h:36. 4: TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 5: TDirectoryFile::TDirectoryFile() in /opt/root_src/io/io/src/TDirectoryFile.cxx:61. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 7: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 8: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 9: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:2697,energy efficiency,core,core,2697,"inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:177. 6: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 7: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:346. Conditional jump or move depends on uninitialised value(s). in TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed() in /opt/root_src/core/base/inc/TNamed.h:36. 4: TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 5: TDirectoryFile::TDirectoryFile() in /opt/root_src/io/io/src/TDirectoryFile.cxx:61. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 7: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 8: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 9: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:2763,energy efficiency,core,core,2763,"se/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:177. 6: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 7: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:346. Conditional jump or move depends on uninitialised value(s). in TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed() in /opt/root_src/core/base/inc/TNamed.h:36. 4: TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 5: TDirectoryFile::TDirectoryFile() in /opt/root_src/io/io/src/TDirectoryFile.cxx:61. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 7: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 8: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 9: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 10: TROOT::RegisterModule(c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:2835,energy efficiency,core,core,2835,"core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:177. 6: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 7: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:346. Conditional jump or move depends on uninitialised value(s). in TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed() in /opt/root_src/core/base/inc/TNamed.h:36. 4: TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 5: TDirectoryFile::TDirectoryFile() in /opt/root_src/io/io/src/TDirectoryFile.cxx:61. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 7: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 8: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 9: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 10: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:3180,energy efficiency,Load,LoadPCM,3180,".cxx:174. 7: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:346. Conditional jump or move depends on uninitialised value(s). in TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed() in /opt/root_src/core/base/inc/TNamed.h:36. 4: TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 5: TDirectoryFile::TDirectoryFile() in /opt/root_src/io/io/src/TDirectoryFile.cxx:61. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 7: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 8: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 9: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 10: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 11: (anonymous namespace)::TriggerDictiona",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:3250,energy efficiency,alloc,allocator,3250," value was created by a stack allocation 1: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:346. Conditional jump or move depends on uninitialised value(s). in TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed() in /opt/root_src/core/base/inc/TNamed.h:36. 4: TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 5: TDirectoryFile::TDirectoryFile() in /opt/root_src/io/io/src/TDirectoryFile.cxx:61. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 7: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 8: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 9: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 10: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 11: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:3286,energy efficiency,core,core,3286,"ocation 1: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:346. Conditional jump or move depends on uninitialised value(s). in TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed() in /opt/root_src/core/base/inc/TNamed.h:36. 4: TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 5: TDirectoryFile::TDirectoryFile() in /opt/root_src/io/io/src/TDirectoryFile.cxx:61. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 7: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 8: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 9: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 10: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 11: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 12",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:3511,energy efficiency,alloc,allocator,3511,"tory.cxx:53. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed() in /opt/root_src/core/base/inc/TNamed.h:36. 4: TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 5: TDirectoryFile::TDirectoryFile() in /opt/root_src/io/io/src/TDirectoryFile.cxx:61. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 7: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 8: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 9: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 10: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 11: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 12: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 13: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:3541,energy efficiency,alloc,allocator,3541,"teIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed() in /opt/root_src/core/base/inc/TNamed.h:36. 4: TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 5: TDirectoryFile::TDirectoryFile() in /opt/root_src/io/io/src/TDirectoryFile.cxx:61. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 7: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 8: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 9: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 10: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 11: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 12: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 13: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 14: _GLOBAL__s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:3623,energy efficiency,alloc,allocator,3623,"core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed() in /opt/root_src/core/base/inc/TNamed.h:36. 4: TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 5: TDirectoryFile::TDirectoryFile() in /opt/root_src/io/io/src/TDirectoryFile.cxx:61. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 7: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 8: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 9: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 10: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 11: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 12: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 13: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 14: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:3702,energy efficiency,core,core,3702,"se/inc/TObject.h:260. 3: TNamed::TNamed() in /opt/root_src/core/base/inc/TNamed.h:36. 4: TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 5: TDirectoryFile::TDirectoryFile() in /opt/root_src/io/io/src/TDirectoryFile.cxx:61. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 7: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 8: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 9: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 10: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 11: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 12: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 13: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 14: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./el",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:3927,energy efficiency,alloc,allocator,3927,"DirectoryFile.cxx:61. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 7: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 8: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 9: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 10: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 11: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 12: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 13: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 14: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:3957,energy efficiency,alloc,allocator,3957,"::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 7: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 8: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 9: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 10: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 11: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 12: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 13: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 14: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./el",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:4039,energy efficiency,alloc,allocator,4039,"le.cxx:331. 7: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 8: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 9: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 10: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 11: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 12: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 13: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 14: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:4112,energy efficiency,core,core,4112,"t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 8: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 9: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 10: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 11: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 12: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 13: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 14: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:5417,energy efficiency,alloc,allocation,5417,"ialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 14: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 5: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 6: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 7: TCling::RegisterModule(char const*, char const**, char cons",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:5439,energy efficiency,Load,LoadPCM,5439,"ction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 14: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 5: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 6: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 7: TCling::RegisterModule(char const*, char const**, char const**, char const*, cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:5509,energy efficiency,alloc,allocator,5509,"/G__Net.cxx:3633. 14: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 5: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 6: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 7: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:5545,energy efficiency,core,core,5545,"b_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 5: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 6: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 7: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:5691,energy efficiency,core,core,5691,"nit in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 5: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 6: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 7: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > cons",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:5817,energy efficiency,core,core,5817,"eleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 5: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 6: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 7: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 8: TROOT::RegisterModule(char const*, char ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:5886,energy efficiency,core,core,5886,"_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 5: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 6: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 7: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 8: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:5965,energy efficiency,core,core,5965,"lf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 5: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 6: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 7: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 8: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::all",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:6218,energy efficiency,Load,LoadPCM,6218,"_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 5: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 6: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 7: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 8: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 9: (anonymous namespace)::TriggerDictionary",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:6288,energy efficiency,alloc,allocator,6288,"lfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 5: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 6: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 7: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 8: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 9: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-De",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:6324,energy efficiency,core,core,6324,"pen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 5: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 6: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 7: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 8: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 9: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 10: ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:6549,energy efficiency,alloc,allocator,6549,"cling/src/TCling.cxx:1821. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 5: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 6: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 7: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 8: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 9: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 10: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 11: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:6579,energy efficiency,alloc,allocator,6579,"ditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 5: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 6: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 7: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 8: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 9: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 10: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 11: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 12: _GLOBAL__sub",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:6661,energy efficiency,alloc,allocator,6661,", bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 5: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 6: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 7: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 8: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 9: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 10: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 11: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 12: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:363",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:6740,energy efficiency,core,core,6740,"eap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 5: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 6: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 7: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 8: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 9: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 10: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 11: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 12: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 13: call_init.part.0 in ./elf/./elf/dl-init.c:70. 14: call_init in ./elf/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:6964,energy efficiency,alloc,allocator,6964,"/base/src/TUrl.cxx:76. 4: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 5: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 6: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 7: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 8: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 9: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 10: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 11: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 12: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 13: call_init.part.0 in ./elf/./elf/dl-init.c:70. 14: call_init in ./elf/./elf/dl-init.c:33. 15: _dl_init in ./elf/./elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:6994,energy efficiency,alloc,allocator,6994,"e::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 5: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 6: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 7: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 8: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 9: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 10: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 11: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 12: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 13: call_init.part.0 in ./elf/./elf/dl-init.c:70. 14: call_init in ./elf/./elf/dl-init.c:33. 15: _dl_init in ./elf/./elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:7076,energy efficiency,alloc,allocator,7076,"ile.cxx:331. 5: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 6: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 7: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 8: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 9: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 10: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 11: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 12: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 13: call_init.part.0 in ./elf/./elf/dl-init.c:70. 14: call_init in ./elf/./elf/dl-init.c:33. 15: _dl_init in ./elf/./elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:7149,energy efficiency,core,core,7149,"_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 6: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 7: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 8: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 9: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 10: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 11: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 12: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 13: call_init.part.0 in ./elf/./elf/dl-init.c:70. 14: call_init in ./elf/./elf/dl-init.c:33. 15: _dl_init in ./elf/./elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:8507,energy efficiency,alloc,allocator,8507,"build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 12: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 13: call_init.part.0 in ./elf/./elf/dl-init.c:70. 14: call_init in ./elf/./elf/dl-init.c:33. 15: _dl_init in ./elf/./elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Invalid read of size 4. in ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 1: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 2: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 3: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 4: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 5: TList::Remove(TObject*) in /op",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:8595,energy efficiency,alloc,allocator,8595," /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 13: call_init.part.0 in ./elf/./elf/dl-init.c:70. 14: call_init in ./elf/./elf/dl-init.c:33. 15: _dl_init in ./elf/./elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Invalid read of size 4. in ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 1: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 2: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 3: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 4: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 5: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 6: THashList::RecursiveRemove(TObject*) in /opt/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:8712,energy efficiency,load,loadLibrary,8712," 14: call_init in ./elf/./elf/dl-init.c:33. 15: _dl_init in ./elf/./elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Invalid read of size 4. in ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 1: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 2: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 3: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 4: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 5: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 6: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 7: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:8859,energy efficiency,alloc,allocation,8859,"182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Invalid read of size 4. in ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 1: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 2: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 3: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 4: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 5: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 6: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 7: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 8: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 9: TObject::~TObject() in /opt/root_src/core/bas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:8881,energy efficiency,Load,LoadPCM,8881,"er in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Invalid read of size 4. in ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 1: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 2: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 3: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 4: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 5: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 6: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 7: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 8: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 9: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:8951,energy efficiency,alloc,allocator,8951,"pen.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Invalid read of size 4. in ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 1: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 2: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 3: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 4: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 5: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 6: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 7: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 8: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 9: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 10: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHash",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:8987,energy efficiency,core,core,8987,"n in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Invalid read of size 4. in ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 1: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 2: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 3: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 4: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 5: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 6: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 7: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 8: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 9: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 10: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:9109,energy efficiency,core,core,9109,"open.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Invalid read of size 4. in ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 1: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 2: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 3: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 4: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 5: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 6: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 7: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 8: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 9: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 10: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 11: ROOT::Internal::TCheckHashRecursiveRemoveConsist",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:9202,energy efficiency,core,core,9202,"r in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Invalid read of size 4. in ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 1: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 2: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 3: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 4: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 5: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 6: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 7: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 8: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 9: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 10: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 11: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:24",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:9291,energy efficiency,core,core,9291,"38. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Invalid read of size 4. in ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 1: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 2: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 3: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 4: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 5: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 6: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 7: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 8: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 9: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 10: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 11: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 12: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 13:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:9357,energy efficiency,core,core,9357,"dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Invalid read of size 4. in ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 1: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 2: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 3: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 4: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 5: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 6: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 7: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 8: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 9: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 10: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 11: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 12: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 13: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:9450,energy efficiency,core,core,9450,"cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Invalid read of size 4. in ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 1: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 2: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 3: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 4: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 5: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 6: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 7: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 8: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 9: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 10: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 11: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 12: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 13: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 14: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:9523,energy efficiency,core,core,9523,"const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Invalid read of size 4. in ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 1: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 2: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 3: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 4: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 5: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 6: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 7: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 8: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 9: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 10: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 11: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 12: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 13: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 14: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 15: TPair::CheckTObjectHashConsistency() const in /",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:9609,energy efficiency,core,core,9609,">*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Invalid read of size 4. in ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 1: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 2: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 3: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 4: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 5: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 6: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 7: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 8: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 9: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 10: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 11: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 12: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 13: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 14: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 15: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 16: TObject::CheckedHash() in /opt/root_src/cor",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:9695,energy efficiency,core,core,9695,"ibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Invalid read of size 4. in ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 1: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 2: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 3: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 4: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 5: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 6: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 7: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 8: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 9: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 10: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 11: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 12: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 13: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 14: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 15: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 16: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 17: THashTable::GetCheckedHashValue(TObject*) const in /opt/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:9789,energy efficiency,core,core,9789,"p-Debug/lib/libCling.so. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Invalid read of size 4. in ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 1: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 2: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 3: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 4: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 5: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 6: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 7: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 8: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 9: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 10: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 11: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 12: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 13: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 14: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 15: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 16: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 17: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 18: THashTable::Add(TObject*) in /opt/root_src/core/co",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:9856,energy efficiency,core,core,9856," allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Invalid read of size 4. in ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 1: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 2: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 3: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 4: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 5: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 6: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 7: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 8: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 9: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 10: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 11: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 12: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 13: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 14: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 15: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 16: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 17: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 18: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 19: TMap::Add(TObject*, TObject*) in /opt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:10002,energy efficiency,core,core,10002,"c/TCling.cxx:1821. Invalid read of size 4. in ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 1: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 2: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 3: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 4: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 5: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 6: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 7: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 8: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 9: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 10: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 11: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 12: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 13: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 14: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 15: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 16: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 17: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 18: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 19: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 20: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 21: TUrl::HasOption(char const*) ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:10149,energy efficiency,core,core,10149,"ternal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 2: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 3: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 4: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 5: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 6: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 7: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 8: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 9: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 10: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 11: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 12: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 13: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 14: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 15: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 16: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 17: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 18: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 19: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 20: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 21: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 22: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:10259,energy efficiency,core,core,10259,"ngesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 3: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 4: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 5: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 6: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 7: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 8: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 9: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 10: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 11: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 12: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 13: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 14: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 15: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 16: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 17: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 18: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 19: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 20: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 21: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 22: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. 23: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:10345,energy efficiency,core,core,10345,"/root_src/core/base/inc/TObject.h:405. 4: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 5: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 6: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 7: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 8: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 9: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 10: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 11: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 12: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 13: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 14: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 15: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 16: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 17: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 18: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 19: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 20: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 21: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 22: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. 23: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 24: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:10443,energy efficiency,core,core,10443,"_src/core/cont/src/TList.cxx:646. 5: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 6: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 7: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 8: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 9: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 10: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 11: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 12: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 13: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 14: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 15: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 16: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 17: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 18: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 19: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 20: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 21: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 22: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. 23: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 24: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 25: TCling::Registe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:10538,energy efficiency,core,core,10538,"st.cxx:829. 6: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 7: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 8: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 9: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 10: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 11: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 12: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 13: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 14: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 15: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 16: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 17: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 18: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 19: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 20: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 21: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 22: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. 23: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 24: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 25: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:10608,energy efficiency,core,core,10608,"ore/cont/src/THashList.cxx:335. 7: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 8: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 9: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 10: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 11: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 12: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 13: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 14: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 15: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 16: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 17: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 18: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 19: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 20: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 21: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 22: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. 23: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 24: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 25: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:10706,energy efficiency,core,core,10706,"/TROOT.cxx:2463. 8: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 9: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 10: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 11: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 12: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 13: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 14: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 15: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 16: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 17: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 18: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 19: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 20: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 21: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 22: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. 23: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 24: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 25: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:10784,energy efficiency,core,core,10784,"rc/core/base/inc/TROOT.h:400. 9: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 10: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 11: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 12: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 13: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 14: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 15: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 16: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 17: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 18: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 19: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 20: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 21: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 22: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. 23: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 24: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 25: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:10868,energy efficiency,core,core,10868,"TObject.cxx:163. 10: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 11: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 12: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 13: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 14: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 15: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 16: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 17: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 18: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 19: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 20: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 21: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 22: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. 23: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 24: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 25: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 26: TROOT::RegisterModule(c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:10943,energy efficiency,core,core,10943,"~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 11: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 12: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 13: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 14: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 15: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 16: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 17: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 18: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 19: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 20: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 21: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 22: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. 23: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 24: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 25: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 26: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:11027,energy efficiency,core,core,11027,"ursiveRemoveConsistency.h:68. 11: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 12: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 13: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 14: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 15: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 16: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 17: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 18: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 19: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 20: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 21: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 22: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. 23: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 24: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 25: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 26: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:11284,energy efficiency,Load,LoadPCM,11284,". 13: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 14: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 15: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 16: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 17: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 18: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 19: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 20: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 21: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 22: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. 23: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 24: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 25: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 26: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. Address 0x1053183c is 12 bytes inside a b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:11354,energy efficiency,alloc,allocator,11354,"TClass.h:502. 14: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 15: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 16: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 17: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 18: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 19: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 20: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 21: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 22: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. 23: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 24: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 25: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 26: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. Address 0x1053183c is 12 bytes inside a block of size 16 free'd 1: operator delete(void*) in /usr/libexec/valgri",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:11390,energy efficiency,core,core,11390,":HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 15: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 16: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 17: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 18: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 19: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 20: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 21: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 22: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. 23: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 24: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 25: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 26: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. Address 0x1053183c is 12 bytes inside a block of size 16 free'd 1: operator delete(void*) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:11616,energy efficiency,alloc,allocator,11616,"/TObject.h:341. 17: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 18: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 19: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 20: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 21: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 22: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. 23: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 24: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 25: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 26: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. Address 0x1053183c is 12 bytes inside a block of size 16 free'd 1: operator delete(void*) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectDealloc(void*) in /opt/root_src/core/base/src/TStorage.cxx:324. 3: TObject::operator delete(void*) in /opt/root_src/core/base/src/TObject.cxx:1084. 4: TObject::~TObject() in /opt/root_src/core/base/src/TOb",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:11646,energy efficiency,alloc,allocator,11646,"::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 18: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 19: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 20: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 21: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 22: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. 23: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 24: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 25: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 26: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. Address 0x1053183c is 12 bytes inside a block of size 16 free'd 1: operator delete(void*) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectDealloc(void*) in /opt/root_src/core/base/src/TStorage.cxx:324. 3: TObject::operator delete(void*) in /opt/root_src/core/base/src/TObject.cxx:1084. 4: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:168. 5: ROOT::Interna",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:11728,energy efficiency,alloc,allocator,11728,"95. 18: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 19: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 20: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 21: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 22: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. 23: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 24: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 25: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 26: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. Address 0x1053183c is 12 bytes inside a block of size 16 free'd 1: operator delete(void*) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectDealloc(void*) in /opt/root_src/core/base/src/TStorage.cxx:324. 3: TObject::operator delete(void*) in /opt/root_src/core/base/src/TObject.cxx:1084. 4: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:168. 5: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:113. 6: RO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:11807,energy efficiency,core,core,11807,"cxx:96. 19: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 20: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 21: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 22: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. 23: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 24: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 25: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 26: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. Address 0x1053183c is 12 bytes inside a block of size 16 free'd 1: operator delete(void*) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectDealloc(void*) in /opt/root_src/core/base/src/TStorage.cxx:324. 3: TObject::operator delete(void*) in /opt/root_src/core/base/src/TObject.cxx:1084. 4: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:168. 5: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:113. 6: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:12032,energy efficiency,alloc,allocator,12032,"src/TUrl.cxx:686. 22: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. 23: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 24: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 25: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 26: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. Address 0x1053183c is 12 bytes inside a block of size 16 free'd 1: operator delete(void*) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectDealloc(void*) in /opt/root_src/core/base/src/TStorage.cxx:324. 3: TObject::operator delete(void*) in /opt/root_src/core/base/src/TObject.cxx:1084. 4: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:168. 5: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:113. 6: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 7: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 8: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 9: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:12062,energy efficiency,alloc,allocator,12062,"File(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. 23: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 24: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 25: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 26: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. Address 0x1053183c is 12 bytes inside a block of size 16 free'd 1: operator delete(void*) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectDealloc(void*) in /opt/root_src/core/base/src/TStorage.cxx:324. 3: TObject::operator delete(void*) in /opt/root_src/core/base/src/TObject.cxx:1084. 4: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:168. 5: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:113. 6: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 7: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 8: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 9: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 10: THashList::Recur",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:12144,energy efficiency,alloc,allocator,12144,"cxx:378. 23: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 24: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 25: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 26: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. Address 0x1053183c is 12 bytes inside a block of size 16 free'd 1: operator delete(void*) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectDealloc(void*) in /opt/root_src/core/base/src/TStorage.cxx:324. 3: TObject::operator delete(void*) in /opt/root_src/core/base/src/TObject.cxx:1084. 4: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:168. 5: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:113. 6: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 7: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 8: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 9: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 10: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 11: TROOT::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:12217,energy efficiency,core,core,12217,"const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 24: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 25: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 26: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. Address 0x1053183c is 12 bytes inside a block of size 16 free'd 1: operator delete(void*) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectDealloc(void*) in /opt/root_src/core/base/src/TStorage.cxx:324. 3: TObject::operator delete(void*) in /opt/root_src/core/base/src/TObject.cxx:1084. 4: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:168. 5: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:113. 6: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 7: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 8: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 9: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 10: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 11: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:246",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:12448,energy efficiency,core,core,12448,"le(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 26: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. Address 0x1053183c is 12 bytes inside a block of size 16 free'd 1: operator delete(void*) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectDealloc(void*) in /opt/root_src/core/base/src/TStorage.cxx:324. 3: TObject::operator delete(void*) in /opt/root_src/core/base/src/TObject.cxx:1084. 4: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:168. 5: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:113. 6: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 7: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 8: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 9: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 10: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 11: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 12: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 13: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 14: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TChec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:12532,energy efficiency,core,core,12532,"d::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 26: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. Address 0x1053183c is 12 bytes inside a block of size 16 free'd 1: operator delete(void*) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectDealloc(void*) in /opt/root_src/core/base/src/TStorage.cxx:324. 3: TObject::operator delete(void*) in /opt/root_src/core/base/src/TObject.cxx:1084. 4: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:168. 5: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:113. 6: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 7: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 8: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 9: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 10: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 11: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 12: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 13: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 14: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursive",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:12604,energy efficiency,core,core,12604,"ar>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 26: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. Address 0x1053183c is 12 bytes inside a block of size 16 free'd 1: operator delete(void*) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectDealloc(void*) in /opt/root_src/core/base/src/TStorage.cxx:324. 3: TObject::operator delete(void*) in /opt/root_src/core/base/src/TObject.cxx:1084. 4: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:168. 5: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:113. 6: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 7: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 8: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 9: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 10: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 11: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 12: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 13: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 14: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 15: ROOT::Internal::TCheckHashRecursiveRemoveCon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:12697,energy efficiency,core,core,12697,"std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 26: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. Address 0x1053183c is 12 bytes inside a block of size 16 free'd 1: operator delete(void*) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectDealloc(void*) in /opt/root_src/core/base/src/TStorage.cxx:324. 3: TObject::operator delete(void*) in /opt/root_src/core/base/src/TObject.cxx:1084. 4: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:168. 5: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:113. 6: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 7: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 8: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 9: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 10: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 11: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 12: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 13: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 14: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 15: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:12786,energy efficiency,core,core,12786,") in /opt/root_src/core/metacling/src/TCling.cxx:2309. 26: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. Address 0x1053183c is 12 bytes inside a block of size 16 free'd 1: operator delete(void*) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectDealloc(void*) in /opt/root_src/core/base/src/TStorage.cxx:324. 3: TObject::operator delete(void*) in /opt/root_src/core/base/src/TObject.cxx:1084. 4: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:168. 5: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:113. 6: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 7: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 8: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 9: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 10: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 11: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 12: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 13: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 14: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 15: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 16: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:12852,energy efficiency,core,core,12852,"RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. Address 0x1053183c is 12 bytes inside a block of size 16 free'd 1: operator delete(void*) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectDealloc(void*) in /opt/root_src/core/base/src/TStorage.cxx:324. 3: TObject::operator delete(void*) in /opt/root_src/core/base/src/TObject.cxx:1084. 4: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:168. 5: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:113. 6: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 7: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 8: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 9: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 10: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 11: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 12: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 13: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 14: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 15: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 16: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 17: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:12945,energy efficiency,core,core,12945," std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. Address 0x1053183c is 12 bytes inside a block of size 16 free'd 1: operator delete(void*) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectDealloc(void*) in /opt/root_src/core/base/src/TStorage.cxx:324. 3: TObject::operator delete(void*) in /opt/root_src/core/base/src/TObject.cxx:1084. 4: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:168. 5: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:113. 6: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 7: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 8: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 9: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 10: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 11: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 12: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 13: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 14: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 15: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 16: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 17: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 18: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:13018,energy efficiency,core,core,13018,"char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. Address 0x1053183c is 12 bytes inside a block of size 16 free'd 1: operator delete(void*) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectDealloc(void*) in /opt/root_src/core/base/src/TStorage.cxx:324. 3: TObject::operator delete(void*) in /opt/root_src/core/base/src/TObject.cxx:1084. 4: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:168. 5: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:113. 6: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 7: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 8: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 9: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 10: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 11: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 12: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 13: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 14: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 15: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 16: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 17: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 18: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 19: TPair::CheckTObjectHashConsistency() const ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:13105,energy efficiency,core,core,13105,"g<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. Address 0x1053183c is 12 bytes inside a block of size 16 free'd 1: operator delete(void*) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectDealloc(void*) in /opt/root_src/core/base/src/TStorage.cxx:324. 3: TObject::operator delete(void*) in /opt/root_src/core/base/src/TObject.cxx:1084. 4: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:168. 5: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:113. 6: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 7: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 8: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 9: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 10: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 11: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 12: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 13: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 14: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 15: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 16: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 17: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 18: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 19: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 20: TObject::CheckedHash() in /opt/root_src/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:13192,energy efficiency,core,core,13192,"bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. Address 0x1053183c is 12 bytes inside a block of size 16 free'd 1: operator delete(void*) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectDealloc(void*) in /opt/root_src/core/base/src/TStorage.cxx:324. 3: TObject::operator delete(void*) in /opt/root_src/core/base/src/TObject.cxx:1084. 4: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:168. 5: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:113. 6: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 7: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 8: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 9: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 10: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 11: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 12: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 13: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 14: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 15: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 16: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 17: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 18: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 19: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 20: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 21: THashTable::GetCheckedHashValue(TObject*) const in /op",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:13287,energy efficiency,core,core,13287,"ock of size 16 free'd 1: operator delete(void*) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectDealloc(void*) in /opt/root_src/core/base/src/TStorage.cxx:324. 3: TObject::operator delete(void*) in /opt/root_src/core/base/src/TObject.cxx:1084. 4: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:168. 5: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:113. 6: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 7: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 8: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 9: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 10: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 11: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 12: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 13: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 14: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 15: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 16: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 17: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 18: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 19: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 20: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 21: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 22: THashTable::Add(TObject*) in /opt/root_src/core/c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:13355,energy efficiency,core,core,13355,"rind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectDealloc(void*) in /opt/root_src/core/base/src/TStorage.cxx:324. 3: TObject::operator delete(void*) in /opt/root_src/core/base/src/TObject.cxx:1084. 4: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:168. 5: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:113. 6: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 7: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 8: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 9: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 10: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 11: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 12: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 13: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 14: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 15: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 16: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 17: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 18: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 19: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 20: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 21: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 22: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 23: TMap::Add(TObject*, TObject*) in /opt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:13501,energy efficiency,core,core,13501,"lete(void*) in /opt/root_src/core/base/src/TObject.cxx:1084. 4: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:168. 5: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:113. 6: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 7: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 8: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 9: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 10: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 11: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 12: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 13: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 14: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 15: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 16: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 17: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 18: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 19: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 20: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 21: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 22: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 23: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 24: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 25: TUrl::HasOption(char const*) ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:13648,energy efficiency,core,core,13648,"al::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:113. 6: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 7: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 8: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 9: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 10: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 11: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 12: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 13: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 14: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 15: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 16: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 17: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 18: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 19: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 20: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 21: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 22: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 23: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 24: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 25: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 26: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:13758,energy efficiency,core,core,13758,"Memory() in /opt/root_src/core/base/src/TObject.cxx:129. 7: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 8: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 9: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 10: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 11: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 12: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 13: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 14: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 15: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 16: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 17: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 18: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 19: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 20: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 21: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 22: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 23: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 24: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 25: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 26: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. Block was alloc'd at 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:13844,energy efficiency,core,core,13844,"t_src/core/base/inc/TObject.h:405. 8: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 9: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 10: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 11: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 12: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 13: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 14: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 15: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 16: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 17: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 18: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 19: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 20: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 21: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 22: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 23: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 24: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 25: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 26: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. Block was alloc'd at 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectAlloc(unsigned long) in /opt/root_src/core/base/src/TStora",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:13942,energy efficiency,core,core,13942,"/core/cont/src/TList.cxx:646. 9: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 10: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 11: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 12: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 13: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 14: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 15: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 16: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 17: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 18: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 19: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 20: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 21: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 22: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 23: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 24: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 25: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 26: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. Block was alloc'd at 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectAlloc(unsigned long) in /opt/root_src/core/base/src/TStorage.cxx:292. 3: TObject::operator new(unsigned long) in /opt/root_src/core/base/inc/TObject.h:181. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:14037,energy efficiency,core,core,14037,"xx:829. 10: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 11: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 12: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 13: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 14: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 15: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 16: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 17: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 18: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 19: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 20: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 21: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 22: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 23: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 24: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 25: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 26: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. Block was alloc'd at 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectAlloc(unsigned long) in /opt/root_src/core/base/src/TStorage.cxx:292. 3: TObject::operator new(unsigned long) in /opt/root_src/core/base/inc/TObject.h:181. 4: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:81. 5: ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:14107,energy efficiency,core,core,14107,"/cont/src/THashList.cxx:335. 11: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 12: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 13: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 14: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 15: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 16: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 17: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 18: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 19: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 20: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 21: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 22: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 23: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 24: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 25: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 26: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. Block was alloc'd at 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectAlloc(unsigned long) in /opt/root_src/core/base/src/TStorage.cxx:292. 3: TObject::operator new(unsigned long) in /opt/root_src/core/base/inc/TObject.h:181. 4: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:81. 5: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:14205,energy efficiency,core,core,14205,"ROOT.cxx:2463. 12: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 13: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 14: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 15: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 16: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 17: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 18: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 19: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 20: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 21: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 22: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 23: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 24: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 25: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 26: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. Block was alloc'd at 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectAlloc(unsigned long) in /opt/root_src/core/base/src/TStorage.cxx:292. 3: TObject::operator new(unsigned long) in /opt/root_src/core/base/inc/TObject.h:181. 4: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:81. 5: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 6: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 7: TList::FindLink",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:14283,energy efficiency,core,core,14283,"c/core/base/inc/TROOT.h:400. 13: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 14: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 15: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 16: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 17: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 18: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 19: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 20: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 21: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 22: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 23: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 24: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 25: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 26: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. Block was alloc'd at 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectAlloc(unsigned long) in /opt/root_src/core/base/src/TStorage.cxx:292. 3: TObject::operator new(unsigned long) in /opt/root_src/core/base/inc/TObject.h:181. 4: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:81. 5: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 6: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 7: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 8: ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:14367,energy efficiency,core,core,14367,"TObject.cxx:163. 14: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 15: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 16: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 17: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 18: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 19: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 20: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 21: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 22: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 23: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 24: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 25: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 26: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. Block was alloc'd at 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectAlloc(unsigned long) in /opt/root_src/core/base/src/TStorage.cxx:292. 3: TObject::operator new(unsigned long) in /opt/root_src/core/base/inc/TObject.h:181. 4: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:81. 5: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 6: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 7: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 8: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 9: THashList::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:14442,energy efficiency,core,core,14442,"~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 15: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 16: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 17: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 18: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 19: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 20: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 21: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 22: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 23: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 24: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 25: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 26: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. Block was alloc'd at 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectAlloc(unsigned long) in /opt/root_src/core/base/src/TStorage.cxx:292. 3: TObject::operator new(unsigned long) in /opt/root_src/core/base/inc/TObject.h:181. 4: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:81. 5: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 6: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 7: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 8: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 9: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:14526,energy efficiency,core,core,14526,"ursiveRemoveConsistency.h:68. 15: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 16: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 17: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 18: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 19: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 20: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 21: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 22: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 23: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 24: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 25: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 26: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. Block was alloc'd at 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectAlloc(unsigned long) in /opt/root_src/core/base/src/TStorage.cxx:292. 3: TObject::operator new(unsigned long) in /opt/root_src/core/base/inc/TObject.h:181. 4: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:81. 5: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 6: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 7: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 8: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 9: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 10: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:14667,energy efficiency,alloc,alloc,14667,"shRecursiveRemoveConsistency.h:243. 16: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 17: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 18: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 19: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 20: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 21: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 22: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 23: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 24: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 25: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 26: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. Block was alloc'd at 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectAlloc(unsigned long) in /opt/root_src/core/base/src/TStorage.cxx:292. 3: TObject::operator new(unsigned long) in /opt/root_src/core/base/inc/TObject.h:181. 4: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:81. 5: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 6: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 7: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 8: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 9: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 10: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 11: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 12: TObject::~TObject() in /opt/root_src/core/bas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:14826,energy efficiency,core,core,14826,"n /opt/root_src/core/meta/inc/TClass.h:502. 18: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 19: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 20: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 21: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 22: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 23: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 24: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 25: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 26: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. Block was alloc'd at 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectAlloc(unsigned long) in /opt/root_src/core/base/src/TStorage.cxx:292. 3: TObject::operator new(unsigned long) in /opt/root_src/core/base/inc/TObject.h:181. 4: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:81. 5: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 6: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 7: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 8: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 9: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 10: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 11: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 12: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 13: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheck",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:14915,energy efficiency,core,core,14915,"Class&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 19: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 20: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 21: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 22: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 23: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 24: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 25: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 26: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. Block was alloc'd at 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectAlloc(unsigned long) in /opt/root_src/core/base/src/TStorage.cxx:292. 3: TObject::operator new(unsigned long) in /opt/root_src/core/base/inc/TObject.h:181. 4: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:81. 5: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 6: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 7: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 8: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 9: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 10: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 11: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 12: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 13: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 14: ROOT::Internal::TCheckHashRecursiveRemoveConsist",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:15006,energy efficiency,core,core,15006,"ncy() const in /opt/root_src/core/cont/inc/TMap.h:124. 20: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 21: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 22: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 23: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 24: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 25: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 26: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. Block was alloc'd at 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectAlloc(unsigned long) in /opt/root_src/core/base/src/TStorage.cxx:292. 3: TObject::operator new(unsigned long) in /opt/root_src/core/base/inc/TObject.h:181. 4: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:81. 5: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 6: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 7: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 8: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 9: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 10: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 11: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 12: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 13: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 14: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:15094,energy efficiency,core,core,15094,"t/root_src/core/base/inc/TObject.h:341. 21: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 22: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 23: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 24: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 25: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 26: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. Block was alloc'd at 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectAlloc(unsigned long) in /opt/root_src/core/base/src/TStorage.cxx:292. 3: TObject::operator new(unsigned long) in /opt/root_src/core/base/inc/TObject.h:181. 4: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:81. 5: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 6: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 7: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 8: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 9: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 10: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 11: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 12: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 13: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 14: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 15: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:15160,energy efficiency,core,core,15160,"HashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 22: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 23: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 24: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 25: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 26: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. Block was alloc'd at 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectAlloc(unsigned long) in /opt/root_src/core/base/src/TStorage.cxx:292. 3: TObject::operator new(unsigned long) in /opt/root_src/core/base/inc/TObject.h:181. 4: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:81. 5: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 6: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 7: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 8: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 9: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 10: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 11: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 12: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 13: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 14: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 15: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 16: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:15253,energy efficiency,core,core,15253,"(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 23: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 24: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 25: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 26: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. Block was alloc'd at 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectAlloc(unsigned long) in /opt/root_src/core/base/src/TStorage.cxx:292. 3: TObject::operator new(unsigned long) in /opt/root_src/core/base/inc/TObject.h:181. 4: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:81. 5: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 6: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 7: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 8: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 9: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 10: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 11: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 12: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 13: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 14: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 15: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 16: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 17: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:15326,energy efficiency,core,core,15326,"d(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 24: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 25: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 26: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. Block was alloc'd at 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectAlloc(unsigned long) in /opt/root_src/core/base/src/TStorage.cxx:292. 3: TObject::operator new(unsigned long) in /opt/root_src/core/base/inc/TObject.h:181. 4: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:81. 5: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 6: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 7: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 8: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 9: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 10: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 11: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 12: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 13: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 14: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 15: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 16: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 17: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 18: TPair::CheckTObjectHashConsistency() const i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:15412,energy efficiency,core,core,15412,"ns() const in /opt/root_src/core/base/src/TUrl.cxx:645. 25: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 26: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. Block was alloc'd at 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectAlloc(unsigned long) in /opt/root_src/core/base/src/TStorage.cxx:292. 3: TObject::operator new(unsigned long) in /opt/root_src/core/base/inc/TObject.h:181. 4: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:81. 5: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 6: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 7: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 8: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 9: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 10: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 11: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 12: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 13: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 14: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 15: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 16: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 17: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 18: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 19: TObject::CheckedHash() in /opt/root_src/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:15499,energy efficiency,core,core,15499,") const in /opt/root_src/core/base/src/TUrl.cxx:686. 26: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. Block was alloc'd at 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectAlloc(unsigned long) in /opt/root_src/core/base/src/TStorage.cxx:292. 3: TObject::operator new(unsigned long) in /opt/root_src/core/base/inc/TObject.h:181. 4: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:81. 5: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 6: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 7: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 8: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 9: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 10: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 11: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 12: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 13: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 14: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 15: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 16: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 17: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 18: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 19: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 20: THashTable::GetCheckedHashValue(TObject*) const in /op",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:15594,energy efficiency,core,core,15594," char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. Block was alloc'd at 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectAlloc(unsigned long) in /opt/root_src/core/base/src/TStorage.cxx:292. 3: TObject::operator new(unsigned long) in /opt/root_src/core/base/inc/TObject.h:181. 4: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:81. 5: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 6: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 7: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 8: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 9: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 10: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 11: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 12: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 13: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 14: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 15: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 16: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 17: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 18: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 19: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 20: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 21: THashTable::Add(TObject*) in /opt/root_src/core/c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:15662,energy efficiency,core,core,15662,"as alloc'd at 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: TStorage::ObjectAlloc(unsigned long) in /opt/root_src/core/base/src/TStorage.cxx:292. 3: TObject::operator new(unsigned long) in /opt/root_src/core/base/inc/TObject.h:181. 4: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:81. 5: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 6: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 7: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 8: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 9: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 10: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 11: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 12: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 13: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 14: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 15: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 16: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 17: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 18: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 19: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 20: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 21: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 22: TMap::Add(TObject*, TObject*) in /opt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:15808,energy efficiency,core,core,15808,"n /opt/root_src/core/base/src/TStorage.cxx:292. 3: TObject::operator new(unsigned long) in /opt/root_src/core/base/inc/TObject.h:181. 4: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:81. 5: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 6: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 7: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 8: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 9: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 10: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 11: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 12: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 13: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 14: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 15: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 16: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 17: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 18: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 19: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 20: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 21: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 22: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 23: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 24: TUrl::HasOption(char const*) ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:15955,energy efficiency,core,core,15955,"rnal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:81. 5: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 6: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 7: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 8: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 9: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 10: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 11: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 12: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 13: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 14: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 15: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 16: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 17: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 18: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 19: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 20: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 21: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 22: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 23: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 24: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 25: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:16065,energy efficiency,core,core,16065,"sMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 6: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 7: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 8: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 9: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 10: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 11: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 12: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 13: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 14: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 15: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 16: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 17: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 18: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 19: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 20: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 21: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 22: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 23: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 24: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 25: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. 26: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:16151,energy efficiency,core,core,16151,"ot_src/core/base/inc/TObject.h:405. 7: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 8: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 9: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 10: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 11: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 12: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 13: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 14: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 15: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 16: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 17: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 18: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 19: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 20: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 21: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 22: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 23: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 24: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 25: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. 26: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. Conditional jump or move depends on uninitialised value(s). in TClass::SetR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:16249,energy efficiency,core,core,16249,"c/core/cont/src/TList.cxx:646. 8: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 9: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 10: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 11: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 12: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 13: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 14: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 15: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 16: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 17: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 18: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 19: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 20: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 21: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 22: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 23: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 24: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 25: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. 26: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. Conditional jump or move depends on uninitialised value(s). in TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 1: TStorage::UpdateIsOnHeap(uns",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:16344,energy efficiency,core,core,16344,"cxx:829. 9: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 10: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 11: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 12: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 13: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 14: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 15: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 16: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 17: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 18: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 19: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 20: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 21: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 22: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 23: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 24: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 25: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. 26: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. Conditional jump or move depends on uninitialised value(s). in TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:12",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:16414,energy efficiency,core,core,16414,"/cont/src/THashList.cxx:335. 10: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 11: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 12: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 13: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 14: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 15: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 16: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 17: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 18: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 19: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 20: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 21: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 22: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 23: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 24: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 25: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. 26: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. Conditional jump or move depends on uninitialised value(s). in TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:16512,energy efficiency,core,core,16512,"ROOT.cxx:2463. 11: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 12: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 13: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 14: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 15: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 16: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 17: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 18: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 19: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 20: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 21: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 22: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 23: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 24: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 25: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. 26: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. Conditional jump or move depends on uninitialised value(s). in TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::TCheckHashRecursiveRemoveConsistency() i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:16590,energy efficiency,core,core,16590,"c/core/base/inc/TROOT.h:400. 12: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163. 13: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 14: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 15: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 16: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 17: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 18: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 19: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 20: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 21: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 22: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 23: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 24: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 25: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. 26: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. Conditional jump or move depends on uninitialised value(s). in TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:53. 4: RO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:16674,energy efficiency,core,core,16674,"TObject.cxx:163. 13: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 14: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 15: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 16: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 17: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 18: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 19: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 20: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 21: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 22: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 23: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 24: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 25: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. 26: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. Conditional jump or move depends on uninitialised value(s). in TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:53. 4: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:16749,energy efficiency,core,core,16749,"~TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68. 14: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 15: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 16: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 17: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 18: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 19: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 20: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 21: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 22: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 23: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 24: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 25: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. 26: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. Conditional jump or move depends on uninitialised value(s). in TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:53. 4: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:241. 5: TClass::SetRun",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:16833,energy efficiency,core,core,16833,"ursiveRemoveConsistency.h:68. 14: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243. 15: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 16: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 17: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 18: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 19: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 20: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 21: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 22: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 23: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 24: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 25: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. 26: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. Conditional jump or move depends on uninitialised value(s). in TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:53. 4: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:241. 5: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 6: TClass::HasConsi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:17189,energy efficiency,core,core,17189,"ternal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 18: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 19: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 20: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 21: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 22: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 23: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 24: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 25: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. 26: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. Conditional jump or move depends on uninitialised value(s). in TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:53. 4: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:241. 5: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 6: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 7: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 8: TKey::CheckTObjectHashConsistency() const in /opt/root_src/io/io/inc/TKey.h:116. 9: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 10: THashTable::GetCheckedHashValue(T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:17319,energy efficiency,core,core,17319,"const in /opt/root_src/core/cont/inc/TMap.h:124. 19: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 20: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 21: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 22: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 23: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 24: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 25: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. 26: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. Conditional jump or move depends on uninitialised value(s). in TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:53. 4: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:241. 5: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 6: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 7: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 8: TKey::CheckTObjectHashConsistency() const in /opt/root_src/io/io/inc/TKey.h:116. 9: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 10: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 11: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:17388,energy efficiency,core,core,17388,"Hash() in /opt/root_src/core/base/inc/TObject.h:341. 20: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 21: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 22: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 23: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 24: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 25: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. 26: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. Conditional jump or move depends on uninitialised value(s). in TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:53. 4: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:241. 5: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 6: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 7: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 8: TKey::CheckTObjectHashConsistency() const in /opt/root_src/io/io/inc/TKey.h:116. 9: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 10: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 11: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 12: THashList::AddLast(TObject*) in /opt/root_src/core/c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:17530,energy efficiency,core,core,17530,"able.h:95. 21: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 22: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 23: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 24: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 25: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. 26: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. Conditional jump or move depends on uninitialised value(s). in TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:53. 4: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:241. 5: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 6: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 7: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 8: TKey::CheckTObjectHashConsistency() const in /opt/root_src/io/io/inc/TKey.h:116. 9: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 10: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 11: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 12: THashList::AddLast(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:100. 13: TList::Add(TObject*) in /opt/root_src/core/cont/inc/TList.h:81. 14: TDirectoryFile::ReadKeys(bool) in /opt/root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:17676,energy efficiency,core,core,17676,"/cont/src/TMap.cxx:66. 23: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 24: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 25: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. 26: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. Conditional jump or move depends on uninitialised value(s). in TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:53. 4: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:241. 5: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 6: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 7: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 8: TKey::CheckTObjectHashConsistency() const in /opt/root_src/io/io/inc/TKey.h:116. 9: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 10: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 11: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 12: THashList::AddLast(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:100. 13: TList::Add(TObject*) in /opt/root_src/core/cont/inc/TList.h:81. 14: TDirectoryFile::ReadKeys(bool) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1448. 15: TFile::Init(bool) in /opt/root_src/io/io/src/TFile.cxx:823. 16: TMemFile::TMemFile(char const*, TMemFi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:17785,energy efficiency,core,core,17785,"HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 25: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. 26: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. Conditional jump or move depends on uninitialised value(s). in TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:53. 4: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:241. 5: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 6: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 7: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 8: TKey::CheckTObjectHashConsistency() const in /opt/root_src/io/io/inc/TKey.h:116. 9: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 10: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 11: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 12: THashList::AddLast(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:100. 13: TList::Add(TObject*) in /opt/root_src/core/cont/inc/TList.h:81. 14: TDirectoryFile::ReadKeys(bool) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1448. 15: TFile::Init(bool) in /opt/root_src/io/io/src/TFile.cxx:823. 16: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:127. 17: TCling::LoadPCM(std::__cxx11::bas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:17870,energy efficiency,core,core,17870,"TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. 26: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. Conditional jump or move depends on uninitialised value(s). in TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:53. 4: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:241. 5: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 6: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 7: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 8: TKey::CheckTObjectHashConsistency() const in /opt/root_src/io/io/inc/TKey.h:116. 9: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 10: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 11: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 12: THashList::AddLast(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:100. 13: TList::Add(TObject*) in /opt/root_src/core/cont/inc/TList.h:81. 14: TDirectoryFile::ReadKeys(bool) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1448. 15: TFile::Init(bool) in /opt/root_src/io/io/src/TFile.cxx:823. 16: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:127. 17: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:17967,energy efficiency,core,core,17967,"MemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. Conditional jump or move depends on uninitialised value(s). in TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:53. 4: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:241. 5: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 6: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 7: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 8: TKey::CheckTObjectHashConsistency() const in /opt/root_src/io/io/inc/TKey.h:116. 9: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 10: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 11: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 12: THashList::AddLast(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:100. 13: TList::Add(TObject*) in /opt/root_src/core/cont/inc/TList.h:81. 14: TDirectoryFile::ReadKeys(bool) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1448. 15: TFile::Init(bool) in /opt/root_src/io/io/src/TFile.cxx:823. 16: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:127. 17: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 18: TCling::RegisterModule(char const*, char const**, char const*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:18125,energy efficiency,core,core,18125," value(s). in TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:53. 4: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:241. 5: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 6: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 7: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 8: TKey::CheckTObjectHashConsistency() const in /opt/root_src/io/io/inc/TKey.h:116. 9: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 10: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 11: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 12: THashList::AddLast(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:100. 13: TList::Add(TObject*) in /opt/root_src/core/cont/inc/TList.h:81. 14: TDirectoryFile::ReadKeys(bool) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1448. 15: TFile::Init(bool) in /opt/root_src/io/io/src/TFile.cxx:823. 16: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:127. 17: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 18: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::all",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:18223,energy efficiency,core,core,18223,"torage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:53. 4: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:241. 5: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 6: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 7: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 8: TKey::CheckTObjectHashConsistency() const in /opt/root_src/io/io/inc/TKey.h:116. 9: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 10: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 11: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 12: THashList::AddLast(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:100. 13: TList::Add(TObject*) in /opt/root_src/core/cont/inc/TList.h:81. 14: TDirectoryFile::ReadKeys(bool) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1448. 15: TFile::Init(bool) in /opt/root_src/io/io/src/TFile.cxx:823. 16: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:127. 17: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 18: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:18301,energy efficiency,core,core,18301,"n /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:53. 4: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:241. 5: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 6: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 7: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 8: TKey::CheckTObjectHashConsistency() const in /opt/root_src/io/io/inc/TKey.h:116. 9: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 10: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 11: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 12: THashList::AddLast(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:100. 13: TList::Add(TObject*) in /opt/root_src/core/cont/inc/TList.h:81. 14: TDirectoryFile::ReadKeys(bool) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1448. 15: TFile::Init(bool) in /opt/root_src/io/io/src/TFile.cxx:823. 16: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:127. 17: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 18: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:18384,energy efficiency,core,core,18384,"c/core/base/inc/TObject.h:260. 3: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:53. 4: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:241. 5: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 6: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 7: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 8: TKey::CheckTObjectHashConsistency() const in /opt/root_src/io/io/inc/TKey.h:116. 9: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 10: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 11: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 12: THashList::AddLast(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:100. 13: TList::Add(TObject*) in /opt/root_src/core/cont/inc/TList.h:81. 14: TDirectoryFile::ReadKeys(bool) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1448. 15: TFile::Init(bool) in /opt/root_src/io/io/src/TFile.cxx:823. 16: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:127. 17: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 18: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 19: TROOT::RegisterModule(char const*, char const**, char const**",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:18459,energy efficiency,core,core,18459,"Consistency::TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:53. 4: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:241. 5: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 6: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 7: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 8: TKey::CheckTObjectHashConsistency() const in /opt/root_src/io/io/inc/TKey.h:116. 9: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 10: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 11: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 12: THashList::AddLast(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:100. 13: TList::Add(TObject*) in /opt/root_src/core/cont/inc/TList.h:81. 14: TDirectoryFile::ReadKeys(bool) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1448. 15: TFile::Init(bool) in /opt/root_src/io/io/src/TFile.cxx:823. 16: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:127. 17: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 18: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 19: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:18762,energy efficiency,Load,LoadPCM,18762,") in /opt/root_src/core/meta/src/TClass.cxx:6205. 6: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 7: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 8: TKey::CheckTObjectHashConsistency() const in /opt/root_src/io/io/inc/TKey.h:116. 9: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 10: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 11: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 12: THashList::AddLast(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:100. 13: TList::Add(TObject*) in /opt/root_src/core/cont/inc/TList.h:81. 14: TDirectoryFile::ReadKeys(bool) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1448. 15: TFile::Init(bool) in /opt/root_src/io/io/src/TFile.cxx:823. 16: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:127. 17: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 18: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 19: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 20: (anonymous namespace)::TriggerDiction",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:18832,energy efficiency,alloc,allocator,18832,"entHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 7: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 8: TKey::CheckTObjectHashConsistency() const in /opt/root_src/io/io/inc/TKey.h:116. 9: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 10: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 11: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 12: THashList::AddLast(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:100. 13: TList::Add(TObject*) in /opt/root_src/core/cont/inc/TList.h:81. 14: TDirectoryFile::ReadKeys(bool) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1448. 15: TFile::Init(bool) in /opt/root_src/io/io/src/TFile.cxx:823. 16: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:127. 17: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 18: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 19: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 20: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:18868,energy efficiency,core,core,18868,"core/meta/inc/TClass.h:502. 7: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 8: TKey::CheckTObjectHashConsistency() const in /opt/root_src/io/io/inc/TKey.h:116. 9: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 10: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 11: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 12: THashList::AddLast(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:100. 13: TList::Add(TObject*) in /opt/root_src/core/cont/inc/TList.h:81. 14: TDirectoryFile::ReadKeys(bool) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1448. 15: TFile::Init(bool) in /opt/root_src/io/io/src/TFile.cxx:823. 16: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:127. 17: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 18: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 19: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 20: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:19094,energy efficiency,alloc,allocator,19094,"edHash() in /opt/root_src/core/base/inc/TObject.h:341. 10: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 11: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 12: THashList::AddLast(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:100. 13: TList::Add(TObject*) in /opt/root_src/core/cont/inc/TList.h:81. 14: TDirectoryFile::ReadKeys(bool) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1448. 15: TFile::Init(bool) in /opt/root_src/io/io/src/TFile.cxx:823. 16: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:127. 17: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 18: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 19: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 20: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 21: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 22: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:19124,energy efficiency,alloc,allocator,19124,"/base/inc/TObject.h:341. 10: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 11: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 12: THashList::AddLast(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:100. 13: TList::Add(TObject*) in /opt/root_src/core/cont/inc/TList.h:81. 14: TDirectoryFile::ReadKeys(bool) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1448. 15: TFile::Init(bool) in /opt/root_src/io/io/src/TFile.cxx:823. 16: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:127. 17: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 18: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 19: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 20: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 21: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 22: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 23: _GLOBAL__s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:19206,energy efficiency,alloc,allocator,19206,"pt/root_src/core/cont/inc/THashTable.h:95. 11: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 12: THashList::AddLast(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:100. 13: TList::Add(TObject*) in /opt/root_src/core/cont/inc/TList.h:81. 14: TDirectoryFile::ReadKeys(bool) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1448. 15: TFile::Init(bool) in /opt/root_src/io/io/src/TFile.cxx:823. 16: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:127. 17: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 18: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 19: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 20: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 21: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 22: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 23: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:19285,energy efficiency,core,core,19285,"/opt/root_src/core/cont/src/THashTable.cxx:96. 12: THashList::AddLast(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:100. 13: TList::Add(TObject*) in /opt/root_src/core/cont/inc/TList.h:81. 14: TDirectoryFile::ReadKeys(bool) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1448. 15: TFile::Init(bool) in /opt/root_src/io/io/src/TFile.cxx:823. 16: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:127. 17: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 18: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 19: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 20: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 21: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 22: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 23: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 24: call_init.part.0 in ./elf/./elf/dl-init.c:70. 25: call_init in ./el",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:19510,energy efficiency,alloc,allocator,19510,"ool) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1448. 15: TFile::Init(bool) in /opt/root_src/io/io/src/TFile.cxx:823. 16: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:127. 17: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 18: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 19: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 20: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 21: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 22: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 23: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 24: call_init.part.0 in ./elf/./elf/dl-init.c:70. 25: call_init in ./elf/./elf/dl-init.c:33. 26: _dl_init in ./elf/./elf/dl-init.c:117. Uninitialised value was created by a stack allocation 1: /home/userf/build/build-root-Desktop-Debug/lib/libCore.so. Conditional jump or move depends on uninitialis",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:19540,energy efficiency,alloc,allocator,19540,"c/TDirectoryFile.cxx:1448. 15: TFile::Init(bool) in /opt/root_src/io/io/src/TFile.cxx:823. 16: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:127. 17: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 18: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 19: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 20: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 21: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 22: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 23: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 24: call_init.part.0 in ./elf/./elf/dl-init.c:70. 25: call_init in ./elf/./elf/dl-init.c:33. 26: _dl_init in ./elf/./elf/dl-init.c:117. Uninitialised value was created by a stack allocation 1: /home/userf/build/build-root-Desktop-Debug/lib/libCore.so. Conditional jump or move depends on uninitialised value(s). in THashList::Del",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:19622,energy efficiency,alloc,allocator,19622,"cxx:823. 16: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:127. 17: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 18: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 19: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 20: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 21: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 22: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 23: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 24: call_init.part.0 in ./elf/./elf/dl-init.c:70. 25: call_init in ./elf/./elf/dl-init.c:33. 26: _dl_init in ./elf/./elf/dl-init.c:117. Uninitialised value was created by a stack allocation 1: /home/userf/build/build-root-Desktop-Debug/lib/libCore.so. Conditional jump or move depends on uninitialised value(s). in THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 1: TStorage::Up",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:19695,energy efficiency,core,core,19695,"const&) in /opt/root_src/io/io/src/TMemFile.cxx:127. 17: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 18: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 19: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 20: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 21: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 22: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 23: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 24: call_init.part.0 in ./elf/./elf/dl-init.c:70. 25: call_init in ./elf/./elf/dl-init.c:33. 26: _dl_init in ./elf/./elf/dl-init.c:117. Uninitialised value was created by a stack allocation 1: /home/userf/build/build-root-Desktop-Debug/lib/libCore.so. Conditional jump or move depends on uninitialised value(s). in THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:20395,energy efficiency,alloc,allocation,20395," char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 20: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 21: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 22: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 23: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 24: call_init.part.0 in ./elf/./elf/dl-init.c:70. 25: call_init in ./elf/./elf/dl-init.c:33. 26: _dl_init in ./elf/./elf/dl-init.c:117. Uninitialised value was created by a stack allocation 1: /home/userf/build/build-root-Desktop-Debug/lib/libCore.so. Conditional jump or move depends on uninitialised value(s). in THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TCollection::TCollection() in /opt/root_src/core/cont/inc/TCollection.h:152. 4: TSeqCollection::TSeqCollection() in /opt/root_src/core/cont/inc/TSeqCollection.h:33. 5: TList::TList() in /opt/root_src/core/cont/inc/TList.h:72. 6: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 7: TDirectoryFile::Close(char const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:592. 8: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:970. 9: TMemFile::~TMemFile() in /opt/root_src/io/io/src/TMemFile.cxx:240. 10: TCling::LoadPCM(std::__cxx11::basic_string<c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:20579,energy efficiency,core,core,20579,"tring<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 20: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 21: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 22: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 23: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 24: call_init.part.0 in ./elf/./elf/dl-init.c:70. 25: call_init in ./elf/./elf/dl-init.c:33. 26: _dl_init in ./elf/./elf/dl-init.c:117. Uninitialised value was created by a stack allocation 1: /home/userf/build/build-root-Desktop-Debug/lib/libCore.so. Conditional jump or move depends on uninitialised value(s). in THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TCollection::TCollection() in /opt/root_src/core/cont/inc/TCollection.h:152. 4: TSeqCollection::TSeqCollection() in /opt/root_src/core/cont/inc/TSeqCollection.h:33. 5: TList::TList() in /opt/root_src/core/cont/inc/TList.h:72. 6: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 7: TDirectoryFile::Close(char const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:592. 8: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:970. 9: TMemFile::~TMemFile() in /opt/root_src/io/io/src/TMemFile.cxx:240. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1865. 11: TCling::RegisterModule(char const*, char const**, char const**, char co",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:20711,energy efficiency,core,core,20711,"T.cxx:2566. 20: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 21: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 22: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 23: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 24: call_init.part.0 in ./elf/./elf/dl-init.c:70. 25: call_init in ./elf/./elf/dl-init.c:33. 26: _dl_init in ./elf/./elf/dl-init.c:117. Uninitialised value was created by a stack allocation 1: /home/userf/build/build-root-Desktop-Debug/lib/libCore.so. Conditional jump or move depends on uninitialised value(s). in THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TCollection::TCollection() in /opt/root_src/core/cont/inc/TCollection.h:152. 4: TSeqCollection::TSeqCollection() in /opt/root_src/core/cont/inc/TSeqCollection.h:33. 5: TList::TList() in /opt/root_src/core/cont/inc/TList.h:72. 6: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 7: TDirectoryFile::Close(char const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:592. 8: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:970. 9: TMemFile::~TMemFile() in /opt/root_src/io/io/src/TMemFile.cxx:240. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1865. 11: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:20780,energy efficiency,core,core,20780,"n_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 21: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 22: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 23: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 24: call_init.part.0 in ./elf/./elf/dl-init.c:70. 25: call_init in ./elf/./elf/dl-init.c:33. 26: _dl_init in ./elf/./elf/dl-init.c:117. Uninitialised value was created by a stack allocation 1: /home/userf/build/build-root-Desktop-Debug/lib/libCore.so. Conditional jump or move depends on uninitialised value(s). in THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TCollection::TCollection() in /opt/root_src/core/cont/inc/TCollection.h:152. 4: TSeqCollection::TSeqCollection() in /opt/root_src/core/cont/inc/TSeqCollection.h:33. 5: TList::TList() in /opt/root_src/core/cont/inc/TList.h:72. 6: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 7: TDirectoryFile::Close(char const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:592. 8: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:970. 9: TMemFile::~TMemFile() in /opt/root_src/io/io/src/TMemFile.cxx:240. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1865. 11: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:20856,energy efficiency,core,core,20856,".cxx:3623. 21: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 22: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 23: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 24: call_init.part.0 in ./elf/./elf/dl-init.c:70. 25: call_init in ./elf/./elf/dl-init.c:33. 26: _dl_init in ./elf/./elf/dl-init.c:117. Uninitialised value was created by a stack allocation 1: /home/userf/build/build-root-Desktop-Debug/lib/libCore.so. Conditional jump or move depends on uninitialised value(s). in THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TCollection::TCollection() in /opt/root_src/core/cont/inc/TCollection.h:152. 4: TSeqCollection::TSeqCollection() in /opt/root_src/core/cont/inc/TSeqCollection.h:33. 5: TList::TList() in /opt/root_src/core/cont/inc/TList.h:72. 6: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 7: TDirectoryFile::Close(char const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:592. 8: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:970. 9: TMemFile::~TMemFile() in /opt/root_src/io/io/src/TMemFile.cxx:240. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1865. 11: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:20942,energy efficiency,core,core,20942,"root-Desktop-Debug/net/net/G__Net.cxx:3631. 22: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 23: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 24: call_init.part.0 in ./elf/./elf/dl-init.c:70. 25: call_init in ./elf/./elf/dl-init.c:33. 26: _dl_init in ./elf/./elf/dl-init.c:117. Uninitialised value was created by a stack allocation 1: /home/userf/build/build-root-Desktop-Debug/lib/libCore.so. Conditional jump or move depends on uninitialised value(s). in THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TCollection::TCollection() in /opt/root_src/core/cont/inc/TCollection.h:152. 4: TSeqCollection::TSeqCollection() in /opt/root_src/core/cont/inc/TSeqCollection.h:33. 5: TList::TList() in /opt/root_src/core/cont/inc/TList.h:72. 6: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 7: TDirectoryFile::Close(char const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:592. 8: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:970. 9: TMemFile::~TMemFile() in /opt/root_src/io/io/src/TMemFile.cxx:240. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1865. 11: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 12: TROOT::RegisterMo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:21012,energy efficiency,core,core,21012,"n_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 23: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 24: call_init.part.0 in ./elf/./elf/dl-init.c:70. 25: call_init in ./elf/./elf/dl-init.c:33. 26: _dl_init in ./elf/./elf/dl-init.c:117. Uninitialised value was created by a stack allocation 1: /home/userf/build/build-root-Desktop-Debug/lib/libCore.so. Conditional jump or move depends on uninitialised value(s). in THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TCollection::TCollection() in /opt/root_src/core/cont/inc/TCollection.h:152. 4: TSeqCollection::TSeqCollection() in /opt/root_src/core/cont/inc/TSeqCollection.h:33. 5: TList::TList() in /opt/root_src/core/cont/inc/TList.h:72. 6: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 7: TDirectoryFile::Close(char const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:592. 8: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:970. 9: TMemFile::~TMemFile() in /opt/root_src/io/io/src/TMemFile.cxx:240. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1865. 11: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:21089,energy efficiency,core,core,21089,"et/net/G__Net.cxx:3633. 23: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 24: call_init.part.0 in ./elf/./elf/dl-init.c:70. 25: call_init in ./elf/./elf/dl-init.c:33. 26: _dl_init in ./elf/./elf/dl-init.c:117. Uninitialised value was created by a stack allocation 1: /home/userf/build/build-root-Desktop-Debug/lib/libCore.so. Conditional jump or move depends on uninitialised value(s). in THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TCollection::TCollection() in /opt/root_src/core/cont/inc/TCollection.h:152. 4: TSeqCollection::TSeqCollection() in /opt/root_src/core/cont/inc/TSeqCollection.h:33. 5: TList::TList() in /opt/root_src/core/cont/inc/TList.h:72. 6: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 7: TDirectoryFile::Close(char const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:592. 8: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:970. 9: TMemFile::~TMemFile() in /opt/root_src/io/io/src/TMemFile.cxx:240. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1865. 11: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:21364,energy efficiency,Load,LoadPCM,21364,"lue was created by a stack allocation 1: /home/userf/build/build-root-Desktop-Debug/lib/libCore.so. Conditional jump or move depends on uninitialised value(s). in THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TCollection::TCollection() in /opt/root_src/core/cont/inc/TCollection.h:152. 4: TSeqCollection::TSeqCollection() in /opt/root_src/core/cont/inc/TSeqCollection.h:33. 5: TList::TList() in /opt/root_src/core/cont/inc/TList.h:72. 6: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 7: TDirectoryFile::Close(char const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:592. 8: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:970. 9: TMemFile::~TMemFile() in /opt/root_src/io/io/src/TMemFile.cxx:240. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1865. 11: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDiction",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:21434,energy efficiency,alloc,allocator,21434,"esktop-Debug/lib/libCore.so. Conditional jump or move depends on uninitialised value(s). in THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TCollection::TCollection() in /opt/root_src/core/cont/inc/TCollection.h:152. 4: TSeqCollection::TSeqCollection() in /opt/root_src/core/cont/inc/TSeqCollection.h:33. 5: TList::TList() in /opt/root_src/core/cont/inc/TList.h:72. 6: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 7: TDirectoryFile::Close(char const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:592. 8: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:970. 9: TMemFile::~TMemFile() in /opt/root_src/io/io/src/TMemFile.cxx:240. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1865. 11: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:21470,energy efficiency,core,core,21470,"itional jump or move depends on uninitialised value(s). in THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TCollection::TCollection() in /opt/root_src/core/cont/inc/TCollection.h:152. 4: TSeqCollection::TSeqCollection() in /opt/root_src/core/cont/inc/TSeqCollection.h:33. 5: TList::TList() in /opt/root_src/core/cont/inc/TList.h:72. 6: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 7: TDirectoryFile::Close(char const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:592. 8: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:970. 9: TMemFile::~TMemFile() in /opt/root_src/io/io/src/TMemFile.cxx:240. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1865. 11: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:21696,energy efficiency,alloc,allocator,21696,"/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TCollection::TCollection() in /opt/root_src/core/cont/inc/TCollection.h:152. 4: TSeqCollection::TSeqCollection() in /opt/root_src/core/cont/inc/TSeqCollection.h:33. 5: TList::TList() in /opt/root_src/core/cont/inc/TList.h:72. 6: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 7: TDirectoryFile::Close(char const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:592. 8: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:970. 9: TMemFile::~TMemFile() in /opt/root_src/io/io/src/TMemFile.cxx:240. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1865. 11: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 14: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:21726,energy efficiency,alloc,allocator,21726,"ge.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TCollection::TCollection() in /opt/root_src/core/cont/inc/TCollection.h:152. 4: TSeqCollection::TSeqCollection() in /opt/root_src/core/cont/inc/TSeqCollection.h:33. 5: TList::TList() in /opt/root_src/core/cont/inc/TList.h:72. 6: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 7: TDirectoryFile::Close(char const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:592. 8: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:970. 9: TMemFile::~TMemFile() in /opt/root_src/io/io/src/TMemFile.cxx:240. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1865. 11: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 14: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:21808,energy efficiency,alloc,allocator,21808,"Collection::TCollection() in /opt/root_src/core/cont/inc/TCollection.h:152. 4: TSeqCollection::TSeqCollection() in /opt/root_src/core/cont/inc/TSeqCollection.h:33. 5: TList::TList() in /opt/root_src/core/cont/inc/TList.h:72. 6: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 7: TDirectoryFile::Close(char const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:592. 8: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:970. 9: TMemFile::~TMemFile() in /opt/root_src/io/io/src/TMemFile.cxx:240. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1865. 11: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 14: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:21887,energy efficiency,core,core,21887,"4: TSeqCollection::TSeqCollection() in /opt/root_src/core/cont/inc/TSeqCollection.h:33. 5: TList::TList() in /opt/root_src/core/cont/inc/TList.h:72. 6: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 7: TDirectoryFile::Close(char const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:592. 8: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:970. 9: TMemFile::~TMemFile() in /opt/root_src/io/io/src/TMemFile.cxx:240. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1865. 11: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 14: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./el",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:22112,energy efficiency,alloc,allocator,22112,"217. 7: TDirectoryFile::Close(char const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:592. 8: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:970. 9: TMemFile::~TMemFile() in /opt/root_src/io/io/src/TMemFile.cxx:240. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1865. 11: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 14: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:22142,energy efficiency,alloc,allocator,22142,"char const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:592. 8: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:970. 9: TMemFile::~TMemFile() in /opt/root_src/io/io/src/TMemFile.cxx:240. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1865. 11: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 14: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./el",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:22224,energy efficiency,alloc,allocator,22224,"ar const*) in /opt/root_src/io/io/src/TFile.cxx:970. 9: TMemFile::~TMemFile() in /opt/root_src/io/io/src/TMemFile.cxx:240. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1865. 11: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 14: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:22297,energy efficiency,core,core,22297,"mFile() in /opt/root_src/io/io/src/TMemFile.cxx:240. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1865. 11: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 14: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:23438,energy efficiency,alloc,allocation,23438,"ug/net/net/G__Net.cxx:3623. 14: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or move depends on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 4: TBufferIO::TBufferIO(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferIO.cxx:51. 5: TBufferFile::TBufferFile(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferFile.cxx:90. 6: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1025. 7: TDirectoryFile::GetObjectChecked(char const*, TClass const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1111. 8: void TDirectory::GetObject<TObjArray>(char const*, TObjArray*&) in /opt/root_src/core/base/i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:23500,energy efficiency,core,core,23500,"Init::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or move depends on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 4: TBufferIO::TBufferIO(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferIO.cxx:51. 5: TBufferFile::TBufferFile(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferFile.cxx:90. 6: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1025. 7: TDirectoryFile::GetObjectChecked(char const*, TClass const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1111. 8: void TDirectory::GetObject<TObjArray>(char const*, TObjArray*&) in /opt/root_src/core/base/inc/TDirectory.h:214. 9: TCling::LoadPCMImpl(TFile&) in /opt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:23651,energy efficiency,core,core,23651,"e/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or move depends on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 4: TBufferIO::TBufferIO(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferIO.cxx:51. 5: TBufferFile::TBufferFile(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferFile.cxx:90. 6: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1025. 7: TDirectoryFile::GetObjectChecked(char const*, TClass const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1111. 8: void TDirectory::GetObject<TObjArray>(char const*, TObjArray*&) in /opt/root_src/core/base/inc/TDirectory.h:214. 9: TCling::LoadPCMImpl(TFile&) in /opt/root_src/core/metacling/src/TCling.cxx:1722. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:23780,energy efficiency,core,core,23780,"ktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or move depends on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 4: TBufferIO::TBufferIO(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferIO.cxx:51. 5: TBufferFile::TBufferFile(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferFile.cxx:90. 6: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1025. 7: TDirectoryFile::GetObjectChecked(char const*, TClass const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1111. 8: void TDirectory::GetObject<TObjArray>(char const*, TObjArray*&) in /opt/root_src/core/base/inc/TDirectory.h:214. 9: TCling::LoadPCMImpl(TFile&) in /opt/root_src/core/metacling/src/TCling.cxx:1722. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1882. 11: TCling::RegisterModule(char const*, char const**, char const**, char const*,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:23849,energy efficiency,core,core,23849,"lf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or move depends on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 4: TBufferIO::TBufferIO(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferIO.cxx:51. 5: TBufferFile::TBufferFile(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferFile.cxx:90. 6: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1025. 7: TDirectoryFile::GetObjectChecked(char const*, TClass const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1111. 8: void TDirectory::GetObject<TObjArray>(char const*, TObjArray*&) in /opt/root_src/core/base/inc/TDirectory.h:214. 9: TCling::LoadPCMImpl(TFile&) in /opt/root_src/core/metacling/src/TCling.cxx:1722. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1882. 11: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:23936,energy efficiency,core,core,23936,"/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or move depends on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 4: TBufferIO::TBufferIO(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferIO.cxx:51. 5: TBufferFile::TBufferFile(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferFile.cxx:90. 6: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1025. 7: TDirectoryFile::GetObjectChecked(char const*, TClass const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1111. 8: void TDirectory::GetObject<TObjArray>(char const*, TObjArray*&) in /opt/root_src/core/base/inc/TDirectory.h:214. 9: TCling::LoadPCMImpl(TFile&) in /opt/root_src/core/metacling/src/TCling.cxx:1722. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1882. 11: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::p",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:24432,energy efficiency,core,core,24432,"ack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or move depends on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 4: TBufferIO::TBufferIO(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferIO.cxx:51. 5: TBufferFile::TBufferFile(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferFile.cxx:90. 6: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1025. 7: TDirectoryFile::GetObjectChecked(char const*, TClass const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1111. 8: void TDirectory::GetObject<TObjArray>(char const*, TObjArray*&) in /opt/root_src/core/base/inc/TDirectory.h:214. 9: TCling::LoadPCMImpl(TFile&) in /opt/root_src/core/metacling/src/TCling.cxx:1722. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1882. 11: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:24475,energy efficiency,Load,LoadPCMImpl,24475,") in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or move depends on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 4: TBufferIO::TBufferIO(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferIO.cxx:51. 5: TBufferFile::TBufferFile(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferFile.cxx:90. 6: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1025. 7: TDirectoryFile::GetObjectChecked(char const*, TClass const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1111. 8: void TDirectory::GetObject<TObjArray>(char const*, TObjArray*&) in /opt/root_src/core/base/inc/TDirectory.h:214. 9: TCling::LoadPCMImpl(TFile&) in /opt/root_src/core/metacling/src/TCling.cxx:1722. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1882. 11: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:24512,energy efficiency,core,core,24512,"THashList.cxx:208. Conditional jump or move depends on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 4: TBufferIO::TBufferIO(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferIO.cxx:51. 5: TBufferFile::TBufferFile(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferFile.cxx:90. 6: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1025. 7: TDirectoryFile::GetObjectChecked(char const*, TClass const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1111. 8: void TDirectory::GetObject<TObjArray>(char const*, TObjArray*&) in /opt/root_src/core/base/inc/TDirectory.h:214. 9: TCling::LoadPCMImpl(TFile&) in /opt/root_src/core/metacling/src/TCling.cxx:1722. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1882. 11: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:24560,energy efficiency,Load,LoadPCM,24560,"s on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 4: TBufferIO::TBufferIO(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferIO.cxx:51. 5: TBufferFile::TBufferFile(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferFile.cxx:90. 6: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1025. 7: TDirectoryFile::GetObjectChecked(char const*, TClass const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1111. 8: void TDirectory::GetObject<TObjArray>(char const*, TObjArray*&) in /opt/root_src/core/base/inc/TDirectory.h:214. 9: TCling::LoadPCMImpl(TFile&) in /opt/root_src/core/metacling/src/TCling.cxx:1722. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1882. 11: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDiction",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:24630,energy efficiency,alloc,allocator,24630,"n /opt/root_src/core/base/src/TBuffer.cxx:73. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 4: TBufferIO::TBufferIO(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferIO.cxx:51. 5: TBufferFile::TBufferFile(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferFile.cxx:90. 6: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1025. 7: TDirectoryFile::GetObjectChecked(char const*, TClass const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1111. 8: void TDirectory::GetObject<TObjArray>(char const*, TObjArray*&) in /opt/root_src/core/base/inc/TDirectory.h:214. 9: TCling::LoadPCMImpl(TFile&) in /opt/root_src/core/metacling/src/TCling.cxx:1722. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1882. 11: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_demoMem_C_ACLiC_dict_Impl() in /tmp//tmp/demoMem_C_AC",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:24666,energy efficiency,core,core,24666,"ffer.cxx:73. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 4: TBufferIO::TBufferIO(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferIO.cxx:51. 5: TBufferFile::TBufferFile(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferFile.cxx:90. 6: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1025. 7: TDirectoryFile::GetObjectChecked(char const*, TClass const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1111. 8: void TDirectory::GetObject<TObjArray>(char const*, TObjArray*&) in /opt/root_src/core/base/inc/TDirectory.h:214. 9: TCling::LoadPCMImpl(TFile&) in /opt/root_src/core/metacling/src/TCling.cxx:1722. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1882. 11: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_demoMem_C_ACLiC_dict_Impl() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:89. 14: (anonymous n",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:24892,energy efficiency,alloc,allocator,24892,"(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 4: TBufferIO::TBufferIO(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferIO.cxx:51. 5: TBufferFile::TBufferFile(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferFile.cxx:90. 6: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1025. 7: TDirectoryFile::GetObjectChecked(char const*, TClass const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1111. 8: void TDirectory::GetObject<TObjArray>(char const*, TObjArray*&) in /opt/root_src/core/base/inc/TDirectory.h:214. 9: TCling::LoadPCMImpl(TFile&) in /opt/root_src/core/metacling/src/TCling.cxx:1722. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1882. 11: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_demoMem_C_ACLiC_dict_Impl() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:89. 14: (anonymous namespace)::DictInit::DictInit() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:97. 15: __static_initialization_and_destruction_0(int, int) in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:99. 16: _GLOBAL__sub_I_demoMem_C_ACLiC_dict.cxx in /tmp//tmp/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:24922,energy efficiency,alloc,allocator,24922,"root_src/core/base/src/TBuffer.cxx:73. 4: TBufferIO::TBufferIO(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferIO.cxx:51. 5: TBufferFile::TBufferFile(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferFile.cxx:90. 6: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1025. 7: TDirectoryFile::GetObjectChecked(char const*, TClass const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1111. 8: void TDirectory::GetObject<TObjArray>(char const*, TObjArray*&) in /opt/root_src/core/base/inc/TDirectory.h:214. 9: TCling::LoadPCMImpl(TFile&) in /opt/root_src/core/metacling/src/TCling.cxx:1722. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1882. 11: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_demoMem_C_ACLiC_dict_Impl() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:89. 14: (anonymous namespace)::DictInit::DictInit() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:97. 15: __static_initialization_and_destruction_0(int, int) in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:99. 16: _GLOBAL__sub_I_demoMem_C_ACLiC_dict.cxx in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:103. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:25004,energy efficiency,alloc,allocator,25004,") in /opt/root_src/io/io/src/TBufferIO.cxx:51. 5: TBufferFile::TBufferFile(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferFile.cxx:90. 6: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1025. 7: TDirectoryFile::GetObjectChecked(char const*, TClass const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1111. 8: void TDirectory::GetObject<TObjArray>(char const*, TObjArray*&) in /opt/root_src/core/base/inc/TDirectory.h:214. 9: TCling::LoadPCMImpl(TFile&) in /opt/root_src/core/metacling/src/TCling.cxx:1722. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1882. 11: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_demoMem_C_ACLiC_dict_Impl() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:89. 14: (anonymous namespace)::DictInit::DictInit() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:97. 15: __static_initialization_and_destruction_0(int, int) in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:99. 16: _GLOBAL__sub_I_demoMem_C_ACLiC_dict.cxx in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:103. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:25083,energy efficiency,core,core,25083,"Buffer::EMode, int) in /opt/root_src/io/io/src/TBufferFile.cxx:90. 6: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1025. 7: TDirectoryFile::GetObjectChecked(char const*, TClass const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1111. 8: void TDirectory::GetObject<TObjArray>(char const*, TObjArray*&) in /opt/root_src/core/base/inc/TDirectory.h:214. 9: TCling::LoadPCMImpl(TFile&) in /opt/root_src/core/metacling/src/TCling.cxx:1722. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1882. 11: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_demoMem_C_ACLiC_dict_Impl() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:89. 14: (anonymous namespace)::DictInit::DictInit() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:97. 15: __static_initialization_and_destruction_0(int, int) in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:99. 16: _GLOBAL__sub_I_demoMem_C_ACLiC_dict.cxx in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:103. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exceptio",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:25308,energy efficiency,alloc,allocator,25308,"io/io/src/TDirectoryFile.cxx:1111. 8: void TDirectory::GetObject<TObjArray>(char const*, TObjArray*&) in /opt/root_src/core/base/inc/TDirectory.h:214. 9: TCling::LoadPCMImpl(TFile&) in /opt/root_src/core/metacling/src/TCling.cxx:1722. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1882. 11: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_demoMem_C_ACLiC_dict_Impl() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:89. 14: (anonymous namespace)::DictInit::DictInit() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:97. 15: __static_initialization_and_destruction_0(int, int) in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:99. 16: _GLOBAL__sub_I_demoMem_C_ACLiC_dict.cxx in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:103. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:25338,energy efficiency,alloc,allocator,25338,"111. 8: void TDirectory::GetObject<TObjArray>(char const*, TObjArray*&) in /opt/root_src/core/base/inc/TDirectory.h:214. 9: TCling::LoadPCMImpl(TFile&) in /opt/root_src/core/metacling/src/TCling.cxx:1722. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1882. 11: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_demoMem_C_ACLiC_dict_Impl() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:89. 14: (anonymous namespace)::DictInit::DictInit() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:97. 15: __static_initialization_and_destruction_0(int, int) in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:99. 16: _GLOBAL__sub_I_demoMem_C_ACLiC_dict.cxx in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:103. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:25420,energy efficiency,alloc,allocator,25420,"ot_src/core/base/inc/TDirectory.h:214. 9: TCling::LoadPCMImpl(TFile&) in /opt/root_src/core/metacling/src/TCling.cxx:1722. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1882. 11: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_demoMem_C_ACLiC_dict_Impl() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:89. 14: (anonymous namespace)::DictInit::DictInit() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:97. 15: __static_initialization_and_destruction_0(int, int) in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:99. 16: _GLOBAL__sub_I_demoMem_C_ACLiC_dict.cxx in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:103. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-err",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:25493,energy efficiency,core,core,25493,"in /opt/root_src/core/metacling/src/TCling.cxx:1722. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1882. 11: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_demoMem_C_ACLiC_dict_Impl() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:89. 14: (anonymous namespace)::DictInit::DictInit() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:97. 15: __static_initialization_and_destruction_0(int, int) in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:99. 16: _GLOBAL__sub_I_demoMem_C_ACLiC_dict.cxx in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:103. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleto",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:26547,energy efficiency,alloc,allocation,26547,"iggerDictionaryInitialization_demoMem_C_ACLiC_dict_Impl() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:89. 14: (anonymous namespace)::DictInit::DictInit() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:97. 15: __static_initialization_and_destruction_0(int, int) in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:99. 16: _GLOBAL__sub_I_demoMem_C_ACLiC_dict.cxx in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:103. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1024. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:152. 5: TArchiveFile::Open(char const*, TFile*) in /opt/root_src/io/io/src/TArchiveFile.cxx:131. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:397. 7: TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFile.cxx:173. 8: TMemFile::TMemFile(char const*, char const*, cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:26748,energy efficiency,core,core,26748,"atic_initialization_and_destruction_0(int, int) in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:99. 16: _GLOBAL__sub_I_demoMem_C_ACLiC_dict.cxx in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:103. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1024. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:152. 5: TArchiveFile::Open(char const*, TFile*) in /opt/root_src/io/io/src/TArchiveFile.cxx:131. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:397. 7: TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFile.cxx:173. 8: TMemFile::TMemFile(char const*, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFile.cxx:163. 9: std::_MakeUniq<TMemFile>::__single_object std::make_unique<TMemFile, char const (&) [9], char const (&) [9]>(char const (&) ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:26874,energy efficiency,core,core,26874,"ict.cxx in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:103. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1024. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:152. 5: TArchiveFile::Open(char const*, TFile*) in /opt/root_src/io/io/src/TArchiveFile.cxx:131. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:397. 7: TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFile.cxx:173. 8: TMemFile::TMemFile(char const*, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFile.cxx:163. 9: std::_MakeUniq<TMemFile>::__single_object std::make_unique<TMemFile, char const (&) [9], char const (&) [9]>(char const (&) [9], char const (&) [9]) in /usr/include/c++/11/bits/unique_ptr.h:962. 10: void run<std::vector<unsigned char, std::allocator<",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:26943,energy efficiency,core,core,26943,".0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1024. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:152. 5: TArchiveFile::Open(char const*, TFile*) in /opt/root_src/io/io/src/TArchiveFile.cxx:131. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:397. 7: TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFile.cxx:173. 8: TMemFile::TMemFile(char const*, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFile.cxx:163. 9: std::_MakeUniq<TMemFile>::__single_object std::make_unique<TMemFile, char const (&) [9], char const (&) [9]>(char const (&) [9], char const (&) [9]) in /usr/include/c++/11/bits/unique_ptr.h:962. 10: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:27022,energy efficiency,core,core,27022,"_dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1024. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:152. 5: TArchiveFile::Open(char const*, TFile*) in /opt/root_src/io/io/src/TArchiveFile.cxx:131. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:397. 7: TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFile.cxx:173. 8: TMemFile::TMemFile(char const*, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFile.cxx:163. 9: std::_MakeUniq<TMemFile>::__single_object std::make_unique<TMemFile, char const (&) [9], char const (&) [9]>(char const (&) [9], char const (&) [9]) in /usr/include/c++/11/bits/unique_ptr.h:962. 10: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:46. 11: demoMem(bool, unsigned lo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:27866,energy efficiency,alloc,allocator,27866,"rc/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:152. 5: TArchiveFile::Open(char const*, TFile*) in /opt/root_src/io/io/src/TArchiveFile.cxx:131. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:397. 7: TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFile.cxx:173. 8: TMemFile::TMemFile(char const*, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFile.cxx:163. 9: std::_MakeUniq<TMemFile>::__single_object std::make_unique<TMemFile, char const (&) [9], char const (&) [9]>(char const (&) [9], char const (&) [9]) in /usr/include/c++/11/bits/unique_ptr.h:962. 10: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:46. 11: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 12: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 13: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 14: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::MetaProcessor::pro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:27927,energy efficiency,alloc,allocator,27927,"t/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:152. 5: TArchiveFile::Open(char const*, TFile*) in /opt/root_src/io/io/src/TArchiveFile.cxx:131. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:397. 7: TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFile.cxx:173. 8: TMemFile::TMemFile(char const*, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFile.cxx:163. 9: std::_MakeUniq<TMemFile>::__single_object std::make_unique<TMemFile, char const (&) [9], char const (&) [9]>(char const (&) [9], char const (&) [9]) in /usr/include/c++/11/bits/unique_ptr.h:962. 10: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:46. 11: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 12: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 13: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 14: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:28448,energy efficiency,alloc,allocator,28448,"g) in /opt/root_src/io/io/src/TMemFile.cxx:173. 8: TMemFile::TMemFile(char const*, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFile.cxx:163. 9: std::_MakeUniq<TMemFile>::__single_object std::make_unique<TMemFile, char const (&) [9], char const (&) [9]>(char const (&) [9], char const (&) [9]) in /usr/include/c++/11/bits/unique_ptr.h:962. 10: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:46. 11: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 12: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 13: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 14: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 18: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 19: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 20: TApplication::Exec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:28710,energy efficiency,alloc,allocator,28710,"char const (&) [9]>(char const (&) [9], char const (&) [9]) in /usr/include/c++/11/bits/unique_ptr.h:962. 10: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:46. 11: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 12: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 13: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 14: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 18: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 19: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 20: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 21: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 22: TApplication::ProcessLine(char const*, bool, int*) in /opt/roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:29156,energy efficiency,core,core,29156,"ld/build-root-Desktop-Debug/lib/libCling.so. 13: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 14: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 18: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 19: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 20: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 21: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 22: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 23: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 24: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 25: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:151. Condition",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:29273,energy efficiency,core,core,29273,"alue*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 14: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 18: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 19: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 20: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 21: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 22: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 23: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 24: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 25: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:151. Conditional jump or move depends on uninitialised value(s). in TKey::TKey(TObject const*, char const*, int, TDirectory*) in /o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:29395,energy efficiency,core,core,29395,"1::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 18: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 19: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 20: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 21: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 22: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 23: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 24: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 25: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:151. Conditional jump or move depends on uninitialised value(s). in TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:29503,energy efficiency,core,core,29503,"g::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 18: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 19: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 20: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 21: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 22: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 23: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 24: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 25: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:151. Conditional jump or move depends on uninitialised value(s). in TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:26",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:29612,energy efficiency,core,core,29612,". 15: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 18: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 19: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 20: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 21: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 22: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 23: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 24: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 25: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:151. Conditional jump or move depends on uninitialised value(s). in TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed(char const*, char const*) in /opt/root_src/core/base/inc/TNamed.h:37. 4: TKey::TKey(TObj",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:29721,energy efficiency,core,core,29721,"r> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 18: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 19: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 20: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 21: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 22: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 23: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 24: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 25: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:151. Conditional jump or move depends on uninitialised value(s). in TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed(char const*, char const*) in /opt/root_src/core/base/inc/TNamed.h:37. 4: TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 5: TFile::WriteStreamerIn",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:29832,energy efficiency,core,core,29832,"ing.so. 16: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 18: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 19: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 20: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 21: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 22: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 23: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 24: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 25: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:151. Conditional jump or move depends on uninitialised value(s). in TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed(char const*, char const*) in /opt/root_src/core/base/inc/TNamed.h:37. 4: TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 5: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3837. 6: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:29899,energy efficiency,core,core,29899,"nterpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 18: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 19: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 20: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 21: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 22: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 23: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 24: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 25: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:151. Conditional jump or move depends on uninitialised value(s). in TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed(char const*, char const*) in /opt/root_src/core/base/inc/TNamed.h:37. 4: TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 5: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3837. 6: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:952. 7: void run<std::vector<unsigned char, std::allocator<unsig",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:30020,energy efficiency,alloc,allocation,30020,"leInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 18: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 19: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 20: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 21: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 22: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 23: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 24: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 25: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:151. Conditional jump or move depends on uninitialised value(s). in TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed(char const*, char const*) in /opt/root_src/core/base/inc/TNamed.h:37. 4: TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 5: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3837. 6: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:952. 7: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:48. 8: demoMem",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:30410,energy efficiency,core,core,30410,"c/TCling.cxx:3545. 20: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 21: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 22: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 23: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 24: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 25: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:151. Conditional jump or move depends on uninitialised value(s). in TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed(char const*, char const*) in /opt/root_src/core/base/inc/TNamed.h:37. 4: TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 5: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3837. 6: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:952. 7: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:48. 8: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 9: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 10: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 11: cling::Interpreter::EvaluateInternal(std::__c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:30479,energy efficiency,core,core,30479,"ool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 21: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 22: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 23: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 24: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 25: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:151. Conditional jump or move depends on uninitialised value(s). in TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed(char const*, char const*) in /opt/root_src/core/base/inc/TNamed.h:37. 4: TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 5: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3837. 6: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:952. 7: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:48. 8: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 9: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 10: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 11: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:30569,energy efficiency,core,core,30569,"har const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 22: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 23: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 24: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 25: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:151. Conditional jump or move depends on uninitialised value(s). in TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed(char const*, char const*) in /opt/root_src/core/base/inc/TNamed.h:37. 4: TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 5: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3837. 6: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:952. 7: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:48. 8: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 9: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 10: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 11: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:30886,energy efficiency,alloc,allocator,30886,"oot_src/core/rint/src/TRint.cxx:461. 25: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:151. Conditional jump or move depends on uninitialised value(s). in TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed(char const*, char const*) in /opt/root_src/core/base/inc/TNamed.h:37. 4: TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 5: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3837. 6: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:952. 7: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:48. 8: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 9: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 10: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 11: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 12: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 13: cling::MetaProcessor::proce",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:30947,energy efficiency,alloc,allocator,30947,"c/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:151. Conditional jump or move depends on uninitialised value(s). in TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed(char const*, char const*) in /opt/root_src/core/base/inc/TNamed.h:37. 4: TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 5: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3837. 6: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:952. 7: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:48. 8: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 9: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 10: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 11: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 12: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 13: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:31466,energy efficiency,alloc,allocator,31466,"oot_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed(char const*, char const*) in /opt/root_src/core/base/inc/TNamed.h:37. 4: TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 5: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3837. 6: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:952. 7: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:48. 8: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 9: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 10: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 11: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 12: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 13: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 14: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 15: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 16: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 17: TApplication::Exec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:31728,energy efficiency,alloc,allocator,31728,"pt/root_src/io/io/src/TFile.cxx:3837. 6: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:952. 7: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:48. 8: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 9: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 10: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 11: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 12: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 13: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 14: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 15: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 16: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 17: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 18: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 19: TApplication::ProcessLine(char const*, bool, int*) in /opt/roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:32174,energy efficiency,core,core,32174,"ld/build-root-Desktop-Debug/lib/libCling.so. 10: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 11: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 12: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 13: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 14: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 15: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 16: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 17: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 18: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 19: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 20: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 21: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 22: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3775. 96 bytes in 1 blocks are possibly lost in loss record ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:32291,energy efficiency,core,core,32291,"alue*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 11: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 12: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 13: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 14: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 15: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 16: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 17: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 18: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 19: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 20: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 21: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 22: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3775. 96 bytes in 1 blocks are possibly lost in loss record 4,046 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metaclin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:32413,energy efficiency,core,core,32413,"1::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 12: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 13: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 14: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 15: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 16: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 17: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 18: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 19: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 20: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 21: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 22: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3775. 96 bytes in 1 blocks are possibly lost in loss record 4,046 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:32521,energy efficiency,core,core,32521,"g::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 12: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 13: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 14: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 15: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 16: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 17: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 18: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 19: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 20: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 21: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 22: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3775. 96 bytes in 1 blocks are possibly lost in loss record 4,046 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHCont",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:32630,energy efficiency,core,core,32630,". 12: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 13: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 14: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 15: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 16: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 17: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 18: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 19: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 20: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 21: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 22: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3775. 96 bytes in 1 blocks are possibly lost in loss record 4,046 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::Dis",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:32739,energy efficiency,core,core,32739,"r> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 13: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 14: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 15: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 16: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 17: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 18: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 19: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 20: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 21: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 22: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3775. 96 bytes in 1 blocks are possibly lost in loss record 4,046 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:32850,energy efficiency,core,core,32850,"ing.so. 13: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 14: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 15: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 16: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 17: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 18: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 19: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 20: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 21: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 22: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3775. 96 bytes in 1 blocks are possibly lost in loss record 4,046 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::creat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:32917,energy efficiency,core,core,32917,"nterpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 14: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 15: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 16: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 17: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 18: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 19: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 20: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 21: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 22: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3775. 96 bytes in 1 blocks are possibly lost in loss record 4,046 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Deskto",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:33038,energy efficiency,alloc,allocation,33038,"leInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 15: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 16: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 17: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 18: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 19: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 20: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 21: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 22: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3775. 96 bytes in 1 blocks are possibly lost in loss record 4,046 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_pt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:33280,energy efficiency,core,core,33280,"root_src/core/metacling/src/TCling.cxx:2555. 16: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 17: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 18: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 19: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 20: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 21: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 22: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3775. 96 bytes in 1 blocks are possibly lost in loss record 4,046 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:34079,energy efficiency,alloc,allocator,34079,"pt/root_src/io/io/src/TFile.cxx:3775. 96 bytes in 1 blocks are possibly lost in loss record 4,046 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:34383,energy efficiency,alloc,allocator,34383,"ck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:34735,energy efficiency,alloc,allocator,34735,"llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 96 bytes in 1 blo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:34908,energy efficiency,alloc,allocator,34908,"Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 96 bytes in 1 blocks are possibly lost in loss record 4,047 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:15",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:35110,energy efficiency,core,core,35110,"ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 96 bytes in 1 blocks are possibly lost in loss record 4,047 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, cl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:35184,energy efficiency,core,core,35184,"n /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 96 bytes in 1 blocks are possibly lost in loss record 4,047 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::Modu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:35264,energy efficiency,core,core,35264,"ter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 96 bytes in 1 blocks are possibly lost in loss record 4,047 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:35342,energy efficiency,core,core,35342,"_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 96 bytes in 1 blocks are possibly lost in loss record 4,047 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llv",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:35408,energy efficiency,core,core,35408,"lang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 96 bytes in 1 blocks are possibly lost in loss record 4,047 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/lib",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:35524,energy efficiency,core,core,35524,"erpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 96 bytes in 1 blocks are possibly lost in loss record 4,047 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:35645,energy efficiency,core,core,35645,", char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 96 bytes in 1 blocks are possibly lost in loss record 4,047 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:35881,energy efficiency,core,core,35881,"duleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 96 bytes in 1 blocks are possibly lost in loss record 4,047 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:36680,energy efficiency,alloc,allocator,36680," /opt/root_src/main/src/rmain.cxx:81. 96 bytes in 1 blocks are possibly lost in loss record 4,047 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:36984,energy efficiency,alloc,allocator,36984,"ck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:37336,energy efficiency,alloc,allocator,37336,"llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 112 bytes in 1 bl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:37509,energy efficiency,alloc,allocator,37509,"Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 112 bytes in 1 blocks are definitely lost in loss record 4,249 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:37711,energy efficiency,core,core,37711,"ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 112 bytes in 1 blocks are definitely lost in loss record 4,249 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:37785,energy efficiency,core,core,37785,"n /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 112 bytes in 1 blocks are definitely lost in loss record 4,249 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:37865,energy efficiency,core,core,37865,"ter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 112 bytes in 1 blocks are definitely lost in loss record 4,249 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalC",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:37943,energy efficiency,core,core,37943,"_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 112 bytes in 1 blocks are definitely lost in loss record 4,249 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:38009,energy efficiency,core,core,38009,"lang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 112 bytes in 1 blocks are definitely lost in loss record 4,249 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:38125,energy efficiency,core,core,38125,"erpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 112 bytes in 1 blocks are definitely lost in loss record 4,249 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/use",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:38246,energy efficiency,core,core,38246,", char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 112 bytes in 1 blocks are definitely lost in loss record 4,249 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:38480,energy efficiency,core,core,38480,"ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 112 bytes in 1 blocks are definitely lost in loss record 4,249 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:39442,energy efficiency,core,core,39442,"ng::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 12: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:39538,energy efficiency,core,core,39538,"c/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 12: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 13: void run<std::vector<unsigned char, std::all",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:39635,energy efficiency,core,core,39635,"aquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 12: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 13: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:39793,energy efficiency,alloc,allocator,39793,"-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 12: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 13: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 14: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 15: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::V",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:39884,energy efficiency,alloc,allocator,39884,"::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 12: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 13: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 14: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 15: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Inte",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:39981,energy efficiency,alloc,allocator,39981,"o**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 12: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 13: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 14: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 15: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-D",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:40007,energy efficiency,alloc,allocator,40007,"userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 12: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 13: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 14: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 15: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:40079,energy efficiency,alloc,allocator,40079,"TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 12: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 13: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 14: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 15: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:40126,energy efficiency,core,core,40126,"f/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 12: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 13: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 14: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 15: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:40219,energy efficiency,core,core,40219,"ingRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 12: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 13: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 14: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 15: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned lon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:40322,energy efficiency,core,core,40322,"oot-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 12: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 13: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 14: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 15: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::process(std::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:40461,energy efficiency,core,core,40461,"ling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 12: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 13: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 14: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 15: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/user",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:40537,energy efficiency,alloc,allocator,40537,"/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 12: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 13: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 14: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 15: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::MetaProcessor::pro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:40598,energy efficiency,alloc,allocator,40598,"l(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 12: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 13: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 14: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 15: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:41119,energy efficiency,alloc,allocator,41119,"c/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 12: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 13: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 14: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 15: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 21: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 22: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 23: TApplication::Exec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:41381,energy efficiency,alloc,allocator,41381,"pe_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 13: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 14: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 15: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 21: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 22: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 23: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 24: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 25: TApplication::ProcessLine(char const*, bool, int*) in /opt/roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:41827,energy efficiency,core,core,41827,"ld/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 21: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 22: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 23: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 24: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 25: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 112 bytes in 1 blocks are definitely lost in loss record 4,250 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScope",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:41944,energy efficiency,core,core,41944,"alue*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 21: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 22: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 23: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 24: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 25: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 112 bytes in 1 blocks are definitely lost in loss record 4,250 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/li",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:42066,energy efficiency,core,core,42066,"1::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 21: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 22: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 23: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 24: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 25: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 112 bytes in 1 blocks are definitely lost in loss record 4,250 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:42174,energy efficiency,core,core,42174,"g::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 21: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 22: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 23: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 24: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 25: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 112 bytes in 1 blocks are definitely lost in loss record 4,250 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:42283,energy efficiency,core,core,42283,". 18: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 21: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 22: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 23: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 24: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 25: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 112 bytes in 1 blocks are definitely lost in loss record 4,250 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/li",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:42392,energy efficiency,core,core,42392,"r> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 21: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 22: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 23: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 24: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 25: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 112 bytes in 1 blocks are definitely lost in loss record 4,250 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Ty",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:42595,energy efficiency,core,core,42595,"sult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 21: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 22: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 23: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 24: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 25: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 112 bytes in 1 blocks are definitely lost in loss record 4,250 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TCli",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:43574,energy efficiency,core,core,43574,") in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::ClassInfo_Factory(char const*) const in /opt/root_src/core/metacling/src/TCling.cxx:8175. 8: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6191. 9: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 10: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 11: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 12: void run<std::vector<unsigned char",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:43682,energy efficiency,core,core,43682,"emcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::ClassInfo_Factory(char const*) const in /opt/root_src/core/metacling/src/TCling.cxx:8175. 8: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6191. 9: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 10: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 11: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 12: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:43840,energy efficiency,alloc,allocator,43840,"urceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::ClassInfo_Factory(char const*) const in /opt/root_src/core/metacling/src/TCling.cxx:8175. 8: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6191. 9: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 10: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 11: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 12: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 13: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 14: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Va",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:43931,energy efficiency,alloc,allocator,43931,"bug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::ClassInfo_Factory(char const*) const in /opt/root_src/core/metacling/src/TCling.cxx:8175. 8: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6191. 9: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 10: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 11: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 12: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 13: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 14: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Inter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:44028,energy efficiency,alloc,allocator,44028,"::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::ClassInfo_Factory(char const*) const in /opt/root_src/core/metacling/src/TCling.cxx:8175. 8: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6191. 9: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 10: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 11: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 12: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 13: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 14: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-De",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:44054,energy efficiency,alloc,allocator,44054,"e>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::ClassInfo_Factory(char const*) const in /opt/root_src/core/metacling/src/TCling.cxx:8175. 8: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6191. 9: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 10: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 11: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 12: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 13: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 14: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:44126,energy efficiency,alloc,allocator,44126,"me/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::ClassInfo_Factory(char const*) const in /opt/root_src/core/metacling/src/TCling.cxx:8175. 8: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6191. 9: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 10: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 11: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 12: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 13: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 14: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:44173,energy efficiency,core,core,44173,"libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::ClassInfo_Factory(char const*) const in /opt/root_src/core/metacling/src/TCling.cxx:8175. 8: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6191. 9: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 10: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 11: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 12: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 13: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 14: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:44265,energy efficiency,core,core,44265,"t-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::ClassInfo_Factory(char const*) const in /opt/root_src/core/metacling/src/TCling.cxx:8175. 8: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6191. 9: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 10: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 11: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 12: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 13: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 14: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned lon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:44368,energy efficiency,core,core,44368,"::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::ClassInfo_Factory(char const*) const in /opt/root_src/core/metacling/src/TCling.cxx:8175. 8: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6191. 9: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 10: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 11: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 12: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 13: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 14: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::process(std::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:44507,energy efficiency,core,core,44507,"assInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::ClassInfo_Factory(char const*) const in /opt/root_src/core/metacling/src/TCling.cxx:8175. 8: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6191. 9: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 10: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 11: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 12: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 13: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 14: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/user",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:44583,energy efficiency,alloc,allocator,44583,"/src/TClingClassInfo.cxx:87. 7: TCling::ClassInfo_Factory(char const*) const in /opt/root_src/core/metacling/src/TCling.cxx:8175. 8: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6191. 9: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 10: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 11: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 12: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 13: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 14: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::MetaProcessor::pro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:44644,energy efficiency,alloc,allocator,44644,"r const*) const in /opt/root_src/core/metacling/src/TCling.cxx:8175. 8: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6191. 9: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 10: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 11: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 12: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 13: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 14: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:45165,energy efficiency,alloc,allocator,45165,"rc/core/metacling/src/TCling.cxx:6191. 9: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 10: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 11: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 12: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 13: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 14: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 20: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 21: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 22: TApplication::Exec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:45427,energy efficiency,alloc,allocator,45427,"pe_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 12: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 13: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 14: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 20: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 21: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 22: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 23: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 24: TApplication::ProcessLine(char const*, bool, int*) in /opt/roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:45873,energy efficiency,core,core,45873,"ld/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 20: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 21: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 22: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 23: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 24: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 25: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 112 bytes in 1 blocks are definitely lost in loss record 4,251 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::O",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:45990,energy efficiency,core,core,45990,"alue*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 20: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 21: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 22: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 23: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 24: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 25: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 112 bytes in 1 blocks are definitely lost in loss record 4,251 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::Unqualifi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:46112,energy efficiency,core,core,46112,"1::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 20: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 21: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 22: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 23: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 24: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 25: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 112 bytes in 1 blocks are definitely lost in loss record 4,251 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeS",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:46220,energy efficiency,core,core,46220,"g::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 20: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 21: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 22: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 23: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 24: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 25: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 112 bytes in 1 blocks are definitely lost in loss record 4,251 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::Identifier",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:46329,energy efficiency,core,core,46329,". 17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 20: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 21: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 22: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 23: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 24: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 25: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 112 bytes in 1 blocks are definitely lost in loss record 4,251 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnot",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:46438,energy efficiency,core,core,46438,"r> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 20: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 21: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 22: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 23: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 24: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 25: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 112 bytes in 1 blocks are definitely lost in loss record 4,251 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:46549,energy efficiency,core,core,46549,"ing.so. 18: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 20: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 21: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 22: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 23: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 24: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 25: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 112 bytes in 1 blocks are definitely lost in loss record 4,251 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:46719,energy efficiency,core,core,46719,"libCling.so. 19: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 20: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 21: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 22: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 23: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 24: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 25: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 112 bytes in 1 blocks are definitely lost in loss record 4,251 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:47666,energy efficiency,core,core,47666,"lassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEunsignedsPchargR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:47853,energy efficiency,core,core,47853,"lateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEunsignedsPchargR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:274. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: TClass::GetClass(std::type_info const&,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:48023,energy efficiency,core,core,48023,"/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEunsignedsPchargR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:274. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 15: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:48190,energy efficiency,core,core,48190,"bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEunsignedsPchargR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:274. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 15: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 17: cling::I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:48504,energy efficiency,core,core,48504,"g::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEunsignedsPchargR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:274. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 15: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInte",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:48639,energy efficiency,core,core,48639,", bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEunsignedsPchargR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:274. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 15: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:48781,energy efficiency,core,core,48781,"r const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEunsignedsPchargR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:274. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 15: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:48915,energy efficiency,core,core,48915,"ort, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEunsignedsPchargR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:274. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 15: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/user",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:48991,energy efficiency,alloc,allocator,48991,"nt, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEunsignedsPchargR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:274. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 15: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::pro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:49052,energy efficiency,alloc,allocator,49052,"ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEunsignedsPchargR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:274. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 15: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:49573,energy efficiency,alloc,allocator,49573,"R_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:274. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 15: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::Exec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:49835,energy efficiency,alloc,allocator,49835,"pe_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 15: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,252 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/meta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:50281,energy efficiency,core,core,50281,"ld/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,252 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<cl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:50398,energy efficiency,core,core,50398,"alue*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,252 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:50520,energy efficiency,core,core,50520,"1::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,252 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:50628,energy efficiency,core,core,50628,"g::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,252 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Ty",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:50831,energy efficiency,core,core,50831,"::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,252 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TCli",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:51810,energy efficiency,core,core,51810,") in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEunsig",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:51909,energy efficiency,core,core,51909,"preload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEunsignedsPchargR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDic",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:52096,energy efficiency,core,core,52096,"ng::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEunsignedsPchargR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:274. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: TClass::GetClass(std::type_info const&",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:52266,energy efficiency,core,core,52266,"g::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEunsignedsPchargR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:274. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 16: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:52434,energy efficiency,core,core,52434,"rser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEunsignedsPchargR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:274. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 16: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 17: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 18: cling::I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:52748,energy efficiency,core,core,52748,"fo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEunsignedsPchargR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:274. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 16: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 17: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 18: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::EvaluateInte",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:52883,energy efficiency,core,core,52883," bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEunsignedsPchargR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:274. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 16: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 17: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 18: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:53025,energy efficiency,core,core,53025," const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEunsignedsPchargR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:274. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 16: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 17: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 18: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::Interpreter::process(std::__cxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:53159,energy efficiency,core,core,53159,"rt, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEunsignedsPchargR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:274. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 16: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 17: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 18: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/user",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:53235,energy efficiency,alloc,allocator,53235,"t, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEunsignedsPchargR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:274. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 16: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 17: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 18: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: cling::MetaProcessor::pro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:53296,energy efficiency,alloc,allocator,53296,"ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEunsignedsPchargR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:274. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 16: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 17: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 18: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:53817,energy efficiency,alloc,allocator,53817,"R_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:274. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 16: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 17: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 18: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 23: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 24: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 25: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 112 bytes in 1 blocks ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:54079,energy efficiency,alloc,allocator,54079,"pe_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 16: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 17: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 18: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 23: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 24: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 25: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 112 bytes in 1 blocks are definitely lost in loss record 4,253 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:54525,energy efficiency,core,core,54525,"ld/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 23: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 24: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 25: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 112 bytes in 1 blocks are definitely lost in loss record 4,253 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:54642,energy efficiency,core,core,54642,"alue*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 23: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 24: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 25: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 112 bytes in 1 blocks are definitely lost in loss record 4,253 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:54764,energy efficiency,core,core,54764,"1::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 23: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 24: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 25: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 112 bytes in 1 blocks are definitely lost in loss record 4,253 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:54941,energy efficiency,core,core,54941,"build-root-Desktop-Debug/lib/libCling.so. 21: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 23: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 24: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 25: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 112 bytes in 1 blocks are definitely lost in loss record 4,253 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:55888,energy efficiency,core,core,55888,"lassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:56075,energy efficiency,core,core,56075,"lateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<float, std::allocator<float",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:56245,energy efficiency,core,core,56245,"/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 16: cling::Increment",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:56412,energy efficiency,core,core,56412,"bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(cla",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:56726,energy efficiency,core,core,56726,"g::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:56852,energy efficiency,core,core,56852,"st*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:56994,energy efficiency,core,core,56994,"oxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:57062,energy efficiency,alloc,allocator,57062,"oot_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:57107,energy efficiency,alloc,allocator,57107,"ass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:57620,energy efficiency,alloc,allocator,57620,"ld-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 23: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::Exec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:57882,energy efficiency,alloc,allocator,57882,"69. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 23: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,254 of ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:58328,energy efficiency,core,core,58328,"ld/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 23: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,254 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:58445,energy efficiency,core,core,58445,"alue*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 23: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,254 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::Qua",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:58567,energy efficiency,core,core,58567,"1::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 23: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,254 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/li",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:58675,energy efficiency,core,core,58675,"g::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 23: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,254 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/li",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:58784,energy efficiency,core,core,58784,". 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 23: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,254 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Ty",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:58987,energy efficiency,core,core,58987,"p-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 23: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,254 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TCli",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:59966,energy efficiency,core,core,59966,") in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEfloat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:60065,energy efficiency,core,core,60065,"preload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:60252,energy efficiency,core,core,60252,"ng::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<float, std::allocator<floa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:60422,energy efficiency,core,core,60422,"g::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 17: cling::Incremen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:60590,energy efficiency,core,core,60590,"rser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(cla",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:60904,energy efficiency,core,core,60904,"fo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:61030,energy efficiency,core,core,61030,"(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:61172,energy efficiency,core,core,61172,"xy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:61240,energy efficiency,alloc,allocator,61240,"ot_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:61285,energy efficiency,alloc,allocator,61285,"ss::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:61798,energy efficiency,alloc,allocator,61798,"ld-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::Exec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:62060,energy efficiency,alloc,allocator,62060,"69. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,255 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:62506,energy efficiency,core,core,62506,"ld/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,255 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:62623,energy efficiency,core,core,62623,"alue*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,255 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:62745,energy efficiency,core,core,62745,"1::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,255 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:62853,energy efficiency,core,core,62853,"g::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,255 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:63031,energy efficiency,core,core,63031,"d::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,255 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:63978,energy efficiency,core,core,63978,"lassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:64165,energy efficiency,core,core,64165,"lateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<bool, std::allocator<bool> >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:64335,energy efficiency,core,core,64335,"/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 16: cling::IncrementalExe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:64502,energy efficiency,core,core,64502,"bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::F",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:64816,energy efficiency,core,core,64816,"g::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:64941,energy efficiency,core,core,64941,"nst*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:65083,energy efficiency,core,core,65083,"roxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:65150,energy efficiency,alloc,allocator,65150,"/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:65193,energy efficiency,alloc,allocator,65193," TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::V",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:65705,energy efficiency,alloc,allocator,65705,"d/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 23: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::Exec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:65967,energy efficiency,alloc,allocator,65967,"xx:794. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 23: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,256 of ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:66413,energy efficiency,core,core,66413,"ld/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 23: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,256 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:66530,energy efficiency,core,core,66530,"alue*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 23: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,256 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::Qua",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:66652,energy efficiency,core,core,66652,"1::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 23: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,256 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/li",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:66760,energy efficiency,core,core,66760,"g::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 23: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,256 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/li",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:66869,energy efficiency,core,core,66869,". 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 23: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,256 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Ty",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:67072,energy efficiency,core,core,67072,"p-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 23: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,256 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TCli",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:68051,energy efficiency,core,core,68051,") in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEboolg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:68150,energy efficiency,core,core,68150,"preload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:68337,energy efficiency,core,core,68337,"ng::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<bool, std::allocator<bool> ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:68507,energy efficiency,core,core,68507,"g::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 17: cling::IncrementalEx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:68675,energy efficiency,core,core,68675,"rser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::F",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:68989,energy efficiency,core,core,68989,"fo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:69114,energy efficiency,core,core,69114,"o(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:69256,energy efficiency,core,core,69256,"oxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:69323,energy efficiency,alloc,allocator,69323,"root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:69366,energy efficiency,alloc,allocator,69366,"TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::V",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:69878,energy efficiency,alloc,allocator,69878,"d/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::Exec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:70140,energy efficiency,alloc,allocator,70140,"xx:794. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 448 bytes in 3 blocks are definitely lost in loss record 4,858 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:70586,energy efficiency,core,core,70586,"ld/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 448 bytes in 3 blocks are definitely lost in loss record 4,858 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:70703,energy efficiency,core,core,70703,"alue*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 448 bytes in 3 blocks are definitely lost in loss record 4,858 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCli",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:70825,energy efficiency,core,core,70825,"1::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 448 bytes in 3 blocks are definitely lost in loss record 4,858 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:70933,energy efficiency,core,core,70933,"g::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 448 bytes in 3 blocks are definitely lost in loss record 4,858 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:71126,energy efficiency,core,core,71126,"char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 448 bytes in 3 blocks are definitely lost in loss record 4,858 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:72088,energy efficiency,core,core,72088,"ng::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TClass::LoadClassDefault(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5779. 12: TClass::LoadClass(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5756. 13: ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:72184,energy efficiency,core,core,72184,"c/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TClass::LoadClassDefault(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5779. 12: TClass::LoadClass(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5756. 13: TROOT::LoadClass(char const*, bool) const in /opt/root_src/core/base/src/TROOT.cxx:2130. 14: TCl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:72281,energy efficiency,core,core,72281,"aquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TClass::LoadClassDefault(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5779. 12: TClass::LoadClass(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5756. 13: TROOT::LoadClass(char const*, bool) const in /opt/root_src/core/base/src/TROOT.cxx:2130. 14: TClass::GetClass(ClassInfo_t*, bool, bool) in /opt/root_src/core/meta/src/TClass.cxx:3379. 15: TBase",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:72439,energy efficiency,alloc,allocator,72439,"-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TClass::LoadClassDefault(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5779. 12: TClass::LoadClass(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5756. 13: TROOT::LoadClass(char const*, bool) const in /opt/root_src/core/base/src/TROOT.cxx:2130. 14: TClass::GetClass(ClassInfo_t*, bool, bool) in /opt/root_src/core/meta/src/TClass.cxx:3379. 15: TBaseClass::GetClassPointer(bool) in /opt/root_src/core/meta/src/TBaseClass.cxx:66. 16: TClass::GetBaseClass(TClass const*) in /opt/root_src/core/meta/src/TClass.cxx:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:72530,energy efficiency,alloc,allocator,72530,"::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TClass::LoadClassDefault(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5779. 12: TClass::LoadClass(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5756. 13: TROOT::LoadClass(char const*, bool) const in /opt/root_src/core/base/src/TROOT.cxx:2130. 14: TClass::GetClass(ClassInfo_t*, bool, bool) in /opt/root_src/core/meta/src/TClass.cxx:3379. 15: TBaseClass::GetClassPointer(bool) in /opt/root_src/core/meta/src/TBaseClass.cxx:66. 16: TClass::GetBaseClass(TClass const*) in /opt/root_src/core/meta/src/TClass.cxx:2687. 17: TClass::InheritsFrom(TClass const*) const in /opt/root_src/core/meta/src/TClass.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:72627,energy efficiency,alloc,allocator,72627,"o**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TClass::LoadClassDefault(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5779. 12: TClass::LoadClass(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5756. 13: TROOT::LoadClass(char const*, bool) const in /opt/root_src/core/base/src/TROOT.cxx:2130. 14: TClass::GetClass(ClassInfo_t*, bool, bool) in /opt/root_src/core/meta/src/TClass.cxx:3379. 15: TBaseClass::GetClassPointer(bool) in /opt/root_src/core/meta/src/TBaseClass.cxx:66. 16: TClass::GetBaseClass(TClass const*) in /opt/root_src/core/meta/src/TClass.cxx:2687. 17: TClass::InheritsFrom(TClass const*) const in /opt/root_src/core/meta/src/TClass.cxx:4905. 18: TClass::Property() const in /opt/root_src/core/meta/src/TClass.cxx:6111. 19: TClass:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:72653,energy efficiency,alloc,allocator,72653,"userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TClass::LoadClassDefault(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5779. 12: TClass::LoadClass(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5756. 13: TROOT::LoadClass(char const*, bool) const in /opt/root_src/core/base/src/TROOT.cxx:2130. 14: TClass::GetClass(ClassInfo_t*, bool, bool) in /opt/root_src/core/meta/src/TClass.cxx:3379. 15: TBaseClass::GetClassPointer(bool) in /opt/root_src/core/meta/src/TBaseClass.cxx:66. 16: TClass::GetBaseClass(TClass const*) in /opt/root_src/core/meta/src/TClass.cxx:2687. 17: TClass::InheritsFrom(TClass const*) const in /opt/root_src/core/meta/src/TClass.cxx:4905. 18: TClass::Property() const in /opt/root_src/core/meta/src/TClass.cxx:6111. 19: TClass::ClassProperty() const in ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:72725,energy efficiency,alloc,allocator,72725,"TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TClass::LoadClassDefault(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5779. 12: TClass::LoadClass(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5756. 13: TROOT::LoadClass(char const*, bool) const in /opt/root_src/core/base/src/TROOT.cxx:2130. 14: TClass::GetClass(ClassInfo_t*, bool, bool) in /opt/root_src/core/meta/src/TClass.cxx:3379. 15: TBaseClass::GetClassPointer(bool) in /opt/root_src/core/meta/src/TBaseClass.cxx:66. 16: TClass::GetBaseClass(TClass const*) in /opt/root_src/core/meta/src/TClass.cxx:2687. 17: TClass::InheritsFrom(TClass const*) const in /opt/root_src/core/meta/src/TClass.cxx:4905. 18: TClass::Property() const in /opt/root_src/core/meta/src/TClass.cxx:6111. 19: TClass::ClassProperty() const in /opt/root_src/core/meta/src/TClass.cxx:2398. 20: TIsAProxy::operator()(v",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:72772,energy efficiency,core,core,72772,"f/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TClass::LoadClassDefault(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5779. 12: TClass::LoadClass(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5756. 13: TROOT::LoadClass(char const*, bool) const in /opt/root_src/core/base/src/TROOT.cxx:2130. 14: TClass::GetClass(ClassInfo_t*, bool, bool) in /opt/root_src/core/meta/src/TClass.cxx:3379. 15: TBaseClass::GetClassPointer(bool) in /opt/root_src/core/meta/src/TBaseClass.cxx:66. 16: TClass::GetBaseClass(TClass const*) in /opt/root_src/core/meta/src/TClass.cxx:2687. 17: TClass::InheritsFrom(TClass const*) const in /opt/root_src/core/meta/src/TClass.cxx:4905. 18: TClass::Property() const in /opt/root_src/core/meta/src/TClass.cxx:6111. 19: TClass::ClassProperty() const in /opt/root_src/core/meta/src/TClass.cxx:2398. 20: TIsAProxy::operator()(void const*) in /opt/root_src/core/meta/src/T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:72865,energy efficiency,core,core,72865,"ingRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TClass::LoadClassDefault(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5779. 12: TClass::LoadClass(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5756. 13: TROOT::LoadClass(char const*, bool) const in /opt/root_src/core/base/src/TROOT.cxx:2130. 14: TClass::GetClass(ClassInfo_t*, bool, bool) in /opt/root_src/core/meta/src/TClass.cxx:3379. 15: TBaseClass::GetClassPointer(bool) in /opt/root_src/core/meta/src/TBaseClass.cxx:66. 16: TClass::GetBaseClass(TClass const*) in /opt/root_src/core/meta/src/TClass.cxx:2687. 17: TClass::InheritsFrom(TClass const*) const in /opt/root_src/core/meta/src/TClass.cxx:4905. 18: TClass::Property() const in /opt/root_src/core/meta/src/TClass.cxx:6111. 19: TClass::ClassProperty() const in /opt/root_src/core/meta/src/TClass.cxx:2398. 20: TIsAProxy::operator()(void const*) in /opt/root_src/core/meta/src/TIsAProxy.cxx:93. 21: TClass::GetActualClass(void const*) const in /opt/root_src/core/meta/src",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:72913,energy efficiency,Load,LoadClassDefault,72913,"const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TClass::LoadClassDefault(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5779. 12: TClass::LoadClass(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5756. 13: TROOT::LoadClass(char const*, bool) const in /opt/root_src/core/base/src/TROOT.cxx:2130. 14: TClass::GetClass(ClassInfo_t*, bool, bool) in /opt/root_src/core/meta/src/TClass.cxx:3379. 15: TBaseClass::GetClassPointer(bool) in /opt/root_src/core/meta/src/TBaseClass.cxx:66. 16: TClass::GetBaseClass(TClass const*) in /opt/root_src/core/meta/src/TClass.cxx:2687. 17: TClass::InheritsFrom(TClass const*) const in /opt/root_src/core/meta/src/TClass.cxx:4905. 18: TClass::Property() const in /opt/root_src/core/meta/src/TClass.cxx:6111. 19: TClass::ClassProperty() const in /opt/root_src/core/meta/src/TClass.cxx:2398. 20: TIsAProxy::operator()(void const*) in /opt/root_src/core/meta/src/TIsAProxy.cxx:93. 21: TClass::GetActualClass(void const*) const in /opt/root_src/core/meta/src/TClass.cxx:2612. 22: TKey::TKey(void const*, TClass c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:72966,energy efficiency,core,core,72966,"-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TClass::LoadClassDefault(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5779. 12: TClass::LoadClass(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5756. 13: TROOT::LoadClass(char const*, bool) const in /opt/root_src/core/base/src/TROOT.cxx:2130. 14: TClass::GetClass(ClassInfo_t*, bool, bool) in /opt/root_src/core/meta/src/TClass.cxx:3379. 15: TBaseClass::GetClassPointer(bool) in /opt/root_src/core/meta/src/TBaseClass.cxx:66. 16: TClass::GetBaseClass(TClass const*) in /opt/root_src/core/meta/src/TClass.cxx:2687. 17: TClass::InheritsFrom(TClass const*) const in /opt/root_src/core/meta/src/TClass.cxx:4905. 18: TClass::Property() const in /opt/root_src/core/meta/src/TClass.cxx:6111. 19: TClass::ClassProperty() const in /opt/root_src/core/meta/src/TClass.cxx:2398. 20: TIsAProxy::operator()(void const*) in /opt/root_src/core/meta/src/TIsAProxy.cxx:93. 21: TClass::GetActualClass(void const*) const in /opt/root_src/core/meta/src/TClass.cxx:2612. 22: TKey::TKey(void const*, TClass const*, char const*, int, TDirectory*) in /opt/r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:73009,energy efficiency,Load,LoadClass,73009,"ssSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TClass::LoadClassDefault(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5779. 12: TClass::LoadClass(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5756. 13: TROOT::LoadClass(char const*, bool) const in /opt/root_src/core/base/src/TROOT.cxx:2130. 14: TClass::GetClass(ClassInfo_t*, bool, bool) in /opt/root_src/core/meta/src/TClass.cxx:3379. 15: TBaseClass::GetClassPointer(bool) in /opt/root_src/core/meta/src/TBaseClass.cxx:66. 16: TClass::GetBaseClass(TClass const*) in /opt/root_src/core/meta/src/TClass.cxx:2687. 17: TClass::InheritsFrom(TClass const*) const in /opt/root_src/core/meta/src/TClass.cxx:4905. 18: TClass::Property() const in /opt/root_src/core/meta/src/TClass.cxx:6111. 19: TClass::ClassProperty() const in /opt/root_src/core/meta/src/TClass.cxx:2398. 20: TIsAProxy::operator()(void const*) in /opt/root_src/core/meta/src/TIsAProxy.cxx:93. 21: TClass::GetActualClass(void const*) const in /opt/root_src/core/meta/src/TClass.cxx:2612. 22: TKey::TKey(void const*, TClass const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:312. 23: TFile::Cre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:73055,energy efficiency,core,core,73055,"ookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TClass::LoadClassDefault(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5779. 12: TClass::LoadClass(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5756. 13: TROOT::LoadClass(char const*, bool) const in /opt/root_src/core/base/src/TROOT.cxx:2130. 14: TClass::GetClass(ClassInfo_t*, bool, bool) in /opt/root_src/core/meta/src/TClass.cxx:3379. 15: TBaseClass::GetClassPointer(bool) in /opt/root_src/core/meta/src/TBaseClass.cxx:66. 16: TClass::GetBaseClass(TClass const*) in /opt/root_src/core/meta/src/TClass.cxx:2687. 17: TClass::InheritsFrom(TClass const*) const in /opt/root_src/core/meta/src/TClass.cxx:4905. 18: TClass::Property() const in /opt/root_src/core/meta/src/TClass.cxx:6111. 19: TClass::ClassProperty() const in /opt/root_src/core/meta/src/TClass.cxx:2398. 20: TIsAProxy::operator()(void const*) in /opt/root_src/core/meta/src/TIsAProxy.cxx:93. 21: TClass::GetActualClass(void const*) const in /opt/root_src/core/meta/src/TClass.cxx:2612. 22: TKey::TKey(void const*, TClass const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:312. 23: TFile::CreateKey(TDirectory*, void const*, TClass con",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:73097,energy efficiency,Load,LoadClass,73097,"/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TClass::LoadClassDefault(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5779. 12: TClass::LoadClass(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5756. 13: TROOT::LoadClass(char const*, bool) const in /opt/root_src/core/base/src/TROOT.cxx:2130. 14: TClass::GetClass(ClassInfo_t*, bool, bool) in /opt/root_src/core/meta/src/TClass.cxx:3379. 15: TBaseClass::GetClassPointer(bool) in /opt/root_src/core/meta/src/TBaseClass.cxx:66. 16: TClass::GetBaseClass(TClass const*) in /opt/root_src/core/meta/src/TClass.cxx:2687. 17: TClass::InheritsFrom(TClass const*) const in /opt/root_src/core/meta/src/TClass.cxx:4905. 18: TClass::Property() const in /opt/root_src/core/meta/src/TClass.cxx:6111. 19: TClass::ClassProperty() const in /opt/root_src/core/meta/src/TClass.cxx:2398. 20: TIsAProxy::operator()(void const*) in /opt/root_src/core/meta/src/TIsAProxy.cxx:93. 21: TClass::GetActualClass(void const*) const in /opt/root_src/core/meta/src/TClass.cxx:2612. 22: TKey::TKey(void const*, TClass const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:312. 23: TFile::CreateKey(TDirectory*, void const*, TClass const*, char const*, int) in /opt/root_src/io/io",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:73149,energy efficiency,core,core,73149,"bs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TClass::LoadClassDefault(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5779. 12: TClass::LoadClass(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5756. 13: TROOT::LoadClass(char const*, bool) const in /opt/root_src/core/base/src/TROOT.cxx:2130. 14: TClass::GetClass(ClassInfo_t*, bool, bool) in /opt/root_src/core/meta/src/TClass.cxx:3379. 15: TBaseClass::GetClassPointer(bool) in /opt/root_src/core/meta/src/TBaseClass.cxx:66. 16: TClass::GetBaseClass(TClass const*) in /opt/root_src/core/meta/src/TClass.cxx:2687. 17: TClass::InheritsFrom(TClass const*) const in /opt/root_src/core/meta/src/TClass.cxx:4905. 18: TClass::Property() const in /opt/root_src/core/meta/src/TClass.cxx:6111. 19: TClass::ClassProperty() const in /opt/root_src/core/meta/src/TClass.cxx:2398. 20: TIsAProxy::operator()(void const*) in /opt/root_src/core/meta/src/TIsAProxy.cxx:93. 21: TClass::GetActualClass(void const*) const in /opt/root_src/core/meta/src/TClass.cxx:2612. 22: TKey::TKey(void const*, TClass const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:312. 23: TFile::CreateKey(TDirectory*, void const*, TClass const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:1039. 24: TDirectoryFile::WriteObj",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:73243,energy efficiency,core,core,73243,"dImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TClass::LoadClassDefault(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5779. 12: TClass::LoadClass(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5756. 13: TROOT::LoadClass(char const*, bool) const in /opt/root_src/core/base/src/TROOT.cxx:2130. 14: TClass::GetClass(ClassInfo_t*, bool, bool) in /opt/root_src/core/meta/src/TClass.cxx:3379. 15: TBaseClass::GetClassPointer(bool) in /opt/root_src/core/meta/src/TBaseClass.cxx:66. 16: TClass::GetBaseClass(TClass const*) in /opt/root_src/core/meta/src/TClass.cxx:2687. 17: TClass::InheritsFrom(TClass const*) const in /opt/root_src/core/meta/src/TClass.cxx:4905. 18: TClass::Property() const in /opt/root_src/core/meta/src/TClass.cxx:6111. 19: TClass::ClassProperty() const in /opt/root_src/core/meta/src/TClass.cxx:2398. 20: TIsAProxy::operator()(void const*) in /opt/root_src/core/meta/src/TIsAProxy.cxx:93. 21: TClass::GetActualClass(void const*) const in /opt/root_src/core/meta/src/TClass.cxx:2612. 22: TKey::TKey(void const*, TClass const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:312. 23: TFile::CreateKey(TDirectory*, void const*, TClass const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:1039. 24: TDirectoryFile::WriteObjectAny(void const*, TClass const*, char const*, char const*, int) in /opt/root_src/io/io/src/T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:73329,energy efficiency,core,core,73329,"pAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TClass::LoadClassDefault(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5779. 12: TClass::LoadClass(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5756. 13: TROOT::LoadClass(char const*, bool) const in /opt/root_src/core/base/src/TROOT.cxx:2130. 14: TClass::GetClass(ClassInfo_t*, bool, bool) in /opt/root_src/core/meta/src/TClass.cxx:3379. 15: TBaseClass::GetClassPointer(bool) in /opt/root_src/core/meta/src/TBaseClass.cxx:66. 16: TClass::GetBaseClass(TClass const*) in /opt/root_src/core/meta/src/TClass.cxx:2687. 17: TClass::InheritsFrom(TClass const*) const in /opt/root_src/core/meta/src/TClass.cxx:4905. 18: TClass::Property() const in /opt/root_src/core/meta/src/TClass.cxx:6111. 19: TClass::ClassProperty() const in /opt/root_src/core/meta/src/TClass.cxx:2398. 20: TIsAProxy::operator()(void const*) in /opt/root_src/core/meta/src/TIsAProxy.cxx:93. 21: TClass::GetActualClass(void const*) const in /opt/root_src/core/meta/src/TClass.cxx:2612. 22: TKey::TKey(void const*, TClass const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:312. 23: TFile::CreateKey(TDirectory*, void const*, TClass const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:1039. 24: TDirectoryFile::WriteObjectAny(void const*, TClass const*, char const*, char const*, int) in /opt/root_src/io/io/src/TDirectoryFile.cxx:2119. 25: TDirectoryFile::WriteObjectAny(void const*, char const*, c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:73419,energy efficiency,core,core,73419,"har_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TClass::LoadClassDefault(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5779. 12: TClass::LoadClass(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5756. 13: TROOT::LoadClass(char const*, bool) const in /opt/root_src/core/base/src/TROOT.cxx:2130. 14: TClass::GetClass(ClassInfo_t*, bool, bool) in /opt/root_src/core/meta/src/TClass.cxx:3379. 15: TBaseClass::GetClassPointer(bool) in /opt/root_src/core/meta/src/TBaseClass.cxx:66. 16: TClass::GetBaseClass(TClass const*) in /opt/root_src/core/meta/src/TClass.cxx:2687. 17: TClass::InheritsFrom(TClass const*) const in /opt/root_src/core/meta/src/TClass.cxx:4905. 18: TClass::Property() const in /opt/root_src/core/meta/src/TClass.cxx:6111. 19: TClass::ClassProperty() const in /opt/root_src/core/meta/src/TClass.cxx:2398. 20: TIsAProxy::operator()(void const*) in /opt/root_src/core/meta/src/TIsAProxy.cxx:93. 21: TClass::GetActualClass(void const*) const in /opt/root_src/core/meta/src/TClass.cxx:2612. 22: TKey::TKey(void const*, TClass const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:312. 23: TFile::CreateKey(TDirectory*, void const*, TClass const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:1039. 24: TDirectoryFile::WriteObjectAny(void const*, TClass const*, char const*, char const*, int) in /opt/root_src/io/io/src/TDirectoryFile.cxx:2119. 25: TDirectoryFile::WriteObjectAny(void const*, char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TDirectoryFile.cxx:2036. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:73513,energy efficiency,core,core,73513,"har_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TClass::LoadClassDefault(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5779. 12: TClass::LoadClass(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5756. 13: TROOT::LoadClass(char const*, bool) const in /opt/root_src/core/base/src/TROOT.cxx:2130. 14: TClass::GetClass(ClassInfo_t*, bool, bool) in /opt/root_src/core/meta/src/TClass.cxx:3379. 15: TBaseClass::GetClassPointer(bool) in /opt/root_src/core/meta/src/TBaseClass.cxx:66. 16: TClass::GetBaseClass(TClass const*) in /opt/root_src/core/meta/src/TClass.cxx:2687. 17: TClass::InheritsFrom(TClass const*) const in /opt/root_src/core/meta/src/TClass.cxx:4905. 18: TClass::Property() const in /opt/root_src/core/meta/src/TClass.cxx:6111. 19: TClass::ClassProperty() const in /opt/root_src/core/meta/src/TClass.cxx:2398. 20: TIsAProxy::operator()(void const*) in /opt/root_src/core/meta/src/TIsAProxy.cxx:93. 21: TClass::GetActualClass(void const*) const in /opt/root_src/core/meta/src/TClass.cxx:2612. 22: TKey::TKey(void const*, TClass const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:312. 23: TFile::CreateKey(TDirectory*, void const*, TClass const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:1039. 24: TDirectoryFile::WriteObjectAny(void const*, TClass const*, char const*, char const*, int) in /opt/root_src/io/io/src/TDirectoryFile.cxx:2119. 25: TDirectoryFile::WriteObjectAny(void const*, char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TDirectoryFile.cxx:2036. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:73590,energy efficiency,core,core,73590,"har_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TClass::LoadClassDefault(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5779. 12: TClass::LoadClass(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5756. 13: TROOT::LoadClass(char const*, bool) const in /opt/root_src/core/base/src/TROOT.cxx:2130. 14: TClass::GetClass(ClassInfo_t*, bool, bool) in /opt/root_src/core/meta/src/TClass.cxx:3379. 15: TBaseClass::GetClassPointer(bool) in /opt/root_src/core/meta/src/TBaseClass.cxx:66. 16: TClass::GetBaseClass(TClass const*) in /opt/root_src/core/meta/src/TClass.cxx:2687. 17: TClass::InheritsFrom(TClass const*) const in /opt/root_src/core/meta/src/TClass.cxx:4905. 18: TClass::Property() const in /opt/root_src/core/meta/src/TClass.cxx:6111. 19: TClass::ClassProperty() const in /opt/root_src/core/meta/src/TClass.cxx:2398. 20: TIsAProxy::operator()(void const*) in /opt/root_src/core/meta/src/TIsAProxy.cxx:93. 21: TClass::GetActualClass(void const*) const in /opt/root_src/core/meta/src/TClass.cxx:2612. 22: TKey::TKey(void const*, TClass const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:312. 23: TFile::CreateKey(TDirectory*, void const*, TClass const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:1039. 24: TDirectoryFile::WriteObjectAny(void const*, TClass const*, char const*, char const*, int) in /opt/root_src/io/io/src/TDirectoryFile.cxx:2119. 25: TDirectoryFile::WriteObjectAny(void const*, char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TDirectoryFile.cxx:2036. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:73672,energy efficiency,core,core,73672,"har_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TClass::LoadClassDefault(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5779. 12: TClass::LoadClass(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5756. 13: TROOT::LoadClass(char const*, bool) const in /opt/root_src/core/base/src/TROOT.cxx:2130. 14: TClass::GetClass(ClassInfo_t*, bool, bool) in /opt/root_src/core/meta/src/TClass.cxx:3379. 15: TBaseClass::GetClassPointer(bool) in /opt/root_src/core/meta/src/TBaseClass.cxx:66. 16: TClass::GetBaseClass(TClass const*) in /opt/root_src/core/meta/src/TClass.cxx:2687. 17: TClass::InheritsFrom(TClass const*) const in /opt/root_src/core/meta/src/TClass.cxx:4905. 18: TClass::Property() const in /opt/root_src/core/meta/src/TClass.cxx:6111. 19: TClass::ClassProperty() const in /opt/root_src/core/meta/src/TClass.cxx:2398. 20: TIsAProxy::operator()(void const*) in /opt/root_src/core/meta/src/TIsAProxy.cxx:93. 21: TClass::GetActualClass(void const*) const in /opt/root_src/core/meta/src/TClass.cxx:2612. 22: TKey::TKey(void const*, TClass const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:312. 23: TFile::CreateKey(TDirectory*, void const*, TClass const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:1039. 24: TDirectoryFile::WriteObjectAny(void const*, TClass const*, char const*, char const*, int) in /opt/root_src/io/io/src/TDirectoryFile.cxx:2119. 25: TDirectoryFile::WriteObjectAny(void const*, char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TDirectoryFile.cxx:2036. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:73759,energy efficiency,core,core,73759,"har_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TClass::LoadClassDefault(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5779. 12: TClass::LoadClass(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5756. 13: TROOT::LoadClass(char const*, bool) const in /opt/root_src/core/base/src/TROOT.cxx:2130. 14: TClass::GetClass(ClassInfo_t*, bool, bool) in /opt/root_src/core/meta/src/TClass.cxx:3379. 15: TBaseClass::GetClassPointer(bool) in /opt/root_src/core/meta/src/TBaseClass.cxx:66. 16: TClass::GetBaseClass(TClass const*) in /opt/root_src/core/meta/src/TClass.cxx:2687. 17: TClass::InheritsFrom(TClass const*) const in /opt/root_src/core/meta/src/TClass.cxx:4905. 18: TClass::Property() const in /opt/root_src/core/meta/src/TClass.cxx:6111. 19: TClass::ClassProperty() const in /opt/root_src/core/meta/src/TClass.cxx:2398. 20: TIsAProxy::operator()(void const*) in /opt/root_src/core/meta/src/TIsAProxy.cxx:93. 21: TClass::GetActualClass(void const*) const in /opt/root_src/core/meta/src/TClass.cxx:2612. 22: TKey::TKey(void const*, TClass const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:312. 23: TFile::CreateKey(TDirectory*, void const*, TClass const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:1039. 24: TDirectoryFile::WriteObjectAny(void const*, TClass const*, char const*, char const*, int) in /opt/root_src/io/io/src/TDirectoryFile.cxx:2119. 25: TDirectoryFile::WriteObjectAny(void const*, char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TDirectoryFile.cxx:2036. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:73854,energy efficiency,core,core,73854,"har_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TClass::LoadClassDefault(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5779. 12: TClass::LoadClass(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5756. 13: TROOT::LoadClass(char const*, bool) const in /opt/root_src/core/base/src/TROOT.cxx:2130. 14: TClass::GetClass(ClassInfo_t*, bool, bool) in /opt/root_src/core/meta/src/TClass.cxx:3379. 15: TBaseClass::GetClassPointer(bool) in /opt/root_src/core/meta/src/TBaseClass.cxx:66. 16: TClass::GetBaseClass(TClass const*) in /opt/root_src/core/meta/src/TClass.cxx:2687. 17: TClass::InheritsFrom(TClass const*) const in /opt/root_src/core/meta/src/TClass.cxx:4905. 18: TClass::Property() const in /opt/root_src/core/meta/src/TClass.cxx:6111. 19: TClass::ClassProperty() const in /opt/root_src/core/meta/src/TClass.cxx:2398. 20: TIsAProxy::operator()(void const*) in /opt/root_src/core/meta/src/TIsAProxy.cxx:93. 21: TClass::GetActualClass(void const*) const in /opt/root_src/core/meta/src/TClass.cxx:2612. 22: TKey::TKey(void const*, TClass const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:312. 23: TFile::CreateKey(TDirectory*, void const*, TClass const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:1039. 24: TDirectoryFile::WriteObjectAny(void const*, TClass const*, char const*, char const*, int) in /opt/root_src/io/io/src/TDirectoryFile.cxx:2119. 25: TDirectoryFile::WriteObjectAny(void const*, char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TDirectoryFile.cxx:2036. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:63,integrability,depend,depends,63,"Log when running with valgrind:. ```. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:746. 5: TUnixSystem::OpenDirectory(char const*) in /opt/root_src/core/unix/src/TUnixSystem.cxx:1362. 6: TCling::LoadLibraryMap(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:5737. 7: TCling::Initialize() in /opt/root_src/core/metacling/src/TCling.cxx:1660. 8: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2116. 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 13: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:1478,integrability,depend,depends,1478,"*, void*) in /opt/root_src/core/base/src/TSystem.cxx:746. 5: TUnixSystem::OpenDirectory(char const*) in /opt/root_src/core/unix/src/TUnixSystem.cxx:1362. 6: TCling::LoadLibraryMap(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:5737. 7: TCling::Initialize() in /opt/root_src/core/metacling/src/TCling.cxx:1660. 8: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2116. 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 13: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:177. 6: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 7: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:346. Conditional jump or move depends on uninitialised value(s). in TDirectory::TDirectory() in ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:2416,integrability,depend,depends,2416,"c/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:177. 6: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 7: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:346. Conditional jump or move depends on uninitialised value(s). in TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed() in /opt/root_src/core/base/inc/TNamed.h:36. 4: TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 5: TDirectoryFile::TDirectoryFile() in /opt/root_src/io/io/src/TDirectoryFile.cxx:61. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 7: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 8: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 9: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:5606,integrability,depend,depends,5606,"t/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 5: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 6: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 7: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:17103,integrability,depend,depends,17103,":HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 17: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 18: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 19: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 20: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 21: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 22: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 23: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 24: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 25: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. 26: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. Conditional jump or move depends on uninitialised value(s). in TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:53. 4: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:241. 5: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 6: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 7: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 8: TKey::CheckTObjectHashConsistency() const in /opt/root_src/io/io/inc/TKey.h:116. 9: TObject::CheckedHash()",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:20493,integrability,depend,depends,20493,"<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 20: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 21: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 22: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 23: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 24: call_init.part.0 in ./elf/./elf/dl-init.c:70. 25: call_init in ./elf/./elf/dl-init.c:33. 26: _dl_init in ./elf/./elf/dl-init.c:117. Uninitialised value was created by a stack allocation 1: /home/userf/build/build-root-Desktop-Debug/lib/libCore.so. Conditional jump or move depends on uninitialised value(s). in THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TCollection::TCollection() in /opt/root_src/core/cont/inc/TCollection.h:152. 4: TSeqCollection::TSeqCollection() in /opt/root_src/core/cont/inc/TSeqCollection.h:33. 5: TList::TList() in /opt/root_src/core/cont/inc/TList.h:72. 6: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 7: TDirectoryFile::Close(char const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:592. 8: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:970. 9: TMemFile::~TMemFile() in /opt/root_src/io/io/src/TMemFile.cxx:240. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:23558,integrability,depend,depends,23558,"ug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or move depends on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 4: TBufferIO::TBufferIO(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferIO.cxx:51. 5: TBufferFile::TBufferFile(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferFile.cxx:90. 6: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1025. 7: TDirectoryFile::GetObjectChecked(char const*, TClass const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1111. 8: void TDirectory::GetObject<TObjArray>(char const*, TObjArray*&) in /opt/root_src/core/base/inc/TDirectory.h:214. 9: TCling::LoadPCMImpl(TFile&) in /opt/root_src/core/metacling/src/TCling.cxx:1722. 10: TCling::Lo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:26663,integrability,depend,depends,26663,"namespace)::DictInit::DictInit() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:97. 15: __static_initialization_and_destruction_0(int, int) in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:99. 16: _GLOBAL__sub_I_demoMem_C_ACLiC_dict.cxx in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:103. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1024. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:152. 5: TArchiveFile::Open(char const*, TFile*) in /opt/root_src/io/io/src/TArchiveFile.cxx:131. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:397. 7: TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFile.cxx:173. 8: TMemFile::TMemFile(char const*, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFile.cxx:163. 9: std::_MakeUniq<TMemFile>::__single_object",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:30174,integrability,depend,depends,30174,"ing.cxx:2438. 18: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 19: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 20: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 21: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 22: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 23: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 24: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 25: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:151. Conditional jump or move depends on uninitialised value(s). in TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed(char const*, char const*) in /opt/root_src/core/base/inc/TNamed.h:37. 4: TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 5: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3837. 6: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:952. 7: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:48. 8: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 9: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:4817,interoperability,skeleton,skeleton,4817,"r const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 11: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 12: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 13: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 14: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:4979,interoperability,skeleton,skeleton,4979,"_cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 11: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 12: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 13: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 14: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:5134,interoperability,skeleton,skeleton,5134,"66. 11: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 12: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 13: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 14: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 5: TMemFile::TMemFile(char const*, TMemFile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:5194,interoperability,skeleton,skeleton,5194,"on_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 12: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 13: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 14: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 5: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:7853,interoperability,skeleton,skeleton,7853,"ar const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 9: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 10: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 11: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 12: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 13: call_init.part.0 in ./elf/./elf/dl-init.c:70. 14: call_init in ./elf/./elf/dl-init.c:33. 15: _dl_init in ./elf/./elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. Uninitialised value was created by a stac",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:8015,interoperability,skeleton,skeleton,8015,"__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 9: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 10: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 11: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 12: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 13: call_init.part.0 in ./elf/./elf/dl-init.c:70. 14: call_init in ./elf/./elf/dl-init.c:33. 15: _dl_init in ./elf/./elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:18",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:8170,interoperability,skeleton,skeleton,8170,"566. 9: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 10: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 11: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 12: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 13: call_init.part.0 in ./elf/./elf/dl-init.c:70. 14: call_init in ./elf/./elf/dl-init.c:33. 15: _dl_init in ./elf/./elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Invalid read of size 4. in ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 1: ROOT::Internal::DeleteChangesMe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:8230,interoperability,skeleton,skeleton,8230,"on_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 10: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 11: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 12: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 13: call_init.part.0 in ./elf/./elf/dl-init.c:70. 14: call_init in ./elf/./elf/dl-init.c:33. 15: _dl_init in ./elf/./elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Invalid read of size 4. in ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 1: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:8428,interoperability,platform,platform,8428,"xx:3631. 11: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 12: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 13: call_init.part.0 in ./elf/./elf/dl-init.c:70. 14: call_init in ./elf/./elf/dl-init.c:33. 15: _dl_init in ./elf/./elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Invalid read of size 4. in ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 1: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 2: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 3: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 4: TList::FindLink(TObject const*, int&) const",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:23002,interoperability,skeleton,skeleton,23002,"r const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 14: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or move depends on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 4: TBufferIO::TBufferIO(TBuffer::EMode, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:23164,interoperability,skeleton,skeleton,23164,"_cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 14: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or move depends on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 4: TBufferIO::TBufferIO(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferIO.cxx:51. 5: TBufferFile::TBufferFile(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferFile.cxx:90. 6: TKey::ReadObj",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:23319,interoperability,skeleton,skeleton,23319,"66. 13: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 14: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or move depends on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 4: TBufferIO::TBufferIO(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferIO.cxx:51. 5: TBufferFile::TBufferFile(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferFile.cxx:90. 6: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1025. 7: TDirectoryFile::GetObjectChecked(char const*, TClass const*) in /opt/root_src/io/io/src/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:23379,interoperability,skeleton,skeleton,23379,"on_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 14: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or move depends on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 4: TBufferIO::TBufferIO(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferIO.cxx:51. 5: TBufferFile::TBufferFile(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferFile.cxx:90. 6: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1025. 7: TDirectoryFile::GetObjectChecked(char const*, TClass const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1111. 8: void TDirectory::GetObject<TObjA",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:26111,interoperability,skeleton,skeleton,26111,"09. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_demoMem_C_ACLiC_dict_Impl() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:89. 14: (anonymous namespace)::DictInit::DictInit() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:97. 15: __static_initialization_and_destruction_0(int, int) in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:99. 16: _GLOBAL__sub_I_demoMem_C_ACLiC_dict.cxx in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:103. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1024. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:26273,interoperability,skeleton,skeleton,26273,", std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_demoMem_C_ACLiC_dict_Impl() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:89. 14: (anonymous namespace)::DictInit::DictInit() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:97. 15: __static_initialization_and_destruction_0(int, int) in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:99. 16: _GLOBAL__sub_I_demoMem_C_ACLiC_dict.cxx in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:103. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1024. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:152. 5: TArchiveFile::Open(char const*, TFile*) in /opt/root_src/io/io/src/TArchiveFile.cxx:131. 6: TFile::TFile(ch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:26428,interoperability,skeleton,skeleton,26428,"ar> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_demoMem_C_ACLiC_dict_Impl() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:89. 14: (anonymous namespace)::DictInit::DictInit() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:97. 15: __static_initialization_and_destruction_0(int, int) in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:99. 16: _GLOBAL__sub_I_demoMem_C_ACLiC_dict.cxx in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:103. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1024. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:152. 5: TArchiveFile::Open(char const*, TFile*) in /opt/root_src/io/io/src/TArchiveFile.cxx:131. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:397. 7: TMemFile::TMemFile(char const*, char*, long long, char const*, char ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:26488,interoperability,skeleton,skeleton,26488,"/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_demoMem_C_ACLiC_dict_Impl() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:89. 14: (anonymous namespace)::DictInit::DictInit() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:97. 15: __static_initialization_and_destruction_0(int, int) in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:99. 16: _GLOBAL__sub_I_demoMem_C_ACLiC_dict.cxx in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:103. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1024. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:152. 5: TArchiveFile::Open(char const*, TFile*) in /opt/root_src/io/io/src/TArchiveFile.cxx:131. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:397. 7: TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFile.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:63,modifiability,depend,depends,63,"Log when running with valgrind:. ```. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:746. 5: TUnixSystem::OpenDirectory(char const*) in /opt/root_src/core/unix/src/TUnixSystem.cxx:1362. 6: TCling::LoadLibraryMap(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:5737. 7: TCling::Initialize() in /opt/root_src/core/metacling/src/TCling.cxx:1660. 8: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2116. 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 13: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:1478,modifiability,depend,depends,1478,"*, void*) in /opt/root_src/core/base/src/TSystem.cxx:746. 5: TUnixSystem::OpenDirectory(char const*) in /opt/root_src/core/unix/src/TUnixSystem.cxx:1362. 6: TCling::LoadLibraryMap(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:5737. 7: TCling::Initialize() in /opt/root_src/core/metacling/src/TCling.cxx:1660. 8: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2116. 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 13: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:177. 6: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 7: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:346. Conditional jump or move depends on uninitialised value(s). in TDirectory::TDirectory() in ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:2416,modifiability,depend,depends,2416,"c/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:177. 6: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 7: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:346. Conditional jump or move depends on uninitialised value(s). in TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed() in /opt/root_src/core/base/inc/TNamed.h:36. 4: TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 5: TDirectoryFile::TDirectoryFile() in /opt/root_src/io/io/src/TDirectoryFile.cxx:61. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 7: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 8: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 9: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:5606,modifiability,depend,depends,5606,"t/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 5: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 6: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 7: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:17103,modifiability,depend,depends,17103,":HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 17: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 18: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 19: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 20: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 21: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 22: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 23: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 24: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 25: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. 26: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. Conditional jump or move depends on uninitialised value(s). in TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:53. 4: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:241. 5: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 6: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 7: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 8: TKey::CheckTObjectHashConsistency() const in /opt/root_src/io/io/inc/TKey.h:116. 9: TObject::CheckedHash()",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:20493,modifiability,depend,depends,20493,"<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 20: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 21: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 22: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 23: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 24: call_init.part.0 in ./elf/./elf/dl-init.c:70. 25: call_init in ./elf/./elf/dl-init.c:33. 26: _dl_init in ./elf/./elf/dl-init.c:117. Uninitialised value was created by a stack allocation 1: /home/userf/build/build-root-Desktop-Debug/lib/libCore.so. Conditional jump or move depends on uninitialised value(s). in THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TCollection::TCollection() in /opt/root_src/core/cont/inc/TCollection.h:152. 4: TSeqCollection::TSeqCollection() in /opt/root_src/core/cont/inc/TSeqCollection.h:33. 5: TList::TList() in /opt/root_src/core/cont/inc/TList.h:72. 6: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 7: TDirectoryFile::Close(char const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:592. 8: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:970. 9: TMemFile::~TMemFile() in /opt/root_src/io/io/src/TMemFile.cxx:240. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:23558,modifiability,depend,depends,23558,"ug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or move depends on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 4: TBufferIO::TBufferIO(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferIO.cxx:51. 5: TBufferFile::TBufferFile(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferFile.cxx:90. 6: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1025. 7: TDirectoryFile::GetObjectChecked(char const*, TClass const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1111. 8: void TDirectory::GetObject<TObjArray>(char const*, TObjArray*&) in /opt/root_src/core/base/inc/TDirectory.h:214. 9: TCling::LoadPCMImpl(TFile&) in /opt/root_src/core/metacling/src/TCling.cxx:1722. 10: TCling::Lo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:26663,modifiability,depend,depends,26663,"namespace)::DictInit::DictInit() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:97. 15: __static_initialization_and_destruction_0(int, int) in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:99. 16: _GLOBAL__sub_I_demoMem_C_ACLiC_dict.cxx in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:103. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1024. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:152. 5: TArchiveFile::Open(char const*, TFile*) in /opt/root_src/io/io/src/TArchiveFile.cxx:131. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:397. 7: TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFile.cxx:173. 8: TMemFile::TMemFile(char const*, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFile.cxx:163. 9: std::_MakeUniq<TMemFile>::__single_object",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:30174,modifiability,depend,depends,30174,"ing.cxx:2438. 18: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 19: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 20: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 21: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 22: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 23: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 24: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 25: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:151. Conditional jump or move depends on uninitialised value(s). in TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed(char const*, char const*) in /opt/root_src/core/base/inc/TNamed.h:37. 4: TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 5: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3837. 6: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:952. 7: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:48. 8: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 9: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:33581,modifiability,Modul,ModuleFileExtension,33581,"r const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 19: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 20: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 21: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 22: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3775. 96 bytes in 1 blocks are possibly lost in loss record 4,046 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:34052,modifiability,Modul,ModuleFileExtension,34052,"teStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3775. 96 bytes in 1 blocks are possibly lost in loss record 4,046 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char cons",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:34112,modifiability,Modul,ModuleFileExtension,34112,"96 bytes in 1 blocks are possibly lost in loss record 4,046 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacli",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:34356,modifiability,Modul,ModuleFileExtension,34356,"grind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:34416,modifiability,Modul,ModuleFileExtension,34416,"::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:34708,modifiability,Modul,ModuleFileExtension,34708,", std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:34768,modifiability,Modul,ModuleFileExtension,34768,"uild-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 96 bytes in 1 blocks are possibly lost in loss record 4",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:34881,modifiability,Modul,ModuleFileExtension,34881,"serf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 96 bytes in 1 blocks are possibly lost in loss record 4,047 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metac",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:34941,modifiability,Modul,ModuleFileExtension,34941,"g::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 96 bytes in 1 blocks are possibly lost in loss record 4,047 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:36182,modifiability,Modul,ModuleFileExtension,36182,"acling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 96 bytes in 1 blocks are possibly lost in loss record 4,047 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:36653,modifiability,Modul,ModuleFileExtension,36653,"t.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 96 bytes in 1 blocks are possibly lost in loss record 4,047 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char cons",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:36713,modifiability,Modul,ModuleFileExtension,36713,"96 bytes in 1 blocks are possibly lost in loss record 4,047 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacli",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:36957,modifiability,Modul,ModuleFileExtension,36957,"grind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:37017,modifiability,Modul,ModuleFileExtension,37017,"::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:37309,modifiability,Modul,ModuleFileExtension,37309,", std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:37369,modifiability,Modul,ModuleFileExtension,37369,"uild-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 112 bytes in 1 blocks are definitely lost in loss recor",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:37482,modifiability,Modul,ModuleFileExtension,37482,"serf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 112 bytes in 1 blocks are definitely lost in loss record 4,249 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacli",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:37542,modifiability,Modul,ModuleFileExtension,37542,"g::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 112 bytes in 1 blocks are definitely lost in loss record 4,249 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/v",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:73462,modifiability,Inherit,InheritsFrom,73462,"har_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TClass::LoadClassDefault(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5779. 12: TClass::LoadClass(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5756. 13: TROOT::LoadClass(char const*, bool) const in /opt/root_src/core/base/src/TROOT.cxx:2130. 14: TClass::GetClass(ClassInfo_t*, bool, bool) in /opt/root_src/core/meta/src/TClass.cxx:3379. 15: TBaseClass::GetClassPointer(bool) in /opt/root_src/core/meta/src/TBaseClass.cxx:66. 16: TClass::GetBaseClass(TClass const*) in /opt/root_src/core/meta/src/TClass.cxx:2687. 17: TClass::InheritsFrom(TClass const*) const in /opt/root_src/core/meta/src/TClass.cxx:4905. 18: TClass::Property() const in /opt/root_src/core/meta/src/TClass.cxx:6111. 19: TClass::ClassProperty() const in /opt/root_src/core/meta/src/TClass.cxx:2398. 20: TIsAProxy::operator()(void const*) in /opt/root_src/core/meta/src/TIsAProxy.cxx:93. 21: TClass::GetActualClass(void const*) const in /opt/root_src/core/meta/src/TClass.cxx:2612. 22: TKey::TKey(void const*, TClass const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:312. 23: TFile::CreateKey(TDirectory*, void const*, TClass const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:1039. 24: TDirectoryFile::WriteObjectAny(void const*, TClass const*, char const*, char const*, int) in /opt/root_src/io/io/src/TDirectoryFile.cxx:2119. 25: TDirectoryFile::WriteObjectAny(void const*, char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TDirectoryFile.cxx:2036. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:647,performance,Load,LoadLibraryMap,647,"Log when running with valgrind:. ```. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:746. 5: TUnixSystem::OpenDirectory(char const*) in /opt/root_src/core/unix/src/TUnixSystem.cxx:1362. 6: TCling::LoadLibraryMap(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:5737. 7: TCling::Initialize() in /opt/root_src/core/metacling/src/TCling.cxx:1660. 8: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2116. 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 13: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:3180,performance,Load,LoadPCM,3180,".cxx:174. 7: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:346. Conditional jump or move depends on uninitialised value(s). in TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed() in /opt/root_src/core/base/inc/TNamed.h:36. 4: TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 5: TDirectoryFile::TDirectoryFile() in /opt/root_src/io/io/src/TDirectoryFile.cxx:61. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 7: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 8: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 9: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 10: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 11: (anonymous namespace)::TriggerDictiona",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:4811,performance,error,error-skeleton,4811,"char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 11: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 12: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 13: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 14: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:4973,performance,error,error-skeleton,4973,"::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 11: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 12: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 13: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 14: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:5128,performance,error,error-skeleton,5128,":2566. 11: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 12: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 13: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 14: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 5: TMemFile::TMemFile(char const*, TMemFi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:5188,performance,error,error-skeleton,5188,"ation_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 12: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 13: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 14: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 5: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:5439,performance,Load,LoadPCM,5439,"ction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 14: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 5: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 6: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 7: TCling::RegisterModule(char const*, char const**, char const**, char const*, cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:6218,performance,Load,LoadPCM,6218,"_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 5: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 6: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 7: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 8: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 9: (anonymous namespace)::TriggerDictionary",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:7847,performance,error,error-skeleton,7847," char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 9: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 10: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 11: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 12: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 13: call_init.part.0 in ./elf/./elf/dl-init.c:70. 14: call_init in ./elf/./elf/dl-init.c:33. 15: _dl_init in ./elf/./elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. Uninitialised value was created by a s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:8009,performance,error,error-skeleton,8009,"d::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 9: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 10: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 11: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 12: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 13: call_init.part.0 in ./elf/./elf/dl-init.c:70. 14: call_init in ./elf/./elf/dl-init.c:33. 15: _dl_init in ./elf/./elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:8164,performance,error,error-skeleton,8164,"x:2566. 9: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 10: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 11: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 12: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 13: call_init.part.0 in ./elf/./elf/dl-init.c:70. 14: call_init in ./elf/./elf/dl-init.c:33. 15: _dl_init in ./elf/./elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Invalid read of size 4. in ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 1: ROOT::Internal::DeleteChange",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:8224,performance,error,error-skeleton,8224,"ation_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 10: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 11: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 12: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 13: call_init.part.0 in ./elf/./elf/dl-init.c:70. 14: call_init in ./elf/./elf/dl-init.c:33. 15: _dl_init in ./elf/./elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Invalid read of size 4. in ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 1: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:8712,performance,load,loadLibrary,8712," 14: call_init in ./elf/./elf/dl-init.c:33. 15: _dl_init in ./elf/./elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Invalid read of size 4. in ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 1: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 2: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 3: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 4: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 5: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 6: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 7: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:8881,performance,Load,LoadPCM,8881,"er in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Invalid read of size 4. in ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 1: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 2: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 3: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 4: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 5: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 6: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 7: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 8: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400. 9: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:11284,performance,Load,LoadPCM,11284,". 13: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 14: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 15: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 16: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 17: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 18: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 19: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 20: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 21: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 22: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. 23: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 24: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 25: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 26: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. Address 0x1053183c is 12 bytes inside a b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:18762,performance,Load,LoadPCM,18762,") in /opt/root_src/core/meta/src/TClass.cxx:6205. 6: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 7: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 8: TKey::CheckTObjectHashConsistency() const in /opt/root_src/io/io/inc/TKey.h:116. 9: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 10: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 11: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 12: THashList::AddLast(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:100. 13: TList::Add(TObject*) in /opt/root_src/core/cont/inc/TList.h:81. 14: TDirectoryFile::ReadKeys(bool) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1448. 15: TFile::Init(bool) in /opt/root_src/io/io/src/TFile.cxx:823. 16: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:127. 17: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 18: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 19: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 20: (anonymous namespace)::TriggerDiction",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:21364,performance,Load,LoadPCM,21364,"lue was created by a stack allocation 1: /home/userf/build/build-root-Desktop-Debug/lib/libCore.so. Conditional jump or move depends on uninitialised value(s). in THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TCollection::TCollection() in /opt/root_src/core/cont/inc/TCollection.h:152. 4: TSeqCollection::TSeqCollection() in /opt/root_src/core/cont/inc/TSeqCollection.h:33. 5: TList::TList() in /opt/root_src/core/cont/inc/TList.h:72. 6: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 7: TDirectoryFile::Close(char const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:592. 8: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:970. 9: TMemFile::~TMemFile() in /opt/root_src/io/io/src/TMemFile.cxx:240. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1865. 11: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDiction",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:22996,performance,error,error-skeleton,22996,"char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 14: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or move depends on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 4: TBufferIO::TBufferIO(TBuffer::EMod",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:23158,performance,error,error-skeleton,23158,"::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 14: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or move depends on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 4: TBufferIO::TBufferIO(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferIO.cxx:51. 5: TBufferFile::TBufferFile(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferFile.cxx:90. 6: TKey::Read",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:23313,performance,error,error-skeleton,23313,":2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 14: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or move depends on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 4: TBufferIO::TBufferIO(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferIO.cxx:51. 5: TBufferFile::TBufferFile(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferFile.cxx:90. 6: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1025. 7: TDirectoryFile::GetObjectChecked(char const*, TClass const*) in /opt/root_src/io/io/s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:23373,performance,error,error-skeleton,23373,"ation_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 14: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or move depends on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 4: TBufferIO::TBufferIO(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferIO.cxx:51. 5: TBufferFile::TBufferFile(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferFile.cxx:90. 6: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1025. 7: TDirectoryFile::GetObjectChecked(char const*, TClass const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1111. 8: void TDirectory::GetObject<TO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:24475,performance,Load,LoadPCMImpl,24475,") in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or move depends on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 4: TBufferIO::TBufferIO(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferIO.cxx:51. 5: TBufferFile::TBufferFile(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferFile.cxx:90. 6: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1025. 7: TDirectoryFile::GetObjectChecked(char const*, TClass const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1111. 8: void TDirectory::GetObject<TObjArray>(char const*, TObjArray*&) in /opt/root_src/core/base/inc/TDirectory.h:214. 9: TCling::LoadPCMImpl(TFile&) in /opt/root_src/core/metacling/src/TCling.cxx:1722. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1882. 11: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:24560,performance,Load,LoadPCM,24560,"s on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 4: TBufferIO::TBufferIO(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferIO.cxx:51. 5: TBufferFile::TBufferFile(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferFile.cxx:90. 6: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1025. 7: TDirectoryFile::GetObjectChecked(char const*, TClass const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1111. 8: void TDirectory::GetObject<TObjArray>(char const*, TObjArray*&) in /opt/root_src/core/base/inc/TDirectory.h:214. 9: TCling::LoadPCMImpl(TFile&) in /opt/root_src/core/metacling/src/TCling.cxx:1722. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1882. 11: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDiction",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:26105,performance,error,error-skeleton,26105,":2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_demoMem_C_ACLiC_dict_Impl() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:89. 14: (anonymous namespace)::DictInit::DictInit() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:97. 15: __static_initialization_and_destruction_0(int, int) in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:99. 16: _GLOBAL__sub_I_demoMem_C_ACLiC_dict.cxx in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:103. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1024. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TArchiveFile::ParseUrl(char const*, TString&, TString&, TStr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:26267,performance,error,error-skeleton,26267,"har, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_demoMem_C_ACLiC_dict_Impl() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:89. 14: (anonymous namespace)::DictInit::DictInit() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:97. 15: __static_initialization_and_destruction_0(int, int) in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:99. 16: _GLOBAL__sub_I_demoMem_C_ACLiC_dict.cxx in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:103. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1024. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:152. 5: TArchiveFile::Open(char const*, TFile*) in /opt/root_src/io/io/src/TArchiveFile.cxx:131. 6: TFile::TFile",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:26422,performance,error,error-skeleton,26422,"<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_demoMem_C_ACLiC_dict_Impl() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:89. 14: (anonymous namespace)::DictInit::DictInit() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:97. 15: __static_initialization_and_destruction_0(int, int) in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:99. 16: _GLOBAL__sub_I_demoMem_C_ACLiC_dict.cxx in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:103. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1024. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:152. 5: TArchiveFile::Open(char const*, TFile*) in /opt/root_src/io/io/src/TArchiveFile.cxx:131. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:397. 7: TMemFile::TMemFile(char const*, char*, long long, char const*, ch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:26482,performance,error,error-skeleton,26482,"src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_demoMem_C_ACLiC_dict_Impl() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:89. 14: (anonymous namespace)::DictInit::DictInit() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:97. 15: __static_initialization_and_destruction_0(int, int) in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:99. 16: _GLOBAL__sub_I_demoMem_C_ACLiC_dict.cxx in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:103. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1024. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:152. 5: TArchiveFile::Open(char const*, TFile*) in /opt/root_src/io/io/src/TArchiveFile.cxx:131. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:397. 7: TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:33713,performance,Time,Timer,33713,"int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 20: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 21: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 22: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3775. 96 bytes in 1 blocks are possibly lost in loss record 4,046 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:33746,performance,Time,Timer,33746,"src/TApplication.cxx:1710. 20: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 21: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 22: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3775. 96 bytes in 1 blocks are possibly lost in loss record 4,046 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:36314,performance,Time,Timer,36314,"ROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 96 bytes in 1 blocks are possibly lost in loss record 4,047 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:36347,performance,Time,Timer,36347,"e/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 96 bytes in 1 blocks are possibly lost in loss record 4,047 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:72913,performance,Load,LoadClassDefault,72913,"const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TClass::LoadClassDefault(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5779. 12: TClass::LoadClass(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5756. 13: TROOT::LoadClass(char const*, bool) const in /opt/root_src/core/base/src/TROOT.cxx:2130. 14: TClass::GetClass(ClassInfo_t*, bool, bool) in /opt/root_src/core/meta/src/TClass.cxx:3379. 15: TBaseClass::GetClassPointer(bool) in /opt/root_src/core/meta/src/TBaseClass.cxx:66. 16: TClass::GetBaseClass(TClass const*) in /opt/root_src/core/meta/src/TClass.cxx:2687. 17: TClass::InheritsFrom(TClass const*) const in /opt/root_src/core/meta/src/TClass.cxx:4905. 18: TClass::Property() const in /opt/root_src/core/meta/src/TClass.cxx:6111. 19: TClass::ClassProperty() const in /opt/root_src/core/meta/src/TClass.cxx:2398. 20: TIsAProxy::operator()(void const*) in /opt/root_src/core/meta/src/TIsAProxy.cxx:93. 21: TClass::GetActualClass(void const*) const in /opt/root_src/core/meta/src/TClass.cxx:2612. 22: TKey::TKey(void const*, TClass c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:73009,performance,Load,LoadClass,73009,"ssSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TClass::LoadClassDefault(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5779. 12: TClass::LoadClass(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5756. 13: TROOT::LoadClass(char const*, bool) const in /opt/root_src/core/base/src/TROOT.cxx:2130. 14: TClass::GetClass(ClassInfo_t*, bool, bool) in /opt/root_src/core/meta/src/TClass.cxx:3379. 15: TBaseClass::GetClassPointer(bool) in /opt/root_src/core/meta/src/TBaseClass.cxx:66. 16: TClass::GetBaseClass(TClass const*) in /opt/root_src/core/meta/src/TClass.cxx:2687. 17: TClass::InheritsFrom(TClass const*) const in /opt/root_src/core/meta/src/TClass.cxx:4905. 18: TClass::Property() const in /opt/root_src/core/meta/src/TClass.cxx:6111. 19: TClass::ClassProperty() const in /opt/root_src/core/meta/src/TClass.cxx:2398. 20: TIsAProxy::operator()(void const*) in /opt/root_src/core/meta/src/TIsAProxy.cxx:93. 21: TClass::GetActualClass(void const*) const in /opt/root_src/core/meta/src/TClass.cxx:2612. 22: TKey::TKey(void const*, TClass const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:312. 23: TFile::Cre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:73097,performance,Load,LoadClass,73097,"/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TClass::LoadClassDefault(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5779. 12: TClass::LoadClass(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5756. 13: TROOT::LoadClass(char const*, bool) const in /opt/root_src/core/base/src/TROOT.cxx:2130. 14: TClass::GetClass(ClassInfo_t*, bool, bool) in /opt/root_src/core/meta/src/TClass.cxx:3379. 15: TBaseClass::GetClassPointer(bool) in /opt/root_src/core/meta/src/TBaseClass.cxx:66. 16: TClass::GetBaseClass(TClass const*) in /opt/root_src/core/meta/src/TClass.cxx:2687. 17: TClass::InheritsFrom(TClass const*) const in /opt/root_src/core/meta/src/TClass.cxx:4905. 18: TClass::Property() const in /opt/root_src/core/meta/src/TClass.cxx:6111. 19: TClass::ClassProperty() const in /opt/root_src/core/meta/src/TClass.cxx:2398. 20: TIsAProxy::operator()(void const*) in /opt/root_src/core/meta/src/TIsAProxy.cxx:93. 21: TClass::GetActualClass(void const*) const in /opt/root_src/core/meta/src/TClass.cxx:2612. 22: TKey::TKey(void const*, TClass const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:312. 23: TFile::CreateKey(TDirectory*, void const*, TClass const*, char const*, int) in /opt/root_src/io/io",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:0,safety,Log,Log,0,"Log when running with valgrind:. ```. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:746. 5: TUnixSystem::OpenDirectory(char const*) in /opt/root_src/core/unix/src/TUnixSystem.cxx:1362. 6: TCling::LoadLibraryMap(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:5737. 7: TCling::Initialize() in /opt/root_src/core/metacling/src/TCling.cxx:1660. 8: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2116. 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 13: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:63,safety,depend,depends,63,"Log when running with valgrind:. ```. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:746. 5: TUnixSystem::OpenDirectory(char const*) in /opt/root_src/core/unix/src/TUnixSystem.cxx:1362. 6: TCling::LoadLibraryMap(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:5737. 7: TCling::Initialize() in /opt/root_src/core/metacling/src/TCling.cxx:1660. 8: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2116. 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 13: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:188,safety,Updat,UpdateIsOnHeap,188,"Log when running with valgrind:. ```. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:746. 5: TUnixSystem::OpenDirectory(char const*) in /opt/root_src/core/unix/src/TUnixSystem.cxx:1362. 6: TCling::LoadLibraryMap(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:5737. 7: TCling::Initialize() in /opt/root_src/core/metacling/src/TCling.cxx:1660. 8: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2116. 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 13: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:1478,safety,depend,depends,1478,"*, void*) in /opt/root_src/core/base/src/TSystem.cxx:746. 5: TUnixSystem::OpenDirectory(char const*) in /opt/root_src/core/unix/src/TUnixSystem.cxx:1362. 6: TCling::LoadLibraryMap(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:5737. 7: TCling::Initialize() in /opt/root_src/core/metacling/src/TCling.cxx:1660. 8: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2116. 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 13: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:177. 6: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 7: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:346. Conditional jump or move depends on uninitialised value(s). in TDirectory::TDirectory() in ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:1603,safety,Updat,UpdateIsOnHeap,1603,"src/TUnixSystem.cxx:1362. 6: TCling::LoadLibraryMap(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:5737. 7: TCling::Initialize() in /opt/root_src/core/metacling/src/TCling.cxx:1660. 8: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2116. 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 13: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:177. 6: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 7: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:346. Conditional jump or move depends on uninitialised value(s). in TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:2416,safety,depend,depends,2416,"c/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:177. 6: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 7: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:346. Conditional jump or move depends on uninitialised value(s). in TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed() in /opt/root_src/core/base/inc/TNamed.h:36. 4: TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 5: TDirectoryFile::TDirectoryFile() in /opt/root_src/io/io/src/TDirectoryFile.cxx:61. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 7: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 8: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 9: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:2542,safety,Updat,UpdateIsOnHeap,2542,"/opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:177. 6: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 7: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:346. Conditional jump or move depends on uninitialised value(s). in TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed() in /opt/root_src/core/base/inc/TNamed.h:36. 4: TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 5: TDirectoryFile::TDirectoryFile() in /opt/root_src/io/io/src/TDirectoryFile.cxx:61. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 7: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 8: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 9: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocato",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:4811,safety,error,error-skeleton,4811,"char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 11: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 12: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 13: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 14: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:4973,safety,error,error-skeleton,4973,"::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 11: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 12: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 13: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 14: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:5128,safety,error,error-skeleton,5128,":2566. 11: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 12: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 13: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 14: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 5: TMemFile::TMemFile(char const*, TMemFi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:5188,safety,error,error-skeleton,5188,"ation_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 12: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 13: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 14: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 5: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:5606,safety,depend,depends,5606,"t/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 5: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 6: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 7: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:5731,safety,Updat,UpdateIsOnHeap,5731," in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 5: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 6: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 7: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_sr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:7847,safety,error,error-skeleton,7847," char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 9: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 10: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 11: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 12: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 13: call_init.part.0 in ./elf/./elf/dl-init.c:70. 14: call_init in ./elf/./elf/dl-init.c:33. 15: _dl_init in ./elf/./elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. Uninitialised value was created by a s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:8009,safety,error,error-skeleton,8009,"d::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 9: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 10: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 11: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 12: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 13: call_init.part.0 in ./elf/./elf/dl-init.c:70. 14: call_init in ./elf/./elf/dl-init.c:33. 15: _dl_init in ./elf/./elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:8164,safety,error,error-skeleton,8164,"x:2566. 9: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 10: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 11: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 12: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 13: call_init.part.0 in ./elf/./elf/dl-init.c:70. 14: call_init in ./elf/./elf/dl-init.c:33. 15: _dl_init in ./elf/./elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Invalid read of size 4. in ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 1: ROOT::Internal::DeleteChange",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:8224,safety,error,error-skeleton,8224,"ation_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 10: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 11: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 12: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 13: call_init.part.0 in ./elf/./elf/dl-init.c:70. 14: call_init in ./elf/./elf/dl-init.c:33. 15: _dl_init in ./elf/./elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Invalid read of size 4. in ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 1: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:17103,safety,depend,depends,17103,":HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 17: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 18: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 19: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 20: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 21: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 22: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 23: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 24: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 25: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. 26: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. Conditional jump or move depends on uninitialised value(s). in TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:53. 4: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:241. 5: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 6: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 7: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 8: TKey::CheckTObjectHashConsistency() const in /opt/root_src/io/io/inc/TKey.h:116. 9: TObject::CheckedHash()",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:17233,safety,Updat,UpdateIsOnHeap,17233,"root_src/core/meta/src/TClass.cxx:7373. 18: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 19: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 20: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 21: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 22: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 23: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 24: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 25: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. 26: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. Conditional jump or move depends on uninitialised value(s). in TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:53. 4: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:241. 5: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 6: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 7: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 8: TKey::CheckTObjectHashConsistency() const in /opt/root_src/io/io/inc/TKey.h:116. 9: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 10: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:20493,safety,depend,depends,20493,"<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 20: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 21: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 22: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 23: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 24: call_init.part.0 in ./elf/./elf/dl-init.c:70. 25: call_init in ./elf/./elf/dl-init.c:33. 26: _dl_init in ./elf/./elf/dl-init.c:117. Uninitialised value was created by a stack allocation 1: /home/userf/build/build-root-Desktop-Debug/lib/libCore.so. Conditional jump or move depends on uninitialised value(s). in THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TCollection::TCollection() in /opt/root_src/core/cont/inc/TCollection.h:152. 4: TSeqCollection::TSeqCollection() in /opt/root_src/core/cont/inc/TSeqCollection.h:33. 5: TList::TList() in /opt/root_src/core/cont/inc/TList.h:72. 6: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 7: TDirectoryFile::Close(char const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:592. 8: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:970. 9: TMemFile::~TMemFile() in /opt/root_src/io/io/src/TMemFile.cxx:240. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:20625,safety,Updat,UpdateIsOnHeap,20625,"char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 20: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 21: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 22: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 23: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 24: call_init.part.0 in ./elf/./elf/dl-init.c:70. 25: call_init in ./elf/./elf/dl-init.c:33. 26: _dl_init in ./elf/./elf/dl-init.c:117. Uninitialised value was created by a stack allocation 1: /home/userf/build/build-root-Desktop-Debug/lib/libCore.so. Conditional jump or move depends on uninitialised value(s). in THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TCollection::TCollection() in /opt/root_src/core/cont/inc/TCollection.h:152. 4: TSeqCollection::TSeqCollection() in /opt/root_src/core/cont/inc/TSeqCollection.h:33. 5: TList::TList() in /opt/root_src/core/cont/inc/TList.h:72. 6: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 7: TDirectoryFile::Close(char const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:592. 8: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:970. 9: TMemFile::~TMemFile() in /opt/root_src/io/io/src/TMemFile.cxx:240. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1865. 11: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pai",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:22996,safety,error,error-skeleton,22996,"char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 14: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or move depends on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 4: TBufferIO::TBufferIO(TBuffer::EMod",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:23158,safety,error,error-skeleton,23158,"::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 14: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or move depends on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 4: TBufferIO::TBufferIO(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferIO.cxx:51. 5: TBufferFile::TBufferFile(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferFile.cxx:90. 6: TKey::Read",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:23313,safety,error,error-skeleton,23313,":2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 14: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or move depends on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 4: TBufferIO::TBufferIO(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferIO.cxx:51. 5: TBufferFile::TBufferFile(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferFile.cxx:90. 6: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1025. 7: TDirectoryFile::GetObjectChecked(char const*, TClass const*) in /opt/root_src/io/io/s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:23373,safety,error,error-skeleton,23373,"ation_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 14: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or move depends on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 4: TBufferIO::TBufferIO(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferIO.cxx:51. 5: TBufferFile::TBufferFile(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferFile.cxx:90. 6: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1025. 7: TDirectoryFile::GetObjectChecked(char const*, TClass const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1111. 8: void TDirectory::GetObject<TO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:23558,safety,depend,depends,23558,"ug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or move depends on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 4: TBufferIO::TBufferIO(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferIO.cxx:51. 5: TBufferFile::TBufferFile(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferFile.cxx:90. 6: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1025. 7: TDirectoryFile::GetObjectChecked(char const*, TClass const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1111. 8: void TDirectory::GetObject<TObjArray>(char const*, TObjArray*&) in /opt/root_src/core/base/inc/TDirectory.h:214. 9: TCling::LoadPCMImpl(TFile&) in /opt/root_src/core/metacling/src/TCling.cxx:1722. 10: TCling::Lo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:23694,safety,Updat,UpdateIsOnHeap,23694,"__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or move depends on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 4: TBufferIO::TBufferIO(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferIO.cxx:51. 5: TBufferFile::TBufferFile(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferFile.cxx:90. 6: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1025. 7: TDirectoryFile::GetObjectChecked(char const*, TClass const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1111. 8: void TDirectory::GetObject<TObjArray>(char const*, TObjArray*&) in /opt/root_src/core/base/inc/TDirectory.h:214. 9: TCling::LoadPCMImpl(TFile&) in /opt/root_src/core/metacling/src/TCling.cxx:1722. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1882.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:26105,safety,error,error-skeleton,26105,":2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_demoMem_C_ACLiC_dict_Impl() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:89. 14: (anonymous namespace)::DictInit::DictInit() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:97. 15: __static_initialization_and_destruction_0(int, int) in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:99. 16: _GLOBAL__sub_I_demoMem_C_ACLiC_dict.cxx in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:103. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1024. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TArchiveFile::ParseUrl(char const*, TString&, TString&, TStr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:26267,safety,error,error-skeleton,26267,"har, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_demoMem_C_ACLiC_dict_Impl() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:89. 14: (anonymous namespace)::DictInit::DictInit() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:97. 15: __static_initialization_and_destruction_0(int, int) in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:99. 16: _GLOBAL__sub_I_demoMem_C_ACLiC_dict.cxx in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:103. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1024. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:152. 5: TArchiveFile::Open(char const*, TFile*) in /opt/root_src/io/io/src/TArchiveFile.cxx:131. 6: TFile::TFile",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:26422,safety,error,error-skeleton,26422,"<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_demoMem_C_ACLiC_dict_Impl() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:89. 14: (anonymous namespace)::DictInit::DictInit() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:97. 15: __static_initialization_and_destruction_0(int, int) in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:99. 16: _GLOBAL__sub_I_demoMem_C_ACLiC_dict.cxx in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:103. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1024. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:152. 5: TArchiveFile::Open(char const*, TFile*) in /opt/root_src/io/io/src/TArchiveFile.cxx:131. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:397. 7: TMemFile::TMemFile(char const*, char*, long long, char const*, ch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:26482,safety,error,error-skeleton,26482,"src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_demoMem_C_ACLiC_dict_Impl() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:89. 14: (anonymous namespace)::DictInit::DictInit() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:97. 15: __static_initialization_and_destruction_0(int, int) in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:99. 16: _GLOBAL__sub_I_demoMem_C_ACLiC_dict.cxx in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:103. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1024. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:152. 5: TArchiveFile::Open(char const*, TFile*) in /opt/root_src/io/io/src/TArchiveFile.cxx:131. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:397. 7: TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:26663,safety,depend,depends,26663,"namespace)::DictInit::DictInit() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:97. 15: __static_initialization_and_destruction_0(int, int) in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:99. 16: _GLOBAL__sub_I_demoMem_C_ACLiC_dict.cxx in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:103. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1024. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:152. 5: TArchiveFile::Open(char const*, TFile*) in /opt/root_src/io/io/src/TArchiveFile.cxx:131. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:397. 7: TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFile.cxx:173. 8: TMemFile::TMemFile(char const*, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFile.cxx:163. 9: std::_MakeUniq<TMemFile>::__single_object",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:26788,safety,Updat,UpdateIsOnHeap,26788,"t) in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:99. 16: _GLOBAL__sub_I_demoMem_C_ACLiC_dict.cxx in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:103. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1024. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:152. 5: TArchiveFile::Open(char const*, TFile*) in /opt/root_src/io/io/src/TArchiveFile.cxx:131. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:397. 7: TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFile.cxx:173. 8: TMemFile::TMemFile(char const*, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFile.cxx:163. 9: std::_MakeUniq<TMemFile>::__single_object std::make_unique<TMemFile, char const (&) [9], char const (&) [9]>(char const (&) [9], char const (&) [9]) in /usr/include/c++/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:30174,safety,depend,depends,30174,"ing.cxx:2438. 18: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 19: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 20: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 21: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 22: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 23: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 24: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 25: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:151. Conditional jump or move depends on uninitialised value(s). in TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed(char const*, char const*) in /opt/root_src/core/base/inc/TNamed.h:37. 4: TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 5: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3837. 6: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:952. 7: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:48. 8: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 9: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:30324,safety,Updat,UpdateIsOnHeap,30324,"eSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 20: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 21: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 22: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 23: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 24: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 25: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:151. Conditional jump or move depends on uninitialised value(s). in TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed(char const*, char const*) in /opt/root_src/core/base/inc/TNamed.h:37. 4: TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 5: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3837. 6: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:952. 7: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:48. 8: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 9: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 10: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:33581,safety,Modul,ModuleFileExtension,33581,"r const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 19: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 20: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 21: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 22: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3775. 96 bytes in 1 blocks are possibly lost in loss record 4,046 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:34052,safety,Modul,ModuleFileExtension,34052,"teStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3775. 96 bytes in 1 blocks are possibly lost in loss record 4,046 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char cons",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:34112,safety,Modul,ModuleFileExtension,34112,"96 bytes in 1 blocks are possibly lost in loss record 4,046 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacli",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:34356,safety,Modul,ModuleFileExtension,34356,"grind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:34416,safety,Modul,ModuleFileExtension,34416,"::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:34708,safety,Modul,ModuleFileExtension,34708,", std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:34768,safety,Modul,ModuleFileExtension,34768,"uild-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 96 bytes in 1 blocks are possibly lost in loss record 4",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:34881,safety,Modul,ModuleFileExtension,34881,"serf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 96 bytes in 1 blocks are possibly lost in loss record 4,047 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metac",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:34941,safety,Modul,ModuleFileExtension,34941,"g::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 96 bytes in 1 blocks are possibly lost in loss record 4,047 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:36182,safety,Modul,ModuleFileExtension,36182,"acling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 96 bytes in 1 blocks are possibly lost in loss record 4,047 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:36653,safety,Modul,ModuleFileExtension,36653,"t.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 96 bytes in 1 blocks are possibly lost in loss record 4,047 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char cons",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:36713,safety,Modul,ModuleFileExtension,36713,"96 bytes in 1 blocks are possibly lost in loss record 4,047 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacli",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:36957,safety,Modul,ModuleFileExtension,36957,"grind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:37017,safety,Modul,ModuleFileExtension,37017,"::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:37309,safety,Modul,ModuleFileExtension,37309,", std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:37369,safety,Modul,ModuleFileExtension,37369,"uild-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 112 bytes in 1 blocks are definitely lost in loss recor",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:37482,safety,Modul,ModuleFileExtension,37482,"serf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 112 bytes in 1 blocks are definitely lost in loss record 4,249 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacli",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:37542,safety,Modul,ModuleFileExtension,37542,"g::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 112 bytes in 1 blocks are definitely lost in loss record 4,249 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/v",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:0,security,Log,Log,0,"Log when running with valgrind:. ```. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:746. 5: TUnixSystem::OpenDirectory(char const*) in /opt/root_src/core/unix/src/TUnixSystem.cxx:1362. 6: TCling::LoadLibraryMap(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:5737. 7: TCling::Initialize() in /opt/root_src/core/metacling/src/TCling.cxx:1660. 8: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2116. 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 13: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:188,security,Updat,UpdateIsOnHeap,188,"Log when running with valgrind:. ```. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:746. 5: TUnixSystem::OpenDirectory(char const*) in /opt/root_src/core/unix/src/TUnixSystem.cxx:1362. 6: TCling::LoadLibraryMap(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:5737. 7: TCling::Initialize() in /opt/root_src/core/metacling/src/TCling.cxx:1660. 8: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2116. 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 13: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:1603,security,Updat,UpdateIsOnHeap,1603,"src/TUnixSystem.cxx:1362. 6: TCling::LoadLibraryMap(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:5737. 7: TCling::Initialize() in /opt/root_src/core/metacling/src/TCling.cxx:1660. 8: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2116. 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 13: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:177. 6: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 7: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:346. Conditional jump or move depends on uninitialised value(s). in TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:2542,security,Updat,UpdateIsOnHeap,2542,"/opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:177. 6: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 7: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:346. Conditional jump or move depends on uninitialised value(s). in TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed() in /opt/root_src/core/base/inc/TNamed.h:36. 4: TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 5: TDirectoryFile::TDirectoryFile() in /opt/root_src/io/io/src/TDirectoryFile.cxx:61. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 7: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 8: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 9: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocato",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:5731,security,Updat,UpdateIsOnHeap,5731," in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 5: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 6: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 7: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_sr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:17233,security,Updat,UpdateIsOnHeap,17233,"root_src/core/meta/src/TClass.cxx:7373. 18: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 19: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 20: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 21: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 22: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 23: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 24: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 25: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. 26: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. Conditional jump or move depends on uninitialised value(s). in TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:53. 4: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:241. 5: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 6: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 7: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 8: TKey::CheckTObjectHashConsistency() const in /opt/root_src/io/io/inc/TKey.h:116. 9: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 10: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:20625,security,Updat,UpdateIsOnHeap,20625,"char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 20: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 21: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 22: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 23: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 24: call_init.part.0 in ./elf/./elf/dl-init.c:70. 25: call_init in ./elf/./elf/dl-init.c:33. 26: _dl_init in ./elf/./elf/dl-init.c:117. Uninitialised value was created by a stack allocation 1: /home/userf/build/build-root-Desktop-Debug/lib/libCore.so. Conditional jump or move depends on uninitialised value(s). in THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TCollection::TCollection() in /opt/root_src/core/cont/inc/TCollection.h:152. 4: TSeqCollection::TSeqCollection() in /opt/root_src/core/cont/inc/TSeqCollection.h:33. 5: TList::TList() in /opt/root_src/core/cont/inc/TList.h:72. 6: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 7: TDirectoryFile::Close(char const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:592. 8: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:970. 9: TMemFile::~TMemFile() in /opt/root_src/io/io/src/TMemFile.cxx:240. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1865. 11: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pai",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:23694,security,Updat,UpdateIsOnHeap,23694,"__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or move depends on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 4: TBufferIO::TBufferIO(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferIO.cxx:51. 5: TBufferFile::TBufferFile(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferFile.cxx:90. 6: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1025. 7: TDirectoryFile::GetObjectChecked(char const*, TClass const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1111. 8: void TDirectory::GetObject<TObjArray>(char const*, TObjArray*&) in /opt/root_src/core/base/inc/TDirectory.h:214. 9: TCling::LoadPCMImpl(TFile&) in /opt/root_src/core/metacling/src/TCling.cxx:1722. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1882.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:26788,security,Updat,UpdateIsOnHeap,26788,"t) in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:99. 16: _GLOBAL__sub_I_demoMem_C_ACLiC_dict.cxx in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:103. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1024. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:152. 5: TArchiveFile::Open(char const*, TFile*) in /opt/root_src/io/io/src/TArchiveFile.cxx:131. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:397. 7: TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFile.cxx:173. 8: TMemFile::TMemFile(char const*, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFile.cxx:163. 9: std::_MakeUniq<TMemFile>::__single_object std::make_unique<TMemFile, char const (&) [9], char const (&) [9]>(char const (&) [9], char const (&) [9]) in /usr/include/c++/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:30324,security,Updat,UpdateIsOnHeap,30324,"eSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 20: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 21: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 22: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 23: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 24: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 25: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:151. Conditional jump or move depends on uninitialised value(s). in TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed(char const*, char const*) in /opt/root_src/core/base/inc/TNamed.h:37. 4: TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 5: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3837. 6: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:952. 7: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:48. 8: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 9: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 10: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:33164,security,loss,loss,33164,"oot_src/core/metacling/src/TCling.cxx:2438. 15: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 16: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 17: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 18: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 19: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 20: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 21: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 22: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3775. 96 bytes in 1 blocks are possibly lost in loss record 4,046 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:35765,security,loss,loss,35765,":ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 96 bytes in 1 blocks are possibly lost in loss record 4,047 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:38369,security,loss,loss,38369,"duleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 112 bytes in 1 blocks are definitely lost in loss record 4,249 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassS",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:38973,security,Ident,IdentifierInfo,38973,"::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 112 bytes in 1 blocks are definitely lost in loss record 4,249 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:39817,security,hash,hash,39817,"ib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 12: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 13: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 14: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 15: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:42474,security,loss,loss,42474,"-root-Desktop-Debug/lib/libCling.so. 19: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 21: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 22: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 23: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 24: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 25: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 112 bytes in 1 blocks are definitely lost in loss record 4,250 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:43095,security,Ident,IdentifierInfo,43095,"23: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 24: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 25: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 112 bytes in 1 blocks are definitely lost in loss record 4,250 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::ClassInfo_Factory(char const*) const in /opt/root_src/core/metacling/src/TCling.cxx:8175. 8: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:43864,security,hash,hash,43864,"UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::ClassInfo_Factory(char const*) const in /opt/root_src/core/metacling/src/TCling.cxx:8175. 8: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6191. 9: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 10: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 11: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 12: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 13: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 14: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:46623,security,loss,loss,46623,"ter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 20: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 21: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 22: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 23: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 24: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 25: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 112 bytes in 1 blocks are definitely lost in loss record 4,251 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:47212,security,Ident,IdentifierInfo,47212,"/core/base/src/TApplication.cxx:1865. 23: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 24: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 25: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 112 bytes in 1 blocks are definitely lost in loss record 4,251 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:50710,security,loss,loss,50710,"sktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,252 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:51331,security,Ident,IdentifierInfo,51331,"ne(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,252 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:54845,security,loss,loss,54845,"g::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 23: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 24: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 25: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 112 bytes in 1 blocks are definitely lost in loss record 4,253 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:55434,security,Ident,IdentifierInfo,55434,"har const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 24: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 25: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 112 bytes in 1 blocks are definitely lost in loss record 4,253 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:58866,security,loss,loss,58866,"s<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 23: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,254 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:59487,security,Ident,IdentifierInfo,59487,"rocessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,254 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:62935,security,loss,loss,62935,"sktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,255 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:63524,security,Ident,IdentifierInfo,63524,".cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,255 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:66951,security,loss,loss,66951,"s<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 23: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,256 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:67572,security,Ident,IdentifierInfo,67572,"rocessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,256 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:71015,security,loss,loss,71015,"sktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 448 bytes in 3 blocks are definitely lost in loss record 4,858 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassS",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:71619,security,Ident,IdentifierInfo,71619,"TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 448 bytes in 3 blocks are definitely lost in loss record 4,858 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:72463,security,hash,hash,72463,"ib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TClass::LoadClassDefault(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5779. 12: TClass::LoadClass(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5756. 13: TROOT::LoadClass(char const*, bool) const in /opt/root_src/core/base/src/TROOT.cxx:2130. 14: TClass::GetClass(ClassInfo_t*, bool, bool) in /opt/root_src/core/meta/src/TClass.cxx:3379. 15: TBaseClass::GetClassPointer(bool) in /opt/root_src/core/meta/src/TBaseClass.cxx:66. 16: TClass::GetBaseClass(TClass const*) in /opt/root_src/core/meta/src/TClass.cxx:2687. 17: TClass::Inh",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:0,testability,Log,Log,0,"Log when running with valgrind:. ```. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:746. 5: TUnixSystem::OpenDirectory(char const*) in /opt/root_src/core/unix/src/TUnixSystem.cxx:1362. 6: TCling::LoadLibraryMap(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:5737. 7: TCling::Initialize() in /opt/root_src/core/metacling/src/TCling.cxx:1660. 8: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2116. 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 13: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:63,testability,depend,depends,63,"Log when running with valgrind:. ```. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:746. 5: TUnixSystem::OpenDirectory(char const*) in /opt/root_src/core/unix/src/TUnixSystem.cxx:1362. 6: TCling::LoadLibraryMap(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:5737. 7: TCling::Initialize() in /opt/root_src/core/metacling/src/TCling.cxx:1660. 8: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2116. 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 13: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:1478,testability,depend,depends,1478,"*, void*) in /opt/root_src/core/base/src/TSystem.cxx:746. 5: TUnixSystem::OpenDirectory(char const*) in /opt/root_src/core/unix/src/TUnixSystem.cxx:1362. 6: TCling::LoadLibraryMap(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:5737. 7: TCling::Initialize() in /opt/root_src/core/metacling/src/TCling.cxx:1660. 8: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2116. 9: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 10: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 11: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 12: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 13: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TSystem::FindHelper(char const*, void*) in /opt/root_src/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:177. 6: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 7: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:346. Conditional jump or move depends on uninitialised value(s). in TDirectory::TDirectory() in ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:2416,testability,depend,depends,2416,"c/core/base/src/TSystem.cxx:734. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:479. 5: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:177. 6: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 7: main in /opt/root_src/main/src/rmain.cxx:81. Uninitialised value was created by a stack allocation 1: TApplication::GetOptions(int*, char**) in /opt/root_src/core/base/src/TApplication.cxx:346. Conditional jump or move depends on uninitialised value(s). in TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed() in /opt/root_src/core/base/inc/TNamed.h:36. 4: TDirectory::TDirectory() in /opt/root_src/core/base/src/TDirectory.cxx:53. 5: TDirectoryFile::TDirectoryFile() in /opt/root_src/io/io/src/TDirectoryFile.cxx:61. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 7: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 8: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 9: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:5606,testability,depend,depends,5606,"t/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 5: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. 6: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 7: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:17103,testability,depend,depends,17103,":HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 17: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 18: TPair::CheckTObjectHashConsistency() const in /opt/root_src/core/cont/inc/TMap.h:124. 19: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341. 20: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95. 21: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96. 22: TMap::Add(TObject*, TObject*) in /opt/root_src/core/cont/src/TMap.cxx:66. 23: TUrl::ParseOptions() const in /opt/root_src/core/base/src/TUrl.cxx:645. 24: TUrl::HasOption(char const*) const in /opt/root_src/core/base/src/TUrl.cxx:686. 25: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:378. 26: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114. Conditional jump or move depends on uninitialised value(s). in TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::TCheckHashRecursiveRemoveConsistency() in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:53. 4: ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check(TClass&) in /opt/root_src/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:241. 5: TClass::SetRuntimeProperties() in /opt/root_src/core/meta/src/TClass.cxx:6205. 6: TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502. 7: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373. 8: TKey::CheckTObjectHashConsistency() const in /opt/root_src/io/io/inc/TKey.h:116. 9: TObject::CheckedHash()",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:20493,testability,depend,depends,20493,"<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 20: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 21: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 22: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 23: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 24: call_init.part.0 in ./elf/./elf/dl-init.c:70. 25: call_init in ./elf/./elf/dl-init.c:33. 26: _dl_init in ./elf/./elf/dl-init.c:117. Uninitialised value was created by a stack allocation 1: /home/userf/build/build-root-Desktop-Debug/lib/libCore.so. Conditional jump or move depends on uninitialised value(s). in THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TCollection::TCollection() in /opt/root_src/core/cont/inc/TCollection.h:152. 4: TSeqCollection::TSeqCollection() in /opt/root_src/core/cont/inc/TSeqCollection.h:33. 5: TList::TList() in /opt/root_src/core/cont/inc/TList.h:72. 6: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 7: TDirectoryFile::Close(char const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:592. 8: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:970. 9: TMemFile::~TMemFile() in /opt/root_src/io/io/src/TMemFile.cxx:240. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:23558,testability,depend,depends,23558,"ug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or move depends on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 4: TBufferIO::TBufferIO(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferIO.cxx:51. 5: TBufferFile::TBufferFile(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferFile.cxx:90. 6: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1025. 7: TDirectoryFile::GetObjectChecked(char const*, TClass const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1111. 8: void TDirectory::GetObject<TObjArray>(char const*, TObjArray*&) in /opt/root_src/core/base/inc/TDirectory.h:214. 9: TCling::LoadPCMImpl(TFile&) in /opt/root_src/core/metacling/src/TCling.cxx:1722. 10: TCling::Lo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:26663,testability,depend,depends,26663,"namespace)::DictInit::DictInit() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:97. 15: __static_initialization_and_destruction_0(int, int) in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:99. 16: _GLOBAL__sub_I_demoMem_C_ACLiC_dict.cxx in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:103. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1024. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:152. 5: TArchiveFile::Open(char const*, TFile*) in /opt/root_src/io/io/src/TArchiveFile.cxx:131. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:397. 7: TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFile.cxx:173. 8: TMemFile::TMemFile(char const*, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFile.cxx:163. 9: std::_MakeUniq<TMemFile>::__single_object",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:30174,testability,depend,depends,30174,"ing.cxx:2438. 18: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 19: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 20: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 21: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 22: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 23: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 24: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 25: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:151. Conditional jump or move depends on uninitialised value(s). in TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed(char const*, char const*) in /opt/root_src/core/base/inc/TNamed.h:37. 4: TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 5: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3837. 6: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:952. 7: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:48. 8: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 9: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:4224,usability,user,userf,4224,"har_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 9: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 10: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 11: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 12: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 13: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 14: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:4343,usability,user,userf,4343,"e(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 10: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 11: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 12: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 13: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 14: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:4470,usability,user,userf,4470,"ng<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 10: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 11: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 12: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 13: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 14: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:4571,usability,user,userf,4571,":basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 10: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 11: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 12: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 13: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 14: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:4811,usability,error,error-skeleton,4811,"char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 11: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 12: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 13: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 14: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:4973,usability,error,error-skeleton,4973,"::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 11: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 12: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 13: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 14: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:5128,usability,error,error-skeleton,5128,":2566. 11: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 12: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 13: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 14: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 5: TMemFile::TMemFile(char const*, TMemFi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:5188,usability,error,error-skeleton,5188,"ation_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 12: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 13: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 14: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 15: call_init.part.0 in ./elf/./elf/dl-init.c:70. 16: call_init in ./elf/./elf/dl-init.c:33. 17: _dl_init in ./elf/./elf/dl-init.c:117. 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 19: dl_open_worker in ./elf/./elf/dl-open.c:808. 20: dl_open_worker in ./elf/./elf/dl-open.c:771. 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 22: _dl_open in ./elf/./elf/dl-open.c:883. 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331. 5: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:7260,usability,user,userf,7260,":char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 7: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 8: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 9: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 10: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 11: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 12: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 13: call_init.part.0 in ./elf/./elf/dl-init.c:70. 14: call_init in ./elf/./elf/dl-init.c:33. 15: _dl_init in ./elf/./elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:7379,usability,user,userf,7379,"ule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 8: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 9: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 10: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 11: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 12: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 13: call_init.part.0 in ./elf/./elf/dl-init.c:70. 14: call_init in ./elf/./elf/dl-init.c:33. 15: _dl_init in ./elf/./elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:7506,usability,user,userf,7506,"ring<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 8: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 9: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 10: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 11: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 12: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 13: call_init.part.0 in ./elf/./elf/dl-init.c:70. 14: call_init in ./elf/./elf/dl-init.c:33. 15: _dl_init in ./elf/./elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::al",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:7607,usability,user,userf,7607,"1::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 8: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 9: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 10: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 11: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 12: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 13: call_init.part.0 in ./elf/./elf/dl-init.c:70. 14: call_init in ./elf/./elf/dl-init.c:33. 15: _dl_init in ./elf/./elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:7847,usability,error,error-skeleton,7847," char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 9: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 10: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 11: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 12: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 13: call_init.part.0 in ./elf/./elf/dl-init.c:70. 14: call_init in ./elf/./elf/dl-init.c:33. 15: _dl_init in ./elf/./elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. Uninitialised value was created by a s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:8009,usability,error,error-skeleton,8009,"d::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 9: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 10: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 11: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 12: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 13: call_init.part.0 in ./elf/./elf/dl-init.c:70. 14: call_init in ./elf/./elf/dl-init.c:33. 15: _dl_init in ./elf/./elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:8164,usability,error,error-skeleton,8164,"x:2566. 9: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 10: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 11: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 12: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 13: call_init.part.0 in ./elf/./elf/dl-init.c:70. 14: call_init in ./elf/./elf/dl-init.c:33. 15: _dl_init in ./elf/./elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Invalid read of size 4. in ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 1: ROOT::Internal::DeleteChange",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:8224,usability,error,error-skeleton,8224,"ation_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 10: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 11: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 12: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 13: call_init.part.0 in ./elf/./elf/dl-init.c:70. 14: call_init in ./elf/./elf/dl-init.c:33. 15: _dl_init in ./elf/./elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Invalid read of size 4. in ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 1: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:8624,usability,user,userf,8624,"ot-Desktop-Debug/net/net/G__Net.cxx:3637. 13: call_init.part.0 in ./elf/./elf/dl-init.c:70. 14: call_init in ./elf/./elf/dl-init.c:33. 15: _dl_init in ./elf/./elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Invalid read of size 4. in ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 1: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 2: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 3: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 4: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 5: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 6: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:8762,usability,user,userf,8762," _dl_init in ./elf/./elf/dl-init.c:117. 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 17: dl_open_worker in ./elf/./elf/dl-open.c:808. 18: dl_open_worker in ./elf/./elf/dl-open.c:771. 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 20: _dl_open in ./elf/./elf/dl-open.c:883. 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138. 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71. 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81. 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Invalid read of size 4. in ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 1: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120. 2: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129. 3: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405. 4: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646. 5: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829. 6: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335. 7: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463. 8: ROOT::CallRecursiveRemoveIfNeeded(TOb",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:19807,usability,user,userf,19807,"ar_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852. 18: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 19: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 20: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 21: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 22: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 23: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 24: call_init.part.0 in ./elf/./elf/dl-init.c:70. 25: call_init in ./elf/./elf/dl-init.c:33. 26: _dl_init in ./elf/./elf/dl-init.c:117. Uninitialised value was created by a stack allocation 1: /home/userf/build/build-root-Desktop-Debug/lib/libCore.so. Conditional jump or move depends on uninitialised value(s). in THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:19926,usability,user,userf,19926,"e(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 19: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 20: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 21: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 22: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 23: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 24: call_init.part.0 in ./elf/./elf/dl-init.c:70. 25: call_init in ./elf/./elf/dl-init.c:33. 26: _dl_init in ./elf/./elf/dl-init.c:117. Uninitialised value was created by a stack allocation 1: /home/userf/build/build-root-Desktop-Debug/lib/libCore.so. Conditional jump or move depends on uninitialised value(s). in THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TCollection::TCollection() in /opt/root_src/core/cont/inc/TCollection.h:152. 4: TSeqCollection::TSeqCollection() in /",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:20053,usability,user,userf,20053,"ng<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 19: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 20: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 21: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 22: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 23: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 24: call_init.part.0 in ./elf/./elf/dl-init.c:70. 25: call_init in ./elf/./elf/dl-init.c:33. 26: _dl_init in ./elf/./elf/dl-init.c:117. Uninitialised value was created by a stack allocation 1: /home/userf/build/build-root-Desktop-Debug/lib/libCore.so. Conditional jump or move depends on uninitialised value(s). in THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TCollection::TCollection() in /opt/root_src/core/cont/inc/TCollection.h:152. 4: TSeqCollection::TSeqCollection() in /opt/root_src/core/cont/inc/TSeqCollection.h:33. 5: TList::TList() in /opt/root_src/core/cont/inc/TList.h:72. 6: THashList::Dele",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:20154,usability,user,userf,20154,":basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 19: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 20: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 21: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 22: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 23: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 24: call_init.part.0 in ./elf/./elf/dl-init.c:70. 25: call_init in ./elf/./elf/dl-init.c:33. 26: _dl_init in ./elf/./elf/dl-init.c:117. Uninitialised value was created by a stack allocation 1: /home/userf/build/build-root-Desktop-Debug/lib/libCore.so. Conditional jump or move depends on uninitialised value(s). in THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TCollection::TCollection() in /opt/root_src/core/cont/inc/TCollection.h:152. 4: TSeqCollection::TSeqCollection() in /opt/root_src/core/cont/inc/TSeqCollection.h:33. 5: TList::TList() in /opt/root_src/core/cont/inc/TList.h:72. 6: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 7: TDirectoryFile::Close(char const",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:20415,usability,user,userf,20415," (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 20: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 21: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 22: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 23: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 24: call_init.part.0 in ./elf/./elf/dl-init.c:70. 25: call_init in ./elf/./elf/dl-init.c:33. 26: _dl_init in ./elf/./elf/dl-init.c:117. Uninitialised value was created by a stack allocation 1: /home/userf/build/build-root-Desktop-Debug/lib/libCore.so. Conditional jump or move depends on uninitialised value(s). in THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TCollection::TCollection() in /opt/root_src/core/cont/inc/TCollection.h:152. 4: TSeqCollection::TSeqCollection() in /opt/root_src/core/cont/inc/TSeqCollection.h:33. 5: TList::TList() in /opt/root_src/core/cont/inc/TList.h:72. 6: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 7: TDirectoryFile::Close(char const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:592. 8: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:970. 9: TMemFile::~TMemFile() in /opt/root_src/io/io/src/TMemFile.cxx:240. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_tra",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:21141,usability,Close,Close,21141," in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 24: call_init.part.0 in ./elf/./elf/dl-init.c:70. 25: call_init in ./elf/./elf/dl-init.c:33. 26: _dl_init in ./elf/./elf/dl-init.c:117. Uninitialised value was created by a stack allocation 1: /home/userf/build/build-root-Desktop-Debug/lib/libCore.so. Conditional jump or move depends on uninitialised value(s). in THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TCollection::TCollection() in /opt/root_src/core/cont/inc/TCollection.h:152. 4: TSeqCollection::TSeqCollection() in /opt/root_src/core/cont/inc/TSeqCollection.h:33. 5: TList::TList() in /opt/root_src/core/cont/inc/TList.h:72. 6: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 7: TDirectoryFile::Close(char const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:592. 8: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:970. 9: TMemFile::~TMemFile() in /opt/root_src/io/io/src/TMemFile.cxx:240. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1865. 11: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::al",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:21221,usability,Close,Close,21221,"_init.part.0 in ./elf/./elf/dl-init.c:70. 25: call_init in ./elf/./elf/dl-init.c:33. 26: _dl_init in ./elf/./elf/dl-init.c:117. Uninitialised value was created by a stack allocation 1: /home/userf/build/build-root-Desktop-Debug/lib/libCore.so. Conditional jump or move depends on uninitialised value(s). in THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TCollection::TCollection() in /opt/root_src/core/cont/inc/TCollection.h:152. 4: TSeqCollection::TSeqCollection() in /opt/root_src/core/cont/inc/TSeqCollection.h:33. 5: TList::TList() in /opt/root_src/core/cont/inc/TList.h:72. 6: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:217. 7: TDirectoryFile::Close(char const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:592. 8: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:970. 9: TMemFile::~TMemFile() in /opt/root_src/io/io/src/TMemFile.cxx:240. 10: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1865. 11: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:22409,usability,user,userf,22409,"ar_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1865. 11: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 14: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised val",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:22528,usability,user,userf,22528,"e(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 14: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:22655,usability,user,userf,22655,"ng<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 14: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or move depends on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/ba",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:22756,usability,user,userf,22756,":basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 14: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or move depends on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:22996,usability,error,error-skeleton,22996,"char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 14: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or move depends on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 4: TBufferIO::TBufferIO(TBuffer::EMod",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:23158,usability,error,error-skeleton,23158,"::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 14: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or move depends on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 4: TBufferIO::TBufferIO(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferIO.cxx:51. 5: TBufferFile::TBufferFile(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferFile.cxx:90. 6: TKey::Read",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:23313,usability,error,error-skeleton,23313,":2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 14: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or move depends on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 4: TBufferIO::TBufferIO(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferIO.cxx:51. 5: TBufferFile::TBufferFile(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferFile.cxx:90. 6: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1025. 7: TDirectoryFile::GetObjectChecked(char const*, TClass const*) in /opt/root_src/io/io/s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:23373,usability,error,error-skeleton,23373,"ation_libNet_Impl() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3623. 14: (anonymous namespace)::DictInit::DictInit() in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3631. 15: __static_initialization_and_destruction_0(int, int) in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633. 16: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: THashList::Delete(char const*) in /opt/root_src/core/cont/src/THashList.cxx:208. Conditional jump or move depends on uninitialised value(s). in TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TBuffer::TBuffer(TBuffer::EMode, int) in /opt/root_src/core/base/src/TBuffer.cxx:73. 4: TBufferIO::TBufferIO(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferIO.cxx:51. 5: TBufferFile::TBufferFile(TBuffer::EMode, int) in /opt/root_src/io/io/src/TBufferFile.cxx:90. 6: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1025. 7: TDirectoryFile::GetObjectChecked(char const*, TClass const*) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1111. 8: void TDirectory::GetObject<TO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:26105,usability,error,error-skeleton,26105,":2309. 12: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_demoMem_C_ACLiC_dict_Impl() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:89. 14: (anonymous namespace)::DictInit::DictInit() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:97. 15: __static_initialization_and_destruction_0(int, int) in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:99. 16: _GLOBAL__sub_I_demoMem_C_ACLiC_dict.cxx in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:103. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1024. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TArchiveFile::ParseUrl(char const*, TString&, TString&, TStr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:26267,usability,error,error-skeleton,26267,"har, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_demoMem_C_ACLiC_dict_Impl() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:89. 14: (anonymous namespace)::DictInit::DictInit() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:97. 15: __static_initialization_and_destruction_0(int, int) in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:99. 16: _GLOBAL__sub_I_demoMem_C_ACLiC_dict.cxx in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:103. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1024. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:152. 5: TArchiveFile::Open(char const*, TFile*) in /opt/root_src/io/io/src/TArchiveFile.cxx:131. 6: TFile::TFile",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:26422,usability,error,error-skeleton,26422,"<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_demoMem_C_ACLiC_dict_Impl() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:89. 14: (anonymous namespace)::DictInit::DictInit() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:97. 15: __static_initialization_and_destruction_0(int, int) in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:99. 16: _GLOBAL__sub_I_demoMem_C_ACLiC_dict.cxx in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:103. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1024. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:152. 5: TArchiveFile::Open(char const*, TFile*) in /opt/root_src/io/io/src/TArchiveFile.cxx:131. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:397. 7: TMemFile::TMemFile(char const*, char*, long long, char const*, ch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:26482,usability,error,error-skeleton,26482,"src/core/base/src/TROOT.cxx:2566. 13: (anonymous namespace)::TriggerDictionaryInitialization_demoMem_C_ACLiC_dict_Impl() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:89. 14: (anonymous namespace)::DictInit::DictInit() in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:97. 15: __static_initialization_and_destruction_0(int, int) in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:99. 16: _GLOBAL__sub_I_demoMem_C_ACLiC_dict.cxx in /tmp//tmp/demoMem_C_ACLiC_dict.cxx:103. 17: call_init.part.0 in ./elf/./elf/dl-init.c:70. 18: call_init in ./elf/./elf/dl-init.c:33. 19: _dl_init in ./elf/./elf/dl-init.c:117. 20: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182. 21: dl_open_worker in ./elf/./elf/dl-open.c:808. 22: dl_open_worker in ./elf/./elf/dl-open.c:771. 23: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 24: _dl_open in ./elf/./elf/dl-open.c:883. 25: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56. 26: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208. 27: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227. Uninitialised value was created by a stack allocation 1: TKey::ReadObjectAny(TClass const*) in /opt/root_src/io/io/src/TKey.cxx:1024. Conditional jump or move depends on uninitialised value(s). in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76. 4: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:152. 5: TArchiveFile::Open(char const*, TFile*) in /opt/root_src/io/io/src/TArchiveFile.cxx:131. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:397. 7: TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:28149,usability,user,userf,28149,"eFile.cxx:152. 5: TArchiveFile::Open(char const*, TFile*) in /opt/root_src/io/io/src/TArchiveFile.cxx:131. 6: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:397. 7: TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFile.cxx:173. 8: TMemFile::TMemFile(char const*, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFile.cxx:163. 9: std::_MakeUniq<TMemFile>::__single_object std::make_unique<TMemFile, char const (&) [9], char const (&) [9]>(char const (&) [9], char const (&) [9]) in /usr/include/c++/11/bits/unique_ptr.h:962. 10: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:46. 11: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 12: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 13: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 14: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:28291,usability,user,userf,28291,"onst*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:397. 7: TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFile.cxx:173. 8: TMemFile::TMemFile(char const*, char const*, char const*, int, long long) in /opt/root_src/io/io/src/TMemFile.cxx:163. 9: std::_MakeUniq<TMemFile>::__single_object std::make_unique<TMemFile, char const (&) [9], char const (&) [9]>(char const (&) [9], char const (&) [9]) in /usr/include/c++/11/bits/unique_ptr.h:962. 10: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:46. 11: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 12: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 13: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 14: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 18: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TC",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:28562,usability,user,userf,28562,", long long) in /opt/root_src/io/io/src/TMemFile.cxx:163. 9: std::_MakeUniq<TMemFile>::__single_object std::make_unique<TMemFile, char const (&) [9], char const (&) [9]>(char const (&) [9], char const (&) [9]) in /usr/include/c++/11/bits/unique_ptr.h:962. 10: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:46. 11: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 12: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 13: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 14: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 18: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 19: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 20: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 21: TApplication::Process",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:28788,usability,user,userf,28788,"c++/11/bits/unique_ptr.h:962. 10: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:46. 11: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 12: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 13: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 14: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 18: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 19: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 20: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 21: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 22: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 23: TRint::ProcessLineNr(char con",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:28963,usability,user,userf,28963,", int) in /tmp/demoMem.C:46. 11: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 12: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 13: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 14: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 18: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 19: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 20: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 21: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 22: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 23: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 24: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 25: main in /opt/root_src/main/src/rma",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:30781,usability,Close,Close,30781,"har const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 24: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 25: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TArchiveFile::ParseUrl(char const*, TString&, TString&, TString&) in /opt/root_src/io/io/src/TArchiveFile.cxx:151. Conditional jump or move depends on uninitialised value(s). in TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed(char const*, char const*) in /opt/root_src/core/base/inc/TNamed.h:37. 4: TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 5: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3837. 6: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:952. 7: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:48. 8: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 9: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 10: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 11: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 12: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transact",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:31167,usability,user,userf,31167,"ove depends on uninitialised value(s). in TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed(char const*, char const*) in /opt/root_src/core/base/inc/TNamed.h:37. 4: TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 5: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3837. 6: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:952. 7: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:48. 8: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 9: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 10: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 11: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 12: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 13: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 14: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:31309,usability,user,userf,31309,": TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124. 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260. 3: TNamed::TNamed(char const*, char const*) in /opt/root_src/core/base/inc/TNamed.h:37. 4: TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 5: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3837. 6: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:952. 7: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:48. 8: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 9: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 10: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 11: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 12: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 13: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 14: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 15: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TC",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:31580,usability,user,userf,31580,"TNamed.h:37. 4: TKey::TKey(TObject const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:227. 5: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3837. 6: TFile::Close(char const*) in /opt/root_src/io/io/src/TFile.cxx:952. 7: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:48. 8: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 9: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 10: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 11: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 12: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 13: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 14: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 15: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 16: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 17: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 18: TApplication::Process",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:31806,usability,user,userf,31806,"oot_src/io/io/src/TFile.cxx:952. 7: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:48. 8: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 9: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 10: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 11: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 12: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 13: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 14: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 15: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 16: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 17: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 18: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 19: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 20: TRint::ProcessLineNr(char con",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:31981,usability,user,userf,31981,"ol, int) in /tmp/demoMem.C:48. 8: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 9: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 10: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 11: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 12: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 13: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 14: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 15: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 16: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 17: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 18: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 19: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 20: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 21: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 22: main in /opt/root_src/main/src/rma",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:33765,usability,user,userf,33765,"x:1710. 20: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 21: TRint::Run(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 22: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3775. 96 bytes in 1 blocks are possibly lost in loss record 4,046 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:33890,usability,user,userf,33890,"(bool) in /opt/root_src/core/rint/src/TRint.cxx:461. 22: main in /opt/root_src/main/src/rmain.cxx:84. Uninitialised value was created by a stack allocation 1: TFile::WriteStreamerInfo() in /opt/root_src/io/io/src/TFile.cxx:3775. 96 bytes in 1 blocks are possibly lost in loss record 4,046 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileEx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:34194,usability,user,userf,34194,"ling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metaclin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:36366,usability,user,userf,36366,". 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 96 bytes in 1 blocks are possibly lost in loss record 4,047 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:36491,usability,user,userf,36491," void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 96 bytes in 1 blocks are possibly lost in loss record 4,047 of 6,774. in TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileEx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:36795,usability,user,userf,36795,"ling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 1: operator new(unsigned long) in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::ASTReader::ASTReader(clang::Preprocessor&, clang::InMemoryModuleCache&, clang::ASTContext*, clang::PCHContainerReader const&, llvm::ArrayRef<std::shared_ptr<clang::ModuleFileExtension> >, llvm::StringRef, clang::DisableValidationForModuleKind, bool, bool, bool, bool, bool, std::unique_ptr<llvm::Timer, std::default_delete<llvm::Timer> >) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::CompilerInstance::createASTReader() [clone .part.0] in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool) in /opt/root_src/interpreter/cling/include/cling/Interpreter/Interpreter.h:368. 6: std::_MakeUniq<cling::Interpreter>::__single_object std::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(unsigned long&&, char const**&&, TString&, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > >&, void*&) in /usr/include/c++/11/bits/unique_ptr.h:962. 7: TCling::TCling(char const*, char const*, char const* const*, void*) in /opt/root_src/core/metacling/src/TCling.cxx:1543. 8: CreateInterpreter in /opt/root_src/core/metaclin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:38781,usability,user,userf,38781,"/core/metacling/src/TCling.cxx:611. 9: TROOT::InitInterpreter() in /opt/root_src/core/base/src/TROOT.cxx:2087. 10: ROOT::Internal::GetROOT2() in /opt/root_src/core/base/src/TROOT.cxx:389. 11: ROOT::GetROOT() in /opt/root_src/core/base/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 112 bytes in 1 blocks are definitely lost in loss record 4,249 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:39012,usability,user,userf,39012,"ase/src/TROOT.cxx:471. 12: TApplication::TApplication(char const*, int*, char**, void*, int) in /opt/root_src/core/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 112 bytes in 1 blocks are definitely lost in loss record 4,249 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocato",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:39124,usability,user,userf,39124,"re/base/src/TApplication.cxx:153. 13: TRint::TRint(char const*, int*, char**, void*, int, bool, bool) in /opt/root_src/core/rint/src/TRint.cxx:174. 14: main in /opt/root_src/main/src/rmain.cxx:81. 112 bytes in 1 blocks are definitely lost in loss record 4,249 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:39305,usability,user,userf,39305,"c/rmain.cxx:81. 112 bytes in 1 blocks are definitely lost in loss record 4,249 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TCling::AutoLoad(std::type_info const&, bool) in ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:40820,usability,user,userf,40820,"td::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 12: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 13: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 14: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 15: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:40962,usability,user,userf,40962,"its<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 12: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 13: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 14: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 15: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 21: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TC",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:41233,usability,user,userf,41233,"c/TCling.cxx:6278. 11: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 12: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 13: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 14: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 15: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 21: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 22: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 23: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 24: TApplication::Process",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:41459,usability,user,userf,41459,"ore/meta/src/TClass.cxx:3316. 13: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 14: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 15: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 21: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 22: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 23: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 24: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 25: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 112 bytes in 1 blocks are definit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:41634,usability,user,userf,41634,", int) in /tmp/demoMem.C:26. 14: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 15: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 21: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 22: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 23: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 24: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 25: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 112 bytes in 1 blocks are definitely lost in loss record 4,250 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:42903,usability,user,userf,42903,"preter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 22: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 23: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 24: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 25: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 112 bytes in 1 blocks are definitely lost in loss record 4,250 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::ClassInfo_Factory(char const*) const in /opt/root_src/core/metacling/src/TCling.cxx:8175. 8: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:43134,usability,user,userf,43134,"const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 24: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 25: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 112 bytes in 1 blocks are definitely lost in loss record 4,250 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::ClassInfo_Factory(char const*) const in /opt/root_src/core/metacling/src/TCling.cxx:8175. 8: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:43246,usability,user,userf,43246,"st*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 25: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 112 bytes in 1 blocks are definitely lost in loss record 4,250 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::ClassInfo_Factory(char const*) const in /opt/root_src/core/metacling/src/TCling.cxx:8175. 8: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6191. 9: TCling::AutoLoad(char const*, bool) i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:43427,usability,user,userf,43427,"12 bytes in 1 blocks are definitely lost in loss record 4,250 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::ClassInfo_Factory(char const*) const in /opt/root_src/core/metacling/src/TCling.cxx:8175. 8: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6191. 9: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 10: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 11: TClass::GetClass(std::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:44866,usability,user,userf,44866,"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6191. 9: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 10: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 11: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 12: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 13: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 14: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:45008,usability,user,userf,45008,"aits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6191. 9: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 10: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 11: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 12: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 13: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 14: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 20: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TC",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:45279,usability,user,userf,45279,"c/TCling.cxx:6278. 10: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097. 11: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316. 12: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 13: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 14: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 20: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 21: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 22: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 23: TApplication::Process",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:45505,usability,user,userf,45505,"ore/meta/src/TClass.cxx:3316. 12: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 13: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 14: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 20: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 21: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 22: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 23: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 24: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 25: TRint::ProcessLineNr(char con",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:45680,usability,user,userf,45680,", int) in /tmp/demoMem.C:26. 13: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 14: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 15: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 16: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 20: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 21: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 22: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 23: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 24: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 25: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 112 bytes in 1 blocks are definitely lost in loss record 4,251 of 6,774. in TCling::CheckClassInfo(char c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:47020,usability,user,userf,47020,"5. 21: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 22: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 23: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 24: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 25: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 112 bytes in 1 blocks are definitely lost in loss record 4,251 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:47251,usability,user,userf,47251,"5. 23: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 24: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 25: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 112 bytes in 1 blocks are definitely lost in loss record 4,251 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitB",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:47363,usability,user,userf,47363,"24: TApplication::ProcessLine(char const*, bool, int*) in /opt/root_src/core/base/src/TApplication.cxx:1710. 25: TRint::ProcessLineNr(char const*, char const*, int*) in /opt/root_src/core/rint/src/TRint.cxx:820. 112 bytes in 1 blocks are definitely lost in loss record 4,251 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:47544,usability,user,userf,47544,"c/core/rint/src/TRint.cxx:820. 112 bytes in 1 blocks are definitely lost in loss record 4,251 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:48388,usability,user,userf,48388,"op-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEunsignedsPchargR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:274. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 15: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:48602,usability,user,userf,48602,"ng::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEunsignedsPchargR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:274. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 15: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:49274,usability,user,userf,49274,"ar const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEunsignedsPchargR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:274. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 15: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:49416,usability,user,userf,49416,"Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEunsignedsPchargR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:274. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 15: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TC",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:49687,usability,user,userf,49687,"GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 15: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:49913,usability,user,userf,49913,"ore/meta/src/TClass.cxx:3319. 15: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,252 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgprelo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:50088,usability,user,userf,50088,", int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,252 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocati",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:51139,usability,user,userf,51139,"22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,252 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TCla",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:51370,usability,user,userf,51370,"rCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,252 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsA",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:51482,usability,user,userf,51482,"ter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,252 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:51663,usability,user,userf,51663,"12 bytes in 1 blocks are definitely lost in loss record 4,252 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Deb",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:52632,usability,user,userf,52632,"nst**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEunsignedsPchargR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:274. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 16: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 17: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 18: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::RunFunction(clang::FunctionDecl const*,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:52846,usability,user,userf,52846,"87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEunsignedsPchargR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:274. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 16: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 17: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 18: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:53518,usability,user,userf,53518,"ar const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEunsignedsPchargR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:274. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 16: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 17: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 18: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 23: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:53660,usability,user,userf,53660,"Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEunsignedsPchargR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:274. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 16: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 17: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 18: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 23: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 24: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TC",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:53931,usability,user,userf,53931,"GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3319. 16: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 17: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 18: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 23: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 24: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 25: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 112 bytes in 1 blocks are definitely lost in loss record 4,253 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/ro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:54157,usability,user,userf,54157,"ore/meta/src/TClass.cxx:3319. 16: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26. 17: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 18: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 23: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 24: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 25: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 112 bytes in 1 blocks are definitely lost in loss record 4,253 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:54332,usability,user,userf,54332,", int) in /tmp/demoMem.C:26. 17: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63. 18: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 23: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 24: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 25: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 112 bytes in 1 blocks are definitely lost in loss record 4,253 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScope",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:55242,usability,user,userf,55242,"llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 23: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 24: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 25: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 112 bytes in 1 blocks are definitely lost in loss record 4,253 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:55473,usability,user,userf,55473,"pilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 24: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 25: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 112 bytes in 1 blocks are definitely lost in loss record 4,253 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitB",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:55585,usability,user,userf,55585,"r const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 25: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 112 bytes in 1 blocks are definitely lost in loss record 4,253 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:55766,usability,user,userf,55766,"metacling/src/TCling.cxx:3545. 112 bytes in 1 blocks are definitely lost in loss record 4,253 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:56610,usability,user,userf,56610,"op-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:56815,usability,user,userf,56815,". 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::proces",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:57321,usability,user,userf,57321,"pe_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:57463,usability,user,userf,57463,"faultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TC",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:57734,usability,user,userf,57734,"rc/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 23: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::Process",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:57960,usability,user,userf,57960,"nsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 23: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,254 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:58135,usability,user,userf,58135,", int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 23: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,254 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdTo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:59295,usability,user,userf,59295,"ing::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 23: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,254 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TCla",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:59526,usability,user,userf,59526,"preter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,254 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsA",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:59638,usability,user,userf,59638,"st*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,254 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:59819,usability,user,userf,59819,"12 bytes in 1 blocks are definitely lost in loss record 4,254 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Deb",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:60788,usability,user,userf,60788,"nst**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:60993,usability,user,userf,60993,"Info.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::proces",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:61499,usability,user,userf,61499,"pe_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:61641,usability,user,userf,61641,"faultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TC",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:61912,usability,user,userf,61912,"rc/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEfloatgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:469. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:62138,usability,user,userf,62138,"nsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<float, std::allocator<float> > >(std::vector<float, std::allocator<float> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,255 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:62313,usability,user,userf,62313,", int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:73. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,255 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:63332,usability,user,userf,63332,"-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,255 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:63563,usability,user,userf,63563,"char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,255 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitB",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:63675,usability,user,userf,63675,"LineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,255 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:63856,usability,user,userf,63856,"ase/src/TApplication.cxx:1865. 112 bytes in 1 blocks are definitely lost in loss record 4,255 of 6,774. in TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:64700,usability,user,userf,64700,"op-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:64904,usability,user,userf,64904,"o. 6: TCling::CheckClassInfo(char const*, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4195. 7: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1516. 8: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 9: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:65406,usability,user,userf,65406,"d::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 10: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:65548,usability,user,userf,65548,"::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 11: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TC",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:65819,usability,user,userf,65819,"eta/src/TGenericClassInfo.cxx:255. 12: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 13: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 23: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::Process",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:66045,usability,user,userf,66045,"g, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 14: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 23: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,256 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:66220,usability,user,userf,66220,", int) in /tmp/demoMem.C:26. 15: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 17: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 23: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,256 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdTo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:67380,usability,user,userf,67380,"ing::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 22: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 23: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,256 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TCla",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:67611,usability,user,userf,67611,"preter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 24: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,256 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsA",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:67723,usability,user,userf,67723,"st*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 25: TApplication::ProcessFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1737. 112 bytes in 1 blocks are definitely lost in loss record 4,256 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:67904,usability,user,userf,67904,"12 bytes in 1 blocks are definitely lost in loss record 4,256 of 6,774. in TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Deb",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:68873,usability,user,userf,68873,"nst**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) in /opt/root_src/core/metacling/src/TClingClassInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:69077,usability,user,userf,69077,"sInfo.cxx:87. 7: TCling::SetClassInfo(TClass*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:4049. 8: TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) in /opt/root_src/core/meta/src/TClass.cxx:1517. 9: TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) in /opt/root_src/core/meta/src/TClass.cxx:1329. 10: ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:69579,usability,user,userf,69579,"d::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) in /opt/root_src/core/meta/src/TClass.cxx:5877. 11: ROOT::Internal::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:69721,usability,user,userf,69721,"::TDefaultInitBehavior::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) const in /home/userf/build/build-root-Desktop-Debug/include/Rtypes.h:181. 12: ROOT::TGenericClassInfo::GetClass() in /opt/root_src/core/meta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TC",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:69992,usability,user,userf,69992,"eta/src/TGenericClassInfo.cxx:255. 13: ROOT::vectorlEboolgR_Dictionary() in /home/userf/build/build-root-Desktop-Debug/core/clingutils/G__vectorDict.cxx:794. 14: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 448 bytes in 3 blocks are",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:70218,usability,user,userf,70218,"g, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3294. 15: void run<std::vector<bool, std::allocator<bool> > >(std::vector<bool, std::allocator<bool> > const&, bool, int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 448 bytes in 3 blocks are definitely lost in loss record 4,858 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:70393,usability,user,userf,70393,", int) in /tmp/demoMem.C:26. 16: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:82. 17: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 18: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 19: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 20: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 21: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 448 bytes in 3 blocks are definitely lost in loss record 4,858 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::Unqual",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:71427,usability,user,userf,71427,"lib/libCling.so. 22: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) in /opt/root_src/core/metacling/src/TCling.cxx:2438. 23: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 448 bytes in 3 blocks are definitely lost in loss record 4,858 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:71658,usability,user,userf,71658,"nterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:2555. 24: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 448 bytes in 3 blocks are definitely lost in loss record 4,858 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocato",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:71770,usability,user,userf,71770,"const*, TInterpreter::EErrorCode*) in /opt/root_src/core/metacling/src/TCling.cxx:3545. 25: TApplication::ExecuteFile(char const*, int*, bool) in /opt/root_src/core/base/src/TApplication.cxx:1865. 448 bytes in 3 blocks are definitely lost in loss record 4,858 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:71951,usability,user,userf,71951,"ation.cxx:1865. 448 bytes in 3 blocks are definitely lost in loss record 4,858 of 6,774. in GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 1: malloc in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so. 2: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 3: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so. 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951. 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057. 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113. 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166. 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278. 11: TClass::LoadClassDefault(char const*, bool) in /o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:134,availability,operat,operator,134,"Got it:. ```. ==3594334== 1,000,001,540 bytes in 10 blocks are possibly lost in loss record 3,876 of 3,876. ==3594334== at 0x484A2F3: operator new[](unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==3594334== by 0x5FCF5B6: TKey::TKey(void const*, TClass const*, char const*, int, TDirectory*) (TKey.cxx:349). ==3594334== by 0x5F8FD3D: TFile::CreateKey(TDirectory*, void const*, TClass const*, char const*, int) (TFile.cxx:1051). ==3594334== by 0x5F7AA64: TDirectoryFile::WriteObjectAny(void const*, TClass const*, char const*, char const*, int) (TDirectoryFile.cxx:2119). ==3594334== by 0x5F7A4FB: TDirectoryFile::WriteObjectAny(void const*, char const*, char const*, char const*, int) (TDirectoryFile.cxx:2036). ==3594334== by 0x23779334: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) (demoMem.C:47). ==3594334== by 0x23778622: demoMem(bool, unsigned long, int) (demoMem.C:63). ==3594334== by 0x72A7B97: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722B2AB: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722B9F6: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722BC17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x7310FE6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:1132,deployability,build,builds,1132,"perator new[](unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==3594334== by 0x5FCF5B6: TKey::TKey(void const*, TClass const*, char const*, int, TDirectory*) (TKey.cxx:349). ==3594334== by 0x5F8FD3D: TFile::CreateKey(TDirectory*, void const*, TClass const*, char const*, int) (TFile.cxx:1051). ==3594334== by 0x5F7AA64: TDirectoryFile::WriteObjectAny(void const*, TClass const*, char const*, char const*, int) (TDirectoryFile.cxx:2119). ==3594334== by 0x5F7A4FB: TDirectoryFile::WriteObjectAny(void const*, char const*, char const*, char const*, int) (TDirectoryFile.cxx:2036). ==3594334== by 0x23779334: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) (demoMem.C:47). ==3594334== by 0x23778622: demoMem(bool, unsigned long, int) (demoMem.C:63). ==3594334== by 0x72A7B97: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722B2AB: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722B9F6: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722BC17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x7310FE6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ```. <!DOCTYPE html>. <",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:1139,deployability,build,build-,1139," new[](unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==3594334== by 0x5FCF5B6: TKey::TKey(void const*, TClass const*, char const*, int, TDirectory*) (TKey.cxx:349). ==3594334== by 0x5F8FD3D: TFile::CreateKey(TDirectory*, void const*, TClass const*, char const*, int) (TFile.cxx:1051). ==3594334== by 0x5F7AA64: TDirectoryFile::WriteObjectAny(void const*, TClass const*, char const*, char const*, int) (TDirectoryFile.cxx:2119). ==3594334== by 0x5F7A4FB: TDirectoryFile::WriteObjectAny(void const*, char const*, char const*, char const*, int) (TDirectoryFile.cxx:2036). ==3594334== by 0x23779334: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) (demoMem.C:47). ==3594334== by 0x23778622: demoMem(bool, unsigned long, int) (demoMem.C:63). ==3594334== by 0x72A7B97: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722B2AB: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722B9F6: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722BC17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x7310FE6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ```. <!DOCTYPE html>. <body>. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:1302,deployability,build,builds,1302,"nt, TDirectory*) (TKey.cxx:349). ==3594334== by 0x5F8FD3D: TFile::CreateKey(TDirectory*, void const*, TClass const*, char const*, int) (TFile.cxx:1051). ==3594334== by 0x5F7AA64: TDirectoryFile::WriteObjectAny(void const*, TClass const*, char const*, char const*, int) (TDirectoryFile.cxx:2119). ==3594334== by 0x5F7A4FB: TDirectoryFile::WriteObjectAny(void const*, char const*, char const*, char const*, int) (TDirectoryFile.cxx:2036). ==3594334== by 0x23779334: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) (demoMem.C:47). ==3594334== by 0x23778622: demoMem(bool, unsigned long, int) (demoMem.C:63). ==3594334== by 0x72A7B97: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722B2AB: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722B9F6: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722BC17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x7310FE6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ```. <!DOCTYPE html>. <body>. diskBased = false |   |   |   |  . -- | -- | -- | -- | --. trials=10 |   |   |   |  .   |   |   |   |  . BuffSize | Def Lost | Ind Lost | Pos Lost | Still reach. 5",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:1309,deployability,build,build-,1309,"rectory*) (TKey.cxx:349). ==3594334== by 0x5F8FD3D: TFile::CreateKey(TDirectory*, void const*, TClass const*, char const*, int) (TFile.cxx:1051). ==3594334== by 0x5F7AA64: TDirectoryFile::WriteObjectAny(void const*, TClass const*, char const*, char const*, int) (TDirectoryFile.cxx:2119). ==3594334== by 0x5F7A4FB: TDirectoryFile::WriteObjectAny(void const*, char const*, char const*, char const*, int) (TDirectoryFile.cxx:2036). ==3594334== by 0x23779334: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) (demoMem.C:47). ==3594334== by 0x23778622: demoMem(bool, unsigned long, int) (demoMem.C:63). ==3594334== by 0x72A7B97: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722B2AB: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722B9F6: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722BC17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x7310FE6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ```. <!DOCTYPE html>. <body>. diskBased = false |   |   |   |  . -- | -- | -- | -- | --. trials=10 |   |   |   |  .   |   |   |   |  . BuffSize | Def Lost | Ind Lost | Pos Lost | Still reach. 5000 | 5",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:1601,deployability,build,builds,1601," int) (TDirectoryFile.cxx:2119). ==3594334== by 0x5F7A4FB: TDirectoryFile::WriteObjectAny(void const*, char const*, char const*, char const*, int) (TDirectoryFile.cxx:2036). ==3594334== by 0x23779334: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) (demoMem.C:47). ==3594334== by 0x23778622: demoMem(bool, unsigned long, int) (demoMem.C:63). ==3594334== by 0x72A7B97: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722B2AB: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722B9F6: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722BC17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x7310FE6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ```. <!DOCTYPE html>. <body>. diskBased = false |   |   |   |  . -- | -- | -- | -- | --. trials=10 |   |   |   |  .   |   |   |   |  . BuffSize | Def Lost | Ind Lost | Pos Lost | Still reach. 5000 | 51818 | 0 | 0 | 33915633. 50000 | 501818 | 0 | 0 | 33915634. 500000 | 2501273 | 0 | 2500545 | 33915635. 5000000 | 728 | 0 | 50001090 | 33915692. 50000000 | 728 | 0 | 500001270 | 33915637. 500000000 | 1000001468 | 0 | 4000002960 | 33915637. </body>. </html>.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:1608,deployability,build,build-,1608," int) (TDirectoryFile.cxx:2119). ==3594334== by 0x5F7A4FB: TDirectoryFile::WriteObjectAny(void const*, char const*, char const*, char const*, int) (TDirectoryFile.cxx:2036). ==3594334== by 0x23779334: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) (demoMem.C:47). ==3594334== by 0x23778622: demoMem(bool, unsigned long, int) (demoMem.C:63). ==3594334== by 0x72A7B97: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722B2AB: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722B9F6: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722BC17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x7310FE6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ```. <!DOCTYPE html>. <body>. diskBased = false |   |   |   |  . -- | -- | -- | -- | --. trials=10 |   |   |   |  .   |   |   |   |  . BuffSize | Def Lost | Ind Lost | Pos Lost | Still reach. 5000 | 51818 | 0 | 0 | 33915633. 50000 | 501818 | 0 | 0 | 33915634. 500000 | 2501273 | 0 | 2500545 | 33915635. 5000000 | 728 | 0 | 50001090 | 33915692. 50000000 | 728 | 0 | 500001270 | 33915637. 500000000 | 1000001468 | 0 | 4000002960 | 33915637. </body>. </html>.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:1855,deployability,build,builds,1855," int) (TDirectoryFile.cxx:2119). ==3594334== by 0x5F7A4FB: TDirectoryFile::WriteObjectAny(void const*, char const*, char const*, char const*, int) (TDirectoryFile.cxx:2036). ==3594334== by 0x23779334: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) (demoMem.C:47). ==3594334== by 0x23778622: demoMem(bool, unsigned long, int) (demoMem.C:63). ==3594334== by 0x72A7B97: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722B2AB: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722B9F6: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722BC17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x7310FE6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ```. <!DOCTYPE html>. <body>. diskBased = false |   |   |   |  . -- | -- | -- | -- | --. trials=10 |   |   |   |  .   |   |   |   |  . BuffSize | Def Lost | Ind Lost | Pos Lost | Still reach. 5000 | 51818 | 0 | 0 | 33915633. 50000 | 501818 | 0 | 0 | 33915634. 500000 | 2501273 | 0 | 2500545 | 33915635. 5000000 | 728 | 0 | 50001090 | 33915692. 50000000 | 728 | 0 | 500001270 | 33915637. 500000000 | 1000001468 | 0 | 4000002960 | 33915637. </body>. </html>.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:1862,deployability,build,build-,1862," int) (TDirectoryFile.cxx:2119). ==3594334== by 0x5F7A4FB: TDirectoryFile::WriteObjectAny(void const*, char const*, char const*, char const*, int) (TDirectoryFile.cxx:2036). ==3594334== by 0x23779334: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) (demoMem.C:47). ==3594334== by 0x23778622: demoMem(bool, unsigned long, int) (demoMem.C:63). ==3594334== by 0x72A7B97: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722B2AB: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722B9F6: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722BC17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x7310FE6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ```. <!DOCTYPE html>. <body>. diskBased = false |   |   |   |  . -- | -- | -- | -- | --. trials=10 |   |   |   |  .   |   |   |   |  . BuffSize | Def Lost | Ind Lost | Pos Lost | Still reach. 5000 | 51818 | 0 | 0 | 33915633. 50000 | 501818 | 0 | 0 | 33915634. 500000 | 2501273 | 0 | 2500545 | 33915635. 5000000 | 728 | 0 | 50001090 | 33915692. 50000000 | 728 | 0 | 500001270 | 33915637. 500000000 | 1000001468 | 0 | 4000002960 | 33915637. </body>. </html>.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:2058,deployability,build,builds,2058," int) (TDirectoryFile.cxx:2119). ==3594334== by 0x5F7A4FB: TDirectoryFile::WriteObjectAny(void const*, char const*, char const*, char const*, int) (TDirectoryFile.cxx:2036). ==3594334== by 0x23779334: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) (demoMem.C:47). ==3594334== by 0x23778622: demoMem(bool, unsigned long, int) (demoMem.C:63). ==3594334== by 0x72A7B97: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722B2AB: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722B9F6: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722BC17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x7310FE6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ```. <!DOCTYPE html>. <body>. diskBased = false |   |   |   |  . -- | -- | -- | -- | --. trials=10 |   |   |   |  .   |   |   |   |  . BuffSize | Def Lost | Ind Lost | Pos Lost | Still reach. 5000 | 51818 | 0 | 0 | 33915633. 50000 | 501818 | 0 | 0 | 33915634. 500000 | 2501273 | 0 | 2500545 | 33915635. 5000000 | 728 | 0 | 50001090 | 33915692. 50000000 | 728 | 0 | 500001270 | 33915637. 500000000 | 1000001468 | 0 | 4000002960 | 33915637. </body>. </html>.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:2065,deployability,build,build-,2065," int) (TDirectoryFile.cxx:2119). ==3594334== by 0x5F7A4FB: TDirectoryFile::WriteObjectAny(void const*, char const*, char const*, char const*, int) (TDirectoryFile.cxx:2036). ==3594334== by 0x23779334: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) (demoMem.C:47). ==3594334== by 0x23778622: demoMem(bool, unsigned long, int) (demoMem.C:63). ==3594334== by 0x72A7B97: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722B2AB: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722B9F6: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722BC17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x7310FE6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ```. <!DOCTYPE html>. <body>. diskBased = false |   |   |   |  . -- | -- | -- | -- | --. trials=10 |   |   |   |  .   |   |   |   |  . BuffSize | Def Lost | Ind Lost | Pos Lost | Still reach. 5000 | 51818 | 0 | 0 | 33915633. 50000 | 501818 | 0 | 0 | 33915634. 500000 | 2501273 | 0 | 2500545 | 33915635. 5000000 | 728 | 0 | 50001090 | 33915692. 50000000 | 728 | 0 | 500001270 | 33915637. 500000000 | 1000001468 | 0 | 4000002960 | 33915637. </body>. </html>.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:810,energy efficiency,alloc,allocator,810,"Got it:. ```. ==3594334== 1,000,001,540 bytes in 10 blocks are possibly lost in loss record 3,876 of 3,876. ==3594334== at 0x484A2F3: operator new[](unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==3594334== by 0x5FCF5B6: TKey::TKey(void const*, TClass const*, char const*, int, TDirectory*) (TKey.cxx:349). ==3594334== by 0x5F8FD3D: TFile::CreateKey(TDirectory*, void const*, TClass const*, char const*, int) (TFile.cxx:1051). ==3594334== by 0x5F7AA64: TDirectoryFile::WriteObjectAny(void const*, TClass const*, char const*, char const*, int) (TDirectoryFile.cxx:2119). ==3594334== by 0x5F7A4FB: TDirectoryFile::WriteObjectAny(void const*, char const*, char const*, char const*, int) (TDirectoryFile.cxx:2036). ==3594334== by 0x23779334: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) (demoMem.C:47). ==3594334== by 0x23778622: demoMem(bool, unsigned long, int) (demoMem.C:63). ==3594334== by 0x72A7B97: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722B2AB: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722B9F6: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722BC17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x7310FE6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:871,energy efficiency,alloc,allocator,871,"Got it:. ```. ==3594334== 1,000,001,540 bytes in 10 blocks are possibly lost in loss record 3,876 of 3,876. ==3594334== at 0x484A2F3: operator new[](unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==3594334== by 0x5FCF5B6: TKey::TKey(void const*, TClass const*, char const*, int, TDirectory*) (TKey.cxx:349). ==3594334== by 0x5F8FD3D: TFile::CreateKey(TDirectory*, void const*, TClass const*, char const*, int) (TFile.cxx:1051). ==3594334== by 0x5F7AA64: TDirectoryFile::WriteObjectAny(void const*, TClass const*, char const*, char const*, int) (TDirectoryFile.cxx:2119). ==3594334== by 0x5F7A4FB: TDirectoryFile::WriteObjectAny(void const*, char const*, char const*, char const*, int) (TDirectoryFile.cxx:2036). ==3594334== by 0x23779334: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) (demoMem.C:47). ==3594334== by 0x23778622: demoMem(bool, unsigned long, int) (demoMem.C:63). ==3594334== by 0x72A7B97: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722B2AB: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722B9F6: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722BC17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x7310FE6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:1481,energy efficiency,alloc,allocator,1481,"irectoryFile::WriteObjectAny(void const*, TClass const*, char const*, char const*, int) (TDirectoryFile.cxx:2119). ==3594334== by 0x5F7A4FB: TDirectoryFile::WriteObjectAny(void const*, char const*, char const*, char const*, int) (TDirectoryFile.cxx:2036). ==3594334== by 0x23779334: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) (demoMem.C:47). ==3594334== by 0x23778622: demoMem(bool, unsigned long, int) (demoMem.C:63). ==3594334== by 0x72A7B97: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722B2AB: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722B9F6: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722BC17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x7310FE6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ```. <!DOCTYPE html>. <body>. diskBased = false |   |   |   |  . -- | -- | -- | -- | --. trials=10 |   |   |   |  .   |   |   |   |  . BuffSize | Def Lost | Ind Lost | Pos Lost | Still reach. 5000 | 51818 | 0 | 0 | 33915633. 50000 | 501818 | 0 | 0 | 33915634. 500000 | 2501273 | 0 | 2500545 | 33915635. 5000000 | 728 | 0 | 50001090 | 33915692. 50000000 | 728 | 0 | 500001270",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:1771,energy efficiency,alloc,allocator,1771," int) (TDirectoryFile.cxx:2119). ==3594334== by 0x5F7A4FB: TDirectoryFile::WriteObjectAny(void const*, char const*, char const*, char const*, int) (TDirectoryFile.cxx:2036). ==3594334== by 0x23779334: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) (demoMem.C:47). ==3594334== by 0x23778622: demoMem(bool, unsigned long, int) (demoMem.C:63). ==3594334== by 0x72A7B97: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722B2AB: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722B9F6: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722BC17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x7310FE6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ```. <!DOCTYPE html>. <body>. diskBased = false |   |   |   |  . -- | -- | -- | -- | --. trials=10 |   |   |   |  .   |   |   |   |  . BuffSize | Def Lost | Ind Lost | Pos Lost | Still reach. 5000 | 51818 | 0 | 0 | 33915633. 50000 | 501818 | 0 | 0 | 33915634. 500000 | 2501273 | 0 | 2500545 | 33915635. 5000000 | 728 | 0 | 50001090 | 33915692. 50000000 | 728 | 0 | 500001270 | 33915637. 500000000 | 1000001468 | 0 | 4000002960 | 33915637. </body>. </html>.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:2142,performance,disk,diskBased,2142," int) (TDirectoryFile.cxx:2119). ==3594334== by 0x5F7A4FB: TDirectoryFile::WriteObjectAny(void const*, char const*, char const*, char const*, int) (TDirectoryFile.cxx:2036). ==3594334== by 0x23779334: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) (demoMem.C:47). ==3594334== by 0x23778622: demoMem(bool, unsigned long, int) (demoMem.C:63). ==3594334== by 0x72A7B97: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722B2AB: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722B9F6: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722BC17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x7310FE6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ```. <!DOCTYPE html>. <body>. diskBased = false |   |   |   |  . -- | -- | -- | -- | --. trials=10 |   |   |   |  .   |   |   |   |  . BuffSize | Def Lost | Ind Lost | Pos Lost | Still reach. 5000 | 51818 | 0 | 0 | 33915633. 50000 | 501818 | 0 | 0 | 33915634. 500000 | 2501273 | 0 | 2500545 | 33915635. 5000000 | 728 | 0 | 50001090 | 33915692. 50000000 | 728 | 0 | 500001270 | 33915637. 500000000 | 1000001468 | 0 | 4000002960 | 33915637. </body>. </html>.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:80,security,loss,loss,80,"Got it:. ```. ==3594334== 1,000,001,540 bytes in 10 blocks are possibly lost in loss record 3,876 of 3,876. ==3594334== at 0x484A2F3: operator new[](unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==3594334== by 0x5FCF5B6: TKey::TKey(void const*, TClass const*, char const*, int, TDirectory*) (TKey.cxx:349). ==3594334== by 0x5F8FD3D: TFile::CreateKey(TDirectory*, void const*, TClass const*, char const*, int) (TFile.cxx:1051). ==3594334== by 0x5F7AA64: TDirectoryFile::WriteObjectAny(void const*, TClass const*, char const*, char const*, int) (TDirectoryFile.cxx:2119). ==3594334== by 0x5F7A4FB: TDirectoryFile::WriteObjectAny(void const*, char const*, char const*, char const*, int) (TDirectoryFile.cxx:2036). ==3594334== by 0x23779334: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) (demoMem.C:47). ==3594334== by 0x23778622: demoMem(bool, unsigned long, int) (demoMem.C:63). ==3594334== by 0x72A7B97: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722B2AB: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722B9F6: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722BC17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x7310FE6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:1127,usability,user,user,1127,"2F3: operator new[](unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so). ==3594334== by 0x5FCF5B6: TKey::TKey(void const*, TClass const*, char const*, int, TDirectory*) (TKey.cxx:349). ==3594334== by 0x5F8FD3D: TFile::CreateKey(TDirectory*, void const*, TClass const*, char const*, int) (TFile.cxx:1051). ==3594334== by 0x5F7AA64: TDirectoryFile::WriteObjectAny(void const*, TClass const*, char const*, char const*, int) (TDirectoryFile.cxx:2119). ==3594334== by 0x5F7A4FB: TDirectoryFile::WriteObjectAny(void const*, char const*, char const*, char const*, int) (TDirectoryFile.cxx:2036). ==3594334== by 0x23779334: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) (demoMem.C:47). ==3594334== by 0x23778622: demoMem(bool, unsigned long, int) (demoMem.C:63). ==3594334== by 0x72A7B97: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722B2AB: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722B9F6: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722BC17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x7310FE6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ```. <!DOCTYPE ht",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:1297,usability,user,user,1297,"st*, int, TDirectory*) (TKey.cxx:349). ==3594334== by 0x5F8FD3D: TFile::CreateKey(TDirectory*, void const*, TClass const*, char const*, int) (TFile.cxx:1051). ==3594334== by 0x5F7AA64: TDirectoryFile::WriteObjectAny(void const*, TClass const*, char const*, char const*, int) (TDirectoryFile.cxx:2119). ==3594334== by 0x5F7A4FB: TDirectoryFile::WriteObjectAny(void const*, char const*, char const*, char const*, int) (TDirectoryFile.cxx:2036). ==3594334== by 0x23779334: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) (demoMem.C:47). ==3594334== by 0x23778622: demoMem(bool, unsigned long, int) (demoMem.C:63). ==3594334== by 0x72A7B97: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722B2AB: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722B9F6: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722BC17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x7310FE6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ```. <!DOCTYPE html>. <body>. diskBased = false |   |   |   |  . -- | -- | -- | -- | --. trials=10 |   |   |   |  .   |   |   |   |  . BuffSize | Def Lost | Ind Lost | Pos Lost | Still re",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:1596,usability,user,user,1596," int) (TDirectoryFile.cxx:2119). ==3594334== by 0x5F7A4FB: TDirectoryFile::WriteObjectAny(void const*, char const*, char const*, char const*, int) (TDirectoryFile.cxx:2036). ==3594334== by 0x23779334: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) (demoMem.C:47). ==3594334== by 0x23778622: demoMem(bool, unsigned long, int) (demoMem.C:63). ==3594334== by 0x72A7B97: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722B2AB: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722B9F6: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722BC17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x7310FE6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ```. <!DOCTYPE html>. <body>. diskBased = false |   |   |   |  . -- | -- | -- | -- | --. trials=10 |   |   |   |  .   |   |   |   |  . BuffSize | Def Lost | Ind Lost | Pos Lost | Still reach. 5000 | 51818 | 0 | 0 | 33915633. 50000 | 501818 | 0 | 0 | 33915634. 500000 | 2501273 | 0 | 2500545 | 33915635. 5000000 | 728 | 0 | 50001090 | 33915692. 50000000 | 728 | 0 | 500001270 | 33915637. 500000000 | 1000001468 | 0 | 4000002960 | 33915637. </body>. </html>.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:1850,usability,user,user,1850," int) (TDirectoryFile.cxx:2119). ==3594334== by 0x5F7A4FB: TDirectoryFile::WriteObjectAny(void const*, char const*, char const*, char const*, int) (TDirectoryFile.cxx:2036). ==3594334== by 0x23779334: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) (demoMem.C:47). ==3594334== by 0x23778622: demoMem(bool, unsigned long, int) (demoMem.C:63). ==3594334== by 0x72A7B97: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722B2AB: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722B9F6: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722BC17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x7310FE6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ```. <!DOCTYPE html>. <body>. diskBased = false |   |   |   |  . -- | -- | -- | -- | --. trials=10 |   |   |   |  .   |   |   |   |  . BuffSize | Def Lost | Ind Lost | Pos Lost | Still reach. 5000 | 51818 | 0 | 0 | 33915633. 50000 | 501818 | 0 | 0 | 33915634. 500000 | 2501273 | 0 | 2500545 | 33915635. 5000000 | 728 | 0 | 50001090 | 33915692. 50000000 | 728 | 0 | 500001270 | 33915637. 500000000 | 1000001468 | 0 | 4000002960 | 33915637. </body>. </html>.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/issues/7236:2053,usability,user,user,2053," int) (TDirectoryFile.cxx:2119). ==3594334== by 0x5F7A4FB: TDirectoryFile::WriteObjectAny(void const*, char const*, char const*, char const*, int) (TDirectoryFile.cxx:2036). ==3594334== by 0x23779334: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) (demoMem.C:47). ==3594334== by 0x23778622: demoMem(bool, unsigned long, int) (demoMem.C:63). ==3594334== by 0x72A7B97: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722B2AB: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722B9F6: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x722BC17: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ==3594334== by 0x7310FE6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /home/user/builds/build-root_src-Desktop-Debug/lib/libCling.so). ```. <!DOCTYPE html>. <body>. diskBased = false |   |   |   |  . -- | -- | -- | -- | --. trials=10 |   |   |   |  .   |   |   |   |  . BuffSize | Def Lost | Ind Lost | Pos Lost | Still reach. 5000 | 51818 | 0 | 0 | 33915633. 50000 | 501818 | 0 | 0 | 33915634. 500000 | 2501273 | 0 | 2500545 | 33915635. 5000000 | 728 | 0 | 50001090 | 33915692. 50000000 | 728 | 0 | 500001270 | 33915637. 500000000 | 1000001468 | 0 | 4000002960 | 33915637. </body>. </html>.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7236
https://github.com/root-project/root/pull/7237:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7237
https://github.com/root-project/root/pull/7237:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7237
https://github.com/root-project/root/pull/7237:30,safety,review,review,30,"I'll have to try it before to review, but before that, may I ask what is the _**real**_ use case? We only had one question on the forum so far, with an alternative solution...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7237
https://github.com/root-project/root/pull/7237:30,testability,review,review,30,"I'll have to try it before to review, but before that, may I ask what is the _**real**_ use case? We only had one question on the forum so far, with an alternative solution...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7237
https://github.com/root-project/root/pull/7237:658,availability,sli,slice,658,"There were two more forum posts also:. https://root-forum.cern.ch/t/select-directory-with-tgfiledialog/20481. https://root-forum.cern.ch/t/set-up-working-directory/2528. The alternative solution involves defining extra derived classes, etc, which is a bit of a burden. Selecting a folder is useful, for example when you save all open canvases as .png files. You want to select a output folder, and then the script does: `for(auto c: gROOT->GetListOfCanvases()) c->SaveAs(outputFolder + ""/"" + c->GetName()+"".png"");`. Another example is when want to store all DICOM files of a CT scan that you are simulating. The result is always splitted in N files, one per slice, not a single file. Thus it only makes sense to have a TGFileDialog that allows you to select a directory, not a file. I think this functionality is generic enough to be used by more users. In fact, QtFileDialog has exactly this kind of property:. ```. QFileDialog dialog;. dialog.setFileMode(QFileDialog::DirectoryOnly);. dialog.setOption(QFileDialog::ShowDirsOnly, false);. ```. See https://forum.qt.io/topic/62138/qfiledialog-choose-directories-only-but-show-files-as-well/13",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7237
https://github.com/root-project/root/pull/7237:1069,integrability,topic,topic,1069,"There were two more forum posts also:. https://root-forum.cern.ch/t/select-directory-with-tgfiledialog/20481. https://root-forum.cern.ch/t/set-up-working-directory/2528. The alternative solution involves defining extra derived classes, etc, which is a bit of a burden. Selecting a folder is useful, for example when you save all open canvases as .png files. You want to select a output folder, and then the script does: `for(auto c: gROOT->GetListOfCanvases()) c->SaveAs(outputFolder + ""/"" + c->GetName()+"".png"");`. Another example is when want to store all DICOM files of a CT scan that you are simulating. The result is always splitted in N files, one per slice, not a single file. Thus it only makes sense to have a TGFileDialog that allows you to select a directory, not a file. I think this functionality is generic enough to be used by more users. In fact, QtFileDialog has exactly this kind of property:. ```. QFileDialog dialog;. dialog.setFileMode(QFileDialog::DirectoryOnly);. dialog.setOption(QFileDialog::ShowDirsOnly, false);. ```. See https://forum.qt.io/topic/62138/qfiledialog-choose-directories-only-but-show-files-as-well/13",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7237
https://github.com/root-project/root/pull/7237:414,reliability,doe,does,414,"There were two more forum posts also:. https://root-forum.cern.ch/t/select-directory-with-tgfiledialog/20481. https://root-forum.cern.ch/t/set-up-working-directory/2528. The alternative solution involves defining extra derived classes, etc, which is a bit of a burden. Selecting a folder is useful, for example when you save all open canvases as .png files. You want to select a output folder, and then the script does: `for(auto c: gROOT->GetListOfCanvases()) c->SaveAs(outputFolder + ""/"" + c->GetName()+"".png"");`. Another example is when want to store all DICOM files of a CT scan that you are simulating. The result is always splitted in N files, one per slice, not a single file. Thus it only makes sense to have a TGFileDialog that allows you to select a directory, not a file. I think this functionality is generic enough to be used by more users. In fact, QtFileDialog has exactly this kind of property:. ```. QFileDialog dialog;. dialog.setFileMode(QFileDialog::DirectoryOnly);. dialog.setOption(QFileDialog::ShowDirsOnly, false);. ```. See https://forum.qt.io/topic/62138/qfiledialog-choose-directories-only-but-show-files-as-well/13",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7237
https://github.com/root-project/root/pull/7237:658,reliability,sli,slice,658,"There were two more forum posts also:. https://root-forum.cern.ch/t/select-directory-with-tgfiledialog/20481. https://root-forum.cern.ch/t/set-up-working-directory/2528. The alternative solution involves defining extra derived classes, etc, which is a bit of a burden. Selecting a folder is useful, for example when you save all open canvases as .png files. You want to select a output folder, and then the script does: `for(auto c: gROOT->GetListOfCanvases()) c->SaveAs(outputFolder + ""/"" + c->GetName()+"".png"");`. Another example is when want to store all DICOM files of a CT scan that you are simulating. The result is always splitted in N files, one per slice, not a single file. Thus it only makes sense to have a TGFileDialog that allows you to select a directory, not a file. I think this functionality is generic enough to be used by more users. In fact, QtFileDialog has exactly this kind of property:. ```. QFileDialog dialog;. dialog.setFileMode(QFileDialog::DirectoryOnly);. dialog.setOption(QFileDialog::ShowDirsOnly, false);. ```. See https://forum.qt.io/topic/62138/qfiledialog-choose-directories-only-but-show-files-as-well/13",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7237
https://github.com/root-project/root/pull/7237:596,testability,simul,simulating,596,"There were two more forum posts also:. https://root-forum.cern.ch/t/select-directory-with-tgfiledialog/20481. https://root-forum.cern.ch/t/set-up-working-directory/2528. The alternative solution involves defining extra derived classes, etc, which is a bit of a burden. Selecting a folder is useful, for example when you save all open canvases as .png files. You want to select a output folder, and then the script does: `for(auto c: gROOT->GetListOfCanvases()) c->SaveAs(outputFolder + ""/"" + c->GetName()+"".png"");`. Another example is when want to store all DICOM files of a CT scan that you are simulating. The result is always splitted in N files, one per slice, not a single file. Thus it only makes sense to have a TGFileDialog that allows you to select a directory, not a file. I think this functionality is generic enough to be used by more users. In fact, QtFileDialog has exactly this kind of property:. ```. QFileDialog dialog;. dialog.setFileMode(QFileDialog::DirectoryOnly);. dialog.setOption(QFileDialog::ShowDirsOnly, false);. ```. See https://forum.qt.io/topic/62138/qfiledialog-choose-directories-only-but-show-files-as-well/13",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7237
https://github.com/root-project/root/pull/7237:847,usability,user,users,847,"There were two more forum posts also:. https://root-forum.cern.ch/t/select-directory-with-tgfiledialog/20481. https://root-forum.cern.ch/t/set-up-working-directory/2528. The alternative solution involves defining extra derived classes, etc, which is a bit of a burden. Selecting a folder is useful, for example when you save all open canvases as .png files. You want to select a output folder, and then the script does: `for(auto c: gROOT->GetListOfCanvases()) c->SaveAs(outputFolder + ""/"" + c->GetName()+"".png"");`. Another example is when want to store all DICOM files of a CT scan that you are simulating. The result is always splitted in N files, one per slice, not a single file. Thus it only makes sense to have a TGFileDialog that allows you to select a directory, not a file. I think this functionality is generic enough to be used by more users. In fact, QtFileDialog has exactly this kind of property:. ```. QFileDialog dialog;. dialog.setFileMode(QFileDialog::DirectoryOnly);. dialog.setOption(QFileDialog::ShowDirsOnly, false);. ```. See https://forum.qt.io/topic/62138/qfiledialog-choose-directories-only-but-show-files-as-well/13",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7237
https://github.com/root-project/root/pull/7237:929,usability,dialog,dialog,929,"There were two more forum posts also:. https://root-forum.cern.ch/t/select-directory-with-tgfiledialog/20481. https://root-forum.cern.ch/t/set-up-working-directory/2528. The alternative solution involves defining extra derived classes, etc, which is a bit of a burden. Selecting a folder is useful, for example when you save all open canvases as .png files. You want to select a output folder, and then the script does: `for(auto c: gROOT->GetListOfCanvases()) c->SaveAs(outputFolder + ""/"" + c->GetName()+"".png"");`. Another example is when want to store all DICOM files of a CT scan that you are simulating. The result is always splitted in N files, one per slice, not a single file. Thus it only makes sense to have a TGFileDialog that allows you to select a directory, not a file. I think this functionality is generic enough to be used by more users. In fact, QtFileDialog has exactly this kind of property:. ```. QFileDialog dialog;. dialog.setFileMode(QFileDialog::DirectoryOnly);. dialog.setOption(QFileDialog::ShowDirsOnly, false);. ```. See https://forum.qt.io/topic/62138/qfiledialog-choose-directories-only-but-show-files-as-well/13",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7237
https://github.com/root-project/root/pull/7237:938,usability,dialog,dialog,938,"There were two more forum posts also:. https://root-forum.cern.ch/t/select-directory-with-tgfiledialog/20481. https://root-forum.cern.ch/t/set-up-working-directory/2528. The alternative solution involves defining extra derived classes, etc, which is a bit of a burden. Selecting a folder is useful, for example when you save all open canvases as .png files. You want to select a output folder, and then the script does: `for(auto c: gROOT->GetListOfCanvases()) c->SaveAs(outputFolder + ""/"" + c->GetName()+"".png"");`. Another example is when want to store all DICOM files of a CT scan that you are simulating. The result is always splitted in N files, one per slice, not a single file. Thus it only makes sense to have a TGFileDialog that allows you to select a directory, not a file. I think this functionality is generic enough to be used by more users. In fact, QtFileDialog has exactly this kind of property:. ```. QFileDialog dialog;. dialog.setFileMode(QFileDialog::DirectoryOnly);. dialog.setOption(QFileDialog::ShowDirsOnly, false);. ```. See https://forum.qt.io/topic/62138/qfiledialog-choose-directories-only-but-show-files-as-well/13",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7237
https://github.com/root-project/root/pull/7237:987,usability,dialog,dialog,987,"There were two more forum posts also:. https://root-forum.cern.ch/t/select-directory-with-tgfiledialog/20481. https://root-forum.cern.ch/t/set-up-working-directory/2528. The alternative solution involves defining extra derived classes, etc, which is a bit of a burden. Selecting a folder is useful, for example when you save all open canvases as .png files. You want to select a output folder, and then the script does: `for(auto c: gROOT->GetListOfCanvases()) c->SaveAs(outputFolder + ""/"" + c->GetName()+"".png"");`. Another example is when want to store all DICOM files of a CT scan that you are simulating. The result is always splitted in N files, one per slice, not a single file. Thus it only makes sense to have a TGFileDialog that allows you to select a directory, not a file. I think this functionality is generic enough to be used by more users. In fact, QtFileDialog has exactly this kind of property:. ```. QFileDialog dialog;. dialog.setFileMode(QFileDialog::DirectoryOnly);. dialog.setOption(QFileDialog::ShowDirsOnly, false);. ```. See https://forum.qt.io/topic/62138/qfiledialog-choose-directories-only-but-show-files-as-well/13",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7237
https://github.com/root-project/root/pull/7237:15,usability,feedback,feedback,15,Thanks for the feedback. I think I fixed them now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7237
https://github.com/root-project/root/pull/7237:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7237
https://github.com/root-project/root/pull/7237:49,availability,failur,failures,49,"@ferdymercury Thanks for this contribution! Test failures are unrelated, so let's merge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7237
https://github.com/root-project/root/pull/7237:49,deployability,fail,failures,49,"@ferdymercury Thanks for this contribution! Test failures are unrelated, so let's merge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7237
https://github.com/root-project/root/pull/7237:49,performance,failur,failures,49,"@ferdymercury Thanks for this contribution! Test failures are unrelated, so let's merge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7237
https://github.com/root-project/root/pull/7237:49,reliability,fail,failures,49,"@ferdymercury Thanks for this contribution! Test failures are unrelated, so let's merge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7237
https://github.com/root-project/root/pull/7237:44,safety,Test,Test,44,"@ferdymercury Thanks for this contribution! Test failures are unrelated, so let's merge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7237
https://github.com/root-project/root/pull/7237:44,testability,Test,Test,44,"@ferdymercury Thanks for this contribution! Test failures are unrelated, so let's merge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7237
https://github.com/root-project/root/issues/7239:60,performance,time,time,60,"Thanks @hageboeck ! I will give this a go, when I find some time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7239
https://github.com/root-project/root/issues/7239:443,deployability,version,version,443,"Stop, stop, stop! It's much easier, all the code is already there! See this:. | `auto pulls = frame->pullHist();` | `auto pulls = frame->pullHist(nullptr, nullptr, true);` |. | ---- | ---- |. | ![canvas-2](https://user-images.githubusercontent.com/16205615/108338626-c2cbac80-71d6-11eb-8858-d239bf1a74ab.png) | ![canvas](https://user-images.githubusercontent.com/16205615/108338402-80a26b00-71d6-11eb-831d-6d815858616a.png) |. So,. ## Revised version of what has to happen. - Change the default arguments of [pullHist](https://root.cern.ch/doc/master/classRooPlot.html#a7d216156856479ed6b7952823d987532) and [residHist](https://root.cern.ch/doc/master/classRooPlot.html#a0d3911db1f4e0ba5cfcf9e182eea3ed0) to `average = true`. - Update documentation to clarify that by default, the curve will be integrated over all bins. - Mention the change in the [Release notes](https://github.com/root-project/root/blob/master/README/ReleaseNotes/v624/index.md)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7239
https://github.com/root-project/root/issues/7239:728,deployability,Updat,Update,728,"Stop, stop, stop! It's much easier, all the code is already there! See this:. | `auto pulls = frame->pullHist();` | `auto pulls = frame->pullHist(nullptr, nullptr, true);` |. | ---- | ---- |. | ![canvas-2](https://user-images.githubusercontent.com/16205615/108338626-c2cbac80-71d6-11eb-8858-d239bf1a74ab.png) | ![canvas](https://user-images.githubusercontent.com/16205615/108338402-80a26b00-71d6-11eb-831d-6d815858616a.png) |. So,. ## Revised version of what has to happen. - Change the default arguments of [pullHist](https://root.cern.ch/doc/master/classRooPlot.html#a7d216156856479ed6b7952823d987532) and [residHist](https://root.cern.ch/doc/master/classRooPlot.html#a0d3911db1f4e0ba5cfcf9e182eea3ed0) to `average = true`. - Update documentation to clarify that by default, the curve will be integrated over all bins. - Mention the change in the [Release notes](https://github.com/root-project/root/blob/master/README/ReleaseNotes/v624/index.md)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7239
https://github.com/root-project/root/issues/7239:795,deployability,integr,integrated,795,"Stop, stop, stop! It's much easier, all the code is already there! See this:. | `auto pulls = frame->pullHist();` | `auto pulls = frame->pullHist(nullptr, nullptr, true);` |. | ---- | ---- |. | ![canvas-2](https://user-images.githubusercontent.com/16205615/108338626-c2cbac80-71d6-11eb-8858-d239bf1a74ab.png) | ![canvas](https://user-images.githubusercontent.com/16205615/108338402-80a26b00-71d6-11eb-831d-6d815858616a.png) |. So,. ## Revised version of what has to happen. - Change the default arguments of [pullHist](https://root.cern.ch/doc/master/classRooPlot.html#a7d216156856479ed6b7952823d987532) and [residHist](https://root.cern.ch/doc/master/classRooPlot.html#a0d3911db1f4e0ba5cfcf9e182eea3ed0) to `average = true`. - Update documentation to clarify that by default, the curve will be integrated over all bins. - Mention the change in the [Release notes](https://github.com/root-project/root/blob/master/README/ReleaseNotes/v624/index.md)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7239
https://github.com/root-project/root/issues/7239:850,deployability,Releas,Release,850,"Stop, stop, stop! It's much easier, all the code is already there! See this:. | `auto pulls = frame->pullHist();` | `auto pulls = frame->pullHist(nullptr, nullptr, true);` |. | ---- | ---- |. | ![canvas-2](https://user-images.githubusercontent.com/16205615/108338626-c2cbac80-71d6-11eb-8858-d239bf1a74ab.png) | ![canvas](https://user-images.githubusercontent.com/16205615/108338402-80a26b00-71d6-11eb-831d-6d815858616a.png) |. So,. ## Revised version of what has to happen. - Change the default arguments of [pullHist](https://root.cern.ch/doc/master/classRooPlot.html#a7d216156856479ed6b7952823d987532) and [residHist](https://root.cern.ch/doc/master/classRooPlot.html#a0d3911db1f4e0ba5cfcf9e182eea3ed0) to `average = true`. - Update documentation to clarify that by default, the curve will be integrated over all bins. - Mention the change in the [Release notes](https://github.com/root-project/root/blob/master/README/ReleaseNotes/v624/index.md)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7239
https://github.com/root-project/root/issues/7239:921,deployability,Releas,ReleaseNotes,921,"Stop, stop, stop! It's much easier, all the code is already there! See this:. | `auto pulls = frame->pullHist();` | `auto pulls = frame->pullHist(nullptr, nullptr, true);` |. | ---- | ---- |. | ![canvas-2](https://user-images.githubusercontent.com/16205615/108338626-c2cbac80-71d6-11eb-8858-d239bf1a74ab.png) | ![canvas](https://user-images.githubusercontent.com/16205615/108338402-80a26b00-71d6-11eb-831d-6d815858616a.png) |. So,. ## Revised version of what has to happen. - Change the default arguments of [pullHist](https://root.cern.ch/doc/master/classRooPlot.html#a7d216156856479ed6b7952823d987532) and [residHist](https://root.cern.ch/doc/master/classRooPlot.html#a0d3911db1f4e0ba5cfcf9e182eea3ed0) to `average = true`. - Update documentation to clarify that by default, the curve will be integrated over all bins. - Mention the change in the [Release notes](https://github.com/root-project/root/blob/master/README/ReleaseNotes/v624/index.md)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7239
https://github.com/root-project/root/issues/7239:443,integrability,version,version,443,"Stop, stop, stop! It's much easier, all the code is already there! See this:. | `auto pulls = frame->pullHist();` | `auto pulls = frame->pullHist(nullptr, nullptr, true);` |. | ---- | ---- |. | ![canvas-2](https://user-images.githubusercontent.com/16205615/108338626-c2cbac80-71d6-11eb-8858-d239bf1a74ab.png) | ![canvas](https://user-images.githubusercontent.com/16205615/108338402-80a26b00-71d6-11eb-831d-6d815858616a.png) |. So,. ## Revised version of what has to happen. - Change the default arguments of [pullHist](https://root.cern.ch/doc/master/classRooPlot.html#a7d216156856479ed6b7952823d987532) and [residHist](https://root.cern.ch/doc/master/classRooPlot.html#a0d3911db1f4e0ba5cfcf9e182eea3ed0) to `average = true`. - Update documentation to clarify that by default, the curve will be integrated over all bins. - Mention the change in the [Release notes](https://github.com/root-project/root/blob/master/README/ReleaseNotes/v624/index.md)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7239
https://github.com/root-project/root/issues/7239:795,integrability,integr,integrated,795,"Stop, stop, stop! It's much easier, all the code is already there! See this:. | `auto pulls = frame->pullHist();` | `auto pulls = frame->pullHist(nullptr, nullptr, true);` |. | ---- | ---- |. | ![canvas-2](https://user-images.githubusercontent.com/16205615/108338626-c2cbac80-71d6-11eb-8858-d239bf1a74ab.png) | ![canvas](https://user-images.githubusercontent.com/16205615/108338402-80a26b00-71d6-11eb-831d-6d815858616a.png) |. So,. ## Revised version of what has to happen. - Change the default arguments of [pullHist](https://root.cern.ch/doc/master/classRooPlot.html#a7d216156856479ed6b7952823d987532) and [residHist](https://root.cern.ch/doc/master/classRooPlot.html#a0d3911db1f4e0ba5cfcf9e182eea3ed0) to `average = true`. - Update documentation to clarify that by default, the curve will be integrated over all bins. - Mention the change in the [Release notes](https://github.com/root-project/root/blob/master/README/ReleaseNotes/v624/index.md)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7239
https://github.com/root-project/root/issues/7239:795,interoperability,integr,integrated,795,"Stop, stop, stop! It's much easier, all the code is already there! See this:. | `auto pulls = frame->pullHist();` | `auto pulls = frame->pullHist(nullptr, nullptr, true);` |. | ---- | ---- |. | ![canvas-2](https://user-images.githubusercontent.com/16205615/108338626-c2cbac80-71d6-11eb-8858-d239bf1a74ab.png) | ![canvas](https://user-images.githubusercontent.com/16205615/108338402-80a26b00-71d6-11eb-831d-6d815858616a.png) |. So,. ## Revised version of what has to happen. - Change the default arguments of [pullHist](https://root.cern.ch/doc/master/classRooPlot.html#a7d216156856479ed6b7952823d987532) and [residHist](https://root.cern.ch/doc/master/classRooPlot.html#a0d3911db1f4e0ba5cfcf9e182eea3ed0) to `average = true`. - Update documentation to clarify that by default, the curve will be integrated over all bins. - Mention the change in the [Release notes](https://github.com/root-project/root/blob/master/README/ReleaseNotes/v624/index.md)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7239
https://github.com/root-project/root/issues/7239:443,modifiability,version,version,443,"Stop, stop, stop! It's much easier, all the code is already there! See this:. | `auto pulls = frame->pullHist();` | `auto pulls = frame->pullHist(nullptr, nullptr, true);` |. | ---- | ---- |. | ![canvas-2](https://user-images.githubusercontent.com/16205615/108338626-c2cbac80-71d6-11eb-8858-d239bf1a74ab.png) | ![canvas](https://user-images.githubusercontent.com/16205615/108338402-80a26b00-71d6-11eb-831d-6d815858616a.png) |. So,. ## Revised version of what has to happen. - Change the default arguments of [pullHist](https://root.cern.ch/doc/master/classRooPlot.html#a7d216156856479ed6b7952823d987532) and [residHist](https://root.cern.ch/doc/master/classRooPlot.html#a0d3911db1f4e0ba5cfcf9e182eea3ed0) to `average = true`. - Update documentation to clarify that by default, the curve will be integrated over all bins. - Mention the change in the [Release notes](https://github.com/root-project/root/blob/master/README/ReleaseNotes/v624/index.md)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7239
https://github.com/root-project/root/issues/7239:795,modifiability,integr,integrated,795,"Stop, stop, stop! It's much easier, all the code is already there! See this:. | `auto pulls = frame->pullHist();` | `auto pulls = frame->pullHist(nullptr, nullptr, true);` |. | ---- | ---- |. | ![canvas-2](https://user-images.githubusercontent.com/16205615/108338626-c2cbac80-71d6-11eb-8858-d239bf1a74ab.png) | ![canvas](https://user-images.githubusercontent.com/16205615/108338402-80a26b00-71d6-11eb-831d-6d815858616a.png) |. So,. ## Revised version of what has to happen. - Change the default arguments of [pullHist](https://root.cern.ch/doc/master/classRooPlot.html#a7d216156856479ed6b7952823d987532) and [residHist](https://root.cern.ch/doc/master/classRooPlot.html#a0d3911db1f4e0ba5cfcf9e182eea3ed0) to `average = true`. - Update documentation to clarify that by default, the curve will be integrated over all bins. - Mention the change in the [Release notes](https://github.com/root-project/root/blob/master/README/ReleaseNotes/v624/index.md)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7239
https://github.com/root-project/root/issues/7239:795,reliability,integr,integrated,795,"Stop, stop, stop! It's much easier, all the code is already there! See this:. | `auto pulls = frame->pullHist();` | `auto pulls = frame->pullHist(nullptr, nullptr, true);` |. | ---- | ---- |. | ![canvas-2](https://user-images.githubusercontent.com/16205615/108338626-c2cbac80-71d6-11eb-8858-d239bf1a74ab.png) | ![canvas](https://user-images.githubusercontent.com/16205615/108338402-80a26b00-71d6-11eb-831d-6d815858616a.png) |. So,. ## Revised version of what has to happen. - Change the default arguments of [pullHist](https://root.cern.ch/doc/master/classRooPlot.html#a7d216156856479ed6b7952823d987532) and [residHist](https://root.cern.ch/doc/master/classRooPlot.html#a0d3911db1f4e0ba5cfcf9e182eea3ed0) to `average = true`. - Update documentation to clarify that by default, the curve will be integrated over all bins. - Mention the change in the [Release notes](https://github.com/root-project/root/blob/master/README/ReleaseNotes/v624/index.md)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7239
https://github.com/root-project/root/issues/7239:728,safety,Updat,Update,728,"Stop, stop, stop! It's much easier, all the code is already there! See this:. | `auto pulls = frame->pullHist();` | `auto pulls = frame->pullHist(nullptr, nullptr, true);` |. | ---- | ---- |. | ![canvas-2](https://user-images.githubusercontent.com/16205615/108338626-c2cbac80-71d6-11eb-8858-d239bf1a74ab.png) | ![canvas](https://user-images.githubusercontent.com/16205615/108338402-80a26b00-71d6-11eb-831d-6d815858616a.png) |. So,. ## Revised version of what has to happen. - Change the default arguments of [pullHist](https://root.cern.ch/doc/master/classRooPlot.html#a7d216156856479ed6b7952823d987532) and [residHist](https://root.cern.ch/doc/master/classRooPlot.html#a0d3911db1f4e0ba5cfcf9e182eea3ed0) to `average = true`. - Update documentation to clarify that by default, the curve will be integrated over all bins. - Mention the change in the [Release notes](https://github.com/root-project/root/blob/master/README/ReleaseNotes/v624/index.md)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7239
https://github.com/root-project/root/issues/7239:728,security,Updat,Update,728,"Stop, stop, stop! It's much easier, all the code is already there! See this:. | `auto pulls = frame->pullHist();` | `auto pulls = frame->pullHist(nullptr, nullptr, true);` |. | ---- | ---- |. | ![canvas-2](https://user-images.githubusercontent.com/16205615/108338626-c2cbac80-71d6-11eb-8858-d239bf1a74ab.png) | ![canvas](https://user-images.githubusercontent.com/16205615/108338402-80a26b00-71d6-11eb-831d-6d815858616a.png) |. So,. ## Revised version of what has to happen. - Change the default arguments of [pullHist](https://root.cern.ch/doc/master/classRooPlot.html#a7d216156856479ed6b7952823d987532) and [residHist](https://root.cern.ch/doc/master/classRooPlot.html#a0d3911db1f4e0ba5cfcf9e182eea3ed0) to `average = true`. - Update documentation to clarify that by default, the curve will be integrated over all bins. - Mention the change in the [Release notes](https://github.com/root-project/root/blob/master/README/ReleaseNotes/v624/index.md)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7239
https://github.com/root-project/root/issues/7239:795,security,integr,integrated,795,"Stop, stop, stop! It's much easier, all the code is already there! See this:. | `auto pulls = frame->pullHist();` | `auto pulls = frame->pullHist(nullptr, nullptr, true);` |. | ---- | ---- |. | ![canvas-2](https://user-images.githubusercontent.com/16205615/108338626-c2cbac80-71d6-11eb-8858-d239bf1a74ab.png) | ![canvas](https://user-images.githubusercontent.com/16205615/108338402-80a26b00-71d6-11eb-831d-6d815858616a.png) |. So,. ## Revised version of what has to happen. - Change the default arguments of [pullHist](https://root.cern.ch/doc/master/classRooPlot.html#a7d216156856479ed6b7952823d987532) and [residHist](https://root.cern.ch/doc/master/classRooPlot.html#a0d3911db1f4e0ba5cfcf9e182eea3ed0) to `average = true`. - Update documentation to clarify that by default, the curve will be integrated over all bins. - Mention the change in the [Release notes](https://github.com/root-project/root/blob/master/README/ReleaseNotes/v624/index.md)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7239
https://github.com/root-project/root/issues/7239:795,testability,integr,integrated,795,"Stop, stop, stop! It's much easier, all the code is already there! See this:. | `auto pulls = frame->pullHist();` | `auto pulls = frame->pullHist(nullptr, nullptr, true);` |. | ---- | ---- |. | ![canvas-2](https://user-images.githubusercontent.com/16205615/108338626-c2cbac80-71d6-11eb-8858-d239bf1a74ab.png) | ![canvas](https://user-images.githubusercontent.com/16205615/108338402-80a26b00-71d6-11eb-831d-6d815858616a.png) |. So,. ## Revised version of what has to happen. - Change the default arguments of [pullHist](https://root.cern.ch/doc/master/classRooPlot.html#a7d216156856479ed6b7952823d987532) and [residHist](https://root.cern.ch/doc/master/classRooPlot.html#a0d3911db1f4e0ba5cfcf9e182eea3ed0) to `average = true`. - Update documentation to clarify that by default, the curve will be integrated over all bins. - Mention the change in the [Release notes](https://github.com/root-project/root/blob/master/README/ReleaseNotes/v624/index.md)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7239
https://github.com/root-project/root/issues/7239:0,usability,Stop,Stop,0,"Stop, stop, stop! It's much easier, all the code is already there! See this:. | `auto pulls = frame->pullHist();` | `auto pulls = frame->pullHist(nullptr, nullptr, true);` |. | ---- | ---- |. | ![canvas-2](https://user-images.githubusercontent.com/16205615/108338626-c2cbac80-71d6-11eb-8858-d239bf1a74ab.png) | ![canvas](https://user-images.githubusercontent.com/16205615/108338402-80a26b00-71d6-11eb-831d-6d815858616a.png) |. So,. ## Revised version of what has to happen. - Change the default arguments of [pullHist](https://root.cern.ch/doc/master/classRooPlot.html#a7d216156856479ed6b7952823d987532) and [residHist](https://root.cern.ch/doc/master/classRooPlot.html#a0d3911db1f4e0ba5cfcf9e182eea3ed0) to `average = true`. - Update documentation to clarify that by default, the curve will be integrated over all bins. - Mention the change in the [Release notes](https://github.com/root-project/root/blob/master/README/ReleaseNotes/v624/index.md)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7239
https://github.com/root-project/root/issues/7239:6,usability,stop,stop,6,"Stop, stop, stop! It's much easier, all the code is already there! See this:. | `auto pulls = frame->pullHist();` | `auto pulls = frame->pullHist(nullptr, nullptr, true);` |. | ---- | ---- |. | ![canvas-2](https://user-images.githubusercontent.com/16205615/108338626-c2cbac80-71d6-11eb-8858-d239bf1a74ab.png) | ![canvas](https://user-images.githubusercontent.com/16205615/108338402-80a26b00-71d6-11eb-831d-6d815858616a.png) |. So,. ## Revised version of what has to happen. - Change the default arguments of [pullHist](https://root.cern.ch/doc/master/classRooPlot.html#a7d216156856479ed6b7952823d987532) and [residHist](https://root.cern.ch/doc/master/classRooPlot.html#a0d3911db1f4e0ba5cfcf9e182eea3ed0) to `average = true`. - Update documentation to clarify that by default, the curve will be integrated over all bins. - Mention the change in the [Release notes](https://github.com/root-project/root/blob/master/README/ReleaseNotes/v624/index.md)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7239
https://github.com/root-project/root/issues/7239:12,usability,stop,stop,12,"Stop, stop, stop! It's much easier, all the code is already there! See this:. | `auto pulls = frame->pullHist();` | `auto pulls = frame->pullHist(nullptr, nullptr, true);` |. | ---- | ---- |. | ![canvas-2](https://user-images.githubusercontent.com/16205615/108338626-c2cbac80-71d6-11eb-8858-d239bf1a74ab.png) | ![canvas](https://user-images.githubusercontent.com/16205615/108338402-80a26b00-71d6-11eb-831d-6d815858616a.png) |. So,. ## Revised version of what has to happen. - Change the default arguments of [pullHist](https://root.cern.ch/doc/master/classRooPlot.html#a7d216156856479ed6b7952823d987532) and [residHist](https://root.cern.ch/doc/master/classRooPlot.html#a0d3911db1f4e0ba5cfcf9e182eea3ed0) to `average = true`. - Update documentation to clarify that by default, the curve will be integrated over all bins. - Mention the change in the [Release notes](https://github.com/root-project/root/blob/master/README/ReleaseNotes/v624/index.md)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7239
https://github.com/root-project/root/issues/7239:214,usability,user,user-images,214,"Stop, stop, stop! It's much easier, all the code is already there! See this:. | `auto pulls = frame->pullHist();` | `auto pulls = frame->pullHist(nullptr, nullptr, true);` |. | ---- | ---- |. | ![canvas-2](https://user-images.githubusercontent.com/16205615/108338626-c2cbac80-71d6-11eb-8858-d239bf1a74ab.png) | ![canvas](https://user-images.githubusercontent.com/16205615/108338402-80a26b00-71d6-11eb-831d-6d815858616a.png) |. So,. ## Revised version of what has to happen. - Change the default arguments of [pullHist](https://root.cern.ch/doc/master/classRooPlot.html#a7d216156856479ed6b7952823d987532) and [residHist](https://root.cern.ch/doc/master/classRooPlot.html#a0d3911db1f4e0ba5cfcf9e182eea3ed0) to `average = true`. - Update documentation to clarify that by default, the curve will be integrated over all bins. - Mention the change in the [Release notes](https://github.com/root-project/root/blob/master/README/ReleaseNotes/v624/index.md)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7239
https://github.com/root-project/root/issues/7239:329,usability,user,user-images,329,"Stop, stop, stop! It's much easier, all the code is already there! See this:. | `auto pulls = frame->pullHist();` | `auto pulls = frame->pullHist(nullptr, nullptr, true);` |. | ---- | ---- |. | ![canvas-2](https://user-images.githubusercontent.com/16205615/108338626-c2cbac80-71d6-11eb-8858-d239bf1a74ab.png) | ![canvas](https://user-images.githubusercontent.com/16205615/108338402-80a26b00-71d6-11eb-831d-6d815858616a.png) |. So,. ## Revised version of what has to happen. - Change the default arguments of [pullHist](https://root.cern.ch/doc/master/classRooPlot.html#a7d216156856479ed6b7952823d987532) and [residHist](https://root.cern.ch/doc/master/classRooPlot.html#a0d3911db1f4e0ba5cfcf9e182eea3ed0) to `average = true`. - Update documentation to clarify that by default, the curve will be integrated over all bins. - Mention the change in the [Release notes](https://github.com/root-project/root/blob/master/README/ReleaseNotes/v624/index.md)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7239
https://github.com/root-project/root/issues/7239:735,usability,document,documentation,735,"Stop, stop, stop! It's much easier, all the code is already there! See this:. | `auto pulls = frame->pullHist();` | `auto pulls = frame->pullHist(nullptr, nullptr, true);` |. | ---- | ---- |. | ![canvas-2](https://user-images.githubusercontent.com/16205615/108338626-c2cbac80-71d6-11eb-8858-d239bf1a74ab.png) | ![canvas](https://user-images.githubusercontent.com/16205615/108338402-80a26b00-71d6-11eb-831d-6d815858616a.png) |. So,. ## Revised version of what has to happen. - Change the default arguments of [pullHist](https://root.cern.ch/doc/master/classRooPlot.html#a7d216156856479ed6b7952823d987532) and [residHist](https://root.cern.ch/doc/master/classRooPlot.html#a0d3911db1f4e0ba5cfcf9e182eea3ed0) to `average = true`. - Update documentation to clarify that by default, the curve will be integrated over all bins. - Mention the change in the [Release notes](https://github.com/root-project/root/blob/master/README/ReleaseNotes/v624/index.md)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7239
https://github.com/root-project/root/pull/7244:10,safety,test,tests,10,Merged as tests don't test this part of code anyways.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7244
https://github.com/root-project/root/pull/7244:22,safety,test,test,22,Merged as tests don't test this part of code anyways.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7244
https://github.com/root-project/root/pull/7244:10,testability,test,tests,10,Merged as tests don't test this part of code anyways.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7244
https://github.com/root-project/root/pull/7244:22,testability,test,test,22,Merged as tests don't test this part of code anyways.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7244
https://github.com/root-project/root/pull/7245:156,deployability,releas,release,156,Last force-push splits PR into two commits following advice from @hageboeck (thanks!): one commit for the changes in the RooFit code and one commit for the release note change. Now the PR is again ready to be reviewed as far as I'm concerned.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7245
https://github.com/root-project/root/pull/7245:232,modifiability,concern,concerned,232,Last force-push splits PR into two commits following advice from @hageboeck (thanks!): one commit for the changes in the RooFit code and one commit for the release note change. Now the PR is again ready to be reviewed as far as I'm concerned.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7245
https://github.com/root-project/root/pull/7245:209,safety,review,reviewed,209,Last force-push splits PR into two commits following advice from @hageboeck (thanks!): one commit for the changes in the RooFit code and one commit for the release note change. Now the PR is again ready to be reviewed as far as I'm concerned.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7245
https://github.com/root-project/root/pull/7245:209,testability,review,reviewed,209,Last force-push splits PR into two commits following advice from @hageboeck (thanks!): one commit for the changes in the RooFit code and one commit for the release note change. Now the PR is again ready to be reviewed as far as I'm concerned.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7245
https://github.com/root-project/root/pull/7245:232,testability,concern,concerned,232,Last force-push splits PR into two commits following advice from @hageboeck (thanks!): one commit for the changes in the RooFit code and one commit for the release note change. Now the PR is again ready to be reviewed as far as I'm concerned.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7245
https://github.com/root-project/root/pull/7246:10,safety,test,tests,10,Merged as tests don't test this part of code anyways.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7246
https://github.com/root-project/root/pull/7246:22,safety,test,test,22,Merged as tests don't test this part of code anyways.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7246
https://github.com/root-project/root/pull/7246:10,testability,test,tests,10,Merged as tests don't test this part of code anyways.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7246
https://github.com/root-project/root/pull/7246:22,testability,test,test,22,Merged as tests don't test this part of code anyways.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7246
https://github.com/root-project/root/pull/7247:0,safety,Test,Tests,0,Tests don't test this part of code anyways.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7247
https://github.com/root-project/root/pull/7247:12,safety,test,test,12,Tests don't test this part of code anyways.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7247
https://github.com/root-project/root/pull/7247:0,testability,Test,Tests,0,Tests don't test this part of code anyways.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7247
https://github.com/root-project/root/pull/7247:12,testability,test,test,12,Tests don't test this part of code anyways.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7247
https://github.com/root-project/root/pull/7247:2,safety,Test,Tests,2,> Tests don't test this part of code anyways. should they?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7247
https://github.com/root-project/root/pull/7247:14,safety,test,test,14,> Tests don't test this part of code anyways. should they?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7247
https://github.com/root-project/root/pull/7247:2,testability,Test,Tests,2,> Tests don't test this part of code anyways. should they?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7247
https://github.com/root-project/root/pull/7247:14,testability,test,test,14,> Tests don't test this part of code anyways. should they?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7247
