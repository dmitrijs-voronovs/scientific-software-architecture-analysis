id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/pull/12950:988,energy efficiency,model,model,988,"[RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`; This commit fixes the resetting of the y-axis limits at the end of `RooCurve::shiftCurveToZero()`. In particular, it now sets also the minimium limit correctly, which was not changed before even though it needs to be changed too. Here is an example of a liklihood plot that looks good after this commit, but had wrong y-ranges before:. ```c++. using namespace RooFit;. RooRealVar x(""x"", """", 100, 160);. RooRealVar sigmean(""sigmean"", """", 125, 100, 140);. RooGaussian signalModel(""signal"", """", x, sigmean, RooConst(2.0));. RooExponential background(""background"", """", x, RooConst(-0.03));. // double nbkgVal = 10;. // double nbkgVal = 200;. double nbkgVal = 5000;. RooRealVar nsig(""nsig"", """", 200, 0., 1000);. RooRealVar nbkg(""nbkg"", """", nbkgVal, 0., 10000);. RooAddPdf model(""model"", """", {signalModel, background}, {nsig, nbkg});. std::unique_ptr<RooDataSet> data{model.generate(x)};. std::unique_ptr<RooAbsReal> nll{model.createNLL(*data)};. RooPlot *frame1 = sigmean.frame();. nll->plotOn(frame1, ShiftToZero());. frame1->Draw();. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12950
https://github.com/root-project/root/pull/12950:1095,energy efficiency,Draw,Draw,1095,"[RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`; This commit fixes the resetting of the y-axis limits at the end of `RooCurve::shiftCurveToZero()`. In particular, it now sets also the minimium limit correctly, which was not changed before even though it needs to be changed too. Here is an example of a liklihood plot that looks good after this commit, but had wrong y-ranges before:. ```c++. using namespace RooFit;. RooRealVar x(""x"", """", 100, 160);. RooRealVar sigmean(""sigmean"", """", 125, 100, 140);. RooGaussian signalModel(""signal"", """", x, sigmean, RooConst(2.0));. RooExponential background(""background"", """", x, RooConst(-0.03));. // double nbkgVal = 10;. // double nbkgVal = 200;. double nbkgVal = 5000;. RooRealVar nsig(""nsig"", """", 200, 0., 1000);. RooRealVar nbkg(""nbkg"", """", nbkgVal, 0., 10000);. RooAddPdf model(""model"", """", {signalModel, background}, {nsig, nbkg});. std::unique_ptr<RooDataSet> data{model.generate(x)};. std::unique_ptr<RooAbsReal> nll{model.createNLL(*data)};. RooPlot *frame1 = sigmean.frame();. nll->plotOn(frame1, ShiftToZero());. frame1->Draw();. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12950
https://github.com/root-project/root/pull/12950:539,security,sign,signalModel,539,"[RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`; This commit fixes the resetting of the y-axis limits at the end of `RooCurve::shiftCurveToZero()`. In particular, it now sets also the minimium limit correctly, which was not changed before even though it needs to be changed too. Here is an example of a liklihood plot that looks good after this commit, but had wrong y-ranges before:. ```c++. using namespace RooFit;. RooRealVar x(""x"", """", 100, 160);. RooRealVar sigmean(""sigmean"", """", 125, 100, 140);. RooGaussian signalModel(""signal"", """", x, sigmean, RooConst(2.0));. RooExponential background(""background"", """", x, RooConst(-0.03));. // double nbkgVal = 10;. // double nbkgVal = 200;. double nbkgVal = 5000;. RooRealVar nsig(""nsig"", """", 200, 0., 1000);. RooRealVar nbkg(""nbkg"", """", nbkgVal, 0., 10000);. RooAddPdf model(""model"", """", {signalModel, background}, {nsig, nbkg});. std::unique_ptr<RooDataSet> data{model.generate(x)};. std::unique_ptr<RooAbsReal> nll{model.createNLL(*data)};. RooPlot *frame1 = sigmean.frame();. nll->plotOn(frame1, ShiftToZero());. frame1->Draw();. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12950
https://github.com/root-project/root/pull/12950:552,security,sign,signal,552,"[RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`; This commit fixes the resetting of the y-axis limits at the end of `RooCurve::shiftCurveToZero()`. In particular, it now sets also the minimium limit correctly, which was not changed before even though it needs to be changed too. Here is an example of a liklihood plot that looks good after this commit, but had wrong y-ranges before:. ```c++. using namespace RooFit;. RooRealVar x(""x"", """", 100, 160);. RooRealVar sigmean(""sigmean"", """", 125, 100, 140);. RooGaussian signalModel(""signal"", """", x, sigmean, RooConst(2.0));. RooExponential background(""background"", """", x, RooConst(-0.03));. // double nbkgVal = 10;. // double nbkgVal = 200;. double nbkgVal = 5000;. RooRealVar nsig(""nsig"", """", 200, 0., 1000);. RooRealVar nbkg(""nbkg"", """", nbkgVal, 0., 10000);. RooAddPdf model(""model"", """", {signalModel, background}, {nsig, nbkg});. std::unique_ptr<RooDataSet> data{model.generate(x)};. std::unique_ptr<RooAbsReal> nll{model.createNLL(*data)};. RooPlot *frame1 = sigmean.frame();. nll->plotOn(frame1, ShiftToZero());. frame1->Draw();. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12950
https://github.com/root-project/root/pull/12950:840,security,model,model,840,"[RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`; This commit fixes the resetting of the y-axis limits at the end of `RooCurve::shiftCurveToZero()`. In particular, it now sets also the minimium limit correctly, which was not changed before even though it needs to be changed too. Here is an example of a liklihood plot that looks good after this commit, but had wrong y-ranges before:. ```c++. using namespace RooFit;. RooRealVar x(""x"", """", 100, 160);. RooRealVar sigmean(""sigmean"", """", 125, 100, 140);. RooGaussian signalModel(""signal"", """", x, sigmean, RooConst(2.0));. RooExponential background(""background"", """", x, RooConst(-0.03));. // double nbkgVal = 10;. // double nbkgVal = 200;. double nbkgVal = 5000;. RooRealVar nsig(""nsig"", """", 200, 0., 1000);. RooRealVar nbkg(""nbkg"", """", nbkgVal, 0., 10000);. RooAddPdf model(""model"", """", {signalModel, background}, {nsig, nbkg});. std::unique_ptr<RooDataSet> data{model.generate(x)};. std::unique_ptr<RooAbsReal> nll{model.createNLL(*data)};. RooPlot *frame1 = sigmean.frame();. nll->plotOn(frame1, ShiftToZero());. frame1->Draw();. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12950
https://github.com/root-project/root/pull/12950:847,security,model,model,847,"[RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`; This commit fixes the resetting of the y-axis limits at the end of `RooCurve::shiftCurveToZero()`. In particular, it now sets also the minimium limit correctly, which was not changed before even though it needs to be changed too. Here is an example of a liklihood plot that looks good after this commit, but had wrong y-ranges before:. ```c++. using namespace RooFit;. RooRealVar x(""x"", """", 100, 160);. RooRealVar sigmean(""sigmean"", """", 125, 100, 140);. RooGaussian signalModel(""signal"", """", x, sigmean, RooConst(2.0));. RooExponential background(""background"", """", x, RooConst(-0.03));. // double nbkgVal = 10;. // double nbkgVal = 200;. double nbkgVal = 5000;. RooRealVar nsig(""nsig"", """", 200, 0., 1000);. RooRealVar nbkg(""nbkg"", """", nbkgVal, 0., 10000);. RooAddPdf model(""model"", """", {signalModel, background}, {nsig, nbkg});. std::unique_ptr<RooDataSet> data{model.generate(x)};. std::unique_ptr<RooAbsReal> nll{model.createNLL(*data)};. RooPlot *frame1 = sigmean.frame();. nll->plotOn(frame1, ShiftToZero());. frame1->Draw();. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12950
https://github.com/root-project/root/pull/12950:860,security,sign,signalModel,860,"[RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`; This commit fixes the resetting of the y-axis limits at the end of `RooCurve::shiftCurveToZero()`. In particular, it now sets also the minimium limit correctly, which was not changed before even though it needs to be changed too. Here is an example of a liklihood plot that looks good after this commit, but had wrong y-ranges before:. ```c++. using namespace RooFit;. RooRealVar x(""x"", """", 100, 160);. RooRealVar sigmean(""sigmean"", """", 125, 100, 140);. RooGaussian signalModel(""signal"", """", x, sigmean, RooConst(2.0));. RooExponential background(""background"", """", x, RooConst(-0.03));. // double nbkgVal = 10;. // double nbkgVal = 200;. double nbkgVal = 5000;. RooRealVar nsig(""nsig"", """", 200, 0., 1000);. RooRealVar nbkg(""nbkg"", """", nbkgVal, 0., 10000);. RooAddPdf model(""model"", """", {signalModel, background}, {nsig, nbkg});. std::unique_ptr<RooDataSet> data{model.generate(x)};. std::unique_ptr<RooAbsReal> nll{model.createNLL(*data)};. RooPlot *frame1 = sigmean.frame();. nll->plotOn(frame1, ShiftToZero());. frame1->Draw();. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12950
https://github.com/root-project/root/pull/12950:935,security,model,model,935,"[RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`; This commit fixes the resetting of the y-axis limits at the end of `RooCurve::shiftCurveToZero()`. In particular, it now sets also the minimium limit correctly, which was not changed before even though it needs to be changed too. Here is an example of a liklihood plot that looks good after this commit, but had wrong y-ranges before:. ```c++. using namespace RooFit;. RooRealVar x(""x"", """", 100, 160);. RooRealVar sigmean(""sigmean"", """", 125, 100, 140);. RooGaussian signalModel(""signal"", """", x, sigmean, RooConst(2.0));. RooExponential background(""background"", """", x, RooConst(-0.03));. // double nbkgVal = 10;. // double nbkgVal = 200;. double nbkgVal = 5000;. RooRealVar nsig(""nsig"", """", 200, 0., 1000);. RooRealVar nbkg(""nbkg"", """", nbkgVal, 0., 10000);. RooAddPdf model(""model"", """", {signalModel, background}, {nsig, nbkg});. std::unique_ptr<RooDataSet> data{model.generate(x)};. std::unique_ptr<RooAbsReal> nll{model.createNLL(*data)};. RooPlot *frame1 = sigmean.frame();. nll->plotOn(frame1, ShiftToZero());. frame1->Draw();. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12950
https://github.com/root-project/root/pull/12950:988,security,model,model,988,"[RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`; This commit fixes the resetting of the y-axis limits at the end of `RooCurve::shiftCurveToZero()`. In particular, it now sets also the minimium limit correctly, which was not changed before even though it needs to be changed too. Here is an example of a liklihood plot that looks good after this commit, but had wrong y-ranges before:. ```c++. using namespace RooFit;. RooRealVar x(""x"", """", 100, 160);. RooRealVar sigmean(""sigmean"", """", 125, 100, 140);. RooGaussian signalModel(""signal"", """", x, sigmean, RooConst(2.0));. RooExponential background(""background"", """", x, RooConst(-0.03));. // double nbkgVal = 10;. // double nbkgVal = 200;. double nbkgVal = 5000;. RooRealVar nsig(""nsig"", """", 200, 0., 1000);. RooRealVar nbkg(""nbkg"", """", nbkgVal, 0., 10000);. RooAddPdf model(""model"", """", {signalModel, background}, {nsig, nbkg});. std::unique_ptr<RooDataSet> data{model.generate(x)};. std::unique_ptr<RooAbsReal> nll{model.createNLL(*data)};. RooPlot *frame1 = sigmean.frame();. nll->plotOn(frame1, ShiftToZero());. frame1->Draw();. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12950
https://github.com/root-project/root/pull/12950:208,usability,minim,minimium,208,"[RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`; This commit fixes the resetting of the y-axis limits at the end of `RooCurve::shiftCurveToZero()`. In particular, it now sets also the minimium limit correctly, which was not changed before even though it needs to be changed too. Here is an example of a liklihood plot that looks good after this commit, but had wrong y-ranges before:. ```c++. using namespace RooFit;. RooRealVar x(""x"", """", 100, 160);. RooRealVar sigmean(""sigmean"", """", 125, 100, 140);. RooGaussian signalModel(""signal"", """", x, sigmean, RooConst(2.0));. RooExponential background(""background"", """", x, RooConst(-0.03));. // double nbkgVal = 10;. // double nbkgVal = 200;. double nbkgVal = 5000;. RooRealVar nsig(""nsig"", """", 200, 0., 1000);. RooRealVar nbkg(""nbkg"", """", nbkgVal, 0., 10000);. RooAddPdf model(""model"", """", {signalModel, background}, {nsig, nbkg});. std::unique_ptr<RooDataSet> data{model.generate(x)};. std::unique_ptr<RooAbsReal> nll{model.createNLL(*data)};. RooPlot *frame1 = sigmean.frame();. nll->plotOn(frame1, ShiftToZero());. frame1->Draw();. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12950
https://github.com/root-project/root/pull/12951:181,availability,error,errors,181,"[windows] Fix the C++ notebooks on Windows (#12912); * [windows][skip-ci] Fix the C++ notebooks on Windows. * [windows][skip-ci] Fix the C++ notebooks on Windows. Fix the following errors in `bindings/jupyroot/python/JupyROOT/kernel/utils.py`:. ```. Traceback (most recent call last):. File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 70, in __init__. module = importlib.import_module(module_path). File ""c:\python39-32\lib\importlib\__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'JupyROOT.kernel.magics.magics\\cppmagic'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:2307,availability,Error,Error,2307,"File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~~~~. input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'. (dlopen(""libRint.so"", RTLD_NOW)). ^. ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:2359,availability,Error,Error,2359,"File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~~~~. input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'. (dlopen(""libRint.so"", RTLD_NOW)). ^. ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:2538,availability,error,error,2538,"File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~~~~. input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'. (dlopen(""libRint.so"", RTLD_NOW)). ^. ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:2602,availability,error,error,2602,"File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~~~~. input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'. (dlopen(""libRint.so"", RTLD_NOW)). ^. ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:310,deployability,build,build,310,"[windows] Fix the C++ notebooks on Windows (#12912); * [windows][skip-ci] Fix the C++ notebooks on Windows. * [windows][skip-ci] Fix the C++ notebooks on Windows. Fix the following errors in `bindings/jupyroot/python/JupyROOT/kernel/utils.py`:. ```. Traceback (most recent call last):. File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 70, in __init__. module = importlib.import_module(module_path). File ""c:\python39-32\lib\importlib\__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'JupyROOT.kernel.magics.magics\\cppmagic'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:320,deployability,releas,release,320,"[windows] Fix the C++ notebooks on Windows (#12912); * [windows][skip-ci] Fix the C++ notebooks on Windows. * [windows][skip-ci] Fix the C++ notebooks on Windows. Fix the following errors in `bindings/jupyroot/python/JupyROOT/kernel/utils.py`:. ```. Traceback (most recent call last):. File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 70, in __init__. module = importlib.import_module(module_path). File ""c:\python39-32\lib\importlib\__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'JupyROOT.kernel.magics.magics\\cppmagic'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:381,deployability,modul,module,381,"[windows] Fix the C++ notebooks on Windows (#12912); * [windows][skip-ci] Fix the C++ notebooks on Windows. * [windows][skip-ci] Fix the C++ notebooks on Windows. Fix the following errors in `bindings/jupyroot/python/JupyROOT/kernel/utils.py`:. ```. Traceback (most recent call last):. File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 70, in __init__. module = importlib.import_module(module_path). File ""c:\python39-32\lib\importlib\__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'JupyROOT.kernel.magics.magics\\cppmagic'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:775,deployability,Modul,ModuleNotFoundError,775,"[windows] Fix the C++ notebooks on Windows (#12912); * [windows][skip-ci] Fix the C++ notebooks on Windows. * [windows][skip-ci] Fix the C++ notebooks on Windows. Fix the following errors in `bindings/jupyroot/python/JupyROOT/kernel/utils.py`:. ```. Traceback (most recent call last):. File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 70, in __init__. module = importlib.import_module(module_path). File ""c:\python39-32\lib\importlib\__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'JupyROOT.kernel.magics.magics\\cppmagic'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:799,deployability,modul,module,799,"[windows] Fix the C++ notebooks on Windows (#12912); * [windows][skip-ci] Fix the C++ notebooks on Windows. * [windows][skip-ci] Fix the C++ notebooks on Windows. Fix the following errors in `bindings/jupyroot/python/JupyROOT/kernel/utils.py`:. ```. Traceback (most recent call last):. File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 70, in __init__. module = importlib.import_module(module_path). File ""c:\python39-32\lib\importlib\__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'JupyROOT.kernel.magics.magics\\cppmagic'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:1182,deployability,build,build,1182,"rs in `bindings/jupyroot/python/JupyROOT/kernel/utils.py`:. ```. Traceback (most recent call last):. File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 70, in __init__. module = importlib.import_module(module_path). File ""c:\python39-32\lib\importlib\__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'JupyROOT.kernel.magics.magics\\cppmagic'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoad",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:1192,deployability,releas,release,1192,"ings/jupyroot/python/JupyROOT/kernel/utils.py`:. ```. Traceback (most recent call last):. File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 70, in __init__. module = importlib.import_module(module_path). File ""c:\python39-32\lib\importlib\__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'JupyROOT.kernel.magics.magics\\cppmagic'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). F",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:1250,deployability,modul,module,1250,"ceback (most recent call last):. File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 70, in __init__. module = importlib.import_module(module_path). File ""c:\python39-32\lib\importlib\__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'JupyROOT.kernel.magics.magics\\cppmagic'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\ker",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:1291,deployability,build,build,1291,"\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 70, in __init__. module = importlib.import_module(module_path). File ""c:\python39-32\lib\importlib\__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'JupyROOT.kernel.magics.magics\\cppmagic'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. rais",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:1301,deployability,releas,release,1301,"enot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 70, in __init__. module = importlib.import_module(module_path). File ""c:\python39-32\lib\importlib\__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'JupyROOT.kernel.magics.magics\\cppmagic'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:2081,deployability,build,build,2081,"File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~~~~. input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'. (dlopen(""libRint.so"", RTLD_NOW)). ^. ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:2091,deployability,releas,release,2091,"File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~~~~. input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'. (dlopen(""libRint.so"", RTLD_NOW)). ^. ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:2219,deployability,build,build,2219,"File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~~~~. input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'. (dlopen(""libRint.so"", RTLD_NOW)). ^. ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:2229,deployability,releas,release,2229,"File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~~~~. input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'. (dlopen(""libRint.so"", RTLD_NOW)). ^. ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:2694,deployability,Updat,Update,2694,"File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~~~~. input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'. (dlopen(""libRint.so"", RTLD_NOW)). ^. ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:2910,deployability,updat,updated,2910,"File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~~~~. input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'. (dlopen(""libRint.so"", RTLD_NOW)). ^. ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:1987,integrability,configur,configurable,1987,"File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~~~~. input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'. (dlopen(""libRint.so"", RTLD_NOW)). ^. ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:192,interoperability,bind,bindings,192,"[windows] Fix the C++ notebooks on Windows (#12912); * [windows][skip-ci] Fix the C++ notebooks on Windows. * [windows][skip-ci] Fix the C++ notebooks on Windows. Fix the following errors in `bindings/jupyroot/python/JupyROOT/kernel/utils.py`:. ```. Traceback (most recent call last):. File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 70, in __init__. module = importlib.import_module(module_path). File ""c:\python39-32\lib\importlib\__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'JupyROOT.kernel.magics.magics\\cppmagic'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:2446,interoperability,bind,bindings,2446,"File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~~~~. input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'. (dlopen(""libRint.so"", RTLD_NOW)). ^. ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:2701,interoperability,bind,bindings,2701,"File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~~~~. input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'. (dlopen(""libRint.so"", RTLD_NOW)). ^. ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:192,modifiability,bind,bindings,192,"[windows] Fix the C++ notebooks on Windows (#12912); * [windows][skip-ci] Fix the C++ notebooks on Windows. * [windows][skip-ci] Fix the C++ notebooks on Windows. Fix the following errors in `bindings/jupyroot/python/JupyROOT/kernel/utils.py`:. ```. Traceback (most recent call last):. File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 70, in __init__. module = importlib.import_module(module_path). File ""c:\python39-32\lib\importlib\__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'JupyROOT.kernel.magics.magics\\cppmagic'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:381,modifiability,modul,module,381,"[windows] Fix the C++ notebooks on Windows (#12912); * [windows][skip-ci] Fix the C++ notebooks on Windows. * [windows][skip-ci] Fix the C++ notebooks on Windows. Fix the following errors in `bindings/jupyroot/python/JupyROOT/kernel/utils.py`:. ```. Traceback (most recent call last):. File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 70, in __init__. module = importlib.import_module(module_path). File ""c:\python39-32\lib\importlib\__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'JupyROOT.kernel.magics.magics\\cppmagic'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:549,modifiability,pac,package,549,"[windows] Fix the C++ notebooks on Windows (#12912); * [windows][skip-ci] Fix the C++ notebooks on Windows. * [windows][skip-ci] Fix the C++ notebooks on Windows. Fix the following errors in `bindings/jupyroot/python/JupyROOT/kernel/utils.py`:. ```. Traceback (most recent call last):. File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 70, in __init__. module = importlib.import_module(module_path). File ""c:\python39-32\lib\importlib\__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'JupyROOT.kernel.magics.magics\\cppmagic'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:775,modifiability,Modul,ModuleNotFoundError,775,"[windows] Fix the C++ notebooks on Windows (#12912); * [windows][skip-ci] Fix the C++ notebooks on Windows. * [windows][skip-ci] Fix the C++ notebooks on Windows. Fix the following errors in `bindings/jupyroot/python/JupyROOT/kernel/utils.py`:. ```. Traceback (most recent call last):. File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 70, in __init__. module = importlib.import_module(module_path). File ""c:\python39-32\lib\importlib\__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'JupyROOT.kernel.magics.magics\\cppmagic'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:799,modifiability,modul,module,799,"[windows] Fix the C++ notebooks on Windows (#12912); * [windows][skip-ci] Fix the C++ notebooks on Windows. * [windows][skip-ci] Fix the C++ notebooks on Windows. Fix the following errors in `bindings/jupyroot/python/JupyROOT/kernel/utils.py`:. ```. Traceback (most recent call last):. File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 70, in __init__. module = importlib.import_module(module_path). File ""c:\python39-32\lib\importlib\__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'JupyROOT.kernel.magics.magics\\cppmagic'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:1250,modifiability,modul,module,1250,"ceback (most recent call last):. File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 70, in __init__. module = importlib.import_module(module_path). File ""c:\python39-32\lib\importlib\__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'JupyROOT.kernel.magics.magics\\cppmagic'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\ker",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:1448,modifiability,pac,packages,1448,"\importlib\__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'JupyROOT.kernel.magics.magics\\cppmagic'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:1573,modifiability,pac,packages,1573,"en importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'JupyROOT.kernel.magics.magics\\cppmagic'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:1702,modifiability,pac,packages,1702,"frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'JupyROOT.kernel.magics.magics\\cppmagic'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~~~~. input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'. (dlopen(""libRint.so"", RTLD_NOW)). ^. ```. * Update bindi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:1811,modifiability,pac,packages,1811,"pyROOT.kernel.magics.magics\\cppmagic'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~~~~. input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'. (dlopen(""libRint.so"", RTLD_NOW)). ^. ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:1961,modifiability,pac,packages,1961,"File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~~~~. input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'. (dlopen(""libRint.so"", RTLD_NOW)). ^. ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:1987,modifiability,configur,configurable,1987,"File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~~~~. input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'. (dlopen(""libRint.so"", RTLD_NOW)). ^. ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:2446,modifiability,bind,bindings,2446,"File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~~~~. input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'. (dlopen(""libRint.so"", RTLD_NOW)). ^. ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:2701,modifiability,bind,bindings,2701,"File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~~~~. input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'. (dlopen(""libRint.so"", RTLD_NOW)). ^. ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:181,performance,error,errors,181,"[windows] Fix the C++ notebooks on Windows (#12912); * [windows][skip-ci] Fix the C++ notebooks on Windows. * [windows][skip-ci] Fix the C++ notebooks on Windows. Fix the following errors in `bindings/jupyroot/python/JupyROOT/kernel/utils.py`:. ```. Traceback (most recent call last):. File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 70, in __init__. module = importlib.import_module(module_path). File ""c:\python39-32\lib\importlib\__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'JupyROOT.kernel.magics.magics\\cppmagic'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:2307,performance,Error,Error,2307,"File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~~~~. input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'. (dlopen(""libRint.so"", RTLD_NOW)). ^. ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:2359,performance,Error,Error,2359,"File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~~~~. input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'. (dlopen(""libRint.so"", RTLD_NOW)). ^. ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:2538,performance,error,error,2538,"File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~~~~. input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'. (dlopen(""libRint.so"", RTLD_NOW)). ^. ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:2602,performance,error,error,2602,"File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~~~~. input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'. (dlopen(""libRint.so"", RTLD_NOW)). ^. ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:181,safety,error,errors,181,"[windows] Fix the C++ notebooks on Windows (#12912); * [windows][skip-ci] Fix the C++ notebooks on Windows. * [windows][skip-ci] Fix the C++ notebooks on Windows. Fix the following errors in `bindings/jupyroot/python/JupyROOT/kernel/utils.py`:. ```. Traceback (most recent call last):. File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 70, in __init__. module = importlib.import_module(module_path). File ""c:\python39-32\lib\importlib\__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'JupyROOT.kernel.magics.magics\\cppmagic'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:381,safety,modul,module,381,"[windows] Fix the C++ notebooks on Windows (#12912); * [windows][skip-ci] Fix the C++ notebooks on Windows. * [windows][skip-ci] Fix the C++ notebooks on Windows. Fix the following errors in `bindings/jupyroot/python/JupyROOT/kernel/utils.py`:. ```. Traceback (most recent call last):. File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 70, in __init__. module = importlib.import_module(module_path). File ""c:\python39-32\lib\importlib\__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'JupyROOT.kernel.magics.magics\\cppmagic'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:775,safety,Modul,ModuleNotFoundError,775,"[windows] Fix the C++ notebooks on Windows (#12912); * [windows][skip-ci] Fix the C++ notebooks on Windows. * [windows][skip-ci] Fix the C++ notebooks on Windows. Fix the following errors in `bindings/jupyroot/python/JupyROOT/kernel/utils.py`:. ```. Traceback (most recent call last):. File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 70, in __init__. module = importlib.import_module(module_path). File ""c:\python39-32\lib\importlib\__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'JupyROOT.kernel.magics.magics\\cppmagic'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:799,safety,modul,module,799,"[windows] Fix the C++ notebooks on Windows (#12912); * [windows][skip-ci] Fix the C++ notebooks on Windows. * [windows][skip-ci] Fix the C++ notebooks on Windows. Fix the following errors in `bindings/jupyroot/python/JupyROOT/kernel/utils.py`:. ```. Traceback (most recent call last):. File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 70, in __init__. module = importlib.import_module(module_path). File ""c:\python39-32\lib\importlib\__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'JupyROOT.kernel.magics.magics\\cppmagic'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:884,safety,except,exception,884,"[windows] Fix the C++ notebooks on Windows (#12912); * [windows][skip-ci] Fix the C++ notebooks on Windows. * [windows][skip-ci] Fix the C++ notebooks on Windows. Fix the following errors in `bindings/jupyroot/python/JupyROOT/kernel/utils.py`:. ```. Traceback (most recent call last):. File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 70, in __init__. module = importlib.import_module(module_path). File ""c:\python39-32\lib\importlib\__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'JupyROOT.kernel.magics.magics\\cppmagic'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:903,safety,except,exception,903,"[windows] Fix the C++ notebooks on Windows (#12912); * [windows][skip-ci] Fix the C++ notebooks on Windows. * [windows][skip-ci] Fix the C++ notebooks on Windows. Fix the following errors in `bindings/jupyroot/python/JupyROOT/kernel/utils.py`:. ```. Traceback (most recent call last):. File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 70, in __init__. module = importlib.import_module(module_path). File ""c:\python39-32\lib\importlib\__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'JupyROOT.kernel.magics.magics\\cppmagic'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:1250,safety,modul,module,1250,"ceback (most recent call last):. File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 70, in __init__. module = importlib.import_module(module_path). File ""c:\python39-32\lib\importlib\__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'JupyROOT.kernel.magics.magics\\cppmagic'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\ker",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:2296,safety,Except,Exception,2296,"File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~~~~. input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'. (dlopen(""libRint.so"", RTLD_NOW)). ^. ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:2307,safety,Error,Error,2307,"File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~~~~. input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'. (dlopen(""libRint.so"", RTLD_NOW)). ^. ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:2348,safety,Except,Exception,2348,"File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~~~~. input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'. (dlopen(""libRint.so"", RTLD_NOW)). ^. ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:2359,safety,Error,Error,2359,"File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~~~~. input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'. (dlopen(""libRint.so"", RTLD_NOW)). ^. ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:2538,safety,error,error,2538,"File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~~~~. input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'. (dlopen(""libRint.so"", RTLD_NOW)). ^. ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:2602,safety,error,error,2602,"File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~~~~. input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'. (dlopen(""libRint.so"", RTLD_NOW)). ^. ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:2694,safety,Updat,Update,2694,"File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~~~~. input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'. (dlopen(""libRint.so"", RTLD_NOW)). ^. ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:2880,safety,test,tested,2880,"File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~~~~. input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'. (dlopen(""libRint.so"", RTLD_NOW)). ^. ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:2910,safety,updat,updated,2910,"File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~~~~. input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'. (dlopen(""libRint.so"", RTLD_NOW)). ^. ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:1908,security,session,session,1908," occurred:. Traceback (most recent call last):. File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~~~~. input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'. (dlopen(""libRint.so"", RTLD_NOW)). ^. ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] up",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:1921,security,session,session,1921,"raceback (most recent call last):. File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~~~~. input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'. (dlopen(""libRint.so"", RTLD_NOW)). ^. ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the doc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:1987,security,configur,configurable,1987,"File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~~~~. input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'. (dlopen(""libRint.so"", RTLD_NOW)). ^. ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:2627,security,ident,identifier,2627,"File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~~~~. input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'. (dlopen(""libRint.so"", RTLD_NOW)). ^. ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:2694,security,Updat,Update,2694,"File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~~~~. input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'. (dlopen(""libRint.so"", RTLD_NOW)). ^. ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:2910,security,updat,updated,2910,"File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~~~~. input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'. (dlopen(""libRint.so"", RTLD_NOW)). ^. ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:250,testability,Trace,Traceback,250,"[windows] Fix the C++ notebooks on Windows (#12912); * [windows][skip-ci] Fix the C++ notebooks on Windows. * [windows][skip-ci] Fix the C++ notebooks on Windows. Fix the following errors in `bindings/jupyroot/python/JupyROOT/kernel/utils.py`:. ```. Traceback (most recent call last):. File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 70, in __init__. module = importlib.import_module(module_path). File ""c:\python39-32\lib\importlib\__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'JupyROOT.kernel.magics.magics\\cppmagic'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:924,testability,Trace,Traceback,924,"[windows] Fix the C++ notebooks on Windows (#12912); * [windows][skip-ci] Fix the C++ notebooks on Windows. * [windows][skip-ci] Fix the C++ notebooks on Windows. Fix the following errors in `bindings/jupyroot/python/JupyROOT/kernel/utils.py`:. ```. Traceback (most recent call last):. File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 70, in __init__. module = importlib.import_module(module_path). File ""c:\python39-32\lib\importlib\__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'JupyROOT.kernel.magics.magics\\cppmagic'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:2880,testability,test,tested,2880,"File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~~~~. input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'. (dlopen(""libRint.so"", RTLD_NOW)). ^. ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:181,usability,error,errors,181,"[windows] Fix the C++ notebooks on Windows (#12912); * [windows][skip-ci] Fix the C++ notebooks on Windows. * [windows][skip-ci] Fix the C++ notebooks on Windows. Fix the following errors in `bindings/jupyroot/python/JupyROOT/kernel/utils.py`:. ```. Traceback (most recent call last):. File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 70, in __init__. module = importlib.import_module(module_path). File ""c:\python39-32\lib\importlib\__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'JupyROOT.kernel.magics.magics\\cppmagic'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:295,usability,User,Users,295,"[windows] Fix the C++ notebooks on Windows (#12912); * [windows][skip-ci] Fix the C++ notebooks on Windows. * [windows][skip-ci] Fix the C++ notebooks on Windows. Fix the following errors in `bindings/jupyroot/python/JupyROOT/kernel/utils.py`:. ```. Traceback (most recent call last):. File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 70, in __init__. module = importlib.import_module(module_path). File ""c:\python39-32\lib\importlib\__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'JupyROOT.kernel.magics.magics\\cppmagic'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:1167,usability,User,Users,1167," following errors in `bindings/jupyroot/python/JupyROOT/kernel/utils.py`:. ```. Traceback (most recent call last):. File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 70, in __init__. module = importlib.import_module(module_path). File ""c:\python39-32\lib\importlib\__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'JupyROOT.kernel.magics.magics\\cppmagic'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:1276,usability,User,Users,1276,"ast):. File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 70, in __init__. module = importlib.import_module(module_path). File ""c:\python39-32\lib\importlib\__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'JupyROOT.kernel.magics.magics\\cppmagic'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:2066,usability,User,Users,2066,"File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~~~~. input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'. (dlopen(""libRint.so"", RTLD_NOW)). ^. ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:2204,usability,User,Users,2204,"File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~~~~. input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'. (dlopen(""libRint.so"", RTLD_NOW)). ^. ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:2307,usability,Error,Error,2307,"File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~~~~. input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'. (dlopen(""libRint.so"", RTLD_NOW)). ^. ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:2359,usability,Error,Error,2359,"File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~~~~. input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'. (dlopen(""libRint.so"", RTLD_NOW)). ^. ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:2480,usability,help,helpers,2480,"File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~~~~. input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'. (dlopen(""libRint.so"", RTLD_NOW)). ^. ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:2538,usability,error,error,2538,"File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~~~~. input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'. (dlopen(""libRint.so"", RTLD_NOW)). ^. ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12951:2602,usability,error,error,2602,"File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main. return _run_code(code, main_globals, None,. File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code. exec(code, run_globals). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>. main(). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main. IPKernelApp.launch_instance(kernel_class=ROOTKernel). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance. app.initialize(argv). File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner. return method(app, *args, **kwargs). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize. self.init_kernel(). File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel. kernel = kernel_factory(parent=self, session=self.session,. File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance. inst = cls(*args, **kwargs). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__. self.magicloader = MagicLoader(self). File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__. raise Exception(""Error importing Magic: %s""%module_path). Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic. ```. And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:. ```. input_line_37:1:10: fatal error: 'dlfcn.h' file not found. ^~~~~~~~~. input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'. (dlopen(""libRint.so"", RTLD_NOW)). ^. ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12951
https://github.com/root-project/root/pull/12952:155,deployability,stack,stack,155,"Disable the Steffenson algorithm in stressmathmore in interpreted mode on Windows; The Steffenson algorithm make the interpreter crash without any info or stack trace in interpreted mode (but works well when compiled). So disable it for now on Windows, in interpreted mode only.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12952
https://github.com/root-project/root/pull/12952:161,testability,trace,trace,161,"Disable the Steffenson algorithm in stressmathmore in interpreted mode on Windows; The Steffenson algorithm make the interpreter crash without any info or stack trace in interpreted mode (but works well when compiled). So disable it for now on Windows, in interpreted mode only.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12952
https://github.com/root-project/root/issues/12953:248,availability,Error,Error,248,"Dictionary generation confused by anonymous enums.; ### Describe the bug. Using:. [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). we get:. ```. . ./go. StreamerInfo for class: Hep3Vec, version=1, checksum=0x0. Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class Hep3Vec. Error in <CreateRealData>: Cannot find data member # 0 of class Hep3Vec for parent Holder! ```. which is cause by the `TClass` (for the class enclosing the anonymous enum) being created during the reading of the rootpcm **before** its own `TProtoClass` is fully loaded (actually during its loading). ```. #7 0x00007ffff7784e29 in TClass::GetClass (name=0x7fffffff9ec0 ""Hep3Vec"", load=true, silent=false) at /nashome/p/pcanal/root/core/meta/src/TClass.cxx:2970. ... #9 0x00007ffff77a7c80 in TEnum::GetEnum (enumName=0xf5c810 ""Hep3Vec::(unnamed)"", sa=TEnum::kInterpLookup) at /nashome/p/pcanal/root/core/meta/src/TEnum.cxx:310. #10 0x00007ffff77a0150 in TDataMember::Init (this=0xf5c6d0, afterReading=true) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:225. #11 0x00007ffff77a3606 in TDataMember::Streamer (this=0xf5c6d0, b=...) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:949. .... #27 0x00007ffff763e5ed in TProtoClass::Streamer (this=0xf5c0e0, R__b=...) at core/G__Core.cxx:26439. .... #38 0x00007fffeab11c72 in TCling::LoadPCM (this=0x738b90, pcmFileNameFullPath=...) at /nashome/p/pcanal/root/core/metacling/src/TCling.cxx:1906. ### What is the expected behaviour? properly loading of the dictionary. ### How to reproduce? Use [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). and run `go`. ### ROOT version. work in progress ... . ### How did you install ROOT? local build. ### Which operating system are you using? alll. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12953
https://github.com/root-project/root/issues/12953:344,availability,Error,Error,344,"Dictionary generation confused by anonymous enums.; ### Describe the bug. Using:. [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). we get:. ```. . ./go. StreamerInfo for class: Hep3Vec, version=1, checksum=0x0. Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class Hep3Vec. Error in <CreateRealData>: Cannot find data member # 0 of class Hep3Vec for parent Holder! ```. which is cause by the `TClass` (for the class enclosing the anonymous enum) being created during the reading of the rootpcm **before** its own `TProtoClass` is fully loaded (actually during its loading). ```. #7 0x00007ffff7784e29 in TClass::GetClass (name=0x7fffffff9ec0 ""Hep3Vec"", load=true, silent=false) at /nashome/p/pcanal/root/core/meta/src/TClass.cxx:2970. ... #9 0x00007ffff77a7c80 in TEnum::GetEnum (enumName=0xf5c810 ""Hep3Vec::(unnamed)"", sa=TEnum::kInterpLookup) at /nashome/p/pcanal/root/core/meta/src/TEnum.cxx:310. #10 0x00007ffff77a0150 in TDataMember::Init (this=0xf5c6d0, afterReading=true) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:225. #11 0x00007ffff77a3606 in TDataMember::Streamer (this=0xf5c6d0, b=...) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:949. .... #27 0x00007ffff763e5ed in TProtoClass::Streamer (this=0xf5c0e0, R__b=...) at core/G__Core.cxx:26439. .... #38 0x00007fffeab11c72 in TCling::LoadPCM (this=0x738b90, pcmFileNameFullPath=...) at /nashome/p/pcanal/root/core/metacling/src/TCling.cxx:1906. ### What is the expected behaviour? properly loading of the dictionary. ### How to reproduce? Use [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). and run `go`. ### ROOT version. work in progress ... . ### How did you install ROOT? local build. ### Which operating system are you using? alll. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12953
https://github.com/root-project/root/issues/12953:1790,availability,operat,operating,1790,"Dictionary generation confused by anonymous enums.; ### Describe the bug. Using:. [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). we get:. ```. . ./go. StreamerInfo for class: Hep3Vec, version=1, checksum=0x0. Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class Hep3Vec. Error in <CreateRealData>: Cannot find data member # 0 of class Hep3Vec for parent Holder! ```. which is cause by the `TClass` (for the class enclosing the anonymous enum) being created during the reading of the rootpcm **before** its own `TProtoClass` is fully loaded (actually during its loading). ```. #7 0x00007ffff7784e29 in TClass::GetClass (name=0x7fffffff9ec0 ""Hep3Vec"", load=true, silent=false) at /nashome/p/pcanal/root/core/meta/src/TClass.cxx:2970. ... #9 0x00007ffff77a7c80 in TEnum::GetEnum (enumName=0xf5c810 ""Hep3Vec::(unnamed)"", sa=TEnum::kInterpLookup) at /nashome/p/pcanal/root/core/meta/src/TEnum.cxx:310. #10 0x00007ffff77a0150 in TDataMember::Init (this=0xf5c6d0, afterReading=true) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:225. #11 0x00007ffff77a3606 in TDataMember::Streamer (this=0xf5c6d0, b=...) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:949. .... #27 0x00007ffff763e5ed in TProtoClass::Streamer (this=0xf5c0e0, R__b=...) at core/G__Core.cxx:26439. .... #38 0x00007fffeab11c72 in TCling::LoadPCM (this=0x738b90, pcmFileNameFullPath=...) at /nashome/p/pcanal/root/core/metacling/src/TCling.cxx:1906. ### What is the expected behaviour? properly loading of the dictionary. ### How to reproduce? Use [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). and run `go`. ### ROOT version. work in progress ... . ### How did you install ROOT? local build. ### Which operating system are you using? alll. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12953
https://github.com/root-project/root/issues/12953:223,deployability,version,version,223,"Dictionary generation confused by anonymous enums.; ### Describe the bug. Using:. [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). we get:. ```. . ./go. StreamerInfo for class: Hep3Vec, version=1, checksum=0x0. Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class Hep3Vec. Error in <CreateRealData>: Cannot find data member # 0 of class Hep3Vec for parent Holder! ```. which is cause by the `TClass` (for the class enclosing the anonymous enum) being created during the reading of the rootpcm **before** its own `TProtoClass` is fully loaded (actually during its loading). ```. #7 0x00007ffff7784e29 in TClass::GetClass (name=0x7fffffff9ec0 ""Hep3Vec"", load=true, silent=false) at /nashome/p/pcanal/root/core/meta/src/TClass.cxx:2970. ... #9 0x00007ffff77a7c80 in TEnum::GetEnum (enumName=0xf5c810 ""Hep3Vec::(unnamed)"", sa=TEnum::kInterpLookup) at /nashome/p/pcanal/root/core/meta/src/TEnum.cxx:310. #10 0x00007ffff77a0150 in TDataMember::Init (this=0xf5c6d0, afterReading=true) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:225. #11 0x00007ffff77a3606 in TDataMember::Streamer (this=0xf5c6d0, b=...) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:949. .... #27 0x00007ffff763e5ed in TProtoClass::Streamer (this=0xf5c0e0, R__b=...) at core/G__Core.cxx:26439. .... #38 0x00007fffeab11c72 in TCling::LoadPCM (this=0x738b90, pcmFileNameFullPath=...) at /nashome/p/pcanal/root/core/metacling/src/TCling.cxx:1906. ### What is the expected behaviour? properly loading of the dictionary. ### How to reproduce? Use [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). and run `go`. ### ROOT version. work in progress ... . ### How did you install ROOT? local build. ### Which operating system are you using? alll. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12953
https://github.com/root-project/root/issues/12953:1705,deployability,version,version,1705,"Dictionary generation confused by anonymous enums.; ### Describe the bug. Using:. [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). we get:. ```. . ./go. StreamerInfo for class: Hep3Vec, version=1, checksum=0x0. Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class Hep3Vec. Error in <CreateRealData>: Cannot find data member # 0 of class Hep3Vec for parent Holder! ```. which is cause by the `TClass` (for the class enclosing the anonymous enum) being created during the reading of the rootpcm **before** its own `TProtoClass` is fully loaded (actually during its loading). ```. #7 0x00007ffff7784e29 in TClass::GetClass (name=0x7fffffff9ec0 ""Hep3Vec"", load=true, silent=false) at /nashome/p/pcanal/root/core/meta/src/TClass.cxx:2970. ... #9 0x00007ffff77a7c80 in TEnum::GetEnum (enumName=0xf5c810 ""Hep3Vec::(unnamed)"", sa=TEnum::kInterpLookup) at /nashome/p/pcanal/root/core/meta/src/TEnum.cxx:310. #10 0x00007ffff77a0150 in TDataMember::Init (this=0xf5c6d0, afterReading=true) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:225. #11 0x00007ffff77a3606 in TDataMember::Streamer (this=0xf5c6d0, b=...) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:949. .... #27 0x00007ffff763e5ed in TProtoClass::Streamer (this=0xf5c0e0, R__b=...) at core/G__Core.cxx:26439. .... #38 0x00007fffeab11c72 in TCling::LoadPCM (this=0x738b90, pcmFileNameFullPath=...) at /nashome/p/pcanal/root/core/metacling/src/TCling.cxx:1906. ### What is the expected behaviour? properly loading of the dictionary. ### How to reproduce? Use [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). and run `go`. ### ROOT version. work in progress ... . ### How did you install ROOT? local build. ### Which operating system are you using? alll. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12953
https://github.com/root-project/root/issues/12953:1753,deployability,instal,install,1753,"Dictionary generation confused by anonymous enums.; ### Describe the bug. Using:. [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). we get:. ```. . ./go. StreamerInfo for class: Hep3Vec, version=1, checksum=0x0. Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class Hep3Vec. Error in <CreateRealData>: Cannot find data member # 0 of class Hep3Vec for parent Holder! ```. which is cause by the `TClass` (for the class enclosing the anonymous enum) being created during the reading of the rootpcm **before** its own `TProtoClass` is fully loaded (actually during its loading). ```. #7 0x00007ffff7784e29 in TClass::GetClass (name=0x7fffffff9ec0 ""Hep3Vec"", load=true, silent=false) at /nashome/p/pcanal/root/core/meta/src/TClass.cxx:2970. ... #9 0x00007ffff77a7c80 in TEnum::GetEnum (enumName=0xf5c810 ""Hep3Vec::(unnamed)"", sa=TEnum::kInterpLookup) at /nashome/p/pcanal/root/core/meta/src/TEnum.cxx:310. #10 0x00007ffff77a0150 in TDataMember::Init (this=0xf5c6d0, afterReading=true) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:225. #11 0x00007ffff77a3606 in TDataMember::Streamer (this=0xf5c6d0, b=...) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:949. .... #27 0x00007ffff763e5ed in TProtoClass::Streamer (this=0xf5c0e0, R__b=...) at core/G__Core.cxx:26439. .... #38 0x00007fffeab11c72 in TCling::LoadPCM (this=0x738b90, pcmFileNameFullPath=...) at /nashome/p/pcanal/root/core/metacling/src/TCling.cxx:1906. ### What is the expected behaviour? properly loading of the dictionary. ### How to reproduce? Use [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). and run `go`. ### ROOT version. work in progress ... . ### How did you install ROOT? local build. ### Which operating system are you using? alll. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12953
https://github.com/root-project/root/issues/12953:1773,deployability,build,build,1773,"Dictionary generation confused by anonymous enums.; ### Describe the bug. Using:. [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). we get:. ```. . ./go. StreamerInfo for class: Hep3Vec, version=1, checksum=0x0. Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class Hep3Vec. Error in <CreateRealData>: Cannot find data member # 0 of class Hep3Vec for parent Holder! ```. which is cause by the `TClass` (for the class enclosing the anonymous enum) being created during the reading of the rootpcm **before** its own `TProtoClass` is fully loaded (actually during its loading). ```. #7 0x00007ffff7784e29 in TClass::GetClass (name=0x7fffffff9ec0 ""Hep3Vec"", load=true, silent=false) at /nashome/p/pcanal/root/core/meta/src/TClass.cxx:2970. ... #9 0x00007ffff77a7c80 in TEnum::GetEnum (enumName=0xf5c810 ""Hep3Vec::(unnamed)"", sa=TEnum::kInterpLookup) at /nashome/p/pcanal/root/core/meta/src/TEnum.cxx:310. #10 0x00007ffff77a0150 in TDataMember::Init (this=0xf5c6d0, afterReading=true) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:225. #11 0x00007ffff77a3606 in TDataMember::Streamer (this=0xf5c6d0, b=...) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:949. .... #27 0x00007ffff763e5ed in TProtoClass::Streamer (this=0xf5c0e0, R__b=...) at core/G__Core.cxx:26439. .... #38 0x00007fffeab11c72 in TCling::LoadPCM (this=0x738b90, pcmFileNameFullPath=...) at /nashome/p/pcanal/root/core/metacling/src/TCling.cxx:1906. ### What is the expected behaviour? properly loading of the dictionary. ### How to reproduce? Use [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). and run `go`. ### ROOT version. work in progress ... . ### How did you install ROOT? local build. ### Which operating system are you using? alll. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12953
https://github.com/root-project/root/issues/12953:606,energy efficiency,load,loaded,606,"Dictionary generation confused by anonymous enums.; ### Describe the bug. Using:. [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). we get:. ```. . ./go. StreamerInfo for class: Hep3Vec, version=1, checksum=0x0. Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class Hep3Vec. Error in <CreateRealData>: Cannot find data member # 0 of class Hep3Vec for parent Holder! ```. which is cause by the `TClass` (for the class enclosing the anonymous enum) being created during the reading of the rootpcm **before** its own `TProtoClass` is fully loaded (actually during its loading). ```. #7 0x00007ffff7784e29 in TClass::GetClass (name=0x7fffffff9ec0 ""Hep3Vec"", load=true, silent=false) at /nashome/p/pcanal/root/core/meta/src/TClass.cxx:2970. ... #9 0x00007ffff77a7c80 in TEnum::GetEnum (enumName=0xf5c810 ""Hep3Vec::(unnamed)"", sa=TEnum::kInterpLookup) at /nashome/p/pcanal/root/core/meta/src/TEnum.cxx:310. #10 0x00007ffff77a0150 in TDataMember::Init (this=0xf5c6d0, afterReading=true) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:225. #11 0x00007ffff77a3606 in TDataMember::Streamer (this=0xf5c6d0, b=...) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:949. .... #27 0x00007ffff763e5ed in TProtoClass::Streamer (this=0xf5c0e0, R__b=...) at core/G__Core.cxx:26439. .... #38 0x00007fffeab11c72 in TCling::LoadPCM (this=0x738b90, pcmFileNameFullPath=...) at /nashome/p/pcanal/root/core/metacling/src/TCling.cxx:1906. ### What is the expected behaviour? properly loading of the dictionary. ### How to reproduce? Use [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). and run `go`. ### ROOT version. work in progress ... . ### How did you install ROOT? local build. ### Which operating system are you using? alll. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12953
https://github.com/root-project/root/issues/12953:634,energy efficiency,load,loading,634,"Dictionary generation confused by anonymous enums.; ### Describe the bug. Using:. [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). we get:. ```. . ./go. StreamerInfo for class: Hep3Vec, version=1, checksum=0x0. Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class Hep3Vec. Error in <CreateRealData>: Cannot find data member # 0 of class Hep3Vec for parent Holder! ```. which is cause by the `TClass` (for the class enclosing the anonymous enum) being created during the reading of the rootpcm **before** its own `TProtoClass` is fully loaded (actually during its loading). ```. #7 0x00007ffff7784e29 in TClass::GetClass (name=0x7fffffff9ec0 ""Hep3Vec"", load=true, silent=false) at /nashome/p/pcanal/root/core/meta/src/TClass.cxx:2970. ... #9 0x00007ffff77a7c80 in TEnum::GetEnum (enumName=0xf5c810 ""Hep3Vec::(unnamed)"", sa=TEnum::kInterpLookup) at /nashome/p/pcanal/root/core/meta/src/TEnum.cxx:310. #10 0x00007ffff77a0150 in TDataMember::Init (this=0xf5c6d0, afterReading=true) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:225. #11 0x00007ffff77a3606 in TDataMember::Streamer (this=0xf5c6d0, b=...) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:949. .... #27 0x00007ffff763e5ed in TProtoClass::Streamer (this=0xf5c0e0, R__b=...) at core/G__Core.cxx:26439. .... #38 0x00007fffeab11c72 in TCling::LoadPCM (this=0x738b90, pcmFileNameFullPath=...) at /nashome/p/pcanal/root/core/metacling/src/TCling.cxx:1906. ### What is the expected behaviour? properly loading of the dictionary. ### How to reproduce? Use [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). and run `go`. ### ROOT version. work in progress ... . ### How did you install ROOT? local build. ### Which operating system are you using? alll. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12953
https://github.com/root-project/root/issues/12953:723,energy efficiency,load,load,723,"Dictionary generation confused by anonymous enums.; ### Describe the bug. Using:. [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). we get:. ```. . ./go. StreamerInfo for class: Hep3Vec, version=1, checksum=0x0. Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class Hep3Vec. Error in <CreateRealData>: Cannot find data member # 0 of class Hep3Vec for parent Holder! ```. which is cause by the `TClass` (for the class enclosing the anonymous enum) being created during the reading of the rootpcm **before** its own `TProtoClass` is fully loaded (actually during its loading). ```. #7 0x00007ffff7784e29 in TClass::GetClass (name=0x7fffffff9ec0 ""Hep3Vec"", load=true, silent=false) at /nashome/p/pcanal/root/core/meta/src/TClass.cxx:2970. ... #9 0x00007ffff77a7c80 in TEnum::GetEnum (enumName=0xf5c810 ""Hep3Vec::(unnamed)"", sa=TEnum::kInterpLookup) at /nashome/p/pcanal/root/core/meta/src/TEnum.cxx:310. #10 0x00007ffff77a0150 in TDataMember::Init (this=0xf5c6d0, afterReading=true) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:225. #11 0x00007ffff77a3606 in TDataMember::Streamer (this=0xf5c6d0, b=...) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:949. .... #27 0x00007ffff763e5ed in TProtoClass::Streamer (this=0xf5c0e0, R__b=...) at core/G__Core.cxx:26439. .... #38 0x00007fffeab11c72 in TCling::LoadPCM (this=0x738b90, pcmFileNameFullPath=...) at /nashome/p/pcanal/root/core/metacling/src/TCling.cxx:1906. ### What is the expected behaviour? properly loading of the dictionary. ### How to reproduce? Use [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). and run `go`. ### ROOT version. work in progress ... . ### How did you install ROOT? local build. ### Which operating system are you using? alll. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12953
https://github.com/root-project/root/issues/12953:774,energy efficiency,core,core,774,"Dictionary generation confused by anonymous enums.; ### Describe the bug. Using:. [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). we get:. ```. . ./go. StreamerInfo for class: Hep3Vec, version=1, checksum=0x0. Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class Hep3Vec. Error in <CreateRealData>: Cannot find data member # 0 of class Hep3Vec for parent Holder! ```. which is cause by the `TClass` (for the class enclosing the anonymous enum) being created during the reading of the rootpcm **before** its own `TProtoClass` is fully loaded (actually during its loading). ```. #7 0x00007ffff7784e29 in TClass::GetClass (name=0x7fffffff9ec0 ""Hep3Vec"", load=true, silent=false) at /nashome/p/pcanal/root/core/meta/src/TClass.cxx:2970. ... #9 0x00007ffff77a7c80 in TEnum::GetEnum (enumName=0xf5c810 ""Hep3Vec::(unnamed)"", sa=TEnum::kInterpLookup) at /nashome/p/pcanal/root/core/meta/src/TEnum.cxx:310. #10 0x00007ffff77a0150 in TDataMember::Init (this=0xf5c6d0, afterReading=true) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:225. #11 0x00007ffff77a3606 in TDataMember::Streamer (this=0xf5c6d0, b=...) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:949. .... #27 0x00007ffff763e5ed in TProtoClass::Streamer (this=0xf5c0e0, R__b=...) at core/G__Core.cxx:26439. .... #38 0x00007fffeab11c72 in TCling::LoadPCM (this=0x738b90, pcmFileNameFullPath=...) at /nashome/p/pcanal/root/core/metacling/src/TCling.cxx:1906. ### What is the expected behaviour? properly loading of the dictionary. ### How to reproduce? Use [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). and run `go`. ### ROOT version. work in progress ... . ### How did you install ROOT? local build. ### Which operating system are you using? alll. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12953
https://github.com/root-project/root/issues/12953:941,energy efficiency,core,core,941,"Dictionary generation confused by anonymous enums.; ### Describe the bug. Using:. [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). we get:. ```. . ./go. StreamerInfo for class: Hep3Vec, version=1, checksum=0x0. Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class Hep3Vec. Error in <CreateRealData>: Cannot find data member # 0 of class Hep3Vec for parent Holder! ```. which is cause by the `TClass` (for the class enclosing the anonymous enum) being created during the reading of the rootpcm **before** its own `TProtoClass` is fully loaded (actually during its loading). ```. #7 0x00007ffff7784e29 in TClass::GetClass (name=0x7fffffff9ec0 ""Hep3Vec"", load=true, silent=false) at /nashome/p/pcanal/root/core/meta/src/TClass.cxx:2970. ... #9 0x00007ffff77a7c80 in TEnum::GetEnum (enumName=0xf5c810 ""Hep3Vec::(unnamed)"", sa=TEnum::kInterpLookup) at /nashome/p/pcanal/root/core/meta/src/TEnum.cxx:310. #10 0x00007ffff77a0150 in TDataMember::Init (this=0xf5c6d0, afterReading=true) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:225. #11 0x00007ffff77a3606 in TDataMember::Streamer (this=0xf5c6d0, b=...) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:949. .... #27 0x00007ffff763e5ed in TProtoClass::Streamer (this=0xf5c0e0, R__b=...) at core/G__Core.cxx:26439. .... #38 0x00007fffeab11c72 in TCling::LoadPCM (this=0x738b90, pcmFileNameFullPath=...) at /nashome/p/pcanal/root/core/metacling/src/TCling.cxx:1906. ### What is the expected behaviour? properly loading of the dictionary. ### How to reproduce? Use [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). and run `go`. ### ROOT version. work in progress ... . ### How did you install ROOT? local build. ### Which operating system are you using? alll. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12953
https://github.com/root-project/root/issues/12953:1075,energy efficiency,core,core,1075,"Dictionary generation confused by anonymous enums.; ### Describe the bug. Using:. [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). we get:. ```. . ./go. StreamerInfo for class: Hep3Vec, version=1, checksum=0x0. Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class Hep3Vec. Error in <CreateRealData>: Cannot find data member # 0 of class Hep3Vec for parent Holder! ```. which is cause by the `TClass` (for the class enclosing the anonymous enum) being created during the reading of the rootpcm **before** its own `TProtoClass` is fully loaded (actually during its loading). ```. #7 0x00007ffff7784e29 in TClass::GetClass (name=0x7fffffff9ec0 ""Hep3Vec"", load=true, silent=false) at /nashome/p/pcanal/root/core/meta/src/TClass.cxx:2970. ... #9 0x00007ffff77a7c80 in TEnum::GetEnum (enumName=0xf5c810 ""Hep3Vec::(unnamed)"", sa=TEnum::kInterpLookup) at /nashome/p/pcanal/root/core/meta/src/TEnum.cxx:310. #10 0x00007ffff77a0150 in TDataMember::Init (this=0xf5c6d0, afterReading=true) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:225. #11 0x00007ffff77a3606 in TDataMember::Streamer (this=0xf5c6d0, b=...) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:949. .... #27 0x00007ffff763e5ed in TProtoClass::Streamer (this=0xf5c0e0, R__b=...) at core/G__Core.cxx:26439. .... #38 0x00007fffeab11c72 in TCling::LoadPCM (this=0x738b90, pcmFileNameFullPath=...) at /nashome/p/pcanal/root/core/metacling/src/TCling.cxx:1906. ### What is the expected behaviour? properly loading of the dictionary. ### How to reproduce? Use [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). and run `go`. ### ROOT version. work in progress ... . ### How did you install ROOT? local build. ### Which operating system are you using? alll. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12953
https://github.com/root-project/root/issues/12953:1207,energy efficiency,core,core,1207,"Dictionary generation confused by anonymous enums.; ### Describe the bug. Using:. [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). we get:. ```. . ./go. StreamerInfo for class: Hep3Vec, version=1, checksum=0x0. Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class Hep3Vec. Error in <CreateRealData>: Cannot find data member # 0 of class Hep3Vec for parent Holder! ```. which is cause by the `TClass` (for the class enclosing the anonymous enum) being created during the reading of the rootpcm **before** its own `TProtoClass` is fully loaded (actually during its loading). ```. #7 0x00007ffff7784e29 in TClass::GetClass (name=0x7fffffff9ec0 ""Hep3Vec"", load=true, silent=false) at /nashome/p/pcanal/root/core/meta/src/TClass.cxx:2970. ... #9 0x00007ffff77a7c80 in TEnum::GetEnum (enumName=0xf5c810 ""Hep3Vec::(unnamed)"", sa=TEnum::kInterpLookup) at /nashome/p/pcanal/root/core/meta/src/TEnum.cxx:310. #10 0x00007ffff77a0150 in TDataMember::Init (this=0xf5c6d0, afterReading=true) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:225. #11 0x00007ffff77a3606 in TDataMember::Streamer (this=0xf5c6d0, b=...) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:949. .... #27 0x00007ffff763e5ed in TProtoClass::Streamer (this=0xf5c0e0, R__b=...) at core/G__Core.cxx:26439. .... #38 0x00007fffeab11c72 in TCling::LoadPCM (this=0x738b90, pcmFileNameFullPath=...) at /nashome/p/pcanal/root/core/metacling/src/TCling.cxx:1906. ### What is the expected behaviour? properly loading of the dictionary. ### How to reproduce? Use [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). and run `go`. ### ROOT version. work in progress ... . ### How did you install ROOT? local build. ### Which operating system are you using? alll. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12953
https://github.com/root-project/root/issues/12953:1324,energy efficiency,core,core,1324,"Dictionary generation confused by anonymous enums.; ### Describe the bug. Using:. [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). we get:. ```. . ./go. StreamerInfo for class: Hep3Vec, version=1, checksum=0x0. Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class Hep3Vec. Error in <CreateRealData>: Cannot find data member # 0 of class Hep3Vec for parent Holder! ```. which is cause by the `TClass` (for the class enclosing the anonymous enum) being created during the reading of the rootpcm **before** its own `TProtoClass` is fully loaded (actually during its loading). ```. #7 0x00007ffff7784e29 in TClass::GetClass (name=0x7fffffff9ec0 ""Hep3Vec"", load=true, silent=false) at /nashome/p/pcanal/root/core/meta/src/TClass.cxx:2970. ... #9 0x00007ffff77a7c80 in TEnum::GetEnum (enumName=0xf5c810 ""Hep3Vec::(unnamed)"", sa=TEnum::kInterpLookup) at /nashome/p/pcanal/root/core/meta/src/TEnum.cxx:310. #10 0x00007ffff77a0150 in TDataMember::Init (this=0xf5c6d0, afterReading=true) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:225. #11 0x00007ffff77a3606 in TDataMember::Streamer (this=0xf5c6d0, b=...) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:949. .... #27 0x00007ffff763e5ed in TProtoClass::Streamer (this=0xf5c0e0, R__b=...) at core/G__Core.cxx:26439. .... #38 0x00007fffeab11c72 in TCling::LoadPCM (this=0x738b90, pcmFileNameFullPath=...) at /nashome/p/pcanal/root/core/metacling/src/TCling.cxx:1906. ### What is the expected behaviour? properly loading of the dictionary. ### How to reproduce? Use [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). and run `go`. ### ROOT version. work in progress ... . ### How did you install ROOT? local build. ### Which operating system are you using? alll. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12953
https://github.com/root-project/root/issues/12953:1387,energy efficiency,Load,LoadPCM,1387,"Dictionary generation confused by anonymous enums.; ### Describe the bug. Using:. [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). we get:. ```. . ./go. StreamerInfo for class: Hep3Vec, version=1, checksum=0x0. Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class Hep3Vec. Error in <CreateRealData>: Cannot find data member # 0 of class Hep3Vec for parent Holder! ```. which is cause by the `TClass` (for the class enclosing the anonymous enum) being created during the reading of the rootpcm **before** its own `TProtoClass` is fully loaded (actually during its loading). ```. #7 0x00007ffff7784e29 in TClass::GetClass (name=0x7fffffff9ec0 ""Hep3Vec"", load=true, silent=false) at /nashome/p/pcanal/root/core/meta/src/TClass.cxx:2970. ... #9 0x00007ffff77a7c80 in TEnum::GetEnum (enumName=0xf5c810 ""Hep3Vec::(unnamed)"", sa=TEnum::kInterpLookup) at /nashome/p/pcanal/root/core/meta/src/TEnum.cxx:310. #10 0x00007ffff77a0150 in TDataMember::Init (this=0xf5c6d0, afterReading=true) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:225. #11 0x00007ffff77a3606 in TDataMember::Streamer (this=0xf5c6d0, b=...) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:949. .... #27 0x00007ffff763e5ed in TProtoClass::Streamer (this=0xf5c0e0, R__b=...) at core/G__Core.cxx:26439. .... #38 0x00007fffeab11c72 in TCling::LoadPCM (this=0x738b90, pcmFileNameFullPath=...) at /nashome/p/pcanal/root/core/metacling/src/TCling.cxx:1906. ### What is the expected behaviour? properly loading of the dictionary. ### How to reproduce? Use [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). and run `go`. ### ROOT version. work in progress ... . ### How did you install ROOT? local build. ### Which operating system are you using? alll. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12953
https://github.com/root-project/root/issues/12953:1462,energy efficiency,core,core,1462,"Dictionary generation confused by anonymous enums.; ### Describe the bug. Using:. [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). we get:. ```. . ./go. StreamerInfo for class: Hep3Vec, version=1, checksum=0x0. Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class Hep3Vec. Error in <CreateRealData>: Cannot find data member # 0 of class Hep3Vec for parent Holder! ```. which is cause by the `TClass` (for the class enclosing the anonymous enum) being created during the reading of the rootpcm **before** its own `TProtoClass` is fully loaded (actually during its loading). ```. #7 0x00007ffff7784e29 in TClass::GetClass (name=0x7fffffff9ec0 ""Hep3Vec"", load=true, silent=false) at /nashome/p/pcanal/root/core/meta/src/TClass.cxx:2970. ... #9 0x00007ffff77a7c80 in TEnum::GetEnum (enumName=0xf5c810 ""Hep3Vec::(unnamed)"", sa=TEnum::kInterpLookup) at /nashome/p/pcanal/root/core/meta/src/TEnum.cxx:310. #10 0x00007ffff77a0150 in TDataMember::Init (this=0xf5c6d0, afterReading=true) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:225. #11 0x00007ffff77a3606 in TDataMember::Streamer (this=0xf5c6d0, b=...) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:949. .... #27 0x00007ffff763e5ed in TProtoClass::Streamer (this=0xf5c0e0, R__b=...) at core/G__Core.cxx:26439. .... #38 0x00007fffeab11c72 in TCling::LoadPCM (this=0x738b90, pcmFileNameFullPath=...) at /nashome/p/pcanal/root/core/metacling/src/TCling.cxx:1906. ### What is the expected behaviour? properly loading of the dictionary. ### How to reproduce? Use [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). and run `go`. ### ROOT version. work in progress ... . ### How did you install ROOT? local build. ### Which operating system are you using? alll. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12953
https://github.com/root-project/root/issues/12953:1543,energy efficiency,load,loading,1543,"Dictionary generation confused by anonymous enums.; ### Describe the bug. Using:. [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). we get:. ```. . ./go. StreamerInfo for class: Hep3Vec, version=1, checksum=0x0. Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class Hep3Vec. Error in <CreateRealData>: Cannot find data member # 0 of class Hep3Vec for parent Holder! ```. which is cause by the `TClass` (for the class enclosing the anonymous enum) being created during the reading of the rootpcm **before** its own `TProtoClass` is fully loaded (actually during its loading). ```. #7 0x00007ffff7784e29 in TClass::GetClass (name=0x7fffffff9ec0 ""Hep3Vec"", load=true, silent=false) at /nashome/p/pcanal/root/core/meta/src/TClass.cxx:2970. ... #9 0x00007ffff77a7c80 in TEnum::GetEnum (enumName=0xf5c810 ""Hep3Vec::(unnamed)"", sa=TEnum::kInterpLookup) at /nashome/p/pcanal/root/core/meta/src/TEnum.cxx:310. #10 0x00007ffff77a0150 in TDataMember::Init (this=0xf5c6d0, afterReading=true) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:225. #11 0x00007ffff77a3606 in TDataMember::Streamer (this=0xf5c6d0, b=...) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:949. .... #27 0x00007ffff763e5ed in TProtoClass::Streamer (this=0xf5c0e0, R__b=...) at core/G__Core.cxx:26439. .... #38 0x00007fffeab11c72 in TCling::LoadPCM (this=0x738b90, pcmFileNameFullPath=...) at /nashome/p/pcanal/root/core/metacling/src/TCling.cxx:1906. ### What is the expected behaviour? properly loading of the dictionary. ### How to reproduce? Use [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). and run `go`. ### ROOT version. work in progress ... . ### How did you install ROOT? local build. ### Which operating system are you using? alll. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12953
https://github.com/root-project/root/issues/12953:223,integrability,version,version,223,"Dictionary generation confused by anonymous enums.; ### Describe the bug. Using:. [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). we get:. ```. . ./go. StreamerInfo for class: Hep3Vec, version=1, checksum=0x0. Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class Hep3Vec. Error in <CreateRealData>: Cannot find data member # 0 of class Hep3Vec for parent Holder! ```. which is cause by the `TClass` (for the class enclosing the anonymous enum) being created during the reading of the rootpcm **before** its own `TProtoClass` is fully loaded (actually during its loading). ```. #7 0x00007ffff7784e29 in TClass::GetClass (name=0x7fffffff9ec0 ""Hep3Vec"", load=true, silent=false) at /nashome/p/pcanal/root/core/meta/src/TClass.cxx:2970. ... #9 0x00007ffff77a7c80 in TEnum::GetEnum (enumName=0xf5c810 ""Hep3Vec::(unnamed)"", sa=TEnum::kInterpLookup) at /nashome/p/pcanal/root/core/meta/src/TEnum.cxx:310. #10 0x00007ffff77a0150 in TDataMember::Init (this=0xf5c6d0, afterReading=true) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:225. #11 0x00007ffff77a3606 in TDataMember::Streamer (this=0xf5c6d0, b=...) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:949. .... #27 0x00007ffff763e5ed in TProtoClass::Streamer (this=0xf5c0e0, R__b=...) at core/G__Core.cxx:26439. .... #38 0x00007fffeab11c72 in TCling::LoadPCM (this=0x738b90, pcmFileNameFullPath=...) at /nashome/p/pcanal/root/core/metacling/src/TCling.cxx:1906. ### What is the expected behaviour? properly loading of the dictionary. ### How to reproduce? Use [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). and run `go`. ### ROOT version. work in progress ... . ### How did you install ROOT? local build. ### Which operating system are you using? alll. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12953
https://github.com/root-project/root/issues/12953:1705,integrability,version,version,1705,"Dictionary generation confused by anonymous enums.; ### Describe the bug. Using:. [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). we get:. ```. . ./go. StreamerInfo for class: Hep3Vec, version=1, checksum=0x0. Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class Hep3Vec. Error in <CreateRealData>: Cannot find data member # 0 of class Hep3Vec for parent Holder! ```. which is cause by the `TClass` (for the class enclosing the anonymous enum) being created during the reading of the rootpcm **before** its own `TProtoClass` is fully loaded (actually during its loading). ```. #7 0x00007ffff7784e29 in TClass::GetClass (name=0x7fffffff9ec0 ""Hep3Vec"", load=true, silent=false) at /nashome/p/pcanal/root/core/meta/src/TClass.cxx:2970. ... #9 0x00007ffff77a7c80 in TEnum::GetEnum (enumName=0xf5c810 ""Hep3Vec::(unnamed)"", sa=TEnum::kInterpLookup) at /nashome/p/pcanal/root/core/meta/src/TEnum.cxx:310. #10 0x00007ffff77a0150 in TDataMember::Init (this=0xf5c6d0, afterReading=true) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:225. #11 0x00007ffff77a3606 in TDataMember::Streamer (this=0xf5c6d0, b=...) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:949. .... #27 0x00007ffff763e5ed in TProtoClass::Streamer (this=0xf5c0e0, R__b=...) at core/G__Core.cxx:26439. .... #38 0x00007fffeab11c72 in TCling::LoadPCM (this=0x738b90, pcmFileNameFullPath=...) at /nashome/p/pcanal/root/core/metacling/src/TCling.cxx:1906. ### What is the expected behaviour? properly loading of the dictionary. ### How to reproduce? Use [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). and run `go`. ### ROOT version. work in progress ... . ### How did you install ROOT? local build. ### Which operating system are you using? alll. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12953
https://github.com/root-project/root/issues/12953:223,modifiability,version,version,223,"Dictionary generation confused by anonymous enums.; ### Describe the bug. Using:. [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). we get:. ```. . ./go. StreamerInfo for class: Hep3Vec, version=1, checksum=0x0. Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class Hep3Vec. Error in <CreateRealData>: Cannot find data member # 0 of class Hep3Vec for parent Holder! ```. which is cause by the `TClass` (for the class enclosing the anonymous enum) being created during the reading of the rootpcm **before** its own `TProtoClass` is fully loaded (actually during its loading). ```. #7 0x00007ffff7784e29 in TClass::GetClass (name=0x7fffffff9ec0 ""Hep3Vec"", load=true, silent=false) at /nashome/p/pcanal/root/core/meta/src/TClass.cxx:2970. ... #9 0x00007ffff77a7c80 in TEnum::GetEnum (enumName=0xf5c810 ""Hep3Vec::(unnamed)"", sa=TEnum::kInterpLookup) at /nashome/p/pcanal/root/core/meta/src/TEnum.cxx:310. #10 0x00007ffff77a0150 in TDataMember::Init (this=0xf5c6d0, afterReading=true) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:225. #11 0x00007ffff77a3606 in TDataMember::Streamer (this=0xf5c6d0, b=...) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:949. .... #27 0x00007ffff763e5ed in TProtoClass::Streamer (this=0xf5c0e0, R__b=...) at core/G__Core.cxx:26439. .... #38 0x00007fffeab11c72 in TCling::LoadPCM (this=0x738b90, pcmFileNameFullPath=...) at /nashome/p/pcanal/root/core/metacling/src/TCling.cxx:1906. ### What is the expected behaviour? properly loading of the dictionary. ### How to reproduce? Use [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). and run `go`. ### ROOT version. work in progress ... . ### How did you install ROOT? local build. ### Which operating system are you using? alll. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12953
https://github.com/root-project/root/issues/12953:1705,modifiability,version,version,1705,"Dictionary generation confused by anonymous enums.; ### Describe the bug. Using:. [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). we get:. ```. . ./go. StreamerInfo for class: Hep3Vec, version=1, checksum=0x0. Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class Hep3Vec. Error in <CreateRealData>: Cannot find data member # 0 of class Hep3Vec for parent Holder! ```. which is cause by the `TClass` (for the class enclosing the anonymous enum) being created during the reading of the rootpcm **before** its own `TProtoClass` is fully loaded (actually during its loading). ```. #7 0x00007ffff7784e29 in TClass::GetClass (name=0x7fffffff9ec0 ""Hep3Vec"", load=true, silent=false) at /nashome/p/pcanal/root/core/meta/src/TClass.cxx:2970. ... #9 0x00007ffff77a7c80 in TEnum::GetEnum (enumName=0xf5c810 ""Hep3Vec::(unnamed)"", sa=TEnum::kInterpLookup) at /nashome/p/pcanal/root/core/meta/src/TEnum.cxx:310. #10 0x00007ffff77a0150 in TDataMember::Init (this=0xf5c6d0, afterReading=true) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:225. #11 0x00007ffff77a3606 in TDataMember::Streamer (this=0xf5c6d0, b=...) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:949. .... #27 0x00007ffff763e5ed in TProtoClass::Streamer (this=0xf5c0e0, R__b=...) at core/G__Core.cxx:26439. .... #38 0x00007fffeab11c72 in TCling::LoadPCM (this=0x738b90, pcmFileNameFullPath=...) at /nashome/p/pcanal/root/core/metacling/src/TCling.cxx:1906. ### What is the expected behaviour? properly loading of the dictionary. ### How to reproduce? Use [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). and run `go`. ### ROOT version. work in progress ... . ### How did you install ROOT? local build. ### Which operating system are you using? alll. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12953
https://github.com/root-project/root/issues/12953:248,performance,Error,Error,248,"Dictionary generation confused by anonymous enums.; ### Describe the bug. Using:. [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). we get:. ```. . ./go. StreamerInfo for class: Hep3Vec, version=1, checksum=0x0. Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class Hep3Vec. Error in <CreateRealData>: Cannot find data member # 0 of class Hep3Vec for parent Holder! ```. which is cause by the `TClass` (for the class enclosing the anonymous enum) being created during the reading of the rootpcm **before** its own `TProtoClass` is fully loaded (actually during its loading). ```. #7 0x00007ffff7784e29 in TClass::GetClass (name=0x7fffffff9ec0 ""Hep3Vec"", load=true, silent=false) at /nashome/p/pcanal/root/core/meta/src/TClass.cxx:2970. ... #9 0x00007ffff77a7c80 in TEnum::GetEnum (enumName=0xf5c810 ""Hep3Vec::(unnamed)"", sa=TEnum::kInterpLookup) at /nashome/p/pcanal/root/core/meta/src/TEnum.cxx:310. #10 0x00007ffff77a0150 in TDataMember::Init (this=0xf5c6d0, afterReading=true) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:225. #11 0x00007ffff77a3606 in TDataMember::Streamer (this=0xf5c6d0, b=...) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:949. .... #27 0x00007ffff763e5ed in TProtoClass::Streamer (this=0xf5c0e0, R__b=...) at core/G__Core.cxx:26439. .... #38 0x00007fffeab11c72 in TCling::LoadPCM (this=0x738b90, pcmFileNameFullPath=...) at /nashome/p/pcanal/root/core/metacling/src/TCling.cxx:1906. ### What is the expected behaviour? properly loading of the dictionary. ### How to reproduce? Use [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). and run `go`. ### ROOT version. work in progress ... . ### How did you install ROOT? local build. ### Which operating system are you using? alll. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12953
https://github.com/root-project/root/issues/12953:344,performance,Error,Error,344,"Dictionary generation confused by anonymous enums.; ### Describe the bug. Using:. [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). we get:. ```. . ./go. StreamerInfo for class: Hep3Vec, version=1, checksum=0x0. Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class Hep3Vec. Error in <CreateRealData>: Cannot find data member # 0 of class Hep3Vec for parent Holder! ```. which is cause by the `TClass` (for the class enclosing the anonymous enum) being created during the reading of the rootpcm **before** its own `TProtoClass` is fully loaded (actually during its loading). ```. #7 0x00007ffff7784e29 in TClass::GetClass (name=0x7fffffff9ec0 ""Hep3Vec"", load=true, silent=false) at /nashome/p/pcanal/root/core/meta/src/TClass.cxx:2970. ... #9 0x00007ffff77a7c80 in TEnum::GetEnum (enumName=0xf5c810 ""Hep3Vec::(unnamed)"", sa=TEnum::kInterpLookup) at /nashome/p/pcanal/root/core/meta/src/TEnum.cxx:310. #10 0x00007ffff77a0150 in TDataMember::Init (this=0xf5c6d0, afterReading=true) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:225. #11 0x00007ffff77a3606 in TDataMember::Streamer (this=0xf5c6d0, b=...) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:949. .... #27 0x00007ffff763e5ed in TProtoClass::Streamer (this=0xf5c0e0, R__b=...) at core/G__Core.cxx:26439. .... #38 0x00007fffeab11c72 in TCling::LoadPCM (this=0x738b90, pcmFileNameFullPath=...) at /nashome/p/pcanal/root/core/metacling/src/TCling.cxx:1906. ### What is the expected behaviour? properly loading of the dictionary. ### How to reproduce? Use [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). and run `go`. ### ROOT version. work in progress ... . ### How did you install ROOT? local build. ### Which operating system are you using? alll. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12953
https://github.com/root-project/root/issues/12953:606,performance,load,loaded,606,"Dictionary generation confused by anonymous enums.; ### Describe the bug. Using:. [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). we get:. ```. . ./go. StreamerInfo for class: Hep3Vec, version=1, checksum=0x0. Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class Hep3Vec. Error in <CreateRealData>: Cannot find data member # 0 of class Hep3Vec for parent Holder! ```. which is cause by the `TClass` (for the class enclosing the anonymous enum) being created during the reading of the rootpcm **before** its own `TProtoClass` is fully loaded (actually during its loading). ```. #7 0x00007ffff7784e29 in TClass::GetClass (name=0x7fffffff9ec0 ""Hep3Vec"", load=true, silent=false) at /nashome/p/pcanal/root/core/meta/src/TClass.cxx:2970. ... #9 0x00007ffff77a7c80 in TEnum::GetEnum (enumName=0xf5c810 ""Hep3Vec::(unnamed)"", sa=TEnum::kInterpLookup) at /nashome/p/pcanal/root/core/meta/src/TEnum.cxx:310. #10 0x00007ffff77a0150 in TDataMember::Init (this=0xf5c6d0, afterReading=true) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:225. #11 0x00007ffff77a3606 in TDataMember::Streamer (this=0xf5c6d0, b=...) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:949. .... #27 0x00007ffff763e5ed in TProtoClass::Streamer (this=0xf5c0e0, R__b=...) at core/G__Core.cxx:26439. .... #38 0x00007fffeab11c72 in TCling::LoadPCM (this=0x738b90, pcmFileNameFullPath=...) at /nashome/p/pcanal/root/core/metacling/src/TCling.cxx:1906. ### What is the expected behaviour? properly loading of the dictionary. ### How to reproduce? Use [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). and run `go`. ### ROOT version. work in progress ... . ### How did you install ROOT? local build. ### Which operating system are you using? alll. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12953
https://github.com/root-project/root/issues/12953:634,performance,load,loading,634,"Dictionary generation confused by anonymous enums.; ### Describe the bug. Using:. [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). we get:. ```. . ./go. StreamerInfo for class: Hep3Vec, version=1, checksum=0x0. Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class Hep3Vec. Error in <CreateRealData>: Cannot find data member # 0 of class Hep3Vec for parent Holder! ```. which is cause by the `TClass` (for the class enclosing the anonymous enum) being created during the reading of the rootpcm **before** its own `TProtoClass` is fully loaded (actually during its loading). ```. #7 0x00007ffff7784e29 in TClass::GetClass (name=0x7fffffff9ec0 ""Hep3Vec"", load=true, silent=false) at /nashome/p/pcanal/root/core/meta/src/TClass.cxx:2970. ... #9 0x00007ffff77a7c80 in TEnum::GetEnum (enumName=0xf5c810 ""Hep3Vec::(unnamed)"", sa=TEnum::kInterpLookup) at /nashome/p/pcanal/root/core/meta/src/TEnum.cxx:310. #10 0x00007ffff77a0150 in TDataMember::Init (this=0xf5c6d0, afterReading=true) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:225. #11 0x00007ffff77a3606 in TDataMember::Streamer (this=0xf5c6d0, b=...) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:949. .... #27 0x00007ffff763e5ed in TProtoClass::Streamer (this=0xf5c0e0, R__b=...) at core/G__Core.cxx:26439. .... #38 0x00007fffeab11c72 in TCling::LoadPCM (this=0x738b90, pcmFileNameFullPath=...) at /nashome/p/pcanal/root/core/metacling/src/TCling.cxx:1906. ### What is the expected behaviour? properly loading of the dictionary. ### How to reproduce? Use [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). and run `go`. ### ROOT version. work in progress ... . ### How did you install ROOT? local build. ### Which operating system are you using? alll. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12953
https://github.com/root-project/root/issues/12953:723,performance,load,load,723,"Dictionary generation confused by anonymous enums.; ### Describe the bug. Using:. [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). we get:. ```. . ./go. StreamerInfo for class: Hep3Vec, version=1, checksum=0x0. Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class Hep3Vec. Error in <CreateRealData>: Cannot find data member # 0 of class Hep3Vec for parent Holder! ```. which is cause by the `TClass` (for the class enclosing the anonymous enum) being created during the reading of the rootpcm **before** its own `TProtoClass` is fully loaded (actually during its loading). ```. #7 0x00007ffff7784e29 in TClass::GetClass (name=0x7fffffff9ec0 ""Hep3Vec"", load=true, silent=false) at /nashome/p/pcanal/root/core/meta/src/TClass.cxx:2970. ... #9 0x00007ffff77a7c80 in TEnum::GetEnum (enumName=0xf5c810 ""Hep3Vec::(unnamed)"", sa=TEnum::kInterpLookup) at /nashome/p/pcanal/root/core/meta/src/TEnum.cxx:310. #10 0x00007ffff77a0150 in TDataMember::Init (this=0xf5c6d0, afterReading=true) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:225. #11 0x00007ffff77a3606 in TDataMember::Streamer (this=0xf5c6d0, b=...) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:949. .... #27 0x00007ffff763e5ed in TProtoClass::Streamer (this=0xf5c0e0, R__b=...) at core/G__Core.cxx:26439. .... #38 0x00007fffeab11c72 in TCling::LoadPCM (this=0x738b90, pcmFileNameFullPath=...) at /nashome/p/pcanal/root/core/metacling/src/TCling.cxx:1906. ### What is the expected behaviour? properly loading of the dictionary. ### How to reproduce? Use [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). and run `go`. ### ROOT version. work in progress ... . ### How did you install ROOT? local build. ### Which operating system are you using? alll. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12953
https://github.com/root-project/root/issues/12953:1387,performance,Load,LoadPCM,1387,"Dictionary generation confused by anonymous enums.; ### Describe the bug. Using:. [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). we get:. ```. . ./go. StreamerInfo for class: Hep3Vec, version=1, checksum=0x0. Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class Hep3Vec. Error in <CreateRealData>: Cannot find data member # 0 of class Hep3Vec for parent Holder! ```. which is cause by the `TClass` (for the class enclosing the anonymous enum) being created during the reading of the rootpcm **before** its own `TProtoClass` is fully loaded (actually during its loading). ```. #7 0x00007ffff7784e29 in TClass::GetClass (name=0x7fffffff9ec0 ""Hep3Vec"", load=true, silent=false) at /nashome/p/pcanal/root/core/meta/src/TClass.cxx:2970. ... #9 0x00007ffff77a7c80 in TEnum::GetEnum (enumName=0xf5c810 ""Hep3Vec::(unnamed)"", sa=TEnum::kInterpLookup) at /nashome/p/pcanal/root/core/meta/src/TEnum.cxx:310. #10 0x00007ffff77a0150 in TDataMember::Init (this=0xf5c6d0, afterReading=true) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:225. #11 0x00007ffff77a3606 in TDataMember::Streamer (this=0xf5c6d0, b=...) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:949. .... #27 0x00007ffff763e5ed in TProtoClass::Streamer (this=0xf5c0e0, R__b=...) at core/G__Core.cxx:26439. .... #38 0x00007fffeab11c72 in TCling::LoadPCM (this=0x738b90, pcmFileNameFullPath=...) at /nashome/p/pcanal/root/core/metacling/src/TCling.cxx:1906. ### What is the expected behaviour? properly loading of the dictionary. ### How to reproduce? Use [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). and run `go`. ### ROOT version. work in progress ... . ### How did you install ROOT? local build. ### Which operating system are you using? alll. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12953
https://github.com/root-project/root/issues/12953:1543,performance,load,loading,1543,"Dictionary generation confused by anonymous enums.; ### Describe the bug. Using:. [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). we get:. ```. . ./go. StreamerInfo for class: Hep3Vec, version=1, checksum=0x0. Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class Hep3Vec. Error in <CreateRealData>: Cannot find data member # 0 of class Hep3Vec for parent Holder! ```. which is cause by the `TClass` (for the class enclosing the anonymous enum) being created during the reading of the rootpcm **before** its own `TProtoClass` is fully loaded (actually during its loading). ```. #7 0x00007ffff7784e29 in TClass::GetClass (name=0x7fffffff9ec0 ""Hep3Vec"", load=true, silent=false) at /nashome/p/pcanal/root/core/meta/src/TClass.cxx:2970. ... #9 0x00007ffff77a7c80 in TEnum::GetEnum (enumName=0xf5c810 ""Hep3Vec::(unnamed)"", sa=TEnum::kInterpLookup) at /nashome/p/pcanal/root/core/meta/src/TEnum.cxx:310. #10 0x00007ffff77a0150 in TDataMember::Init (this=0xf5c6d0, afterReading=true) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:225. #11 0x00007ffff77a3606 in TDataMember::Streamer (this=0xf5c6d0, b=...) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:949. .... #27 0x00007ffff763e5ed in TProtoClass::Streamer (this=0xf5c0e0, R__b=...) at core/G__Core.cxx:26439. .... #38 0x00007fffeab11c72 in TCling::LoadPCM (this=0x738b90, pcmFileNameFullPath=...) at /nashome/p/pcanal/root/core/metacling/src/TCling.cxx:1906. ### What is the expected behaviour? properly loading of the dictionary. ### How to reproduce? Use [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). and run `go`. ### ROOT version. work in progress ... . ### How did you install ROOT? local build. ### Which operating system are you using? alll. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12953
https://github.com/root-project/root/issues/12953:248,safety,Error,Error,248,"Dictionary generation confused by anonymous enums.; ### Describe the bug. Using:. [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). we get:. ```. . ./go. StreamerInfo for class: Hep3Vec, version=1, checksum=0x0. Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class Hep3Vec. Error in <CreateRealData>: Cannot find data member # 0 of class Hep3Vec for parent Holder! ```. which is cause by the `TClass` (for the class enclosing the anonymous enum) being created during the reading of the rootpcm **before** its own `TProtoClass` is fully loaded (actually during its loading). ```. #7 0x00007ffff7784e29 in TClass::GetClass (name=0x7fffffff9ec0 ""Hep3Vec"", load=true, silent=false) at /nashome/p/pcanal/root/core/meta/src/TClass.cxx:2970. ... #9 0x00007ffff77a7c80 in TEnum::GetEnum (enumName=0xf5c810 ""Hep3Vec::(unnamed)"", sa=TEnum::kInterpLookup) at /nashome/p/pcanal/root/core/meta/src/TEnum.cxx:310. #10 0x00007ffff77a0150 in TDataMember::Init (this=0xf5c6d0, afterReading=true) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:225. #11 0x00007ffff77a3606 in TDataMember::Streamer (this=0xf5c6d0, b=...) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:949. .... #27 0x00007ffff763e5ed in TProtoClass::Streamer (this=0xf5c0e0, R__b=...) at core/G__Core.cxx:26439. .... #38 0x00007fffeab11c72 in TCling::LoadPCM (this=0x738b90, pcmFileNameFullPath=...) at /nashome/p/pcanal/root/core/metacling/src/TCling.cxx:1906. ### What is the expected behaviour? properly loading of the dictionary. ### How to reproduce? Use [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). and run `go`. ### ROOT version. work in progress ... . ### How did you install ROOT? local build. ### Which operating system are you using? alll. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12953
https://github.com/root-project/root/issues/12953:344,safety,Error,Error,344,"Dictionary generation confused by anonymous enums.; ### Describe the bug. Using:. [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). we get:. ```. . ./go. StreamerInfo for class: Hep3Vec, version=1, checksum=0x0. Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class Hep3Vec. Error in <CreateRealData>: Cannot find data member # 0 of class Hep3Vec for parent Holder! ```. which is cause by the `TClass` (for the class enclosing the anonymous enum) being created during the reading of the rootpcm **before** its own `TProtoClass` is fully loaded (actually during its loading). ```. #7 0x00007ffff7784e29 in TClass::GetClass (name=0x7fffffff9ec0 ""Hep3Vec"", load=true, silent=false) at /nashome/p/pcanal/root/core/meta/src/TClass.cxx:2970. ... #9 0x00007ffff77a7c80 in TEnum::GetEnum (enumName=0xf5c810 ""Hep3Vec::(unnamed)"", sa=TEnum::kInterpLookup) at /nashome/p/pcanal/root/core/meta/src/TEnum.cxx:310. #10 0x00007ffff77a0150 in TDataMember::Init (this=0xf5c6d0, afterReading=true) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:225. #11 0x00007ffff77a3606 in TDataMember::Streamer (this=0xf5c6d0, b=...) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:949. .... #27 0x00007ffff763e5ed in TProtoClass::Streamer (this=0xf5c0e0, R__b=...) at core/G__Core.cxx:26439. .... #38 0x00007fffeab11c72 in TCling::LoadPCM (this=0x738b90, pcmFileNameFullPath=...) at /nashome/p/pcanal/root/core/metacling/src/TCling.cxx:1906. ### What is the expected behaviour? properly loading of the dictionary. ### How to reproduce? Use [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). and run `go`. ### ROOT version. work in progress ... . ### How did you install ROOT? local build. ### Which operating system are you using? alll. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12953
https://github.com/root-project/root/issues/12953:234,security,checksum,checksum,234,"Dictionary generation confused by anonymous enums.; ### Describe the bug. Using:. [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). we get:. ```. . ./go. StreamerInfo for class: Hep3Vec, version=1, checksum=0x0. Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class Hep3Vec. Error in <CreateRealData>: Cannot find data member # 0 of class Hep3Vec for parent Holder! ```. which is cause by the `TClass` (for the class enclosing the anonymous enum) being created during the reading of the rootpcm **before** its own `TProtoClass` is fully loaded (actually during its loading). ```. #7 0x00007ffff7784e29 in TClass::GetClass (name=0x7fffffff9ec0 ""Hep3Vec"", load=true, silent=false) at /nashome/p/pcanal/root/core/meta/src/TClass.cxx:2970. ... #9 0x00007ffff77a7c80 in TEnum::GetEnum (enumName=0xf5c810 ""Hep3Vec::(unnamed)"", sa=TEnum::kInterpLookup) at /nashome/p/pcanal/root/core/meta/src/TEnum.cxx:310. #10 0x00007ffff77a0150 in TDataMember::Init (this=0xf5c6d0, afterReading=true) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:225. #11 0x00007ffff77a3606 in TDataMember::Streamer (this=0xf5c6d0, b=...) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:949. .... #27 0x00007ffff763e5ed in TProtoClass::Streamer (this=0xf5c0e0, R__b=...) at core/G__Core.cxx:26439. .... #38 0x00007fffeab11c72 in TCling::LoadPCM (this=0x738b90, pcmFileNameFullPath=...) at /nashome/p/pcanal/root/core/metacling/src/TCling.cxx:1906. ### What is the expected behaviour? properly loading of the dictionary. ### How to reproduce? Use [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). and run `go`. ### ROOT version. work in progress ... . ### How did you install ROOT? local build. ### Which operating system are you using? alll. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12953
https://github.com/root-project/root/issues/12953:1843,testability,context,context,1843,"Dictionary generation confused by anonymous enums.; ### Describe the bug. Using:. [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). we get:. ```. . ./go. StreamerInfo for class: Hep3Vec, version=1, checksum=0x0. Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class Hep3Vec. Error in <CreateRealData>: Cannot find data member # 0 of class Hep3Vec for parent Holder! ```. which is cause by the `TClass` (for the class enclosing the anonymous enum) being created during the reading of the rootpcm **before** its own `TProtoClass` is fully loaded (actually during its loading). ```. #7 0x00007ffff7784e29 in TClass::GetClass (name=0x7fffffff9ec0 ""Hep3Vec"", load=true, silent=false) at /nashome/p/pcanal/root/core/meta/src/TClass.cxx:2970. ... #9 0x00007ffff77a7c80 in TEnum::GetEnum (enumName=0xf5c810 ""Hep3Vec::(unnamed)"", sa=TEnum::kInterpLookup) at /nashome/p/pcanal/root/core/meta/src/TEnum.cxx:310. #10 0x00007ffff77a0150 in TDataMember::Init (this=0xf5c6d0, afterReading=true) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:225. #11 0x00007ffff77a3606 in TDataMember::Streamer (this=0xf5c6d0, b=...) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:949. .... #27 0x00007ffff763e5ed in TProtoClass::Streamer (this=0xf5c0e0, R__b=...) at core/G__Core.cxx:26439. .... #38 0x00007fffeab11c72 in TCling::LoadPCM (this=0x738b90, pcmFileNameFullPath=...) at /nashome/p/pcanal/root/core/metacling/src/TCling.cxx:1906. ### What is the expected behaviour? properly loading of the dictionary. ### How to reproduce? Use [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). and run `go`. ### ROOT version. work in progress ... . ### How did you install ROOT? local build. ### Which operating system are you using? alll. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12953
https://github.com/root-project/root/issues/12953:248,usability,Error,Error,248,"Dictionary generation confused by anonymous enums.; ### Describe the bug. Using:. [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). we get:. ```. . ./go. StreamerInfo for class: Hep3Vec, version=1, checksum=0x0. Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class Hep3Vec. Error in <CreateRealData>: Cannot find data member # 0 of class Hep3Vec for parent Holder! ```. which is cause by the `TClass` (for the class enclosing the anonymous enum) being created during the reading of the rootpcm **before** its own `TProtoClass` is fully loaded (actually during its loading). ```. #7 0x00007ffff7784e29 in TClass::GetClass (name=0x7fffffff9ec0 ""Hep3Vec"", load=true, silent=false) at /nashome/p/pcanal/root/core/meta/src/TClass.cxx:2970. ... #9 0x00007ffff77a7c80 in TEnum::GetEnum (enumName=0xf5c810 ""Hep3Vec::(unnamed)"", sa=TEnum::kInterpLookup) at /nashome/p/pcanal/root/core/meta/src/TEnum.cxx:310. #10 0x00007ffff77a0150 in TDataMember::Init (this=0xf5c6d0, afterReading=true) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:225. #11 0x00007ffff77a3606 in TDataMember::Streamer (this=0xf5c6d0, b=...) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:949. .... #27 0x00007ffff763e5ed in TProtoClass::Streamer (this=0xf5c0e0, R__b=...) at core/G__Core.cxx:26439. .... #38 0x00007fffeab11c72 in TCling::LoadPCM (this=0x738b90, pcmFileNameFullPath=...) at /nashome/p/pcanal/root/core/metacling/src/TCling.cxx:1906. ### What is the expected behaviour? properly loading of the dictionary. ### How to reproduce? Use [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). and run `go`. ### ROOT version. work in progress ... . ### How did you install ROOT? local build. ### Which operating system are you using? alll. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12953
https://github.com/root-project/root/issues/12953:344,usability,Error,Error,344,"Dictionary generation confused by anonymous enums.; ### Describe the bug. Using:. [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). we get:. ```. . ./go. StreamerInfo for class: Hep3Vec, version=1, checksum=0x0. Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class Hep3Vec. Error in <CreateRealData>: Cannot find data member # 0 of class Hep3Vec for parent Holder! ```. which is cause by the `TClass` (for the class enclosing the anonymous enum) being created during the reading of the rootpcm **before** its own `TProtoClass` is fully loaded (actually during its loading). ```. #7 0x00007ffff7784e29 in TClass::GetClass (name=0x7fffffff9ec0 ""Hep3Vec"", load=true, silent=false) at /nashome/p/pcanal/root/core/meta/src/TClass.cxx:2970. ... #9 0x00007ffff77a7c80 in TEnum::GetEnum (enumName=0xf5c810 ""Hep3Vec::(unnamed)"", sa=TEnum::kInterpLookup) at /nashome/p/pcanal/root/core/meta/src/TEnum.cxx:310. #10 0x00007ffff77a0150 in TDataMember::Init (this=0xf5c6d0, afterReading=true) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:225. #11 0x00007ffff77a3606 in TDataMember::Streamer (this=0xf5c6d0, b=...) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:949. .... #27 0x00007ffff763e5ed in TProtoClass::Streamer (this=0xf5c0e0, R__b=...) at core/G__Core.cxx:26439. .... #38 0x00007fffeab11c72 in TCling::LoadPCM (this=0x738b90, pcmFileNameFullPath=...) at /nashome/p/pcanal/root/core/metacling/src/TCling.cxx:1906. ### What is the expected behaviour? properly loading of the dictionary. ### How to reproduce? Use [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). and run `go`. ### ROOT version. work in progress ... . ### How did you install ROOT? local build. ### Which operating system are you using? alll. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12953
https://github.com/root-project/root/issues/12953:1523,usability,behavi,behaviour,1523,"Dictionary generation confused by anonymous enums.; ### Describe the bug. Using:. [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). we get:. ```. . ./go. StreamerInfo for class: Hep3Vec, version=1, checksum=0x0. Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class Hep3Vec. Error in <CreateRealData>: Cannot find data member # 0 of class Hep3Vec for parent Holder! ```. which is cause by the `TClass` (for the class enclosing the anonymous enum) being created during the reading of the rootpcm **before** its own `TProtoClass` is fully loaded (actually during its loading). ```. #7 0x00007ffff7784e29 in TClass::GetClass (name=0x7fffffff9ec0 ""Hep3Vec"", load=true, silent=false) at /nashome/p/pcanal/root/core/meta/src/TClass.cxx:2970. ... #9 0x00007ffff77a7c80 in TEnum::GetEnum (enumName=0xf5c810 ""Hep3Vec::(unnamed)"", sa=TEnum::kInterpLookup) at /nashome/p/pcanal/root/core/meta/src/TEnum.cxx:310. #10 0x00007ffff77a0150 in TDataMember::Init (this=0xf5c6d0, afterReading=true) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:225. #11 0x00007ffff77a3606 in TDataMember::Streamer (this=0xf5c6d0, b=...) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:949. .... #27 0x00007ffff763e5ed in TProtoClass::Streamer (this=0xf5c0e0, R__b=...) at core/G__Core.cxx:26439. .... #38 0x00007fffeab11c72 in TCling::LoadPCM (this=0x738b90, pcmFileNameFullPath=...) at /nashome/p/pcanal/root/core/metacling/src/TCling.cxx:1906. ### What is the expected behaviour? properly loading of the dictionary. ### How to reproduce? Use [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). and run `go`. ### ROOT version. work in progress ... . ### How did you install ROOT? local build. ### Which operating system are you using? alll. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12953
https://github.com/root-project/root/issues/12953:1722,usability,progress,progress,1722,"Dictionary generation confused by anonymous enums.; ### Describe the bug. Using:. [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). we get:. ```. . ./go. StreamerInfo for class: Hep3Vec, version=1, checksum=0x0. Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class Hep3Vec. Error in <CreateRealData>: Cannot find data member # 0 of class Hep3Vec for parent Holder! ```. which is cause by the `TClass` (for the class enclosing the anonymous enum) being created during the reading of the rootpcm **before** its own `TProtoClass` is fully loaded (actually during its loading). ```. #7 0x00007ffff7784e29 in TClass::GetClass (name=0x7fffffff9ec0 ""Hep3Vec"", load=true, silent=false) at /nashome/p/pcanal/root/core/meta/src/TClass.cxx:2970. ... #9 0x00007ffff77a7c80 in TEnum::GetEnum (enumName=0xf5c810 ""Hep3Vec::(unnamed)"", sa=TEnum::kInterpLookup) at /nashome/p/pcanal/root/core/meta/src/TEnum.cxx:310. #10 0x00007ffff77a0150 in TDataMember::Init (this=0xf5c6d0, afterReading=true) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:225. #11 0x00007ffff77a3606 in TDataMember::Streamer (this=0xf5c6d0, b=...) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:949. .... #27 0x00007ffff763e5ed in TProtoClass::Streamer (this=0xf5c0e0, R__b=...) at core/G__Core.cxx:26439. .... #38 0x00007fffeab11c72 in TCling::LoadPCM (this=0x738b90, pcmFileNameFullPath=...) at /nashome/p/pcanal/root/core/metacling/src/TCling.cxx:1906. ### What is the expected behaviour? properly loading of the dictionary. ### How to reproduce? Use [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz). and run `go`. ### ROOT version. work in progress ... . ### How did you install ROOT? local build. ### Which operating system are you using? alll. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12953
https://github.com/root-project/root/pull/12954:446,integrability,event,events,446,"[RF] Fix `RooAddPdf::expectedEvents()` in conditional fits; So far, the projection coefficient for coefficients in RooAddPdfs was missing in `RooAddPdf::expectedEvents()`. However, this is important to include in conditional fits where the normalization set of `expectedEvents()` is different from the normalization set for coefficient determination. This PR includes this missing factor. A unit test that covers both the case where the expected events are taken from the coefs and the one where they are taken from the pdfs is included.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12954
https://github.com/root-project/root/pull/12954:396,safety,test,test,396,"[RF] Fix `RooAddPdf::expectedEvents()` in conditional fits; So far, the projection coefficient for coefficients in RooAddPdfs was missing in `RooAddPdf::expectedEvents()`. However, this is important to include in conditional fits where the normalization set of `expectedEvents()` is different from the normalization set for coefficient determination. This PR includes this missing factor. A unit test that covers both the case where the expected events are taken from the coefs and the one where they are taken from the pdfs is included.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12954
https://github.com/root-project/root/pull/12954:391,testability,unit,unit,391,"[RF] Fix `RooAddPdf::expectedEvents()` in conditional fits; So far, the projection coefficient for coefficients in RooAddPdfs was missing in `RooAddPdf::expectedEvents()`. However, this is important to include in conditional fits where the normalization set of `expectedEvents()` is different from the normalization set for coefficient determination. This PR includes this missing factor. A unit test that covers both the case where the expected events are taken from the coefs and the one where they are taken from the pdfs is included.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12954
https://github.com/root-project/root/pull/12954:396,testability,test,test,396,"[RF] Fix `RooAddPdf::expectedEvents()` in conditional fits; So far, the projection coefficient for coefficients in RooAddPdfs was missing in `RooAddPdf::expectedEvents()`. However, this is important to include in conditional fits where the normalization set of `expectedEvents()` is different from the normalization set for coefficient determination. This PR includes this missing factor. A unit test that covers both the case where the expected events are taken from the coefs and the one where they are taken from the pdfs is included.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12954
https://github.com/root-project/root/pull/12955:20,usability,support,support,20,"[RF] Add CodeGen-AD support for the Hist* classes and RooPoisson; This PR adds support for CodeGen-AD for RooHistPdf, RooHistFunc, RooParamHistFunc, ParamHistFunc, and RooPoisson.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12955
https://github.com/root-project/root/pull/12955:79,usability,support,support,79,"[RF] Add CodeGen-AD support for the Hist* classes and RooPoisson; This PR adds support for CodeGen-AD for RooHistPdf, RooHistFunc, RooParamHistFunc, ParamHistFunc, and RooPoisson.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12955
https://github.com/root-project/root/pull/12956:46,availability,failur,failure,46,"[meta] Getter should take `0`, not `1`:; This failure exists since ROOT 6: while CINT happily converted 1 to the world, cling refuses to convert it to e.g. const char*. Pass `0` which is ""more compatible"" with datatypes. This is still terrible design, but at least it is not making things worse, only better... Before TNamed::SetName was looked up as a call `named.SetName(1)` which - with cling - means that no method is found. Now `named.SetName(0)` finds the right method. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12956
https://github.com/root-project/root/pull/12956:46,deployability,fail,failure,46,"[meta] Getter should take `0`, not `1`:; This failure exists since ROOT 6: while CINT happily converted 1 to the world, cling refuses to convert it to e.g. const char*. Pass `0` which is ""more compatible"" with datatypes. This is still terrible design, but at least it is not making things worse, only better... Before TNamed::SetName was looked up as a call `named.SetName(1)` which - with cling - means that no method is found. Now `named.SetName(0)` finds the right method. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12956
https://github.com/root-project/root/pull/12956:571,deployability,updat,updated,571,"[meta] Getter should take `0`, not `1`:; This failure exists since ROOT 6: while CINT happily converted 1 to the world, cling refuses to convert it to e.g. const char*. Pass `0` which is ""more compatible"" with datatypes. This is still terrible design, but at least it is not making things worse, only better... Before TNamed::SetName was looked up as a call `named.SetName(1)` which - with cling - means that no method is found. Now `named.SetName(0)` finds the right method. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12956
https://github.com/root-project/root/pull/12956:193,interoperability,compatib,compatible,193,"[meta] Getter should take `0`, not `1`:; This failure exists since ROOT 6: while CINT happily converted 1 to the world, cling refuses to convert it to e.g. const char*. Pass `0` which is ""more compatible"" with datatypes. This is still terrible design, but at least it is not making things worse, only better... Before TNamed::SetName was looked up as a call `named.SetName(1)` which - with cling - means that no method is found. Now `named.SetName(0)` finds the right method. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12956
https://github.com/root-project/root/pull/12956:46,performance,failur,failure,46,"[meta] Getter should take `0`, not `1`:; This failure exists since ROOT 6: while CINT happily converted 1 to the world, cling refuses to convert it to e.g. const char*. Pass `0` which is ""more compatible"" with datatypes. This is still terrible design, but at least it is not making things worse, only better... Before TNamed::SetName was looked up as a call `named.SetName(1)` which - with cling - means that no method is found. Now `named.SetName(0)` finds the right method. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12956
https://github.com/root-project/root/pull/12956:46,reliability,fail,failure,46,"[meta] Getter should take `0`, not `1`:; This failure exists since ROOT 6: while CINT happily converted 1 to the world, cling refuses to convert it to e.g. const char*. Pass `0` which is ""more compatible"" with datatypes. This is still terrible design, but at least it is not making things worse, only better... Before TNamed::SetName was looked up as a call `named.SetName(1)` which - with cling - means that no method is found. Now `named.SetName(0)` finds the right method. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12956
https://github.com/root-project/root/pull/12956:541,safety,test,tested,541,"[meta] Getter should take `0`, not `1`:; This failure exists since ROOT 6: while CINT happily converted 1 to the world, cling refuses to convert it to e.g. const char*. Pass `0` which is ""more compatible"" with datatypes. This is still terrible design, but at least it is not making things worse, only better... Before TNamed::SetName was looked up as a call `named.SetName(1)` which - with cling - means that no method is found. Now `named.SetName(0)` finds the right method. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12956
https://github.com/root-project/root/pull/12956:571,safety,updat,updated,571,"[meta] Getter should take `0`, not `1`:; This failure exists since ROOT 6: while CINT happily converted 1 to the world, cling refuses to convert it to e.g. const char*. Pass `0` which is ""more compatible"" with datatypes. This is still terrible design, but at least it is not making things worse, only better... Before TNamed::SetName was looked up as a call `named.SetName(1)` which - with cling - means that no method is found. Now `named.SetName(0)` finds the right method. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12956
https://github.com/root-project/root/pull/12956:571,security,updat,updated,571,"[meta] Getter should take `0`, not `1`:; This failure exists since ROOT 6: while CINT happily converted 1 to the world, cling refuses to convert it to e.g. const char*. Pass `0` which is ""more compatible"" with datatypes. This is still terrible design, but at least it is not making things worse, only better... Before TNamed::SetName was looked up as a call `named.SetName(1)` which - with cling - means that no method is found. Now `named.SetName(0)` finds the right method. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12956
https://github.com/root-project/root/pull/12956:541,testability,test,tested,541,"[meta] Getter should take `0`, not `1`:; This failure exists since ROOT 6: while CINT happily converted 1 to the world, cling refuses to convert it to e.g. const char*. Pass `0` which is ""more compatible"" with datatypes. This is still terrible design, but at least it is not making things worse, only better... Before TNamed::SetName was looked up as a call `named.SetName(1)` which - with cling - means that no method is found. Now `named.SetName(0)` finds the right method. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12956
https://github.com/root-project/root/issues/12957:36,availability,fault,fault,36,"[6-28-patches][master] Segmentation fault in ROOT::TGenericClassInfo::~TGenericClassInfo; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Hi,. We are trying to test latest ROOT 6.28 patches (commit 55513fb518) and ROOT master (commit d4d1df86b07886d56c4bd1372590d0a62c3987c0) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit a13590901c or ROOT maser commit f499987. . [a]. ```. @@@@ Running edmWriteConfigs for SimG4CoreSaveSimTrackAction. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:401,availability,error,errors,401,"[6-28-patches][master] Segmentation fault in ROOT::TGenericClassInfo::~TGenericClassInfo; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Hi,. We are trying to test latest ROOT 6.28 patches (commit 55513fb518) and ROOT master (commit d4d1df86b07886d56c4bd1372590d0a62c3987c0) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit a13590901c or ROOT maser commit f499987. . [a]. ```. @@@@ Running edmWriteConfigs for SimG4CoreSaveSimTrackAction. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:443,availability,error,errors,443,"[6-28-patches][master] Segmentation fault in ROOT::TGenericClassInfo::~TGenericClassInfo; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Hi,. We are trying to test latest ROOT 6.28 patches (commit 55513fb518) and ROOT master (commit d4d1df86b07886d56c4bd1372590d0a62c3987c0) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit a13590901c or ROOT maser commit f499987. . [a]. ```. @@@@ Running edmWriteConfigs for SimG4CoreSaveSimTrackAction. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:8937,availability,fault,fault,8937," in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. /bin/sh: line 1: 1509407 Segmentation fault (core dumped) edmWriteConfigs -p /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-06-04-2300/tmp/el8_amd64_gcc11/src/SimG4Core/SaveSimTrackAction/src/SimG4CoreSaveSimTrackAction/libSimG4CoreSaveSimTrackAction.so. gmake: *** [lib/el8_amd64_gcc11/SimG4CoreSaveSimTrackAction.edmplugin] Error 1. ```. ### What is the expected behaviour? Not to crash. ### How to reproduce? ```. $ /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/8539/32991/install.sh. $ /cvmfs/cms.cern.ch/common/cmssw-el8 # skip if on EL8 machine. $ cd CMSSW_13_2_ROOT6_X_2023-06-04-2300/src. $ cmsenv. $ scram b -j8 SimDataFormats/CaloHit. ```. ### ROOT version. 6-28-patches, master. ### How did you install ROOT? from source. ### Which operating system are you using? Alma Linux 8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:9251,availability,Error,Error,9251," in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. /bin/sh: line 1: 1509407 Segmentation fault (core dumped) edmWriteConfigs -p /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-06-04-2300/tmp/el8_amd64_gcc11/src/SimG4Core/SaveSimTrackAction/src/SimG4CoreSaveSimTrackAction/libSimG4CoreSaveSimTrackAction.so. gmake: *** [lib/el8_amd64_gcc11/SimG4CoreSaveSimTrackAction.edmplugin] Error 1. ```. ### What is the expected behaviour? Not to crash. ### How to reproduce? ```. $ /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/8539/32991/install.sh. $ /cvmfs/cms.cern.ch/common/cmssw-el8 # skip if on EL8 machine. $ cd CMSSW_13_2_ROOT6_X_2023-06-04-2300/src. $ cmsenv. $ scram b -j8 SimDataFormats/CaloHit. ```. ### ROOT version. 6-28-patches, master. ### How did you install ROOT? from source. ### Which operating system are you using? Alma Linux 8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:9665,availability,operat,operating,9665," in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. /bin/sh: line 1: 1509407 Segmentation fault (core dumped) edmWriteConfigs -p /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-06-04-2300/tmp/el8_amd64_gcc11/src/SimG4Core/SaveSimTrackAction/src/SimG4CoreSaveSimTrackAction/libSimG4CoreSaveSimTrackAction.so. gmake: *** [lib/el8_amd64_gcc11/SimG4CoreSaveSimTrackAction.edmplugin] Error 1. ```. ### What is the expected behaviour? Not to crash. ### How to reproduce? ```. $ /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/8539/32991/install.sh. $ /cvmfs/cms.cern.ch/common/cmssw-el8 # skip if on EL8 machine. $ cd CMSSW_13_2_ROOT6_X_2023-06-04-2300/src. $ cmsenv. $ scram b -j8 SimDataFormats/CaloHit. ```. ### ROOT version. 6-28-patches, master. ### How did you install ROOT? from source. ### Which operating system are you using? Alma Linux 8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:6,deployability,patch,patches,6,"[6-28-patches][master] Segmentation fault in ROOT::TGenericClassInfo::~TGenericClassInfo; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Hi,. We are trying to test latest ROOT 6.28 patches (commit 55513fb518) and ROOT master (commit d4d1df86b07886d56c4bd1372590d0a62c3987c0) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit a13590901c or ROOT maser commit f499987. . [a]. ```. @@@@ Running edmWriteConfigs for SimG4CoreSaveSimTrackAction. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:214,deployability,patch,patches,214,"[6-28-patches][master] Segmentation fault in ROOT::TGenericClassInfo::~TGenericClassInfo; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Hi,. We are trying to test latest ROOT 6.28 patches (commit 55513fb518) and ROOT master (commit d4d1df86b07886d56c4bd1372590d0a62c3987c0) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit a13590901c or ROOT maser commit f499987. . [a]. ```. @@@@ Running edmWriteConfigs for SimG4CoreSaveSimTrackAction. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:352,deployability,build,builds,352,"[6-28-patches][master] Segmentation fault in ROOT::TGenericClassInfo::~TGenericClassInfo; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Hi,. We are trying to test latest ROOT 6.28 patches (commit 55513fb518) and ROOT master (commit d4d1df86b07886d56c4bd1372590d0a62c3987c0) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit a13590901c or ROOT maser commit f499987. . [a]. ```. @@@@ Running edmWriteConfigs for SimG4CoreSaveSimTrackAction. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:395,deployability,build,build,395,"[6-28-patches][master] Segmentation fault in ROOT::TGenericClassInfo::~TGenericClassInfo; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Hi,. We are trying to test latest ROOT 6.28 patches (commit 55513fb518) and ROOT master (commit d4d1df86b07886d56c4bd1372590d0a62c3987c0) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit a13590901c or ROOT maser commit f499987. . [a]. ```. @@@@ Running edmWriteConfigs for SimG4CoreSaveSimTrackAction. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:465,deployability,patch,patches,465,"[6-28-patches][master] Segmentation fault in ROOT::TGenericClassInfo::~TGenericClassInfo; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Hi,. We are trying to test latest ROOT 6.28 patches (commit 55513fb518) and ROOT master (commit d4d1df86b07886d56c4bd1372590d0a62c3987c0) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit a13590901c or ROOT maser commit f499987. . [a]. ```. @@@@ Running edmWriteConfigs for SimG4CoreSaveSimTrackAction. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:760,deployability,stack,stack,760,"[6-28-patches][master] Segmentation fault in ROOT::TGenericClassInfo::~TGenericClassInfo; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Hi,. We are trying to test latest ROOT 6.28 patches (commit 55513fb518) and ROOT master (commit d4d1df86b07886d56c4bd1372590d0a62c3987c0) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit a13590901c or ROOT maser commit f499987. . [a]. ```. @@@@ Running edmWriteConfigs for SimG4CoreSaveSimTrackAction. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:1275,deployability,BUILD,BUILD,1275,"86d56c4bd1372590d0a62c3987c0) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit a13590901c or ROOT maser commit f499987. . [a]. ```. @@@@ Running edmWriteConfigs for SimG4CoreSaveSimTrackAction. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:395. #6 0x0000152ece6eb5c1 in sighandler (sig=11) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:1434,deployability,Stack,StackTrace,1434,"uch errors with ROOT 6.28-patches commit a13590901c or ROOT maser commit f499987. . [a]. ```. @@@@ Running edmWriteConfigs for SimG4CoreSaveSimTrackAction. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:395. #6 0x0000152ece6eb5c1 in sighandler (sig=11) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3586. #7 <signal handler called>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:1525,deployability,BUILD,BUILD,1525,"```. @@@@ Running edmWriteConfigs for SimG4CoreSaveSimTrackAction. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:395. #6 0x0000152ece6eb5c1 in sighandler (sig=11) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3586. #7 <signal handler called>. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:1811,deployability,BUILD,BUILD,1811,"==================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:395. #6 0x0000152ece6eb5c1 in sighandler (sig=11) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3586. #7 <signal handler called>. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:2063,deployability,BUILD,BUILD,2063,"kins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:395. #6 0x0000152ece6eb5c1 in sighandler (sig=11) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3586. #7 <signal handler called>. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=1844674",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:2291,deployability,BUILD,BUILD,2291,"11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:395. #6 0x0000152ece6eb5c1 in sighandler (sig=11) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3586. #7 <signal handler called>. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vecto",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:4949,deployability,BUILD,BUILD,4949,"locator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ==============================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:5468,deployability,stack,stack,5468,"ed out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:5797,deployability,stack,stack,5797,"ntId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:8476,deployability,BUILD,BUILD,8476,"locator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. /bin/sh: line 1: 1509407 Segmentation fault (core dumped) edmWriteConfigs -p /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-06-04-2300/tmp/el8_amd64_gcc11/src/SimG4Core/SaveSimTrackAction/src/SimG4CoreSaveSimTrackAction/libSimG4CoreSaveSimTrackAction.so. gmake: *** [lib/el8_amd64_gcc11/SimG4CoreSaveSimTrackAction.edmplugin] Error 1. ```. ### What is the expected behaviour? Not to crash. ### How to reproduce? ```. $ /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/8539/32991/install.sh. $ /cvmfs/cms.cern.ch/common/cmssw-el8 # skip if on EL8 machine. $ cd ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:9398,deployability,instal,install,9398," in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. /bin/sh: line 1: 1509407 Segmentation fault (core dumped) edmWriteConfigs -p /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-06-04-2300/tmp/el8_amd64_gcc11/src/SimG4Core/SaveSimTrackAction/src/SimG4CoreSaveSimTrackAction/libSimG4CoreSaveSimTrackAction.so. gmake: *** [lib/el8_amd64_gcc11/SimG4CoreSaveSimTrackAction.edmplugin] Error 1. ```. ### What is the expected behaviour? Not to crash. ### How to reproduce? ```. $ /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/8539/32991/install.sh. $ /cvmfs/cms.cern.ch/common/cmssw-el8 # skip if on EL8 machine. $ cd CMSSW_13_2_ROOT6_X_2023-06-04-2300/src. $ cmsenv. $ scram b -j8 SimDataFormats/CaloHit. ```. ### ROOT version. 6-28-patches, master. ### How did you install ROOT? from source. ### Which operating system are you using? Alma Linux 8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:9581,deployability,version,version,9581," in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. /bin/sh: line 1: 1509407 Segmentation fault (core dumped) edmWriteConfigs -p /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-06-04-2300/tmp/el8_amd64_gcc11/src/SimG4Core/SaveSimTrackAction/src/SimG4CoreSaveSimTrackAction/libSimG4CoreSaveSimTrackAction.so. gmake: *** [lib/el8_amd64_gcc11/SimG4CoreSaveSimTrackAction.edmplugin] Error 1. ```. ### What is the expected behaviour? Not to crash. ### How to reproduce? ```. $ /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/8539/32991/install.sh. $ /cvmfs/cms.cern.ch/common/cmssw-el8 # skip if on EL8 machine. $ cd CMSSW_13_2_ROOT6_X_2023-06-04-2300/src. $ cmsenv. $ scram b -j8 SimDataFormats/CaloHit. ```. ### ROOT version. 6-28-patches, master. ### How did you install ROOT? from source. ### Which operating system are you using? Alma Linux 8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:9595,deployability,patch,patches,9595," in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. /bin/sh: line 1: 1509407 Segmentation fault (core dumped) edmWriteConfigs -p /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-06-04-2300/tmp/el8_amd64_gcc11/src/SimG4Core/SaveSimTrackAction/src/SimG4CoreSaveSimTrackAction/libSimG4CoreSaveSimTrackAction.so. gmake: *** [lib/el8_amd64_gcc11/SimG4CoreSaveSimTrackAction.edmplugin] Error 1. ```. ### What is the expected behaviour? Not to crash. ### How to reproduce? ```. $ /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/8539/32991/install.sh. $ /cvmfs/cms.cern.ch/common/cmssw-el8 # skip if on EL8 machine. $ cd CMSSW_13_2_ROOT6_X_2023-06-04-2300/src. $ cmsenv. $ scram b -j8 SimDataFormats/CaloHit. ```. ### ROOT version. 6-28-patches, master. ### How did you install ROOT? from source. ### Which operating system are you using? Alma Linux 8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:9628,deployability,instal,install,9628," in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. /bin/sh: line 1: 1509407 Segmentation fault (core dumped) edmWriteConfigs -p /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-06-04-2300/tmp/el8_amd64_gcc11/src/SimG4Core/SaveSimTrackAction/src/SimG4CoreSaveSimTrackAction/libSimG4CoreSaveSimTrackAction.so. gmake: *** [lib/el8_amd64_gcc11/SimG4CoreSaveSimTrackAction.edmplugin] Error 1. ```. ### What is the expected behaviour? Not to crash. ### How to reproduce? ```. $ /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/8539/32991/install.sh. $ /cvmfs/cms.cern.ch/common/cmssw-el8 # skip if on EL8 machine. $ cd CMSSW_13_2_ROOT6_X_2023-06-04-2300/src. $ cmsenv. $ scram b -j8 SimDataFormats/CaloHit. ```. ### ROOT version. 6-28-patches, master. ### How did you install ROOT? from source. ### Which operating system are you using? Alma Linux 8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:36,energy efficiency,fault,fault,36,"[6-28-patches][master] Segmentation fault in ROOT::TGenericClassInfo::~TGenericClassInfo; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Hi,. We are trying to test latest ROOT 6.28 patches (commit 55513fb518) and ROOT master (commit d4d1df86b07886d56c4bd1372590d0a62c3987c0) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit a13590901c or ROOT maser commit f499987. . [a]. ```. @@@@ Running edmWriteConfigs for SimG4CoreSaveSimTrackAction. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:1360,energy efficiency,core,core,1360,"e in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit a13590901c or ROOT maser commit f499987. . [a]. ```. @@@@ Running edmWriteConfigs for SimG4CoreSaveSimTrackAction. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:395. #6 0x0000152ece6eb5c1 in sighandler (sig=11) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:1610,energy efficiency,core,core,1610,"mentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:395. #6 0x0000152ece6eb5c1 in sighandler (sig=11) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3586. #7 <signal handler called>. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:1896,energy efficiency,core,core,1896,"libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:395. #6 0x0000152ece6eb5c1 in sighandler (sig=11) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3586. #7 <signal handler called>. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:2148,energy efficiency,core,core,2148,"b5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:395. #6 0x0000152ece6eb5c1 in sighandler (sig=11) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3586. #7 <signal handler called>. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_am",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:2376,energy efficiency,core,core,2376,"xSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:395. #6 0x0000152ece6eb5c1 in sighandler (sig=11) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3586. #7 <signal handler called>. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:2682,energy efficiency,alloc,allocator,2682,"patchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:395. #6 0x0000152ece6eb5c1 in sighandler (sig=11) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3586. #7 <signal handler called>. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:2994,energy efficiency,alloc,allocator,2994," at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:395. #6 0x0000152ece6eb5c1 in sighandler (sig=11) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3586. #7 <signal handler called>. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, _",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:3324,energy efficiency,alloc,allocator,3324,"-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3586. #7 <signal handler called>. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard va",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:3475,energy efficiency,alloc,allocator,3475,"ib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:3799,energy efficiency,alloc,allocator,3799,"n-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:3950,energy efficiency,alloc,allocator,3950,"ce697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:4009,energy efficiency,optim,optimized,4009,"ssAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:4260,energy efficiency,alloc,allocator,4260,"00152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:4405,energy efficiency,alloc,allocator,4405,"ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. The lines below might hint at the caus",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:4464,energy efficiency,optim,optimized,4464," std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:4811,energy efficiency,alloc,allocator,4811,"ClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:4870,energy efficiency,optim,optimized,4870,"iable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that mi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:5034,energy efficiency,core,core,5034,"sbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:6209,energy efficiency,alloc,allocator,6209,"152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:6521,energy efficiency,alloc,allocator,6521,"enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, _",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:6851,energy efficiency,alloc,allocator,6851,"thing else. that might help us fixing this issue. ===========================================================. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard va",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:7002,energy efficiency,alloc,allocator,7002,"ib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:7326,energy efficiency,alloc,allocator,7326,"n-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:7477,energy efficiency,alloc,allocator,7477,"ce697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:7536,energy efficiency,optim,optimized,7536,"ssAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:7787,energy efficiency,alloc,allocator,7787,"00152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:7932,energy efficiency,alloc,allocator,7932,"ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. /bin/sh: line 1: 1509407 Segmentation ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:7991,energy efficiency,optim,optimized,7991," std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. /bin/sh: line 1: 1509407 Segmentation fault (core dumped) edmWriteConfigs -p /data/cmsbld/jenkins",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:8338,energy efficiency,alloc,allocator,8338,"ClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. /bin/sh: line 1: 1509407 Segmentation fault (core dumped) edmWriteConfigs -p /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-06-04-2300/tmp/el8_amd64_gcc11/src/SimG4Core/SaveSimTrackAction/src/SimG4CoreSaveSimTrackAction/libSimG4CoreSaveSimTrackAction.so. gmake: *** [lib/el8_amd64_gcc11/SimG4CoreSaveSimTrackAction.edmplugin] Error 1. ```. ### What is the expected behaviour? Not to crash. ### How to reproduce? ```. $",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:8397,energy efficiency,optim,optimized,8397,"iable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. /bin/sh: line 1: 1509407 Segmentation fault (core dumped) edmWriteConfigs -p /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-06-04-2300/tmp/el8_amd64_gcc11/src/SimG4Core/SaveSimTrackAction/src/SimG4CoreSaveSimTrackAction/libSimG4CoreSaveSimTrackAction.so. gmake: *** [lib/el8_amd64_gcc11/SimG4CoreSaveSimTrackAction.edmplugin] Error 1. ```. ### What is the expected behaviour? Not to crash. ### How to reproduce? ```. $ /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/8539/32991/inst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:8561,energy efficiency,core,core,8561,"sbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. /bin/sh: line 1: 1509407 Segmentation fault (core dumped) edmWriteConfigs -p /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-06-04-2300/tmp/el8_amd64_gcc11/src/SimG4Core/SaveSimTrackAction/src/SimG4CoreSaveSimTrackAction/libSimG4CoreSaveSimTrackAction.so. gmake: *** [lib/el8_amd64_gcc11/SimG4CoreSaveSimTrackAction.edmplugin] Error 1. ```. ### What is the expected behaviour? Not to crash. ### How to reproduce? ```. $ /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/8539/32991/install.sh. $ /cvmfs/cms.cern.ch/common/cmssw-el8 # skip if on EL8 machine. $ cd CMSSW_13_2_ROOT6_X_2023-06-04-2300/src. $ cmsenv. $ scram b -j8 SimDataFormats/CaloH",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:8937,energy efficiency,fault,fault,8937," in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. /bin/sh: line 1: 1509407 Segmentation fault (core dumped) edmWriteConfigs -p /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-06-04-2300/tmp/el8_amd64_gcc11/src/SimG4Core/SaveSimTrackAction/src/SimG4CoreSaveSimTrackAction/libSimG4CoreSaveSimTrackAction.so. gmake: *** [lib/el8_amd64_gcc11/SimG4CoreSaveSimTrackAction.edmplugin] Error 1. ```. ### What is the expected behaviour? Not to crash. ### How to reproduce? ```. $ /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/8539/32991/install.sh. $ /cvmfs/cms.cern.ch/common/cmssw-el8 # skip if on EL8 machine. $ cd CMSSW_13_2_ROOT6_X_2023-06-04-2300/src. $ cmsenv. $ scram b -j8 SimDataFormats/CaloHit. ```. ### ROOT version. 6-28-patches, master. ### How did you install ROOT? from source. ### Which operating system are you using? Alma Linux 8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:8944,energy efficiency,core,core,8944," in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. /bin/sh: line 1: 1509407 Segmentation fault (core dumped) edmWriteConfigs -p /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-06-04-2300/tmp/el8_amd64_gcc11/src/SimG4Core/SaveSimTrackAction/src/SimG4CoreSaveSimTrackAction/libSimG4CoreSaveSimTrackAction.so. gmake: *** [lib/el8_amd64_gcc11/SimG4CoreSaveSimTrackAction.edmplugin] Error 1. ```. ### What is the expected behaviour? Not to crash. ### How to reproduce? ```. $ /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/8539/32991/install.sh. $ /cvmfs/cms.cern.ch/common/cmssw-el8 # skip if on EL8 machine. $ cd CMSSW_13_2_ROOT6_X_2023-06-04-2300/src. $ cmsenv. $ scram b -j8 SimDataFormats/CaloHit. ```. ### ROOT version. 6-28-patches, master. ### How did you install ROOT? from source. ### Which operating system are you using? Alma Linux 8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:5731,integrability,sub,submit,5731,"2ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:9581,integrability,version,version,9581," in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. /bin/sh: line 1: 1509407 Segmentation fault (core dumped) edmWriteConfigs -p /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-06-04-2300/tmp/el8_amd64_gcc11/src/SimG4Core/SaveSimTrackAction/src/SimG4CoreSaveSimTrackAction/libSimG4CoreSaveSimTrackAction.so. gmake: *** [lib/el8_amd64_gcc11/SimG4CoreSaveSimTrackAction.edmplugin] Error 1. ```. ### What is the expected behaviour? Not to crash. ### How to reproduce? ```. $ /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/8539/32991/install.sh. $ /cvmfs/cms.cern.ch/common/cmssw-el8 # skip if on EL8 machine. $ cd CMSSW_13_2_ROOT6_X_2023-06-04-2300/src. $ cmsenv. $ scram b -j8 SimDataFormats/CaloHit. ```. ### ROOT version. 6-28-patches, master. ### How did you install ROOT? from source. ### Which operating system are you using? Alma Linux 8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:2604,modifiability,variab,variable,2604,"5/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:395. #6 0x0000152ece6eb5c1 in sighandler (sig=11) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3586. #7 <signal handler called>. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:3397,modifiability,variab,variable,3397,".cxx:3586. #7 <signal handler called>. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:3872,modifiability,variab,variable,3872,"71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:4327,modifiability,variab,variable,4327,"or<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ====================",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:5571,modifiability,variab,variable,5571,"2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:6131,modifiability,variab,variable,6131,"/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:6924,modifiability,variab,variable,6924,"=====================================. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:7399,modifiability,variab,variable,7399,"71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:7854,modifiability,variab,variable,7854,"or<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ====================",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:9581,modifiability,version,version,9581," in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. /bin/sh: line 1: 1509407 Segmentation fault (core dumped) edmWriteConfigs -p /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-06-04-2300/tmp/el8_amd64_gcc11/src/SimG4Core/SaveSimTrackAction/src/SimG4CoreSaveSimTrackAction/libSimG4CoreSaveSimTrackAction.so. gmake: *** [lib/el8_amd64_gcc11/SimG4CoreSaveSimTrackAction.edmplugin] Error 1. ```. ### What is the expected behaviour? Not to crash. ### How to reproduce? ```. $ /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/8539/32991/install.sh. $ /cvmfs/cms.cern.ch/common/cmssw-el8 # skip if on EL8 machine. $ cd CMSSW_13_2_ROOT6_X_2023-06-04-2300/src. $ cmsenv. $ scram b -j8 SimDataFormats/CaloHit. ```. ### ROOT version. 6-28-patches, master. ### How did you install ROOT? from source. ### Which operating system are you using? Alma Linux 8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:36,performance,fault,fault,36,"[6-28-patches][master] Segmentation fault in ROOT::TGenericClassInfo::~TGenericClassInfo; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Hi,. We are trying to test latest ROOT 6.28 patches (commit 55513fb518) and ROOT master (commit d4d1df86b07886d56c4bd1372590d0a62c3987c0) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit a13590901c or ROOT maser commit f499987. . [a]. ```. @@@@ Running edmWriteConfigs for SimG4CoreSaveSimTrackAction. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:401,performance,error,errors,401,"[6-28-patches][master] Segmentation fault in ROOT::TGenericClassInfo::~TGenericClassInfo; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Hi,. We are trying to test latest ROOT 6.28 patches (commit 55513fb518) and ROOT master (commit d4d1df86b07886d56c4bd1372590d0a62c3987c0) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit a13590901c or ROOT maser commit f499987. . [a]. ```. @@@@ Running edmWriteConfigs for SimG4CoreSaveSimTrackAction. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:443,performance,error,errors,443,"[6-28-patches][master] Segmentation fault in ROOT::TGenericClassInfo::~TGenericClassInfo; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Hi,. We are trying to test latest ROOT 6.28 patches (commit 55513fb518) and ROOT master (commit d4d1df86b07886d56c4bd1372590d0a62c3987c0) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit a13590901c or ROOT maser commit f499987. . [a]. ```. @@@@ Running edmWriteConfigs for SimG4CoreSaveSimTrackAction. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:4009,performance,optimiz,optimized,4009,"ssAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:4464,performance,optimiz,optimized,4464," std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:4870,performance,optimiz,optimized,4870,"iable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that mi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:7536,performance,optimiz,optimized,7536,"ssAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:7991,performance,optimiz,optimized,7991," std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. /bin/sh: line 1: 1509407 Segmentation fault (core dumped) edmWriteConfigs -p /data/cmsbld/jenkins",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:8397,performance,optimiz,optimized,8397,"iable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. /bin/sh: line 1: 1509407 Segmentation fault (core dumped) edmWriteConfigs -p /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-06-04-2300/tmp/el8_amd64_gcc11/src/SimG4Core/SaveSimTrackAction/src/SimG4CoreSaveSimTrackAction/libSimG4CoreSaveSimTrackAction.so. gmake: *** [lib/el8_amd64_gcc11/SimG4CoreSaveSimTrackAction.edmplugin] Error 1. ```. ### What is the expected behaviour? Not to crash. ### How to reproduce? ```. $ /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/8539/32991/inst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:8937,performance,fault,fault,8937," in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. /bin/sh: line 1: 1509407 Segmentation fault (core dumped) edmWriteConfigs -p /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-06-04-2300/tmp/el8_amd64_gcc11/src/SimG4Core/SaveSimTrackAction/src/SimG4CoreSaveSimTrackAction/libSimG4CoreSaveSimTrackAction.so. gmake: *** [lib/el8_amd64_gcc11/SimG4CoreSaveSimTrackAction.edmplugin] Error 1. ```. ### What is the expected behaviour? Not to crash. ### How to reproduce? ```. $ /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/8539/32991/install.sh. $ /cvmfs/cms.cern.ch/common/cmssw-el8 # skip if on EL8 machine. $ cd CMSSW_13_2_ROOT6_X_2023-06-04-2300/src. $ cmsenv. $ scram b -j8 SimDataFormats/CaloHit. ```. ### ROOT version. 6-28-patches, master. ### How did you install ROOT? from source. ### Which operating system are you using? Alma Linux 8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:9251,performance,Error,Error,9251," in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. /bin/sh: line 1: 1509407 Segmentation fault (core dumped) edmWriteConfigs -p /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-06-04-2300/tmp/el8_amd64_gcc11/src/SimG4Core/SaveSimTrackAction/src/SimG4CoreSaveSimTrackAction/libSimG4CoreSaveSimTrackAction.so. gmake: *** [lib/el8_amd64_gcc11/SimG4CoreSaveSimTrackAction.edmplugin] Error 1. ```. ### What is the expected behaviour? Not to crash. ### How to reproduce? ```. $ /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/8539/32991/install.sh. $ /cvmfs/cms.cern.ch/common/cmssw-el8 # skip if on EL8 machine. $ cd CMSSW_13_2_ROOT6_X_2023-06-04-2300/src. $ cmsenv. $ scram b -j8 SimDataFormats/CaloHit. ```. ### ROOT version. 6-28-patches, master. ### How did you install ROOT? from source. ### Which operating system are you using? Alma Linux 8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:36,reliability,fault,fault,36,"[6-28-patches][master] Segmentation fault in ROOT::TGenericClassInfo::~TGenericClassInfo; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Hi,. We are trying to test latest ROOT 6.28 patches (commit 55513fb518) and ROOT master (commit d4d1df86b07886d56c4bd1372590d0a62c3987c0) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit a13590901c or ROOT maser commit f499987. . [a]. ```. @@@@ Running edmWriteConfigs for SimG4CoreSaveSimTrackAction. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:8937,reliability,fault,fault,8937," in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. /bin/sh: line 1: 1509407 Segmentation fault (core dumped) edmWriteConfigs -p /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-06-04-2300/tmp/el8_amd64_gcc11/src/SimG4Core/SaveSimTrackAction/src/SimG4CoreSaveSimTrackAction/libSimG4CoreSaveSimTrackAction.so. gmake: *** [lib/el8_amd64_gcc11/SimG4CoreSaveSimTrackAction.edmplugin] Error 1. ```. ### What is the expected behaviour? Not to crash. ### How to reproduce? ```. $ /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/8539/32991/install.sh. $ /cvmfs/cms.cern.ch/common/cmssw-el8 # skip if on EL8 machine. $ cd CMSSW_13_2_ROOT6_X_2023-06-04-2300/src. $ cmsenv. $ scram b -j8 SimDataFormats/CaloHit. ```. ### ROOT version. 6-28-patches, master. ### How did you install ROOT? from source. ### Which operating system are you using? Alma Linux 8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:6,safety,patch,patches,6,"[6-28-patches][master] Segmentation fault in ROOT::TGenericClassInfo::~TGenericClassInfo; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Hi,. We are trying to test latest ROOT 6.28 patches (commit 55513fb518) and ROOT master (commit d4d1df86b07886d56c4bd1372590d0a62c3987c0) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit a13590901c or ROOT maser commit f499987. . [a]. ```. @@@@ Running edmWriteConfigs for SimG4CoreSaveSimTrackAction. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:36,safety,fault,fault,36,"[6-28-patches][master] Segmentation fault in ROOT::TGenericClassInfo::~TGenericClassInfo; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Hi,. We are trying to test latest ROOT 6.28 patches (commit 55513fb518) and ROOT master (commit d4d1df86b07886d56c4bd1372590d0a62c3987c0) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit a13590901c or ROOT maser commit f499987. . [a]. ```. @@@@ Running edmWriteConfigs for SimG4CoreSaveSimTrackAction. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:192,safety,test,test,192,"[6-28-patches][master] Segmentation fault in ROOT::TGenericClassInfo::~TGenericClassInfo; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Hi,. We are trying to test latest ROOT 6.28 patches (commit 55513fb518) and ROOT master (commit d4d1df86b07886d56c4bd1372590d0a62c3987c0) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit a13590901c or ROOT maser commit f499987. . [a]. ```. @@@@ Running edmWriteConfigs for SimG4CoreSaveSimTrackAction. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:214,safety,patch,patches,214,"[6-28-patches][master] Segmentation fault in ROOT::TGenericClassInfo::~TGenericClassInfo; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Hi,. We are trying to test latest ROOT 6.28 patches (commit 55513fb518) and ROOT master (commit d4d1df86b07886d56c4bd1372590d0a62c3987c0) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit a13590901c or ROOT maser commit f499987. . [a]. ```. @@@@ Running edmWriteConfigs for SimG4CoreSaveSimTrackAction. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:401,safety,error,errors,401,"[6-28-patches][master] Segmentation fault in ROOT::TGenericClassInfo::~TGenericClassInfo; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Hi,. We are trying to test latest ROOT 6.28 patches (commit 55513fb518) and ROOT master (commit d4d1df86b07886d56c4bd1372590d0a62c3987c0) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit a13590901c or ROOT maser commit f499987. . [a]. ```. @@@@ Running edmWriteConfigs for SimG4CoreSaveSimTrackAction. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:443,safety,error,errors,443,"[6-28-patches][master] Segmentation fault in ROOT::TGenericClassInfo::~TGenericClassInfo; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Hi,. We are trying to test latest ROOT 6.28 patches (commit 55513fb518) and ROOT master (commit d4d1df86b07886d56c4bd1372590d0a62c3987c0) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit a13590901c or ROOT maser commit f499987. . [a]. ```. @@@@ Running edmWriteConfigs for SimG4CoreSaveSimTrackAction. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:465,safety,patch,patches,465,"[6-28-patches][master] Segmentation fault in ROOT::TGenericClassInfo::~TGenericClassInfo; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Hi,. We are trying to test latest ROOT 6.28 patches (commit 55513fb518) and ROOT master (commit d4d1df86b07886d56c4bd1372590d0a62c3987c0) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit a13590901c or ROOT maser commit f499987. . [a]. ```. @@@@ Running edmWriteConfigs for SimG4CoreSaveSimTrackAction. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:1091,safety,test,tests,1091,"Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Hi,. We are trying to test latest ROOT 6.28 patches (commit 55513fb518) and ROOT master (commit d4d1df86b07886d56c4bd1372590d0a62c3987c0) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit a13590901c or ROOT maser commit f499987. . [a]. ```. @@@@ Running edmWriteConfigs for SimG4CoreSaveSimTrackAction. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:1097,safety,test,testBuildDir,1097,"licate issues. - [X] Checked for duplicates. ### Describe the bug. Hi,. We are trying to test latest ROOT 6.28 patches (commit 55513fb518) and ROOT master (commit d4d1df86b07886d56c4bd1372590d0a62c3987c0) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit a13590901c or ROOT maser commit f499987. . [a]. ```. @@@@ Running edmWriteConfigs for SimG4CoreSaveSimTrackAction. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:1256,safety,test,tests,1256,"commit d4d1df86b07886d56c4bd1372590d0a62c3987c0) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit a13590901c or ROOT maser commit f499987. . [a]. ```. @@@@ Running edmWriteConfigs for SimG4CoreSaveSimTrackAction. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:395. #6 0x0000152ece6eb5c1 in sighandler (sig=11) at /data/cmsbld/jenkins/workspa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:1262,safety,test,testBuildDir,1262,"d1df86b07886d56c4bd1372590d0a62c3987c0) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit a13590901c or ROOT maser commit f499987. . [a]. ```. @@@@ Running edmWriteConfigs for SimG4CoreSaveSimTrackAction. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:395. #6 0x0000152ece6eb5c1 in sighandler (sig=11) at /data/cmsbld/jenkins/workspace/ib-run",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:1506,safety,test,tests,1506,"it f499987. . [a]. ```. @@@@ Running edmWriteConfigs for SimG4CoreSaveSimTrackAction. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:395. #6 0x0000152ece6eb5c1 in sighandler (sig=11) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3586. #7 <signal handler called>. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:1512,safety,test,testBuildDir,1512,"7. . [a]. ```. @@@@ Running edmWriteConfigs for SimG4CoreSaveSimTrackAction. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:395. #6 0x0000152ece6eb5c1 in sighandler (sig=11) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3586. #7 <signal handler called>. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:1792,safety,test,tests,1792,"=====================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:395. #6 0x0000152ece6eb5c1 in sighandler (sig=11) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3586. #7 <signal handler called>. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/worksp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:1798,safety,test,testBuildDir,1798,"============================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:395. #6 0x0000152ece6eb5c1 in sighandler (sig=11) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3586. #7 <signal handler called>. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-ru",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:2044,safety,test,tests,2044,"0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:395. #6 0x0000152ece6eb5c1 in sighandler (sig=11) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3586. #7 <signal handler called>. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., _",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:2050,safety,test,testBuildDir,2050,"cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:395. #6 0x0000152ece6eb5c1 in sighandler (sig=11) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3586. #7 <signal handler called>. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, _",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:2272,safety,test,tests,2272,"BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:395. #6 0x0000152ece6eb5c1 in sighandler (sig=11) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3586. #7 <signal handler called>. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece69",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:2278,safety,test,testBuildDir,2278,"_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:395. #6 0x0000152ece6eb5c1 in sighandler (sig=11) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3586. #7 <signal handler called>. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:2809,safety,test,tests,2809,"UILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:395. #6 0x0000152ece6eb5c1 in sighandler (sig=11) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3586. #7 <signal handler called>. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:2815,safety,test,testBuildDir,2815,"amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:395. #6 0x0000152ece6eb5c1 in sighandler (sig=11) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3586. #7 <signal handler called>. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClass",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:3125,safety,test,tests,3125,"036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:395. #6 0x0000152ece6eb5c1 in sighandler (sig=11) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3586. #7 <signal handler called>. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:3131,safety,test,testBuildDir,3131,"ot-6.28.05/core/unix/src/TUnixSystem.cxx:395. #6 0x0000152ece6eb5c1 in sighandler (sig=11) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3586. #7 <signal handler called>. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:3602,safety,test,tests,3602,"ariable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:3608,safety,test,testBuildDir,3608,"or ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:4069,safety,test,tests,4069,"9551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:22",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:4075,safety,test,testBuildDir,4075,"at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:4524,safety,test,tests,4524,"0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:4530,safety,test,testBuildDir,4530,"18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled an",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:4930,safety,test,tests,4930,"dedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:4936,safety,test,testBuildDir,4936,"d, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ====================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:6336,safety,test,tests,6336,"===============================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:6342,safety,test,testBuildDir,6342,"======================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClass",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:6652,safety,test,tests,6652,"ern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:6658,safety,test,testBuildDir,6658,". Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:7129,safety,test,tests,7129,"ariable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:7135,safety,test,testBuildDir,7135,"or ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:7596,safety,test,tests,7596,"9551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:22",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:7602,safety,test,testBuildDir,7602,"at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:8051,safety,test,tests,8051,"0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. /bin/sh: line 1: 1509407 Segmentation fault (core dumped) edmWriteConfigs -p /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-06-04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:8057,safety,test,testBuildDir,8057,"18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. /bin/sh: line 1: 1509407 Segmentation fault (core dumped) edmWriteConfigs -p /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-06-04-2300/tmp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:8457,safety,test,tests,8457,"dedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. /bin/sh: line 1: 1509407 Segmentation fault (core dumped) edmWriteConfigs -p /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-06-04-2300/tmp/el8_amd64_gcc11/src/SimG4Core/SaveSimTrackAction/src/SimG4CoreSaveSimTrackAction/libSimG4CoreSaveSimTrackAction.so. gmake: *** [lib/el8_amd64_gcc11/SimG4CoreSaveSimTrackAction.edmplugin] Error 1. ```. ### What is the expected behaviour? Not to crash. ### How to reproduce? ```. $ /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/8539/32991/install.sh. $ /cvmfs/cms.cern.ch/common/cmssw-el8 # skip if on",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:8463,safety,test,testBuildDir,8463,"d, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. /bin/sh: line 1: 1509407 Segmentation fault (core dumped) edmWriteConfigs -p /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-06-04-2300/tmp/el8_amd64_gcc11/src/SimG4Core/SaveSimTrackAction/src/SimG4CoreSaveSimTrackAction/libSimG4CoreSaveSimTrackAction.so. gmake: *** [lib/el8_amd64_gcc11/SimG4CoreSaveSimTrackAction.edmplugin] Error 1. ```. ### What is the expected behaviour? Not to crash. ### How to reproduce? ```. $ /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/8539/32991/install.sh. $ /cvmfs/cms.cern.ch/common/cmssw-el8 # skip if on EL8 mach",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:8937,safety,fault,fault,8937," in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. /bin/sh: line 1: 1509407 Segmentation fault (core dumped) edmWriteConfigs -p /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-06-04-2300/tmp/el8_amd64_gcc11/src/SimG4Core/SaveSimTrackAction/src/SimG4CoreSaveSimTrackAction/libSimG4CoreSaveSimTrackAction.so. gmake: *** [lib/el8_amd64_gcc11/SimG4CoreSaveSimTrackAction.edmplugin] Error 1. ```. ### What is the expected behaviour? Not to crash. ### How to reproduce? ```. $ /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/8539/32991/install.sh. $ /cvmfs/cms.cern.ch/common/cmssw-el8 # skip if on EL8 machine. $ cd CMSSW_13_2_ROOT6_X_2023-06-04-2300/src. $ cmsenv. $ scram b -j8 SimDataFormats/CaloHit. ```. ### ROOT version. 6-28-patches, master. ### How did you install ROOT? from source. ### Which operating system are you using? Alma Linux 8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:9017,safety,test,tests,9017," in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. /bin/sh: line 1: 1509407 Segmentation fault (core dumped) edmWriteConfigs -p /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-06-04-2300/tmp/el8_amd64_gcc11/src/SimG4Core/SaveSimTrackAction/src/SimG4CoreSaveSimTrackAction/libSimG4CoreSaveSimTrackAction.so. gmake: *** [lib/el8_amd64_gcc11/SimG4CoreSaveSimTrackAction.edmplugin] Error 1. ```. ### What is the expected behaviour? Not to crash. ### How to reproduce? ```. $ /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/8539/32991/install.sh. $ /cvmfs/cms.cern.ch/common/cmssw-el8 # skip if on EL8 machine. $ cd CMSSW_13_2_ROOT6_X_2023-06-04-2300/src. $ cmsenv. $ scram b -j8 SimDataFormats/CaloHit. ```. ### ROOT version. 6-28-patches, master. ### How did you install ROOT? from source. ### Which operating system are you using? Alma Linux 8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:9251,safety,Error,Error,9251," in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. /bin/sh: line 1: 1509407 Segmentation fault (core dumped) edmWriteConfigs -p /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-06-04-2300/tmp/el8_amd64_gcc11/src/SimG4Core/SaveSimTrackAction/src/SimG4CoreSaveSimTrackAction/libSimG4CoreSaveSimTrackAction.so. gmake: *** [lib/el8_amd64_gcc11/SimG4CoreSaveSimTrackAction.edmplugin] Error 1. ```. ### What is the expected behaviour? Not to crash. ### How to reproduce? ```. $ /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/8539/32991/install.sh. $ /cvmfs/cms.cern.ch/common/cmssw-el8 # skip if on EL8 machine. $ cd CMSSW_13_2_ROOT6_X_2023-06-04-2300/src. $ cmsenv. $ scram b -j8 SimDataFormats/CaloHit. ```. ### ROOT version. 6-28-patches, master. ### How did you install ROOT? from source. ### Which operating system are you using? Alma Linux 8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:9595,safety,patch,patches,9595," in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. /bin/sh: line 1: 1509407 Segmentation fault (core dumped) edmWriteConfigs -p /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-06-04-2300/tmp/el8_amd64_gcc11/src/SimG4Core/SaveSimTrackAction/src/SimG4CoreSaveSimTrackAction/libSimG4CoreSaveSimTrackAction.so. gmake: *** [lib/el8_amd64_gcc11/SimG4CoreSaveSimTrackAction.edmplugin] Error 1. ```. ### What is the expected behaviour? Not to crash. ### How to reproduce? ```. $ /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/8539/32991/install.sh. $ /cvmfs/cms.cern.ch/common/cmssw-el8 # skip if on EL8 machine. $ cd CMSSW_13_2_ROOT6_X_2023-06-04-2300/src. $ cmsenv. $ scram b -j8 SimDataFormats/CaloHit. ```. ### ROOT version. 6-28-patches, master. ### How did you install ROOT? from source. ### Which operating system are you using? Alma Linux 8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:6,security,patch,patches,6,"[6-28-patches][master] Segmentation fault in ROOT::TGenericClassInfo::~TGenericClassInfo; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Hi,. We are trying to test latest ROOT 6.28 patches (commit 55513fb518) and ROOT master (commit d4d1df86b07886d56c4bd1372590d0a62c3987c0) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit a13590901c or ROOT maser commit f499987. . [a]. ```. @@@@ Running edmWriteConfigs for SimG4CoreSaveSimTrackAction. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:214,security,patch,patches,214,"[6-28-patches][master] Segmentation fault in ROOT::TGenericClassInfo::~TGenericClassInfo; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Hi,. We are trying to test latest ROOT 6.28 patches (commit 55513fb518) and ROOT master (commit d4d1df86b07886d56c4bd1372590d0a62c3987c0) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit a13590901c or ROOT maser commit f499987. . [a]. ```. @@@@ Running edmWriteConfigs for SimG4CoreSaveSimTrackAction. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:465,security,patch,patches,465,"[6-28-patches][master] Segmentation fault in ROOT::TGenericClassInfo::~TGenericClassInfo; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Hi,. We are trying to test latest ROOT 6.28 patches (commit 55513fb518) and ROOT master (commit d4d1df86b07886d56c4bd1372590d0a62c3987c0) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit a13590901c or ROOT maser commit f499987. . [a]. ```. @@@@ Running edmWriteConfigs for SimG4CoreSaveSimTrackAction. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:2416,security,sign,signal,2416,"n TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:395. #6 0x0000152ece6eb5c1 in sighandler (sig=11) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3586. #7 <signal handler called>. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::Gen",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:9595,security,patch,patches,9595," in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. /bin/sh: line 1: 1509407 Segmentation fault (core dumped) edmWriteConfigs -p /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-06-04-2300/tmp/el8_amd64_gcc11/src/SimG4Core/SaveSimTrackAction/src/SimG4CoreSaveSimTrackAction/libSimG4CoreSaveSimTrackAction.so. gmake: *** [lib/el8_amd64_gcc11/SimG4CoreSaveSimTrackAction.edmplugin] Error 1. ```. ### What is the expected behaviour? Not to crash. ### How to reproduce? ```. $ /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/8539/32991/install.sh. $ /cvmfs/cms.cern.ch/common/cmssw-el8 # skip if on EL8 machine. $ cd CMSSW_13_2_ROOT6_X_2023-06-04-2300/src. $ cmsenv. $ scram b -j8 SimDataFormats/CaloHit. ```. ### ROOT version. 6-28-patches, master. ### How did you install ROOT? from source. ### Which operating system are you using? Alma Linux 8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:192,testability,test,test,192,"[6-28-patches][master] Segmentation fault in ROOT::TGenericClassInfo::~TGenericClassInfo; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Hi,. We are trying to test latest ROOT 6.28 patches (commit 55513fb518) and ROOT master (commit d4d1df86b07886d56c4bd1372590d0a62c3987c0) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit a13590901c or ROOT maser commit f499987. . [a]. ```. @@@@ Running edmWriteConfigs for SimG4CoreSaveSimTrackAction. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:766,testability,trace,trace,766,"[6-28-patches][master] Segmentation fault in ROOT::TGenericClassInfo::~TGenericClassInfo; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Hi,. We are trying to test latest ROOT 6.28 patches (commit 55513fb518) and ROOT master (commit d4d1df86b07886d56c4bd1372590d0a62c3987c0) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit a13590901c or ROOT maser commit f499987. . [a]. ```. @@@@ Running edmWriteConfigs for SimG4CoreSaveSimTrackAction. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:1091,testability,test,tests,1091,"Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Hi,. We are trying to test latest ROOT 6.28 patches (commit 55513fb518) and ROOT master (commit d4d1df86b07886d56c4bd1372590d0a62c3987c0) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit a13590901c or ROOT maser commit f499987. . [a]. ```. @@@@ Running edmWriteConfigs for SimG4CoreSaveSimTrackAction. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:1097,testability,test,testBuildDir,1097,"licate issues. - [X] Checked for duplicates. ### Describe the bug. Hi,. We are trying to test latest ROOT 6.28 patches (commit 55513fb518) and ROOT master (commit d4d1df86b07886d56c4bd1372590d0a62c3987c0) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit a13590901c or ROOT maser commit f499987. . [a]. ```. @@@@ Running edmWriteConfigs for SimG4CoreSaveSimTrackAction. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:1256,testability,test,tests,1256,"commit d4d1df86b07886d56c4bd1372590d0a62c3987c0) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit a13590901c or ROOT maser commit f499987. . [a]. ```. @@@@ Running edmWriteConfigs for SimG4CoreSaveSimTrackAction. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:395. #6 0x0000152ece6eb5c1 in sighandler (sig=11) at /data/cmsbld/jenkins/workspa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:1262,testability,test,testBuildDir,1262,"d1df86b07886d56c4bd1372590d0a62c3987c0) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit a13590901c or ROOT maser commit f499987. . [a]. ```. @@@@ Running edmWriteConfigs for SimG4CoreSaveSimTrackAction. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:395. #6 0x0000152ece6eb5c1 in sighandler (sig=11) at /data/cmsbld/jenkins/workspace/ib-run",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:1506,testability,test,tests,1506,"it f499987. . [a]. ```. @@@@ Running edmWriteConfigs for SimG4CoreSaveSimTrackAction. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:395. #6 0x0000152ece6eb5c1 in sighandler (sig=11) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3586. #7 <signal handler called>. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:1512,testability,test,testBuildDir,1512,"7. . [a]. ```. @@@@ Running edmWriteConfigs for SimG4CoreSaveSimTrackAction. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:395. #6 0x0000152ece6eb5c1 in sighandler (sig=11) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3586. #7 <signal handler called>. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:1792,testability,test,tests,1792,"=====================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:395. #6 0x0000152ece6eb5c1 in sighandler (sig=11) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3586. #7 <signal handler called>. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/worksp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:1798,testability,test,testBuildDir,1798,"============================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:395. #6 0x0000152ece6eb5c1 in sighandler (sig=11) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3586. #7 <signal handler called>. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-ru",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:2044,testability,test,tests,2044,"0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:395. #6 0x0000152ece6eb5c1 in sighandler (sig=11) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3586. #7 <signal handler called>. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., _",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:2050,testability,test,testBuildDir,2050,"cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:395. #6 0x0000152ece6eb5c1 in sighandler (sig=11) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3586. #7 <signal handler called>. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, _",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:2272,testability,test,tests,2272,"BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:395. #6 0x0000152ece6eb5c1 in sighandler (sig=11) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3586. #7 <signal handler called>. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece69",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:2278,testability,test,testBuildDir,2278,"_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:395. #6 0x0000152ece6eb5c1 in sighandler (sig=11) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3586. #7 <signal handler called>. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:2809,testability,test,tests,2809,"UILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:395. #6 0x0000152ece6eb5c1 in sighandler (sig=11) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3586. #7 <signal handler called>. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:2815,testability,test,testBuildDir,2815,"amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:395. #6 0x0000152ece6eb5c1 in sighandler (sig=11) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3586. #7 <signal handler called>. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClass",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:3125,testability,test,tests,3125,"036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:395. #6 0x0000152ece6eb5c1 in sighandler (sig=11) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3586. #7 <signal handler called>. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:3131,testability,test,testBuildDir,3131,"ot-6.28.05/core/unix/src/TUnixSystem.cxx:395. #6 0x0000152ece6eb5c1 in sighandler (sig=11) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3586. #7 <signal handler called>. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:3602,testability,test,tests,3602,"ariable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:3608,testability,test,testBuildDir,3608,"or ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:4069,testability,test,tests,4069,"9551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:22",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:4075,testability,test,testBuildDir,4075,"at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:4524,testability,test,tests,4524,"0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:4530,testability,test,testBuildDir,4530,"18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled an",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:4930,testability,test,tests,4930,"dedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:4936,testability,test,testBuildDir,4936,"d, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ====================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:5474,testability,trace,trace,5474,">) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:5803,testability,trace,trace,5803,"std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:6336,testability,test,tests,6336,"===============================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:6342,testability,test,testBuildDir,6342,"======================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClass",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:6652,testability,test,tests,6652,"ern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:6658,testability,test,testBuildDir,6658,". Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:7129,testability,test,tests,7129,"ariable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:7135,testability,test,testBuildDir,7135,"or ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:7596,testability,test,tests,7596,"9551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:22",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:7602,testability,test,testBuildDir,7602,"at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:8051,testability,test,tests,8051,"0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. /bin/sh: line 1: 1509407 Segmentation fault (core dumped) edmWriteConfigs -p /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-06-04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:8057,testability,test,testBuildDir,8057,"18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354. #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. /bin/sh: line 1: 1509407 Segmentation fault (core dumped) edmWriteConfigs -p /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-06-04-2300/tmp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:8457,testability,test,tests,8457,"dedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. /bin/sh: line 1: 1509407 Segmentation fault (core dumped) edmWriteConfigs -p /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-06-04-2300/tmp/el8_amd64_gcc11/src/SimG4Core/SaveSimTrackAction/src/SimG4CoreSaveSimTrackAction/libSimG4CoreSaveSimTrackAction.so. gmake: *** [lib/el8_amd64_gcc11/SimG4CoreSaveSimTrackAction.edmplugin] Error 1. ```. ### What is the expected behaviour? Not to crash. ### How to reproduce? ```. $ /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/8539/32991/install.sh. $ /cvmfs/cms.cern.ch/common/cmssw-el8 # skip if on",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:8463,testability,test,testBuildDir,8463,"d, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335. #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. /bin/sh: line 1: 1509407 Segmentation fault (core dumped) edmWriteConfigs -p /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-06-04-2300/tmp/el8_amd64_gcc11/src/SimG4Core/SaveSimTrackAction/src/SimG4CoreSaveSimTrackAction/libSimG4CoreSaveSimTrackAction.so. gmake: *** [lib/el8_amd64_gcc11/SimG4CoreSaveSimTrackAction.edmplugin] Error 1. ```. ### What is the expected behaviour? Not to crash. ### How to reproduce? ```. $ /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/8539/32991/install.sh. $ /cvmfs/cms.cern.ch/common/cmssw-el8 # skip if on EL8 mach",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:9017,testability,test,tests,9017," in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. /bin/sh: line 1: 1509407 Segmentation fault (core dumped) edmWriteConfigs -p /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-06-04-2300/tmp/el8_amd64_gcc11/src/SimG4Core/SaveSimTrackAction/src/SimG4CoreSaveSimTrackAction/libSimG4CoreSaveSimTrackAction.so. gmake: *** [lib/el8_amd64_gcc11/SimG4CoreSaveSimTrackAction.edmplugin] Error 1. ```. ### What is the expected behaviour? Not to crash. ### How to reproduce? ```. $ /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/8539/32991/install.sh. $ /cvmfs/cms.cern.ch/common/cmssw-el8 # skip if on EL8 machine. $ cd CMSSW_13_2_ROOT6_X_2023-06-04-2300/src. $ cmsenv. $ scram b -j8 SimDataFormats/CaloHit. ```. ### ROOT version. 6-28-patches, master. ### How did you install ROOT? from source. ### Which operating system are you using? Alma Linux 8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:9726,testability,context,context,9726," in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. /bin/sh: line 1: 1509407 Segmentation fault (core dumped) edmWriteConfigs -p /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-06-04-2300/tmp/el8_amd64_gcc11/src/SimG4Core/SaveSimTrackAction/src/SimG4CoreSaveSimTrackAction/libSimG4CoreSaveSimTrackAction.so. gmake: *** [lib/el8_amd64_gcc11/SimG4CoreSaveSimTrackAction.edmplugin] Error 1. ```. ### What is the expected behaviour? Not to crash. ### How to reproduce? ```. $ /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/8539/32991/install.sh. $ /cvmfs/cms.cern.ch/common/cmssw-el8 # skip if on EL8 machine. $ cd CMSSW_13_2_ROOT6_X_2023-06-04-2300/src. $ cmsenv. $ scram b -j8 SimDataFormats/CaloHit. ```. ### ROOT version. 6-28-patches, master. ### How did you install ROOT? from source. ### Which operating system are you using? Alma Linux 8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:401,usability,error,errors,401,"[6-28-patches][master] Segmentation fault in ROOT::TGenericClassInfo::~TGenericClassInfo; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Hi,. We are trying to test latest ROOT 6.28 patches (commit 55513fb518) and ROOT master (commit d4d1df86b07886d56c4bd1372590d0a62c3987c0) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit a13590901c or ROOT maser commit f499987. . [a]. ```. @@@@ Running edmWriteConfigs for SimG4CoreSaveSimTrackAction. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:443,usability,error,errors,443,"[6-28-patches][master] Segmentation fault in ROOT::TGenericClassInfo::~TGenericClassInfo; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Hi,. We are trying to test latest ROOT 6.28 patches (commit 55513fb518) and ROOT master (commit d4d1df86b07886d56c4bd1372590d0a62c3987c0) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit a13590901c or ROOT maser commit f499987. . [a]. ```. @@@@ Running edmWriteConfigs for SimG4CoreSaveSimTrackAction. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6. #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6. #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104. #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395. #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615. #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:5394,usability,hint,hint,5394,"Id, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:5608,usability,help,help,5608,"1/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:5879,usability,help,help,5879,"ut>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6. #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145. #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492. #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:9251,usability,Error,Error,9251," in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. /bin/sh: line 1: 1509407 Segmentation fault (core dumped) edmWriteConfigs -p /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-06-04-2300/tmp/el8_amd64_gcc11/src/SimG4Core/SaveSimTrackAction/src/SimG4CoreSaveSimTrackAction/libSimG4CoreSaveSimTrackAction.so. gmake: *** [lib/el8_amd64_gcc11/SimG4CoreSaveSimTrackAction.edmplugin] Error 1. ```. ### What is the expected behaviour? Not to crash. ### How to reproduce? ```. $ /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/8539/32991/install.sh. $ /cvmfs/cms.cern.ch/common/cmssw-el8 # skip if on EL8 machine. $ cd CMSSW_13_2_ROOT6_X_2023-06-04-2300/src. $ cmsenv. $ scram b -j8 SimDataFormats/CaloHit. ```. ### ROOT version. 6-28-patches, master. ### How did you install ROOT? from source. ### Which operating system are you using? Alma Linux 8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12957:9290,usability,behavi,behaviour,9290," in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683. #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227. #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6. #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6. #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6. #18 0x0000000000406e5e in _start (). ===========================================================. /bin/sh: line 1: 1509407 Segmentation fault (core dumped) edmWriteConfigs -p /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-06-04-2300/tmp/el8_amd64_gcc11/src/SimG4Core/SaveSimTrackAction/src/SimG4CoreSaveSimTrackAction/libSimG4CoreSaveSimTrackAction.so. gmake: *** [lib/el8_amd64_gcc11/SimG4CoreSaveSimTrackAction.edmplugin] Error 1. ```. ### What is the expected behaviour? Not to crash. ### How to reproduce? ```. $ /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/8539/32991/install.sh. $ /cvmfs/cms.cern.ch/common/cmssw-el8 # skip if on EL8 machine. $ cd CMSSW_13_2_ROOT6_X_2023-06-04-2300/src. $ cmsenv. $ scram b -j8 SimDataFormats/CaloHit. ```. ### ROOT version. 6-28-patches, master. ### How did you install ROOT? from source. ### Which operating system are you using? Alma Linux 8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12957
https://github.com/root-project/root/issues/12958:678,availability,operat,operating,678,"[ntuple] `UnsealPage()` should be a no-op for the page zero; ### Explain what you would like to see improved. A call to `RPageStorage::UnsealPage()` should be a no-op for the page zero, i.e. no additional `memcpy()` and no unpacking required, which is currently prevented by the function prototype. In particular, it forces us to return a `std::unique_ptr` thus yielding the ownership of the pointee which conflicts with the semantics of the page zero (a single, shared buffer). This can be solved after merging #12279. ### Share how it could be improved. _No response_. ### How to reproduce? n/a. ### ROOT version. master. ### How did you install ROOT? custom build. ### Which operating system are you using? n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12958
https://github.com/root-project/root/issues/12958:607,deployability,version,version,607,"[ntuple] `UnsealPage()` should be a no-op for the page zero; ### Explain what you would like to see improved. A call to `RPageStorage::UnsealPage()` should be a no-op for the page zero, i.e. no additional `memcpy()` and no unpacking required, which is currently prevented by the function prototype. In particular, it forces us to return a `std::unique_ptr` thus yielding the ownership of the pointee which conflicts with the semantics of the page zero (a single, shared buffer). This can be solved after merging #12279. ### Share how it could be improved. _No response_. ### How to reproduce? n/a. ### ROOT version. master. ### How did you install ROOT? custom build. ### Which operating system are you using? n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12958
https://github.com/root-project/root/issues/12958:640,deployability,instal,install,640,"[ntuple] `UnsealPage()` should be a no-op for the page zero; ### Explain what you would like to see improved. A call to `RPageStorage::UnsealPage()` should be a no-op for the page zero, i.e. no additional `memcpy()` and no unpacking required, which is currently prevented by the function prototype. In particular, it forces us to return a `std::unique_ptr` thus yielding the ownership of the pointee which conflicts with the semantics of the page zero (a single, shared buffer). This can be solved after merging #12279. ### Share how it could be improved. _No response_. ### How to reproduce? n/a. ### ROOT version. master. ### How did you install ROOT? custom build. ### Which operating system are you using? n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12958
https://github.com/root-project/root/issues/12958:661,deployability,build,build,661,"[ntuple] `UnsealPage()` should be a no-op for the page zero; ### Explain what you would like to see improved. A call to `RPageStorage::UnsealPage()` should be a no-op for the page zero, i.e. no additional `memcpy()` and no unpacking required, which is currently prevented by the function prototype. In particular, it forces us to return a `std::unique_ptr` thus yielding the ownership of the pointee which conflicts with the semantics of the page zero (a single, shared buffer). This can be solved after merging #12279. ### Share how it could be improved. _No response_. ### How to reproduce? n/a. ### ROOT version. master. ### How did you install ROOT? custom build. ### Which operating system are you using? n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12958
https://github.com/root-project/root/issues/12958:252,energy efficiency,current,currently,252,"[ntuple] `UnsealPage()` should be a no-op for the page zero; ### Explain what you would like to see improved. A call to `RPageStorage::UnsealPage()` should be a no-op for the page zero, i.e. no additional `memcpy()` and no unpacking required, which is currently prevented by the function prototype. In particular, it forces us to return a `std::unique_ptr` thus yielding the ownership of the pointee which conflicts with the semantics of the page zero (a single, shared buffer). This can be solved after merging #12279. ### Share how it could be improved. _No response_. ### How to reproduce? n/a. ### ROOT version. master. ### How did you install ROOT? custom build. ### Which operating system are you using? n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12958
https://github.com/root-project/root/issues/12958:470,integrability,buffer,buffer,470,"[ntuple] `UnsealPage()` should be a no-op for the page zero; ### Explain what you would like to see improved. A call to `RPageStorage::UnsealPage()` should be a no-op for the page zero, i.e. no additional `memcpy()` and no unpacking required, which is currently prevented by the function prototype. In particular, it forces us to return a `std::unique_ptr` thus yielding the ownership of the pointee which conflicts with the semantics of the page zero (a single, shared buffer). This can be solved after merging #12279. ### Share how it could be improved. _No response_. ### How to reproduce? n/a. ### ROOT version. master. ### How did you install ROOT? custom build. ### Which operating system are you using? n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12958
https://github.com/root-project/root/issues/12958:607,integrability,version,version,607,"[ntuple] `UnsealPage()` should be a no-op for the page zero; ### Explain what you would like to see improved. A call to `RPageStorage::UnsealPage()` should be a no-op for the page zero, i.e. no additional `memcpy()` and no unpacking required, which is currently prevented by the function prototype. In particular, it forces us to return a `std::unique_ptr` thus yielding the ownership of the pointee which conflicts with the semantics of the page zero (a single, shared buffer). This can be solved after merging #12279. ### Share how it could be improved. _No response_. ### How to reproduce? n/a. ### ROOT version. master. ### How did you install ROOT? custom build. ### Which operating system are you using? n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12958
https://github.com/root-project/root/issues/12958:406,interoperability,conflict,conflicts,406,"[ntuple] `UnsealPage()` should be a no-op for the page zero; ### Explain what you would like to see improved. A call to `RPageStorage::UnsealPage()` should be a no-op for the page zero, i.e. no additional `memcpy()` and no unpacking required, which is currently prevented by the function prototype. In particular, it forces us to return a `std::unique_ptr` thus yielding the ownership of the pointee which conflicts with the semantics of the page zero (a single, shared buffer). This can be solved after merging #12279. ### Share how it could be improved. _No response_. ### How to reproduce? n/a. ### ROOT version. master. ### How did you install ROOT? custom build. ### Which operating system are you using? n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12958
https://github.com/root-project/root/issues/12958:425,interoperability,semant,semantics,425,"[ntuple] `UnsealPage()` should be a no-op for the page zero; ### Explain what you would like to see improved. A call to `RPageStorage::UnsealPage()` should be a no-op for the page zero, i.e. no additional `memcpy()` and no unpacking required, which is currently prevented by the function prototype. In particular, it forces us to return a `std::unique_ptr` thus yielding the ownership of the pointee which conflicts with the semantics of the page zero (a single, shared buffer). This can be solved after merging #12279. ### Share how it could be improved. _No response_. ### How to reproduce? n/a. ### ROOT version. master. ### How did you install ROOT? custom build. ### Which operating system are you using? n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12958
https://github.com/root-project/root/issues/12958:463,interoperability,share,shared,463,"[ntuple] `UnsealPage()` should be a no-op for the page zero; ### Explain what you would like to see improved. A call to `RPageStorage::UnsealPage()` should be a no-op for the page zero, i.e. no additional `memcpy()` and no unpacking required, which is currently prevented by the function prototype. In particular, it forces us to return a `std::unique_ptr` thus yielding the ownership of the pointee which conflicts with the semantics of the page zero (a single, shared buffer). This can be solved after merging #12279. ### Share how it could be improved. _No response_. ### How to reproduce? n/a. ### ROOT version. master. ### How did you install ROOT? custom build. ### Which operating system are you using? n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12958
https://github.com/root-project/root/issues/12958:524,interoperability,Share,Share,524,"[ntuple] `UnsealPage()` should be a no-op for the page zero; ### Explain what you would like to see improved. A call to `RPageStorage::UnsealPage()` should be a no-op for the page zero, i.e. no additional `memcpy()` and no unpacking required, which is currently prevented by the function prototype. In particular, it forces us to return a `std::unique_ptr` thus yielding the ownership of the pointee which conflicts with the semantics of the page zero (a single, shared buffer). This can be solved after merging #12279. ### Share how it could be improved. _No response_. ### How to reproduce? n/a. ### ROOT version. master. ### How did you install ROOT? custom build. ### Which operating system are you using? n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12958
https://github.com/root-project/root/issues/12958:607,modifiability,version,version,607,"[ntuple] `UnsealPage()` should be a no-op for the page zero; ### Explain what you would like to see improved. A call to `RPageStorage::UnsealPage()` should be a no-op for the page zero, i.e. no additional `memcpy()` and no unpacking required, which is currently prevented by the function prototype. In particular, it forces us to return a `std::unique_ptr` thus yielding the ownership of the pointee which conflicts with the semantics of the page zero (a single, shared buffer). This can be solved after merging #12279. ### Share how it could be improved. _No response_. ### How to reproduce? n/a. ### ROOT version. master. ### How did you install ROOT? custom build. ### Which operating system are you using? n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12958
https://github.com/root-project/root/issues/12958:262,safety,prevent,prevented,262,"[ntuple] `UnsealPage()` should be a no-op for the page zero; ### Explain what you would like to see improved. A call to `RPageStorage::UnsealPage()` should be a no-op for the page zero, i.e. no additional `memcpy()` and no unpacking required, which is currently prevented by the function prototype. In particular, it forces us to return a `std::unique_ptr` thus yielding the ownership of the pointee which conflicts with the semantics of the page zero (a single, shared buffer). This can be solved after merging #12279. ### Share how it could be improved. _No response_. ### How to reproduce? n/a. ### ROOT version. master. ### How did you install ROOT? custom build. ### Which operating system are you using? n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12958
https://github.com/root-project/root/issues/12958:262,security,preven,prevented,262,"[ntuple] `UnsealPage()` should be a no-op for the page zero; ### Explain what you would like to see improved. A call to `RPageStorage::UnsealPage()` should be a no-op for the page zero, i.e. no additional `memcpy()` and no unpacking required, which is currently prevented by the function prototype. In particular, it forces us to return a `std::unique_ptr` thus yielding the ownership of the pointee which conflicts with the semantics of the page zero (a single, shared buffer). This can be solved after merging #12279. ### Share how it could be improved. _No response_. ### How to reproduce? n/a. ### ROOT version. master. ### How did you install ROOT? custom build. ### Which operating system are you using? n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12958
https://github.com/root-project/root/issues/12958:730,testability,context,context,730,"[ntuple] `UnsealPage()` should be a no-op for the page zero; ### Explain what you would like to see improved. A call to `RPageStorage::UnsealPage()` should be a no-op for the page zero, i.e. no additional `memcpy()` and no unpacking required, which is currently prevented by the function prototype. In particular, it forces us to return a `std::unique_ptr` thus yielding the ownership of the pointee which conflicts with the semantics of the page zero (a single, shared buffer). This can be solved after merging #12279. ### Share how it could be improved. _No response_. ### How to reproduce? n/a. ### ROOT version. master. ### How did you install ROOT? custom build. ### Which operating system are you using? n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12958
https://github.com/root-project/root/issues/12958:288,usability,prototyp,prototype,288,"[ntuple] `UnsealPage()` should be a no-op for the page zero; ### Explain what you would like to see improved. A call to `RPageStorage::UnsealPage()` should be a no-op for the page zero, i.e. no additional `memcpy()` and no unpacking required, which is currently prevented by the function prototype. In particular, it forces us to return a `std::unique_ptr` thus yielding the ownership of the pointee which conflicts with the semantics of the page zero (a single, shared buffer). This can be solved after merging #12279. ### Share how it could be improved. _No response_. ### How to reproduce? n/a. ### ROOT version. master. ### How did you install ROOT? custom build. ### Which operating system are you using? n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12958
https://github.com/root-project/root/issues/12958:654,usability,custom,custom,654,"[ntuple] `UnsealPage()` should be a no-op for the page zero; ### Explain what you would like to see improved. A call to `RPageStorage::UnsealPage()` should be a no-op for the page zero, i.e. no additional `memcpy()` and no unpacking required, which is currently prevented by the function prototype. In particular, it forces us to return a `std::unique_ptr` thus yielding the ownership of the pointee which conflicts with the semantics of the page zero (a single, shared buffer). This can be solved after merging #12279. ### Share how it could be improved. _No response_. ### How to reproduce? n/a. ### ROOT version. master. ### How did you install ROOT? custom build. ### Which operating system are you using? n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12958
https://github.com/root-project/root/issues/12959:639,availability,operat,operating,639,"[ntuple] Distinguish between connecting a page sink and a page source in `RColumn`; ### Explain what you would like to see improved. Currently, `RColumn::Connect()` handles connecting the column to a page sink / source. However, at this point it would be nicer to distinguish between connecting a page sink and a page source, thus having separate member functions. ### Share how it could be improved. It seems it makes sense now to separate `RColumn::Connect()` into `RColumn::ConnectPageSink()` and `RColumn::ConnectPageSource()`. ### How to reproduce? n/a. ### ROOT version. master. ### How did you install ROOT? custom build. ### Which operating system are you using? n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12959
https://github.com/root-project/root/issues/12959:568,deployability,version,version,568,"[ntuple] Distinguish between connecting a page sink and a page source in `RColumn`; ### Explain what you would like to see improved. Currently, `RColumn::Connect()` handles connecting the column to a page sink / source. However, at this point it would be nicer to distinguish between connecting a page sink and a page source, thus having separate member functions. ### Share how it could be improved. It seems it makes sense now to separate `RColumn::Connect()` into `RColumn::ConnectPageSink()` and `RColumn::ConnectPageSource()`. ### How to reproduce? n/a. ### ROOT version. master. ### How did you install ROOT? custom build. ### Which operating system are you using? n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12959
https://github.com/root-project/root/issues/12959:601,deployability,instal,install,601,"[ntuple] Distinguish between connecting a page sink and a page source in `RColumn`; ### Explain what you would like to see improved. Currently, `RColumn::Connect()` handles connecting the column to a page sink / source. However, at this point it would be nicer to distinguish between connecting a page sink and a page source, thus having separate member functions. ### Share how it could be improved. It seems it makes sense now to separate `RColumn::Connect()` into `RColumn::ConnectPageSink()` and `RColumn::ConnectPageSource()`. ### How to reproduce? n/a. ### ROOT version. master. ### How did you install ROOT? custom build. ### Which operating system are you using? n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12959
https://github.com/root-project/root/issues/12959:622,deployability,build,build,622,"[ntuple] Distinguish between connecting a page sink and a page source in `RColumn`; ### Explain what you would like to see improved. Currently, `RColumn::Connect()` handles connecting the column to a page sink / source. However, at this point it would be nicer to distinguish between connecting a page sink and a page source, thus having separate member functions. ### Share how it could be improved. It seems it makes sense now to separate `RColumn::Connect()` into `RColumn::ConnectPageSink()` and `RColumn::ConnectPageSource()`. ### How to reproduce? n/a. ### ROOT version. master. ### How did you install ROOT? custom build. ### Which operating system are you using? n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12959
https://github.com/root-project/root/issues/12959:133,energy efficiency,Current,Currently,133,"[ntuple] Distinguish between connecting a page sink and a page source in `RColumn`; ### Explain what you would like to see improved. Currently, `RColumn::Connect()` handles connecting the column to a page sink / source. However, at this point it would be nicer to distinguish between connecting a page sink and a page source, thus having separate member functions. ### Share how it could be improved. It seems it makes sense now to separate `RColumn::Connect()` into `RColumn::ConnectPageSink()` and `RColumn::ConnectPageSource()`. ### How to reproduce? n/a. ### ROOT version. master. ### How did you install ROOT? custom build. ### Which operating system are you using? n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12959
https://github.com/root-project/root/issues/12959:568,integrability,version,version,568,"[ntuple] Distinguish between connecting a page sink and a page source in `RColumn`; ### Explain what you would like to see improved. Currently, `RColumn::Connect()` handles connecting the column to a page sink / source. However, at this point it would be nicer to distinguish between connecting a page sink and a page source, thus having separate member functions. ### Share how it could be improved. It seems it makes sense now to separate `RColumn::Connect()` into `RColumn::ConnectPageSink()` and `RColumn::ConnectPageSource()`. ### How to reproduce? n/a. ### ROOT version. master. ### How did you install ROOT? custom build. ### Which operating system are you using? n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12959
https://github.com/root-project/root/issues/12959:369,interoperability,Share,Share,369,"[ntuple] Distinguish between connecting a page sink and a page source in `RColumn`; ### Explain what you would like to see improved. Currently, `RColumn::Connect()` handles connecting the column to a page sink / source. However, at this point it would be nicer to distinguish between connecting a page sink and a page source, thus having separate member functions. ### Share how it could be improved. It seems it makes sense now to separate `RColumn::Connect()` into `RColumn::ConnectPageSink()` and `RColumn::ConnectPageSource()`. ### How to reproduce? n/a. ### ROOT version. master. ### How did you install ROOT? custom build. ### Which operating system are you using? n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12959
https://github.com/root-project/root/issues/12959:568,modifiability,version,version,568,"[ntuple] Distinguish between connecting a page sink and a page source in `RColumn`; ### Explain what you would like to see improved. Currently, `RColumn::Connect()` handles connecting the column to a page sink / source. However, at this point it would be nicer to distinguish between connecting a page sink and a page source, thus having separate member functions. ### Share how it could be improved. It seems it makes sense now to separate `RColumn::Connect()` into `RColumn::ConnectPageSink()` and `RColumn::ConnectPageSource()`. ### How to reproduce? n/a. ### ROOT version. master. ### How did you install ROOT? custom build. ### Which operating system are you using? n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12959
https://github.com/root-project/root/issues/12959:691,testability,context,context,691,"[ntuple] Distinguish between connecting a page sink and a page source in `RColumn`; ### Explain what you would like to see improved. Currently, `RColumn::Connect()` handles connecting the column to a page sink / source. However, at this point it would be nicer to distinguish between connecting a page sink and a page source, thus having separate member functions. ### Share how it could be improved. It seems it makes sense now to separate `RColumn::Connect()` into `RColumn::ConnectPageSink()` and `RColumn::ConnectPageSource()`. ### How to reproduce? n/a. ### ROOT version. master. ### How did you install ROOT? custom build. ### Which operating system are you using? n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12959
https://github.com/root-project/root/issues/12959:615,usability,custom,custom,615,"[ntuple] Distinguish between connecting a page sink and a page source in `RColumn`; ### Explain what you would like to see improved. Currently, `RColumn::Connect()` handles connecting the column to a page sink / source. However, at this point it would be nicer to distinguish between connecting a page sink and a page source, thus having separate member functions. ### Share how it could be improved. It seems it makes sense now to separate `RColumn::Connect()` into `RColumn::ConnectPageSink()` and `RColumn::ConnectPageSource()`. ### How to reproduce? n/a. ### ROOT version. master. ### How did you install ROOT? custom build. ### Which operating system are you using? n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12959
https://github.com/root-project/root/issues/12960:747,availability,operat,operating,747,"[ntuple] RPageSourceDaos should be able to populate zero pages from `kTypePageZero` locators; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. After merging #12676, _all the page sources_ are required to be able to populate the page zero from the `kTypePageZero` locator. However, for for the sake of simplifying the PR #12676 (which was already quite large), this was not included and thus left for a follow-up pull request. ### What is the expected behaviour? `RPageSourceDaos` should be able to populate the page zero in all cases, i.e. a call to `PopulatePage()`, `LoadSealedPage()`, or `LoadClusters()`. ### How to reproduce? n/a. ### ROOT version. master. ### How did you install ROOT? custom build. ### Which operating system are you using? n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12960
https://github.com/root-project/root/issues/12960:676,deployability,version,version,676,"[ntuple] RPageSourceDaos should be able to populate zero pages from `kTypePageZero` locators; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. After merging #12676, _all the page sources_ are required to be able to populate the page zero from the `kTypePageZero` locator. However, for for the sake of simplifying the PR #12676 (which was already quite large), this was not included and thus left for a follow-up pull request. ### What is the expected behaviour? `RPageSourceDaos` should be able to populate the page zero in all cases, i.e. a call to `PopulatePage()`, `LoadSealedPage()`, or `LoadClusters()`. ### How to reproduce? n/a. ### ROOT version. master. ### How did you install ROOT? custom build. ### Which operating system are you using? n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12960
https://github.com/root-project/root/issues/12960:709,deployability,instal,install,709,"[ntuple] RPageSourceDaos should be able to populate zero pages from `kTypePageZero` locators; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. After merging #12676, _all the page sources_ are required to be able to populate the page zero from the `kTypePageZero` locator. However, for for the sake of simplifying the PR #12676 (which was already quite large), this was not included and thus left for a follow-up pull request. ### What is the expected behaviour? `RPageSourceDaos` should be able to populate the page zero in all cases, i.e. a call to `PopulatePage()`, `LoadSealedPage()`, or `LoadClusters()`. ### How to reproduce? n/a. ### ROOT version. master. ### How did you install ROOT? custom build. ### Which operating system are you using? n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12960
https://github.com/root-project/root/issues/12960:730,deployability,build,build,730,"[ntuple] RPageSourceDaos should be able to populate zero pages from `kTypePageZero` locators; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. After merging #12676, _all the page sources_ are required to be able to populate the page zero from the `kTypePageZero` locator. However, for for the sake of simplifying the PR #12676 (which was already quite large), this was not included and thus left for a follow-up pull request. ### What is the expected behaviour? `RPageSourceDaos` should be able to populate the page zero in all cases, i.e. a call to `PopulatePage()`, `LoadSealedPage()`, or `LoadClusters()`. ### How to reproduce? n/a. ### ROOT version. master. ### How did you install ROOT? custom build. ### Which operating system are you using? n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12960
https://github.com/root-project/root/issues/12960:600,energy efficiency,Load,LoadSealedPage,600,"[ntuple] RPageSourceDaos should be able to populate zero pages from `kTypePageZero` locators; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. After merging #12676, _all the page sources_ are required to be able to populate the page zero from the `kTypePageZero` locator. However, for for the sake of simplifying the PR #12676 (which was already quite large), this was not included and thus left for a follow-up pull request. ### What is the expected behaviour? `RPageSourceDaos` should be able to populate the page zero in all cases, i.e. a call to `PopulatePage()`, `LoadSealedPage()`, or `LoadClusters()`. ### How to reproduce? n/a. ### ROOT version. master. ### How did you install ROOT? custom build. ### Which operating system are you using? n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12960
https://github.com/root-project/root/issues/12960:623,energy efficiency,Load,LoadClusters,623,"[ntuple] RPageSourceDaos should be able to populate zero pages from `kTypePageZero` locators; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. After merging #12676, _all the page sources_ are required to be able to populate the page zero from the `kTypePageZero` locator. However, for for the sake of simplifying the PR #12676 (which was already quite large), this was not included and thus left for a follow-up pull request. ### What is the expected behaviour? `RPageSourceDaos` should be able to populate the page zero in all cases, i.e. a call to `PopulatePage()`, `LoadSealedPage()`, or `LoadClusters()`. ### How to reproduce? n/a. ### ROOT version. master. ### How did you install ROOT? custom build. ### Which operating system are you using? n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12960
https://github.com/root-project/root/issues/12960:676,integrability,version,version,676,"[ntuple] RPageSourceDaos should be able to populate zero pages from `kTypePageZero` locators; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. After merging #12676, _all the page sources_ are required to be able to populate the page zero from the `kTypePageZero` locator. However, for for the sake of simplifying the PR #12676 (which was already quite large), this was not included and thus left for a follow-up pull request. ### What is the expected behaviour? `RPageSourceDaos` should be able to populate the page zero in all cases, i.e. a call to `PopulatePage()`, `LoadSealedPage()`, or `LoadClusters()`. ### How to reproduce? n/a. ### ROOT version. master. ### How did you install ROOT? custom build. ### Which operating system are you using? n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12960
https://github.com/root-project/root/issues/12960:676,modifiability,version,version,676,"[ntuple] RPageSourceDaos should be able to populate zero pages from `kTypePageZero` locators; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. After merging #12676, _all the page sources_ are required to be able to populate the page zero from the `kTypePageZero` locator. However, for for the sake of simplifying the PR #12676 (which was already quite large), this was not included and thus left for a follow-up pull request. ### What is the expected behaviour? `RPageSourceDaos` should be able to populate the page zero in all cases, i.e. a call to `PopulatePage()`, `LoadSealedPage()`, or `LoadClusters()`. ### How to reproduce? n/a. ### ROOT version. master. ### How did you install ROOT? custom build. ### Which operating system are you using? n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12960
https://github.com/root-project/root/issues/12960:600,performance,Load,LoadSealedPage,600,"[ntuple] RPageSourceDaos should be able to populate zero pages from `kTypePageZero` locators; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. After merging #12676, _all the page sources_ are required to be able to populate the page zero from the `kTypePageZero` locator. However, for for the sake of simplifying the PR #12676 (which was already quite large), this was not included and thus left for a follow-up pull request. ### What is the expected behaviour? `RPageSourceDaos` should be able to populate the page zero in all cases, i.e. a call to `PopulatePage()`, `LoadSealedPage()`, or `LoadClusters()`. ### How to reproduce? n/a. ### ROOT version. master. ### How did you install ROOT? custom build. ### Which operating system are you using? n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12960
https://github.com/root-project/root/issues/12960:623,performance,Load,LoadClusters,623,"[ntuple] RPageSourceDaos should be able to populate zero pages from `kTypePageZero` locators; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. After merging #12676, _all the page sources_ are required to be able to populate the page zero from the `kTypePageZero` locator. However, for for the sake of simplifying the PR #12676 (which was already quite large), this was not included and thus left for a follow-up pull request. ### What is the expected behaviour? `RPageSourceDaos` should be able to populate the page zero in all cases, i.e. a call to `PopulatePage()`, `LoadSealedPage()`, or `LoadClusters()`. ### How to reproduce? n/a. ### ROOT version. master. ### How did you install ROOT? custom build. ### Which operating system are you using? n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12960
https://github.com/root-project/root/issues/12960:332,testability,simpl,simplifying,332,"[ntuple] RPageSourceDaos should be able to populate zero pages from `kTypePageZero` locators; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. After merging #12676, _all the page sources_ are required to be able to populate the page zero from the `kTypePageZero` locator. However, for for the sake of simplifying the PR #12676 (which was already quite large), this was not included and thus left for a follow-up pull request. ### What is the expected behaviour? `RPageSourceDaos` should be able to populate the page zero in all cases, i.e. a call to `PopulatePage()`, `LoadSealedPage()`, or `LoadClusters()`. ### How to reproduce? n/a. ### ROOT version. master. ### How did you install ROOT? custom build. ### Which operating system are you using? n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12960
https://github.com/root-project/root/issues/12960:799,testability,context,context,799,"[ntuple] RPageSourceDaos should be able to populate zero pages from `kTypePageZero` locators; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. After merging #12676, _all the page sources_ are required to be able to populate the page zero from the `kTypePageZero` locator. However, for for the sake of simplifying the PR #12676 (which was already quite large), this was not included and thus left for a follow-up pull request. ### What is the expected behaviour? `RPageSourceDaos` should be able to populate the page zero in all cases, i.e. a call to `PopulatePage()`, `LoadSealedPage()`, or `LoadClusters()`. ### How to reproduce? n/a. ### ROOT version. master. ### How did you install ROOT? custom build. ### Which operating system are you using? n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12960
https://github.com/root-project/root/issues/12960:332,usability,simpl,simplifying,332,"[ntuple] RPageSourceDaos should be able to populate zero pages from `kTypePageZero` locators; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. After merging #12676, _all the page sources_ are required to be able to populate the page zero from the `kTypePageZero` locator. However, for for the sake of simplifying the PR #12676 (which was already quite large), this was not included and thus left for a follow-up pull request. ### What is the expected behaviour? `RPageSourceDaos` should be able to populate the page zero in all cases, i.e. a call to `PopulatePage()`, `LoadSealedPage()`, or `LoadClusters()`. ### How to reproduce? n/a. ### ROOT version. master. ### How did you install ROOT? custom build. ### Which operating system are you using? n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12960
https://github.com/root-project/root/issues/12960:482,usability,behavi,behaviour,482,"[ntuple] RPageSourceDaos should be able to populate zero pages from `kTypePageZero` locators; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. After merging #12676, _all the page sources_ are required to be able to populate the page zero from the `kTypePageZero` locator. However, for for the sake of simplifying the PR #12676 (which was already quite large), this was not included and thus left for a follow-up pull request. ### What is the expected behaviour? `RPageSourceDaos` should be able to populate the page zero in all cases, i.e. a call to `PopulatePage()`, `LoadSealedPage()`, or `LoadClusters()`. ### How to reproduce? n/a. ### ROOT version. master. ### How did you install ROOT? custom build. ### Which operating system are you using? n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12960
https://github.com/root-project/root/issues/12960:723,usability,custom,custom,723,"[ntuple] RPageSourceDaos should be able to populate zero pages from `kTypePageZero` locators; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. After merging #12676, _all the page sources_ are required to be able to populate the page zero from the `kTypePageZero` locator. However, for for the sake of simplifying the PR #12676 (which was already quite large), this was not included and thus left for a follow-up pull request. ### What is the expected behaviour? `RPageSourceDaos` should be able to populate the page zero in all cases, i.e. a call to `PopulatePage()`, `LoadSealedPage()`, or `LoadClusters()`. ### How to reproduce? n/a. ### ROOT version. master. ### How did you install ROOT? custom build. ### Which operating system are you using? n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12960
https://github.com/root-project/root/pull/12961:111,integrability,Batch,BatchMode,111,[RF] Implement `compileForNormSet()` for RooRealIntegral and RooAddPdf; This fixes remaining problems with the BatchMode that would have become apparent when using it for data projections in `RooAbsReal::plotOn()`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12961
https://github.com/root-project/root/pull/12961:111,performance,Batch,BatchMode,111,[RF] Implement `compileForNormSet()` for RooRealIntegral and RooAddPdf; This fixes remaining problems with the BatchMode that would have become apparent when using it for data projections in `RooAbsReal::plotOn()`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12961
https://github.com/root-project/root/pull/12962:184,deployability,updat,updated,184,[RF][HS3] Improvements for ModelConfig IO and other developments; # This Pull request:. Adds handling of ExternalConstraints to HS3. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12962
https://github.com/root-project/root/pull/12962:27,energy efficiency,Model,ModelConfig,27,[RF][HS3] Improvements for ModelConfig IO and other developments; # This Pull request:. Adds handling of ExternalConstraints to HS3. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12962
https://github.com/root-project/root/pull/12962:154,safety,test,tested,154,[RF][HS3] Improvements for ModelConfig IO and other developments; # This Pull request:. Adds handling of ExternalConstraints to HS3. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12962
https://github.com/root-project/root/pull/12962:184,safety,updat,updated,184,[RF][HS3] Improvements for ModelConfig IO and other developments; # This Pull request:. Adds handling of ExternalConstraints to HS3. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12962
https://github.com/root-project/root/pull/12962:27,security,Model,ModelConfig,27,[RF][HS3] Improvements for ModelConfig IO and other developments; # This Pull request:. Adds handling of ExternalConstraints to HS3. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12962
https://github.com/root-project/root/pull/12962:184,security,updat,updated,184,[RF][HS3] Improvements for ModelConfig IO and other developments; # This Pull request:. Adds handling of ExternalConstraints to HS3. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12962
https://github.com/root-project/root/pull/12962:154,testability,test,tested,154,[RF][HS3] Improvements for ModelConfig IO and other developments; # This Pull request:. Adds handling of ExternalConstraints to HS3. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12962
https://github.com/root-project/root/pull/12964:418,deployability,updat,updated,418,[mathcore] Make TRandom3::Rndm() inline and final:; Muhammad Alhroob (using ChatGPT) demonstrated that this can considerably reduce the runtime cost for TRandom3. Marking the class `final` seems a good compromise between performance and backward incompatibility: the compiler will diagnose if people inherit from TRandom3. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/12547.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12964
https://github.com/root-project/root/pull/12964:125,energy efficiency,reduc,reduce,125,[mathcore] Make TRandom3::Rndm() inline and final:; Muhammad Alhroob (using ChatGPT) demonstrated that this can considerably reduce the runtime cost for TRandom3. Marking the class `final` seems a good compromise between performance and backward incompatibility: the compiler will diagnose if people inherit from TRandom3. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/12547.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12964
https://github.com/root-project/root/pull/12964:246,interoperability,incompatib,incompatibility,246,[mathcore] Make TRandom3::Rndm() inline and final:; Muhammad Alhroob (using ChatGPT) demonstrated that this can considerably reduce the runtime cost for TRandom3. Marking the class `final` seems a good compromise between performance and backward incompatibility: the compiler will diagnose if people inherit from TRandom3. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/12547.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12964
https://github.com/root-project/root/pull/12964:300,modifiability,inherit,inherit,300,[mathcore] Make TRandom3::Rndm() inline and final:; Muhammad Alhroob (using ChatGPT) demonstrated that this can considerably reduce the runtime cost for TRandom3. Marking the class `final` seems a good compromise between performance and backward incompatibility: the compiler will diagnose if people inherit from TRandom3. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/12547.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12964
https://github.com/root-project/root/pull/12964:221,performance,perform,performance,221,[mathcore] Make TRandom3::Rndm() inline and final:; Muhammad Alhroob (using ChatGPT) demonstrated that this can considerably reduce the runtime cost for TRandom3. Marking the class `final` seems a good compromise between performance and backward incompatibility: the compiler will diagnose if people inherit from TRandom3. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/12547.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12964
https://github.com/root-project/root/pull/12964:281,reliability,diagno,diagnose,281,[mathcore] Make TRandom3::Rndm() inline and final:; Muhammad Alhroob (using ChatGPT) demonstrated that this can considerably reduce the runtime cost for TRandom3. Marking the class `final` seems a good compromise between performance and backward incompatibility: the compiler will diagnose if people inherit from TRandom3. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/12547.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12964
https://github.com/root-project/root/pull/12964:388,safety,test,tested,388,[mathcore] Make TRandom3::Rndm() inline and final:; Muhammad Alhroob (using ChatGPT) demonstrated that this can considerably reduce the runtime cost for TRandom3. Marking the class `final` seems a good compromise between performance and backward incompatibility: the compiler will diagnose if people inherit from TRandom3. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/12547.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12964
https://github.com/root-project/root/pull/12964:418,safety,updat,updated,418,[mathcore] Make TRandom3::Rndm() inline and final:; Muhammad Alhroob (using ChatGPT) demonstrated that this can considerably reduce the runtime cost for TRandom3. Marking the class `final` seems a good compromise between performance and backward incompatibility: the compiler will diagnose if people inherit from TRandom3. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/12547.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12964
https://github.com/root-project/root/pull/12964:418,security,updat,updated,418,[mathcore] Make TRandom3::Rndm() inline and final:; Muhammad Alhroob (using ChatGPT) demonstrated that this can considerably reduce the runtime cost for TRandom3. Marking the class `final` seems a good compromise between performance and backward incompatibility: the compiler will diagnose if people inherit from TRandom3. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/12547.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12964
https://github.com/root-project/root/pull/12964:281,testability,diagno,diagnose,281,[mathcore] Make TRandom3::Rndm() inline and final:; Muhammad Alhroob (using ChatGPT) demonstrated that this can considerably reduce the runtime cost for TRandom3. Marking the class `final` seems a good compromise between performance and backward incompatibility: the compiler will diagnose if people inherit from TRandom3. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/12547.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12964
https://github.com/root-project/root/pull/12964:388,testability,test,tested,388,[mathcore] Make TRandom3::Rndm() inline and final:; Muhammad Alhroob (using ChatGPT) demonstrated that this can considerably reduce the runtime cost for TRandom3. Marking the class `final` seems a good compromise between performance and backward incompatibility: the compiler will diagnose if people inherit from TRandom3. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/12547.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12964
https://github.com/root-project/root/pull/12964:221,usability,perform,performance,221,[mathcore] Make TRandom3::Rndm() inline and final:; Muhammad Alhroob (using ChatGPT) demonstrated that this can considerably reduce the runtime cost for TRandom3. Marking the class `final` seems a good compromise between performance and backward incompatibility: the compiler will diagnose if people inherit from TRandom3. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/12547.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12964
https://github.com/root-project/root/pull/12966:144,deployability,updat,updated,144,[ci] Add sonartype.io static checker. [skip-ci]; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12966
https://github.com/root-project/root/pull/12966:114,safety,test,tested,114,[ci] Add sonartype.io static checker. [skip-ci]; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12966
https://github.com/root-project/root/pull/12966:144,safety,updat,updated,144,[ci] Add sonartype.io static checker. [skip-ci]; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12966
https://github.com/root-project/root/pull/12966:144,security,updat,updated,144,[ci] Add sonartype.io static checker. [skip-ci]; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12966
https://github.com/root-project/root/pull/12966:114,testability,test,tested,114,[ci] Add sonartype.io static checker. [skip-ci]; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12966
https://github.com/root-project/root/issues/12967:175,availability,operat,operate,175,"[RF] HistFactory workspaces incompatible between versions 6.26 and 6.28; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:. ```. Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour? Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce? Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash. root@2cd219ab253b:~/data# root --version. ROOT Version: 6.28/04. Built for linuxx8664gcc on May 24 2023, 17:37:00. From tags/v6-28-04@v6-28-04. root@2cd219ab253b:~/data# root -l workspace_example.root. root [0]. Attaching file workspace_example.root as _file0... (TFile *) 0x402fde6770. root [1] minimal_example->PrintXML(). Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. ### ROOT version. 6.28/04. ### How did you install ROOT? custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using? N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12967
https://github.com/root-project/root/issues/12967:329,availability,Error,Error,329,"[RF] HistFactory workspaces incompatible between versions 6.26 and 6.28; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:. ```. Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour? Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce? Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash. root@2cd219ab253b:~/data# root --version. ROOT Version: 6.28/04. Built for linuxx8664gcc on May 24 2023, 17:37:00. From tags/v6-28-04@v6-28-04. root@2cd219ab253b:~/data# root -l workspace_example.root. root [0]. Attaching file workspace_example.root as _file0... (TFile *) 0x402fde6770. root [1] minimal_example->PrintXML(). Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. ### ROOT version. 6.28/04. ### How did you install ROOT? custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using? N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12967
https://github.com/root-project/root/issues/12967:568,availability,error,error,568,"[RF] HistFactory workspaces incompatible between versions 6.26 and 6.28; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:. ```. Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour? Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce? Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash. root@2cd219ab253b:~/data# root --version. ROOT Version: 6.28/04. Built for linuxx8664gcc on May 24 2023, 17:37:00. From tags/v6-28-04@v6-28-04. root@2cd219ab253b:~/data# root -l workspace_example.root. root [0]. Attaching file workspace_example.root as _file0... (TFile *) 0x402fde6770. root [1] minimal_example->PrintXML(). Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. ### ROOT version. 6.28/04. ### How did you install ROOT? custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using? N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12967
https://github.com/root-project/root/issues/12967:747,availability,error,error,747,"[RF] HistFactory workspaces incompatible between versions 6.26 and 6.28; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:. ```. Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour? Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce? Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash. root@2cd219ab253b:~/data# root --version. ROOT Version: 6.28/04. Built for linuxx8664gcc on May 24 2023, 17:37:00. From tags/v6-28-04@v6-28-04. root@2cd219ab253b:~/data# root -l workspace_example.root. root [0]. Attaching file workspace_example.root as _file0... (TFile *) 0x402fde6770. root [1] minimal_example->PrintXML(). Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. ### ROOT version. 6.28/04. ### How did you install ROOT? custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using? N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12967
https://github.com/root-project/root/issues/12967:1369,availability,Error,Error,1369,"[RF] HistFactory workspaces incompatible between versions 6.26 and 6.28; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:. ```. Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour? Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce? Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash. root@2cd219ab253b:~/data# root --version. ROOT Version: 6.28/04. Built for linuxx8664gcc on May 24 2023, 17:37:00. From tags/v6-28-04@v6-28-04. root@2cd219ab253b:~/data# root -l workspace_example.root. root [0]. Attaching file workspace_example.root as _file0... (TFile *) 0x402fde6770. root [1] minimal_example->PrintXML(). Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. ### ROOT version. 6.28/04. ### How did you install ROOT? custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using? N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12967
https://github.com/root-project/root/issues/12967:1608,availability,operat,operating,1608,"[RF] HistFactory workspaces incompatible between versions 6.26 and 6.28; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:. ```. Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour? Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce? Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash. root@2cd219ab253b:~/data# root --version. ROOT Version: 6.28/04. Built for linuxx8664gcc on May 24 2023, 17:37:00. From tags/v6-28-04@v6-28-04. root@2cd219ab253b:~/data# root -l workspace_example.root. root [0]. Attaching file workspace_example.root as _file0... (TFile *) 0x402fde6770. root [1] minimal_example->PrintXML(). Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. ### ROOT version. 6.28/04. ### How did you install ROOT? custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using? N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12967
https://github.com/root-project/root/issues/12967:49,deployability,version,versions,49,"[RF] HistFactory workspaces incompatible between versions 6.26 and 6.28; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:. ```. Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour? Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce? Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash. root@2cd219ab253b:~/data# root --version. ROOT Version: 6.28/04. Built for linuxx8664gcc on May 24 2023, 17:37:00. From tags/v6-28-04@v6-28-04. root@2cd219ab253b:~/data# root -l workspace_example.root. root [0]. Attaching file workspace_example.root as _file0... (TFile *) 0x402fde6770. root [1] minimal_example->PrintXML(). Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. ### ROOT version. 6.28/04. ### How did you install ROOT? custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using? N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12967
https://github.com/root-project/root/issues/12967:631,deployability,version,version,631,"[RF] HistFactory workspaces incompatible between versions 6.26 and 6.28; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:. ```. Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour? Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce? Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash. root@2cd219ab253b:~/data# root --version. ROOT Version: 6.28/04. Built for linuxx8664gcc on May 24 2023, 17:37:00. From tags/v6-28-04@v6-28-04. root@2cd219ab253b:~/data# root -l workspace_example.root. root [0]. Attaching file workspace_example.root as _file0... (TFile *) 0x402fde6770. root [1] minimal_example->PrintXML(). Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. ### ROOT version. 6.28/04. ### How did you install ROOT? custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using? N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12967
https://github.com/root-project/root/issues/12967:1077,deployability,version,version,1077,"[RF] HistFactory workspaces incompatible between versions 6.26 and 6.28; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:. ```. Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour? Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce? Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash. root@2cd219ab253b:~/data# root --version. ROOT Version: 6.28/04. Built for linuxx8664gcc on May 24 2023, 17:37:00. From tags/v6-28-04@v6-28-04. root@2cd219ab253b:~/data# root -l workspace_example.root. root [0]. Attaching file workspace_example.root as _file0... (TFile *) 0x402fde6770. root [1] minimal_example->PrintXML(). Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. ### ROOT version. 6.28/04. ### How did you install ROOT? custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using? N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12967
https://github.com/root-project/root/issues/12967:1091,deployability,Version,Version,1091,"[RF] HistFactory workspaces incompatible between versions 6.26 and 6.28; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:. ```. Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour? Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce? Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash. root@2cd219ab253b:~/data# root --version. ROOT Version: 6.28/04. Built for linuxx8664gcc on May 24 2023, 17:37:00. From tags/v6-28-04@v6-28-04. root@2cd219ab253b:~/data# root -l workspace_example.root. root [0]. Attaching file workspace_example.root as _file0... (TFile *) 0x402fde6770. root [1] minimal_example->PrintXML(). Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. ### ROOT version. 6.28/04. ### How did you install ROOT? custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using? N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12967
https://github.com/root-project/root/issues/12967:1476,deployability,version,version,1476,"[RF] HistFactory workspaces incompatible between versions 6.26 and 6.28; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:. ```. Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour? Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce? Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash. root@2cd219ab253b:~/data# root --version. ROOT Version: 6.28/04. Built for linuxx8664gcc on May 24 2023, 17:37:00. From tags/v6-28-04@v6-28-04. root@2cd219ab253b:~/data# root -l workspace_example.root. root [0]. Attaching file workspace_example.root as _file0... (TFile *) 0x402fde6770. root [1] minimal_example->PrintXML(). Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. ### ROOT version. 6.28/04. ### How did you install ROOT? custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using? N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12967
https://github.com/root-project/root/issues/12967:1510,deployability,instal,install,1510,"[RF] HistFactory workspaces incompatible between versions 6.26 and 6.28; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:. ```. Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour? Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce? Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash. root@2cd219ab253b:~/data# root --version. ROOT Version: 6.28/04. Built for linuxx8664gcc on May 24 2023, 17:37:00. From tags/v6-28-04@v6-28-04. root@2cd219ab253b:~/data# root -l workspace_example.root. root [0]. Attaching file workspace_example.root as _file0... (TFile *) 0x402fde6770. root [1] minimal_example->PrintXML(). Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. ### ROOT version. 6.28/04. ### How did you install ROOT? custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using? N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12967
https://github.com/root-project/root/issues/12967:1531,deployability,build,build,1531,"[RF] HistFactory workspaces incompatible between versions 6.26 and 6.28; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:. ```. Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour? Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce? Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash. root@2cd219ab253b:~/data# root --version. ROOT Version: 6.28/04. Built for linuxx8664gcc on May 24 2023, 17:37:00. From tags/v6-28-04@v6-28-04. root@2cd219ab253b:~/data# root -l workspace_example.root. root [0]. Attaching file workspace_example.root as _file0... (TFile *) 0x402fde6770. root [1] minimal_example->PrintXML(). Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. ### ROOT version. 6.28/04. ### How did you install ROOT? custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using? N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12967
https://github.com/root-project/root/issues/12967:1538,deployability,contain,container,1538,"[RF] HistFactory workspaces incompatible between versions 6.26 and 6.28; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:. ```. Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour? Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce? Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash. root@2cd219ab253b:~/data# root --version. ROOT Version: 6.28/04. Built for linuxx8664gcc on May 24 2023, 17:37:00. From tags/v6-28-04@v6-28-04. root@2cd219ab253b:~/data# root -l workspace_example.root. root [0]. Attaching file workspace_example.root as _file0... (TFile *) 0x402fde6770. root [1] minimal_example->PrintXML(). Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. ### ROOT version. 6.28/04. ### How did you install ROOT? custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using? N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12967
https://github.com/root-project/root/issues/12967:200,energy efficiency,Measur,Measurement,200,"[RF] HistFactory workspaces incompatible between versions 6.26 and 6.28; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:. ```. Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour? Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce? Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash. root@2cd219ab253b:~/data# root --version. ROOT Version: 6.28/04. Built for linuxx8664gcc on May 24 2023, 17:37:00. From tags/v6-28-04@v6-28-04. root@2cd219ab253b:~/data# root -l workspace_example.root. root [0]. Attaching file workspace_example.root as _file0... (TFile *) 0x402fde6770. root [1] minimal_example->PrintXML(). Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. ### ROOT version. 6.28/04. ### How did you install ROOT? custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using? N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12967
https://github.com/root-project/root/issues/12967:49,integrability,version,versions,49,"[RF] HistFactory workspaces incompatible between versions 6.26 and 6.28; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:. ```. Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour? Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce? Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash. root@2cd219ab253b:~/data# root --version. ROOT Version: 6.28/04. Built for linuxx8664gcc on May 24 2023, 17:37:00. From tags/v6-28-04@v6-28-04. root@2cd219ab253b:~/data# root -l workspace_example.root. root [0]. Attaching file workspace_example.root as _file0... (TFile *) 0x402fde6770. root [1] minimal_example->PrintXML(). Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. ### ROOT version. 6.28/04. ### How did you install ROOT? custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using? N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12967
https://github.com/root-project/root/issues/12967:631,integrability,version,version,631,"[RF] HistFactory workspaces incompatible between versions 6.26 and 6.28; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:. ```. Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour? Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce? Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash. root@2cd219ab253b:~/data# root --version. ROOT Version: 6.28/04. Built for linuxx8664gcc on May 24 2023, 17:37:00. From tags/v6-28-04@v6-28-04. root@2cd219ab253b:~/data# root -l workspace_example.root. root [0]. Attaching file workspace_example.root as _file0... (TFile *) 0x402fde6770. root [1] minimal_example->PrintXML(). Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. ### ROOT version. 6.28/04. ### How did you install ROOT? custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using? N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12967
https://github.com/root-project/root/issues/12967:753,integrability,messag,message,753,"[RF] HistFactory workspaces incompatible between versions 6.26 and 6.28; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:. ```. Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour? Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce? Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash. root@2cd219ab253b:~/data# root --version. ROOT Version: 6.28/04. Built for linuxx8664gcc on May 24 2023, 17:37:00. From tags/v6-28-04@v6-28-04. root@2cd219ab253b:~/data# root -l workspace_example.root. root [0]. Attaching file workspace_example.root as _file0... (TFile *) 0x402fde6770. root [1] minimal_example->PrintXML(). Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. ### ROOT version. 6.28/04. ### How did you install ROOT? custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using? N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12967
https://github.com/root-project/root/issues/12967:1077,integrability,version,version,1077,"[RF] HistFactory workspaces incompatible between versions 6.26 and 6.28; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:. ```. Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour? Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce? Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash. root@2cd219ab253b:~/data# root --version. ROOT Version: 6.28/04. Built for linuxx8664gcc on May 24 2023, 17:37:00. From tags/v6-28-04@v6-28-04. root@2cd219ab253b:~/data# root -l workspace_example.root. root [0]. Attaching file workspace_example.root as _file0... (TFile *) 0x402fde6770. root [1] minimal_example->PrintXML(). Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. ### ROOT version. 6.28/04. ### How did you install ROOT? custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using? N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12967
https://github.com/root-project/root/issues/12967:1091,integrability,Version,Version,1091,"[RF] HistFactory workspaces incompatible between versions 6.26 and 6.28; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:. ```. Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour? Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce? Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash. root@2cd219ab253b:~/data# root --version. ROOT Version: 6.28/04. Built for linuxx8664gcc on May 24 2023, 17:37:00. From tags/v6-28-04@v6-28-04. root@2cd219ab253b:~/data# root -l workspace_example.root. root [0]. Attaching file workspace_example.root as _file0... (TFile *) 0x402fde6770. root [1] minimal_example->PrintXML(). Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. ### ROOT version. 6.28/04. ### How did you install ROOT? custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using? N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12967
https://github.com/root-project/root/issues/12967:1476,integrability,version,version,1476,"[RF] HistFactory workspaces incompatible between versions 6.26 and 6.28; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:. ```. Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour? Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce? Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash. root@2cd219ab253b:~/data# root --version. ROOT Version: 6.28/04. Built for linuxx8664gcc on May 24 2023, 17:37:00. From tags/v6-28-04@v6-28-04. root@2cd219ab253b:~/data# root -l workspace_example.root. root [0]. Attaching file workspace_example.root as _file0... (TFile *) 0x402fde6770. root [1] minimal_example->PrintXML(). Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. ### ROOT version. 6.28/04. ### How did you install ROOT? custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using? N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12967
https://github.com/root-project/root/issues/12967:28,interoperability,incompatib,incompatible,28,"[RF] HistFactory workspaces incompatible between versions 6.26 and 6.28; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:. ```. Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour? Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce? Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash. root@2cd219ab253b:~/data# root --version. ROOT Version: 6.28/04. Built for linuxx8664gcc on May 24 2023, 17:37:00. From tags/v6-28-04@v6-28-04. root@2cd219ab253b:~/data# root -l workspace_example.root. root [0]. Attaching file workspace_example.root as _file0... (TFile *) 0x402fde6770. root [1] minimal_example->PrintXML(). Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. ### ROOT version. 6.28/04. ### How did you install ROOT? custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using? N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12967
https://github.com/root-project/root/issues/12967:753,interoperability,messag,message,753,"[RF] HistFactory workspaces incompatible between versions 6.26 and 6.28; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:. ```. Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour? Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce? Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash. root@2cd219ab253b:~/data# root --version. ROOT Version: 6.28/04. Built for linuxx8664gcc on May 24 2023, 17:37:00. From tags/v6-28-04@v6-28-04. root@2cd219ab253b:~/data# root -l workspace_example.root. root [0]. Attaching file workspace_example.root as _file0... (TFile *) 0x402fde6770. root [1] minimal_example->PrintXML(). Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. ### ROOT version. 6.28/04. ### How did you install ROOT? custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using? N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12967
https://github.com/root-project/root/issues/12967:954,interoperability,xml,xmls,954,"[RF] HistFactory workspaces incompatible between versions 6.26 and 6.28; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:. ```. Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour? Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce? Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash. root@2cd219ab253b:~/data# root --version. ROOT Version: 6.28/04. Built for linuxx8664gcc on May 24 2023, 17:37:00. From tags/v6-28-04@v6-28-04. root@2cd219ab253b:~/data# root -l workspace_example.root. root [0]. Attaching file workspace_example.root as _file0... (TFile *) 0x402fde6770. root [1] minimal_example->PrintXML(). Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. ### ROOT version. 6.28/04. ### How did you install ROOT? custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using? N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12967
https://github.com/root-project/root/issues/12967:49,modifiability,version,versions,49,"[RF] HistFactory workspaces incompatible between versions 6.26 and 6.28; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:. ```. Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour? Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce? Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash. root@2cd219ab253b:~/data# root --version. ROOT Version: 6.28/04. Built for linuxx8664gcc on May 24 2023, 17:37:00. From tags/v6-28-04@v6-28-04. root@2cd219ab253b:~/data# root -l workspace_example.root. root [0]. Attaching file workspace_example.root as _file0... (TFile *) 0x402fde6770. root [1] minimal_example->PrintXML(). Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. ### ROOT version. 6.28/04. ### How did you install ROOT? custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using? N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12967
https://github.com/root-project/root/issues/12967:440,modifiability,scenario,scenario,440,"[RF] HistFactory workspaces incompatible between versions 6.26 and 6.28; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:. ```. Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour? Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce? Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash. root@2cd219ab253b:~/data# root --version. ROOT Version: 6.28/04. Built for linuxx8664gcc on May 24 2023, 17:37:00. From tags/v6-28-04@v6-28-04. root@2cd219ab253b:~/data# root -l workspace_example.root. root [0]. Attaching file workspace_example.root as _file0... (TFile *) 0x402fde6770. root [1] minimal_example->PrintXML(). Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. ### ROOT version. 6.28/04. ### How did you install ROOT? custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using? N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12967
https://github.com/root-project/root/issues/12967:631,modifiability,version,version,631,"[RF] HistFactory workspaces incompatible between versions 6.26 and 6.28; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:. ```. Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour? Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce? Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash. root@2cd219ab253b:~/data# root --version. ROOT Version: 6.28/04. Built for linuxx8664gcc on May 24 2023, 17:37:00. From tags/v6-28-04@v6-28-04. root@2cd219ab253b:~/data# root -l workspace_example.root. root [0]. Attaching file workspace_example.root as _file0... (TFile *) 0x402fde6770. root [1] minimal_example->PrintXML(). Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. ### ROOT version. 6.28/04. ### How did you install ROOT? custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using? N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12967
https://github.com/root-project/root/issues/12967:1077,modifiability,version,version,1077,"[RF] HistFactory workspaces incompatible between versions 6.26 and 6.28; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:. ```. Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour? Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce? Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash. root@2cd219ab253b:~/data# root --version. ROOT Version: 6.28/04. Built for linuxx8664gcc on May 24 2023, 17:37:00. From tags/v6-28-04@v6-28-04. root@2cd219ab253b:~/data# root -l workspace_example.root. root [0]. Attaching file workspace_example.root as _file0... (TFile *) 0x402fde6770. root [1] minimal_example->PrintXML(). Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. ### ROOT version. 6.28/04. ### How did you install ROOT? custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using? N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12967
https://github.com/root-project/root/issues/12967:1091,modifiability,Version,Version,1091,"[RF] HistFactory workspaces incompatible between versions 6.26 and 6.28; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:. ```. Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour? Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce? Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash. root@2cd219ab253b:~/data# root --version. ROOT Version: 6.28/04. Built for linuxx8664gcc on May 24 2023, 17:37:00. From tags/v6-28-04@v6-28-04. root@2cd219ab253b:~/data# root -l workspace_example.root. root [0]. Attaching file workspace_example.root as _file0... (TFile *) 0x402fde6770. root [1] minimal_example->PrintXML(). Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. ### ROOT version. 6.28/04. ### How did you install ROOT? custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using? N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12967
https://github.com/root-project/root/issues/12967:1476,modifiability,version,version,1476,"[RF] HistFactory workspaces incompatible between versions 6.26 and 6.28; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:. ```. Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour? Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce? Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash. root@2cd219ab253b:~/data# root --version. ROOT Version: 6.28/04. Built for linuxx8664gcc on May 24 2023, 17:37:00. From tags/v6-28-04@v6-28-04. root@2cd219ab253b:~/data# root -l workspace_example.root. root [0]. Attaching file workspace_example.root as _file0... (TFile *) 0x402fde6770. root [1] minimal_example->PrintXML(). Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. ### ROOT version. 6.28/04. ### How did you install ROOT? custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using? N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12967
https://github.com/root-project/root/issues/12967:329,performance,Error,Error,329,"[RF] HistFactory workspaces incompatible between versions 6.26 and 6.28; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:. ```. Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour? Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce? Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash. root@2cd219ab253b:~/data# root --version. ROOT Version: 6.28/04. Built for linuxx8664gcc on May 24 2023, 17:37:00. From tags/v6-28-04@v6-28-04. root@2cd219ab253b:~/data# root -l workspace_example.root. root [0]. Attaching file workspace_example.root as _file0... (TFile *) 0x402fde6770. root [1] minimal_example->PrintXML(). Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. ### ROOT version. 6.28/04. ### How did you install ROOT? custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using? N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12967
https://github.com/root-project/root/issues/12967:568,performance,error,error,568,"[RF] HistFactory workspaces incompatible between versions 6.26 and 6.28; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:. ```. Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour? Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce? Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash. root@2cd219ab253b:~/data# root --version. ROOT Version: 6.28/04. Built for linuxx8664gcc on May 24 2023, 17:37:00. From tags/v6-28-04@v6-28-04. root@2cd219ab253b:~/data# root -l workspace_example.root. root [0]. Attaching file workspace_example.root as _file0... (TFile *) 0x402fde6770. root [1] minimal_example->PrintXML(). Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. ### ROOT version. 6.28/04. ### How did you install ROOT? custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using? N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12967
https://github.com/root-project/root/issues/12967:747,performance,error,error,747,"[RF] HistFactory workspaces incompatible between versions 6.26 and 6.28; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:. ```. Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour? Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce? Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash. root@2cd219ab253b:~/data# root --version. ROOT Version: 6.28/04. Built for linuxx8664gcc on May 24 2023, 17:37:00. From tags/v6-28-04@v6-28-04. root@2cd219ab253b:~/data# root -l workspace_example.root. root [0]. Attaching file workspace_example.root as _file0... (TFile *) 0x402fde6770. root [1] minimal_example->PrintXML(). Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. ### ROOT version. 6.28/04. ### How did you install ROOT? custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using? N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12967
https://github.com/root-project/root/issues/12967:1369,performance,Error,Error,1369,"[RF] HistFactory workspaces incompatible between versions 6.26 and 6.28; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:. ```. Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour? Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce? Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash. root@2cd219ab253b:~/data# root --version. ROOT Version: 6.28/04. Built for linuxx8664gcc on May 24 2023, 17:37:00. From tags/v6-28-04@v6-28-04. root@2cd219ab253b:~/data# root -l workspace_example.root. root [0]. Attaching file workspace_example.root as _file0... (TFile *) 0x402fde6770. root [1] minimal_example->PrintXML(). Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. ### ROOT version. 6.28/04. ### How did you install ROOT? custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using? N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12967
https://github.com/root-project/root/issues/12967:329,safety,Error,Error,329,"[RF] HistFactory workspaces incompatible between versions 6.26 and 6.28; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:. ```. Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour? Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce? Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash. root@2cd219ab253b:~/data# root --version. ROOT Version: 6.28/04. Built for linuxx8664gcc on May 24 2023, 17:37:00. From tags/v6-28-04@v6-28-04. root@2cd219ab253b:~/data# root -l workspace_example.root. root [0]. Attaching file workspace_example.root as _file0... (TFile *) 0x402fde6770. root [1] minimal_example->PrintXML(). Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. ### ROOT version. 6.28/04. ### How did you install ROOT? custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using? N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12967
https://github.com/root-project/root/issues/12967:568,safety,error,error,568,"[RF] HistFactory workspaces incompatible between versions 6.26 and 6.28; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:. ```. Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour? Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce? Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash. root@2cd219ab253b:~/data# root --version. ROOT Version: 6.28/04. Built for linuxx8664gcc on May 24 2023, 17:37:00. From tags/v6-28-04@v6-28-04. root@2cd219ab253b:~/data# root -l workspace_example.root. root [0]. Attaching file workspace_example.root as _file0... (TFile *) 0x402fde6770. root [1] minimal_example->PrintXML(). Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. ### ROOT version. 6.28/04. ### How did you install ROOT? custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using? N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12967
https://github.com/root-project/root/issues/12967:747,safety,error,error,747,"[RF] HistFactory workspaces incompatible between versions 6.26 and 6.28; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:. ```. Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour? Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce? Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash. root@2cd219ab253b:~/data# root --version. ROOT Version: 6.28/04. Built for linuxx8664gcc on May 24 2023, 17:37:00. From tags/v6-28-04@v6-28-04. root@2cd219ab253b:~/data# root -l workspace_example.root. root [0]. Attaching file workspace_example.root as _file0... (TFile *) 0x402fde6770. root [1] minimal_example->PrintXML(). Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. ### ROOT version. 6.28/04. ### How did you install ROOT? custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using? N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12967
https://github.com/root-project/root/issues/12967:1369,safety,Error,Error,1369,"[RF] HistFactory workspaces incompatible between versions 6.26 and 6.28; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:. ```. Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour? Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce? Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash. root@2cd219ab253b:~/data# root --version. ROOT Version: 6.28/04. Built for linuxx8664gcc on May 24 2023, 17:37:00. From tags/v6-28-04@v6-28-04. root@2cd219ab253b:~/data# root -l workspace_example.root. root [0]. Attaching file workspace_example.root as _file0... (TFile *) 0x402fde6770. root [1] minimal_example->PrintXML(). Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. ### ROOT version. 6.28/04. ### How did you install ROOT? custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using? N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12967
https://github.com/root-project/root/issues/12967:1660,testability,context,context,1660,"[RF] HistFactory workspaces incompatible between versions 6.26 and 6.28; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:. ```. Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour? Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce? Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash. root@2cd219ab253b:~/data# root --version. ROOT Version: 6.28/04. Built for linuxx8664gcc on May 24 2023, 17:37:00. From tags/v6-28-04@v6-28-04. root@2cd219ab253b:~/data# root -l workspace_example.root. root [0]. Attaching file workspace_example.root as _file0... (TFile *) 0x402fde6770. root [1] minimal_example->PrintXML(). Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. ### ROOT version. 6.28/04. ### How did you install ROOT? custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using? N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12967
https://github.com/root-project/root/issues/12967:329,usability,Error,Error,329,"[RF] HistFactory workspaces incompatible between versions 6.26 and 6.28; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:. ```. Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour? Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce? Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash. root@2cd219ab253b:~/data# root --version. ROOT Version: 6.28/04. Built for linuxx8664gcc on May 24 2023, 17:37:00. From tags/v6-28-04@v6-28-04. root@2cd219ab253b:~/data# root -l workspace_example.root. root [0]. Attaching file workspace_example.root as _file0... (TFile *) 0x402fde6770. root [1] minimal_example->PrintXML(). Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. ### ROOT version. 6.28/04. ### How did you install ROOT? custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using? N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12967
https://github.com/root-project/root/issues/12967:568,usability,error,error,568,"[RF] HistFactory workspaces incompatible between versions 6.26 and 6.28; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:. ```. Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour? Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce? Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash. root@2cd219ab253b:~/data# root --version. ROOT Version: 6.28/04. Built for linuxx8664gcc on May 24 2023, 17:37:00. From tags/v6-28-04@v6-28-04. root@2cd219ab253b:~/data# root -l workspace_example.root. root [0]. Attaching file workspace_example.root as _file0... (TFile *) 0x402fde6770. root [1] minimal_example->PrintXML(). Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. ### ROOT version. 6.28/04. ### How did you install ROOT? custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using? N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12967
https://github.com/root-project/root/issues/12967:665,usability,behavi,behaviour,665,"[RF] HistFactory workspaces incompatible between versions 6.26 and 6.28; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:. ```. Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour? Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce? Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash. root@2cd219ab253b:~/data# root --version. ROOT Version: 6.28/04. Built for linuxx8664gcc on May 24 2023, 17:37:00. From tags/v6-28-04@v6-28-04. root@2cd219ab253b:~/data# root -l workspace_example.root. root [0]. Attaching file workspace_example.root as _file0... (TFile *) 0x402fde6770. root [1] minimal_example->PrintXML(). Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. ### ROOT version. 6.28/04. ### How did you install ROOT? custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using? N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12967
https://github.com/root-project/root/issues/12967:747,usability,error,error,747,"[RF] HistFactory workspaces incompatible between versions 6.26 and 6.28; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:. ```. Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour? Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce? Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash. root@2cd219ab253b:~/data# root --version. ROOT Version: 6.28/04. Built for linuxx8664gcc on May 24 2023, 17:37:00. From tags/v6-28-04@v6-28-04. root@2cd219ab253b:~/data# root -l workspace_example.root. root [0]. Attaching file workspace_example.root as _file0... (TFile *) 0x402fde6770. root [1] minimal_example->PrintXML(). Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. ### ROOT version. 6.28/04. ### How did you install ROOT? custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using? N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12967
https://github.com/root-project/root/issues/12967:781,usability,clear,clear,781,"[RF] HistFactory workspaces incompatible between versions 6.26 and 6.28; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:. ```. Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour? Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce? Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash. root@2cd219ab253b:~/data# root --version. ROOT Version: 6.28/04. Built for linuxx8664gcc on May 24 2023, 17:37:00. From tags/v6-28-04@v6-28-04. root@2cd219ab253b:~/data# root -l workspace_example.root. root [0]. Attaching file workspace_example.root as _file0... (TFile *) 0x402fde6770. root [1] minimal_example->PrintXML(). Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. ### ROOT version. 6.28/04. ### How did you install ROOT? custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using? N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12967
https://github.com/root-project/root/issues/12967:1369,usability,Error,Error,1369,"[RF] HistFactory workspaces incompatible between versions 6.26 and 6.28; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:. ```. Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour? Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce? Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash. root@2cd219ab253b:~/data# root --version. ROOT Version: 6.28/04. Built for linuxx8664gcc on May 24 2023, 17:37:00. From tags/v6-28-04@v6-28-04. root@2cd219ab253b:~/data# root -l workspace_example.root. root [0]. Attaching file workspace_example.root as _file0... (TFile *) 0x402fde6770. root [1] minimal_example->PrintXML(). Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. ### ROOT version. 6.28/04. ### How did you install ROOT? custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using? N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12967
https://github.com/root-project/root/issues/12967:1524,usability,custom,custom,1524,"[RF] HistFactory workspaces incompatible between versions 6.26 and 6.28; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:. ```. Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour? Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce? Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash. root@2cd219ab253b:~/data# root --version. ROOT Version: 6.28/04. Built for linuxx8664gcc on May 24 2023, 17:37:00. From tags/v6-28-04@v6-28-04. root@2cd219ab253b:~/data# root -l workspace_example.root. root [0]. Attaching file workspace_example.root as _file0... (TFile *) 0x402fde6770. root [1] minimal_example->PrintXML(). Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux. ```. ### ROOT version. 6.28/04. ### How did you install ROOT? custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using? N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12967
https://github.com/root-project/root/pull/12968:0,deployability,Updat,Update,0,Update masses of Omega_c0 and Xi_cc++ according to PDG 2022; See:. - https://pdg.lbl.gov/2022/listings/rpp2022-list-omegac-zero.pdf. - https://pdg.lbl.gov/2022/listings/rpp2022-list-xicc-plus-plus.pdf,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12968
https://github.com/root-project/root/pull/12968:0,safety,Updat,Update,0,Update masses of Omega_c0 and Xi_cc++ according to PDG 2022; See:. - https://pdg.lbl.gov/2022/listings/rpp2022-list-omegac-zero.pdf. - https://pdg.lbl.gov/2022/listings/rpp2022-list-xicc-plus-plus.pdf,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12968
https://github.com/root-project/root/pull/12968:0,security,Updat,Update,0,Update masses of Omega_c0 and Xi_cc++ according to PDG 2022; See:. - https://pdg.lbl.gov/2022/listings/rpp2022-list-omegac-zero.pdf. - https://pdg.lbl.gov/2022/listings/rpp2022-list-xicc-plus-plus.pdf,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12968
https://github.com/root-project/root/pull/12969:75,safety,compl,completes,75,[RF][HF] Add missing LinkDefs for systematics classes in HistFactory; This completes the list of LinkDef entries for the classes in `RooStats/HistFactory/Systematics.h`. Closes #12967.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12969
https://github.com/root-project/root/pull/12969:75,security,compl,completes,75,[RF][HF] Add missing LinkDefs for systematics classes in HistFactory; This completes the list of LinkDef entries for the classes in `RooStats/HistFactory/Systematics.h`. Closes #12967.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12969
https://github.com/root-project/root/pull/12969:170,usability,Close,Closes,170,[RF][HF] Add missing LinkDefs for systematics classes in HistFactory; This completes the list of LinkDef entries for the classes in `RooStats/HistFactory/Systematics.h`. Closes #12967.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12969
https://github.com/root-project/root/pull/12970:59,deployability,build,build,59,"[CMake] Add warning for the `minuit2_omp` or `minuit2_mpi` build options; The options `minuit2_omp` and `minuit2_mpi` are dangerous because it means you can only minimize thread-safe functions with Minuit2. If you want Minuit2 with OpenMP or MPI support, it is better to build Minuit2 standalone. Related to #12940.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12970
https://github.com/root-project/root/pull/12970:271,deployability,build,build,271,"[CMake] Add warning for the `minuit2_omp` or `minuit2_mpi` build options; The options `minuit2_omp` and `minuit2_mpi` are dangerous because it means you can only minimize thread-safe functions with Minuit2. If you want Minuit2 with OpenMP or MPI support, it is better to build Minuit2 standalone. Related to #12940.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12970
https://github.com/root-project/root/pull/12970:178,safety,safe,safe,178,"[CMake] Add warning for the `minuit2_omp` or `minuit2_mpi` build options; The options `minuit2_omp` and `minuit2_mpi` are dangerous because it means you can only minimize thread-safe functions with Minuit2. If you want Minuit2 with OpenMP or MPI support, it is better to build Minuit2 standalone. Related to #12940.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12970
https://github.com/root-project/root/pull/12970:162,usability,minim,minimize,162,"[CMake] Add warning for the `minuit2_omp` or `minuit2_mpi` build options; The options `minuit2_omp` and `minuit2_mpi` are dangerous because it means you can only minimize thread-safe functions with Minuit2. If you want Minuit2 with OpenMP or MPI support, it is better to build Minuit2 standalone. Related to #12940.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12970
https://github.com/root-project/root/pull/12970:246,usability,support,support,246,"[CMake] Add warning for the `minuit2_omp` or `minuit2_mpi` build options; The options `minuit2_omp` and `minuit2_mpi` are dangerous because it means you can only minimize thread-safe functions with Minuit2. If you want Minuit2 with OpenMP or MPI support, it is better to build Minuit2 standalone. Related to #12940.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12970
https://github.com/root-project/root/pull/12971:2600,availability,error,errors,2600,"ToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5203,availability,state,stateless,5203,"Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:6907,availability,error,error,6907,"er with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter. 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`. faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:48,deployability,patch,patches,48,"[v628][RF] Backports of RooFit PRs to `v6-28-00-patches`: Part 21; This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12877. 2. https://github.com/root-project/root/pull/12896. 3. https://github.com/root-project/root/pull/12838. 4. https://github.com/root-project/root/pull/12909. 5. https://github.com/root-project/root/pull/12916. 6. https://github.com/root-project/root/pull/12921. 7. https://github.com/root-project/root/pull/12927. 8. https://github.com/root-project/root/pull/12925. 9. https://github.com/root-project/root/pull/12928. 10. https://github.com/root-project/root/pull/12938. 11. https://github.com/root-project/root/pull/12936. 12. https://github.com/root-project/root/pull/12969. 13. https://github.com/root-project/root/pull/12962. 14. https://github.com/root-project/root/pull/12973. 15. https://github.com/root-project/root/pull/12974. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:. https://github.com/root-project/root/pull/12905. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `tofillout`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code g",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:153,deployability,patch,patches,153,"[v628][RF] Backports of RooFit PRs to `v6-28-00-patches`: Part 21; This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12877. 2. https://github.com/root-project/root/pull/12896. 3. https://github.com/root-project/root/pull/12838. 4. https://github.com/root-project/root/pull/12909. 5. https://github.com/root-project/root/pull/12916. 6. https://github.com/root-project/root/pull/12921. 7. https://github.com/root-project/root/pull/12927. 8. https://github.com/root-project/root/pull/12925. 9. https://github.com/root-project/root/pull/12928. 10. https://github.com/root-project/root/pull/12938. 11. https://github.com/root-project/root/pull/12936. 12. https://github.com/root-project/root/pull/12969. 13. https://github.com/root-project/root/pull/12962. 14. https://github.com/root-project/root/pull/12973. 15. https://github.com/root-project/root/pull/12974. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:. https://github.com/root-project/root/pull/12905. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `tofillout`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code g",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:1221,deployability,patch,patches,1221,"github.com/root-project/root/pull/12896. 3. https://github.com/root-project/root/pull/12838. 4. https://github.com/root-project/root/pull/12909. 5. https://github.com/root-project/root/pull/12916. 6. https://github.com/root-project/root/pull/12921. 7. https://github.com/root-project/root/pull/12927. 8. https://github.com/root-project/root/pull/12925. 9. https://github.com/root-project/root/pull/12928. 10. https://github.com/root-project/root/pull/12938. 11. https://github.com/root-project/root/pull/12936. 12. https://github.com/root-project/root/pull/12969. 13. https://github.com/root-project/root/pull/12962. 14. https://github.com/root-project/root/pull/12973. 15. https://github.com/root-project/root/pull/12974. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:. https://github.com/root-project/root/pull/12905. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `tofillout`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:2630,deployability,build,buildArg,2630,"exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:3647,deployability,observ,observables,3647,"05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:4067,deployability,version,version,4067,"ation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:4297,deployability,manag,management,4297,"RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:4383,deployability,build,buildLoopBegin,4383,"ut scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last no",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:4809,deployability,depend,dependency,4809,":cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code moder",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5040,deployability,integr,integrals,5040,"7b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5111,deployability,integr,integrals,5111,"3d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5269,deployability,integr,integration,5269,"352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing poten",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5741,deployability,manag,management,5741," of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:6038,deployability,Compos,Composition,6038,"grals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:6185,deployability,modul,modules,6185,"at stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overlo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:6197,deployability,modul,modules,6197,"e stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with outp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:6254,deployability,modul,modules,6254,"e analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter. 72cfdc9192 [RF] Bring back `RooStats::Feldm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:6455,deployability,observ,observables,6455,"er with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter. 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`. faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:6681,deployability,modul,modules,6681,"er with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter. 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`. faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:6795,deployability,build,building,6795,"er with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter. 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`. faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:3859,energy efficiency,Optim,Optimize,3859,"r. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interfa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:4297,energy efficiency,manag,management,4297,"RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5741,energy efficiency,manag,management,5741," of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:2061,integrability,pub,public,2061,"root-project/root/pull/12905. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `tofillout`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in cod",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:2075,integrability,interfac,interface,2075,"t/pull/12905. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `tofillout`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:2468,integrability,pub,public,2468,"] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Gene",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:2828,integrability,Batch,BatchMode,2828,"] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to Ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:3500,integrability,Batch,BatchMode,3500,"2a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:3624,integrability,Batch,BatchMode,3624,":buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper te",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:4067,integrability,version,version,4067,"ation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:4422,integrability,translat,translate,4422,"oops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evalua",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:4456,integrability,translat,translate,4456," [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:4809,integrability,depend,dependency,4809,":cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code moder",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:4820,integrability,pub,public,4820,"e()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:4856,integrability,interfac,interface,4856,"timize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add int",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5040,integrability,integr,integrals,5040,"7b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5111,integrability,integr,integrals,5111,"3d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5203,integrability,state,stateless,5203,"Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5269,integrability,integr,integration,5269,"352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing poten",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5592,integrability,interfac,interface,5592,"4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5876,integrability,interfac,interface,5876,"ion for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:6847,integrability,wrap,wrapper,6847,"er with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter. 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`. faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:2075,interoperability,interfac,interface,2075,"t/pull/12905. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `tofillout`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:3157,interoperability,Format,Format,3157,"AbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient outp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:4227,interoperability,Format,Format,4227,"] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation de",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:4422,interoperability,translat,translate,4422,"oops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evalua",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:4456,interoperability,translat,translate,4456," [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:4856,interoperability,interfac,interface,4856,"timize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add int",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5040,interoperability,integr,integrals,5040,"7b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5111,interoperability,integr,integrals,5111,"3d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5269,interoperability,integr,integration,5269,"352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing poten",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5592,interoperability,interfac,interface,5592,"4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5624,interoperability,format,format,5624,"test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5876,interoperability,interfac,interface,5876,"ion for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:6847,interoperability,wrapper,wrapper,6847,"er with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter. 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`. faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:1408,modifiability,exten,extended,1408,"ll/12916. 6. https://github.com/root-project/root/pull/12921. 7. https://github.com/root-project/root/pull/12927. 8. https://github.com/root-project/root/pull/12925. 9. https://github.com/root-project/root/pull/12928. 10. https://github.com/root-project/root/pull/12938. 11. https://github.com/root-project/root/pull/12936. 12. https://github.com/root-project/root/pull/12969. 13. https://github.com/root-project/root/pull/12962. 14. https://github.com/root-project/root/pull/12973. 15. https://github.com/root-project/root/pull/12974. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:. https://github.com/root-project/root/pull/12905. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `tofillout`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template sp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:2075,modifiability,interfac,interface,2075,"t/pull/12905. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `tofillout`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:3016,modifiability,variab,variable,3016,"e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Rem",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:3393,modifiability,scal,scalar,3393,"Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:3400,modifiability,interm,intermediate,3400,"ate specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by rec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:3482,modifiability,reu,reuse,3482,"e` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:3618,modifiability,Reu,Reuse,3618,"Context::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:4067,modifiability,version,version,4067,"ation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:4809,modifiability,depend,dependency,4809,":cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code moder",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:4856,modifiability,interfac,interface,4856,"timize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add int",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5040,modifiability,integr,integrals,5040,"7b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5111,modifiability,integr,integrals,5111,"3d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5269,modifiability,integr,integration,5269,"352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing poten",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5592,modifiability,interfac,interface,5592,"4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5876,modifiability,interfac,interface,5876,"ion for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:6038,modifiability,Compos,Composition,6038,"grals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:6055,modifiability,inherit,inheritance,6055,"his commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code fo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:6185,modifiability,modul,modules,6185,"at stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overlo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:6197,modifiability,modul,modules,6197,"e stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with outp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:6254,modifiability,modul,modules,6254,"e analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter. 72cfdc9192 [RF] Bring back `RooStats::Feldm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:6478,modifiability,paramet,parameter,6478,"er with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter. 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`. faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:6681,modifiability,modul,modules,6681,"er with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter. 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`. faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:7204,modifiability,paramet,parameter,7204,"er with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter. 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`. faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:2600,performance,error,errors,2600,"ToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:2828,performance,Batch,BatchMode,2828,"] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to Ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:3500,performance,Batch,BatchMode,3500,"2a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:3624,performance,Batch,BatchMode,3624,":buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper te",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:3859,performance,Optimiz,Optimize,3859,"r. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interfa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5734,performance,memor,memory,5734,"isibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:6907,performance,error,error,6907,"er with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter. 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`. faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5040,reliability,integr,integrals,5040,"7b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5111,reliability,integr,integrals,5111,"3d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5269,reliability,integr,integration,5269,"352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing poten",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:48,safety,patch,patches,48,"[v628][RF] Backports of RooFit PRs to `v6-28-00-patches`: Part 21; This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12877. 2. https://github.com/root-project/root/pull/12896. 3. https://github.com/root-project/root/pull/12838. 4. https://github.com/root-project/root/pull/12909. 5. https://github.com/root-project/root/pull/12916. 6. https://github.com/root-project/root/pull/12921. 7. https://github.com/root-project/root/pull/12927. 8. https://github.com/root-project/root/pull/12925. 9. https://github.com/root-project/root/pull/12928. 10. https://github.com/root-project/root/pull/12938. 11. https://github.com/root-project/root/pull/12936. 12. https://github.com/root-project/root/pull/12969. 13. https://github.com/root-project/root/pull/12962. 14. https://github.com/root-project/root/pull/12973. 15. https://github.com/root-project/root/pull/12974. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:. https://github.com/root-project/root/pull/12905. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `tofillout`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code g",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:153,safety,patch,patches,153,"[v628][RF] Backports of RooFit PRs to `v6-28-00-patches`: Part 21; This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12877. 2. https://github.com/root-project/root/pull/12896. 3. https://github.com/root-project/root/pull/12838. 4. https://github.com/root-project/root/pull/12909. 5. https://github.com/root-project/root/pull/12916. 6. https://github.com/root-project/root/pull/12921. 7. https://github.com/root-project/root/pull/12927. 8. https://github.com/root-project/root/pull/12925. 9. https://github.com/root-project/root/pull/12928. 10. https://github.com/root-project/root/pull/12938. 11. https://github.com/root-project/root/pull/12936. 12. https://github.com/root-project/root/pull/12969. 13. https://github.com/root-project/root/pull/12962. 14. https://github.com/root-project/root/pull/12973. 15. https://github.com/root-project/root/pull/12974. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:. https://github.com/root-project/root/pull/12905. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `tofillout`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code g",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:1221,safety,patch,patches,1221,"github.com/root-project/root/pull/12896. 3. https://github.com/root-project/root/pull/12838. 4. https://github.com/root-project/root/pull/12909. 5. https://github.com/root-project/root/pull/12916. 6. https://github.com/root-project/root/pull/12921. 7. https://github.com/root-project/root/pull/12927. 8. https://github.com/root-project/root/pull/12925. 9. https://github.com/root-project/root/pull/12928. 10. https://github.com/root-project/root/pull/12938. 11. https://github.com/root-project/root/pull/12936. 12. https://github.com/root-project/root/pull/12969. 13. https://github.com/root-project/root/pull/12962. 14. https://github.com/root-project/root/pull/12973. 15. https://github.com/root-project/root/pull/12974. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:. https://github.com/root-project/root/pull/12905. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `tofillout`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:1634,safety,except,exceptions,1634,"://github.com/root-project/root/pull/12938. 11. https://github.com/root-project/root/pull/12936. 12. https://github.com/root-project/root/pull/12969. 13. https://github.com/root-project/root/pull/12962. 14. https://github.com/root-project/root/pull/12973. 15. https://github.com/root-project/root/pull/12974. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:. https://github.com/root-project/root/pull/12905. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `tofillout`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:1874,safety,test,test,1874,"t/root/pull/12973. 15. https://github.com/root-project/root/pull/12974. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:. https://github.com/root-project/root/pull/12905. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `tofillout`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:2600,safety,error,errors,2600,"ToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:2669,safety,Avoid,Avoid,2669,"xisting objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in Roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:2696,safety,test,testRooFuncWrapper,2696,"Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Impro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:2975,safety,test,testRooFuncWrapper,2975,"ts in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementatio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:4172,safety,test,testRooFuncWrapper,4172,") and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:4297,safety,manag,management,4297,"RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:4368,safety,Avoid,Avoid,4368,"bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:4627,safety,test,test,4627,"Mode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-forma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:4809,safety,depend,dependency,4809,":cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code moder",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5150,safety,test,test,5150,"ent output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5632,safety,test,testRooDataHist,5632,"is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5689,safety,test,test,5689,"tion from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules fo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5741,safety,manag,management,5741," of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5992,safety,test,tests,5992,"RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:6006,safety,Test,TestStatistics,6006,"r differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:6185,safety,modul,modules,6185,"at stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overlo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:6197,safety,modul,modules,6197,"e stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with outp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:6254,safety,modul,modules,6254,"e analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter. 72cfdc9192 [RF] Bring back `RooStats::Feldm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:6523,safety,Test,Test,6523,"er with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter. 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`. faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:6567,safety,test,testRooFuncWrapper,6567,"er with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter. 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`. faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:6681,safety,modul,modules,6681,"er with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter. 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`. faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:6907,safety,error,error,6907,"er with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter. 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`. faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:48,security,patch,patches,48,"[v628][RF] Backports of RooFit PRs to `v6-28-00-patches`: Part 21; This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12877. 2. https://github.com/root-project/root/pull/12896. 3. https://github.com/root-project/root/pull/12838. 4. https://github.com/root-project/root/pull/12909. 5. https://github.com/root-project/root/pull/12916. 6. https://github.com/root-project/root/pull/12921. 7. https://github.com/root-project/root/pull/12927. 8. https://github.com/root-project/root/pull/12925. 9. https://github.com/root-project/root/pull/12928. 10. https://github.com/root-project/root/pull/12938. 11. https://github.com/root-project/root/pull/12936. 12. https://github.com/root-project/root/pull/12969. 13. https://github.com/root-project/root/pull/12962. 14. https://github.com/root-project/root/pull/12973. 15. https://github.com/root-project/root/pull/12974. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:. https://github.com/root-project/root/pull/12905. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `tofillout`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code g",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:153,security,patch,patches,153,"[v628][RF] Backports of RooFit PRs to `v6-28-00-patches`: Part 21; This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. 1. https://github.com/root-project/root/pull/12877. 2. https://github.com/root-project/root/pull/12896. 3. https://github.com/root-project/root/pull/12838. 4. https://github.com/root-project/root/pull/12909. 5. https://github.com/root-project/root/pull/12916. 6. https://github.com/root-project/root/pull/12921. 7. https://github.com/root-project/root/pull/12927. 8. https://github.com/root-project/root/pull/12925. 9. https://github.com/root-project/root/pull/12928. 10. https://github.com/root-project/root/pull/12938. 11. https://github.com/root-project/root/pull/12936. 12. https://github.com/root-project/root/pull/12969. 13. https://github.com/root-project/root/pull/12962. 14. https://github.com/root-project/root/pull/12973. 15. https://github.com/root-project/root/pull/12974. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:. https://github.com/root-project/root/pull/12905. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `tofillout`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code g",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:1221,security,patch,patches,1221,"github.com/root-project/root/pull/12896. 3. https://github.com/root-project/root/pull/12838. 4. https://github.com/root-project/root/pull/12909. 5. https://github.com/root-project/root/pull/12916. 6. https://github.com/root-project/root/pull/12921. 7. https://github.com/root-project/root/pull/12927. 8. https://github.com/root-project/root/pull/12925. 9. https://github.com/root-project/root/pull/12928. 10. https://github.com/root-project/root/pull/12938. 11. https://github.com/root-project/root/pull/12936. 12. https://github.com/root-project/root/pull/12969. 13. https://github.com/root-project/root/pull/12962. 14. https://github.com/root-project/root/pull/12973. 15. https://github.com/root-project/root/pull/12974. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:. https://github.com/root-project/root/pull/12905. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `tofillout`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5040,security,integr,integrals,5040,"7b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5111,security,integr,integrals,5111,"3d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5269,security,integr,integration,5269,"352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing poten",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:1874,testability,test,test,1874,"t/root/pull/12973. 15. https://github.com/root-project/root/pull/12974. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:. https://github.com/root-project/root/pull/12905. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `tofillout`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:1969,testability,simul,simultaneous,1969,"om/root-project/root/issues/12319. Link to the previous backport PR:. https://github.com/root-project/root/pull/12905. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `tofillout`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:2696,testability,test,testRooFuncWrapper,2696,"Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Impro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:2975,testability,test,testRooFuncWrapper,2975,"ts in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementatio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:3647,testability,observ,observables,3647,"05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:4172,testability,test,testRooFuncWrapper,4172,") and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:4627,testability,test,test,4627,"Mode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-forma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:4809,testability,depend,dependency,4809,":cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code moder",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5040,testability,integr,integrals,5040,"7b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5111,testability,integr,integrals,5111,"3d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5130,testability,mock,mock,5130,"wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need fo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5150,testability,test,test,5150,"ent output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5269,testability,integr,integration,5269,"352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing poten",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5632,testability,test,testRooDataHist,5632,"is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5689,testability,test,test,5689,"tion from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules fo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5992,testability,test,tests,5992,"RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:6006,testability,Test,TestStatistics,6006,"r differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:6455,testability,observ,observables,6455,"er with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter. 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`. faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:6523,testability,Test,Test,6523,"er with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter. 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`. faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:6567,testability,test,testRooFuncWrapper,6567,"er with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter. 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`. faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:1294,usability,support,support,1294,"ct/root/pull/12838. 4. https://github.com/root-project/root/pull/12909. 5. https://github.com/root-project/root/pull/12916. 6. https://github.com/root-project/root/pull/12921. 7. https://github.com/root-project/root/pull/12927. 8. https://github.com/root-project/root/pull/12925. 9. https://github.com/root-project/root/pull/12928. 10. https://github.com/root-project/root/pull/12938. 11. https://github.com/root-project/root/pull/12936. 12. https://github.com/root-project/root/pull/12969. 13. https://github.com/root-project/root/pull/12962. 14. https://github.com/root-project/root/pull/12973. 15. https://github.com/root-project/root/pull/12974. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:. https://github.com/root-project/root/pull/12905. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `tofillout`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated Ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:1353,usability,support,support,1353,"/pull/12909. 5. https://github.com/root-project/root/pull/12916. 6. https://github.com/root-project/root/pull/12921. 7. https://github.com/root-project/root/pull/12927. 8. https://github.com/root-project/root/pull/12925. 9. https://github.com/root-project/root/pull/12928. 10. https://github.com/root-project/root/pull/12938. 11. https://github.com/root-project/root/pull/12936. 12. https://github.com/root-project/root/pull/12969. 13. https://github.com/root-project/root/pull/12962. 14. https://github.com/root-project/root/pull/12973. 15. https://github.com/root-project/root/pull/12974. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:. https://github.com/root-project/root/pull/12905. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `tofillout`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:1400,usability,Support,Support,1400,"/root/pull/12916. 6. https://github.com/root-project/root/pull/12921. 7. https://github.com/root-project/root/pull/12927. 8. https://github.com/root-project/root/pull/12925. 9. https://github.com/root-project/root/pull/12928. 10. https://github.com/root-project/root/pull/12938. 11. https://github.com/root-project/root/pull/12936. 12. https://github.com/root-project/root/pull/12969. 13. https://github.com/root-project/root/pull/12962. 14. https://github.com/root-project/root/pull/12973. 15. https://github.com/root-project/root/pull/12974. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:. https://github.com/root-project/root/pull/12905. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `tofillout`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark tem",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:1961,usability,Support,Support,1961,"//github.com/root-project/root/issues/12319. Link to the previous backport PR:. https://github.com/root-project/root/pull/12905. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `tofillout`). ```txt. 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson. a493684a19 [RF] Add Code-Squash AD support for the Hist* classes. cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD. 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`. f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWork",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:2600,usability,error,errors,2600,"ToZero()`. cf98956266 [RF] Add exceptions to setter methods for non-existing objects. 1cc5ec46c8 [RF] Forbid resetting RooFormula. b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:2740,usability,support,support,2740," [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`. b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test. 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Deta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:2902,usability,support,support,2902,"eneration issues with RooAdd* classes. 3dcea7036a [RF] Support simultaneous fits in NLL code generation. a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface. 3d01cd2e8f [RF] Remove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSamePa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:3101,usability,support,support,3101,"ove deprecated RooAbsString. 059af6d55a [RF] Remove RooAbsRootFinder. bdc19e090e [RF] Get rid of RooScaledFunc. 88dbb6ad17 [RF] Make RooGenProdProj private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:3248,usability,support,support,3248," private. 94ee158ddc [RF] Remove deprecated RooCatType. d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h. f78558eb0a [RF] Mark template specialization as inline. ca29ccf161 [RF] Some cleanup of public `roofitcore` classes. 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code. 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads. 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`. 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum]. 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar. 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma. f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`. b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation. 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf. 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files. 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:4253,usability,command,command,4253,"or RooPolyVar and RooPolynomial. e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions. 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code. 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing. 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file. 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector. 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`. d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers. cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`. 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers. f4fc140268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enab",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5003,usability,support,support,5003,"0268 [RF] Remove RooMomentMorphND. d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5078,usability,support,support,5078,"of `RooRealVar` from 9 to 10. 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper. 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument. 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext. ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(). c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew. 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation. c51376731b [RF][NFC] Fix typo. 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off. 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit. 98d004c200 [RF] Fix visibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5734,usability,memor,memory,5734,"isibility of the res/ directories. e97347056c [RF] Make RooBatchCompute dependency public. 4483b01b7f [RF] Add initial interface and implementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:5866,usability,minim,minimizer,5866,"mplementation for code-squashing. f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer. 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details. 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars. fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:6534,usability,prototyp,prototype,6534,"er with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter. 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`. faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12971:6907,usability,error,error,6907,"er with ID of last normSet. 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar. bf4990c5d4 [RF] Exclude RooHistError from IO. 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface. f355c3ced4 [RF] Code-format `testRooDataHist.cxx`. 3fd99f7679 [RF] Enable AD code-gen test for RooFit. a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext. 1367091202 [RF] Code modernization of RooAbsReal. 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper. cf88615b6e [RF] Improve code in `MinuitFcnGrad`. 17bac5528b [RF] Code improvements in tests for new TestStatistics. afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations. 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method. 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252). 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`. 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'. 5964158260 [RF] Add observables as another parameter in RooFuncWrapper. cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`. 333e857cc6 Add AD based derivatives for RooFuncWrapper. 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C. fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT. 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit. f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`. cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&. 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8. a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`. 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter. 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`. faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12971
https://github.com/root-project/root/pull/12973:80,safety,accid,accidentally,80,"[RF][HF] Remove commented-out `Systematic` class from HistFactory; Yesterday, I accidentally added a LinkDef entry for `RooStats::HistFactory::Systematic` (2607947ee3) as I didn't realize that this class was commented out. This commit removes this LinkDef entry again, and removes the commented-out class declaration such that these mistakes don't happen again. Follows up on #12969.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12973
https://github.com/root-project/root/pull/12974:1533,availability,servic,services,1533,"[CMake] Add `-Wno-deprecated-non-prototype` to build unuran with Clang; This fixes some warnings seen in the nighlies:. ```. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:277:45: warning: passing arguments to '_unur_pinv_cubic_hermite_is_monotone' without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ! _unur_pinv_cubic_hermite_is_monotone(gen,ui,zi,xval)). ^. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:79:12: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. static int _unur_pinv_cubic_hermite_is_monotone();. ^. void. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:316:1: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. _unur_pinv_cubic_hermite_is_monotone(struct unur_gen *gen, double *ui, double *zi, double *xval). ^. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12974
https://github.com/root-project/root/pull/12974:47,deployability,build,build,47,"[CMake] Add `-Wno-deprecated-non-prototype` to build unuran with Clang; This fixes some warnings seen in the nighlies:. ```. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:277:45: warning: passing arguments to '_unur_pinv_cubic_hermite_is_monotone' without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ! _unur_pinv_cubic_hermite_is_monotone(gen,ui,zi,xval)). ^. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:79:12: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. static int _unur_pinv_cubic_hermite_is_monotone();. ^. void. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:316:1: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. _unur_pinv_cubic_hermite_is_monotone(struct unur_gen *gen, double *ui, double *zi, double *xval). ^. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12974
https://github.com/root-project/root/pull/12974:168,deployability,build,build,168,"[CMake] Add `-Wno-deprecated-non-prototype` to build unuran with Clang; This fixes some warnings seen in the nighlies:. ```. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:277:45: warning: passing arguments to '_unur_pinv_cubic_hermite_is_monotone' without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ! _unur_pinv_cubic_hermite_is_monotone(gen,ui,zi,xval)). ^. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:79:12: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. static int _unur_pinv_cubic_hermite_is_monotone();. ^. void. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:316:1: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. _unur_pinv_cubic_hermite_is_monotone(struct unur_gen *gen, double *ui, double *zi, double *xval). ^. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12974
https://github.com/root-project/root/pull/12974:212,deployability,build,build,212,"[CMake] Add `-Wno-deprecated-non-prototype` to build unuran with Clang; This fixes some warnings seen in the nighlies:. ```. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:277:45: warning: passing arguments to '_unur_pinv_cubic_hermite_is_monotone' without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ! _unur_pinv_cubic_hermite_is_monotone(gen,ui,zi,xval)). ^. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:79:12: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. static int _unur_pinv_cubic_hermite_is_monotone();. ^. void. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:316:1: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. _unur_pinv_cubic_hermite_is_monotone(struct unur_gen *gen, double *ui, double *zi, double *xval). ^. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12974
https://github.com/root-project/root/pull/12974:294,deployability,build,build,294,"[CMake] Add `-Wno-deprecated-non-prototype` to build unuran with Clang; This fixes some warnings seen in the nighlies:. ```. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:277:45: warning: passing arguments to '_unur_pinv_cubic_hermite_is_monotone' without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ! _unur_pinv_cubic_hermite_is_monotone(gen,ui,zi,xval)). ^. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:79:12: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. static int _unur_pinv_cubic_hermite_is_monotone();. ^. void. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:316:1: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. _unur_pinv_cubic_hermite_is_monotone(struct unur_gen *gen, double *ui, double *zi, double *xval). ^. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12974
https://github.com/root-project/root/pull/12974:338,deployability,build,build,338,"[CMake] Add `-Wno-deprecated-non-prototype` to build unuran with Clang; This fixes some warnings seen in the nighlies:. ```. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:277:45: warning: passing arguments to '_unur_pinv_cubic_hermite_is_monotone' without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ! _unur_pinv_cubic_hermite_is_monotone(gen,ui,zi,xval)). ^. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:79:12: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. static int _unur_pinv_cubic_hermite_is_monotone();. ^. void. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:316:1: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. _unur_pinv_cubic_hermite_is_monotone(struct unur_gen *gen, double *ui, double *zi, double *xval). ^. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12974
https://github.com/root-project/root/pull/12974:519,deployability,version,versions,519,"[CMake] Add `-Wno-deprecated-non-prototype` to build unuran with Clang; This fixes some warnings seen in the nighlies:. ```. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:277:45: warning: passing arguments to '_unur_pinv_cubic_hermite_is_monotone' without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ! _unur_pinv_cubic_hermite_is_monotone(gen,ui,zi,xval)). ^. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:79:12: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. static int _unur_pinv_cubic_hermite_is_monotone();. ^. void. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:316:1: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. _unur_pinv_cubic_hermite_is_monotone(struct unur_gen *gen, double *ui, double *zi, double *xval). ^. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12974
https://github.com/root-project/root/pull/12974:672,deployability,build,build,672,"[CMake] Add `-Wno-deprecated-non-prototype` to build unuran with Clang; This fixes some warnings seen in the nighlies:. ```. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:277:45: warning: passing arguments to '_unur_pinv_cubic_hermite_is_monotone' without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ! _unur_pinv_cubic_hermite_is_monotone(gen,ui,zi,xval)). ^. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:79:12: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. static int _unur_pinv_cubic_hermite_is_monotone();. ^. void. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:316:1: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. _unur_pinv_cubic_hermite_is_monotone(struct unur_gen *gen, double *ui, double *zi, double *xval). ^. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12974
https://github.com/root-project/root/pull/12974:716,deployability,build,build,716,"[CMake] Add `-Wno-deprecated-non-prototype` to build unuran with Clang; This fixes some warnings seen in the nighlies:. ```. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:277:45: warning: passing arguments to '_unur_pinv_cubic_hermite_is_monotone' without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ! _unur_pinv_cubic_hermite_is_monotone(gen,ui,zi,xval)). ^. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:79:12: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. static int _unur_pinv_cubic_hermite_is_monotone();. ^. void. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:316:1: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. _unur_pinv_cubic_hermite_is_monotone(struct unur_gen *gen, double *ui, double *zi, double *xval). ^. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12974
https://github.com/root-project/root/pull/12974:851,deployability,version,versions,851,"[CMake] Add `-Wno-deprecated-non-prototype` to build unuran with Clang; This fixes some warnings seen in the nighlies:. ```. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:277:45: warning: passing arguments to '_unur_pinv_cubic_hermite_is_monotone' without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ! _unur_pinv_cubic_hermite_is_monotone(gen,ui,zi,xval)). ^. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:79:12: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. static int _unur_pinv_cubic_hermite_is_monotone();. ^. void. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:316:1: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. _unur_pinv_cubic_hermite_is_monotone(struct unur_gen *gen, double *ui, double *zi, double *xval). ^. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12974
https://github.com/root-project/root/pull/12974:1027,deployability,build,build,1027,"[CMake] Add `-Wno-deprecated-non-prototype` to build unuran with Clang; This fixes some warnings seen in the nighlies:. ```. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:277:45: warning: passing arguments to '_unur_pinv_cubic_hermite_is_monotone' without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ! _unur_pinv_cubic_hermite_is_monotone(gen,ui,zi,xval)). ^. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:79:12: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. static int _unur_pinv_cubic_hermite_is_monotone();. ^. void. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:316:1: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. _unur_pinv_cubic_hermite_is_monotone(struct unur_gen *gen, double *ui, double *zi, double *xval). ^. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12974
https://github.com/root-project/root/pull/12974:1071,deployability,build,build,1071,"[CMake] Add `-Wno-deprecated-non-prototype` to build unuran with Clang; This fixes some warnings seen in the nighlies:. ```. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:277:45: warning: passing arguments to '_unur_pinv_cubic_hermite_is_monotone' without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ! _unur_pinv_cubic_hermite_is_monotone(gen,ui,zi,xval)). ^. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:79:12: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. static int _unur_pinv_cubic_hermite_is_monotone();. ^. void. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:316:1: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. _unur_pinv_cubic_hermite_is_monotone(struct unur_gen *gen, double *ui, double *zi, double *xval). ^. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12974
https://github.com/root-project/root/pull/12974:1153,deployability,build,build,1153,"[CMake] Add `-Wno-deprecated-non-prototype` to build unuran with Clang; This fixes some warnings seen in the nighlies:. ```. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:277:45: warning: passing arguments to '_unur_pinv_cubic_hermite_is_monotone' without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ! _unur_pinv_cubic_hermite_is_monotone(gen,ui,zi,xval)). ^. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:79:12: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. static int _unur_pinv_cubic_hermite_is_monotone();. ^. void. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:316:1: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. _unur_pinv_cubic_hermite_is_monotone(struct unur_gen *gen, double *ui, double *zi, double *xval). ^. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12974
https://github.com/root-project/root/pull/12974:1197,deployability,build,build,1197,"[CMake] Add `-Wno-deprecated-non-prototype` to build unuran with Clang; This fixes some warnings seen in the nighlies:. ```. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:277:45: warning: passing arguments to '_unur_pinv_cubic_hermite_is_monotone' without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ! _unur_pinv_cubic_hermite_is_monotone(gen,ui,zi,xval)). ^. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:79:12: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. static int _unur_pinv_cubic_hermite_is_monotone();. ^. void. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:316:1: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. _unur_pinv_cubic_hermite_is_monotone(struct unur_gen *gen, double *ui, double *zi, double *xval). ^. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12974
https://github.com/root-project/root/pull/12974:1340,deployability,version,versions,1340,"[CMake] Add `-Wno-deprecated-non-prototype` to build unuran with Clang; This fixes some warnings seen in the nighlies:. ```. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:277:45: warning: passing arguments to '_unur_pinv_cubic_hermite_is_monotone' without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ! _unur_pinv_cubic_hermite_is_monotone(gen,ui,zi,xval)). ^. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:79:12: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. static int _unur_pinv_cubic_hermite_is_monotone();. ^. void. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:316:1: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. _unur_pinv_cubic_hermite_is_monotone(struct unur_gen *gen, double *ui, double *zi, double *xval). ^. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12974
https://github.com/root-project/root/pull/12974:1533,deployability,servic,services,1533,"[CMake] Add `-Wno-deprecated-non-prototype` to build unuran with Clang; This fixes some warnings seen in the nighlies:. ```. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:277:45: warning: passing arguments to '_unur_pinv_cubic_hermite_is_monotone' without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ! _unur_pinv_cubic_hermite_is_monotone(gen,ui,zi,xval)). ^. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:79:12: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. static int _unur_pinv_cubic_hermite_is_monotone();. ^. void. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:316:1: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. _unur_pinv_cubic_hermite_is_monotone(struct unur_gen *gen, double *ui, double *zi, double *xval). ^. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12974
https://github.com/root-project/root/pull/12974:519,integrability,version,versions,519,"[CMake] Add `-Wno-deprecated-non-prototype` to build unuran with Clang; This fixes some warnings seen in the nighlies:. ```. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:277:45: warning: passing arguments to '_unur_pinv_cubic_hermite_is_monotone' without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ! _unur_pinv_cubic_hermite_is_monotone(gen,ui,zi,xval)). ^. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:79:12: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. static int _unur_pinv_cubic_hermite_is_monotone();. ^. void. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:316:1: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. _unur_pinv_cubic_hermite_is_monotone(struct unur_gen *gen, double *ui, double *zi, double *xval). ^. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12974
https://github.com/root-project/root/pull/12974:851,integrability,version,versions,851,"[CMake] Add `-Wno-deprecated-non-prototype` to build unuran with Clang; This fixes some warnings seen in the nighlies:. ```. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:277:45: warning: passing arguments to '_unur_pinv_cubic_hermite_is_monotone' without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ! _unur_pinv_cubic_hermite_is_monotone(gen,ui,zi,xval)). ^. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:79:12: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. static int _unur_pinv_cubic_hermite_is_monotone();. ^. void. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:316:1: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. _unur_pinv_cubic_hermite_is_monotone(struct unur_gen *gen, double *ui, double *zi, double *xval). ^. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12974
https://github.com/root-project/root/pull/12974:1340,integrability,version,versions,1340,"[CMake] Add `-Wno-deprecated-non-prototype` to build unuran with Clang; This fixes some warnings seen in the nighlies:. ```. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:277:45: warning: passing arguments to '_unur_pinv_cubic_hermite_is_monotone' without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ! _unur_pinv_cubic_hermite_is_monotone(gen,ui,zi,xval)). ^. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:79:12: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. static int _unur_pinv_cubic_hermite_is_monotone();. ^. void. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:316:1: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. _unur_pinv_cubic_hermite_is_monotone(struct unur_gen *gen, double *ui, double *zi, double *xval). ^. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12974
https://github.com/root-project/root/pull/12974:1533,integrability,servic,services,1533,"[CMake] Add `-Wno-deprecated-non-prototype` to build unuran with Clang; This fixes some warnings seen in the nighlies:. ```. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:277:45: warning: passing arguments to '_unur_pinv_cubic_hermite_is_monotone' without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ! _unur_pinv_cubic_hermite_is_monotone(gen,ui,zi,xval)). ^. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:79:12: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. static int _unur_pinv_cubic_hermite_is_monotone();. ^. void. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:316:1: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. _unur_pinv_cubic_hermite_is_monotone(struct unur_gen *gen, double *ui, double *zi, double *xval). ^. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12974
https://github.com/root-project/root/pull/12974:519,modifiability,version,versions,519,"[CMake] Add `-Wno-deprecated-non-prototype` to build unuran with Clang; This fixes some warnings seen in the nighlies:. ```. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:277:45: warning: passing arguments to '_unur_pinv_cubic_hermite_is_monotone' without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ! _unur_pinv_cubic_hermite_is_monotone(gen,ui,zi,xval)). ^. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:79:12: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. static int _unur_pinv_cubic_hermite_is_monotone();. ^. void. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:316:1: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. _unur_pinv_cubic_hermite_is_monotone(struct unur_gen *gen, double *ui, double *zi, double *xval). ^. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12974
https://github.com/root-project/root/pull/12974:851,modifiability,version,versions,851,"[CMake] Add `-Wno-deprecated-non-prototype` to build unuran with Clang; This fixes some warnings seen in the nighlies:. ```. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:277:45: warning: passing arguments to '_unur_pinv_cubic_hermite_is_monotone' without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ! _unur_pinv_cubic_hermite_is_monotone(gen,ui,zi,xval)). ^. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:79:12: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. static int _unur_pinv_cubic_hermite_is_monotone();. ^. void. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:316:1: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. _unur_pinv_cubic_hermite_is_monotone(struct unur_gen *gen, double *ui, double *zi, double *xval). ^. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12974
https://github.com/root-project/root/pull/12974:1340,modifiability,version,versions,1340,"[CMake] Add `-Wno-deprecated-non-prototype` to build unuran with Clang; This fixes some warnings seen in the nighlies:. ```. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:277:45: warning: passing arguments to '_unur_pinv_cubic_hermite_is_monotone' without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ! _unur_pinv_cubic_hermite_is_monotone(gen,ui,zi,xval)). ^. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:79:12: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. static int _unur_pinv_cubic_hermite_is_monotone();. ^. void. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:316:1: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. _unur_pinv_cubic_hermite_is_monotone(struct unur_gen *gen, double *ui, double *zi, double *xval). ^. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12974
https://github.com/root-project/root/pull/12974:1533,modifiability,servic,services,1533,"[CMake] Add `-Wno-deprecated-non-prototype` to build unuran with Clang; This fixes some warnings seen in the nighlies:. ```. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:277:45: warning: passing arguments to '_unur_pinv_cubic_hermite_is_monotone' without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ! _unur_pinv_cubic_hermite_is_monotone(gen,ui,zi,xval)). ^. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:79:12: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. static int _unur_pinv_cubic_hermite_is_monotone();. ^. void. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:316:1: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. _unur_pinv_cubic_hermite_is_monotone(struct unur_gen *gen, double *ui, double *zi, double *xval). ^. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12974
https://github.com/root-project/root/pull/12974:33,usability,prototyp,prototype,33,"[CMake] Add `-Wno-deprecated-non-prototype` to build unuran with Clang; This fixes some warnings seen in the nighlies:. ```. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:277:45: warning: passing arguments to '_unur_pinv_cubic_hermite_is_monotone' without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ! _unur_pinv_cubic_hermite_is_monotone(gen,ui,zi,xval)). ^. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:79:12: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. static int _unur_pinv_cubic_hermite_is_monotone();. ^. void. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:316:1: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. _unur_pinv_cubic_hermite_is_monotone(struct unur_gen *gen, double *ui, double *zi, double *xval). ^. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12974
https://github.com/root-project/root/pull/12974:488,usability,prototyp,prototype,488,"[CMake] Add `-Wno-deprecated-non-prototype` to build unuran with Clang; This fixes some warnings seen in the nighlies:. ```. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:277:45: warning: passing arguments to '_unur_pinv_cubic_hermite_is_monotone' without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ! _unur_pinv_cubic_hermite_is_monotone(gen,ui,zi,xval)). ^. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:79:12: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. static int _unur_pinv_cubic_hermite_is_monotone();. ^. void. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:316:1: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. _unur_pinv_cubic_hermite_is_monotone(struct unur_gen *gen, double *ui, double *zi, double *xval). ^. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12974
https://github.com/root-project/root/pull/12974:544,usability,support,supported,544,"[CMake] Add `-Wno-deprecated-non-prototype` to build unuran with Clang; This fixes some warnings seen in the nighlies:. ```. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:277:45: warning: passing arguments to '_unur_pinv_cubic_hermite_is_monotone' without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ! _unur_pinv_cubic_hermite_is_monotone(gen,ui,zi,xval)). ^. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:79:12: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. static int _unur_pinv_cubic_hermite_is_monotone();. ^. void. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:316:1: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. _unur_pinv_cubic_hermite_is_monotone(struct unur_gen *gen, double *ui, double *zi, double *xval). ^. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12974
https://github.com/root-project/root/pull/12974:579,usability,prototyp,prototype,579,"[CMake] Add `-Wno-deprecated-non-prototype` to build unuran with Clang; This fixes some warnings seen in the nighlies:. ```. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:277:45: warning: passing arguments to '_unur_pinv_cubic_hermite_is_monotone' without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ! _unur_pinv_cubic_hermite_is_monotone(gen,ui,zi,xval)). ^. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:79:12: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. static int _unur_pinv_cubic_hermite_is_monotone();. ^. void. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:316:1: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. _unur_pinv_cubic_hermite_is_monotone(struct unur_gen *gen, double *ui, double *zi, double *xval). ^. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12974
https://github.com/root-project/root/pull/12974:634,usability,ui,ui,634,"[CMake] Add `-Wno-deprecated-non-prototype` to build unuran with Clang; This fixes some warnings seen in the nighlies:. ```. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:277:45: warning: passing arguments to '_unur_pinv_cubic_hermite_is_monotone' without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ! _unur_pinv_cubic_hermite_is_monotone(gen,ui,zi,xval)). ^. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:79:12: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. static int _unur_pinv_cubic_hermite_is_monotone();. ^. void. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:316:1: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. _unur_pinv_cubic_hermite_is_monotone(struct unur_gen *gen, double *ui, double *zi, double *xval). ^. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12974
https://github.com/root-project/root/pull/12974:820,usability,prototyp,prototype,820,"[CMake] Add `-Wno-deprecated-non-prototype` to build unuran with Clang; This fixes some warnings seen in the nighlies:. ```. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:277:45: warning: passing arguments to '_unur_pinv_cubic_hermite_is_monotone' without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ! _unur_pinv_cubic_hermite_is_monotone(gen,ui,zi,xval)). ^. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:79:12: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. static int _unur_pinv_cubic_hermite_is_monotone();. ^. void. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:316:1: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. _unur_pinv_cubic_hermite_is_monotone(struct unur_gen *gen, double *ui, double *zi, double *xval). ^. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12974
https://github.com/root-project/root/pull/12974:876,usability,support,supported,876,"[CMake] Add `-Wno-deprecated-non-prototype` to build unuran with Clang; This fixes some warnings seen in the nighlies:. ```. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:277:45: warning: passing arguments to '_unur_pinv_cubic_hermite_is_monotone' without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ! _unur_pinv_cubic_hermite_is_monotone(gen,ui,zi,xval)). ^. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:79:12: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. static int _unur_pinv_cubic_hermite_is_monotone();. ^. void. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:316:1: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. _unur_pinv_cubic_hermite_is_monotone(struct unur_gen *gen, double *ui, double *zi, double *xval). ^. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12974
https://github.com/root-project/root/pull/12974:911,usability,prototyp,prototype,911,"[CMake] Add `-Wno-deprecated-non-prototype` to build unuran with Clang; This fixes some warnings seen in the nighlies:. ```. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:277:45: warning: passing arguments to '_unur_pinv_cubic_hermite_is_monotone' without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ! _unur_pinv_cubic_hermite_is_monotone(gen,ui,zi,xval)). ^. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:79:12: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. static int _unur_pinv_cubic_hermite_is_monotone();. ^. void. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:316:1: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. _unur_pinv_cubic_hermite_is_monotone(struct unur_gen *gen, double *ui, double *zi, double *xval). ^. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12974
https://github.com/root-project/root/pull/12974:1309,usability,prototyp,prototype,1309,"[CMake] Add `-Wno-deprecated-non-prototype` to build unuran with Clang; This fixes some warnings seen in the nighlies:. ```. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:277:45: warning: passing arguments to '_unur_pinv_cubic_hermite_is_monotone' without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ! _unur_pinv_cubic_hermite_is_monotone(gen,ui,zi,xval)). ^. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:79:12: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. static int _unur_pinv_cubic_hermite_is_monotone();. ^. void. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:316:1: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. _unur_pinv_cubic_hermite_is_monotone(struct unur_gen *gen, double *ui, double *zi, double *xval). ^. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12974
https://github.com/root-project/root/pull/12974:1365,usability,support,supported,1365,"[CMake] Add `-Wno-deprecated-non-prototype` to build unuran with Clang; This fixes some warnings seen in the nighlies:. ```. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:277:45: warning: passing arguments to '_unur_pinv_cubic_hermite_is_monotone' without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ! _unur_pinv_cubic_hermite_is_monotone(gen,ui,zi,xval)). ^. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:79:12: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. static int _unur_pinv_cubic_hermite_is_monotone();. ^. void. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:316:1: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. _unur_pinv_cubic_hermite_is_monotone(struct unur_gen *gen, double *ui, double *zi, double *xval). ^. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12974
https://github.com/root-project/root/pull/12974:1400,usability,prototyp,prototype,1400,"[CMake] Add `-Wno-deprecated-non-prototype` to build unuran with Clang; This fixes some warnings seen in the nighlies:. ```. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:277:45: warning: passing arguments to '_unur_pinv_cubic_hermite_is_monotone' without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ! _unur_pinv_cubic_hermite_is_monotone(gen,ui,zi,xval)). ^. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:79:12: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. static int _unur_pinv_cubic_hermite_is_monotone();. ^. void. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:316:1: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. _unur_pinv_cubic_hermite_is_monotone(struct unur_gen *gen, double *ui, double *zi, double *xval). ^. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12974
https://github.com/root-project/root/pull/12974:1479,usability,ui,ui,1479,"[CMake] Add `-Wno-deprecated-non-prototype` to build unuran with Clang; This fixes some warnings seen in the nighlies:. ```. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:277:45: warning: passing arguments to '_unur_pinv_cubic_hermite_is_monotone' without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. ! _unur_pinv_cubic_hermite_is_monotone(gen,ui,zi,xval)). ^. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:79:12: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. static int _unur_pinv_cubic_hermite_is_monotone();. ^. void. In file included from /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv.c:109:. /System/Volumes/Data/build/night/LABEL/mac13/SPEC/cxx20/V/master/build/math/unuran/unuran-1.8.0-root/src/methods/pinv_newton.ch:316:1: warning: a function declaration without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]. _unur_pinv_cubic_hermite_is_monotone(struct unur_gen *gen, double *ui, double *zi, double *xval). ^. ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=mac13,SPEC=cxx20,V=master/lastBuild/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12974
https://github.com/root-project/root/pull/12975:237,deployability,patch,patches,237,"[cmake][ci] Improve selection of a candidate `roottest` branch to checkout; The search for a candidate repository and branch for `roottest` now works as follows: . - If the current head is a well-known branch, e.g. `master` or `v6-28-00-patches`, use the matching branch upstream as the forked repository may be out-of-sync. - Otherwise, try a branch that matches the name of the current head in the forked repository, if it exists; else try using the closest upstream head/tag below `HEAD`'s parent commit. - As a last resort, if there is no preferred candidate, checkout the remote's default head. This patchset also adds some minor changes to the new CI in order to forward additional information about pull requests. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12975
https://github.com/root-project/root/pull/12975:605,deployability,patch,patchset,605,"[cmake][ci] Improve selection of a candidate `roottest` branch to checkout; The search for a candidate repository and branch for `roottest` now works as follows: . - If the current head is a well-known branch, e.g. `master` or `v6-28-00-patches`, use the matching branch upstream as the forked repository may be out-of-sync. - Otherwise, try a branch that matches the name of the current head in the forked repository, if it exists; else try using the closest upstream head/tag below `HEAD`'s parent commit. - As a last resort, if there is no preferred candidate, checkout the remote's default head. This patchset also adds some minor changes to the new CI in order to forward additional information about pull requests. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12975
https://github.com/root-project/root/pull/12975:173,energy efficiency,current,current,173,"[cmake][ci] Improve selection of a candidate `roottest` branch to checkout; The search for a candidate repository and branch for `roottest` now works as follows: . - If the current head is a well-known branch, e.g. `master` or `v6-28-00-patches`, use the matching branch upstream as the forked repository may be out-of-sync. - Otherwise, try a branch that matches the name of the current head in the forked repository, if it exists; else try using the closest upstream head/tag below `HEAD`'s parent commit. - As a last resort, if there is no preferred candidate, checkout the remote's default head. This patchset also adds some minor changes to the new CI in order to forward additional information about pull requests. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12975
https://github.com/root-project/root/pull/12975:380,energy efficiency,current,current,380,"[cmake][ci] Improve selection of a candidate `roottest` branch to checkout; The search for a candidate repository and branch for `roottest` now works as follows: . - If the current head is a well-known branch, e.g. `master` or `v6-28-00-patches`, use the matching branch upstream as the forked repository may be out-of-sync. - Otherwise, try a branch that matches the name of the current head in the forked repository, if it exists; else try using the closest upstream head/tag below `HEAD`'s parent commit. - As a last resort, if there is no preferred candidate, checkout the remote's default head. This patchset also adds some minor changes to the new CI in order to forward additional information about pull requests. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12975
https://github.com/root-project/root/pull/12975:103,integrability,repositor,repository,103,"[cmake][ci] Improve selection of a candidate `roottest` branch to checkout; The search for a candidate repository and branch for `roottest` now works as follows: . - If the current head is a well-known branch, e.g. `master` or `v6-28-00-patches`, use the matching branch upstream as the forked repository may be out-of-sync. - Otherwise, try a branch that matches the name of the current head in the forked repository, if it exists; else try using the closest upstream head/tag below `HEAD`'s parent commit. - As a last resort, if there is no preferred candidate, checkout the remote's default head. This patchset also adds some minor changes to the new CI in order to forward additional information about pull requests. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12975
https://github.com/root-project/root/pull/12975:294,integrability,repositor,repository,294,"[cmake][ci] Improve selection of a candidate `roottest` branch to checkout; The search for a candidate repository and branch for `roottest` now works as follows: . - If the current head is a well-known branch, e.g. `master` or `v6-28-00-patches`, use the matching branch upstream as the forked repository may be out-of-sync. - Otherwise, try a branch that matches the name of the current head in the forked repository, if it exists; else try using the closest upstream head/tag below `HEAD`'s parent commit. - As a last resort, if there is no preferred candidate, checkout the remote's default head. This patchset also adds some minor changes to the new CI in order to forward additional information about pull requests. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12975
https://github.com/root-project/root/pull/12975:407,integrability,repositor,repository,407,"[cmake][ci] Improve selection of a candidate `roottest` branch to checkout; The search for a candidate repository and branch for `roottest` now works as follows: . - If the current head is a well-known branch, e.g. `master` or `v6-28-00-patches`, use the matching branch upstream as the forked repository may be out-of-sync. - Otherwise, try a branch that matches the name of the current head in the forked repository, if it exists; else try using the closest upstream head/tag below `HEAD`'s parent commit. - As a last resort, if there is no preferred candidate, checkout the remote's default head. This patchset also adds some minor changes to the new CI in order to forward additional information about pull requests. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12975
https://github.com/root-project/root/pull/12975:103,interoperability,repositor,repository,103,"[cmake][ci] Improve selection of a candidate `roottest` branch to checkout; The search for a candidate repository and branch for `roottest` now works as follows: . - If the current head is a well-known branch, e.g. `master` or `v6-28-00-patches`, use the matching branch upstream as the forked repository may be out-of-sync. - Otherwise, try a branch that matches the name of the current head in the forked repository, if it exists; else try using the closest upstream head/tag below `HEAD`'s parent commit. - As a last resort, if there is no preferred candidate, checkout the remote's default head. This patchset also adds some minor changes to the new CI in order to forward additional information about pull requests. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12975
https://github.com/root-project/root/pull/12975:294,interoperability,repositor,repository,294,"[cmake][ci] Improve selection of a candidate `roottest` branch to checkout; The search for a candidate repository and branch for `roottest` now works as follows: . - If the current head is a well-known branch, e.g. `master` or `v6-28-00-patches`, use the matching branch upstream as the forked repository may be out-of-sync. - Otherwise, try a branch that matches the name of the current head in the forked repository, if it exists; else try using the closest upstream head/tag below `HEAD`'s parent commit. - As a last resort, if there is no preferred candidate, checkout the remote's default head. This patchset also adds some minor changes to the new CI in order to forward additional information about pull requests. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12975
https://github.com/root-project/root/pull/12975:407,interoperability,repositor,repository,407,"[cmake][ci] Improve selection of a candidate `roottest` branch to checkout; The search for a candidate repository and branch for `roottest` now works as follows: . - If the current head is a well-known branch, e.g. `master` or `v6-28-00-patches`, use the matching branch upstream as the forked repository may be out-of-sync. - Otherwise, try a branch that matches the name of the current head in the forked repository, if it exists; else try using the closest upstream head/tag below `HEAD`'s parent commit. - As a last resort, if there is no preferred candidate, checkout the remote's default head. This patchset also adds some minor changes to the new CI in order to forward additional information about pull requests. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12975
https://github.com/root-project/root/pull/12975:237,safety,patch,patches,237,"[cmake][ci] Improve selection of a candidate `roottest` branch to checkout; The search for a candidate repository and branch for `roottest` now works as follows: . - If the current head is a well-known branch, e.g. `master` or `v6-28-00-patches`, use the matching branch upstream as the forked repository may be out-of-sync. - Otherwise, try a branch that matches the name of the current head in the forked repository, if it exists; else try using the closest upstream head/tag below `HEAD`'s parent commit. - As a last resort, if there is no preferred candidate, checkout the remote's default head. This patchset also adds some minor changes to the new CI in order to forward additional information about pull requests. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12975
https://github.com/root-project/root/pull/12975:605,safety,patch,patchset,605,"[cmake][ci] Improve selection of a candidate `roottest` branch to checkout; The search for a candidate repository and branch for `roottest` now works as follows: . - If the current head is a well-known branch, e.g. `master` or `v6-28-00-patches`, use the matching branch upstream as the forked repository may be out-of-sync. - Otherwise, try a branch that matches the name of the current head in the forked repository, if it exists; else try using the closest upstream head/tag below `HEAD`'s parent commit. - As a last resort, if there is no preferred candidate, checkout the remote's default head. This patchset also adds some minor changes to the new CI in order to forward additional information about pull requests. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12975
https://github.com/root-project/root/pull/12975:742,safety,test,tested,742,"[cmake][ci] Improve selection of a candidate `roottest` branch to checkout; The search for a candidate repository and branch for `roottest` now works as follows: . - If the current head is a well-known branch, e.g. `master` or `v6-28-00-patches`, use the matching branch upstream as the forked repository may be out-of-sync. - Otherwise, try a branch that matches the name of the current head in the forked repository, if it exists; else try using the closest upstream head/tag below `HEAD`'s parent commit. - As a last resort, if there is no preferred candidate, checkout the remote's default head. This patchset also adds some minor changes to the new CI in order to forward additional information about pull requests. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12975
https://github.com/root-project/root/pull/12975:237,security,patch,patches,237,"[cmake][ci] Improve selection of a candidate `roottest` branch to checkout; The search for a candidate repository and branch for `roottest` now works as follows: . - If the current head is a well-known branch, e.g. `master` or `v6-28-00-patches`, use the matching branch upstream as the forked repository may be out-of-sync. - Otherwise, try a branch that matches the name of the current head in the forked repository, if it exists; else try using the closest upstream head/tag below `HEAD`'s parent commit. - As a last resort, if there is no preferred candidate, checkout the remote's default head. This patchset also adds some minor changes to the new CI in order to forward additional information about pull requests. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12975
https://github.com/root-project/root/pull/12975:605,security,patch,patchset,605,"[cmake][ci] Improve selection of a candidate `roottest` branch to checkout; The search for a candidate repository and branch for `roottest` now works as follows: . - If the current head is a well-known branch, e.g. `master` or `v6-28-00-patches`, use the matching branch upstream as the forked repository may be out-of-sync. - Otherwise, try a branch that matches the name of the current head in the forked repository, if it exists; else try using the closest upstream head/tag below `HEAD`'s parent commit. - As a last resort, if there is no preferred candidate, checkout the remote's default head. This patchset also adds some minor changes to the new CI in order to forward additional information about pull requests. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12975
https://github.com/root-project/root/pull/12975:742,testability,test,tested,742,"[cmake][ci] Improve selection of a candidate `roottest` branch to checkout; The search for a candidate repository and branch for `roottest` now works as follows: . - If the current head is a well-known branch, e.g. `master` or `v6-28-00-patches`, use the matching branch upstream as the forked repository may be out-of-sync. - Otherwise, try a branch that matches the name of the current head in the forked repository, if it exists; else try using the closest upstream head/tag below `HEAD`'s parent commit. - As a last resort, if there is no preferred candidate, checkout the remote's default head. This patchset also adds some minor changes to the new CI in order to forward additional information about pull requests. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12975
https://github.com/root-project/root/pull/12975:452,usability,close,closest,452,"[cmake][ci] Improve selection of a candidate `roottest` branch to checkout; The search for a candidate repository and branch for `roottest` now works as follows: . - If the current head is a well-known branch, e.g. `master` or `v6-28-00-patches`, use the matching branch upstream as the forked repository may be out-of-sync. - Otherwise, try a branch that matches the name of the current head in the forked repository, if it exists; else try using the closest upstream head/tag below `HEAD`'s parent commit. - As a last resort, if there is no preferred candidate, checkout the remote's default head. This patchset also adds some minor changes to the new CI in order to forward additional information about pull requests. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12975
https://github.com/root-project/root/pull/12975:543,usability,prefer,preferred,543,"[cmake][ci] Improve selection of a candidate `roottest` branch to checkout; The search for a candidate repository and branch for `roottest` now works as follows: . - If the current head is a well-known branch, e.g. `master` or `v6-28-00-patches`, use the matching branch upstream as the forked repository may be out-of-sync. - Otherwise, try a branch that matches the name of the current head in the forked repository, if it exists; else try using the closest upstream head/tag below `HEAD`'s parent commit. - As a last resort, if there is no preferred candidate, checkout the remote's default head. This patchset also adds some minor changes to the new CI in order to forward additional information about pull requests. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12975
https://github.com/root-project/root/pull/12976:497,safety,avoid,avoid,497,"[skip-ci] doc fix.; From Isabel Goos:. I am just writing because I found a mistake on your reference guide that should be corrected. On this page: https://root.cern.ch/doc/master/classTRolke.html#a77ed9095b5fe47050eeec195eb3b669d. we see the example ""SetPoissonBkgGaussEff(x,y,em,sde,tau)"". but later ""void 	SetPoissonBkgGaussEff (Int_t x, Int_t y, Double_t em, Double_t tau, Double_t sde)"". So, in the example sde and tau are interchanged. . We lost some nerves finding this out :) so, if we can avoid this for someone else, we are happy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12976
https://github.com/root-project/root/pull/12976:101,usability,guid,guide,101,"[skip-ci] doc fix.; From Isabel Goos:. I am just writing because I found a mistake on your reference guide that should be corrected. On this page: https://root.cern.ch/doc/master/classTRolke.html#a77ed9095b5fe47050eeec195eb3b669d. we see the example ""SetPoissonBkgGaussEff(x,y,em,sde,tau)"". but later ""void 	SetPoissonBkgGaussEff (Int_t x, Int_t y, Double_t em, Double_t tau, Double_t sde)"". So, in the example sde and tau are interchanged. . We lost some nerves finding this out :) so, if we can avoid this for someone else, we are happy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12976
https://github.com/root-project/root/pull/12978:296,availability,sli,slightly,296,"[ntuple] Add zigzag encoding for signed integers; Splits signed and unsigned integers in different column types. For signed integers, add zigzag encoding. Zigzag encoding maps x to 2x if x is positive and to -2x-1 otherwise. So a series of small negative and positive numbers becomes a series of slightly larger but still small positive integers, which is then beneficial for split encoding and compression (more leading zeros; small negative numbers have many leading 1s in two's complement representation). For a charge column, this can make a substantial difference, e.g. compression factor 6 vs 23 with zstd on an LHCb ntuple. Overall, the fraction of data stored in small ints is typically small. On the RNTuple standard benchmarks, the gains are at the 1% level.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12978
https://github.com/root-project/root/pull/12978:515,energy efficiency,charg,charge,515,"[ntuple] Add zigzag encoding for signed integers; Splits signed and unsigned integers in different column types. For signed integers, add zigzag encoding. Zigzag encoding maps x to 2x if x is positive and to -2x-1 otherwise. So a series of small negative and positive numbers becomes a series of slightly larger but still small positive integers, which is then beneficial for split encoding and compression (more leading zeros; small negative numbers have many leading 1s in two's complement representation). For a charge column, this can make a substantial difference, e.g. compression factor 6 vs 23 with zstd on an LHCb ntuple. Overall, the fraction of data stored in small ints is typically small. On the RNTuple standard benchmarks, the gains are at the 1% level.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12978
https://github.com/root-project/root/pull/12978:546,integrability,sub,substantial,546,"[ntuple] Add zigzag encoding for signed integers; Splits signed and unsigned integers in different column types. For signed integers, add zigzag encoding. Zigzag encoding maps x to 2x if x is positive and to -2x-1 otherwise. So a series of small negative and positive numbers becomes a series of slightly larger but still small positive integers, which is then beneficial for split encoding and compression (more leading zeros; small negative numbers have many leading 1s in two's complement representation). For a charge column, this can make a substantial difference, e.g. compression factor 6 vs 23 with zstd on an LHCb ntuple. Overall, the fraction of data stored in small ints is typically small. On the RNTuple standard benchmarks, the gains are at the 1% level.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12978
https://github.com/root-project/root/pull/12978:717,interoperability,standard,standard,717,"[ntuple] Add zigzag encoding for signed integers; Splits signed and unsigned integers in different column types. For signed integers, add zigzag encoding. Zigzag encoding maps x to 2x if x is positive and to -2x-1 otherwise. So a series of small negative and positive numbers becomes a series of slightly larger but still small positive integers, which is then beneficial for split encoding and compression (more leading zeros; small negative numbers have many leading 1s in two's complement representation). For a charge column, this can make a substantial difference, e.g. compression factor 6 vs 23 with zstd on an LHCb ntuple. Overall, the fraction of data stored in small ints is typically small. On the RNTuple standard benchmarks, the gains are at the 1% level.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12978
https://github.com/root-project/root/pull/12978:296,reliability,sli,slightly,296,"[ntuple] Add zigzag encoding for signed integers; Splits signed and unsigned integers in different column types. For signed integers, add zigzag encoding. Zigzag encoding maps x to 2x if x is positive and to -2x-1 otherwise. So a series of small negative and positive numbers becomes a series of slightly larger but still small positive integers, which is then beneficial for split encoding and compression (more leading zeros; small negative numbers have many leading 1s in two's complement representation). For a charge column, this can make a substantial difference, e.g. compression factor 6 vs 23 with zstd on an LHCb ntuple. Overall, the fraction of data stored in small ints is typically small. On the RNTuple standard benchmarks, the gains are at the 1% level.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12978
https://github.com/root-project/root/pull/12978:481,safety,compl,complement,481,"[ntuple] Add zigzag encoding for signed integers; Splits signed and unsigned integers in different column types. For signed integers, add zigzag encoding. Zigzag encoding maps x to 2x if x is positive and to -2x-1 otherwise. So a series of small negative and positive numbers becomes a series of slightly larger but still small positive integers, which is then beneficial for split encoding and compression (more leading zeros; small negative numbers have many leading 1s in two's complement representation). For a charge column, this can make a substantial difference, e.g. compression factor 6 vs 23 with zstd on an LHCb ntuple. Overall, the fraction of data stored in small ints is typically small. On the RNTuple standard benchmarks, the gains are at the 1% level.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12978
https://github.com/root-project/root/pull/12978:33,security,sign,signed,33,"[ntuple] Add zigzag encoding for signed integers; Splits signed and unsigned integers in different column types. For signed integers, add zigzag encoding. Zigzag encoding maps x to 2x if x is positive and to -2x-1 otherwise. So a series of small negative and positive numbers becomes a series of slightly larger but still small positive integers, which is then beneficial for split encoding and compression (more leading zeros; small negative numbers have many leading 1s in two's complement representation). For a charge column, this can make a substantial difference, e.g. compression factor 6 vs 23 with zstd on an LHCb ntuple. Overall, the fraction of data stored in small ints is typically small. On the RNTuple standard benchmarks, the gains are at the 1% level.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12978
https://github.com/root-project/root/pull/12978:57,security,sign,signed,57,"[ntuple] Add zigzag encoding for signed integers; Splits signed and unsigned integers in different column types. For signed integers, add zigzag encoding. Zigzag encoding maps x to 2x if x is positive and to -2x-1 otherwise. So a series of small negative and positive numbers becomes a series of slightly larger but still small positive integers, which is then beneficial for split encoding and compression (more leading zeros; small negative numbers have many leading 1s in two's complement representation). For a charge column, this can make a substantial difference, e.g. compression factor 6 vs 23 with zstd on an LHCb ntuple. Overall, the fraction of data stored in small ints is typically small. On the RNTuple standard benchmarks, the gains are at the 1% level.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12978
https://github.com/root-project/root/pull/12978:117,security,sign,signed,117,"[ntuple] Add zigzag encoding for signed integers; Splits signed and unsigned integers in different column types. For signed integers, add zigzag encoding. Zigzag encoding maps x to 2x if x is positive and to -2x-1 otherwise. So a series of small negative and positive numbers becomes a series of slightly larger but still small positive integers, which is then beneficial for split encoding and compression (more leading zeros; small negative numbers have many leading 1s in two's complement representation). For a charge column, this can make a substantial difference, e.g. compression factor 6 vs 23 with zstd on an LHCb ntuple. Overall, the fraction of data stored in small ints is typically small. On the RNTuple standard benchmarks, the gains are at the 1% level.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12978
https://github.com/root-project/root/pull/12978:481,security,compl,complement,481,"[ntuple] Add zigzag encoding for signed integers; Splits signed and unsigned integers in different column types. For signed integers, add zigzag encoding. Zigzag encoding maps x to 2x if x is positive and to -2x-1 otherwise. So a series of small negative and positive numbers becomes a series of slightly larger but still small positive integers, which is then beneficial for split encoding and compression (more leading zeros; small negative numbers have many leading 1s in two's complement representation). For a charge column, this can make a substantial difference, e.g. compression factor 6 vs 23 with zstd on an LHCb ntuple. Overall, the fraction of data stored in small ints is typically small. On the RNTuple standard benchmarks, the gains are at the 1% level.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12978
https://github.com/root-project/root/pull/12979:364,availability,error,error,364,"[ntuple] Rename `struct EmptyBase` and add to CustomStructLinkDef.h; This pull request adds the `EmptyBase` class to CustomStructLinkDef.h (required now by the `ntuple_modelext` test). It also renames the class to `EmptyStruct`, which probably makes more sense now. This should fix the `ntuple_modelext` on Windows, that was complaining due to. ```. unknown file: error: C++ exception with description: ""RField: no I/O support for type EmptyBase. At:. _cdecl ROOT::Experimental::RClassField::RClassField(class std::basic_string_view<char,struct std::char_traits<char> >, class std::basic_string_view<char,struct std::char_traits<char> >, class TClass *) [C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx:1117]. "" thrown in the test body. ```. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12979
https://github.com/root-project/root/pull/12979:364,performance,error,error,364,"[ntuple] Rename `struct EmptyBase` and add to CustomStructLinkDef.h; This pull request adds the `EmptyBase` class to CustomStructLinkDef.h (required now by the `ntuple_modelext` test). It also renames the class to `EmptyStruct`, which probably makes more sense now. This should fix the `ntuple_modelext` on Windows, that was complaining due to. ```. unknown file: error: C++ exception with description: ""RField: no I/O support for type EmptyBase. At:. _cdecl ROOT::Experimental::RClassField::RClassField(class std::basic_string_view<char,struct std::char_traits<char> >, class std::basic_string_view<char,struct std::char_traits<char> >, class TClass *) [C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx:1117]. "" thrown in the test body. ```. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12979
https://github.com/root-project/root/pull/12979:415,performance,I/O,I/O,415,"[ntuple] Rename `struct EmptyBase` and add to CustomStructLinkDef.h; This pull request adds the `EmptyBase` class to CustomStructLinkDef.h (required now by the `ntuple_modelext` test). It also renames the class to `EmptyStruct`, which probably makes more sense now. This should fix the `ntuple_modelext` on Windows, that was complaining due to. ```. unknown file: error: C++ exception with description: ""RField: no I/O support for type EmptyBase. At:. _cdecl ROOT::Experimental::RClassField::RClassField(class std::basic_string_view<char,struct std::char_traits<char> >, class std::basic_string_view<char,struct std::char_traits<char> >, class TClass *) [C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx:1117]. "" thrown in the test body. ```. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12979
https://github.com/root-project/root/pull/12979:178,safety,test,test,178,"[ntuple] Rename `struct EmptyBase` and add to CustomStructLinkDef.h; This pull request adds the `EmptyBase` class to CustomStructLinkDef.h (required now by the `ntuple_modelext` test). It also renames the class to `EmptyStruct`, which probably makes more sense now. This should fix the `ntuple_modelext` on Windows, that was complaining due to. ```. unknown file: error: C++ exception with description: ""RField: no I/O support for type EmptyBase. At:. _cdecl ROOT::Experimental::RClassField::RClassField(class std::basic_string_view<char,struct std::char_traits<char> >, class std::basic_string_view<char,struct std::char_traits<char> >, class TClass *) [C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx:1117]. "" thrown in the test body. ```. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12979
https://github.com/root-project/root/pull/12979:325,safety,compl,complaining,325,"[ntuple] Rename `struct EmptyBase` and add to CustomStructLinkDef.h; This pull request adds the `EmptyBase` class to CustomStructLinkDef.h (required now by the `ntuple_modelext` test). It also renames the class to `EmptyStruct`, which probably makes more sense now. This should fix the `ntuple_modelext` on Windows, that was complaining due to. ```. unknown file: error: C++ exception with description: ""RField: no I/O support for type EmptyBase. At:. _cdecl ROOT::Experimental::RClassField::RClassField(class std::basic_string_view<char,struct std::char_traits<char> >, class std::basic_string_view<char,struct std::char_traits<char> >, class TClass *) [C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx:1117]. "" thrown in the test body. ```. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12979
https://github.com/root-project/root/pull/12979:364,safety,error,error,364,"[ntuple] Rename `struct EmptyBase` and add to CustomStructLinkDef.h; This pull request adds the `EmptyBase` class to CustomStructLinkDef.h (required now by the `ntuple_modelext` test). It also renames the class to `EmptyStruct`, which probably makes more sense now. This should fix the `ntuple_modelext` on Windows, that was complaining due to. ```. unknown file: error: C++ exception with description: ""RField: no I/O support for type EmptyBase. At:. _cdecl ROOT::Experimental::RClassField::RClassField(class std::basic_string_view<char,struct std::char_traits<char> >, class std::basic_string_view<char,struct std::char_traits<char> >, class TClass *) [C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx:1117]. "" thrown in the test body. ```. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12979
https://github.com/root-project/root/pull/12979:375,safety,except,exception,375,"[ntuple] Rename `struct EmptyBase` and add to CustomStructLinkDef.h; This pull request adds the `EmptyBase` class to CustomStructLinkDef.h (required now by the `ntuple_modelext` test). It also renames the class to `EmptyStruct`, which probably makes more sense now. This should fix the `ntuple_modelext` on Windows, that was complaining due to. ```. unknown file: error: C++ exception with description: ""RField: no I/O support for type EmptyBase. At:. _cdecl ROOT::Experimental::RClassField::RClassField(class std::basic_string_view<char,struct std::char_traits<char> >, class std::basic_string_view<char,struct std::char_traits<char> >, class TClass *) [C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx:1117]. "" thrown in the test body. ```. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12979
https://github.com/root-project/root/pull/12979:723,safety,test,test,723,"[ntuple] Rename `struct EmptyBase` and add to CustomStructLinkDef.h; This pull request adds the `EmptyBase` class to CustomStructLinkDef.h (required now by the `ntuple_modelext` test). It also renames the class to `EmptyStruct`, which probably makes more sense now. This should fix the `ntuple_modelext` on Windows, that was complaining due to. ```. unknown file: error: C++ exception with description: ""RField: no I/O support for type EmptyBase. At:. _cdecl ROOT::Experimental::RClassField::RClassField(class std::basic_string_view<char,struct std::char_traits<char> >, class std::basic_string_view<char,struct std::char_traits<char> >, class TClass *) [C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx:1117]. "" thrown in the test body. ```. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12979
https://github.com/root-project/root/pull/12979:760,safety,test,tested,760,"[ntuple] Rename `struct EmptyBase` and add to CustomStructLinkDef.h; This pull request adds the `EmptyBase` class to CustomStructLinkDef.h (required now by the `ntuple_modelext` test). It also renames the class to `EmptyStruct`, which probably makes more sense now. This should fix the `ntuple_modelext` on Windows, that was complaining due to. ```. unknown file: error: C++ exception with description: ""RField: no I/O support for type EmptyBase. At:. _cdecl ROOT::Experimental::RClassField::RClassField(class std::basic_string_view<char,struct std::char_traits<char> >, class std::basic_string_view<char,struct std::char_traits<char> >, class TClass *) [C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx:1117]. "" thrown in the test body. ```. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12979
https://github.com/root-project/root/pull/12979:325,security,compl,complaining,325,"[ntuple] Rename `struct EmptyBase` and add to CustomStructLinkDef.h; This pull request adds the `EmptyBase` class to CustomStructLinkDef.h (required now by the `ntuple_modelext` test). It also renames the class to `EmptyStruct`, which probably makes more sense now. This should fix the `ntuple_modelext` on Windows, that was complaining due to. ```. unknown file: error: C++ exception with description: ""RField: no I/O support for type EmptyBase. At:. _cdecl ROOT::Experimental::RClassField::RClassField(class std::basic_string_view<char,struct std::char_traits<char> >, class std::basic_string_view<char,struct std::char_traits<char> >, class TClass *) [C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx:1117]. "" thrown in the test body. ```. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12979
https://github.com/root-project/root/pull/12979:178,testability,test,test,178,"[ntuple] Rename `struct EmptyBase` and add to CustomStructLinkDef.h; This pull request adds the `EmptyBase` class to CustomStructLinkDef.h (required now by the `ntuple_modelext` test). It also renames the class to `EmptyStruct`, which probably makes more sense now. This should fix the `ntuple_modelext` on Windows, that was complaining due to. ```. unknown file: error: C++ exception with description: ""RField: no I/O support for type EmptyBase. At:. _cdecl ROOT::Experimental::RClassField::RClassField(class std::basic_string_view<char,struct std::char_traits<char> >, class std::basic_string_view<char,struct std::char_traits<char> >, class TClass *) [C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx:1117]. "" thrown in the test body. ```. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12979
https://github.com/root-project/root/pull/12979:723,testability,test,test,723,"[ntuple] Rename `struct EmptyBase` and add to CustomStructLinkDef.h; This pull request adds the `EmptyBase` class to CustomStructLinkDef.h (required now by the `ntuple_modelext` test). It also renames the class to `EmptyStruct`, which probably makes more sense now. This should fix the `ntuple_modelext` on Windows, that was complaining due to. ```. unknown file: error: C++ exception with description: ""RField: no I/O support for type EmptyBase. At:. _cdecl ROOT::Experimental::RClassField::RClassField(class std::basic_string_view<char,struct std::char_traits<char> >, class std::basic_string_view<char,struct std::char_traits<char> >, class TClass *) [C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx:1117]. "" thrown in the test body. ```. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12979
https://github.com/root-project/root/pull/12979:760,testability,test,tested,760,"[ntuple] Rename `struct EmptyBase` and add to CustomStructLinkDef.h; This pull request adds the `EmptyBase` class to CustomStructLinkDef.h (required now by the `ntuple_modelext` test). It also renames the class to `EmptyStruct`, which probably makes more sense now. This should fix the `ntuple_modelext` on Windows, that was complaining due to. ```. unknown file: error: C++ exception with description: ""RField: no I/O support for type EmptyBase. At:. _cdecl ROOT::Experimental::RClassField::RClassField(class std::basic_string_view<char,struct std::char_traits<char> >, class std::basic_string_view<char,struct std::char_traits<char> >, class TClass *) [C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx:1117]. "" thrown in the test body. ```. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12979
https://github.com/root-project/root/pull/12979:46,usability,Custom,CustomStructLinkDef,46,"[ntuple] Rename `struct EmptyBase` and add to CustomStructLinkDef.h; This pull request adds the `EmptyBase` class to CustomStructLinkDef.h (required now by the `ntuple_modelext` test). It also renames the class to `EmptyStruct`, which probably makes more sense now. This should fix the `ntuple_modelext` on Windows, that was complaining due to. ```. unknown file: error: C++ exception with description: ""RField: no I/O support for type EmptyBase. At:. _cdecl ROOT::Experimental::RClassField::RClassField(class std::basic_string_view<char,struct std::char_traits<char> >, class std::basic_string_view<char,struct std::char_traits<char> >, class TClass *) [C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx:1117]. "" thrown in the test body. ```. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12979
https://github.com/root-project/root/pull/12979:117,usability,Custom,CustomStructLinkDef,117,"[ntuple] Rename `struct EmptyBase` and add to CustomStructLinkDef.h; This pull request adds the `EmptyBase` class to CustomStructLinkDef.h (required now by the `ntuple_modelext` test). It also renames the class to `EmptyStruct`, which probably makes more sense now. This should fix the `ntuple_modelext` on Windows, that was complaining due to. ```. unknown file: error: C++ exception with description: ""RField: no I/O support for type EmptyBase. At:. _cdecl ROOT::Experimental::RClassField::RClassField(class std::basic_string_view<char,struct std::char_traits<char> >, class std::basic_string_view<char,struct std::char_traits<char> >, class TClass *) [C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx:1117]. "" thrown in the test body. ```. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12979
https://github.com/root-project/root/pull/12979:364,usability,error,error,364,"[ntuple] Rename `struct EmptyBase` and add to CustomStructLinkDef.h; This pull request adds the `EmptyBase` class to CustomStructLinkDef.h (required now by the `ntuple_modelext` test). It also renames the class to `EmptyStruct`, which probably makes more sense now. This should fix the `ntuple_modelext` on Windows, that was complaining due to. ```. unknown file: error: C++ exception with description: ""RField: no I/O support for type EmptyBase. At:. _cdecl ROOT::Experimental::RClassField::RClassField(class std::basic_string_view<char,struct std::char_traits<char> >, class std::basic_string_view<char,struct std::char_traits<char> >, class TClass *) [C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx:1117]. "" thrown in the test body. ```. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12979
https://github.com/root-project/root/pull/12979:419,usability,support,support,419,"[ntuple] Rename `struct EmptyBase` and add to CustomStructLinkDef.h; This pull request adds the `EmptyBase` class to CustomStructLinkDef.h (required now by the `ntuple_modelext` test). It also renames the class to `EmptyStruct`, which probably makes more sense now. This should fix the `ntuple_modelext` on Windows, that was complaining due to. ```. unknown file: error: C++ exception with description: ""RField: no I/O support for type EmptyBase. At:. _cdecl ROOT::Experimental::RClassField::RClassField(class std::basic_string_view<char,struct std::char_traits<char> >, class std::basic_string_view<char,struct std::char_traits<char> >, class TClass *) [C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx:1117]. "" thrown in the test body. ```. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12979
https://github.com/root-project/root/pull/12980:101,availability,cluster,cluster,101,"[ntuple] Fix issue in `RPageSinkBuf::CommitClusterImpl()`; Some columns may have no pages in a given cluster (e.g. a field with type `std::string` that contains no data). In such cases, it is still okay to use `CommitSealedPageV()`. However, the previous implementation of `RColumnBuf::HasSealedPagesOnly()` prevented that. This pull request fixes the issue and updates the unit tests accordingly. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12980
https://github.com/root-project/root/pull/12980:101,deployability,cluster,cluster,101,"[ntuple] Fix issue in `RPageSinkBuf::CommitClusterImpl()`; Some columns may have no pages in a given cluster (e.g. a field with type `std::string` that contains no data). In such cases, it is still okay to use `CommitSealedPageV()`. However, the previous implementation of `RColumnBuf::HasSealedPagesOnly()` prevented that. This pull request fixes the issue and updates the unit tests accordingly. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12980
https://github.com/root-project/root/pull/12980:152,deployability,contain,contains,152,"[ntuple] Fix issue in `RPageSinkBuf::CommitClusterImpl()`; Some columns may have no pages in a given cluster (e.g. a field with type `std::string` that contains no data). In such cases, it is still okay to use `CommitSealedPageV()`. However, the previous implementation of `RColumnBuf::HasSealedPagesOnly()` prevented that. This pull request fixes the issue and updates the unit tests accordingly. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12980
https://github.com/root-project/root/pull/12980:362,deployability,updat,updates,362,"[ntuple] Fix issue in `RPageSinkBuf::CommitClusterImpl()`; Some columns may have no pages in a given cluster (e.g. a field with type `std::string` that contains no data). In such cases, it is still okay to use `CommitSealedPageV()`. However, the previous implementation of `RColumnBuf::HasSealedPagesOnly()` prevented that. This pull request fixes the issue and updates the unit tests accordingly. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12980
https://github.com/root-project/root/pull/12980:449,deployability,updat,updated,449,"[ntuple] Fix issue in `RPageSinkBuf::CommitClusterImpl()`; Some columns may have no pages in a given cluster (e.g. a field with type `std::string` that contains no data). In such cases, it is still okay to use `CommitSealedPageV()`. However, the previous implementation of `RColumnBuf::HasSealedPagesOnly()` prevented that. This pull request fixes the issue and updates the unit tests accordingly. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12980
https://github.com/root-project/root/pull/12980:308,safety,prevent,prevented,308,"[ntuple] Fix issue in `RPageSinkBuf::CommitClusterImpl()`; Some columns may have no pages in a given cluster (e.g. a field with type `std::string` that contains no data). In such cases, it is still okay to use `CommitSealedPageV()`. However, the previous implementation of `RColumnBuf::HasSealedPagesOnly()` prevented that. This pull request fixes the issue and updates the unit tests accordingly. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12980
https://github.com/root-project/root/pull/12980:362,safety,updat,updates,362,"[ntuple] Fix issue in `RPageSinkBuf::CommitClusterImpl()`; Some columns may have no pages in a given cluster (e.g. a field with type `std::string` that contains no data). In such cases, it is still okay to use `CommitSealedPageV()`. However, the previous implementation of `RColumnBuf::HasSealedPagesOnly()` prevented that. This pull request fixes the issue and updates the unit tests accordingly. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12980
https://github.com/root-project/root/pull/12980:379,safety,test,tests,379,"[ntuple] Fix issue in `RPageSinkBuf::CommitClusterImpl()`; Some columns may have no pages in a given cluster (e.g. a field with type `std::string` that contains no data). In such cases, it is still okay to use `CommitSealedPageV()`. However, the previous implementation of `RColumnBuf::HasSealedPagesOnly()` prevented that. This pull request fixes the issue and updates the unit tests accordingly. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12980
https://github.com/root-project/root/pull/12980:419,safety,test,tested,419,"[ntuple] Fix issue in `RPageSinkBuf::CommitClusterImpl()`; Some columns may have no pages in a given cluster (e.g. a field with type `std::string` that contains no data). In such cases, it is still okay to use `CommitSealedPageV()`. However, the previous implementation of `RColumnBuf::HasSealedPagesOnly()` prevented that. This pull request fixes the issue and updates the unit tests accordingly. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12980
https://github.com/root-project/root/pull/12980:449,safety,updat,updated,449,"[ntuple] Fix issue in `RPageSinkBuf::CommitClusterImpl()`; Some columns may have no pages in a given cluster (e.g. a field with type `std::string` that contains no data). In such cases, it is still okay to use `CommitSealedPageV()`. However, the previous implementation of `RColumnBuf::HasSealedPagesOnly()` prevented that. This pull request fixes the issue and updates the unit tests accordingly. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12980
https://github.com/root-project/root/pull/12980:308,security,preven,prevented,308,"[ntuple] Fix issue in `RPageSinkBuf::CommitClusterImpl()`; Some columns may have no pages in a given cluster (e.g. a field with type `std::string` that contains no data). In such cases, it is still okay to use `CommitSealedPageV()`. However, the previous implementation of `RColumnBuf::HasSealedPagesOnly()` prevented that. This pull request fixes the issue and updates the unit tests accordingly. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12980
https://github.com/root-project/root/pull/12980:362,security,updat,updates,362,"[ntuple] Fix issue in `RPageSinkBuf::CommitClusterImpl()`; Some columns may have no pages in a given cluster (e.g. a field with type `std::string` that contains no data). In such cases, it is still okay to use `CommitSealedPageV()`. However, the previous implementation of `RColumnBuf::HasSealedPagesOnly()` prevented that. This pull request fixes the issue and updates the unit tests accordingly. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12980
https://github.com/root-project/root/pull/12980:449,security,updat,updated,449,"[ntuple] Fix issue in `RPageSinkBuf::CommitClusterImpl()`; Some columns may have no pages in a given cluster (e.g. a field with type `std::string` that contains no data). In such cases, it is still okay to use `CommitSealedPageV()`. However, the previous implementation of `RColumnBuf::HasSealedPagesOnly()` prevented that. This pull request fixes the issue and updates the unit tests accordingly. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12980
https://github.com/root-project/root/pull/12980:374,testability,unit,unit,374,"[ntuple] Fix issue in `RPageSinkBuf::CommitClusterImpl()`; Some columns may have no pages in a given cluster (e.g. a field with type `std::string` that contains no data). In such cases, it is still okay to use `CommitSealedPageV()`. However, the previous implementation of `RColumnBuf::HasSealedPagesOnly()` prevented that. This pull request fixes the issue and updates the unit tests accordingly. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12980
https://github.com/root-project/root/pull/12980:379,testability,test,tests,379,"[ntuple] Fix issue in `RPageSinkBuf::CommitClusterImpl()`; Some columns may have no pages in a given cluster (e.g. a field with type `std::string` that contains no data). In such cases, it is still okay to use `CommitSealedPageV()`. However, the previous implementation of `RColumnBuf::HasSealedPagesOnly()` prevented that. This pull request fixes the issue and updates the unit tests accordingly. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12980
https://github.com/root-project/root/pull/12980:419,testability,test,tested,419,"[ntuple] Fix issue in `RPageSinkBuf::CommitClusterImpl()`; Some columns may have no pages in a given cluster (e.g. a field with type `std::string` that contains no data). In such cases, it is still okay to use `CommitSealedPageV()`. However, the previous implementation of `RColumnBuf::HasSealedPagesOnly()` prevented that. This pull request fixes the issue and updates the unit tests accordingly. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12980
https://github.com/root-project/root/pull/12981:109,availability,error,errors,109,"Disambiguate namespaces in dataframe ; The triggering issue for these modifications was the presence of such errors in our CI (see for example https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/176461/consoleFull):. ```. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx: In member function ‘void ROOT::Internal::RDF::RVariedAction<Helper, PrevNode, ColumnTypes_t>::InitSlot(TTreeReader*, unsigned int)’:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx:106:7: error: reference to ‘RDFInternal’ is ambiguous. RDFInternal::RColumnReadersInfo info{GetColumnNames(), GetColRegister(), fIsDefine.data(), *fLoopManager};. ^~~~~~~~~~~. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:0:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:95:44: note: candidates are: namespace ROOT::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ^. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:16:0,. from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RLoopManager.hxx:99:44: note: namespace ROOT::Detail::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ```. The errors refer to the definition of `namespace RDFInternal` in both RResultPtr.hxx and RLoopManager.hxx. To be more precise, the namespace alias was defined:. * Inside of namespace `ROOT::RDF` within RResultPtr.hxx. * Inside of namespace `ROOT::Detail::RDF` within RLoopManager.hxx. Although this is not a real issue per se, the ambiguity spawns from the fact that some headers included. ```. using namespace ROOT::Detail::RDF;. using namespace RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12981
https://github.com/root-project/root/pull/12981:158,availability,servic,services,158,"Disambiguate namespaces in dataframe ; The triggering issue for these modifications was the presence of such errors in our CI (see for example https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/176461/consoleFull):. ```. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx: In member function ‘void ROOT::Internal::RDF::RVariedAction<Helper, PrevNode, ColumnTypes_t>::InitSlot(TTreeReader*, unsigned int)’:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx:106:7: error: reference to ‘RDFInternal’ is ambiguous. RDFInternal::RColumnReadersInfo info{GetColumnNames(), GetColRegister(), fIsDefine.data(), *fLoopManager};. ^~~~~~~~~~~. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:0:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:95:44: note: candidates are: namespace ROOT::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ^. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:16:0,. from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RLoopManager.hxx:99:44: note: namespace ROOT::Detail::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ```. The errors refer to the definition of `namespace RDFInternal` in both RResultPtr.hxx and RLoopManager.hxx. To be more precise, the namespace alias was defined:. * Inside of namespace `ROOT::RDF` within RResultPtr.hxx. * Inside of namespace `ROOT::Detail::RDF` within RLoopManager.hxx. Although this is not a real issue per se, the ambiguity spawns from the fact that some headers included. ```. using namespace ROOT::Detail::RDF;. using namespace RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12981
https://github.com/root-project/root/pull/12981:577,availability,error,error,577,"Disambiguate namespaces in dataframe ; The triggering issue for these modifications was the presence of such errors in our CI (see for example https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/176461/consoleFull):. ```. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx: In member function ‘void ROOT::Internal::RDF::RVariedAction<Helper, PrevNode, ColumnTypes_t>::InitSlot(TTreeReader*, unsigned int)’:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx:106:7: error: reference to ‘RDFInternal’ is ambiguous. RDFInternal::RColumnReadersInfo info{GetColumnNames(), GetColRegister(), fIsDefine.data(), *fLoopManager};. ^~~~~~~~~~~. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:0:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:95:44: note: candidates are: namespace ROOT::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ^. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:16:0,. from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RLoopManager.hxx:99:44: note: namespace ROOT::Detail::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ```. The errors refer to the definition of `namespace RDFInternal` in both RResultPtr.hxx and RLoopManager.hxx. To be more precise, the namespace alias was defined:. * Inside of namespace `ROOT::RDF` within RResultPtr.hxx. * Inside of namespace `ROOT::Detail::RDF` within RLoopManager.hxx. Although this is not a real issue per se, the ambiguity spawns from the fact that some headers included. ```. using namespace ROOT::Detail::RDF;. using namespace RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12981
https://github.com/root-project/root/pull/12981:1555,availability,error,errors,1555,"dAction.hxx:106:7: error: reference to ‘RDFInternal’ is ambiguous. RDFInternal::RColumnReadersInfo info{GetColumnNames(), GetColRegister(), fIsDefine.data(), *fLoopManager};. ^~~~~~~~~~~. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:0:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:95:44: note: candidates are: namespace ROOT::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ^. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:16:0,. from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RLoopManager.hxx:99:44: note: namespace ROOT::Detail::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ```. The errors refer to the definition of `namespace RDFInternal` in both RResultPtr.hxx and RLoopManager.hxx. To be more precise, the namespace alias was defined:. * Inside of namespace `ROOT::RDF` within RResultPtr.hxx. * Inside of namespace `ROOT::Detail::RDF` within RLoopManager.hxx. Although this is not a real issue per se, the ambiguity spawns from the fact that some headers included. ```. using namespace ROOT::Detail::RDF;. using namespace ROOT::RDF;. ```. For example in ROOT/RDF/Utils.hxx, which is transitively included in RVariedAction.hxx via RActionBase.hxx. More modern compilers seem to not be affected by the ambiguity, but at least on GCC 7.5 this is blocking compilation. In this commit, the structure of namespace declarations and usage of classes within the dataframe library is disambiguated as follows:. * Removed all `using namespace` declarations. * In headers, use `using Namespace::Class` sparingly, and introduce `namespace RDFDetail` and similar wherever possible. * If only a fe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12981
https://github.com/root-project/root/pull/12981:158,deployability,servic,services,158,"Disambiguate namespaces in dataframe ; The triggering issue for these modifications was the presence of such errors in our CI (see for example https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/176461/consoleFull):. ```. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx: In member function ‘void ROOT::Internal::RDF::RVariedAction<Helper, PrevNode, ColumnTypes_t>::InitSlot(TTreeReader*, unsigned int)’:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx:106:7: error: reference to ‘RDFInternal’ is ambiguous. RDFInternal::RColumnReadersInfo info{GetColumnNames(), GetColRegister(), fIsDefine.data(), *fLoopManager};. ^~~~~~~~~~~. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:0:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:95:44: note: candidates are: namespace ROOT::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ^. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:16:0,. from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RLoopManager.hxx:99:44: note: namespace ROOT::Detail::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ```. The errors refer to the definition of `namespace RDFInternal` in both RResultPtr.hxx and RLoopManager.hxx. To be more precise, the namespace alias was defined:. * Inside of namespace `ROOT::RDF` within RResultPtr.hxx. * Inside of namespace `ROOT::Detail::RDF` within RLoopManager.hxx. Although this is not a real issue per se, the ambiguity spawns from the fact that some headers included. ```. using namespace ROOT::Detail::RDF;. using namespace RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12981
https://github.com/root-project/root/pull/12981:210,deployability,build,build,210,"Disambiguate namespaces in dataframe ; The triggering issue for these modifications was the presence of such errors in our CI (see for example https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/176461/consoleFull):. ```. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx: In member function ‘void ROOT::Internal::RDF::RVariedAction<Helper, PrevNode, ColumnTypes_t>::InitSlot(TTreeReader*, unsigned int)’:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx:106:7: error: reference to ‘RDFInternal’ is ambiguous. RDFInternal::RColumnReadersInfo info{GetColumnNames(), GetColRegister(), fIsDefine.data(), *fLoopManager};. ^~~~~~~~~~~. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:0:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:95:44: note: candidates are: namespace ROOT::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ^. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:16:0,. from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RLoopManager.hxx:99:44: note: namespace ROOT::Detail::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ```. The errors refer to the definition of `namespace RDFInternal` in both RResultPtr.hxx and RLoopManager.hxx. To be more precise, the namespace alias was defined:. * Inside of namespace `ROOT::RDF` within RResultPtr.hxx. * Inside of namespace `ROOT::Detail::RDF` within RLoopManager.hxx. Although this is not a real issue per se, the ambiguity spawns from the fact that some headers included. ```. using namespace ROOT::Detail::RDF;. using namespace RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12981
https://github.com/root-project/root/pull/12981:248,deployability,build,build,248,"Disambiguate namespaces in dataframe ; The triggering issue for these modifications was the presence of such errors in our CI (see for example https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/176461/consoleFull):. ```. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx: In member function ‘void ROOT::Internal::RDF::RVariedAction<Helper, PrevNode, ColumnTypes_t>::InitSlot(TTreeReader*, unsigned int)’:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx:106:7: error: reference to ‘RDFInternal’ is ambiguous. RDFInternal::RColumnReadersInfo info{GetColumnNames(), GetColRegister(), fIsDefine.data(), *fLoopManager};. ^~~~~~~~~~~. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:0:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:95:44: note: candidates are: namespace ROOT::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ^. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:16:0,. from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RLoopManager.hxx:99:44: note: namespace ROOT::Detail::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ```. The errors refer to the definition of `namespace RDFInternal` in both RResultPtr.hxx and RLoopManager.hxx. To be more precise, the namespace alias was defined:. * Inside of namespace `ROOT::RDF` within RResultPtr.hxx. * Inside of namespace `ROOT::Detail::RDF` within RLoopManager.hxx. Although this is not a real issue per se, the ambiguity spawns from the fact that some headers included. ```. using namespace ROOT::Detail::RDF;. using namespace RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12981
https://github.com/root-project/root/pull/12981:282,deployability,build,build,282,"Disambiguate namespaces in dataframe ; The triggering issue for these modifications was the presence of such errors in our CI (see for example https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/176461/consoleFull):. ```. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx: In member function ‘void ROOT::Internal::RDF::RVariedAction<Helper, PrevNode, ColumnTypes_t>::InitSlot(TTreeReader*, unsigned int)’:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx:106:7: error: reference to ‘RDFInternal’ is ambiguous. RDFInternal::RColumnReadersInfo info{GetColumnNames(), GetColRegister(), fIsDefine.data(), *fLoopManager};. ^~~~~~~~~~~. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:0:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:95:44: note: candidates are: namespace ROOT::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ^. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:16:0,. from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RLoopManager.hxx:99:44: note: namespace ROOT::Detail::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ```. The errors refer to the definition of `namespace RDFInternal` in both RResultPtr.hxx and RLoopManager.hxx. To be more precise, the namespace alias was defined:. * Inside of namespace `ROOT::RDF` within RResultPtr.hxx. * Inside of namespace `ROOT::Detail::RDF` within RLoopManager.hxx. Although this is not a real issue per se, the ambiguity spawns from the fact that some headers included. ```. using namespace ROOT::Detail::RDF;. using namespace RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12981
https://github.com/root-project/root/pull/12981:479,deployability,build,build,479,"Disambiguate namespaces in dataframe ; The triggering issue for these modifications was the presence of such errors in our CI (see for example https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/176461/consoleFull):. ```. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx: In member function ‘void ROOT::Internal::RDF::RVariedAction<Helper, PrevNode, ColumnTypes_t>::InitSlot(TTreeReader*, unsigned int)’:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx:106:7: error: reference to ‘RDFInternal’ is ambiguous. RDFInternal::RColumnReadersInfo info{GetColumnNames(), GetColRegister(), fIsDefine.data(), *fLoopManager};. ^~~~~~~~~~~. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:0:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:95:44: note: candidates are: namespace ROOT::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ^. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:16:0,. from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RLoopManager.hxx:99:44: note: namespace ROOT::Detail::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ```. The errors refer to the definition of `namespace RDFInternal` in both RResultPtr.hxx and RLoopManager.hxx. To be more precise, the namespace alias was defined:. * Inside of namespace `ROOT::RDF` within RResultPtr.hxx. * Inside of namespace `ROOT::Detail::RDF` within RLoopManager.hxx. Although this is not a real issue per se, the ambiguity spawns from the fact that some headers included. ```. using namespace ROOT::Detail::RDF;. using namespace RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12981
https://github.com/root-project/root/pull/12981:513,deployability,build,build,513,"Disambiguate namespaces in dataframe ; The triggering issue for these modifications was the presence of such errors in our CI (see for example https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/176461/consoleFull):. ```. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx: In member function ‘void ROOT::Internal::RDF::RVariedAction<Helper, PrevNode, ColumnTypes_t>::InitSlot(TTreeReader*, unsigned int)’:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx:106:7: error: reference to ‘RDFInternal’ is ambiguous. RDFInternal::RColumnReadersInfo info{GetColumnNames(), GetColRegister(), fIsDefine.data(), *fLoopManager};. ^~~~~~~~~~~. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:0:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:95:44: note: candidates are: namespace ROOT::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ^. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:16:0,. from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RLoopManager.hxx:99:44: note: namespace ROOT::Detail::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ```. The errors refer to the definition of `namespace RDFInternal` in both RResultPtr.hxx and RLoopManager.hxx. To be more precise, the namespace alias was defined:. * Inside of namespace `ROOT::RDF` within RResultPtr.hxx. * Inside of namespace `ROOT::Detail::RDF` within RLoopManager.hxx. Although this is not a real issue per se, the ambiguity spawns from the fact that some headers included. ```. using namespace ROOT::Detail::RDF;. using namespace RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12981
https://github.com/root-project/root/pull/12981:773,deployability,build,build,773,"Disambiguate namespaces in dataframe ; The triggering issue for these modifications was the presence of such errors in our CI (see for example https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/176461/consoleFull):. ```. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx: In member function ‘void ROOT::Internal::RDF::RVariedAction<Helper, PrevNode, ColumnTypes_t>::InitSlot(TTreeReader*, unsigned int)’:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx:106:7: error: reference to ‘RDFInternal’ is ambiguous. RDFInternal::RColumnReadersInfo info{GetColumnNames(), GetColRegister(), fIsDefine.data(), *fLoopManager};. ^~~~~~~~~~~. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:0:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:95:44: note: candidates are: namespace ROOT::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ^. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:16:0,. from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RLoopManager.hxx:99:44: note: namespace ROOT::Detail::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ```. The errors refer to the definition of `namespace RDFInternal` in both RResultPtr.hxx and RLoopManager.hxx. To be more precise, the namespace alias was defined:. * Inside of namespace `ROOT::RDF` within RResultPtr.hxx. * Inside of namespace `ROOT::Detail::RDF` within RLoopManager.hxx. Although this is not a real issue per se, the ambiguity spawns from the fact that some headers included. ```. using namespace ROOT::Detail::RDF;. using namespace RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12981
https://github.com/root-project/root/pull/12981:807,deployability,build,build,807,"Disambiguate namespaces in dataframe ; The triggering issue for these modifications was the presence of such errors in our CI (see for example https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/176461/consoleFull):. ```. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx: In member function ‘void ROOT::Internal::RDF::RVariedAction<Helper, PrevNode, ColumnTypes_t>::InitSlot(TTreeReader*, unsigned int)’:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx:106:7: error: reference to ‘RDFInternal’ is ambiguous. RDFInternal::RColumnReadersInfo info{GetColumnNames(), GetColRegister(), fIsDefine.data(), *fLoopManager};. ^~~~~~~~~~~. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:0:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:95:44: note: candidates are: namespace ROOT::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ^. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:16:0,. from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RLoopManager.hxx:99:44: note: namespace ROOT::Detail::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ```. The errors refer to the definition of `namespace RDFInternal` in both RResultPtr.hxx and RLoopManager.hxx. To be more precise, the namespace alias was defined:. * Inside of namespace `ROOT::RDF` within RResultPtr.hxx. * Inside of namespace `ROOT::Detail::RDF` within RLoopManager.hxx. Although this is not a real issue per se, the ambiguity spawns from the fact that some headers included. ```. using namespace ROOT::Detail::RDF;. using namespace RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12981
https://github.com/root-project/root/pull/12981:864,deployability,build,build,864,"Disambiguate namespaces in dataframe ; The triggering issue for these modifications was the presence of such errors in our CI (see for example https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/176461/consoleFull):. ```. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx: In member function ‘void ROOT::Internal::RDF::RVariedAction<Helper, PrevNode, ColumnTypes_t>::InitSlot(TTreeReader*, unsigned int)’:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx:106:7: error: reference to ‘RDFInternal’ is ambiguous. RDFInternal::RColumnReadersInfo info{GetColumnNames(), GetColRegister(), fIsDefine.data(), *fLoopManager};. ^~~~~~~~~~~. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:0:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:95:44: note: candidates are: namespace ROOT::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ^. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:16:0,. from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RLoopManager.hxx:99:44: note: namespace ROOT::Detail::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ```. The errors refer to the definition of `namespace RDFInternal` in both RResultPtr.hxx and RLoopManager.hxx. To be more precise, the namespace alias was defined:. * Inside of namespace `ROOT::RDF` within RResultPtr.hxx. * Inside of namespace `ROOT::Detail::RDF` within RLoopManager.hxx. Although this is not a real issue per se, the ambiguity spawns from the fact that some headers included. ```. using namespace ROOT::Detail::RDF;. using namespace RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12981
https://github.com/root-project/root/pull/12981:898,deployability,build,build,898,"Disambiguate namespaces in dataframe ; The triggering issue for these modifications was the presence of such errors in our CI (see for example https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/176461/consoleFull):. ```. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx: In member function ‘void ROOT::Internal::RDF::RVariedAction<Helper, PrevNode, ColumnTypes_t>::InitSlot(TTreeReader*, unsigned int)’:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx:106:7: error: reference to ‘RDFInternal’ is ambiguous. RDFInternal::RColumnReadersInfo info{GetColumnNames(), GetColRegister(), fIsDefine.data(), *fLoopManager};. ^~~~~~~~~~~. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:0:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:95:44: note: candidates are: namespace ROOT::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ^. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:16:0,. from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RLoopManager.hxx:99:44: note: namespace ROOT::Detail::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ```. The errors refer to the definition of `namespace RDFInternal` in both RResultPtr.hxx and RLoopManager.hxx. To be more precise, the namespace alias was defined:. * Inside of namespace `ROOT::RDF` within RResultPtr.hxx. * Inside of namespace `ROOT::Detail::RDF` within RLoopManager.hxx. Although this is not a real issue per se, the ambiguity spawns from the fact that some headers included. ```. using namespace ROOT::Detail::RDF;. using namespace RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12981
https://github.com/root-project/root/pull/12981:1126,deployability,build,build,1126,"e for example https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/176461/consoleFull):. ```. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx: In member function ‘void ROOT::Internal::RDF::RVariedAction<Helper, PrevNode, ColumnTypes_t>::InitSlot(TTreeReader*, unsigned int)’:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx:106:7: error: reference to ‘RDFInternal’ is ambiguous. RDFInternal::RColumnReadersInfo info{GetColumnNames(), GetColRegister(), fIsDefine.data(), *fLoopManager};. ^~~~~~~~~~~. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:0:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:95:44: note: candidates are: namespace ROOT::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ^. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:16:0,. from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RLoopManager.hxx:99:44: note: namespace ROOT::Detail::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ```. The errors refer to the definition of `namespace RDFInternal` in both RResultPtr.hxx and RLoopManager.hxx. To be more precise, the namespace alias was defined:. * Inside of namespace `ROOT::RDF` within RResultPtr.hxx. * Inside of namespace `ROOT::Detail::RDF` within RLoopManager.hxx. Although this is not a real issue per se, the ambiguity spawns from the fact that some headers included. ```. using namespace ROOT::Detail::RDF;. using namespace ROOT::RDF;. ```. For example in ROOT/RDF/Utils.hxx, which is transitively included in RVariedAction.hxx via RActionBase.hxx. More m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12981
https://github.com/root-project/root/pull/12981:1160,deployability,build,build,1160,"ces.cern.ch/root-jenkins/job/root-pullrequests-build/176461/consoleFull):. ```. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx: In member function ‘void ROOT::Internal::RDF::RVariedAction<Helper, PrevNode, ColumnTypes_t>::InitSlot(TTreeReader*, unsigned int)’:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx:106:7: error: reference to ‘RDFInternal’ is ambiguous. RDFInternal::RColumnReadersInfo info{GetColumnNames(), GetColRegister(), fIsDefine.data(), *fLoopManager};. ^~~~~~~~~~~. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:0:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:95:44: note: candidates are: namespace ROOT::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ^. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:16:0,. from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RLoopManager.hxx:99:44: note: namespace ROOT::Detail::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ```. The errors refer to the definition of `namespace RDFInternal` in both RResultPtr.hxx and RLoopManager.hxx. To be more precise, the namespace alias was defined:. * Inside of namespace `ROOT::RDF` within RResultPtr.hxx. * Inside of namespace `ROOT::Detail::RDF` within RLoopManager.hxx. Although this is not a real issue per se, the ambiguity spawns from the fact that some headers included. ```. using namespace ROOT::Detail::RDF;. using namespace ROOT::RDF;. ```. For example in ROOT/RDF/Utils.hxx, which is transitively included in RVariedAction.hxx via RActionBase.hxx. More modern compilers seem to not be aff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12981
https://github.com/root-project/root/pull/12981:1227,deployability,build,build,1227,"Full):. ```. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx: In member function ‘void ROOT::Internal::RDF::RVariedAction<Helper, PrevNode, ColumnTypes_t>::InitSlot(TTreeReader*, unsigned int)’:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx:106:7: error: reference to ‘RDFInternal’ is ambiguous. RDFInternal::RColumnReadersInfo info{GetColumnNames(), GetColRegister(), fIsDefine.data(), *fLoopManager};. ^~~~~~~~~~~. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:0:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:95:44: note: candidates are: namespace ROOT::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ^. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:16:0,. from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RLoopManager.hxx:99:44: note: namespace ROOT::Detail::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ```. The errors refer to the definition of `namespace RDFInternal` in both RResultPtr.hxx and RLoopManager.hxx. To be more precise, the namespace alias was defined:. * Inside of namespace `ROOT::RDF` within RResultPtr.hxx. * Inside of namespace `ROOT::Detail::RDF` within RLoopManager.hxx. Although this is not a real issue per se, the ambiguity spawns from the fact that some headers included. ```. using namespace ROOT::Detail::RDF;. using namespace ROOT::RDF;. ```. For example in ROOT/RDF/Utils.hxx, which is transitively included in RVariedAction.hxx via RActionBase.hxx. More modern compilers seem to not be affected by the ambiguity, but at least on GCC 7.5 this is blocking co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12981
https://github.com/root-project/root/pull/12981:1261,deployability,build,build,1261,"root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx: In member function ‘void ROOT::Internal::RDF::RVariedAction<Helper, PrevNode, ColumnTypes_t>::InitSlot(TTreeReader*, unsigned int)’:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx:106:7: error: reference to ‘RDFInternal’ is ambiguous. RDFInternal::RColumnReadersInfo info{GetColumnNames(), GetColRegister(), fIsDefine.data(), *fLoopManager};. ^~~~~~~~~~~. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:0:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:95:44: note: candidates are: namespace ROOT::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ^. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:16:0,. from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RLoopManager.hxx:99:44: note: namespace ROOT::Detail::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ```. The errors refer to the definition of `namespace RDFInternal` in both RResultPtr.hxx and RLoopManager.hxx. To be more precise, the namespace alias was defined:. * Inside of namespace `ROOT::RDF` within RResultPtr.hxx. * Inside of namespace `ROOT::Detail::RDF` within RLoopManager.hxx. Although this is not a real issue per se, the ambiguity spawns from the fact that some headers included. ```. using namespace ROOT::Detail::RDF;. using namespace ROOT::RDF;. ```. For example in ROOT/RDF/Utils.hxx, which is transitively included in RVariedAction.hxx via RActionBase.hxx. More modern compilers seem to not be affected by the ambiguity, but at least on GCC 7.5 this is blocking compilation. In this commit, the str",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12981
https://github.com/root-project/root/pull/12981:1316,deployability,build,build,1316,"F/RVariedAction.hxx: In member function ‘void ROOT::Internal::RDF::RVariedAction<Helper, PrevNode, ColumnTypes_t>::InitSlot(TTreeReader*, unsigned int)’:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx:106:7: error: reference to ‘RDFInternal’ is ambiguous. RDFInternal::RColumnReadersInfo info{GetColumnNames(), GetColRegister(), fIsDefine.data(), *fLoopManager};. ^~~~~~~~~~~. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:0:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:95:44: note: candidates are: namespace ROOT::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ^. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:16:0,. from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RLoopManager.hxx:99:44: note: namespace ROOT::Detail::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ```. The errors refer to the definition of `namespace RDFInternal` in both RResultPtr.hxx and RLoopManager.hxx. To be more precise, the namespace alias was defined:. * Inside of namespace `ROOT::RDF` within RResultPtr.hxx. * Inside of namespace `ROOT::Detail::RDF` within RLoopManager.hxx. Although this is not a real issue per se, the ambiguity spawns from the fact that some headers included. ```. using namespace ROOT::Detail::RDF;. using namespace ROOT::RDF;. ```. For example in ROOT/RDF/Utils.hxx, which is transitively included in RVariedAction.hxx via RActionBase.hxx. More modern compilers seem to not be affected by the ambiguity, but at least on GCC 7.5 this is blocking compilation. In this commit, the structure of namespace declarations and usage of classes w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12981
https://github.com/root-project/root/pull/12981:1350,deployability,build,build,1350,"ction ‘void ROOT::Internal::RDF::RVariedAction<Helper, PrevNode, ColumnTypes_t>::InitSlot(TTreeReader*, unsigned int)’:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx:106:7: error: reference to ‘RDFInternal’ is ambiguous. RDFInternal::RColumnReadersInfo info{GetColumnNames(), GetColRegister(), fIsDefine.data(), *fLoopManager};. ^~~~~~~~~~~. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:0:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:95:44: note: candidates are: namespace ROOT::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ^. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:16:0,. from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RLoopManager.hxx:99:44: note: namespace ROOT::Detail::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ```. The errors refer to the definition of `namespace RDFInternal` in both RResultPtr.hxx and RLoopManager.hxx. To be more precise, the namespace alias was defined:. * Inside of namespace `ROOT::RDF` within RResultPtr.hxx. * Inside of namespace `ROOT::Detail::RDF` within RLoopManager.hxx. Although this is not a real issue per se, the ambiguity spawns from the fact that some headers included. ```. using namespace ROOT::Detail::RDF;. using namespace ROOT::RDF;. ```. For example in ROOT/RDF/Utils.hxx, which is transitively included in RVariedAction.hxx via RActionBase.hxx. More modern compilers seem to not be affected by the ambiguity, but at least on GCC 7.5 this is blocking compilation. In this commit, the structure of namespace declarations and usage of classes within the dataframe library is dis",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12981
https://github.com/root-project/root/pull/12981:158,integrability,servic,services,158,"Disambiguate namespaces in dataframe ; The triggering issue for these modifications was the presence of such errors in our CI (see for example https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/176461/consoleFull):. ```. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx: In member function ‘void ROOT::Internal::RDF::RVariedAction<Helper, PrevNode, ColumnTypes_t>::InitSlot(TTreeReader*, unsigned int)’:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx:106:7: error: reference to ‘RDFInternal’ is ambiguous. RDFInternal::RColumnReadersInfo info{GetColumnNames(), GetColRegister(), fIsDefine.data(), *fLoopManager};. ^~~~~~~~~~~. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:0:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:95:44: note: candidates are: namespace ROOT::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ^. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:16:0,. from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RLoopManager.hxx:99:44: note: namespace ROOT::Detail::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ```. The errors refer to the definition of `namespace RDFInternal` in both RResultPtr.hxx and RLoopManager.hxx. To be more precise, the namespace alias was defined:. * Inside of namespace `ROOT::RDF` within RResultPtr.hxx. * Inside of namespace `ROOT::Detail::RDF` within RLoopManager.hxx. Although this is not a real issue per se, the ambiguity spawns from the fact that some headers included. ```. using namespace ROOT::Detail::RDF;. using namespace RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12981
https://github.com/root-project/root/pull/12981:158,modifiability,servic,services,158,"Disambiguate namespaces in dataframe ; The triggering issue for these modifications was the presence of such errors in our CI (see for example https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/176461/consoleFull):. ```. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx: In member function ‘void ROOT::Internal::RDF::RVariedAction<Helper, PrevNode, ColumnTypes_t>::InitSlot(TTreeReader*, unsigned int)’:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx:106:7: error: reference to ‘RDFInternal’ is ambiguous. RDFInternal::RColumnReadersInfo info{GetColumnNames(), GetColRegister(), fIsDefine.data(), *fLoopManager};. ^~~~~~~~~~~. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:0:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:95:44: note: candidates are: namespace ROOT::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ^. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:16:0,. from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RLoopManager.hxx:99:44: note: namespace ROOT::Detail::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ```. The errors refer to the definition of `namespace RDFInternal` in both RResultPtr.hxx and RLoopManager.hxx. To be more precise, the namespace alias was defined:. * Inside of namespace `ROOT::RDF` within RResultPtr.hxx. * Inside of namespace `ROOT::Detail::RDF` within RLoopManager.hxx. Although this is not a real issue per se, the ambiguity spawns from the fact that some headers included. ```. using namespace ROOT::Detail::RDF;. using namespace RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12981
https://github.com/root-project/root/pull/12981:109,performance,error,errors,109,"Disambiguate namespaces in dataframe ; The triggering issue for these modifications was the presence of such errors in our CI (see for example https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/176461/consoleFull):. ```. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx: In member function ‘void ROOT::Internal::RDF::RVariedAction<Helper, PrevNode, ColumnTypes_t>::InitSlot(TTreeReader*, unsigned int)’:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx:106:7: error: reference to ‘RDFInternal’ is ambiguous. RDFInternal::RColumnReadersInfo info{GetColumnNames(), GetColRegister(), fIsDefine.data(), *fLoopManager};. ^~~~~~~~~~~. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:0:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:95:44: note: candidates are: namespace ROOT::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ^. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:16:0,. from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RLoopManager.hxx:99:44: note: namespace ROOT::Detail::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ```. The errors refer to the definition of `namespace RDFInternal` in both RResultPtr.hxx and RLoopManager.hxx. To be more precise, the namespace alias was defined:. * Inside of namespace `ROOT::RDF` within RResultPtr.hxx. * Inside of namespace `ROOT::Detail::RDF` within RLoopManager.hxx. Although this is not a real issue per se, the ambiguity spawns from the fact that some headers included. ```. using namespace ROOT::Detail::RDF;. using namespace RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12981
https://github.com/root-project/root/pull/12981:577,performance,error,error,577,"Disambiguate namespaces in dataframe ; The triggering issue for these modifications was the presence of such errors in our CI (see for example https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/176461/consoleFull):. ```. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx: In member function ‘void ROOT::Internal::RDF::RVariedAction<Helper, PrevNode, ColumnTypes_t>::InitSlot(TTreeReader*, unsigned int)’:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx:106:7: error: reference to ‘RDFInternal’ is ambiguous. RDFInternal::RColumnReadersInfo info{GetColumnNames(), GetColRegister(), fIsDefine.data(), *fLoopManager};. ^~~~~~~~~~~. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:0:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:95:44: note: candidates are: namespace ROOT::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ^. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:16:0,. from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RLoopManager.hxx:99:44: note: namespace ROOT::Detail::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ```. The errors refer to the definition of `namespace RDFInternal` in both RResultPtr.hxx and RLoopManager.hxx. To be more precise, the namespace alias was defined:. * Inside of namespace `ROOT::RDF` within RResultPtr.hxx. * Inside of namespace `ROOT::Detail::RDF` within RLoopManager.hxx. Although this is not a real issue per se, the ambiguity spawns from the fact that some headers included. ```. using namespace ROOT::Detail::RDF;. using namespace RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12981
https://github.com/root-project/root/pull/12981:1555,performance,error,errors,1555,"dAction.hxx:106:7: error: reference to ‘RDFInternal’ is ambiguous. RDFInternal::RColumnReadersInfo info{GetColumnNames(), GetColRegister(), fIsDefine.data(), *fLoopManager};. ^~~~~~~~~~~. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:0:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:95:44: note: candidates are: namespace ROOT::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ^. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:16:0,. from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RLoopManager.hxx:99:44: note: namespace ROOT::Detail::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ```. The errors refer to the definition of `namespace RDFInternal` in both RResultPtr.hxx and RLoopManager.hxx. To be more precise, the namespace alias was defined:. * Inside of namespace `ROOT::RDF` within RResultPtr.hxx. * Inside of namespace `ROOT::Detail::RDF` within RLoopManager.hxx. Although this is not a real issue per se, the ambiguity spawns from the fact that some headers included. ```. using namespace ROOT::Detail::RDF;. using namespace ROOT::RDF;. ```. For example in ROOT/RDF/Utils.hxx, which is transitively included in RVariedAction.hxx via RActionBase.hxx. More modern compilers seem to not be affected by the ambiguity, but at least on GCC 7.5 this is blocking compilation. In this commit, the structure of namespace declarations and usage of classes within the dataframe library is disambiguated as follows:. * Removed all `using namespace` declarations. * In headers, use `using Namespace::Class` sparingly, and introduce `namespace RDFDetail` and similar wherever possible. * If only a fe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12981
https://github.com/root-project/root/pull/12981:109,safety,error,errors,109,"Disambiguate namespaces in dataframe ; The triggering issue for these modifications was the presence of such errors in our CI (see for example https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/176461/consoleFull):. ```. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx: In member function ‘void ROOT::Internal::RDF::RVariedAction<Helper, PrevNode, ColumnTypes_t>::InitSlot(TTreeReader*, unsigned int)’:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx:106:7: error: reference to ‘RDFInternal’ is ambiguous. RDFInternal::RColumnReadersInfo info{GetColumnNames(), GetColRegister(), fIsDefine.data(), *fLoopManager};. ^~~~~~~~~~~. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:0:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:95:44: note: candidates are: namespace ROOT::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ^. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:16:0,. from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RLoopManager.hxx:99:44: note: namespace ROOT::Detail::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ```. The errors refer to the definition of `namespace RDFInternal` in both RResultPtr.hxx and RLoopManager.hxx. To be more precise, the namespace alias was defined:. * Inside of namespace `ROOT::RDF` within RResultPtr.hxx. * Inside of namespace `ROOT::Detail::RDF` within RLoopManager.hxx. Although this is not a real issue per se, the ambiguity spawns from the fact that some headers included. ```. using namespace ROOT::Detail::RDF;. using namespace RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12981
https://github.com/root-project/root/pull/12981:577,safety,error,error,577,"Disambiguate namespaces in dataframe ; The triggering issue for these modifications was the presence of such errors in our CI (see for example https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/176461/consoleFull):. ```. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx: In member function ‘void ROOT::Internal::RDF::RVariedAction<Helper, PrevNode, ColumnTypes_t>::InitSlot(TTreeReader*, unsigned int)’:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx:106:7: error: reference to ‘RDFInternal’ is ambiguous. RDFInternal::RColumnReadersInfo info{GetColumnNames(), GetColRegister(), fIsDefine.data(), *fLoopManager};. ^~~~~~~~~~~. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:0:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:95:44: note: candidates are: namespace ROOT::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ^. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:16:0,. from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RLoopManager.hxx:99:44: note: namespace ROOT::Detail::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ```. The errors refer to the definition of `namespace RDFInternal` in both RResultPtr.hxx and RLoopManager.hxx. To be more precise, the namespace alias was defined:. * Inside of namespace `ROOT::RDF` within RResultPtr.hxx. * Inside of namespace `ROOT::Detail::RDF` within RLoopManager.hxx. Although this is not a real issue per se, the ambiguity spawns from the fact that some headers included. ```. using namespace ROOT::Detail::RDF;. using namespace RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12981
https://github.com/root-project/root/pull/12981:1555,safety,error,errors,1555,"dAction.hxx:106:7: error: reference to ‘RDFInternal’ is ambiguous. RDFInternal::RColumnReadersInfo info{GetColumnNames(), GetColRegister(), fIsDefine.data(), *fLoopManager};. ^~~~~~~~~~~. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:0:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:95:44: note: candidates are: namespace ROOT::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ^. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:16:0,. from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RLoopManager.hxx:99:44: note: namespace ROOT::Detail::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ```. The errors refer to the definition of `namespace RDFInternal` in both RResultPtr.hxx and RLoopManager.hxx. To be more precise, the namespace alias was defined:. * Inside of namespace `ROOT::RDF` within RResultPtr.hxx. * Inside of namespace `ROOT::Detail::RDF` within RLoopManager.hxx. Although this is not a real issue per se, the ambiguity spawns from the fact that some headers included. ```. using namespace ROOT::Detail::RDF;. using namespace ROOT::RDF;. ```. For example in ROOT/RDF/Utils.hxx, which is transitively included in RVariedAction.hxx via RActionBase.hxx. More modern compilers seem to not be affected by the ambiguity, but at least on GCC 7.5 this is blocking compilation. In this commit, the structure of namespace declarations and usage of classes within the dataframe library is disambiguated as follows:. * Removed all `using namespace` declarations. * In headers, use `using Namespace::Class` sparingly, and introduce `namespace RDFDetail` and similar wherever possible. * If only a fe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12981
https://github.com/root-project/root/pull/12981:70,security,modif,modifications,70,"Disambiguate namespaces in dataframe ; The triggering issue for these modifications was the presence of such errors in our CI (see for example https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/176461/consoleFull):. ```. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx: In member function ‘void ROOT::Internal::RDF::RVariedAction<Helper, PrevNode, ColumnTypes_t>::InitSlot(TTreeReader*, unsigned int)’:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx:106:7: error: reference to ‘RDFInternal’ is ambiguous. RDFInternal::RColumnReadersInfo info{GetColumnNames(), GetColRegister(), fIsDefine.data(), *fLoopManager};. ^~~~~~~~~~~. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:0:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:95:44: note: candidates are: namespace ROOT::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ^. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:16:0,. from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RLoopManager.hxx:99:44: note: namespace ROOT::Detail::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ```. The errors refer to the definition of `namespace RDFInternal` in both RResultPtr.hxx and RLoopManager.hxx. To be more precise, the namespace alias was defined:. * Inside of namespace `ROOT::RDF` within RResultPtr.hxx. * Inside of namespace `ROOT::Detail::RDF` within RLoopManager.hxx. Although this is not a real issue per se, the ambiguity spawns from the fact that some headers included. ```. using namespace ROOT::Detail::RDF;. using namespace RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12981
https://github.com/root-project/root/pull/12981:109,usability,error,errors,109,"Disambiguate namespaces in dataframe ; The triggering issue for these modifications was the presence of such errors in our CI (see for example https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/176461/consoleFull):. ```. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx: In member function ‘void ROOT::Internal::RDF::RVariedAction<Helper, PrevNode, ColumnTypes_t>::InitSlot(TTreeReader*, unsigned int)’:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx:106:7: error: reference to ‘RDFInternal’ is ambiguous. RDFInternal::RColumnReadersInfo info{GetColumnNames(), GetColRegister(), fIsDefine.data(), *fLoopManager};. ^~~~~~~~~~~. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:0:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:95:44: note: candidates are: namespace ROOT::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ^. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:16:0,. from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RLoopManager.hxx:99:44: note: namespace ROOT::Detail::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ```. The errors refer to the definition of `namespace RDFInternal` in both RResultPtr.hxx and RLoopManager.hxx. To be more precise, the namespace alias was defined:. * Inside of namespace `ROOT::RDF` within RResultPtr.hxx. * Inside of namespace `ROOT::Detail::RDF` within RLoopManager.hxx. Although this is not a real issue per se, the ambiguity spawns from the fact that some headers included. ```. using namespace ROOT::Detail::RDF;. using namespace RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12981
https://github.com/root-project/root/pull/12981:400,usability,Help,Helper,400,"Disambiguate namespaces in dataframe ; The triggering issue for these modifications was the presence of such errors in our CI (see for example https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/176461/consoleFull):. ```. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx: In member function ‘void ROOT::Internal::RDF::RVariedAction<Helper, PrevNode, ColumnTypes_t>::InitSlot(TTreeReader*, unsigned int)’:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx:106:7: error: reference to ‘RDFInternal’ is ambiguous. RDFInternal::RColumnReadersInfo info{GetColumnNames(), GetColRegister(), fIsDefine.data(), *fLoopManager};. ^~~~~~~~~~~. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:0:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:95:44: note: candidates are: namespace ROOT::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ^. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:16:0,. from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RLoopManager.hxx:99:44: note: namespace ROOT::Detail::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ```. The errors refer to the definition of `namespace RDFInternal` in both RResultPtr.hxx and RLoopManager.hxx. To be more precise, the namespace alias was defined:. * Inside of namespace `ROOT::RDF` within RResultPtr.hxx. * Inside of namespace `ROOT::Detail::RDF` within RLoopManager.hxx. Although this is not a real issue per se, the ambiguity spawns from the fact that some headers included. ```. using namespace ROOT::Detail::RDF;. using namespace RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12981
https://github.com/root-project/root/pull/12981:577,usability,error,error,577,"Disambiguate namespaces in dataframe ; The triggering issue for these modifications was the presence of such errors in our CI (see for example https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/176461/consoleFull):. ```. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx: In member function ‘void ROOT::Internal::RDF::RVariedAction<Helper, PrevNode, ColumnTypes_t>::InitSlot(TTreeReader*, unsigned int)’:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RVariedAction.hxx:106:7: error: reference to ‘RDFInternal’ is ambiguous. RDFInternal::RColumnReadersInfo info{GetColumnNames(), GetColRegister(), fIsDefine.data(), *fLoopManager};. ^~~~~~~~~~~. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:0:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:95:44: note: candidates are: namespace ROOT::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ^. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:16:0,. from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RLoopManager.hxx:99:44: note: namespace ROOT::Detail::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ```. The errors refer to the definition of `namespace RDFInternal` in both RResultPtr.hxx and RLoopManager.hxx. To be more precise, the namespace alias was defined:. * Inside of namespace `ROOT::RDF` within RResultPtr.hxx. * Inside of namespace `ROOT::Detail::RDF` within RLoopManager.hxx. Although this is not a real issue per se, the ambiguity spawns from the fact that some headers included. ```. using namespace ROOT::Detail::RDF;. using namespace RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12981
https://github.com/root-project/root/pull/12981:1555,usability,error,errors,1555,"dAction.hxx:106:7: error: reference to ‘RDFInternal’ is ambiguous. RDFInternal::RColumnReadersInfo info{GetColumnNames(), GetColRegister(), fIsDefine.data(), *fLoopManager};. ^~~~~~~~~~~. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:0:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:95:44: note: candidates are: namespace ROOT::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ^. In file included from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RResultPtr.hxx:16:0,. from /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RResultPtr.cxx:13:. /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/RLoopManager.hxx:99:44: note: namespace ROOT::Detail::RDF::RDFInternal = ROOT::Internal::ROOT::Internal::RDF;. namespace RDFInternal = ROOT::Internal::RDF;. ```. The errors refer to the definition of `namespace RDFInternal` in both RResultPtr.hxx and RLoopManager.hxx. To be more precise, the namespace alias was defined:. * Inside of namespace `ROOT::RDF` within RResultPtr.hxx. * Inside of namespace `ROOT::Detail::RDF` within RLoopManager.hxx. Although this is not a real issue per se, the ambiguity spawns from the fact that some headers included. ```. using namespace ROOT::Detail::RDF;. using namespace ROOT::RDF;. ```. For example in ROOT/RDF/Utils.hxx, which is transitively included in RVariedAction.hxx via RActionBase.hxx. More modern compilers seem to not be affected by the ambiguity, but at least on GCC 7.5 this is blocking compilation. In this commit, the structure of namespace declarations and usage of classes within the dataframe library is disambiguated as follows:. * Removed all `using namespace` declarations. * In headers, use `using Namespace::Class` sparingly, and introduce `namespace RDFDetail` and similar wherever possible. * If only a fe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12981
https://github.com/root-project/root/pull/12982:65,availability,error,error,65,[skip-ci][windows] Install also cfitsio.dll; This should fix the error [reported on the forum](https://root-forum.cern.ch/t/windows-visual-studio-binary-root-v6-28-04-win64-vc17-exe-fitio-fails/55244).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12982
https://github.com/root-project/root/pull/12982:19,deployability,Instal,Install,19,[skip-ci][windows] Install also cfitsio.dll; This should fix the error [reported on the forum](https://root-forum.cern.ch/t/windows-visual-studio-binary-root-v6-28-04-win64-vc17-exe-fitio-fails/55244).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12982
https://github.com/root-project/root/pull/12982:188,deployability,fail,fails,188,[skip-ci][windows] Install also cfitsio.dll; This should fix the error [reported on the forum](https://root-forum.cern.ch/t/windows-visual-studio-binary-root-v6-28-04-win64-vc17-exe-fitio-fails/55244).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12982
https://github.com/root-project/root/pull/12982:65,performance,error,error,65,[skip-ci][windows] Install also cfitsio.dll; This should fix the error [reported on the forum](https://root-forum.cern.ch/t/windows-visual-studio-binary-root-v6-28-04-win64-vc17-exe-fitio-fails/55244).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12982
https://github.com/root-project/root/pull/12982:188,reliability,fail,fails,188,[skip-ci][windows] Install also cfitsio.dll; This should fix the error [reported on the forum](https://root-forum.cern.ch/t/windows-visual-studio-binary-root-v6-28-04-win64-vc17-exe-fitio-fails/55244).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12982
https://github.com/root-project/root/pull/12982:65,safety,error,error,65,[skip-ci][windows] Install also cfitsio.dll; This should fix the error [reported on the forum](https://root-forum.cern.ch/t/windows-visual-studio-binary-root-v6-28-04-win64-vc17-exe-fitio-fails/55244).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12982
https://github.com/root-project/root/pull/12982:65,usability,error,error,65,[skip-ci][windows] Install also cfitsio.dll; This should fix the error [reported on the forum](https://root-forum.cern.ch/t/windows-visual-studio-binary-root-v6-28-04-win64-vc17-exe-fitio-fails/55244).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12982
https://github.com/root-project/root/pull/12982:132,usability,visual,visual-studio-binary-root-,132,[skip-ci][windows] Install also cfitsio.dll; This should fix the error [reported on the forum](https://root-forum.cern.ch/t/windows-visual-studio-binary-root-v6-28-04-win64-vc17-exe-fitio-fails/55244).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12982
https://github.com/root-project/root/pull/12983:72,availability,error,error,72,[v6-28][skip-ci][windows] Install also cfitsio.dll; This should fix the error [reported on the forum](https://root-forum.cern.ch/t/windows-visual-studio-binary-root-v6-28-04-win64-vc17-exe-fitio-fails/55244).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12983
https://github.com/root-project/root/pull/12983:26,deployability,Instal,Install,26,[v6-28][skip-ci][windows] Install also cfitsio.dll; This should fix the error [reported on the forum](https://root-forum.cern.ch/t/windows-visual-studio-binary-root-v6-28-04-win64-vc17-exe-fitio-fails/55244).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12983
https://github.com/root-project/root/pull/12983:195,deployability,fail,fails,195,[v6-28][skip-ci][windows] Install also cfitsio.dll; This should fix the error [reported on the forum](https://root-forum.cern.ch/t/windows-visual-studio-binary-root-v6-28-04-win64-vc17-exe-fitio-fails/55244).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12983
https://github.com/root-project/root/pull/12983:72,performance,error,error,72,[v6-28][skip-ci][windows] Install also cfitsio.dll; This should fix the error [reported on the forum](https://root-forum.cern.ch/t/windows-visual-studio-binary-root-v6-28-04-win64-vc17-exe-fitio-fails/55244).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12983
https://github.com/root-project/root/pull/12983:195,reliability,fail,fails,195,[v6-28][skip-ci][windows] Install also cfitsio.dll; This should fix the error [reported on the forum](https://root-forum.cern.ch/t/windows-visual-studio-binary-root-v6-28-04-win64-vc17-exe-fitio-fails/55244).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12983
https://github.com/root-project/root/pull/12983:72,safety,error,error,72,[v6-28][skip-ci][windows] Install also cfitsio.dll; This should fix the error [reported on the forum](https://root-forum.cern.ch/t/windows-visual-studio-binary-root-v6-28-04-win64-vc17-exe-fitio-fails/55244).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12983
https://github.com/root-project/root/pull/12983:72,usability,error,error,72,[v6-28][skip-ci][windows] Install also cfitsio.dll; This should fix the error [reported on the forum](https://root-forum.cern.ch/t/windows-visual-studio-binary-root-v6-28-04-win64-vc17-exe-fitio-fails/55244).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12983
https://github.com/root-project/root/pull/12983:139,usability,visual,visual-studio-binary-root-,139,[v6-28][skip-ci][windows] Install also cfitsio.dll; This should fix the error [reported on the forum](https://root-forum.cern.ch/t/windows-visual-studio-binary-root-v6-28-04-win64-vc17-exe-fitio-fails/55244).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12983
https://github.com/root-project/root/pull/12984:62,performance,memor,memory,62,"[DF] Actually push back values, do not write to uninitialized memory (v6.28); This fixes a bug in the creation of Snapshot actions. We were writing and then reading back booleans from uninitialized memory (just reserve'd). It happens to work, but of course it is incorrect.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12984
https://github.com/root-project/root/pull/12984:198,performance,memor,memory,198,"[DF] Actually push back values, do not write to uninitialized memory (v6.28); This fixes a bug in the creation of Snapshot actions. We were writing and then reading back booleans from uninitialized memory (just reserve'd). It happens to work, but of course it is incorrect.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12984
https://github.com/root-project/root/pull/12984:62,usability,memor,memory,62,"[DF] Actually push back values, do not write to uninitialized memory (v6.28); This fixes a bug in the creation of Snapshot actions. We were writing and then reading back booleans from uninitialized memory (just reserve'd). It happens to work, but of course it is incorrect.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12984
https://github.com/root-project/root/pull/12984:198,usability,memor,memory,198,"[DF] Actually push back values, do not write to uninitialized memory (v6.28); This fixes a bug in the creation of Snapshot actions. We were writing and then reading back booleans from uninitialized memory (just reserve'd). It happens to work, but of course it is incorrect.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12984
https://github.com/root-project/root/pull/12985:62,performance,memor,memory,62,"[DF] Actually push back values, do not write to uninitialized memory; This fixes a bug in the creation of Snapshot actions. We were writing and then reading back booleans from uninitialized memory (just reserve'd). It happens to work, but of course it is incorrect.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12985
https://github.com/root-project/root/pull/12985:190,performance,memor,memory,190,"[DF] Actually push back values, do not write to uninitialized memory; This fixes a bug in the creation of Snapshot actions. We were writing and then reading back booleans from uninitialized memory (just reserve'd). It happens to work, but of course it is incorrect.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12985
https://github.com/root-project/root/pull/12985:62,usability,memor,memory,62,"[DF] Actually push back values, do not write to uninitialized memory; This fixes a bug in the creation of Snapshot actions. We were writing and then reading back booleans from uninitialized memory (just reserve'd). It happens to work, but of course it is incorrect.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12985
https://github.com/root-project/root/pull/12985:190,usability,memor,memory,190,"[DF] Actually push back values, do not write to uninitialized memory; This fixes a bug in the creation of Snapshot actions. We were writing and then reading back booleans from uninitialized memory (just reserve'd). It happens to work, but of course it is incorrect.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12985
https://github.com/root-project/root/pull/12987:233,availability,servic,services,233,"[math] Avoid warnings from Vc.h in Fedora nightlies and add some missing `override`; The `array-bounds` warning should be ignored when including `Vc.h`. This fixes the last remaining warnings in the fedora nightlies:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-fedora36,SPEC=default,V=master/lastBuild/parsed_console/. This PR also adds the remaining missing `override` keywords.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12987
https://github.com/root-project/root/pull/12987:233,deployability,servic,services,233,"[math] Avoid warnings from Vc.h in Fedora nightlies and add some missing `override`; The `array-bounds` warning should be ignored when including `Vc.h`. This fixes the last remaining warnings in the fedora nightlies:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-fedora36,SPEC=default,V=master/lastBuild/parsed_console/. This PR also adds the remaining missing `override` keywords.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12987
https://github.com/root-project/root/pull/12987:233,integrability,servic,services,233,"[math] Avoid warnings from Vc.h in Fedora nightlies and add some missing `override`; The `array-bounds` warning should be ignored when including `Vc.h`. This fixes the last remaining warnings in the fedora nightlies:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-fedora36,SPEC=default,V=master/lastBuild/parsed_console/. This PR also adds the remaining missing `override` keywords.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12987
https://github.com/root-project/root/pull/12987:233,modifiability,servic,services,233,"[math] Avoid warnings from Vc.h in Fedora nightlies and add some missing `override`; The `array-bounds` warning should be ignored when including `Vc.h`. This fixes the last remaining warnings in the fedora nightlies:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-fedora36,SPEC=default,V=master/lastBuild/parsed_console/. This PR also adds the remaining missing `override` keywords.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12987
https://github.com/root-project/root/pull/12987:7,safety,Avoid,Avoid,7,"[math] Avoid warnings from Vc.h in Fedora nightlies and add some missing `override`; The `array-bounds` warning should be ignored when including `Vc.h`. This fixes the last remaining warnings in the fedora nightlies:. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-fedora36,SPEC=default,V=master/lastBuild/parsed_console/. This PR also adds the remaining missing `override` keywords.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12987
https://github.com/root-project/root/issues/12988:538,availability,error,error,538,"module.idx creation can easily cause missing symbols; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. In an ongoing development we have an external pulled into a header (SYCL related); that header has a static variable. JITting that header triggers static initialization which need the library to be loaded to resolve the symbol. That library doesn't get loaded when generating module.idx causing a missing symbol. (We had a similar case with Vc in the past, IIRC.). ### What is the expected behaviour? No error message when generating `module.idx`. ### How to reproduce? This can be reproduced with a modified ROOT:. ```diff. diff --git a/tree/dataframe/inc/ROOT/RDataFrame.hxx b/tree/dataframe/inc/ROOT/RDataFrame.hxx. index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_globa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:2669,availability,operat,operating,2669," index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_global_var_initcling_module_1_.1, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv, __orc_init_func.cling-module-1, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED1Ev }) }. [523/527] Generating tutorials/hsimple.root. Processing hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. (TFile *) 0x56335b1cf6e0. [527/527] Linking CXX executable tree/dataframe/test/dataframe_simple. ```. As you can see, the RDataFrame library is built happily, no missing symbols. Yet the JIT complains because it cannot load the library. ### ROOT version. master + modification. ### How did you install ROOT? built myself. ### Which operating system are you using? Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:0,deployability,modul,module,0,"module.idx creation can easily cause missing symbols; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. In an ongoing development we have an external pulled into a header (SYCL related); that header has a static variable. JITting that header triggers static initialization which need the library to be loaded to resolve the symbol. That library doesn't get loaded when generating module.idx causing a missing symbol. (We had a similar case with Vc in the past, IIRC.). ### What is the expected behaviour? No error message when generating `module.idx`. ### How to reproduce? This can be reproduced with a modified ROOT:. ```diff. diff --git a/tree/dataframe/inc/ROOT/RDataFrame.hxx b/tree/dataframe/inc/ROOT/RDataFrame.hxx. index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_globa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:410,deployability,modul,module,410,"module.idx creation can easily cause missing symbols; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. In an ongoing development we have an external pulled into a header (SYCL related); that header has a static variable. JITting that header triggers static initialization which need the library to be loaded to resolve the symbol. That library doesn't get loaded when generating module.idx causing a missing symbol. (We had a similar case with Vc in the past, IIRC.). ### What is the expected behaviour? No error message when generating `module.idx`. ### How to reproduce? This can be reproduced with a modified ROOT:. ```diff. diff --git a/tree/dataframe/inc/ROOT/RDataFrame.hxx b/tree/dataframe/inc/ROOT/RDataFrame.hxx. index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_globa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:569,deployability,modul,module,569,"module.idx creation can easily cause missing symbols; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. In an ongoing development we have an external pulled into a header (SYCL related); that header has a static variable. JITting that header triggers static initialization which need the library to be loaded to resolve the symbol. That library doesn't get loaded when generating module.idx causing a missing symbol. (We had a similar case with Vc in the past, IIRC.). ### What is the expected behaviour? No error message when generating `module.idx`. ### How to reproduce? This can be reproduced with a modified ROOT:. ```diff. diff --git a/tree/dataframe/inc/ROOT/RDataFrame.hxx b/tree/dataframe/inc/ROOT/RDataFrame.hxx. index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_globa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:1123,deployability,modul,modules,1123,"e bug. In an ongoing development we have an external pulled into a header (SYCL related); that header has a static variable. JITting that header triggers static initialization which need the library to be loaded to resolve the symbol. That library doesn't get loaded when generating module.idx causing a missing symbol. (We had a similar case with Vc in the past, IIRC.). ### What is the expected behaviour? No error message when generating `module.idx`. ### How to reproduce? This can be reproduced with a modified ROOT:. ```diff. diff --git a/tree/dataframe/inc/ROOT/RDataFrame.hxx b/tree/dataframe/inc/ROOT/RDataFrame.hxx. index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_global_var_initcling_module_1_.1, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv, __orc_init_fun",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:1165,deployability,Fail,Failed,1165,"an external pulled into a header (SYCL related); that header has a static variable. JITting that header triggers static initialization which need the library to be loaded to resolve the symbol. That library doesn't get loaded when generating module.idx causing a missing symbol. (We had a similar case with Vc in the past, IIRC.). ### What is the expected behaviour? No error message when generating `module.idx`. ### How to reproduce? This can be reproduced with a modified ROOT:. ```diff. diff --git a/tree/dataframe/inc/ROOT/RDataFrame.hxx b/tree/dataframe/inc/ROOT/RDataFrame.hxx. index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_global_var_initcling_module_1_.1, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv, __orc_init_func.cling-module-1, _ZNSt14__shared_countIL",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:1365,deployability,modul,module-,1365,"brary doesn't get loaded when generating module.idx causing a missing symbol. (We had a similar case with Vc in the past, IIRC.). ### What is the expected behaviour? No error message when generating `module.idx`. ### How to reproduce? This can be reproduced with a modified ROOT:. ```diff. diff --git a/tree/dataframe/inc/ROOT/RDataFrame.hxx b/tree/dataframe/inc/ROOT/RDataFrame.hxx. index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_global_var_initcling_module_1_.1, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv, __orc_init_func.cling-module-1, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED1Ev }) }. [523/527] Generating tutorials/hsimple.root. Processing hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. (TFile *) 0x56335b1cf6e0. [527/5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:2135,deployability,modul,module-,2135," index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_global_var_initcling_module_1_.1, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv, __orc_init_func.cling-module-1, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED1Ev }) }. [523/527] Generating tutorials/hsimple.root. Processing hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. (TFile *) 0x56335b1cf6e0. [527/527] Linking CXX executable tree/dataframe/test/dataframe_simple. ```. As you can see, the RDataFrame library is built happily, no missing symbols. Yet the JIT complains because it cannot load the library. ### ROOT version. master + modification. ### How did you install ROOT? built myself. ### Which operating system are you using? Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:2583,deployability,version,version,2583," index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_global_var_initcling_module_1_.1, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv, __orc_init_func.cling-module-1, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED1Ev }) }. [523/527] Generating tutorials/hsimple.root. Processing hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. (TFile *) 0x56335b1cf6e0. [527/527] Linking CXX executable tree/dataframe/test/dataframe_simple. ```. As you can see, the RDataFrame library is built happily, no missing symbols. Yet the JIT complains because it cannot load the library. ### ROOT version. master + modification. ### How did you install ROOT? built myself. ### Which operating system are you using? Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:2631,deployability,instal,install,2631," index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_global_var_initcling_module_1_.1, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv, __orc_init_func.cling-module-1, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED1Ev }) }. [523/527] Generating tutorials/hsimple.root. Processing hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. (TFile *) 0x56335b1cf6e0. [527/527] Linking CXX executable tree/dataframe/test/dataframe_simple. ```. As you can see, the RDataFrame library is built happily, no missing symbols. Yet the JIT complains because it cannot load the library. ### ROOT version. master + modification. ### How did you install ROOT? built myself. ### Which operating system are you using? Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:332,energy efficiency,load,loaded,332,"module.idx creation can easily cause missing symbols; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. In an ongoing development we have an external pulled into a header (SYCL related); that header has a static variable. JITting that header triggers static initialization which need the library to be loaded to resolve the symbol. That library doesn't get loaded when generating module.idx causing a missing symbol. (We had a similar case with Vc in the past, IIRC.). ### What is the expected behaviour? No error message when generating `module.idx`. ### How to reproduce? This can be reproduced with a modified ROOT:. ```diff. diff --git a/tree/dataframe/inc/ROOT/RDataFrame.hxx b/tree/dataframe/inc/ROOT/RDataFrame.hxx. index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_globa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:387,energy efficiency,load,loaded,387,"module.idx creation can easily cause missing symbols; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. In an ongoing development we have an external pulled into a header (SYCL related); that header has a static variable. JITting that header triggers static initialization which need the library to be loaded to resolve the symbol. That library doesn't get loaded when generating module.idx causing a missing symbol. (We had a similar case with Vc in the past, IIRC.). ### What is the expected behaviour? No error message when generating `module.idx`. ### How to reproduce? This can be reproduced with a modified ROOT:. ```diff. diff --git a/tree/dataframe/inc/ROOT/RDataFrame.hxx b/tree/dataframe/inc/ROOT/RDataFrame.hxx. index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_globa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:2312,energy efficiency,Cpu,Cpu,2312," index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_global_var_initcling_module_1_.1, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv, __orc_init_func.cling-module-1, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED1Ev }) }. [523/527] Generating tutorials/hsimple.root. Processing hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. (TFile *) 0x56335b1cf6e0. [527/527] Linking CXX executable tree/dataframe/test/dataframe_simple. ```. As you can see, the RDataFrame library is built happily, no missing symbols. Yet the JIT complains because it cannot load the library. ### ROOT version. master + modification. ### How did you install ROOT? built myself. ### Which operating system are you using? Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:2556,energy efficiency,load,load,2556," index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_global_var_initcling_module_1_.1, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv, __orc_init_func.cling-module-1, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED1Ev }) }. [523/527] Generating tutorials/hsimple.root. Processing hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. (TFile *) 0x56335b1cf6e0. [527/527] Linking CXX executable tree/dataframe/test/dataframe_simple. ```. As you can see, the RDataFrame library is built happily, no missing symbols. Yet the JIT complains because it cannot load the library. ### ROOT version. master + modification. ### How did you install ROOT? built myself. ### Which operating system are you using? Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:544,integrability,messag,message,544,"module.idx creation can easily cause missing symbols; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. In an ongoing development we have an external pulled into a header (SYCL related); that header has a static variable. JITting that header triggers static initialization which need the library to be loaded to resolve the symbol. That library doesn't get loaded when generating module.idx causing a missing symbol. (We had a similar case with Vc in the past, IIRC.). ### What is the expected behaviour? No error message when generating `module.idx`. ### How to reproduce? This can be reproduced with a modified ROOT:. ```diff. diff --git a/tree/dataframe/inc/ROOT/RDataFrame.hxx b/tree/dataframe/inc/ROOT/RDataFrame.hxx. index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_globa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:2583,integrability,version,version,2583," index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_global_var_initcling_module_1_.1, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv, __orc_init_func.cling-module-1, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED1Ev }) }. [523/527] Generating tutorials/hsimple.root. Processing hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. (TFile *) 0x56335b1cf6e0. [527/527] Linking CXX executable tree/dataframe/test/dataframe_simple. ```. As you can see, the RDataFrame library is built happily, no missing symbols. Yet the JIT complains because it cannot load the library. ### ROOT version. master + modification. ### How did you install ROOT? built myself. ### Which operating system are you using? Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:544,interoperability,messag,message,544,"module.idx creation can easily cause missing symbols; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. In an ongoing development we have an external pulled into a header (SYCL related); that header has a static variable. JITting that header triggers static initialization which need the library to be loaded to resolve the symbol. That library doesn't get loaded when generating module.idx causing a missing symbol. (We had a similar case with Vc in the past, IIRC.). ### What is the expected behaviour? No error message when generating `module.idx`. ### How to reproduce? This can be reproduced with a modified ROOT:. ```diff. diff --git a/tree/dataframe/inc/ROOT/RDataFrame.hxx b/tree/dataframe/inc/ROOT/RDataFrame.hxx. index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_globa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:0,modifiability,modul,module,0,"module.idx creation can easily cause missing symbols; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. In an ongoing development we have an external pulled into a header (SYCL related); that header has a static variable. JITting that header triggers static initialization which need the library to be loaded to resolve the symbol. That library doesn't get loaded when generating module.idx causing a missing symbol. (We had a similar case with Vc in the past, IIRC.). ### What is the expected behaviour? No error message when generating `module.idx`. ### How to reproduce? This can be reproduced with a modified ROOT:. ```diff. diff --git a/tree/dataframe/inc/ROOT/RDataFrame.hxx b/tree/dataframe/inc/ROOT/RDataFrame.hxx. index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_globa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:242,modifiability,variab,variable,242,"module.idx creation can easily cause missing symbols; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. In an ongoing development we have an external pulled into a header (SYCL related); that header has a static variable. JITting that header triggers static initialization which need the library to be loaded to resolve the symbol. That library doesn't get loaded when generating module.idx causing a missing symbol. (We had a similar case with Vc in the past, IIRC.). ### What is the expected behaviour? No error message when generating `module.idx`. ### How to reproduce? This can be reproduced with a modified ROOT:. ```diff. diff --git a/tree/dataframe/inc/ROOT/RDataFrame.hxx b/tree/dataframe/inc/ROOT/RDataFrame.hxx. index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_globa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:410,modifiability,modul,module,410,"module.idx creation can easily cause missing symbols; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. In an ongoing development we have an external pulled into a header (SYCL related); that header has a static variable. JITting that header triggers static initialization which need the library to be loaded to resolve the symbol. That library doesn't get loaded when generating module.idx causing a missing symbol. (We had a similar case with Vc in the past, IIRC.). ### What is the expected behaviour? No error message when generating `module.idx`. ### How to reproduce? This can be reproduced with a modified ROOT:. ```diff. diff --git a/tree/dataframe/inc/ROOT/RDataFrame.hxx b/tree/dataframe/inc/ROOT/RDataFrame.hxx. index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_globa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:569,modifiability,modul,module,569,"module.idx creation can easily cause missing symbols; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. In an ongoing development we have an external pulled into a header (SYCL related); that header has a static variable. JITting that header triggers static initialization which need the library to be loaded to resolve the symbol. That library doesn't get loaded when generating module.idx causing a missing symbol. (We had a similar case with Vc in the past, IIRC.). ### What is the expected behaviour? No error message when generating `module.idx`. ### How to reproduce? This can be reproduced with a modified ROOT:. ```diff. diff --git a/tree/dataframe/inc/ROOT/RDataFrame.hxx b/tree/dataframe/inc/ROOT/RDataFrame.hxx. index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_globa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:1123,modifiability,modul,modules,1123,"e bug. In an ongoing development we have an external pulled into a header (SYCL related); that header has a static variable. JITting that header triggers static initialization which need the library to be loaded to resolve the symbol. That library doesn't get loaded when generating module.idx causing a missing symbol. (We had a similar case with Vc in the past, IIRC.). ### What is the expected behaviour? No error message when generating `module.idx`. ### How to reproduce? This can be reproduced with a modified ROOT:. ```diff. diff --git a/tree/dataframe/inc/ROOT/RDataFrame.hxx b/tree/dataframe/inc/ROOT/RDataFrame.hxx. index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_global_var_initcling_module_1_.1, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv, __orc_init_fun",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:1365,modifiability,modul,module-,1365,"brary doesn't get loaded when generating module.idx causing a missing symbol. (We had a similar case with Vc in the past, IIRC.). ### What is the expected behaviour? No error message when generating `module.idx`. ### How to reproduce? This can be reproduced with a modified ROOT:. ```diff. diff --git a/tree/dataframe/inc/ROOT/RDataFrame.hxx b/tree/dataframe/inc/ROOT/RDataFrame.hxx. index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_global_var_initcling_module_1_.1, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv, __orc_init_func.cling-module-1, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED1Ev }) }. [523/527] Generating tutorials/hsimple.root. Processing hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. (TFile *) 0x56335b1cf6e0. [527/5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:2135,modifiability,modul,module-,2135," index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_global_var_initcling_module_1_.1, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv, __orc_init_func.cling-module-1, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED1Ev }) }. [523/527] Generating tutorials/hsimple.root. Processing hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. (TFile *) 0x56335b1cf6e0. [527/527] Linking CXX executable tree/dataframe/test/dataframe_simple. ```. As you can see, the RDataFrame library is built happily, no missing symbols. Yet the JIT complains because it cannot load the library. ### ROOT version. master + modification. ### How did you install ROOT? built myself. ### Which operating system are you using? Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:2583,modifiability,version,version,2583," index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_global_var_initcling_module_1_.1, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv, __orc_init_func.cling-module-1, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED1Ev }) }. [523/527] Generating tutorials/hsimple.root. Processing hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. (TFile *) 0x56335b1cf6e0. [527/527] Linking CXX executable tree/dataframe/test/dataframe_simple. ```. As you can see, the RDataFrame library is built happily, no missing symbols. Yet the JIT complains because it cannot load the library. ### ROOT version. master + modification. ### How did you install ROOT? built myself. ### Which operating system are you using? Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:332,performance,load,loaded,332,"module.idx creation can easily cause missing symbols; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. In an ongoing development we have an external pulled into a header (SYCL related); that header has a static variable. JITting that header triggers static initialization which need the library to be loaded to resolve the symbol. That library doesn't get loaded when generating module.idx causing a missing symbol. (We had a similar case with Vc in the past, IIRC.). ### What is the expected behaviour? No error message when generating `module.idx`. ### How to reproduce? This can be reproduced with a modified ROOT:. ```diff. diff --git a/tree/dataframe/inc/ROOT/RDataFrame.hxx b/tree/dataframe/inc/ROOT/RDataFrame.hxx. index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_globa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:387,performance,load,loaded,387,"module.idx creation can easily cause missing symbols; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. In an ongoing development we have an external pulled into a header (SYCL related); that header has a static variable. JITting that header triggers static initialization which need the library to be loaded to resolve the symbol. That library doesn't get loaded when generating module.idx causing a missing symbol. (We had a similar case with Vc in the past, IIRC.). ### What is the expected behaviour? No error message when generating `module.idx`. ### How to reproduce? This can be reproduced with a modified ROOT:. ```diff. diff --git a/tree/dataframe/inc/ROOT/RDataFrame.hxx b/tree/dataframe/inc/ROOT/RDataFrame.hxx. index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_globa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:538,performance,error,error,538,"module.idx creation can easily cause missing symbols; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. In an ongoing development we have an external pulled into a header (SYCL related); that header has a static variable. JITting that header triggers static initialization which need the library to be loaded to resolve the symbol. That library doesn't get loaded when generating module.idx causing a missing symbol. (We had a similar case with Vc in the past, IIRC.). ### What is the expected behaviour? No error message when generating `module.idx`. ### How to reproduce? This can be reproduced with a modified ROOT:. ```diff. diff --git a/tree/dataframe/inc/ROOT/RDataFrame.hxx b/tree/dataframe/inc/ROOT/RDataFrame.hxx. index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_globa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:2292,performance,Time,Time,2292," index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_global_var_initcling_module_1_.1, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv, __orc_init_func.cling-module-1, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED1Ev }) }. [523/527] Generating tutorials/hsimple.root. Processing hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. (TFile *) 0x56335b1cf6e0. [527/527] Linking CXX executable tree/dataframe/test/dataframe_simple. ```. As you can see, the RDataFrame library is built happily, no missing symbols. Yet the JIT complains because it cannot load the library. ### ROOT version. master + modification. ### How did you install ROOT? built myself. ### Which operating system are you using? Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:2312,performance,Cpu,Cpu,2312," index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_global_var_initcling_module_1_.1, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv, __orc_init_func.cling-module-1, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED1Ev }) }. [523/527] Generating tutorials/hsimple.root. Processing hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. (TFile *) 0x56335b1cf6e0. [527/527] Linking CXX executable tree/dataframe/test/dataframe_simple. ```. As you can see, the RDataFrame library is built happily, no missing symbols. Yet the JIT complains because it cannot load the library. ### ROOT version. master + modification. ### How did you install ROOT? built myself. ### Which operating system are you using? Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:2316,performance,Time,Time,2316," index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_global_var_initcling_module_1_.1, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv, __orc_init_func.cling-module-1, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED1Ev }) }. [523/527] Generating tutorials/hsimple.root. Processing hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. (TFile *) 0x56335b1cf6e0. [527/527] Linking CXX executable tree/dataframe/test/dataframe_simple. ```. As you can see, the RDataFrame library is built happily, no missing symbols. Yet the JIT complains because it cannot load the library. ### ROOT version. master + modification. ### How did you install ROOT? built myself. ### Which operating system are you using? Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:2556,performance,load,load,2556," index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_global_var_initcling_module_1_.1, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv, __orc_init_func.cling-module-1, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED1Ev }) }. [523/527] Generating tutorials/hsimple.root. Processing hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. (TFile *) 0x56335b1cf6e0. [527/527] Linking CXX executable tree/dataframe/test/dataframe_simple. ```. As you can see, the RDataFrame library is built happily, no missing symbols. Yet the JIT complains because it cannot load the library. ### ROOT version. master + modification. ### How did you install ROOT? built myself. ### Which operating system are you using? Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:375,reliability,doe,doesn,375,"module.idx creation can easily cause missing symbols; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. In an ongoing development we have an external pulled into a header (SYCL related); that header has a static variable. JITting that header triggers static initialization which need the library to be loaded to resolve the symbol. That library doesn't get loaded when generating module.idx causing a missing symbol. (We had a similar case with Vc in the past, IIRC.). ### What is the expected behaviour? No error message when generating `module.idx`. ### How to reproduce? This can be reproduced with a modified ROOT:. ```diff. diff --git a/tree/dataframe/inc/ROOT/RDataFrame.hxx b/tree/dataframe/inc/ROOT/RDataFrame.hxx. index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_globa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:1165,reliability,Fail,Failed,1165,"an external pulled into a header (SYCL related); that header has a static variable. JITting that header triggers static initialization which need the library to be loaded to resolve the symbol. That library doesn't get loaded when generating module.idx causing a missing symbol. (We had a similar case with Vc in the past, IIRC.). ### What is the expected behaviour? No error message when generating `module.idx`. ### How to reproduce? This can be reproduced with a modified ROOT:. ```diff. diff --git a/tree/dataframe/inc/ROOT/RDataFrame.hxx b/tree/dataframe/inc/ROOT/RDataFrame.hxx. index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_global_var_initcling_module_1_.1, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv, __orc_init_func.cling-module-1, _ZNSt14__shared_countIL",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:0,safety,modul,module,0,"module.idx creation can easily cause missing symbols; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. In an ongoing development we have an external pulled into a header (SYCL related); that header has a static variable. JITting that header triggers static initialization which need the library to be loaded to resolve the symbol. That library doesn't get loaded when generating module.idx causing a missing symbol. (We had a similar case with Vc in the past, IIRC.). ### What is the expected behaviour? No error message when generating `module.idx`. ### How to reproduce? This can be reproduced with a modified ROOT:. ```diff. diff --git a/tree/dataframe/inc/ROOT/RDataFrame.hxx b/tree/dataframe/inc/ROOT/RDataFrame.hxx. index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_globa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:410,safety,modul,module,410,"module.idx creation can easily cause missing symbols; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. In an ongoing development we have an external pulled into a header (SYCL related); that header has a static variable. JITting that header triggers static initialization which need the library to be loaded to resolve the symbol. That library doesn't get loaded when generating module.idx causing a missing symbol. (We had a similar case with Vc in the past, IIRC.). ### What is the expected behaviour? No error message when generating `module.idx`. ### How to reproduce? This can be reproduced with a modified ROOT:. ```diff. diff --git a/tree/dataframe/inc/ROOT/RDataFrame.hxx b/tree/dataframe/inc/ROOT/RDataFrame.hxx. index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_globa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:538,safety,error,error,538,"module.idx creation can easily cause missing symbols; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. In an ongoing development we have an external pulled into a header (SYCL related); that header has a static variable. JITting that header triggers static initialization which need the library to be loaded to resolve the symbol. That library doesn't get loaded when generating module.idx causing a missing symbol. (We had a similar case with Vc in the past, IIRC.). ### What is the expected behaviour? No error message when generating `module.idx`. ### How to reproduce? This can be reproduced with a modified ROOT:. ```diff. diff --git a/tree/dataframe/inc/ROOT/RDataFrame.hxx b/tree/dataframe/inc/ROOT/RDataFrame.hxx. index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_globa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:569,safety,modul,module,569,"module.idx creation can easily cause missing symbols; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. In an ongoing development we have an external pulled into a header (SYCL related); that header has a static variable. JITting that header triggers static initialization which need the library to be loaded to resolve the symbol. That library doesn't get loaded when generating module.idx causing a missing symbol. (We had a similar case with Vc in the past, IIRC.). ### What is the expected behaviour? No error message when generating `module.idx`. ### How to reproduce? This can be reproduced with a modified ROOT:. ```diff. diff --git a/tree/dataframe/inc/ROOT/RDataFrame.hxx b/tree/dataframe/inc/ROOT/RDataFrame.hxx. index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_globa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:1123,safety,modul,modules,1123,"e bug. In an ongoing development we have an external pulled into a header (SYCL related); that header has a static variable. JITting that header triggers static initialization which need the library to be loaded to resolve the symbol. That library doesn't get loaded when generating module.idx causing a missing symbol. (We had a similar case with Vc in the past, IIRC.). ### What is the expected behaviour? No error message when generating `module.idx`. ### How to reproduce? This can be reproduced with a modified ROOT:. ```diff. diff --git a/tree/dataframe/inc/ROOT/RDataFrame.hxx b/tree/dataframe/inc/ROOT/RDataFrame.hxx. index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_global_var_initcling_module_1_.1, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv, __orc_init_fun",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:1365,safety,modul,module-,1365,"brary doesn't get loaded when generating module.idx causing a missing symbol. (We had a similar case with Vc in the past, IIRC.). ### What is the expected behaviour? No error message when generating `module.idx`. ### How to reproduce? This can be reproduced with a modified ROOT:. ```diff. diff --git a/tree/dataframe/inc/ROOT/RDataFrame.hxx b/tree/dataframe/inc/ROOT/RDataFrame.hxx. index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_global_var_initcling_module_1_.1, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv, __orc_init_func.cling-module-1, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED1Ev }) }. [523/527] Generating tutorials/hsimple.root. Processing hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. (TFile *) 0x56335b1cf6e0. [527/5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:2135,safety,modul,module-,2135," index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_global_var_initcling_module_1_.1, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv, __orc_init_func.cling-module-1, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED1Ev }) }. [523/527] Generating tutorials/hsimple.root. Processing hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. (TFile *) 0x56335b1cf6e0. [527/527] Linking CXX executable tree/dataframe/test/dataframe_simple. ```. As you can see, the RDataFrame library is built happily, no missing symbols. Yet the JIT complains because it cannot load the library. ### ROOT version. master + modification. ### How did you install ROOT? built myself. ### Which operating system are you using? Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:2411,safety,test,test,2411," index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_global_var_initcling_module_1_.1, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv, __orc_init_func.cling-module-1, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED1Ev }) }. [523/527] Generating tutorials/hsimple.root. Processing hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. (TFile *) 0x56335b1cf6e0. [527/527] Linking CXX executable tree/dataframe/test/dataframe_simple. ```. As you can see, the RDataFrame library is built happily, no missing symbols. Yet the JIT complains because it cannot load the library. ### ROOT version. master + modification. ### How did you install ROOT? built myself. ### Which operating system are you using? Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:2528,safety,compl,complains,2528," index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_global_var_initcling_module_1_.1, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv, __orc_init_func.cling-module-1, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED1Ev }) }. [523/527] Generating tutorials/hsimple.root. Processing hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. (TFile *) 0x56335b1cf6e0. [527/527] Linking CXX executable tree/dataframe/test/dataframe_simple. ```. As you can see, the RDataFrame library is built happily, no missing symbols. Yet the JIT complains because it cannot load the library. ### ROOT version. master + modification. ### How did you install ROOT? built myself. ### Which operating system are you using? Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:634,security,modif,modified,634,"module.idx creation can easily cause missing symbols; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. In an ongoing development we have an external pulled into a header (SYCL related); that header has a static variable. JITting that header triggers static initialization which need the library to be loaded to resolve the symbol. That library doesn't get loaded when generating module.idx causing a missing symbol. (We had a similar case with Vc in the past, IIRC.). ### What is the expected behaviour? No error message when generating `module.idx`. ### How to reproduce? This can be reproduced with a modified ROOT:. ```diff. diff --git a/tree/dataframe/inc/ROOT/RDataFrame.hxx b/tree/dataframe/inc/ROOT/RDataFrame.hxx. index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_globa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:2528,security,compl,complains,2528," index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_global_var_initcling_module_1_.1, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv, __orc_init_func.cling-module-1, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED1Ev }) }. [523/527] Generating tutorials/hsimple.root. Processing hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. (TFile *) 0x56335b1cf6e0. [527/527] Linking CXX executable tree/dataframe/test/dataframe_simple. ```. As you can see, the RDataFrame library is built happily, no missing symbols. Yet the JIT complains because it cannot load the library. ### ROOT version. master + modification. ### How did you install ROOT? built myself. ### Which operating system are you using? Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:2601,security,modif,modification,2601," index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_global_var_initcling_module_1_.1, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv, __orc_init_func.cling-module-1, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED1Ev }) }. [523/527] Generating tutorials/hsimple.root. Processing hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. (TFile *) 0x56335b1cf6e0. [527/527] Linking CXX executable tree/dataframe/test/dataframe_simple. ```. As you can see, the RDataFrame library is built happily, no missing symbols. Yet the JIT complains because it cannot load the library. ### ROOT version. master + modification. ### How did you install ROOT? built myself. ### Which operating system are you using? Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:2411,testability,test,test,2411," index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_global_var_initcling_module_1_.1, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv, __orc_init_func.cling-module-1, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED1Ev }) }. [523/527] Generating tutorials/hsimple.root. Processing hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. (TFile *) 0x56335b1cf6e0. [527/527] Linking CXX executable tree/dataframe/test/dataframe_simple. ```. As you can see, the RDataFrame library is built happily, no missing symbols. Yet the JIT complains because it cannot load the library. ### ROOT version. master + modification. ### How did you install ROOT? built myself. ### Which operating system are you using? Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:2730,testability,context,context,2730," index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_global_var_initcling_module_1_.1, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv, __orc_init_func.cling-module-1, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED1Ev }) }. [523/527] Generating tutorials/hsimple.root. Processing hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. (TFile *) 0x56335b1cf6e0. [527/527] Linking CXX executable tree/dataframe/test/dataframe_simple. ```. As you can see, the RDataFrame library is built happily, no missing symbols. Yet the JIT complains because it cannot load the library. ### ROOT version. master + modification. ### How did you install ROOT? built myself. ### Which operating system are you using? Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:524,usability,behavi,behaviour,524,"module.idx creation can easily cause missing symbols; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. In an ongoing development we have an external pulled into a header (SYCL related); that header has a static variable. JITting that header triggers static initialization which need the library to be loaded to resolve the symbol. That library doesn't get loaded when generating module.idx causing a missing symbol. (We had a similar case with Vc in the past, IIRC.). ### What is the expected behaviour? No error message when generating `module.idx`. ### How to reproduce? This can be reproduced with a modified ROOT:. ```diff. diff --git a/tree/dataframe/inc/ROOT/RDataFrame.hxx b/tree/dataframe/inc/ROOT/RDataFrame.hxx. index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_globa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/issues/12988:538,usability,error,error,538,"module.idx creation can easily cause missing symbols; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. In an ongoing development we have an external pulled into a header (SYCL related); that header has a static variable. JITting that header triggers static initialization which need the library to be loaded to resolve the symbol. That library doesn't get loaded when generating module.idx causing a missing symbol. (We had a similar case with Vc in the past, IIRC.). ### What is the expected behaviour? No error message when generating `module.idx`. ### How to reproduce? This can be reproduced with a modified ROOT:. ```diff. diff --git a/tree/dataframe/inc/ROOT/RDataFrame.hxx b/tree/dataframe/inc/ROOT/RDataFrame.hxx. index 7a094cc01f..d74c69aa2b 100644. --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx. +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx. @@ -73,4 +73,6 @@ namespace cling {. std::string printValue(ROOT::RDataFrame *tdf);. } // ns cling. . +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);. +. #endif // ROOT_RDATAFRAME. ```. This causes. ```. [522/527] Generating lib/modules.idx. [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_globa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12988
https://github.com/root-project/root/pull/12989:0,deployability,Automat,Automatically,0,"Automatically add `override` to proof with clang-tidy; This commit only contains changes that were automatically generated by `clang-tidy`, plus replacing `ClassDef` with `ClassDefOverride` where appropriate. Several directories in the ROOT repo were already treated like this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12989
https://github.com/root-project/root/pull/12989:72,deployability,contain,contains,72,"Automatically add `override` to proof with clang-tidy; This commit only contains changes that were automatically generated by `clang-tidy`, plus replacing `ClassDef` with `ClassDefOverride` where appropriate. Several directories in the ROOT repo were already treated like this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12989
https://github.com/root-project/root/pull/12989:99,deployability,automat,automatically,99,"Automatically add `override` to proof with clang-tidy; This commit only contains changes that were automatically generated by `clang-tidy`, plus replacing `ClassDef` with `ClassDefOverride` where appropriate. Several directories in the ROOT repo were already treated like this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12989
https://github.com/root-project/root/pull/12989:0,testability,Automat,Automatically,0,"Automatically add `override` to proof with clang-tidy; This commit only contains changes that were automatically generated by `clang-tidy`, plus replacing `ClassDef` with `ClassDefOverride` where appropriate. Several directories in the ROOT repo were already treated like this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12989
https://github.com/root-project/root/pull/12989:99,testability,automat,automatically,99,"Automatically add `override` to proof with clang-tidy; This commit only contains changes that were automatically generated by `clang-tidy`, plus replacing `ClassDef` with `ClassDefOverride` where appropriate. Several directories in the ROOT repo were already treated like this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12989
https://github.com/root-project/root/pull/12990:63,reliability,doe,does,63,"[ntuple] Use references in RPageSinkBuf; In fact, `std::deque` does NOT guarantee that iterators remain valid:. > An insertion at either end of the deque invalidates all the iterators to the deque, but has no effect on the validity of references to elements of the deque. (https://eel.is/c++draft/deque.modifiers#1.sentence-2). Instead use references to the elements, that remain valid.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12990
https://github.com/root-project/root/pull/12990:104,safety,valid,valid,104,"[ntuple] Use references in RPageSinkBuf; In fact, `std::deque` does NOT guarantee that iterators remain valid:. > An insertion at either end of the deque invalidates all the iterators to the deque, but has no effect on the validity of references to elements of the deque. (https://eel.is/c++draft/deque.modifiers#1.sentence-2). Instead use references to the elements, that remain valid.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12990
https://github.com/root-project/root/pull/12990:223,safety,valid,validity,223,"[ntuple] Use references in RPageSinkBuf; In fact, `std::deque` does NOT guarantee that iterators remain valid:. > An insertion at either end of the deque invalidates all the iterators to the deque, but has no effect on the validity of references to elements of the deque. (https://eel.is/c++draft/deque.modifiers#1.sentence-2). Instead use references to the elements, that remain valid.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12990
https://github.com/root-project/root/pull/12990:380,safety,valid,valid,380,"[ntuple] Use references in RPageSinkBuf; In fact, `std::deque` does NOT guarantee that iterators remain valid:. > An insertion at either end of the deque invalidates all the iterators to the deque, but has no effect on the validity of references to elements of the deque. (https://eel.is/c++draft/deque.modifiers#1.sentence-2). Instead use references to the elements, that remain valid.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12990
https://github.com/root-project/root/pull/12990:303,security,modif,modifiers,303,"[ntuple] Use references in RPageSinkBuf; In fact, `std::deque` does NOT guarantee that iterators remain valid:. > An insertion at either end of the deque invalidates all the iterators to the deque, but has no effect on the validity of references to elements of the deque. (https://eel.is/c++draft/deque.modifiers#1.sentence-2). Instead use references to the elements, that remain valid.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12990
https://github.com/root-project/root/pull/12991:13,availability,slo,slow,13,"[graf2d] Fix slow zoom wheel; When a 1D histogram had several 1000 bins the zoom wheel was slow. . The following lines reproduce the issue:. ```. TH1F *h=new TH1F(""h"",""h"",16000,0,16000). for (int i=0;i<1000;i++){ h->Fill( gRandom->Gaus(8000,10) );}. h->Draw(). ```. It was reported here:. https://root-forum.cern.ch/t/zoom-th1-with-mouse-wheel-speed-is-slow/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12991
https://github.com/root-project/root/pull/12991:91,availability,slo,slow,91,"[graf2d] Fix slow zoom wheel; When a 1D histogram had several 1000 bins the zoom wheel was slow. . The following lines reproduce the issue:. ```. TH1F *h=new TH1F(""h"",""h"",16000,0,16000). for (int i=0;i<1000;i++){ h->Fill( gRandom->Gaus(8000,10) );}. h->Draw(). ```. It was reported here:. https://root-forum.cern.ch/t/zoom-th1-with-mouse-wheel-speed-is-slow/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12991
https://github.com/root-project/root/pull/12991:353,availability,slo,slow,353,"[graf2d] Fix slow zoom wheel; When a 1D histogram had several 1000 bins the zoom wheel was slow. . The following lines reproduce the issue:. ```. TH1F *h=new TH1F(""h"",""h"",16000,0,16000). for (int i=0;i<1000;i++){ h->Fill( gRandom->Gaus(8000,10) );}. h->Draw(). ```. It was reported here:. https://root-forum.cern.ch/t/zoom-th1-with-mouse-wheel-speed-is-slow/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12991
https://github.com/root-project/root/pull/12991:253,energy efficiency,Draw,Draw,253,"[graf2d] Fix slow zoom wheel; When a 1D histogram had several 1000 bins the zoom wheel was slow. . The following lines reproduce the issue:. ```. TH1F *h=new TH1F(""h"",""h"",16000,0,16000). for (int i=0;i<1000;i++){ h->Fill( gRandom->Gaus(8000,10) );}. h->Draw(). ```. It was reported here:. https://root-forum.cern.ch/t/zoom-th1-with-mouse-wheel-speed-is-slow/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12991
https://github.com/root-project/root/pull/12991:13,reliability,slo,slow,13,"[graf2d] Fix slow zoom wheel; When a 1D histogram had several 1000 bins the zoom wheel was slow. . The following lines reproduce the issue:. ```. TH1F *h=new TH1F(""h"",""h"",16000,0,16000). for (int i=0;i<1000;i++){ h->Fill( gRandom->Gaus(8000,10) );}. h->Draw(). ```. It was reported here:. https://root-forum.cern.ch/t/zoom-th1-with-mouse-wheel-speed-is-slow/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12991
https://github.com/root-project/root/pull/12991:91,reliability,slo,slow,91,"[graf2d] Fix slow zoom wheel; When a 1D histogram had several 1000 bins the zoom wheel was slow. . The following lines reproduce the issue:. ```. TH1F *h=new TH1F(""h"",""h"",16000,0,16000). for (int i=0;i<1000;i++){ h->Fill( gRandom->Gaus(8000,10) );}. h->Draw(). ```. It was reported here:. https://root-forum.cern.ch/t/zoom-th1-with-mouse-wheel-speed-is-slow/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12991
https://github.com/root-project/root/pull/12991:353,reliability,slo,slow,353,"[graf2d] Fix slow zoom wheel; When a 1D histogram had several 1000 bins the zoom wheel was slow. . The following lines reproduce the issue:. ```. TH1F *h=new TH1F(""h"",""h"",16000,0,16000). for (int i=0;i<1000;i++){ h->Fill( gRandom->Gaus(8000,10) );}. h->Draw(). ```. It was reported here:. https://root-forum.cern.ch/t/zoom-th1-with-mouse-wheel-speed-is-slow/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12991
https://github.com/root-project/root/pull/12991:332,usability,mous,mouse-wheel-speed-is-slow,332,"[graf2d] Fix slow zoom wheel; When a 1D histogram had several 1000 bins the zoom wheel was slow. . The following lines reproduce the issue:. ```. TH1F *h=new TH1F(""h"",""h"",16000,0,16000). for (int i=0;i<1000;i++){ h->Fill( gRandom->Gaus(8000,10) );}. h->Draw(). ```. It was reported here:. https://root-forum.cern.ch/t/zoom-th1-with-mouse-wheel-speed-is-slow/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12991
https://github.com/root-project/root/pull/12992:15,deployability,releas,release,15,[jsroot] 7.3.3 release [skip-ci]; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12992
https://github.com/root-project/root/pull/12992:129,deployability,updat,updated,129,[jsroot] 7.3.3 release [skip-ci]; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12992
https://github.com/root-project/root/pull/12992:99,safety,test,tested,99,[jsroot] 7.3.3 release [skip-ci]; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12992
https://github.com/root-project/root/pull/12992:129,safety,updat,updated,129,[jsroot] 7.3.3 release [skip-ci]; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12992
https://github.com/root-project/root/pull/12992:129,security,updat,updated,129,[jsroot] 7.3.3 release [skip-ci]; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12992
https://github.com/root-project/root/pull/12992:99,testability,test,tested,99,[jsroot] 7.3.3 release [skip-ci]; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12992
https://github.com/root-project/root/issues/12993:212,availability,error,error,212,"std::source_location not working in the interpreter; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Trying to use `std::source_location` in a header exposed to cling result in an error. See, for example, https://gitlab.cern.ch/gaudi/Gaudi/-/issues/266#note_6757681, where we had to hide `source_location` to cling as a workaround (https://gitlab.cern.ch/gaudi/Gaudi/-/merge_requests/1455/diffs#afb7337014c145ecb07b8ea11c702bcae52ff226_29_28). ### What is the expected behaviour? I expect to be able to use `std::source_location` in a header that I pass to cling to generate a dictionary. ### How to reproduce? On lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh . ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <source_location>. root [1] auto loc = std::source_location::current();. ROOT_prompt_1:1:17: error: 'source_location' is not a class, namespace, or enumeration. auto loc = std::source_location::current();. ^. ROOT_prompt_1:1:17: note: 'source_location' declared here. root [2] . ```. ### ROOT version. v6-28-00-patches. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12993
https://github.com/root-project/root/issues/12993:1331,availability,error,error,1331,"std::source_location not working in the interpreter; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Trying to use `std::source_location` in a header exposed to cling result in an error. See, for example, https://gitlab.cern.ch/gaudi/Gaudi/-/issues/266#note_6757681, where we had to hide `source_location` to cling as a workaround (https://gitlab.cern.ch/gaudi/Gaudi/-/merge_requests/1455/diffs#afb7337014c145ecb07b8ea11c702bcae52ff226_29_28). ### What is the expected behaviour? I expect to be able to use `std::source_location` in a header that I pass to cling to generate a dictionary. ### How to reproduce? On lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh . ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <source_location>. root [1] auto loc = std::source_location::current();. ROOT_prompt_1:1:17: error: 'source_location' is not a class, namespace, or enumeration. auto loc = std::source_location::current();. ^. ROOT_prompt_1:1:17: note: 'source_location' declared here. root [2] . ```. ### ROOT version. v6-28-00-patches. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12993
https://github.com/root-project/root/issues/12993:1650,availability,operat,operating,1650,"std::source_location not working in the interpreter; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Trying to use `std::source_location` in a header exposed to cling result in an error. See, for example, https://gitlab.cern.ch/gaudi/Gaudi/-/issues/266#note_6757681, where we had to hide `source_location` to cling as a workaround (https://gitlab.cern.ch/gaudi/Gaudi/-/merge_requests/1455/diffs#afb7337014c145ecb07b8ea11c702bcae52ff226_29_28). ### What is the expected behaviour? I expect to be able to use `std::source_location` in a header that I pass to cling to generate a dictionary. ### How to reproduce? On lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh . ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <source_location>. root [1] auto loc = std::source_location::current();. ROOT_prompt_1:1:17: error: 'source_location' is not a class, namespace, or enumeration. auto loc = std::source_location::current();. ^. ROOT_prompt_1:1:17: note: 'source_location' declared here. root [2] . ```. ### ROOT version. v6-28-00-patches. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12993
https://github.com/root-project/root/issues/12993:1021,deployability,patch,patches,1021,"std::source_location not working in the interpreter; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Trying to use `std::source_location` in a header exposed to cling result in an error. See, for example, https://gitlab.cern.ch/gaudi/Gaudi/-/issues/266#note_6757681, where we had to hide `source_location` to cling as a workaround (https://gitlab.cern.ch/gaudi/Gaudi/-/merge_requests/1455/diffs#afb7337014c145ecb07b8ea11c702bcae52ff226_29_28). ### What is the expected behaviour? I expect to be able to use `std::source_location` in a header that I pass to cling to generate a dictionary. ### How to reproduce? On lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh . ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <source_location>. root [1] auto loc = std::source_location::current();. ROOT_prompt_1:1:17: error: 'source_location' is not a class, namespace, or enumeration. auto loc = std::source_location::current();. ^. ROOT_prompt_1:1:17: note: 'source_location' declared here. root [2] . ```. ### ROOT version. v6-28-00-patches. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12993
https://github.com/root-project/root/issues/12993:1531,deployability,version,version,1531,"std::source_location not working in the interpreter; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Trying to use `std::source_location` in a header exposed to cling result in an error. See, for example, https://gitlab.cern.ch/gaudi/Gaudi/-/issues/266#note_6757681, where we had to hide `source_location` to cling as a workaround (https://gitlab.cern.ch/gaudi/Gaudi/-/merge_requests/1455/diffs#afb7337014c145ecb07b8ea11c702bcae52ff226_29_28). ### What is the expected behaviour? I expect to be able to use `std::source_location` in a header that I pass to cling to generate a dictionary. ### How to reproduce? On lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh . ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <source_location>. root [1] auto loc = std::source_location::current();. ROOT_prompt_1:1:17: error: 'source_location' is not a class, namespace, or enumeration. auto loc = std::source_location::current();. ^. ROOT_prompt_1:1:17: note: 'source_location' declared here. root [2] . ```. ### ROOT version. v6-28-00-patches. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12993
https://github.com/root-project/root/issues/12993:1549,deployability,patch,patches,1549,"std::source_location not working in the interpreter; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Trying to use `std::source_location` in a header exposed to cling result in an error. See, for example, https://gitlab.cern.ch/gaudi/Gaudi/-/issues/266#note_6757681, where we had to hide `source_location` to cling as a workaround (https://gitlab.cern.ch/gaudi/Gaudi/-/merge_requests/1455/diffs#afb7337014c145ecb07b8ea11c702bcae52ff226_29_28). ### What is the expected behaviour? I expect to be able to use `std::source_location` in a header that I pass to cling to generate a dictionary. ### How to reproduce? On lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh . ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <source_location>. root [1] auto loc = std::source_location::current();. ROOT_prompt_1:1:17: error: 'source_location' is not a class, namespace, or enumeration. auto loc = std::source_location::current();. ^. ROOT_prompt_1:1:17: note: 'source_location' declared here. root [2] . ```. ### ROOT version. v6-28-00-patches. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12993
https://github.com/root-project/root/issues/12993:1574,deployability,instal,install,1574,"std::source_location not working in the interpreter; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Trying to use `std::source_location` in a header exposed to cling result in an error. See, for example, https://gitlab.cern.ch/gaudi/Gaudi/-/issues/266#note_6757681, where we had to hide `source_location` to cling as a workaround (https://gitlab.cern.ch/gaudi/Gaudi/-/merge_requests/1455/diffs#afb7337014c145ecb07b8ea11c702bcae52ff226_29_28). ### What is the expected behaviour? I expect to be able to use `std::source_location` in a header that I pass to cling to generate a dictionary. ### How to reproduce? On lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh . ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <source_location>. root [1] auto loc = std::source_location::current();. ROOT_prompt_1:1:17: error: 'source_location' is not a class, namespace, or enumeration. auto loc = std::source_location::current();. ^. ROOT_prompt_1:1:17: note: 'source_location' declared here. root [2] . ```. ### ROOT version. v6-28-00-patches. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12993
https://github.com/root-project/root/issues/12993:1600,deployability,build,builds,1600,"std::source_location not working in the interpreter; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Trying to use `std::source_location` in a header exposed to cling result in an error. See, for example, https://gitlab.cern.ch/gaudi/Gaudi/-/issues/266#note_6757681, where we had to hide `source_location` to cling as a workaround (https://gitlab.cern.ch/gaudi/Gaudi/-/merge_requests/1455/diffs#afb7337014c145ecb07b8ea11c702bcae52ff226_29_28). ### What is the expected behaviour? I expect to be able to use `std::source_location` in a header that I pass to cling to generate a dictionary. ### How to reproduce? On lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh . ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <source_location>. root [1] auto loc = std::source_location::current();. ROOT_prompt_1:1:17: error: 'source_location' is not a class, namespace, or enumeration. auto loc = std::source_location::current();. ^. ROOT_prompt_1:1:17: note: 'source_location' declared here. root [2] . ```. ### ROOT version. v6-28-00-patches. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12993
https://github.com/root-project/root/issues/12993:1299,energy efficiency,current,current,1299,"std::source_location not working in the interpreter; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Trying to use `std::source_location` in a header exposed to cling result in an error. See, for example, https://gitlab.cern.ch/gaudi/Gaudi/-/issues/266#note_6757681, where we had to hide `source_location` to cling as a workaround (https://gitlab.cern.ch/gaudi/Gaudi/-/merge_requests/1455/diffs#afb7337014c145ecb07b8ea11c702bcae52ff226_29_28). ### What is the expected behaviour? I expect to be able to use `std::source_location` in a header that I pass to cling to generate a dictionary. ### How to reproduce? On lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh . ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <source_location>. root [1] auto loc = std::source_location::current();. ROOT_prompt_1:1:17: error: 'source_location' is not a class, namespace, or enumeration. auto loc = std::source_location::current();. ^. ROOT_prompt_1:1:17: note: 'source_location' declared here. root [2] . ```. ### ROOT version. v6-28-00-patches. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12993
https://github.com/root-project/root/issues/12993:1432,energy efficiency,current,current,1432,"std::source_location not working in the interpreter; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Trying to use `std::source_location` in a header exposed to cling result in an error. See, for example, https://gitlab.cern.ch/gaudi/Gaudi/-/issues/266#note_6757681, where we had to hide `source_location` to cling as a workaround (https://gitlab.cern.ch/gaudi/Gaudi/-/merge_requests/1455/diffs#afb7337014c145ecb07b8ea11c702bcae52ff226_29_28). ### What is the expected behaviour? I expect to be able to use `std::source_location` in a header that I pass to cling to generate a dictionary. ### How to reproduce? On lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh . ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <source_location>. root [1] auto loc = std::source_location::current();. ROOT_prompt_1:1:17: error: 'source_location' is not a class, namespace, or enumeration. auto loc = std::source_location::current();. ^. ROOT_prompt_1:1:17: note: 'source_location' declared here. root [2] . ```. ### ROOT version. v6-28-00-patches. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12993
https://github.com/root-project/root/issues/12993:1531,integrability,version,version,1531,"std::source_location not working in the interpreter; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Trying to use `std::source_location` in a header exposed to cling result in an error. See, for example, https://gitlab.cern.ch/gaudi/Gaudi/-/issues/266#note_6757681, where we had to hide `source_location` to cling as a workaround (https://gitlab.cern.ch/gaudi/Gaudi/-/merge_requests/1455/diffs#afb7337014c145ecb07b8ea11c702bcae52ff226_29_28). ### What is the expected behaviour? I expect to be able to use `std::source_location` in a header that I pass to cling to generate a dictionary. ### How to reproduce? On lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh . ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <source_location>. root [1] auto loc = std::source_location::current();. ROOT_prompt_1:1:17: error: 'source_location' is not a class, namespace, or enumeration. auto loc = std::source_location::current();. ^. ROOT_prompt_1:1:17: note: 'source_location' declared here. root [2] . ```. ### ROOT version. v6-28-00-patches. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12993
https://github.com/root-project/root/issues/12993:1531,modifiability,version,version,1531,"std::source_location not working in the interpreter; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Trying to use `std::source_location` in a header exposed to cling result in an error. See, for example, https://gitlab.cern.ch/gaudi/Gaudi/-/issues/266#note_6757681, where we had to hide `source_location` to cling as a workaround (https://gitlab.cern.ch/gaudi/Gaudi/-/merge_requests/1455/diffs#afb7337014c145ecb07b8ea11c702bcae52ff226_29_28). ### What is the expected behaviour? I expect to be able to use `std::source_location` in a header that I pass to cling to generate a dictionary. ### How to reproduce? On lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh . ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <source_location>. root [1] auto loc = std::source_location::current();. ROOT_prompt_1:1:17: error: 'source_location' is not a class, namespace, or enumeration. auto loc = std::source_location::current();. ^. ROOT_prompt_1:1:17: note: 'source_location' declared here. root [2] . ```. ### ROOT version. v6-28-00-patches. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12993
https://github.com/root-project/root/issues/12993:212,performance,error,error,212,"std::source_location not working in the interpreter; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Trying to use `std::source_location` in a header exposed to cling result in an error. See, for example, https://gitlab.cern.ch/gaudi/Gaudi/-/issues/266#note_6757681, where we had to hide `source_location` to cling as a workaround (https://gitlab.cern.ch/gaudi/Gaudi/-/merge_requests/1455/diffs#afb7337014c145ecb07b8ea11c702bcae52ff226_29_28). ### What is the expected behaviour? I expect to be able to use `std::source_location` in a header that I pass to cling to generate a dictionary. ### How to reproduce? On lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh . ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <source_location>. root [1] auto loc = std::source_location::current();. ROOT_prompt_1:1:17: error: 'source_location' is not a class, namespace, or enumeration. auto loc = std::source_location::current();. ^. ROOT_prompt_1:1:17: note: 'source_location' declared here. root [2] . ```. ### ROOT version. v6-28-00-patches. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12993
https://github.com/root-project/root/issues/12993:1331,performance,error,error,1331,"std::source_location not working in the interpreter; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Trying to use `std::source_location` in a header exposed to cling result in an error. See, for example, https://gitlab.cern.ch/gaudi/Gaudi/-/issues/266#note_6757681, where we had to hide `source_location` to cling as a workaround (https://gitlab.cern.ch/gaudi/Gaudi/-/merge_requests/1455/diffs#afb7337014c145ecb07b8ea11c702bcae52ff226_29_28). ### What is the expected behaviour? I expect to be able to use `std::source_location` in a header that I pass to cling to generate a dictionary. ### How to reproduce? On lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh . ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <source_location>. root [1] auto loc = std::source_location::current();. ROOT_prompt_1:1:17: error: 'source_location' is not a class, namespace, or enumeration. auto loc = std::source_location::current();. ^. ROOT_prompt_1:1:17: note: 'source_location' declared here. root [2] . ```. ### ROOT version. v6-28-00-patches. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12993
https://github.com/root-project/root/issues/12993:212,safety,error,error,212,"std::source_location not working in the interpreter; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Trying to use `std::source_location` in a header exposed to cling result in an error. See, for example, https://gitlab.cern.ch/gaudi/Gaudi/-/issues/266#note_6757681, where we had to hide `source_location` to cling as a workaround (https://gitlab.cern.ch/gaudi/Gaudi/-/merge_requests/1455/diffs#afb7337014c145ecb07b8ea11c702bcae52ff226_29_28). ### What is the expected behaviour? I expect to be able to use `std::source_location` in a header that I pass to cling to generate a dictionary. ### How to reproduce? On lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh . ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <source_location>. root [1] auto loc = std::source_location::current();. ROOT_prompt_1:1:17: error: 'source_location' is not a class, namespace, or enumeration. auto loc = std::source_location::current();. ^. ROOT_prompt_1:1:17: note: 'source_location' declared here. root [2] . ```. ### ROOT version. v6-28-00-patches. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12993
https://github.com/root-project/root/issues/12993:1021,safety,patch,patches,1021,"std::source_location not working in the interpreter; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Trying to use `std::source_location` in a header exposed to cling result in an error. See, for example, https://gitlab.cern.ch/gaudi/Gaudi/-/issues/266#note_6757681, where we had to hide `source_location` to cling as a workaround (https://gitlab.cern.ch/gaudi/Gaudi/-/merge_requests/1455/diffs#afb7337014c145ecb07b8ea11c702bcae52ff226_29_28). ### What is the expected behaviour? I expect to be able to use `std::source_location` in a header that I pass to cling to generate a dictionary. ### How to reproduce? On lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh . ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <source_location>. root [1] auto loc = std::source_location::current();. ROOT_prompt_1:1:17: error: 'source_location' is not a class, namespace, or enumeration. auto loc = std::source_location::current();. ^. ROOT_prompt_1:1:17: note: 'source_location' declared here. root [2] . ```. ### ROOT version. v6-28-00-patches. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12993
https://github.com/root-project/root/issues/12993:1331,safety,error,error,1331,"std::source_location not working in the interpreter; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Trying to use `std::source_location` in a header exposed to cling result in an error. See, for example, https://gitlab.cern.ch/gaudi/Gaudi/-/issues/266#note_6757681, where we had to hide `source_location` to cling as a workaround (https://gitlab.cern.ch/gaudi/Gaudi/-/merge_requests/1455/diffs#afb7337014c145ecb07b8ea11c702bcae52ff226_29_28). ### What is the expected behaviour? I expect to be able to use `std::source_location` in a header that I pass to cling to generate a dictionary. ### How to reproduce? On lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh . ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <source_location>. root [1] auto loc = std::source_location::current();. ROOT_prompt_1:1:17: error: 'source_location' is not a class, namespace, or enumeration. auto loc = std::source_location::current();. ^. ROOT_prompt_1:1:17: note: 'source_location' declared here. root [2] . ```. ### ROOT version. v6-28-00-patches. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12993
https://github.com/root-project/root/issues/12993:1549,safety,patch,patches,1549,"std::source_location not working in the interpreter; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Trying to use `std::source_location` in a header exposed to cling result in an error. See, for example, https://gitlab.cern.ch/gaudi/Gaudi/-/issues/266#note_6757681, where we had to hide `source_location` to cling as a workaround (https://gitlab.cern.ch/gaudi/Gaudi/-/merge_requests/1455/diffs#afb7337014c145ecb07b8ea11c702bcae52ff226_29_28). ### What is the expected behaviour? I expect to be able to use `std::source_location` in a header that I pass to cling to generate a dictionary. ### How to reproduce? On lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh . ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <source_location>. root [1] auto loc = std::source_location::current();. ROOT_prompt_1:1:17: error: 'source_location' is not a class, namespace, or enumeration. auto loc = std::source_location::current();. ^. ROOT_prompt_1:1:17: note: 'source_location' declared here. root [2] . ```. ### ROOT version. v6-28-00-patches. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12993
https://github.com/root-project/root/issues/12993:182,security,expos,exposed,182,"std::source_location not working in the interpreter; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Trying to use `std::source_location` in a header exposed to cling result in an error. See, for example, https://gitlab.cern.ch/gaudi/Gaudi/-/issues/266#note_6757681, where we had to hide `source_location` to cling as a workaround (https://gitlab.cern.ch/gaudi/Gaudi/-/merge_requests/1455/diffs#afb7337014c145ecb07b8ea11c702bcae52ff226_29_28). ### What is the expected behaviour? I expect to be able to use `std::source_location` in a header that I pass to cling to generate a dictionary. ### How to reproduce? On lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh . ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <source_location>. root [1] auto loc = std::source_location::current();. ROOT_prompt_1:1:17: error: 'source_location' is not a class, namespace, or enumeration. auto loc = std::source_location::current();. ^. ROOT_prompt_1:1:17: note: 'source_location' declared here. root [2] . ```. ### ROOT version. v6-28-00-patches. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12993
https://github.com/root-project/root/issues/12993:901,security,Team,Team,901,"std::source_location not working in the interpreter; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Trying to use `std::source_location` in a header exposed to cling result in an error. See, for example, https://gitlab.cern.ch/gaudi/Gaudi/-/issues/266#note_6757681, where we had to hide `source_location` to cling as a workaround (https://gitlab.cern.ch/gaudi/Gaudi/-/merge_requests/1455/diffs#afb7337014c145ecb07b8ea11c702bcae52ff226_29_28). ### What is the expected behaviour? I expect to be able to use `std::source_location` in a header that I pass to cling to generate a dictionary. ### How to reproduce? On lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh . ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <source_location>. root [1] auto loc = std::source_location::current();. ROOT_prompt_1:1:17: error: 'source_location' is not a class, namespace, or enumeration. auto loc = std::source_location::current();. ^. ROOT_prompt_1:1:17: note: 'source_location' declared here. root [2] . ```. ### ROOT version. v6-28-00-patches. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12993
https://github.com/root-project/root/issues/12993:1021,security,patch,patches,1021,"std::source_location not working in the interpreter; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Trying to use `std::source_location` in a header exposed to cling result in an error. See, for example, https://gitlab.cern.ch/gaudi/Gaudi/-/issues/266#note_6757681, where we had to hide `source_location` to cling as a workaround (https://gitlab.cern.ch/gaudi/Gaudi/-/merge_requests/1455/diffs#afb7337014c145ecb07b8ea11c702bcae52ff226_29_28). ### What is the expected behaviour? I expect to be able to use `std::source_location` in a header that I pass to cling to generate a dictionary. ### How to reproduce? On lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh . ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <source_location>. root [1] auto loc = std::source_location::current();. ROOT_prompt_1:1:17: error: 'source_location' is not a class, namespace, or enumeration. auto loc = std::source_location::current();. ^. ROOT_prompt_1:1:17: note: 'source_location' declared here. root [2] . ```. ### ROOT version. v6-28-00-patches. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12993
https://github.com/root-project/root/issues/12993:1549,security,patch,patches,1549,"std::source_location not working in the interpreter; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Trying to use `std::source_location` in a header exposed to cling result in an error. See, for example, https://gitlab.cern.ch/gaudi/Gaudi/-/issues/266#note_6757681, where we had to hide `source_location` to cling as a workaround (https://gitlab.cern.ch/gaudi/Gaudi/-/merge_requests/1455/diffs#afb7337014c145ecb07b8ea11c702bcae52ff226_29_28). ### What is the expected behaviour? I expect to be able to use `std::source_location` in a header that I pass to cling to generate a dictionary. ### How to reproduce? On lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh . ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <source_location>. root [1] auto loc = std::source_location::current();. ROOT_prompt_1:1:17: error: 'source_location' is not a class, namespace, or enumeration. auto loc = std::source_location::current();. ^. ROOT_prompt_1:1:17: note: 'source_location' declared here. root [2] . ```. ### ROOT version. v6-28-00-patches. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12993
https://github.com/root-project/root/issues/12993:1711,testability,context,context,1711,"std::source_location not working in the interpreter; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Trying to use `std::source_location` in a header exposed to cling result in an error. See, for example, https://gitlab.cern.ch/gaudi/Gaudi/-/issues/266#note_6757681, where we had to hide `source_location` to cling as a workaround (https://gitlab.cern.ch/gaudi/Gaudi/-/merge_requests/1455/diffs#afb7337014c145ecb07b8ea11c702bcae52ff226_29_28). ### What is the expected behaviour? I expect to be able to use `std::source_location` in a header that I pass to cling to generate a dictionary. ### How to reproduce? On lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh . ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <source_location>. root [1] auto loc = std::source_location::current();. ROOT_prompt_1:1:17: error: 'source_location' is not a class, namespace, or enumeration. auto loc = std::source_location::current();. ^. ROOT_prompt_1:1:17: note: 'source_location' declared here. root [2] . ```. ### ROOT version. v6-28-00-patches. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12993
https://github.com/root-project/root/issues/12993:212,usability,error,error,212,"std::source_location not working in the interpreter; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Trying to use `std::source_location` in a header exposed to cling result in an error. See, for example, https://gitlab.cern.ch/gaudi/Gaudi/-/issues/266#note_6757681, where we had to hide `source_location` to cling as a workaround (https://gitlab.cern.ch/gaudi/Gaudi/-/merge_requests/1455/diffs#afb7337014c145ecb07b8ea11c702bcae52ff226_29_28). ### What is the expected behaviour? I expect to be able to use `std::source_location` in a header that I pass to cling to generate a dictionary. ### How to reproduce? On lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh . ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <source_location>. root [1] auto loc = std::source_location::current();. ROOT_prompt_1:1:17: error: 'source_location' is not a class, namespace, or enumeration. auto loc = std::source_location::current();. ^. ROOT_prompt_1:1:17: note: 'source_location' declared here. root [2] . ```. ### ROOT version. v6-28-00-patches. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12993
https://github.com/root-project/root/issues/12993:501,usability,behavi,behaviour,501,"std::source_location not working in the interpreter; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Trying to use `std::source_location` in a header exposed to cling result in an error. See, for example, https://gitlab.cern.ch/gaudi/Gaudi/-/issues/266#note_6757681, where we had to hide `source_location` to cling as a workaround (https://gitlab.cern.ch/gaudi/Gaudi/-/merge_requests/1455/diffs#afb7337014c145ecb07b8ea11c702bcae52ff226_29_28). ### What is the expected behaviour? I expect to be able to use `std::source_location` in a header that I pass to cling to generate a dictionary. ### How to reproduce? On lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh . ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <source_location>. root [1] auto loc = std::source_location::current();. ROOT_prompt_1:1:17: error: 'source_location' is not a class, namespace, or enumeration. auto loc = std::source_location::current();. ^. ROOT_prompt_1:1:17: note: 'source_location' declared here. root [2] . ```. ### ROOT version. v6-28-00-patches. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12993
https://github.com/root-project/root/issues/12993:1091,usability,help,help,1091,"std::source_location not working in the interpreter; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Trying to use `std::source_location` in a header exposed to cling result in an error. See, for example, https://gitlab.cern.ch/gaudi/Gaudi/-/issues/266#note_6757681, where we had to hide `source_location` to cling as a workaround (https://gitlab.cern.ch/gaudi/Gaudi/-/merge_requests/1455/diffs#afb7337014c145ecb07b8ea11c702bcae52ff226_29_28). ### What is the expected behaviour? I expect to be able to use `std::source_location` in a header that I pass to cling to generate a dictionary. ### How to reproduce? On lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh . ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <source_location>. root [1] auto loc = std::source_location::current();. ROOT_prompt_1:1:17: error: 'source_location' is not a class, namespace, or enumeration. auto loc = std::source_location::current();. ^. ROOT_prompt_1:1:17: note: 'source_location' declared here. root [2] . ```. ### ROOT version. v6-28-00-patches. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12993
https://github.com/root-project/root/issues/12993:1331,usability,error,error,1331,"std::source_location not working in the interpreter; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Trying to use `std::source_location` in a header exposed to cling result in an error. See, for example, https://gitlab.cern.ch/gaudi/Gaudi/-/issues/266#note_6757681, where we had to hide `source_location` to cling as a workaround (https://gitlab.cern.ch/gaudi/Gaudi/-/merge_requests/1455/diffs#afb7337014c145ecb07b8ea11c702bcae52ff226_29_28). ### What is the expected behaviour? I expect to be able to use `std::source_location` in a header that I pass to cling to generate a dictionary. ### How to reproduce? On lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh . ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <source_location>. root [1] auto loc = std::source_location::current();. ROOT_prompt_1:1:17: error: 'source_location' is not a class, namespace, or enumeration. auto loc = std::source_location::current();. ^. ROOT_prompt_1:1:17: note: 'source_location' declared here. root [2] . ```. ### ROOT version. v6-28-00-patches. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/12993
https://github.com/root-project/root/pull/12994:487,deployability,updat,updated,487,"[PyROOT][RF] Feature to initialise RooWorkspace objects in PyRoot using dictionaries; # This Pull request:. Adds a feature in PyROOT to initialize objects in RooWorkspace using dictionaries. For example - . ```python. import ROOT. ws = ROOT.RooWorkspace(""ws""). ws[""m1""] = dict({ ""max"": 5, ""min"": -5, ""value"": 0 }). ws[""m2""] = dict({ ""max"": 5, ""min"": -5, ""value"": 1 }). ws[""mean""] = dict({ ""type"":""sum"", ""summands"":[""m1"", ""m1""] }). ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12994
https://github.com/root-project/root/pull/12994:457,safety,test,tested,457,"[PyROOT][RF] Feature to initialise RooWorkspace objects in PyRoot using dictionaries; # This Pull request:. Adds a feature in PyROOT to initialize objects in RooWorkspace using dictionaries. For example - . ```python. import ROOT. ws = ROOT.RooWorkspace(""ws""). ws[""m1""] = dict({ ""max"": 5, ""min"": -5, ""value"": 0 }). ws[""m2""] = dict({ ""max"": 5, ""min"": -5, ""value"": 1 }). ws[""mean""] = dict({ ""type"":""sum"", ""summands"":[""m1"", ""m1""] }). ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12994
https://github.com/root-project/root/pull/12994:487,safety,updat,updated,487,"[PyROOT][RF] Feature to initialise RooWorkspace objects in PyRoot using dictionaries; # This Pull request:. Adds a feature in PyROOT to initialize objects in RooWorkspace using dictionaries. For example - . ```python. import ROOT. ws = ROOT.RooWorkspace(""ws""). ws[""m1""] = dict({ ""max"": 5, ""min"": -5, ""value"": 0 }). ws[""m2""] = dict({ ""max"": 5, ""min"": -5, ""value"": 1 }). ws[""mean""] = dict({ ""type"":""sum"", ""summands"":[""m1"", ""m1""] }). ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12994
https://github.com/root-project/root/pull/12994:487,security,updat,updated,487,"[PyROOT][RF] Feature to initialise RooWorkspace objects in PyRoot using dictionaries; # This Pull request:. Adds a feature in PyROOT to initialize objects in RooWorkspace using dictionaries. For example - . ```python. import ROOT. ws = ROOT.RooWorkspace(""ws""). ws[""m1""] = dict({ ""max"": 5, ""min"": -5, ""value"": 0 }). ws[""m2""] = dict({ ""max"": 5, ""min"": -5, ""value"": 1 }). ws[""mean""] = dict({ ""type"":""sum"", ""summands"":[""m1"", ""m1""] }). ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12994
https://github.com/root-project/root/pull/12994:457,testability,test,tested,457,"[PyROOT][RF] Feature to initialise RooWorkspace objects in PyRoot using dictionaries; # This Pull request:. Adds a feature in PyROOT to initialize objects in RooWorkspace using dictionaries. For example - . ```python. import ROOT. ws = ROOT.RooWorkspace(""ws""). ws[""m1""] = dict({ ""max"": 5, ""min"": -5, ""value"": 0 }). ws[""m2""] = dict({ ""max"": 5, ""min"": -5, ""value"": 1 }). ws[""mean""] = dict({ ""type"":""sum"", ""summands"":[""m1"", ""m1""] }). ```. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12994
https://github.com/root-project/root/pull/12995:157,safety,prevent,preventing,157,"[ntuple] Add importer option for converting dots in branch names; This PR adds the importer option to convert dot characters in branch names to underscores, preventing the importer from raising an exception if such branch names are encountered (because dot characters are not allowed in field names).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12995
https://github.com/root-project/root/pull/12995:197,safety,except,exception,197,"[ntuple] Add importer option for converting dots in branch names; This PR adds the importer option to convert dot characters in branch names to underscores, preventing the importer from raising an exception if such branch names are encountered (because dot characters are not allowed in field names).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12995
https://github.com/root-project/root/pull/12995:157,security,preven,preventing,157,"[ntuple] Add importer option for converting dots in branch names; This PR adds the importer option to convert dot characters in branch names to underscores, preventing the importer from raising an exception if such branch names are encountered (because dot characters are not allowed in field names).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12995
https://github.com/root-project/root/pull/12996:20,deployability,build,building,20,Initial support for building on FreeBSD; # This Pull request:. This is an initial attempt at getting this thing building on modern FreeBSD (i.e. without /proc). some discussion was going on in issue #12787 and @hahnjo suggested a broader review and discussion in a PR. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #12787 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12996
https://github.com/root-project/root/pull/12996:112,deployability,build,building,112,Initial support for building on FreeBSD; # This Pull request:. This is an initial attempt at getting this thing building on modern FreeBSD (i.e. without /proc). some discussion was going on in issue #12787 and @hahnjo suggested a broader review and discussion in a PR. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #12787 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12996
https://github.com/root-project/root/pull/12996:342,deployability,updat,updated,342,Initial support for building on FreeBSD; # This Pull request:. This is an initial attempt at getting this thing building on modern FreeBSD (i.e. without /proc). some discussion was going on in issue #12787 and @hahnjo suggested a broader review and discussion in a PR. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #12787 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12996
https://github.com/root-project/root/pull/12996:238,safety,review,review,238,Initial support for building on FreeBSD; # This Pull request:. This is an initial attempt at getting this thing building on modern FreeBSD (i.e. without /proc). some discussion was going on in issue #12787 and @hahnjo suggested a broader review and discussion in a PR. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #12787 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12996
https://github.com/root-project/root/pull/12996:312,safety,test,tested,312,Initial support for building on FreeBSD; # This Pull request:. This is an initial attempt at getting this thing building on modern FreeBSD (i.e. without /proc). some discussion was going on in issue #12787 and @hahnjo suggested a broader review and discussion in a PR. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #12787 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12996
https://github.com/root-project/root/pull/12996:342,safety,updat,updated,342,Initial support for building on FreeBSD; # This Pull request:. This is an initial attempt at getting this thing building on modern FreeBSD (i.e. without /proc). some discussion was going on in issue #12787 and @hahnjo suggested a broader review and discussion in a PR. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #12787 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12996
https://github.com/root-project/root/pull/12996:342,security,updat,updated,342,Initial support for building on FreeBSD; # This Pull request:. This is an initial attempt at getting this thing building on modern FreeBSD (i.e. without /proc). some discussion was going on in issue #12787 and @hahnjo suggested a broader review and discussion in a PR. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #12787 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12996
https://github.com/root-project/root/pull/12996:238,testability,review,review,238,Initial support for building on FreeBSD; # This Pull request:. This is an initial attempt at getting this thing building on modern FreeBSD (i.e. without /proc). some discussion was going on in issue #12787 and @hahnjo suggested a broader review and discussion in a PR. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #12787 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12996
https://github.com/root-project/root/pull/12996:312,testability,test,tested,312,Initial support for building on FreeBSD; # This Pull request:. This is an initial attempt at getting this thing building on modern FreeBSD (i.e. without /proc). some discussion was going on in issue #12787 and @hahnjo suggested a broader review and discussion in a PR. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #12787 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12996
https://github.com/root-project/root/pull/12996:8,usability,support,support,8,Initial support for building on FreeBSD; # This Pull request:. This is an initial attempt at getting this thing building on modern FreeBSD (i.e. without /proc). some discussion was going on in issue #12787 and @hahnjo suggested a broader review and discussion in a PR. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #12787 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12996
https://github.com/root-project/root/pull/12997:138,deployability,API,API,138,"Scipy minimizer; # This Pull request:. This is the Scipy plugin for ROOT math libraries for minimization. * Implementation using Python C API that supports several methods such as. Nelder-Mead, L-BFGS-B, Powell, CG, BFGS, TNC, COBYLA, SLSQP, trust-constr,. Newton-CG, dogleg, trust-ncg, trust-exact and trust-krylov. * It supports:. * Jacobian (Gradients). * Hessian. * Bounds for the variables. * Constraints functions but not using [NonlinearConstraint](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.NonlinearConstraint.html#scipy.optimize.NonlinearConstraint), this requires more design/development to be implemented. * The implementation of extra parameters was implemented. * This is part of the work presented in CHEP 2023 https://indico.jlab.org/event/459/contributions/11597/. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12997
https://github.com/root-project/root/pull/12997:880,deployability,updat,updated,880,"Scipy minimizer; # This Pull request:. This is the Scipy plugin for ROOT math libraries for minimization. * Implementation using Python C API that supports several methods such as. Nelder-Mead, L-BFGS-B, Powell, CG, BFGS, TNC, COBYLA, SLSQP, trust-constr,. Newton-CG, dogleg, trust-ncg, trust-exact and trust-krylov. * It supports:. * Jacobian (Gradients). * Hessian. * Bounds for the variables. * Constraints functions but not using [NonlinearConstraint](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.NonlinearConstraint.html#scipy.optimize.NonlinearConstraint), this requires more design/development to be implemented. * The implementation of extra parameters was implemented. * This is part of the work presented in CHEP 2023 https://indico.jlab.org/event/459/contributions/11597/. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12997
https://github.com/root-project/root/pull/12997:515,energy efficiency,optim,optimize,515,"Scipy minimizer; # This Pull request:. This is the Scipy plugin for ROOT math libraries for minimization. * Implementation using Python C API that supports several methods such as. Nelder-Mead, L-BFGS-B, Powell, CG, BFGS, TNC, COBYLA, SLSQP, trust-constr,. Newton-CG, dogleg, trust-ncg, trust-exact and trust-krylov. * It supports:. * Jacobian (Gradients). * Hessian. * Bounds for the variables. * Constraints functions but not using [NonlinearConstraint](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.NonlinearConstraint.html#scipy.optimize.NonlinearConstraint), this requires more design/development to be implemented. * The implementation of extra parameters was implemented. * This is part of the work presented in CHEP 2023 https://indico.jlab.org/event/459/contributions/11597/. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12997
https://github.com/root-project/root/pull/12997:555,energy efficiency,optim,optimize,555,"Scipy minimizer; # This Pull request:. This is the Scipy plugin for ROOT math libraries for minimization. * Implementation using Python C API that supports several methods such as. Nelder-Mead, L-BFGS-B, Powell, CG, BFGS, TNC, COBYLA, SLSQP, trust-constr,. Newton-CG, dogleg, trust-ncg, trust-exact and trust-krylov. * It supports:. * Jacobian (Gradients). * Hessian. * Bounds for the variables. * Constraints functions but not using [NonlinearConstraint](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.NonlinearConstraint.html#scipy.optimize.NonlinearConstraint), this requires more design/development to be implemented. * The implementation of extra parameters was implemented. * This is part of the work presented in CHEP 2023 https://indico.jlab.org/event/459/contributions/11597/. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12997
https://github.com/root-project/root/pull/12997:138,integrability,API,API,138,"Scipy minimizer; # This Pull request:. This is the Scipy plugin for ROOT math libraries for minimization. * Implementation using Python C API that supports several methods such as. Nelder-Mead, L-BFGS-B, Powell, CG, BFGS, TNC, COBYLA, SLSQP, trust-constr,. Newton-CG, dogleg, trust-ncg, trust-exact and trust-krylov. * It supports:. * Jacobian (Gradients). * Hessian. * Bounds for the variables. * Constraints functions but not using [NonlinearConstraint](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.NonlinearConstraint.html#scipy.optimize.NonlinearConstraint), this requires more design/development to be implemented. * The implementation of extra parameters was implemented. * This is part of the work presented in CHEP 2023 https://indico.jlab.org/event/459/contributions/11597/. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12997
https://github.com/root-project/root/pull/12997:775,integrability,event,event,775,"Scipy minimizer; # This Pull request:. This is the Scipy plugin for ROOT math libraries for minimization. * Implementation using Python C API that supports several methods such as. Nelder-Mead, L-BFGS-B, Powell, CG, BFGS, TNC, COBYLA, SLSQP, trust-constr,. Newton-CG, dogleg, trust-ncg, trust-exact and trust-krylov. * It supports:. * Jacobian (Gradients). * Hessian. * Bounds for the variables. * Constraints functions but not using [NonlinearConstraint](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.NonlinearConstraint.html#scipy.optimize.NonlinearConstraint), this requires more design/development to be implemented. * The implementation of extra parameters was implemented. * This is part of the work presented in CHEP 2023 https://indico.jlab.org/event/459/contributions/11597/. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12997
https://github.com/root-project/root/pull/12997:57,interoperability,plug,plugin,57,"Scipy minimizer; # This Pull request:. This is the Scipy plugin for ROOT math libraries for minimization. * Implementation using Python C API that supports several methods such as. Nelder-Mead, L-BFGS-B, Powell, CG, BFGS, TNC, COBYLA, SLSQP, trust-constr,. Newton-CG, dogleg, trust-ncg, trust-exact and trust-krylov. * It supports:. * Jacobian (Gradients). * Hessian. * Bounds for the variables. * Constraints functions but not using [NonlinearConstraint](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.NonlinearConstraint.html#scipy.optimize.NonlinearConstraint), this requires more design/development to be implemented. * The implementation of extra parameters was implemented. * This is part of the work presented in CHEP 2023 https://indico.jlab.org/event/459/contributions/11597/. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12997
https://github.com/root-project/root/pull/12997:138,interoperability,API,API,138,"Scipy minimizer; # This Pull request:. This is the Scipy plugin for ROOT math libraries for minimization. * Implementation using Python C API that supports several methods such as. Nelder-Mead, L-BFGS-B, Powell, CG, BFGS, TNC, COBYLA, SLSQP, trust-constr,. Newton-CG, dogleg, trust-ncg, trust-exact and trust-krylov. * It supports:. * Jacobian (Gradients). * Hessian. * Bounds for the variables. * Constraints functions but not using [NonlinearConstraint](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.NonlinearConstraint.html#scipy.optimize.NonlinearConstraint), this requires more design/development to be implemented. * The implementation of extra parameters was implemented. * This is part of the work presented in CHEP 2023 https://indico.jlab.org/event/459/contributions/11597/. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12997
https://github.com/root-project/root/pull/12997:385,modifiability,variab,variables,385,"Scipy minimizer; # This Pull request:. This is the Scipy plugin for ROOT math libraries for minimization. * Implementation using Python C API that supports several methods such as. Nelder-Mead, L-BFGS-B, Powell, CG, BFGS, TNC, COBYLA, SLSQP, trust-constr,. Newton-CG, dogleg, trust-ncg, trust-exact and trust-krylov. * It supports:. * Jacobian (Gradients). * Hessian. * Bounds for the variables. * Constraints functions but not using [NonlinearConstraint](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.NonlinearConstraint.html#scipy.optimize.NonlinearConstraint), this requires more design/development to be implemented. * The implementation of extra parameters was implemented. * This is part of the work presented in CHEP 2023 https://indico.jlab.org/event/459/contributions/11597/. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12997
https://github.com/root-project/root/pull/12997:673,modifiability,paramet,parameters,673,"Scipy minimizer; # This Pull request:. This is the Scipy plugin for ROOT math libraries for minimization. * Implementation using Python C API that supports several methods such as. Nelder-Mead, L-BFGS-B, Powell, CG, BFGS, TNC, COBYLA, SLSQP, trust-constr,. Newton-CG, dogleg, trust-ncg, trust-exact and trust-krylov. * It supports:. * Jacobian (Gradients). * Hessian. * Bounds for the variables. * Constraints functions but not using [NonlinearConstraint](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.NonlinearConstraint.html#scipy.optimize.NonlinearConstraint), this requires more design/development to be implemented. * The implementation of extra parameters was implemented. * This is part of the work presented in CHEP 2023 https://indico.jlab.org/event/459/contributions/11597/. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12997
https://github.com/root-project/root/pull/12997:515,performance,optimiz,optimize,515,"Scipy minimizer; # This Pull request:. This is the Scipy plugin for ROOT math libraries for minimization. * Implementation using Python C API that supports several methods such as. Nelder-Mead, L-BFGS-B, Powell, CG, BFGS, TNC, COBYLA, SLSQP, trust-constr,. Newton-CG, dogleg, trust-ncg, trust-exact and trust-krylov. * It supports:. * Jacobian (Gradients). * Hessian. * Bounds for the variables. * Constraints functions but not using [NonlinearConstraint](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.NonlinearConstraint.html#scipy.optimize.NonlinearConstraint), this requires more design/development to be implemented. * The implementation of extra parameters was implemented. * This is part of the work presented in CHEP 2023 https://indico.jlab.org/event/459/contributions/11597/. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12997
https://github.com/root-project/root/pull/12997:555,performance,optimiz,optimize,555,"Scipy minimizer; # This Pull request:. This is the Scipy plugin for ROOT math libraries for minimization. * Implementation using Python C API that supports several methods such as. Nelder-Mead, L-BFGS-B, Powell, CG, BFGS, TNC, COBYLA, SLSQP, trust-constr,. Newton-CG, dogleg, trust-ncg, trust-exact and trust-krylov. * It supports:. * Jacobian (Gradients). * Hessian. * Bounds for the variables. * Constraints functions but not using [NonlinearConstraint](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.NonlinearConstraint.html#scipy.optimize.NonlinearConstraint), this requires more design/development to be implemented. * The implementation of extra parameters was implemented. * This is part of the work presented in CHEP 2023 https://indico.jlab.org/event/459/contributions/11597/. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12997
https://github.com/root-project/root/pull/12997:435,reliability,Nonlinear,NonlinearConstraint,435,"Scipy minimizer; # This Pull request:. This is the Scipy plugin for ROOT math libraries for minimization. * Implementation using Python C API that supports several methods such as. Nelder-Mead, L-BFGS-B, Powell, CG, BFGS, TNC, COBYLA, SLSQP, trust-constr,. Newton-CG, dogleg, trust-ncg, trust-exact and trust-krylov. * It supports:. * Jacobian (Gradients). * Hessian. * Bounds for the variables. * Constraints functions but not using [NonlinearConstraint](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.NonlinearConstraint.html#scipy.optimize.NonlinearConstraint), this requires more design/development to be implemented. * The implementation of extra parameters was implemented. * This is part of the work presented in CHEP 2023 https://indico.jlab.org/event/459/contributions/11597/. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12997
https://github.com/root-project/root/pull/12997:524,reliability,Nonlinear,NonlinearConstraint,524,"Scipy minimizer; # This Pull request:. This is the Scipy plugin for ROOT math libraries for minimization. * Implementation using Python C API that supports several methods such as. Nelder-Mead, L-BFGS-B, Powell, CG, BFGS, TNC, COBYLA, SLSQP, trust-constr,. Newton-CG, dogleg, trust-ncg, trust-exact and trust-krylov. * It supports:. * Jacobian (Gradients). * Hessian. * Bounds for the variables. * Constraints functions but not using [NonlinearConstraint](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.NonlinearConstraint.html#scipy.optimize.NonlinearConstraint), this requires more design/development to be implemented. * The implementation of extra parameters was implemented. * This is part of the work presented in CHEP 2023 https://indico.jlab.org/event/459/contributions/11597/. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12997
https://github.com/root-project/root/pull/12997:564,reliability,Nonlinear,NonlinearConstraint,564,"Scipy minimizer; # This Pull request:. This is the Scipy plugin for ROOT math libraries for minimization. * Implementation using Python C API that supports several methods such as. Nelder-Mead, L-BFGS-B, Powell, CG, BFGS, TNC, COBYLA, SLSQP, trust-constr,. Newton-CG, dogleg, trust-ncg, trust-exact and trust-krylov. * It supports:. * Jacobian (Gradients). * Hessian. * Bounds for the variables. * Constraints functions but not using [NonlinearConstraint](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.NonlinearConstraint.html#scipy.optimize.NonlinearConstraint), this requires more design/development to be implemented. * The implementation of extra parameters was implemented. * This is part of the work presented in CHEP 2023 https://indico.jlab.org/event/459/contributions/11597/. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12997
https://github.com/root-project/root/pull/12997:850,safety,test,tested,850,"Scipy minimizer; # This Pull request:. This is the Scipy plugin for ROOT math libraries for minimization. * Implementation using Python C API that supports several methods such as. Nelder-Mead, L-BFGS-B, Powell, CG, BFGS, TNC, COBYLA, SLSQP, trust-constr,. Newton-CG, dogleg, trust-ncg, trust-exact and trust-krylov. * It supports:. * Jacobian (Gradients). * Hessian. * Bounds for the variables. * Constraints functions but not using [NonlinearConstraint](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.NonlinearConstraint.html#scipy.optimize.NonlinearConstraint), this requires more design/development to be implemented. * The implementation of extra parameters was implemented. * This is part of the work presented in CHEP 2023 https://indico.jlab.org/event/459/contributions/11597/. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12997
https://github.com/root-project/root/pull/12997:880,safety,updat,updated,880,"Scipy minimizer; # This Pull request:. This is the Scipy plugin for ROOT math libraries for minimization. * Implementation using Python C API that supports several methods such as. Nelder-Mead, L-BFGS-B, Powell, CG, BFGS, TNC, COBYLA, SLSQP, trust-constr,. Newton-CG, dogleg, trust-ncg, trust-exact and trust-krylov. * It supports:. * Jacobian (Gradients). * Hessian. * Bounds for the variables. * Constraints functions but not using [NonlinearConstraint](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.NonlinearConstraint.html#scipy.optimize.NonlinearConstraint), this requires more design/development to be implemented. * The implementation of extra parameters was implemented. * This is part of the work presented in CHEP 2023 https://indico.jlab.org/event/459/contributions/11597/. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12997
https://github.com/root-project/root/pull/12997:242,security,trust,trust-constr,242,"Scipy minimizer; # This Pull request:. This is the Scipy plugin for ROOT math libraries for minimization. * Implementation using Python C API that supports several methods such as. Nelder-Mead, L-BFGS-B, Powell, CG, BFGS, TNC, COBYLA, SLSQP, trust-constr,. Newton-CG, dogleg, trust-ncg, trust-exact and trust-krylov. * It supports:. * Jacobian (Gradients). * Hessian. * Bounds for the variables. * Constraints functions but not using [NonlinearConstraint](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.NonlinearConstraint.html#scipy.optimize.NonlinearConstraint), this requires more design/development to be implemented. * The implementation of extra parameters was implemented. * This is part of the work presented in CHEP 2023 https://indico.jlab.org/event/459/contributions/11597/. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12997
https://github.com/root-project/root/pull/12997:276,security,trust,trust-ncg,276,"Scipy minimizer; # This Pull request:. This is the Scipy plugin for ROOT math libraries for minimization. * Implementation using Python C API that supports several methods such as. Nelder-Mead, L-BFGS-B, Powell, CG, BFGS, TNC, COBYLA, SLSQP, trust-constr,. Newton-CG, dogleg, trust-ncg, trust-exact and trust-krylov. * It supports:. * Jacobian (Gradients). * Hessian. * Bounds for the variables. * Constraints functions but not using [NonlinearConstraint](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.NonlinearConstraint.html#scipy.optimize.NonlinearConstraint), this requires more design/development to be implemented. * The implementation of extra parameters was implemented. * This is part of the work presented in CHEP 2023 https://indico.jlab.org/event/459/contributions/11597/. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12997
https://github.com/root-project/root/pull/12997:287,security,trust,trust-exact,287,"Scipy minimizer; # This Pull request:. This is the Scipy plugin for ROOT math libraries for minimization. * Implementation using Python C API that supports several methods such as. Nelder-Mead, L-BFGS-B, Powell, CG, BFGS, TNC, COBYLA, SLSQP, trust-constr,. Newton-CG, dogleg, trust-ncg, trust-exact and trust-krylov. * It supports:. * Jacobian (Gradients). * Hessian. * Bounds for the variables. * Constraints functions but not using [NonlinearConstraint](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.NonlinearConstraint.html#scipy.optimize.NonlinearConstraint), this requires more design/development to be implemented. * The implementation of extra parameters was implemented. * This is part of the work presented in CHEP 2023 https://indico.jlab.org/event/459/contributions/11597/. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12997
https://github.com/root-project/root/pull/12997:303,security,trust,trust-krylov,303,"Scipy minimizer; # This Pull request:. This is the Scipy plugin for ROOT math libraries for minimization. * Implementation using Python C API that supports several methods such as. Nelder-Mead, L-BFGS-B, Powell, CG, BFGS, TNC, COBYLA, SLSQP, trust-constr,. Newton-CG, dogleg, trust-ncg, trust-exact and trust-krylov. * It supports:. * Jacobian (Gradients). * Hessian. * Bounds for the variables. * Constraints functions but not using [NonlinearConstraint](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.NonlinearConstraint.html#scipy.optimize.NonlinearConstraint), this requires more design/development to be implemented. * The implementation of extra parameters was implemented. * This is part of the work presented in CHEP 2023 https://indico.jlab.org/event/459/contributions/11597/. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12997
https://github.com/root-project/root/pull/12997:880,security,updat,updated,880,"Scipy minimizer; # This Pull request:. This is the Scipy plugin for ROOT math libraries for minimization. * Implementation using Python C API that supports several methods such as. Nelder-Mead, L-BFGS-B, Powell, CG, BFGS, TNC, COBYLA, SLSQP, trust-constr,. Newton-CG, dogleg, trust-ncg, trust-exact and trust-krylov. * It supports:. * Jacobian (Gradients). * Hessian. * Bounds for the variables. * Constraints functions but not using [NonlinearConstraint](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.NonlinearConstraint.html#scipy.optimize.NonlinearConstraint), this requires more design/development to be implemented. * The implementation of extra parameters was implemented. * This is part of the work presented in CHEP 2023 https://indico.jlab.org/event/459/contributions/11597/. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12997
https://github.com/root-project/root/pull/12997:850,testability,test,tested,850,"Scipy minimizer; # This Pull request:. This is the Scipy plugin for ROOT math libraries for minimization. * Implementation using Python C API that supports several methods such as. Nelder-Mead, L-BFGS-B, Powell, CG, BFGS, TNC, COBYLA, SLSQP, trust-constr,. Newton-CG, dogleg, trust-ncg, trust-exact and trust-krylov. * It supports:. * Jacobian (Gradients). * Hessian. * Bounds for the variables. * Constraints functions but not using [NonlinearConstraint](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.NonlinearConstraint.html#scipy.optimize.NonlinearConstraint), this requires more design/development to be implemented. * The implementation of extra parameters was implemented. * This is part of the work presented in CHEP 2023 https://indico.jlab.org/event/459/contributions/11597/. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12997
https://github.com/root-project/root/pull/12997:6,usability,minim,minimizer,6,"Scipy minimizer; # This Pull request:. This is the Scipy plugin for ROOT math libraries for minimization. * Implementation using Python C API that supports several methods such as. Nelder-Mead, L-BFGS-B, Powell, CG, BFGS, TNC, COBYLA, SLSQP, trust-constr,. Newton-CG, dogleg, trust-ncg, trust-exact and trust-krylov. * It supports:. * Jacobian (Gradients). * Hessian. * Bounds for the variables. * Constraints functions but not using [NonlinearConstraint](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.NonlinearConstraint.html#scipy.optimize.NonlinearConstraint), this requires more design/development to be implemented. * The implementation of extra parameters was implemented. * This is part of the work presented in CHEP 2023 https://indico.jlab.org/event/459/contributions/11597/. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12997
https://github.com/root-project/root/pull/12997:92,usability,minim,minimization,92,"Scipy minimizer; # This Pull request:. This is the Scipy plugin for ROOT math libraries for minimization. * Implementation using Python C API that supports several methods such as. Nelder-Mead, L-BFGS-B, Powell, CG, BFGS, TNC, COBYLA, SLSQP, trust-constr,. Newton-CG, dogleg, trust-ncg, trust-exact and trust-krylov. * It supports:. * Jacobian (Gradients). * Hessian. * Bounds for the variables. * Constraints functions but not using [NonlinearConstraint](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.NonlinearConstraint.html#scipy.optimize.NonlinearConstraint), this requires more design/development to be implemented. * The implementation of extra parameters was implemented. * This is part of the work presented in CHEP 2023 https://indico.jlab.org/event/459/contributions/11597/. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12997
https://github.com/root-project/root/pull/12997:147,usability,support,supports,147,"Scipy minimizer; # This Pull request:. This is the Scipy plugin for ROOT math libraries for minimization. * Implementation using Python C API that supports several methods such as. Nelder-Mead, L-BFGS-B, Powell, CG, BFGS, TNC, COBYLA, SLSQP, trust-constr,. Newton-CG, dogleg, trust-ncg, trust-exact and trust-krylov. * It supports:. * Jacobian (Gradients). * Hessian. * Bounds for the variables. * Constraints functions but not using [NonlinearConstraint](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.NonlinearConstraint.html#scipy.optimize.NonlinearConstraint), this requires more design/development to be implemented. * The implementation of extra parameters was implemented. * This is part of the work presented in CHEP 2023 https://indico.jlab.org/event/459/contributions/11597/. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12997
https://github.com/root-project/root/pull/12997:322,usability,support,supports,322,"Scipy minimizer; # This Pull request:. This is the Scipy plugin for ROOT math libraries for minimization. * Implementation using Python C API that supports several methods such as. Nelder-Mead, L-BFGS-B, Powell, CG, BFGS, TNC, COBYLA, SLSQP, trust-constr,. Newton-CG, dogleg, trust-ncg, trust-exact and trust-krylov. * It supports:. * Jacobian (Gradients). * Hessian. * Bounds for the variables. * Constraints functions but not using [NonlinearConstraint](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.NonlinearConstraint.html#scipy.optimize.NonlinearConstraint), this requires more design/development to be implemented. * The implementation of extra parameters was implemented. * This is part of the work presented in CHEP 2023 https://indico.jlab.org/event/459/contributions/11597/. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12997
https://github.com/root-project/root/pull/12998:301,deployability,integr,integrals,301,"[RF] Support extended fits in RooFit code generation for AD; Introduce the new `RooAbsPdf::createExpectedEvents()` method to. explicitly create an object that represents the expected number of. events. Like this, the expected number of events is fully exposed in the. computation graph, just like the integrals. This makes adding support of RooFit codegen+AD for extended fits. trivial, and also optimizes the BatchMode because the RooFitDriver can. de-duplicate integrals that appear both in the regular evaluation path. and `RooAbsPdf::expectedEvents()`. Now that a function that represents the expected events is. part of the computation graph, using it in the RooFit code generation. for the NLL is straight forward.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12998
https://github.com/root-project/root/pull/12998:463,deployability,integr,integrals,463,"[RF] Support extended fits in RooFit code generation for AD; Introduce the new `RooAbsPdf::createExpectedEvents()` method to. explicitly create an object that represents the expected number of. events. Like this, the expected number of events is fully exposed in the. computation graph, just like the integrals. This makes adding support of RooFit codegen+AD for extended fits. trivial, and also optimizes the BatchMode because the RooFitDriver can. de-duplicate integrals that appear both in the regular evaluation path. and `RooAbsPdf::expectedEvents()`. Now that a function that represents the expected events is. part of the computation graph, using it in the RooFit code generation. for the NLL is straight forward.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12998
https://github.com/root-project/root/pull/12998:396,energy efficiency,optim,optimizes,396,"[RF] Support extended fits in RooFit code generation for AD; Introduce the new `RooAbsPdf::createExpectedEvents()` method to. explicitly create an object that represents the expected number of. events. Like this, the expected number of events is fully exposed in the. computation graph, just like the integrals. This makes adding support of RooFit codegen+AD for extended fits. trivial, and also optimizes the BatchMode because the RooFitDriver can. de-duplicate integrals that appear both in the regular evaluation path. and `RooAbsPdf::expectedEvents()`. Now that a function that represents the expected events is. part of the computation graph, using it in the RooFit code generation. for the NLL is straight forward.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12998
https://github.com/root-project/root/pull/12998:194,integrability,event,events,194,"[RF] Support extended fits in RooFit code generation for AD; Introduce the new `RooAbsPdf::createExpectedEvents()` method to. explicitly create an object that represents the expected number of. events. Like this, the expected number of events is fully exposed in the. computation graph, just like the integrals. This makes adding support of RooFit codegen+AD for extended fits. trivial, and also optimizes the BatchMode because the RooFitDriver can. de-duplicate integrals that appear both in the regular evaluation path. and `RooAbsPdf::expectedEvents()`. Now that a function that represents the expected events is. part of the computation graph, using it in the RooFit code generation. for the NLL is straight forward.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12998
https://github.com/root-project/root/pull/12998:236,integrability,event,events,236,"[RF] Support extended fits in RooFit code generation for AD; Introduce the new `RooAbsPdf::createExpectedEvents()` method to. explicitly create an object that represents the expected number of. events. Like this, the expected number of events is fully exposed in the. computation graph, just like the integrals. This makes adding support of RooFit codegen+AD for extended fits. trivial, and also optimizes the BatchMode because the RooFitDriver can. de-duplicate integrals that appear both in the regular evaluation path. and `RooAbsPdf::expectedEvents()`. Now that a function that represents the expected events is. part of the computation graph, using it in the RooFit code generation. for the NLL is straight forward.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12998
https://github.com/root-project/root/pull/12998:301,integrability,integr,integrals,301,"[RF] Support extended fits in RooFit code generation for AD; Introduce the new `RooAbsPdf::createExpectedEvents()` method to. explicitly create an object that represents the expected number of. events. Like this, the expected number of events is fully exposed in the. computation graph, just like the integrals. This makes adding support of RooFit codegen+AD for extended fits. trivial, and also optimizes the BatchMode because the RooFitDriver can. de-duplicate integrals that appear both in the regular evaluation path. and `RooAbsPdf::expectedEvents()`. Now that a function that represents the expected events is. part of the computation graph, using it in the RooFit code generation. for the NLL is straight forward.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12998
https://github.com/root-project/root/pull/12998:410,integrability,Batch,BatchMode,410,"[RF] Support extended fits in RooFit code generation for AD; Introduce the new `RooAbsPdf::createExpectedEvents()` method to. explicitly create an object that represents the expected number of. events. Like this, the expected number of events is fully exposed in the. computation graph, just like the integrals. This makes adding support of RooFit codegen+AD for extended fits. trivial, and also optimizes the BatchMode because the RooFitDriver can. de-duplicate integrals that appear both in the regular evaluation path. and `RooAbsPdf::expectedEvents()`. Now that a function that represents the expected events is. part of the computation graph, using it in the RooFit code generation. for the NLL is straight forward.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12998
https://github.com/root-project/root/pull/12998:463,integrability,integr,integrals,463,"[RF] Support extended fits in RooFit code generation for AD; Introduce the new `RooAbsPdf::createExpectedEvents()` method to. explicitly create an object that represents the expected number of. events. Like this, the expected number of events is fully exposed in the. computation graph, just like the integrals. This makes adding support of RooFit codegen+AD for extended fits. trivial, and also optimizes the BatchMode because the RooFitDriver can. de-duplicate integrals that appear both in the regular evaluation path. and `RooAbsPdf::expectedEvents()`. Now that a function that represents the expected events is. part of the computation graph, using it in the RooFit code generation. for the NLL is straight forward.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12998
https://github.com/root-project/root/pull/12998:606,integrability,event,events,606,"[RF] Support extended fits in RooFit code generation for AD; Introduce the new `RooAbsPdf::createExpectedEvents()` method to. explicitly create an object that represents the expected number of. events. Like this, the expected number of events is fully exposed in the. computation graph, just like the integrals. This makes adding support of RooFit codegen+AD for extended fits. trivial, and also optimizes the BatchMode because the RooFitDriver can. de-duplicate integrals that appear both in the regular evaluation path. and `RooAbsPdf::expectedEvents()`. Now that a function that represents the expected events is. part of the computation graph, using it in the RooFit code generation. for the NLL is straight forward.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12998
https://github.com/root-project/root/pull/12998:301,interoperability,integr,integrals,301,"[RF] Support extended fits in RooFit code generation for AD; Introduce the new `RooAbsPdf::createExpectedEvents()` method to. explicitly create an object that represents the expected number of. events. Like this, the expected number of events is fully exposed in the. computation graph, just like the integrals. This makes adding support of RooFit codegen+AD for extended fits. trivial, and also optimizes the BatchMode because the RooFitDriver can. de-duplicate integrals that appear both in the regular evaluation path. and `RooAbsPdf::expectedEvents()`. Now that a function that represents the expected events is. part of the computation graph, using it in the RooFit code generation. for the NLL is straight forward.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12998
https://github.com/root-project/root/pull/12998:463,interoperability,integr,integrals,463,"[RF] Support extended fits in RooFit code generation for AD; Introduce the new `RooAbsPdf::createExpectedEvents()` method to. explicitly create an object that represents the expected number of. events. Like this, the expected number of events is fully exposed in the. computation graph, just like the integrals. This makes adding support of RooFit codegen+AD for extended fits. trivial, and also optimizes the BatchMode because the RooFitDriver can. de-duplicate integrals that appear both in the regular evaluation path. and `RooAbsPdf::expectedEvents()`. Now that a function that represents the expected events is. part of the computation graph, using it in the RooFit code generation. for the NLL is straight forward.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12998
https://github.com/root-project/root/pull/12998:13,modifiability,exten,extended,13,"[RF] Support extended fits in RooFit code generation for AD; Introduce the new `RooAbsPdf::createExpectedEvents()` method to. explicitly create an object that represents the expected number of. events. Like this, the expected number of events is fully exposed in the. computation graph, just like the integrals. This makes adding support of RooFit codegen+AD for extended fits. trivial, and also optimizes the BatchMode because the RooFitDriver can. de-duplicate integrals that appear both in the regular evaluation path. and `RooAbsPdf::expectedEvents()`. Now that a function that represents the expected events is. part of the computation graph, using it in the RooFit code generation. for the NLL is straight forward.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12998
https://github.com/root-project/root/pull/12998:301,modifiability,integr,integrals,301,"[RF] Support extended fits in RooFit code generation for AD; Introduce the new `RooAbsPdf::createExpectedEvents()` method to. explicitly create an object that represents the expected number of. events. Like this, the expected number of events is fully exposed in the. computation graph, just like the integrals. This makes adding support of RooFit codegen+AD for extended fits. trivial, and also optimizes the BatchMode because the RooFitDriver can. de-duplicate integrals that appear both in the regular evaluation path. and `RooAbsPdf::expectedEvents()`. Now that a function that represents the expected events is. part of the computation graph, using it in the RooFit code generation. for the NLL is straight forward.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12998
https://github.com/root-project/root/pull/12998:363,modifiability,exten,extended,363,"[RF] Support extended fits in RooFit code generation for AD; Introduce the new `RooAbsPdf::createExpectedEvents()` method to. explicitly create an object that represents the expected number of. events. Like this, the expected number of events is fully exposed in the. computation graph, just like the integrals. This makes adding support of RooFit codegen+AD for extended fits. trivial, and also optimizes the BatchMode because the RooFitDriver can. de-duplicate integrals that appear both in the regular evaluation path. and `RooAbsPdf::expectedEvents()`. Now that a function that represents the expected events is. part of the computation graph, using it in the RooFit code generation. for the NLL is straight forward.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12998
https://github.com/root-project/root/pull/12998:463,modifiability,integr,integrals,463,"[RF] Support extended fits in RooFit code generation for AD; Introduce the new `RooAbsPdf::createExpectedEvents()` method to. explicitly create an object that represents the expected number of. events. Like this, the expected number of events is fully exposed in the. computation graph, just like the integrals. This makes adding support of RooFit codegen+AD for extended fits. trivial, and also optimizes the BatchMode because the RooFitDriver can. de-duplicate integrals that appear both in the regular evaluation path. and `RooAbsPdf::expectedEvents()`. Now that a function that represents the expected events is. part of the computation graph, using it in the RooFit code generation. for the NLL is straight forward.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12998
https://github.com/root-project/root/pull/12998:396,performance,optimiz,optimizes,396,"[RF] Support extended fits in RooFit code generation for AD; Introduce the new `RooAbsPdf::createExpectedEvents()` method to. explicitly create an object that represents the expected number of. events. Like this, the expected number of events is fully exposed in the. computation graph, just like the integrals. This makes adding support of RooFit codegen+AD for extended fits. trivial, and also optimizes the BatchMode because the RooFitDriver can. de-duplicate integrals that appear both in the regular evaluation path. and `RooAbsPdf::expectedEvents()`. Now that a function that represents the expected events is. part of the computation graph, using it in the RooFit code generation. for the NLL is straight forward.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12998
https://github.com/root-project/root/pull/12998:410,performance,Batch,BatchMode,410,"[RF] Support extended fits in RooFit code generation for AD; Introduce the new `RooAbsPdf::createExpectedEvents()` method to. explicitly create an object that represents the expected number of. events. Like this, the expected number of events is fully exposed in the. computation graph, just like the integrals. This makes adding support of RooFit codegen+AD for extended fits. trivial, and also optimizes the BatchMode because the RooFitDriver can. de-duplicate integrals that appear both in the regular evaluation path. and `RooAbsPdf::expectedEvents()`. Now that a function that represents the expected events is. part of the computation graph, using it in the RooFit code generation. for the NLL is straight forward.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12998
https://github.com/root-project/root/pull/12998:301,reliability,integr,integrals,301,"[RF] Support extended fits in RooFit code generation for AD; Introduce the new `RooAbsPdf::createExpectedEvents()` method to. explicitly create an object that represents the expected number of. events. Like this, the expected number of events is fully exposed in the. computation graph, just like the integrals. This makes adding support of RooFit codegen+AD for extended fits. trivial, and also optimizes the BatchMode because the RooFitDriver can. de-duplicate integrals that appear both in the regular evaluation path. and `RooAbsPdf::expectedEvents()`. Now that a function that represents the expected events is. part of the computation graph, using it in the RooFit code generation. for the NLL is straight forward.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12998
https://github.com/root-project/root/pull/12998:463,reliability,integr,integrals,463,"[RF] Support extended fits in RooFit code generation for AD; Introduce the new `RooAbsPdf::createExpectedEvents()` method to. explicitly create an object that represents the expected number of. events. Like this, the expected number of events is fully exposed in the. computation graph, just like the integrals. This makes adding support of RooFit codegen+AD for extended fits. trivial, and also optimizes the BatchMode because the RooFitDriver can. de-duplicate integrals that appear both in the regular evaluation path. and `RooAbsPdf::expectedEvents()`. Now that a function that represents the expected events is. part of the computation graph, using it in the RooFit code generation. for the NLL is straight forward.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12998
https://github.com/root-project/root/pull/12998:252,security,expos,exposed,252,"[RF] Support extended fits in RooFit code generation for AD; Introduce the new `RooAbsPdf::createExpectedEvents()` method to. explicitly create an object that represents the expected number of. events. Like this, the expected number of events is fully exposed in the. computation graph, just like the integrals. This makes adding support of RooFit codegen+AD for extended fits. trivial, and also optimizes the BatchMode because the RooFitDriver can. de-duplicate integrals that appear both in the regular evaluation path. and `RooAbsPdf::expectedEvents()`. Now that a function that represents the expected events is. part of the computation graph, using it in the RooFit code generation. for the NLL is straight forward.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12998
https://github.com/root-project/root/pull/12998:301,security,integr,integrals,301,"[RF] Support extended fits in RooFit code generation for AD; Introduce the new `RooAbsPdf::createExpectedEvents()` method to. explicitly create an object that represents the expected number of. events. Like this, the expected number of events is fully exposed in the. computation graph, just like the integrals. This makes adding support of RooFit codegen+AD for extended fits. trivial, and also optimizes the BatchMode because the RooFitDriver can. de-duplicate integrals that appear both in the regular evaluation path. and `RooAbsPdf::expectedEvents()`. Now that a function that represents the expected events is. part of the computation graph, using it in the RooFit code generation. for the NLL is straight forward.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12998
https://github.com/root-project/root/pull/12998:463,security,integr,integrals,463,"[RF] Support extended fits in RooFit code generation for AD; Introduce the new `RooAbsPdf::createExpectedEvents()` method to. explicitly create an object that represents the expected number of. events. Like this, the expected number of events is fully exposed in the. computation graph, just like the integrals. This makes adding support of RooFit codegen+AD for extended fits. trivial, and also optimizes the BatchMode because the RooFitDriver can. de-duplicate integrals that appear both in the regular evaluation path. and `RooAbsPdf::expectedEvents()`. Now that a function that represents the expected events is. part of the computation graph, using it in the RooFit code generation. for the NLL is straight forward.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12998
https://github.com/root-project/root/pull/12998:301,testability,integr,integrals,301,"[RF] Support extended fits in RooFit code generation for AD; Introduce the new `RooAbsPdf::createExpectedEvents()` method to. explicitly create an object that represents the expected number of. events. Like this, the expected number of events is fully exposed in the. computation graph, just like the integrals. This makes adding support of RooFit codegen+AD for extended fits. trivial, and also optimizes the BatchMode because the RooFitDriver can. de-duplicate integrals that appear both in the regular evaluation path. and `RooAbsPdf::expectedEvents()`. Now that a function that represents the expected events is. part of the computation graph, using it in the RooFit code generation. for the NLL is straight forward.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12998
https://github.com/root-project/root/pull/12998:463,testability,integr,integrals,463,"[RF] Support extended fits in RooFit code generation for AD; Introduce the new `RooAbsPdf::createExpectedEvents()` method to. explicitly create an object that represents the expected number of. events. Like this, the expected number of events is fully exposed in the. computation graph, just like the integrals. This makes adding support of RooFit codegen+AD for extended fits. trivial, and also optimizes the BatchMode because the RooFitDriver can. de-duplicate integrals that appear both in the regular evaluation path. and `RooAbsPdf::expectedEvents()`. Now that a function that represents the expected events is. part of the computation graph, using it in the RooFit code generation. for the NLL is straight forward.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12998
https://github.com/root-project/root/pull/12998:5,usability,Support,Support,5,"[RF] Support extended fits in RooFit code generation for AD; Introduce the new `RooAbsPdf::createExpectedEvents()` method to. explicitly create an object that represents the expected number of. events. Like this, the expected number of events is fully exposed in the. computation graph, just like the integrals. This makes adding support of RooFit codegen+AD for extended fits. trivial, and also optimizes the BatchMode because the RooFitDriver can. de-duplicate integrals that appear both in the regular evaluation path. and `RooAbsPdf::expectedEvents()`. Now that a function that represents the expected events is. part of the computation graph, using it in the RooFit code generation. for the NLL is straight forward.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12998
https://github.com/root-project/root/pull/12998:330,usability,support,support,330,"[RF] Support extended fits in RooFit code generation for AD; Introduce the new `RooAbsPdf::createExpectedEvents()` method to. explicitly create an object that represents the expected number of. events. Like this, the expected number of events is fully exposed in the. computation graph, just like the integrals. This makes adding support of RooFit codegen+AD for extended fits. trivial, and also optimizes the BatchMode because the RooFitDriver can. de-duplicate integrals that appear both in the regular evaluation path. and `RooAbsPdf::expectedEvents()`. Now that a function that represents the expected events is. part of the computation graph, using it in the RooFit code generation. for the NLL is straight forward.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12998
https://github.com/root-project/root/pull/12999:1,deployability,modul,modulemap,1,"[modulemap] Remove module for xlocale.h; As commit 2db042523a explains, this header doesn't exist anymore since glibc 2.26. The oldest distributions that ROOT currently supports are EL8 and Debian 10, both of which have glibc 2.28. Remove the module as it also causes problems on FreeBSD due to including `locale.h` and a cyclic dependency `std -> xlocale.h -> std`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12999
https://github.com/root-project/root/pull/12999:19,deployability,modul,module,19,"[modulemap] Remove module for xlocale.h; As commit 2db042523a explains, this header doesn't exist anymore since glibc 2.26. The oldest distributions that ROOT currently supports are EL8 and Debian 10, both of which have glibc 2.28. Remove the module as it also causes problems on FreeBSD due to including `locale.h` and a cyclic dependency `std -> xlocale.h -> std`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12999
https://github.com/root-project/root/pull/12999:243,deployability,modul,module,243,"[modulemap] Remove module for xlocale.h; As commit 2db042523a explains, this header doesn't exist anymore since glibc 2.26. The oldest distributions that ROOT currently supports are EL8 and Debian 10, both of which have glibc 2.28. Remove the module as it also causes problems on FreeBSD due to including `locale.h` and a cyclic dependency `std -> xlocale.h -> std`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12999
https://github.com/root-project/root/pull/12999:329,deployability,depend,dependency,329,"[modulemap] Remove module for xlocale.h; As commit 2db042523a explains, this header doesn't exist anymore since glibc 2.26. The oldest distributions that ROOT currently supports are EL8 and Debian 10, both of which have glibc 2.28. Remove the module as it also causes problems on FreeBSD due to including `locale.h` and a cyclic dependency `std -> xlocale.h -> std`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12999
https://github.com/root-project/root/pull/12999:159,energy efficiency,current,currently,159,"[modulemap] Remove module for xlocale.h; As commit 2db042523a explains, this header doesn't exist anymore since glibc 2.26. The oldest distributions that ROOT currently supports are EL8 and Debian 10, both of which have glibc 2.28. Remove the module as it also causes problems on FreeBSD due to including `locale.h` and a cyclic dependency `std -> xlocale.h -> std`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12999
https://github.com/root-project/root/pull/12999:329,integrability,depend,dependency,329,"[modulemap] Remove module for xlocale.h; As commit 2db042523a explains, this header doesn't exist anymore since glibc 2.26. The oldest distributions that ROOT currently supports are EL8 and Debian 10, both of which have glibc 2.28. Remove the module as it also causes problems on FreeBSD due to including `locale.h` and a cyclic dependency `std -> xlocale.h -> std`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12999
https://github.com/root-project/root/pull/12999:135,interoperability,distribut,distributions,135,"[modulemap] Remove module for xlocale.h; As commit 2db042523a explains, this header doesn't exist anymore since glibc 2.26. The oldest distributions that ROOT currently supports are EL8 and Debian 10, both of which have glibc 2.28. Remove the module as it also causes problems on FreeBSD due to including `locale.h` and a cyclic dependency `std -> xlocale.h -> std`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12999
https://github.com/root-project/root/pull/12999:1,modifiability,modul,modulemap,1,"[modulemap] Remove module for xlocale.h; As commit 2db042523a explains, this header doesn't exist anymore since glibc 2.26. The oldest distributions that ROOT currently supports are EL8 and Debian 10, both of which have glibc 2.28. Remove the module as it also causes problems on FreeBSD due to including `locale.h` and a cyclic dependency `std -> xlocale.h -> std`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12999
https://github.com/root-project/root/pull/12999:19,modifiability,modul,module,19,"[modulemap] Remove module for xlocale.h; As commit 2db042523a explains, this header doesn't exist anymore since glibc 2.26. The oldest distributions that ROOT currently supports are EL8 and Debian 10, both of which have glibc 2.28. Remove the module as it also causes problems on FreeBSD due to including `locale.h` and a cyclic dependency `std -> xlocale.h -> std`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12999
https://github.com/root-project/root/pull/12999:243,modifiability,modul,module,243,"[modulemap] Remove module for xlocale.h; As commit 2db042523a explains, this header doesn't exist anymore since glibc 2.26. The oldest distributions that ROOT currently supports are EL8 and Debian 10, both of which have glibc 2.28. Remove the module as it also causes problems on FreeBSD due to including `locale.h` and a cyclic dependency `std -> xlocale.h -> std`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12999
https://github.com/root-project/root/pull/12999:329,modifiability,depend,dependency,329,"[modulemap] Remove module for xlocale.h; As commit 2db042523a explains, this header doesn't exist anymore since glibc 2.26. The oldest distributions that ROOT currently supports are EL8 and Debian 10, both of which have glibc 2.28. Remove the module as it also causes problems on FreeBSD due to including `locale.h` and a cyclic dependency `std -> xlocale.h -> std`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12999
https://github.com/root-project/root/pull/12999:84,reliability,doe,doesn,84,"[modulemap] Remove module for xlocale.h; As commit 2db042523a explains, this header doesn't exist anymore since glibc 2.26. The oldest distributions that ROOT currently supports are EL8 and Debian 10, both of which have glibc 2.28. Remove the module as it also causes problems on FreeBSD due to including `locale.h` and a cyclic dependency `std -> xlocale.h -> std`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12999
https://github.com/root-project/root/pull/12999:1,safety,modul,modulemap,1,"[modulemap] Remove module for xlocale.h; As commit 2db042523a explains, this header doesn't exist anymore since glibc 2.26. The oldest distributions that ROOT currently supports are EL8 and Debian 10, both of which have glibc 2.28. Remove the module as it also causes problems on FreeBSD due to including `locale.h` and a cyclic dependency `std -> xlocale.h -> std`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12999
https://github.com/root-project/root/pull/12999:19,safety,modul,module,19,"[modulemap] Remove module for xlocale.h; As commit 2db042523a explains, this header doesn't exist anymore since glibc 2.26. The oldest distributions that ROOT currently supports are EL8 and Debian 10, both of which have glibc 2.28. Remove the module as it also causes problems on FreeBSD due to including `locale.h` and a cyclic dependency `std -> xlocale.h -> std`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12999
https://github.com/root-project/root/pull/12999:243,safety,modul,module,243,"[modulemap] Remove module for xlocale.h; As commit 2db042523a explains, this header doesn't exist anymore since glibc 2.26. The oldest distributions that ROOT currently supports are EL8 and Debian 10, both of which have glibc 2.28. Remove the module as it also causes problems on FreeBSD due to including `locale.h` and a cyclic dependency `std -> xlocale.h -> std`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12999
https://github.com/root-project/root/pull/12999:329,safety,depend,dependency,329,"[modulemap] Remove module for xlocale.h; As commit 2db042523a explains, this header doesn't exist anymore since glibc 2.26. The oldest distributions that ROOT currently supports are EL8 and Debian 10, both of which have glibc 2.28. Remove the module as it also causes problems on FreeBSD due to including `locale.h` and a cyclic dependency `std -> xlocale.h -> std`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12999
https://github.com/root-project/root/pull/12999:329,testability,depend,dependency,329,"[modulemap] Remove module for xlocale.h; As commit 2db042523a explains, this header doesn't exist anymore since glibc 2.26. The oldest distributions that ROOT currently supports are EL8 and Debian 10, both of which have glibc 2.28. Remove the module as it also causes problems on FreeBSD due to including `locale.h` and a cyclic dependency `std -> xlocale.h -> std`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12999
https://github.com/root-project/root/pull/12999:169,usability,support,supports,169,"[modulemap] Remove module for xlocale.h; As commit 2db042523a explains, this header doesn't exist anymore since glibc 2.26. The oldest distributions that ROOT currently supports are EL8 and Debian 10, both of which have glibc 2.28. Remove the module as it also causes problems on FreeBSD due to including `locale.h` and a cyclic dependency `std -> xlocale.h -> std`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/12999
https://github.com/root-project/root/issues/13000:1164,availability,sla,slate,1164,"ROOT loads unneeded PCMs; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. When doing a simple `TFile::Open()`, ROOT initialises the interpreter on the first `TEnv::GetValue` needed by the aforementioned method. This makes it load all the pcms which it can find, regardless of weather they are needed to read the file or not (in our case we only have branches with basic types, e.g. floats or ints or vector of thereof). . This has the net result of adding 70MB of RSS for no particular reason to any process which uses ROOT. You can find more details in the attached instruments screenshot. Moreover, single stepping with the debugger and printing out the LoadModule argument, it seems that the pcms for Sofie, Proof and 3D graphics are particularly honours, all of which we do not need and we do not link. ![image](https://github.com/root-project/root/assets/10544/c1ee3a82-a5cc-4f64-a131-ea4fce1453c3). ### What is the expected behaviour? The best would be for ROOT to be smart enough to lazily load the pcms when they are actually needed, not upfront. A second best option would be to be able to start the interpreter in a clean slate state and load by hand only the pcms which are needed to read a file. ### How to reproduce? On macOS using Instruments one can do:. . ```bash. xcrun xctrace record --output root.trace --time-limit 30s --template Allocations --launch -- /Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-04-local2/bin/root.exe -q -b http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/019/AO2D.root. open root.trace. ```. and get the report in question. Using the alice environment should not matter, but in principle you should be able to load it from CVMFS. ### ROOT version. 6.28.04, but it's a while we see it. ### How did you install ROOT? ALICE build environment. ### Which operating system are you using? macOS, linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13000
https://github.com/root-project/root/issues/13000:1170,availability,state,state,1170,"ROOT loads unneeded PCMs; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. When doing a simple `TFile::Open()`, ROOT initialises the interpreter on the first `TEnv::GetValue` needed by the aforementioned method. This makes it load all the pcms which it can find, regardless of weather they are needed to read the file or not (in our case we only have branches with basic types, e.g. floats or ints or vector of thereof). . This has the net result of adding 70MB of RSS for no particular reason to any process which uses ROOT. You can find more details in the attached instruments screenshot. Moreover, single stepping with the debugger and printing out the LoadModule argument, it seems that the pcms for Sofie, Proof and 3D graphics are particularly honours, all of which we do not need and we do not link. ![image](https://github.com/root-project/root/assets/10544/c1ee3a82-a5cc-4f64-a131-ea4fce1453c3). ### What is the expected behaviour? The best would be for ROOT to be smart enough to lazily load the pcms when they are actually needed, not upfront. A second best option would be to be able to start the interpreter in a clean slate state and load by hand only the pcms which are needed to read a file. ### How to reproduce? On macOS using Instruments one can do:. . ```bash. xcrun xctrace record --output root.trace --time-limit 30s --template Allocations --launch -- /Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-04-local2/bin/root.exe -q -b http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/019/AO2D.root. open root.trace. ```. and get the report in question. Using the alice environment should not matter, but in principle you should be able to load it from CVMFS. ### ROOT version. 6.28.04, but it's a while we see it. ### How did you install ROOT? ALICE build environment. ### Which operating system are you using? macOS, linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13000
https://github.com/root-project/root/issues/13000:1911,availability,operat,operating,1911,"ROOT loads unneeded PCMs; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. When doing a simple `TFile::Open()`, ROOT initialises the interpreter on the first `TEnv::GetValue` needed by the aforementioned method. This makes it load all the pcms which it can find, regardless of weather they are needed to read the file or not (in our case we only have branches with basic types, e.g. floats or ints or vector of thereof). . This has the net result of adding 70MB of RSS for no particular reason to any process which uses ROOT. You can find more details in the attached instruments screenshot. Moreover, single stepping with the debugger and printing out the LoadModule argument, it seems that the pcms for Sofie, Proof and 3D graphics are particularly honours, all of which we do not need and we do not link. ![image](https://github.com/root-project/root/assets/10544/c1ee3a82-a5cc-4f64-a131-ea4fce1453c3). ### What is the expected behaviour? The best would be for ROOT to be smart enough to lazily load the pcms when they are actually needed, not upfront. A second best option would be to be able to start the interpreter in a clean slate state and load by hand only the pcms which are needed to read a file. ### How to reproduce? On macOS using Instruments one can do:. . ```bash. xcrun xctrace record --output root.trace --time-limit 30s --template Allocations --launch -- /Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-04-local2/bin/root.exe -q -b http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/019/AO2D.root. open root.trace. ```. and get the report in question. Using the alice environment should not matter, but in principle you should be able to load it from CVMFS. ### ROOT version. 6.28.04, but it's a while we see it. ### How did you install ROOT? ALICE build environment. ### Which operating system are you using? macOS, linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13000
https://github.com/root-project/root/issues/13000:1800,deployability,version,version,1800,"ROOT loads unneeded PCMs; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. When doing a simple `TFile::Open()`, ROOT initialises the interpreter on the first `TEnv::GetValue` needed by the aforementioned method. This makes it load all the pcms which it can find, regardless of weather they are needed to read the file or not (in our case we only have branches with basic types, e.g. floats or ints or vector of thereof). . This has the net result of adding 70MB of RSS for no particular reason to any process which uses ROOT. You can find more details in the attached instruments screenshot. Moreover, single stepping with the debugger and printing out the LoadModule argument, it seems that the pcms for Sofie, Proof and 3D graphics are particularly honours, all of which we do not need and we do not link. ![image](https://github.com/root-project/root/assets/10544/c1ee3a82-a5cc-4f64-a131-ea4fce1453c3). ### What is the expected behaviour? The best would be for ROOT to be smart enough to lazily load the pcms when they are actually needed, not upfront. A second best option would be to be able to start the interpreter in a clean slate state and load by hand only the pcms which are needed to read a file. ### How to reproduce? On macOS using Instruments one can do:. . ```bash. xcrun xctrace record --output root.trace --time-limit 30s --template Allocations --launch -- /Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-04-local2/bin/root.exe -q -b http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/019/AO2D.root. open root.trace. ```. and get the report in question. Using the alice environment should not matter, but in principle you should be able to load it from CVMFS. ### ROOT version. 6.28.04, but it's a while we see it. ### How did you install ROOT? ALICE build environment. ### Which operating system are you using? macOS, linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13000
https://github.com/root-project/root/issues/13000:1862,deployability,instal,install,1862,"ROOT loads unneeded PCMs; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. When doing a simple `TFile::Open()`, ROOT initialises the interpreter on the first `TEnv::GetValue` needed by the aforementioned method. This makes it load all the pcms which it can find, regardless of weather they are needed to read the file or not (in our case we only have branches with basic types, e.g. floats or ints or vector of thereof). . This has the net result of adding 70MB of RSS for no particular reason to any process which uses ROOT. You can find more details in the attached instruments screenshot. Moreover, single stepping with the debugger and printing out the LoadModule argument, it seems that the pcms for Sofie, Proof and 3D graphics are particularly honours, all of which we do not need and we do not link. ![image](https://github.com/root-project/root/assets/10544/c1ee3a82-a5cc-4f64-a131-ea4fce1453c3). ### What is the expected behaviour? The best would be for ROOT to be smart enough to lazily load the pcms when they are actually needed, not upfront. A second best option would be to be able to start the interpreter in a clean slate state and load by hand only the pcms which are needed to read a file. ### How to reproduce? On macOS using Instruments one can do:. . ```bash. xcrun xctrace record --output root.trace --time-limit 30s --template Allocations --launch -- /Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-04-local2/bin/root.exe -q -b http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/019/AO2D.root. open root.trace. ```. and get the report in question. Using the alice environment should not matter, but in principle you should be able to load it from CVMFS. ### ROOT version. 6.28.04, but it's a while we see it. ### How did you install ROOT? ALICE build environment. ### Which operating system are you using? macOS, linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13000
https://github.com/root-project/root/issues/13000:1882,deployability,build,build,1882,"ROOT loads unneeded PCMs; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. When doing a simple `TFile::Open()`, ROOT initialises the interpreter on the first `TEnv::GetValue` needed by the aforementioned method. This makes it load all the pcms which it can find, regardless of weather they are needed to read the file or not (in our case we only have branches with basic types, e.g. floats or ints or vector of thereof). . This has the net result of adding 70MB of RSS for no particular reason to any process which uses ROOT. You can find more details in the attached instruments screenshot. Moreover, single stepping with the debugger and printing out the LoadModule argument, it seems that the pcms for Sofie, Proof and 3D graphics are particularly honours, all of which we do not need and we do not link. ![image](https://github.com/root-project/root/assets/10544/c1ee3a82-a5cc-4f64-a131-ea4fce1453c3). ### What is the expected behaviour? The best would be for ROOT to be smart enough to lazily load the pcms when they are actually needed, not upfront. A second best option would be to be able to start the interpreter in a clean slate state and load by hand only the pcms which are needed to read a file. ### How to reproduce? On macOS using Instruments one can do:. . ```bash. xcrun xctrace record --output root.trace --time-limit 30s --template Allocations --launch -- /Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-04-local2/bin/root.exe -q -b http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/019/AO2D.root. open root.trace. ```. and get the report in question. Using the alice environment should not matter, but in principle you should be able to load it from CVMFS. ### ROOT version. 6.28.04, but it's a while we see it. ### How did you install ROOT? ALICE build environment. ### Which operating system are you using? macOS, linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13000
https://github.com/root-project/root/issues/13000:5,energy efficiency,load,loads,5,"ROOT loads unneeded PCMs; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. When doing a simple `TFile::Open()`, ROOT initialises the interpreter on the first `TEnv::GetValue` needed by the aforementioned method. This makes it load all the pcms which it can find, regardless of weather they are needed to read the file or not (in our case we only have branches with basic types, e.g. floats or ints or vector of thereof). . This has the net result of adding 70MB of RSS for no particular reason to any process which uses ROOT. You can find more details in the attached instruments screenshot. Moreover, single stepping with the debugger and printing out the LoadModule argument, it seems that the pcms for Sofie, Proof and 3D graphics are particularly honours, all of which we do not need and we do not link. ![image](https://github.com/root-project/root/assets/10544/c1ee3a82-a5cc-4f64-a131-ea4fce1453c3). ### What is the expected behaviour? The best would be for ROOT to be smart enough to lazily load the pcms when they are actually needed, not upfront. A second best option would be to be able to start the interpreter in a clean slate state and load by hand only the pcms which are needed to read a file. ### How to reproduce? On macOS using Instruments one can do:. . ```bash. xcrun xctrace record --output root.trace --time-limit 30s --template Allocations --launch -- /Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-04-local2/bin/root.exe -q -b http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/019/AO2D.root. open root.trace. ```. and get the report in question. Using the alice environment should not matter, but in principle you should be able to load it from CVMFS. ### ROOT version. 6.28.04, but it's a while we see it. ### How did you install ROOT? ALICE build environment. ### Which operating system are you using? macOS, linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13000
https://github.com/root-project/root/issues/13000:257,energy efficiency,load,load,257,"ROOT loads unneeded PCMs; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. When doing a simple `TFile::Open()`, ROOT initialises the interpreter on the first `TEnv::GetValue` needed by the aforementioned method. This makes it load all the pcms which it can find, regardless of weather they are needed to read the file or not (in our case we only have branches with basic types, e.g. floats or ints or vector of thereof). . This has the net result of adding 70MB of RSS for no particular reason to any process which uses ROOT. You can find more details in the attached instruments screenshot. Moreover, single stepping with the debugger and printing out the LoadModule argument, it seems that the pcms for Sofie, Proof and 3D graphics are particularly honours, all of which we do not need and we do not link. ![image](https://github.com/root-project/root/assets/10544/c1ee3a82-a5cc-4f64-a131-ea4fce1453c3). ### What is the expected behaviour? The best would be for ROOT to be smart enough to lazily load the pcms when they are actually needed, not upfront. A second best option would be to be able to start the interpreter in a clean slate state and load by hand only the pcms which are needed to read a file. ### How to reproduce? On macOS using Instruments one can do:. . ```bash. xcrun xctrace record --output root.trace --time-limit 30s --template Allocations --launch -- /Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-04-local2/bin/root.exe -q -b http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/019/AO2D.root. open root.trace. ```. and get the report in question. Using the alice environment should not matter, but in principle you should be able to load it from CVMFS. ### ROOT version. 6.28.04, but it's a while we see it. ### How did you install ROOT? ALICE build environment. ### Which operating system are you using? macOS, linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13000
https://github.com/root-project/root/issues/13000:688,energy efficiency,Load,LoadModule,688,"ROOT loads unneeded PCMs; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. When doing a simple `TFile::Open()`, ROOT initialises the interpreter on the first `TEnv::GetValue` needed by the aforementioned method. This makes it load all the pcms which it can find, regardless of weather they are needed to read the file or not (in our case we only have branches with basic types, e.g. floats or ints or vector of thereof). . This has the net result of adding 70MB of RSS for no particular reason to any process which uses ROOT. You can find more details in the attached instruments screenshot. Moreover, single stepping with the debugger and printing out the LoadModule argument, it seems that the pcms for Sofie, Proof and 3D graphics are particularly honours, all of which we do not need and we do not link. ![image](https://github.com/root-project/root/assets/10544/c1ee3a82-a5cc-4f64-a131-ea4fce1453c3). ### What is the expected behaviour? The best would be for ROOT to be smart enough to lazily load the pcms when they are actually needed, not upfront. A second best option would be to be able to start the interpreter in a clean slate state and load by hand only the pcms which are needed to read a file. ### How to reproduce? On macOS using Instruments one can do:. . ```bash. xcrun xctrace record --output root.trace --time-limit 30s --template Allocations --launch -- /Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-04-local2/bin/root.exe -q -b http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/019/AO2D.root. open root.trace. ```. and get the report in question. Using the alice environment should not matter, but in principle you should be able to load it from CVMFS. ### ROOT version. 6.28.04, but it's a while we see it. ### How did you install ROOT? ALICE build environment. ### Which operating system are you using? macOS, linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13000
https://github.com/root-project/root/issues/13000:1029,energy efficiency,load,load,1029,"ROOT loads unneeded PCMs; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. When doing a simple `TFile::Open()`, ROOT initialises the interpreter on the first `TEnv::GetValue` needed by the aforementioned method. This makes it load all the pcms which it can find, regardless of weather they are needed to read the file or not (in our case we only have branches with basic types, e.g. floats or ints or vector of thereof). . This has the net result of adding 70MB of RSS for no particular reason to any process which uses ROOT. You can find more details in the attached instruments screenshot. Moreover, single stepping with the debugger and printing out the LoadModule argument, it seems that the pcms for Sofie, Proof and 3D graphics are particularly honours, all of which we do not need and we do not link. ![image](https://github.com/root-project/root/assets/10544/c1ee3a82-a5cc-4f64-a131-ea4fce1453c3). ### What is the expected behaviour? The best would be for ROOT to be smart enough to lazily load the pcms when they are actually needed, not upfront. A second best option would be to be able to start the interpreter in a clean slate state and load by hand only the pcms which are needed to read a file. ### How to reproduce? On macOS using Instruments one can do:. . ```bash. xcrun xctrace record --output root.trace --time-limit 30s --template Allocations --launch -- /Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-04-local2/bin/root.exe -q -b http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/019/AO2D.root. open root.trace. ```. and get the report in question. Using the alice environment should not matter, but in principle you should be able to load it from CVMFS. ### ROOT version. 6.28.04, but it's a while we see it. ### How did you install ROOT? ALICE build environment. ### Which operating system are you using? macOS, linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13000
https://github.com/root-project/root/issues/13000:1180,energy efficiency,load,load,1180,"ROOT loads unneeded PCMs; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. When doing a simple `TFile::Open()`, ROOT initialises the interpreter on the first `TEnv::GetValue` needed by the aforementioned method. This makes it load all the pcms which it can find, regardless of weather they are needed to read the file or not (in our case we only have branches with basic types, e.g. floats or ints or vector of thereof). . This has the net result of adding 70MB of RSS for no particular reason to any process which uses ROOT. You can find more details in the attached instruments screenshot. Moreover, single stepping with the debugger and printing out the LoadModule argument, it seems that the pcms for Sofie, Proof and 3D graphics are particularly honours, all of which we do not need and we do not link. ![image](https://github.com/root-project/root/assets/10544/c1ee3a82-a5cc-4f64-a131-ea4fce1453c3). ### What is the expected behaviour? The best would be for ROOT to be smart enough to lazily load the pcms when they are actually needed, not upfront. A second best option would be to be able to start the interpreter in a clean slate state and load by hand only the pcms which are needed to read a file. ### How to reproduce? On macOS using Instruments one can do:. . ```bash. xcrun xctrace record --output root.trace --time-limit 30s --template Allocations --launch -- /Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-04-local2/bin/root.exe -q -b http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/019/AO2D.root. open root.trace. ```. and get the report in question. Using the alice environment should not matter, but in principle you should be able to load it from CVMFS. ### ROOT version. 6.28.04, but it's a while we see it. ### How did you install ROOT? ALICE build environment. ### Which operating system are you using? macOS, linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13000
https://github.com/root-project/root/issues/13000:1382,energy efficiency,Alloc,Allocations,1382,"ROOT loads unneeded PCMs; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. When doing a simple `TFile::Open()`, ROOT initialises the interpreter on the first `TEnv::GetValue` needed by the aforementioned method. This makes it load all the pcms which it can find, regardless of weather they are needed to read the file or not (in our case we only have branches with basic types, e.g. floats or ints or vector of thereof). . This has the net result of adding 70MB of RSS for no particular reason to any process which uses ROOT. You can find more details in the attached instruments screenshot. Moreover, single stepping with the debugger and printing out the LoadModule argument, it seems that the pcms for Sofie, Proof and 3D graphics are particularly honours, all of which we do not need and we do not link. ![image](https://github.com/root-project/root/assets/10544/c1ee3a82-a5cc-4f64-a131-ea4fce1453c3). ### What is the expected behaviour? The best would be for ROOT to be smart enough to lazily load the pcms when they are actually needed, not upfront. A second best option would be to be able to start the interpreter in a clean slate state and load by hand only the pcms which are needed to read a file. ### How to reproduce? On macOS using Instruments one can do:. . ```bash. xcrun xctrace record --output root.trace --time-limit 30s --template Allocations --launch -- /Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-04-local2/bin/root.exe -q -b http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/019/AO2D.root. open root.trace. ```. and get the report in question. Using the alice environment should not matter, but in principle you should be able to load it from CVMFS. ### ROOT version. 6.28.04, but it's a while we see it. ### How did you install ROOT? ALICE build environment. ### Which operating system are you using? macOS, linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13000
https://github.com/root-project/root/issues/13000:1771,energy efficiency,load,load,1771,"ROOT loads unneeded PCMs; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. When doing a simple `TFile::Open()`, ROOT initialises the interpreter on the first `TEnv::GetValue` needed by the aforementioned method. This makes it load all the pcms which it can find, regardless of weather they are needed to read the file or not (in our case we only have branches with basic types, e.g. floats or ints or vector of thereof). . This has the net result of adding 70MB of RSS for no particular reason to any process which uses ROOT. You can find more details in the attached instruments screenshot. Moreover, single stepping with the debugger and printing out the LoadModule argument, it seems that the pcms for Sofie, Proof and 3D graphics are particularly honours, all of which we do not need and we do not link. ![image](https://github.com/root-project/root/assets/10544/c1ee3a82-a5cc-4f64-a131-ea4fce1453c3). ### What is the expected behaviour? The best would be for ROOT to be smart enough to lazily load the pcms when they are actually needed, not upfront. A second best option would be to be able to start the interpreter in a clean slate state and load by hand only the pcms which are needed to read a file. ### How to reproduce? On macOS using Instruments one can do:. . ```bash. xcrun xctrace record --output root.trace --time-limit 30s --template Allocations --launch -- /Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-04-local2/bin/root.exe -q -b http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/019/AO2D.root. open root.trace. ```. and get the report in question. Using the alice environment should not matter, but in principle you should be able to load it from CVMFS. ### ROOT version. 6.28.04, but it's a while we see it. ### How did you install ROOT? ALICE build environment. ### Which operating system are you using? macOS, linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13000
https://github.com/root-project/root/issues/13000:1170,integrability,state,state,1170,"ROOT loads unneeded PCMs; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. When doing a simple `TFile::Open()`, ROOT initialises the interpreter on the first `TEnv::GetValue` needed by the aforementioned method. This makes it load all the pcms which it can find, regardless of weather they are needed to read the file or not (in our case we only have branches with basic types, e.g. floats or ints or vector of thereof). . This has the net result of adding 70MB of RSS for no particular reason to any process which uses ROOT. You can find more details in the attached instruments screenshot. Moreover, single stepping with the debugger and printing out the LoadModule argument, it seems that the pcms for Sofie, Proof and 3D graphics are particularly honours, all of which we do not need and we do not link. ![image](https://github.com/root-project/root/assets/10544/c1ee3a82-a5cc-4f64-a131-ea4fce1453c3). ### What is the expected behaviour? The best would be for ROOT to be smart enough to lazily load the pcms when they are actually needed, not upfront. A second best option would be to be able to start the interpreter in a clean slate state and load by hand only the pcms which are needed to read a file. ### How to reproduce? On macOS using Instruments one can do:. . ```bash. xcrun xctrace record --output root.trace --time-limit 30s --template Allocations --launch -- /Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-04-local2/bin/root.exe -q -b http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/019/AO2D.root. open root.trace. ```. and get the report in question. Using the alice environment should not matter, but in principle you should be able to load it from CVMFS. ### ROOT version. 6.28.04, but it's a while we see it. ### How did you install ROOT? ALICE build environment. ### Which operating system are you using? macOS, linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13000
https://github.com/root-project/root/issues/13000:1800,integrability,version,version,1800,"ROOT loads unneeded PCMs; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. When doing a simple `TFile::Open()`, ROOT initialises the interpreter on the first `TEnv::GetValue` needed by the aforementioned method. This makes it load all the pcms which it can find, regardless of weather they are needed to read the file or not (in our case we only have branches with basic types, e.g. floats or ints or vector of thereof). . This has the net result of adding 70MB of RSS for no particular reason to any process which uses ROOT. You can find more details in the attached instruments screenshot. Moreover, single stepping with the debugger and printing out the LoadModule argument, it seems that the pcms for Sofie, Proof and 3D graphics are particularly honours, all of which we do not need and we do not link. ![image](https://github.com/root-project/root/assets/10544/c1ee3a82-a5cc-4f64-a131-ea4fce1453c3). ### What is the expected behaviour? The best would be for ROOT to be smart enough to lazily load the pcms when they are actually needed, not upfront. A second best option would be to be able to start the interpreter in a clean slate state and load by hand only the pcms which are needed to read a file. ### How to reproduce? On macOS using Instruments one can do:. . ```bash. xcrun xctrace record --output root.trace --time-limit 30s --template Allocations --launch -- /Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-04-local2/bin/root.exe -q -b http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/019/AO2D.root. open root.trace. ```. and get the report in question. Using the alice environment should not matter, but in principle you should be able to load it from CVMFS. ### ROOT version. 6.28.04, but it's a while we see it. ### How did you install ROOT? ALICE build environment. ### Which operating system are you using? macOS, linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13000
https://github.com/root-project/root/issues/13000:1800,modifiability,version,version,1800,"ROOT loads unneeded PCMs; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. When doing a simple `TFile::Open()`, ROOT initialises the interpreter on the first `TEnv::GetValue` needed by the aforementioned method. This makes it load all the pcms which it can find, regardless of weather they are needed to read the file or not (in our case we only have branches with basic types, e.g. floats or ints or vector of thereof). . This has the net result of adding 70MB of RSS for no particular reason to any process which uses ROOT. You can find more details in the attached instruments screenshot. Moreover, single stepping with the debugger and printing out the LoadModule argument, it seems that the pcms for Sofie, Proof and 3D graphics are particularly honours, all of which we do not need and we do not link. ![image](https://github.com/root-project/root/assets/10544/c1ee3a82-a5cc-4f64-a131-ea4fce1453c3). ### What is the expected behaviour? The best would be for ROOT to be smart enough to lazily load the pcms when they are actually needed, not upfront. A second best option would be to be able to start the interpreter in a clean slate state and load by hand only the pcms which are needed to read a file. ### How to reproduce? On macOS using Instruments one can do:. . ```bash. xcrun xctrace record --output root.trace --time-limit 30s --template Allocations --launch -- /Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-04-local2/bin/root.exe -q -b http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/019/AO2D.root. open root.trace. ```. and get the report in question. Using the alice environment should not matter, but in principle you should be able to load it from CVMFS. ### ROOT version. 6.28.04, but it's a while we see it. ### How did you install ROOT? ALICE build environment. ### Which operating system are you using? macOS, linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13000
https://github.com/root-project/root/issues/13000:5,performance,load,loads,5,"ROOT loads unneeded PCMs; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. When doing a simple `TFile::Open()`, ROOT initialises the interpreter on the first `TEnv::GetValue` needed by the aforementioned method. This makes it load all the pcms which it can find, regardless of weather they are needed to read the file or not (in our case we only have branches with basic types, e.g. floats or ints or vector of thereof). . This has the net result of adding 70MB of RSS for no particular reason to any process which uses ROOT. You can find more details in the attached instruments screenshot. Moreover, single stepping with the debugger and printing out the LoadModule argument, it seems that the pcms for Sofie, Proof and 3D graphics are particularly honours, all of which we do not need and we do not link. ![image](https://github.com/root-project/root/assets/10544/c1ee3a82-a5cc-4f64-a131-ea4fce1453c3). ### What is the expected behaviour? The best would be for ROOT to be smart enough to lazily load the pcms when they are actually needed, not upfront. A second best option would be to be able to start the interpreter in a clean slate state and load by hand only the pcms which are needed to read a file. ### How to reproduce? On macOS using Instruments one can do:. . ```bash. xcrun xctrace record --output root.trace --time-limit 30s --template Allocations --launch -- /Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-04-local2/bin/root.exe -q -b http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/019/AO2D.root. open root.trace. ```. and get the report in question. Using the alice environment should not matter, but in principle you should be able to load it from CVMFS. ### ROOT version. 6.28.04, but it's a while we see it. ### How did you install ROOT? ALICE build environment. ### Which operating system are you using? macOS, linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13000
https://github.com/root-project/root/issues/13000:257,performance,load,load,257,"ROOT loads unneeded PCMs; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. When doing a simple `TFile::Open()`, ROOT initialises the interpreter on the first `TEnv::GetValue` needed by the aforementioned method. This makes it load all the pcms which it can find, regardless of weather they are needed to read the file or not (in our case we only have branches with basic types, e.g. floats or ints or vector of thereof). . This has the net result of adding 70MB of RSS for no particular reason to any process which uses ROOT. You can find more details in the attached instruments screenshot. Moreover, single stepping with the debugger and printing out the LoadModule argument, it seems that the pcms for Sofie, Proof and 3D graphics are particularly honours, all of which we do not need and we do not link. ![image](https://github.com/root-project/root/assets/10544/c1ee3a82-a5cc-4f64-a131-ea4fce1453c3). ### What is the expected behaviour? The best would be for ROOT to be smart enough to lazily load the pcms when they are actually needed, not upfront. A second best option would be to be able to start the interpreter in a clean slate state and load by hand only the pcms which are needed to read a file. ### How to reproduce? On macOS using Instruments one can do:. . ```bash. xcrun xctrace record --output root.trace --time-limit 30s --template Allocations --launch -- /Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-04-local2/bin/root.exe -q -b http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/019/AO2D.root. open root.trace. ```. and get the report in question. Using the alice environment should not matter, but in principle you should be able to load it from CVMFS. ### ROOT version. 6.28.04, but it's a while we see it. ### How did you install ROOT? ALICE build environment. ### Which operating system are you using? macOS, linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13000
https://github.com/root-project/root/issues/13000:688,performance,Load,LoadModule,688,"ROOT loads unneeded PCMs; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. When doing a simple `TFile::Open()`, ROOT initialises the interpreter on the first `TEnv::GetValue` needed by the aforementioned method. This makes it load all the pcms which it can find, regardless of weather they are needed to read the file or not (in our case we only have branches with basic types, e.g. floats or ints or vector of thereof). . This has the net result of adding 70MB of RSS for no particular reason to any process which uses ROOT. You can find more details in the attached instruments screenshot. Moreover, single stepping with the debugger and printing out the LoadModule argument, it seems that the pcms for Sofie, Proof and 3D graphics are particularly honours, all of which we do not need and we do not link. ![image](https://github.com/root-project/root/assets/10544/c1ee3a82-a5cc-4f64-a131-ea4fce1453c3). ### What is the expected behaviour? The best would be for ROOT to be smart enough to lazily load the pcms when they are actually needed, not upfront. A second best option would be to be able to start the interpreter in a clean slate state and load by hand only the pcms which are needed to read a file. ### How to reproduce? On macOS using Instruments one can do:. . ```bash. xcrun xctrace record --output root.trace --time-limit 30s --template Allocations --launch -- /Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-04-local2/bin/root.exe -q -b http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/019/AO2D.root. open root.trace. ```. and get the report in question. Using the alice environment should not matter, but in principle you should be able to load it from CVMFS. ### ROOT version. 6.28.04, but it's a while we see it. ### How did you install ROOT? ALICE build environment. ### Which operating system are you using? macOS, linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13000
https://github.com/root-project/root/issues/13000:1029,performance,load,load,1029,"ROOT loads unneeded PCMs; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. When doing a simple `TFile::Open()`, ROOT initialises the interpreter on the first `TEnv::GetValue` needed by the aforementioned method. This makes it load all the pcms which it can find, regardless of weather they are needed to read the file or not (in our case we only have branches with basic types, e.g. floats or ints or vector of thereof). . This has the net result of adding 70MB of RSS for no particular reason to any process which uses ROOT. You can find more details in the attached instruments screenshot. Moreover, single stepping with the debugger and printing out the LoadModule argument, it seems that the pcms for Sofie, Proof and 3D graphics are particularly honours, all of which we do not need and we do not link. ![image](https://github.com/root-project/root/assets/10544/c1ee3a82-a5cc-4f64-a131-ea4fce1453c3). ### What is the expected behaviour? The best would be for ROOT to be smart enough to lazily load the pcms when they are actually needed, not upfront. A second best option would be to be able to start the interpreter in a clean slate state and load by hand only the pcms which are needed to read a file. ### How to reproduce? On macOS using Instruments one can do:. . ```bash. xcrun xctrace record --output root.trace --time-limit 30s --template Allocations --launch -- /Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-04-local2/bin/root.exe -q -b http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/019/AO2D.root. open root.trace. ```. and get the report in question. Using the alice environment should not matter, but in principle you should be able to load it from CVMFS. ### ROOT version. 6.28.04, but it's a while we see it. ### How did you install ROOT? ALICE build environment. ### Which operating system are you using? macOS, linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13000
https://github.com/root-project/root/issues/13000:1180,performance,load,load,1180,"ROOT loads unneeded PCMs; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. When doing a simple `TFile::Open()`, ROOT initialises the interpreter on the first `TEnv::GetValue` needed by the aforementioned method. This makes it load all the pcms which it can find, regardless of weather they are needed to read the file or not (in our case we only have branches with basic types, e.g. floats or ints or vector of thereof). . This has the net result of adding 70MB of RSS for no particular reason to any process which uses ROOT. You can find more details in the attached instruments screenshot. Moreover, single stepping with the debugger and printing out the LoadModule argument, it seems that the pcms for Sofie, Proof and 3D graphics are particularly honours, all of which we do not need and we do not link. ![image](https://github.com/root-project/root/assets/10544/c1ee3a82-a5cc-4f64-a131-ea4fce1453c3). ### What is the expected behaviour? The best would be for ROOT to be smart enough to lazily load the pcms when they are actually needed, not upfront. A second best option would be to be able to start the interpreter in a clean slate state and load by hand only the pcms which are needed to read a file. ### How to reproduce? On macOS using Instruments one can do:. . ```bash. xcrun xctrace record --output root.trace --time-limit 30s --template Allocations --launch -- /Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-04-local2/bin/root.exe -q -b http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/019/AO2D.root. open root.trace. ```. and get the report in question. Using the alice environment should not matter, but in principle you should be able to load it from CVMFS. ### ROOT version. 6.28.04, but it's a while we see it. ### How did you install ROOT? ALICE build environment. ### Which operating system are you using? macOS, linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13000
https://github.com/root-project/root/issues/13000:1356,performance,time,time-limit,1356,"ROOT loads unneeded PCMs; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. When doing a simple `TFile::Open()`, ROOT initialises the interpreter on the first `TEnv::GetValue` needed by the aforementioned method. This makes it load all the pcms which it can find, regardless of weather they are needed to read the file or not (in our case we only have branches with basic types, e.g. floats or ints or vector of thereof). . This has the net result of adding 70MB of RSS for no particular reason to any process which uses ROOT. You can find more details in the attached instruments screenshot. Moreover, single stepping with the debugger and printing out the LoadModule argument, it seems that the pcms for Sofie, Proof and 3D graphics are particularly honours, all of which we do not need and we do not link. ![image](https://github.com/root-project/root/assets/10544/c1ee3a82-a5cc-4f64-a131-ea4fce1453c3). ### What is the expected behaviour? The best would be for ROOT to be smart enough to lazily load the pcms when they are actually needed, not upfront. A second best option would be to be able to start the interpreter in a clean slate state and load by hand only the pcms which are needed to read a file. ### How to reproduce? On macOS using Instruments one can do:. . ```bash. xcrun xctrace record --output root.trace --time-limit 30s --template Allocations --launch -- /Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-04-local2/bin/root.exe -q -b http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/019/AO2D.root. open root.trace. ```. and get the report in question. Using the alice environment should not matter, but in principle you should be able to load it from CVMFS. ### ROOT version. 6.28.04, but it's a while we see it. ### How did you install ROOT? ALICE build environment. ### Which operating system are you using? macOS, linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13000
https://github.com/root-project/root/issues/13000:1771,performance,load,load,1771,"ROOT loads unneeded PCMs; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. When doing a simple `TFile::Open()`, ROOT initialises the interpreter on the first `TEnv::GetValue` needed by the aforementioned method. This makes it load all the pcms which it can find, regardless of weather they are needed to read the file or not (in our case we only have branches with basic types, e.g. floats or ints or vector of thereof). . This has the net result of adding 70MB of RSS for no particular reason to any process which uses ROOT. You can find more details in the attached instruments screenshot. Moreover, single stepping with the debugger and printing out the LoadModule argument, it seems that the pcms for Sofie, Proof and 3D graphics are particularly honours, all of which we do not need and we do not link. ![image](https://github.com/root-project/root/assets/10544/c1ee3a82-a5cc-4f64-a131-ea4fce1453c3). ### What is the expected behaviour? The best would be for ROOT to be smart enough to lazily load the pcms when they are actually needed, not upfront. A second best option would be to be able to start the interpreter in a clean slate state and load by hand only the pcms which are needed to read a file. ### How to reproduce? On macOS using Instruments one can do:. . ```bash. xcrun xctrace record --output root.trace --time-limit 30s --template Allocations --launch -- /Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-04-local2/bin/root.exe -q -b http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/019/AO2D.root. open root.trace. ```. and get the report in question. Using the alice environment should not matter, but in principle you should be able to load it from CVMFS. ### ROOT version. 6.28.04, but it's a while we see it. ### How did you install ROOT? ALICE build environment. ### Which operating system are you using? macOS, linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13000
https://github.com/root-project/root/issues/13000:1164,reliability,sla,slate,1164,"ROOT loads unneeded PCMs; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. When doing a simple `TFile::Open()`, ROOT initialises the interpreter on the first `TEnv::GetValue` needed by the aforementioned method. This makes it load all the pcms which it can find, regardless of weather they are needed to read the file or not (in our case we only have branches with basic types, e.g. floats or ints or vector of thereof). . This has the net result of adding 70MB of RSS for no particular reason to any process which uses ROOT. You can find more details in the attached instruments screenshot. Moreover, single stepping with the debugger and printing out the LoadModule argument, it seems that the pcms for Sofie, Proof and 3D graphics are particularly honours, all of which we do not need and we do not link. ![image](https://github.com/root-project/root/assets/10544/c1ee3a82-a5cc-4f64-a131-ea4fce1453c3). ### What is the expected behaviour? The best would be for ROOT to be smart enough to lazily load the pcms when they are actually needed, not upfront. A second best option would be to be able to start the interpreter in a clean slate state and load by hand only the pcms which are needed to read a file. ### How to reproduce? On macOS using Instruments one can do:. . ```bash. xcrun xctrace record --output root.trace --time-limit 30s --template Allocations --launch -- /Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-04-local2/bin/root.exe -q -b http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/019/AO2D.root. open root.trace. ```. and get the report in question. Using the alice environment should not matter, but in principle you should be able to load it from CVMFS. ### ROOT version. 6.28.04, but it's a while we see it. ### How did you install ROOT? ALICE build environment. ### Which operating system are you using? macOS, linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13000
https://github.com/root-project/root/issues/13000:1520,safety,test,testdata,1520,"ROOT loads unneeded PCMs; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. When doing a simple `TFile::Open()`, ROOT initialises the interpreter on the first `TEnv::GetValue` needed by the aforementioned method. This makes it load all the pcms which it can find, regardless of weather they are needed to read the file or not (in our case we only have branches with basic types, e.g. floats or ints or vector of thereof). . This has the net result of adding 70MB of RSS for no particular reason to any process which uses ROOT. You can find more details in the attached instruments screenshot. Moreover, single stepping with the debugger and printing out the LoadModule argument, it seems that the pcms for Sofie, Proof and 3D graphics are particularly honours, all of which we do not need and we do not link. ![image](https://github.com/root-project/root/assets/10544/c1ee3a82-a5cc-4f64-a131-ea4fce1453c3). ### What is the expected behaviour? The best would be for ROOT to be smart enough to lazily load the pcms when they are actually needed, not upfront. A second best option would be to be able to start the interpreter in a clean slate state and load by hand only the pcms which are needed to read a file. ### How to reproduce? On macOS using Instruments one can do:. . ```bash. xcrun xctrace record --output root.trace --time-limit 30s --template Allocations --launch -- /Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-04-local2/bin/root.exe -q -b http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/019/AO2D.root. open root.trace. ```. and get the report in question. Using the alice environment should not matter, but in principle you should be able to load it from CVMFS. ### ROOT version. 6.28.04, but it's a while we see it. ### How did you install ROOT? ALICE build environment. ### Which operating system are you using? macOS, linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13000
https://github.com/root-project/root/issues/13000:119,testability,simpl,simple,119,"ROOT loads unneeded PCMs; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. When doing a simple `TFile::Open()`, ROOT initialises the interpreter on the first `TEnv::GetValue` needed by the aforementioned method. This makes it load all the pcms which it can find, regardless of weather they are needed to read the file or not (in our case we only have branches with basic types, e.g. floats or ints or vector of thereof). . This has the net result of adding 70MB of RSS for no particular reason to any process which uses ROOT. You can find more details in the attached instruments screenshot. Moreover, single stepping with the debugger and printing out the LoadModule argument, it seems that the pcms for Sofie, Proof and 3D graphics are particularly honours, all of which we do not need and we do not link. ![image](https://github.com/root-project/root/assets/10544/c1ee3a82-a5cc-4f64-a131-ea4fce1453c3). ### What is the expected behaviour? The best would be for ROOT to be smart enough to lazily load the pcms when they are actually needed, not upfront. A second best option would be to be able to start the interpreter in a clean slate state and load by hand only the pcms which are needed to read a file. ### How to reproduce? On macOS using Instruments one can do:. . ```bash. xcrun xctrace record --output root.trace --time-limit 30s --template Allocations --launch -- /Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-04-local2/bin/root.exe -q -b http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/019/AO2D.root. open root.trace. ```. and get the report in question. Using the alice environment should not matter, but in principle you should be able to load it from CVMFS. ### ROOT version. 6.28.04, but it's a while we see it. ### How did you install ROOT? ALICE build environment. ### Which operating system are you using? macOS, linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13000
https://github.com/root-project/root/issues/13000:599,testability,instrument,instruments,599,"ROOT loads unneeded PCMs; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. When doing a simple `TFile::Open()`, ROOT initialises the interpreter on the first `TEnv::GetValue` needed by the aforementioned method. This makes it load all the pcms which it can find, regardless of weather they are needed to read the file or not (in our case we only have branches with basic types, e.g. floats or ints or vector of thereof). . This has the net result of adding 70MB of RSS for no particular reason to any process which uses ROOT. You can find more details in the attached instruments screenshot. Moreover, single stepping with the debugger and printing out the LoadModule argument, it seems that the pcms for Sofie, Proof and 3D graphics are particularly honours, all of which we do not need and we do not link. ![image](https://github.com/root-project/root/assets/10544/c1ee3a82-a5cc-4f64-a131-ea4fce1453c3). ### What is the expected behaviour? The best would be for ROOT to be smart enough to lazily load the pcms when they are actually needed, not upfront. A second best option would be to be able to start the interpreter in a clean slate state and load by hand only the pcms which are needed to read a file. ### How to reproduce? On macOS using Instruments one can do:. . ```bash. xcrun xctrace record --output root.trace --time-limit 30s --template Allocations --launch -- /Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-04-local2/bin/root.exe -q -b http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/019/AO2D.root. open root.trace. ```. and get the report in question. Using the alice environment should not matter, but in principle you should be able to load it from CVMFS. ### ROOT version. 6.28.04, but it's a while we see it. ### How did you install ROOT? ALICE build environment. ### Which operating system are you using? macOS, linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13000
https://github.com/root-project/root/issues/13000:1277,testability,Instrument,Instruments,1277,"ROOT loads unneeded PCMs; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. When doing a simple `TFile::Open()`, ROOT initialises the interpreter on the first `TEnv::GetValue` needed by the aforementioned method. This makes it load all the pcms which it can find, regardless of weather they are needed to read the file or not (in our case we only have branches with basic types, e.g. floats or ints or vector of thereof). . This has the net result of adding 70MB of RSS for no particular reason to any process which uses ROOT. You can find more details in the attached instruments screenshot. Moreover, single stepping with the debugger and printing out the LoadModule argument, it seems that the pcms for Sofie, Proof and 3D graphics are particularly honours, all of which we do not need and we do not link. ![image](https://github.com/root-project/root/assets/10544/c1ee3a82-a5cc-4f64-a131-ea4fce1453c3). ### What is the expected behaviour? The best would be for ROOT to be smart enough to lazily load the pcms when they are actually needed, not upfront. A second best option would be to be able to start the interpreter in a clean slate state and load by hand only the pcms which are needed to read a file. ### How to reproduce? On macOS using Instruments one can do:. . ```bash. xcrun xctrace record --output root.trace --time-limit 30s --template Allocations --launch -- /Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-04-local2/bin/root.exe -q -b http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/019/AO2D.root. open root.trace. ```. and get the report in question. Using the alice environment should not matter, but in principle you should be able to load it from CVMFS. ### ROOT version. 6.28.04, but it's a while we see it. ### How did you install ROOT? ALICE build environment. ### Which operating system are you using? macOS, linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13000
https://github.com/root-project/root/issues/13000:1348,testability,trace,trace,1348,"ROOT loads unneeded PCMs; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. When doing a simple `TFile::Open()`, ROOT initialises the interpreter on the first `TEnv::GetValue` needed by the aforementioned method. This makes it load all the pcms which it can find, regardless of weather they are needed to read the file or not (in our case we only have branches with basic types, e.g. floats or ints or vector of thereof). . This has the net result of adding 70MB of RSS for no particular reason to any process which uses ROOT. You can find more details in the attached instruments screenshot. Moreover, single stepping with the debugger and printing out the LoadModule argument, it seems that the pcms for Sofie, Proof and 3D graphics are particularly honours, all of which we do not need and we do not link. ![image](https://github.com/root-project/root/assets/10544/c1ee3a82-a5cc-4f64-a131-ea4fce1453c3). ### What is the expected behaviour? The best would be for ROOT to be smart enough to lazily load the pcms when they are actually needed, not upfront. A second best option would be to be able to start the interpreter in a clean slate state and load by hand only the pcms which are needed to read a file. ### How to reproduce? On macOS using Instruments one can do:. . ```bash. xcrun xctrace record --output root.trace --time-limit 30s --template Allocations --launch -- /Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-04-local2/bin/root.exe -q -b http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/019/AO2D.root. open root.trace. ```. and get the report in question. Using the alice environment should not matter, but in principle you should be able to load it from CVMFS. ### ROOT version. 6.28.04, but it's a while we see it. ### How did you install ROOT? ALICE build environment. ### Which operating system are you using? macOS, linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13000
https://github.com/root-project/root/issues/13000:1520,testability,test,testdata,1520,"ROOT loads unneeded PCMs; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. When doing a simple `TFile::Open()`, ROOT initialises the interpreter on the first `TEnv::GetValue` needed by the aforementioned method. This makes it load all the pcms which it can find, regardless of weather they are needed to read the file or not (in our case we only have branches with basic types, e.g. floats or ints or vector of thereof). . This has the net result of adding 70MB of RSS for no particular reason to any process which uses ROOT. You can find more details in the attached instruments screenshot. Moreover, single stepping with the debugger and printing out the LoadModule argument, it seems that the pcms for Sofie, Proof and 3D graphics are particularly honours, all of which we do not need and we do not link. ![image](https://github.com/root-project/root/assets/10544/c1ee3a82-a5cc-4f64-a131-ea4fce1453c3). ### What is the expected behaviour? The best would be for ROOT to be smart enough to lazily load the pcms when they are actually needed, not upfront. A second best option would be to be able to start the interpreter in a clean slate state and load by hand only the pcms which are needed to read a file. ### How to reproduce? On macOS using Instruments one can do:. . ```bash. xcrun xctrace record --output root.trace --time-limit 30s --template Allocations --launch -- /Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-04-local2/bin/root.exe -q -b http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/019/AO2D.root. open root.trace. ```. and get the report in question. Using the alice environment should not matter, but in principle you should be able to load it from CVMFS. ### ROOT version. 6.28.04, but it's a while we see it. ### How did you install ROOT? ALICE build environment. ### Which operating system are you using? macOS, linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13000
https://github.com/root-project/root/issues/13000:1641,testability,trace,trace,1641,"ROOT loads unneeded PCMs; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. When doing a simple `TFile::Open()`, ROOT initialises the interpreter on the first `TEnv::GetValue` needed by the aforementioned method. This makes it load all the pcms which it can find, regardless of weather they are needed to read the file or not (in our case we only have branches with basic types, e.g. floats or ints or vector of thereof). . This has the net result of adding 70MB of RSS for no particular reason to any process which uses ROOT. You can find more details in the attached instruments screenshot. Moreover, single stepping with the debugger and printing out the LoadModule argument, it seems that the pcms for Sofie, Proof and 3D graphics are particularly honours, all of which we do not need and we do not link. ![image](https://github.com/root-project/root/assets/10544/c1ee3a82-a5cc-4f64-a131-ea4fce1453c3). ### What is the expected behaviour? The best would be for ROOT to be smart enough to lazily load the pcms when they are actually needed, not upfront. A second best option would be to be able to start the interpreter in a clean slate state and load by hand only the pcms which are needed to read a file. ### How to reproduce? On macOS using Instruments one can do:. . ```bash. xcrun xctrace record --output root.trace --time-limit 30s --template Allocations --launch -- /Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-04-local2/bin/root.exe -q -b http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/019/AO2D.root. open root.trace. ```. and get the report in question. Using the alice environment should not matter, but in principle you should be able to load it from CVMFS. ### ROOT version. 6.28.04, but it's a while we see it. ### How did you install ROOT? ALICE build environment. ### Which operating system are you using? macOS, linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13000
https://github.com/root-project/root/issues/13000:1972,testability,context,context,1972,"ROOT loads unneeded PCMs; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. When doing a simple `TFile::Open()`, ROOT initialises the interpreter on the first `TEnv::GetValue` needed by the aforementioned method. This makes it load all the pcms which it can find, regardless of weather they are needed to read the file or not (in our case we only have branches with basic types, e.g. floats or ints or vector of thereof). . This has the net result of adding 70MB of RSS for no particular reason to any process which uses ROOT. You can find more details in the attached instruments screenshot. Moreover, single stepping with the debugger and printing out the LoadModule argument, it seems that the pcms for Sofie, Proof and 3D graphics are particularly honours, all of which we do not need and we do not link. ![image](https://github.com/root-project/root/assets/10544/c1ee3a82-a5cc-4f64-a131-ea4fce1453c3). ### What is the expected behaviour? The best would be for ROOT to be smart enough to lazily load the pcms when they are actually needed, not upfront. A second best option would be to be able to start the interpreter in a clean slate state and load by hand only the pcms which are needed to read a file. ### How to reproduce? On macOS using Instruments one can do:. . ```bash. xcrun xctrace record --output root.trace --time-limit 30s --template Allocations --launch -- /Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-04-local2/bin/root.exe -q -b http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/019/AO2D.root. open root.trace. ```. and get the report in question. Using the alice environment should not matter, but in principle you should be able to load it from CVMFS. ### ROOT version. 6.28.04, but it's a while we see it. ### How did you install ROOT? ALICE build environment. ### Which operating system are you using? macOS, linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13000
https://github.com/root-project/root/issues/13000:119,usability,simpl,simple,119,"ROOT loads unneeded PCMs; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. When doing a simple `TFile::Open()`, ROOT initialises the interpreter on the first `TEnv::GetValue` needed by the aforementioned method. This makes it load all the pcms which it can find, regardless of weather they are needed to read the file or not (in our case we only have branches with basic types, e.g. floats or ints or vector of thereof). . This has the net result of adding 70MB of RSS for no particular reason to any process which uses ROOT. You can find more details in the attached instruments screenshot. Moreover, single stepping with the debugger and printing out the LoadModule argument, it seems that the pcms for Sofie, Proof and 3D graphics are particularly honours, all of which we do not need and we do not link. ![image](https://github.com/root-project/root/assets/10544/c1ee3a82-a5cc-4f64-a131-ea4fce1453c3). ### What is the expected behaviour? The best would be for ROOT to be smart enough to lazily load the pcms when they are actually needed, not upfront. A second best option would be to be able to start the interpreter in a clean slate state and load by hand only the pcms which are needed to read a file. ### How to reproduce? On macOS using Instruments one can do:. . ```bash. xcrun xctrace record --output root.trace --time-limit 30s --template Allocations --launch -- /Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-04-local2/bin/root.exe -q -b http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/019/AO2D.root. open root.trace. ```. and get the report in question. Using the alice environment should not matter, but in principle you should be able to load it from CVMFS. ### ROOT version. 6.28.04, but it's a while we see it. ### How did you install ROOT? ALICE build environment. ### Which operating system are you using? macOS, linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13000
https://github.com/root-project/root/issues/13000:962,usability,behavi,behaviour,962,"ROOT loads unneeded PCMs; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. When doing a simple `TFile::Open()`, ROOT initialises the interpreter on the first `TEnv::GetValue` needed by the aforementioned method. This makes it load all the pcms which it can find, regardless of weather they are needed to read the file or not (in our case we only have branches with basic types, e.g. floats or ints or vector of thereof). . This has the net result of adding 70MB of RSS for no particular reason to any process which uses ROOT. You can find more details in the attached instruments screenshot. Moreover, single stepping with the debugger and printing out the LoadModule argument, it seems that the pcms for Sofie, Proof and 3D graphics are particularly honours, all of which we do not need and we do not link. ![image](https://github.com/root-project/root/assets/10544/c1ee3a82-a5cc-4f64-a131-ea4fce1453c3). ### What is the expected behaviour? The best would be for ROOT to be smart enough to lazily load the pcms when they are actually needed, not upfront. A second best option would be to be able to start the interpreter in a clean slate state and load by hand only the pcms which are needed to read a file. ### How to reproduce? On macOS using Instruments one can do:. . ```bash. xcrun xctrace record --output root.trace --time-limit 30s --template Allocations --launch -- /Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-04-local2/bin/root.exe -q -b http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/019/AO2D.root. open root.trace. ```. and get the report in question. Using the alice environment should not matter, but in principle you should be able to load it from CVMFS. ### ROOT version. 6.28.04, but it's a while we see it. ### How did you install ROOT? ALICE build environment. ### Which operating system are you using? macOS, linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13000
https://github.com/root-project/root/issues/13000:1407,usability,User,Users,1407,"ROOT loads unneeded PCMs; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. When doing a simple `TFile::Open()`, ROOT initialises the interpreter on the first `TEnv::GetValue` needed by the aforementioned method. This makes it load all the pcms which it can find, regardless of weather they are needed to read the file or not (in our case we only have branches with basic types, e.g. floats or ints or vector of thereof). . This has the net result of adding 70MB of RSS for no particular reason to any process which uses ROOT. You can find more details in the attached instruments screenshot. Moreover, single stepping with the debugger and printing out the LoadModule argument, it seems that the pcms for Sofie, Proof and 3D graphics are particularly honours, all of which we do not need and we do not link. ![image](https://github.com/root-project/root/assets/10544/c1ee3a82-a5cc-4f64-a131-ea4fce1453c3). ### What is the expected behaviour? The best would be for ROOT to be smart enough to lazily load the pcms when they are actually needed, not upfront. A second best option would be to be able to start the interpreter in a clean slate state and load by hand only the pcms which are needed to read a file. ### How to reproduce? On macOS using Instruments one can do:. . ```bash. xcrun xctrace record --output root.trace --time-limit 30s --template Allocations --launch -- /Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-04-local2/bin/root.exe -q -b http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/019/AO2D.root. open root.trace. ```. and get the report in question. Using the alice environment should not matter, but in principle you should be able to load it from CVMFS. ### ROOT version. 6.28.04, but it's a while we see it. ### How did you install ROOT? ALICE build environment. ### Which operating system are you using? macOS, linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13000
https://github.com/root-project/root/issues/13001:246,availability,error,errors,246,"Cannot use range-v3 in the interpreter with C++20 enabled; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Because of the implicit `using namespace std` in the interpreter, trying to use range-v3 headers result in errors about ambiguous references, like:. ```. In file included from ROOT_prompt_0:1:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range/traits.hpp:24:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range_fwd.hpp:23:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/concepts/compare.hpp:35:39: error: reference to 'ranges' is ambiguous. concept compares_as = same_as<ranges::common_comparison_category_t<T, Cat>, Cat>;. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/compare.hpp:25:11: note: candidate found by name lookup is 'ranges'. namespace ranges. ^. /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/x86_64-el9/include/c++/13.1.0/experimental/string_view:689:13: note: candidate found by name lookup is 'std::ranges'. namespace ranges. ^. ```. ### What is the expected behaviour? I expect to be able to use the top level `ranges` namespace at the same time as `std::ranges`. ### How to reproduce? From lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/traits.hpp>. In file included from ROOT_pr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13001
https://github.com/root-project/root/issues/13001:695,availability,error,error,695,"Cannot use range-v3 in the interpreter with C++20 enabled; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Because of the implicit `using namespace std` in the interpreter, trying to use range-v3 headers result in errors about ambiguous references, like:. ```. In file included from ROOT_prompt_0:1:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range/traits.hpp:24:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range_fwd.hpp:23:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/concepts/compare.hpp:35:39: error: reference to 'ranges' is ambiguous. concept compares_as = same_as<ranges::common_comparison_category_t<T, Cat>, Cat>;. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/compare.hpp:25:11: note: candidate found by name lookup is 'ranges'. namespace ranges. ^. /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/x86_64-el9/include/c++/13.1.0/experimental/string_view:689:13: note: candidate found by name lookup is 'std::ranges'. namespace ranges. ^. ```. ### What is the expected behaviour? I expect to be able to use the top level `ranges` namespace at the same time as `std::ranges`. ### How to reproduce? From lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/traits.hpp>. In file included from ROOT_pr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13001
https://github.com/root-project/root/issues/13001:2373,availability,error,error,2373,"up is 'std::ranges'. namespace ranges. ^. ```. ### What is the expected behaviour? I expect to be able to use the top level `ranges` namespace at the same time as `std::ranges`. ### How to reproduce? From lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/traits.hpp>. In file included from ROOT_prompt_0:1:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range/traits.hpp:24:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range_fwd.hpp:23:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/concepts/compare.hpp:35:39: error: reference to 'ranges' is ambiguous. concept compares_as = same_as<ranges::common_comparison_category_t<T, Cat>, Cat>;. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/compare.hpp:25:11: note: candidate found by name lookup is 'ranges'. namespace ranges. ^. /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/x86_64-el9/include/c++/13.1.0/experimental/string_view:689:13: note: candidate found by name lookup is 'std::ranges'. namespace ranges. ^. ```. ### ROOT version. v6-28-00-patches. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. I wanted to report this problem as a compelling use case that requires #11027",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13001
https://github.com/root-project/root/issues/13001:2999,availability,operat,operating,2999,"up is 'std::ranges'. namespace ranges. ^. ```. ### What is the expected behaviour? I expect to be able to use the top level `ranges` namespace at the same time as `std::ranges`. ### How to reproduce? From lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/traits.hpp>. In file included from ROOT_prompt_0:1:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range/traits.hpp:24:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range_fwd.hpp:23:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/concepts/compare.hpp:35:39: error: reference to 'ranges' is ambiguous. concept compares_as = same_as<ranges::common_comparison_category_t<T, Cat>, Cat>;. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/compare.hpp:25:11: note: candidate found by name lookup is 'ranges'. namespace ranges. ^. /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/x86_64-el9/include/c++/13.1.0/experimental/string_view:689:13: note: candidate found by name lookup is 'std::ranges'. namespace ranges. ^. ```. ### ROOT version. v6-28-00-patches. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. I wanted to report this problem as a compelling use case that requires #11027",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13001
https://github.com/root-project/root/issues/13001:1023,deployability,releas,releases,1023,"interpreter with C++20 enabled; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Because of the implicit `using namespace std` in the interpreter, trying to use range-v3 headers result in errors about ambiguous references, like:. ```. In file included from ROOT_prompt_0:1:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range/traits.hpp:24:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range_fwd.hpp:23:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/concepts/compare.hpp:35:39: error: reference to 'ranges' is ambiguous. concept compares_as = same_as<ranges::common_comparison_category_t<T, Cat>, Cat>;. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/compare.hpp:25:11: note: candidate found by name lookup is 'ranges'. namespace ranges. ^. /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/x86_64-el9/include/c++/13.1.0/experimental/string_view:689:13: note: candidate found by name lookup is 'std::ranges'. namespace ranges. ^. ```. ### What is the expected behaviour? I expect to be able to use the top level `ranges` namespace at the same time as `std::ranges`. ### How to reproduce? From lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/traits.hpp>. In file included from ROOT_prompt_0:1:. In file included",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13001
https://github.com/root-project/root/issues/13001:1725,deployability,patch,patches,1725,"biguous. concept compares_as = same_as<ranges::common_comparison_category_t<T, Cat>, Cat>;. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/compare.hpp:25:11: note: candidate found by name lookup is 'ranges'. namespace ranges. ^. /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/x86_64-el9/include/c++/13.1.0/experimental/string_view:689:13: note: candidate found by name lookup is 'std::ranges'. namespace ranges. ^. ```. ### What is the expected behaviour? I expect to be able to use the top level `ranges` namespace at the same time as `std::ranges`. ### How to reproduce? From lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/traits.hpp>. In file included from ROOT_prompt_0:1:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range/traits.hpp:24:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range_fwd.hpp:23:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/concepts/compare.hpp:35:39: error: reference to 'ranges' is ambiguous. concept compares_as = same_as<ranges::common_comparison_category_t<T, Cat>, Cat>;. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/compare.hpp:25:11: note: candidate found by name lookup is 'ranges'. namespace ranges. ^. /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/x8",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13001
https://github.com/root-project/root/issues/13001:2701,deployability,releas,releases,2701,"up is 'std::ranges'. namespace ranges. ^. ```. ### What is the expected behaviour? I expect to be able to use the top level `ranges` namespace at the same time as `std::ranges`. ### How to reproduce? From lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/traits.hpp>. In file included from ROOT_prompt_0:1:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range/traits.hpp:24:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range_fwd.hpp:23:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/concepts/compare.hpp:35:39: error: reference to 'ranges' is ambiguous. concept compares_as = same_as<ranges::common_comparison_category_t<T, Cat>, Cat>;. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/compare.hpp:25:11: note: candidate found by name lookup is 'ranges'. namespace ranges. ^. /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/x86_64-el9/include/c++/13.1.0/experimental/string_view:689:13: note: candidate found by name lookup is 'std::ranges'. namespace ranges. ^. ```. ### ROOT version. v6-28-00-patches. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. I wanted to report this problem as a compelling use case that requires #11027",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13001
https://github.com/root-project/root/issues/13001:2880,deployability,version,version,2880,"up is 'std::ranges'. namespace ranges. ^. ```. ### What is the expected behaviour? I expect to be able to use the top level `ranges` namespace at the same time as `std::ranges`. ### How to reproduce? From lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/traits.hpp>. In file included from ROOT_prompt_0:1:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range/traits.hpp:24:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range_fwd.hpp:23:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/concepts/compare.hpp:35:39: error: reference to 'ranges' is ambiguous. concept compares_as = same_as<ranges::common_comparison_category_t<T, Cat>, Cat>;. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/compare.hpp:25:11: note: candidate found by name lookup is 'ranges'. namespace ranges. ^. /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/x86_64-el9/include/c++/13.1.0/experimental/string_view:689:13: note: candidate found by name lookup is 'std::ranges'. namespace ranges. ^. ```. ### ROOT version. v6-28-00-patches. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. I wanted to report this problem as a compelling use case that requires #11027",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13001
https://github.com/root-project/root/issues/13001:2898,deployability,patch,patches,2898,"up is 'std::ranges'. namespace ranges. ^. ```. ### What is the expected behaviour? I expect to be able to use the top level `ranges` namespace at the same time as `std::ranges`. ### How to reproduce? From lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/traits.hpp>. In file included from ROOT_prompt_0:1:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range/traits.hpp:24:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range_fwd.hpp:23:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/concepts/compare.hpp:35:39: error: reference to 'ranges' is ambiguous. concept compares_as = same_as<ranges::common_comparison_category_t<T, Cat>, Cat>;. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/compare.hpp:25:11: note: candidate found by name lookup is 'ranges'. namespace ranges. ^. /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/x86_64-el9/include/c++/13.1.0/experimental/string_view:689:13: note: candidate found by name lookup is 'std::ranges'. namespace ranges. ^. ```. ### ROOT version. v6-28-00-patches. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. I wanted to report this problem as a compelling use case that requires #11027",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13001
https://github.com/root-project/root/issues/13001:2923,deployability,instal,install,2923,"up is 'std::ranges'. namespace ranges. ^. ```. ### What is the expected behaviour? I expect to be able to use the top level `ranges` namespace at the same time as `std::ranges`. ### How to reproduce? From lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/traits.hpp>. In file included from ROOT_prompt_0:1:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range/traits.hpp:24:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range_fwd.hpp:23:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/concepts/compare.hpp:35:39: error: reference to 'ranges' is ambiguous. concept compares_as = same_as<ranges::common_comparison_category_t<T, Cat>, Cat>;. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/compare.hpp:25:11: note: candidate found by name lookup is 'ranges'. namespace ranges. ^. /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/x86_64-el9/include/c++/13.1.0/experimental/string_view:689:13: note: candidate found by name lookup is 'std::ranges'. namespace ranges. ^. ```. ### ROOT version. v6-28-00-patches. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. I wanted to report this problem as a compelling use case that requires #11027",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13001
https://github.com/root-project/root/issues/13001:2949,deployability,build,builds,2949,"up is 'std::ranges'. namespace ranges. ^. ```. ### What is the expected behaviour? I expect to be able to use the top level `ranges` namespace at the same time as `std::ranges`. ### How to reproduce? From lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/traits.hpp>. In file included from ROOT_prompt_0:1:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range/traits.hpp:24:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range_fwd.hpp:23:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/concepts/compare.hpp:35:39: error: reference to 'ranges' is ambiguous. concept compares_as = same_as<ranges::common_comparison_category_t<T, Cat>, Cat>;. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/compare.hpp:25:11: note: candidate found by name lookup is 'ranges'. namespace ranges. ^. /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/x86_64-el9/include/c++/13.1.0/experimental/string_view:689:13: note: candidate found by name lookup is 'std::ranges'. namespace ranges. ^. ```. ### ROOT version. v6-28-00-patches. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. I wanted to report this problem as a compelling use case that requires #11027",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13001
https://github.com/root-project/root/issues/13001:2880,integrability,version,version,2880,"up is 'std::ranges'. namespace ranges. ^. ```. ### What is the expected behaviour? I expect to be able to use the top level `ranges` namespace at the same time as `std::ranges`. ### How to reproduce? From lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/traits.hpp>. In file included from ROOT_prompt_0:1:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range/traits.hpp:24:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range_fwd.hpp:23:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/concepts/compare.hpp:35:39: error: reference to 'ranges' is ambiguous. concept compares_as = same_as<ranges::common_comparison_category_t<T, Cat>, Cat>;. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/compare.hpp:25:11: note: candidate found by name lookup is 'ranges'. namespace ranges. ^. /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/x86_64-el9/include/c++/13.1.0/experimental/string_view:689:13: note: candidate found by name lookup is 'std::ranges'. namespace ranges. ^. ```. ### ROOT version. v6-28-00-patches. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. I wanted to report this problem as a compelling use case that requires #11027",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13001
https://github.com/root-project/root/issues/13001:2880,modifiability,version,version,2880,"up is 'std::ranges'. namespace ranges. ^. ```. ### What is the expected behaviour? I expect to be able to use the top level `ranges` namespace at the same time as `std::ranges`. ### How to reproduce? From lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/traits.hpp>. In file included from ROOT_prompt_0:1:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range/traits.hpp:24:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range_fwd.hpp:23:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/concepts/compare.hpp:35:39: error: reference to 'ranges' is ambiguous. concept compares_as = same_as<ranges::common_comparison_category_t<T, Cat>, Cat>;. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/compare.hpp:25:11: note: candidate found by name lookup is 'ranges'. namespace ranges. ^. /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/x86_64-el9/include/c++/13.1.0/experimental/string_view:689:13: note: candidate found by name lookup is 'std::ranges'. namespace ranges. ^. ```. ### ROOT version. v6-28-00-patches. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. I wanted to report this problem as a compelling use case that requires #11027",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13001
https://github.com/root-project/root/issues/13001:246,performance,error,errors,246,"Cannot use range-v3 in the interpreter with C++20 enabled; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Because of the implicit `using namespace std` in the interpreter, trying to use range-v3 headers result in errors about ambiguous references, like:. ```. In file included from ROOT_prompt_0:1:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range/traits.hpp:24:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range_fwd.hpp:23:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/concepts/compare.hpp:35:39: error: reference to 'ranges' is ambiguous. concept compares_as = same_as<ranges::common_comparison_category_t<T, Cat>, Cat>;. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/compare.hpp:25:11: note: candidate found by name lookup is 'ranges'. namespace ranges. ^. /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/x86_64-el9/include/c++/13.1.0/experimental/string_view:689:13: note: candidate found by name lookup is 'std::ranges'. namespace ranges. ^. ```. ### What is the expected behaviour? I expect to be able to use the top level `ranges` namespace at the same time as `std::ranges`. ### How to reproduce? From lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/traits.hpp>. In file included from ROOT_pr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13001
https://github.com/root-project/root/issues/13001:695,performance,error,error,695,"Cannot use range-v3 in the interpreter with C++20 enabled; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Because of the implicit `using namespace std` in the interpreter, trying to use range-v3 headers result in errors about ambiguous references, like:. ```. In file included from ROOT_prompt_0:1:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range/traits.hpp:24:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range_fwd.hpp:23:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/concepts/compare.hpp:35:39: error: reference to 'ranges' is ambiguous. concept compares_as = same_as<ranges::common_comparison_category_t<T, Cat>, Cat>;. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/compare.hpp:25:11: note: candidate found by name lookup is 'ranges'. namespace ranges. ^. /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/x86_64-el9/include/c++/13.1.0/experimental/string_view:689:13: note: candidate found by name lookup is 'std::ranges'. namespace ranges. ^. ```. ### What is the expected behaviour? I expect to be able to use the top level `ranges` namespace at the same time as `std::ranges`. ### How to reproduce? From lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/traits.hpp>. In file included from ROOT_pr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13001
https://github.com/root-project/root/issues/13001:1301,performance,time,time,1301,"cluded from ROOT_prompt_0:1:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range/traits.hpp:24:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range_fwd.hpp:23:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/concepts/compare.hpp:35:39: error: reference to 'ranges' is ambiguous. concept compares_as = same_as<ranges::common_comparison_category_t<T, Cat>, Cat>;. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/compare.hpp:25:11: note: candidate found by name lookup is 'ranges'. namespace ranges. ^. /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/x86_64-el9/include/c++/13.1.0/experimental/string_view:689:13: note: candidate found by name lookup is 'std::ranges'. namespace ranges. ^. ```. ### What is the expected behaviour? I expect to be able to use the top level `ranges` namespace at the same time as `std::ranges`. ### How to reproduce? From lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/traits.hpp>. In file included from ROOT_prompt_0:1:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range/traits.hpp:24:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range_fwd.hpp:23:. /cvmfs/sft-nightlies.cern.ch/lcg/vi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13001
https://github.com/root-project/root/issues/13001:2373,performance,error,error,2373,"up is 'std::ranges'. namespace ranges. ^. ```. ### What is the expected behaviour? I expect to be able to use the top level `ranges` namespace at the same time as `std::ranges`. ### How to reproduce? From lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/traits.hpp>. In file included from ROOT_prompt_0:1:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range/traits.hpp:24:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range_fwd.hpp:23:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/concepts/compare.hpp:35:39: error: reference to 'ranges' is ambiguous. concept compares_as = same_as<ranges::common_comparison_category_t<T, Cat>, Cat>;. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/compare.hpp:25:11: note: candidate found by name lookup is 'ranges'. namespace ranges. ^. /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/x86_64-el9/include/c++/13.1.0/experimental/string_view:689:13: note: candidate found by name lookup is 'std::ranges'. namespace ranges. ^. ```. ### ROOT version. v6-28-00-patches. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. I wanted to report this problem as a compelling use case that requires #11027",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13001
https://github.com/root-project/root/issues/13001:246,safety,error,errors,246,"Cannot use range-v3 in the interpreter with C++20 enabled; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Because of the implicit `using namespace std` in the interpreter, trying to use range-v3 headers result in errors about ambiguous references, like:. ```. In file included from ROOT_prompt_0:1:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range/traits.hpp:24:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range_fwd.hpp:23:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/concepts/compare.hpp:35:39: error: reference to 'ranges' is ambiguous. concept compares_as = same_as<ranges::common_comparison_category_t<T, Cat>, Cat>;. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/compare.hpp:25:11: note: candidate found by name lookup is 'ranges'. namespace ranges. ^. /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/x86_64-el9/include/c++/13.1.0/experimental/string_view:689:13: note: candidate found by name lookup is 'std::ranges'. namespace ranges. ^. ```. ### What is the expected behaviour? I expect to be able to use the top level `ranges` namespace at the same time as `std::ranges`. ### How to reproduce? From lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/traits.hpp>. In file included from ROOT_pr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13001
https://github.com/root-project/root/issues/13001:695,safety,error,error,695,"Cannot use range-v3 in the interpreter with C++20 enabled; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Because of the implicit `using namespace std` in the interpreter, trying to use range-v3 headers result in errors about ambiguous references, like:. ```. In file included from ROOT_prompt_0:1:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range/traits.hpp:24:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range_fwd.hpp:23:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/concepts/compare.hpp:35:39: error: reference to 'ranges' is ambiguous. concept compares_as = same_as<ranges::common_comparison_category_t<T, Cat>, Cat>;. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/compare.hpp:25:11: note: candidate found by name lookup is 'ranges'. namespace ranges. ^. /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/x86_64-el9/include/c++/13.1.0/experimental/string_view:689:13: note: candidate found by name lookup is 'std::ranges'. namespace ranges. ^. ```. ### What is the expected behaviour? I expect to be able to use the top level `ranges` namespace at the same time as `std::ranges`. ### How to reproduce? From lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/traits.hpp>. In file included from ROOT_pr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13001
https://github.com/root-project/root/issues/13001:1725,safety,patch,patches,1725,"biguous. concept compares_as = same_as<ranges::common_comparison_category_t<T, Cat>, Cat>;. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/compare.hpp:25:11: note: candidate found by name lookup is 'ranges'. namespace ranges. ^. /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/x86_64-el9/include/c++/13.1.0/experimental/string_view:689:13: note: candidate found by name lookup is 'std::ranges'. namespace ranges. ^. ```. ### What is the expected behaviour? I expect to be able to use the top level `ranges` namespace at the same time as `std::ranges`. ### How to reproduce? From lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/traits.hpp>. In file included from ROOT_prompt_0:1:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range/traits.hpp:24:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range_fwd.hpp:23:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/concepts/compare.hpp:35:39: error: reference to 'ranges' is ambiguous. concept compares_as = same_as<ranges::common_comparison_category_t<T, Cat>, Cat>;. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/compare.hpp:25:11: note: candidate found by name lookup is 'ranges'. namespace ranges. ^. /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/x8",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13001
https://github.com/root-project/root/issues/13001:2373,safety,error,error,2373,"up is 'std::ranges'. namespace ranges. ^. ```. ### What is the expected behaviour? I expect to be able to use the top level `ranges` namespace at the same time as `std::ranges`. ### How to reproduce? From lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/traits.hpp>. In file included from ROOT_prompt_0:1:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range/traits.hpp:24:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range_fwd.hpp:23:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/concepts/compare.hpp:35:39: error: reference to 'ranges' is ambiguous. concept compares_as = same_as<ranges::common_comparison_category_t<T, Cat>, Cat>;. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/compare.hpp:25:11: note: candidate found by name lookup is 'ranges'. namespace ranges. ^. /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/x86_64-el9/include/c++/13.1.0/experimental/string_view:689:13: note: candidate found by name lookup is 'std::ranges'. namespace ranges. ^. ```. ### ROOT version. v6-28-00-patches. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. I wanted to report this problem as a compelling use case that requires #11027",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13001
https://github.com/root-project/root/issues/13001:2898,safety,patch,patches,2898,"up is 'std::ranges'. namespace ranges. ^. ```. ### What is the expected behaviour? I expect to be able to use the top level `ranges` namespace at the same time as `std::ranges`. ### How to reproduce? From lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/traits.hpp>. In file included from ROOT_prompt_0:1:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range/traits.hpp:24:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range_fwd.hpp:23:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/concepts/compare.hpp:35:39: error: reference to 'ranges' is ambiguous. concept compares_as = same_as<ranges::common_comparison_category_t<T, Cat>, Cat>;. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/compare.hpp:25:11: note: candidate found by name lookup is 'ranges'. namespace ranges. ^. /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/x86_64-el9/include/c++/13.1.0/experimental/string_view:689:13: note: candidate found by name lookup is 'std::ranges'. namespace ranges. ^. ```. ### ROOT version. v6-28-00-patches. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. I wanted to report this problem as a compelling use case that requires #11027",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13001
https://github.com/root-project/root/issues/13001:1605,security,Team,Team,1605,"ies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/concepts/compare.hpp:35:39: error: reference to 'ranges' is ambiguous. concept compares_as = same_as<ranges::common_comparison_category_t<T, Cat>, Cat>;. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/compare.hpp:25:11: note: candidate found by name lookup is 'ranges'. namespace ranges. ^. /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/x86_64-el9/include/c++/13.1.0/experimental/string_view:689:13: note: candidate found by name lookup is 'std::ranges'. namespace ranges. ^. ```. ### What is the expected behaviour? I expect to be able to use the top level `ranges` namespace at the same time as `std::ranges`. ### How to reproduce? From lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/traits.hpp>. In file included from ROOT_prompt_0:1:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range/traits.hpp:24:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range_fwd.hpp:23:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/concepts/compare.hpp:35:39: error: reference to 'ranges' is ambiguous. concept compares_as = same_as<ranges::common_comparison_category_t<T, Cat>, Cat>;. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/compare.hpp:25:11: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13001
https://github.com/root-project/root/issues/13001:1725,security,patch,patches,1725,"biguous. concept compares_as = same_as<ranges::common_comparison_category_t<T, Cat>, Cat>;. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/compare.hpp:25:11: note: candidate found by name lookup is 'ranges'. namespace ranges. ^. /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/x86_64-el9/include/c++/13.1.0/experimental/string_view:689:13: note: candidate found by name lookup is 'std::ranges'. namespace ranges. ^. ```. ### What is the expected behaviour? I expect to be able to use the top level `ranges` namespace at the same time as `std::ranges`. ### How to reproduce? From lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/traits.hpp>. In file included from ROOT_prompt_0:1:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range/traits.hpp:24:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range_fwd.hpp:23:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/concepts/compare.hpp:35:39: error: reference to 'ranges' is ambiguous. concept compares_as = same_as<ranges::common_comparison_category_t<T, Cat>, Cat>;. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/compare.hpp:25:11: note: candidate found by name lookup is 'ranges'. namespace ranges. ^. /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/x8",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13001
https://github.com/root-project/root/issues/13001:2898,security,patch,patches,2898,"up is 'std::ranges'. namespace ranges. ^. ```. ### What is the expected behaviour? I expect to be able to use the top level `ranges` namespace at the same time as `std::ranges`. ### How to reproduce? From lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/traits.hpp>. In file included from ROOT_prompt_0:1:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range/traits.hpp:24:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range_fwd.hpp:23:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/concepts/compare.hpp:35:39: error: reference to 'ranges' is ambiguous. concept compares_as = same_as<ranges::common_comparison_category_t<T, Cat>, Cat>;. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/compare.hpp:25:11: note: candidate found by name lookup is 'ranges'. namespace ranges. ^. /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/x86_64-el9/include/c++/13.1.0/experimental/string_view:689:13: note: candidate found by name lookup is 'std::ranges'. namespace ranges. ^. ```. ### ROOT version. v6-28-00-patches. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. I wanted to report this problem as a compelling use case that requires #11027",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13001
https://github.com/root-project/root/issues/13001:3060,testability,context,context,3060,"up is 'std::ranges'. namespace ranges. ^. ```. ### What is the expected behaviour? I expect to be able to use the top level `ranges` namespace at the same time as `std::ranges`. ### How to reproduce? From lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/traits.hpp>. In file included from ROOT_prompt_0:1:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range/traits.hpp:24:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range_fwd.hpp:23:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/concepts/compare.hpp:35:39: error: reference to 'ranges' is ambiguous. concept compares_as = same_as<ranges::common_comparison_category_t<T, Cat>, Cat>;. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/compare.hpp:25:11: note: candidate found by name lookup is 'ranges'. namespace ranges. ^. /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/x86_64-el9/include/c++/13.1.0/experimental/string_view:689:13: note: candidate found by name lookup is 'std::ranges'. namespace ranges. ^. ```. ### ROOT version. v6-28-00-patches. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. I wanted to report this problem as a compelling use case that requires #11027",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13001
https://github.com/root-project/root/issues/13001:246,usability,error,errors,246,"Cannot use range-v3 in the interpreter with C++20 enabled; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Because of the implicit `using namespace std` in the interpreter, trying to use range-v3 headers result in errors about ambiguous references, like:. ```. In file included from ROOT_prompt_0:1:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range/traits.hpp:24:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range_fwd.hpp:23:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/concepts/compare.hpp:35:39: error: reference to 'ranges' is ambiguous. concept compares_as = same_as<ranges::common_comparison_category_t<T, Cat>, Cat>;. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/compare.hpp:25:11: note: candidate found by name lookup is 'ranges'. namespace ranges. ^. /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/x86_64-el9/include/c++/13.1.0/experimental/string_view:689:13: note: candidate found by name lookup is 'std::ranges'. namespace ranges. ^. ```. ### What is the expected behaviour? I expect to be able to use the top level `ranges` namespace at the same time as `std::ranges`. ### How to reproduce? From lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/traits.hpp>. In file included from ROOT_pr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13001
https://github.com/root-project/root/issues/13001:695,usability,error,error,695,"Cannot use range-v3 in the interpreter with C++20 enabled; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Because of the implicit `using namespace std` in the interpreter, trying to use range-v3 headers result in errors about ambiguous references, like:. ```. In file included from ROOT_prompt_0:1:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range/traits.hpp:24:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range_fwd.hpp:23:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/concepts/compare.hpp:35:39: error: reference to 'ranges' is ambiguous. concept compares_as = same_as<ranges::common_comparison_category_t<T, Cat>, Cat>;. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/compare.hpp:25:11: note: candidate found by name lookup is 'ranges'. namespace ranges. ^. /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/x86_64-el9/include/c++/13.1.0/experimental/string_view:689:13: note: candidate found by name lookup is 'std::ranges'. namespace ranges. ^. ```. ### What is the expected behaviour? I expect to be able to use the top level `ranges` namespace at the same time as `std::ranges`. ### How to reproduce? From lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/traits.hpp>. In file included from ROOT_pr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13001
https://github.com/root-project/root/issues/13001:1218,usability,behavi,behaviour,1218,"e-v3 headers result in errors about ambiguous references, like:. ```. In file included from ROOT_prompt_0:1:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range/traits.hpp:24:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range_fwd.hpp:23:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/concepts/compare.hpp:35:39: error: reference to 'ranges' is ambiguous. concept compares_as = same_as<ranges::common_comparison_category_t<T, Cat>, Cat>;. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/compare.hpp:25:11: note: candidate found by name lookup is 'ranges'. namespace ranges. ^. /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/x86_64-el9/include/c++/13.1.0/experimental/string_view:689:13: note: candidate found by name lookup is 'std::ranges'. namespace ranges. ^. ```. ### What is the expected behaviour? I expect to be able to use the top level `ranges` namespace at the same time as `std::ranges`. ### How to reproduce? From lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/traits.hpp>. In file included from ROOT_prompt_0:1:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range/traits.hpp:24:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-g",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13001
https://github.com/root-project/root/issues/13001:1795,usability,help,help,1795,"egory_t<T, Cat>, Cat>;. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/compare.hpp:25:11: note: candidate found by name lookup is 'ranges'. namespace ranges. ^. /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/x86_64-el9/include/c++/13.1.0/experimental/string_view:689:13: note: candidate found by name lookup is 'std::ranges'. namespace ranges. ^. ```. ### What is the expected behaviour? I expect to be able to use the top level `ranges` namespace at the same time as `std::ranges`. ### How to reproduce? From lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/traits.hpp>. In file included from ROOT_prompt_0:1:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range/traits.hpp:24:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range_fwd.hpp:23:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/concepts/compare.hpp:35:39: error: reference to 'ranges' is ambiguous. concept compares_as = same_as<ranges::common_comparison_category_t<T, Cat>, Cat>;. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/compare.hpp:25:11: note: candidate found by name lookup is 'ranges'. namespace ranges. ^. /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/x86_64-el9/include/c++/13.1.0/experimental/string_view:689:13: note: c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13001
https://github.com/root-project/root/issues/13001:2373,usability,error,error,2373,"up is 'std::ranges'. namespace ranges. ^. ```. ### What is the expected behaviour? I expect to be able to use the top level `ranges` namespace at the same time as `std::ranges`. ### How to reproduce? From lxplus9.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/traits.hpp>. In file included from ROOT_prompt_0:1:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range/traits.hpp:24:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range_fwd.hpp:23:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/concepts/compare.hpp:35:39: error: reference to 'ranges' is ambiguous. concept compares_as = same_as<ranges::common_comparison_category_t<T, Cat>, Cat>;. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/compare.hpp:25:11: note: candidate found by name lookup is 'ranges'. namespace ranges. ^. /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/x86_64-el9/include/c++/13.1.0/experimental/string_view:689:13: note: candidate found by name lookup is 'std::ranges'. namespace ranges. ^. ```. ### ROOT version. v6-28-00-patches. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. I wanted to report this problem as a compelling use case that requires #11027",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13001
https://github.com/root-project/root/issues/13002:159,availability,error,errors,159,"root macOS libc++abi issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. When I tried to run TMVA test code with the follow errors. root [0] . Processing TMVA_Higgs_Classification.C... <FATAL> : Can't import __main__. ***> abort program execution. libc++abi: terminating due to uncaught exception of type std::runtime_error: FATAL error. macOS 13.4, M1, root 6.28.04, any solution? thanks. . ### What is the expected behaviour? run TMVA tutorial code on macOS M1 it reported an error about libc++abi exceptions. ### How to reproduce? root $ROOTSYS/tutorials/tmva/TMVA_Higgs_Classification.C . on macOS 13.4 M1 processor. ### ROOT version. 6.28.04. ### How did you install ROOT? download from root.cern.ch. ### Which operating system are you using? macOS 13.4. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13002
https://github.com/root-project/root/issues/13002:366,availability,error,error,366,"root macOS libc++abi issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. When I tried to run TMVA test code with the follow errors. root [0] . Processing TMVA_Higgs_Classification.C... <FATAL> : Can't import __main__. ***> abort program execution. libc++abi: terminating due to uncaught exception of type std::runtime_error: FATAL error. macOS 13.4, M1, root 6.28.04, any solution? thanks. . ### What is the expected behaviour? run TMVA tutorial code on macOS M1 it reported an error about libc++abi exceptions. ### How to reproduce? root $ROOTSYS/tutorials/tmva/TMVA_Higgs_Classification.C . on macOS 13.4 M1 processor. ### ROOT version. 6.28.04. ### How did you install ROOT? download from root.cern.ch. ### Which operating system are you using? macOS 13.4. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13002
https://github.com/root-project/root/issues/13002:513,availability,error,error,513,"root macOS libc++abi issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. When I tried to run TMVA test code with the follow errors. root [0] . Processing TMVA_Higgs_Classification.C... <FATAL> : Can't import __main__. ***> abort program execution. libc++abi: terminating due to uncaught exception of type std::runtime_error: FATAL error. macOS 13.4, M1, root 6.28.04, any solution? thanks. . ### What is the expected behaviour? run TMVA tutorial code on macOS M1 it reported an error about libc++abi exceptions. ### How to reproduce? root $ROOTSYS/tutorials/tmva/TMVA_Higgs_Classification.C . on macOS 13.4 M1 processor. ### ROOT version. 6.28.04. ### How did you install ROOT? download from root.cern.ch. ### Which operating system are you using? macOS 13.4. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13002
https://github.com/root-project/root/issues/13002:713,availability,down,download,713,"root macOS libc++abi issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. When I tried to run TMVA test code with the follow errors. root [0] . Processing TMVA_Higgs_Classification.C... <FATAL> : Can't import __main__. ***> abort program execution. libc++abi: terminating due to uncaught exception of type std::runtime_error: FATAL error. macOS 13.4, M1, root 6.28.04, any solution? thanks. . ### What is the expected behaviour? run TMVA tutorial code on macOS M1 it reported an error about libc++abi exceptions. ### How to reproduce? root $ROOTSYS/tutorials/tmva/TMVA_Higgs_Classification.C . on macOS 13.4 M1 processor. ### ROOT version. 6.28.04. ### How did you install ROOT? download from root.cern.ch. ### Which operating system are you using? macOS 13.4. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13002
https://github.com/root-project/root/issues/13002:751,availability,operat,operating,751,"root macOS libc++abi issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. When I tried to run TMVA test code with the follow errors. root [0] . Processing TMVA_Higgs_Classification.C... <FATAL> : Can't import __main__. ***> abort program execution. libc++abi: terminating due to uncaught exception of type std::runtime_error: FATAL error. macOS 13.4, M1, root 6.28.04, any solution? thanks. . ### What is the expected behaviour? run TMVA tutorial code on macOS M1 it reported an error about libc++abi exceptions. ### How to reproduce? root $ROOTSYS/tutorials/tmva/TMVA_Higgs_Classification.C . on macOS 13.4 M1 processor. ### ROOT version. 6.28.04. ### How did you install ROOT? download from root.cern.ch. ### Which operating system are you using? macOS 13.4. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13002
https://github.com/root-project/root/issues/13002:665,deployability,version,version,665,"root macOS libc++abi issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. When I tried to run TMVA test code with the follow errors. root [0] . Processing TMVA_Higgs_Classification.C... <FATAL> : Can't import __main__. ***> abort program execution. libc++abi: terminating due to uncaught exception of type std::runtime_error: FATAL error. macOS 13.4, M1, root 6.28.04, any solution? thanks. . ### What is the expected behaviour? run TMVA tutorial code on macOS M1 it reported an error about libc++abi exceptions. ### How to reproduce? root $ROOTSYS/tutorials/tmva/TMVA_Higgs_Classification.C . on macOS 13.4 M1 processor. ### ROOT version. 6.28.04. ### How did you install ROOT? download from root.cern.ch. ### Which operating system are you using? macOS 13.4. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13002
https://github.com/root-project/root/issues/13002:699,deployability,instal,install,699,"root macOS libc++abi issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. When I tried to run TMVA test code with the follow errors. root [0] . Processing TMVA_Higgs_Classification.C... <FATAL> : Can't import __main__. ***> abort program execution. libc++abi: terminating due to uncaught exception of type std::runtime_error: FATAL error. macOS 13.4, M1, root 6.28.04, any solution? thanks. . ### What is the expected behaviour? run TMVA tutorial code on macOS M1 it reported an error about libc++abi exceptions. ### How to reproduce? root $ROOTSYS/tutorials/tmva/TMVA_Higgs_Classification.C . on macOS 13.4 M1 processor. ### ROOT version. 6.28.04. ### How did you install ROOT? download from root.cern.ch. ### Which operating system are you using? macOS 13.4. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13002
https://github.com/root-project/root/issues/13002:665,integrability,version,version,665,"root macOS libc++abi issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. When I tried to run TMVA test code with the follow errors. root [0] . Processing TMVA_Higgs_Classification.C... <FATAL> : Can't import __main__. ***> abort program execution. libc++abi: terminating due to uncaught exception of type std::runtime_error: FATAL error. macOS 13.4, M1, root 6.28.04, any solution? thanks. . ### What is the expected behaviour? run TMVA tutorial code on macOS M1 it reported an error about libc++abi exceptions. ### How to reproduce? root $ROOTSYS/tutorials/tmva/TMVA_Higgs_Classification.C . on macOS 13.4 M1 processor. ### ROOT version. 6.28.04. ### How did you install ROOT? download from root.cern.ch. ### Which operating system are you using? macOS 13.4. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13002
https://github.com/root-project/root/issues/13002:665,modifiability,version,version,665,"root macOS libc++abi issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. When I tried to run TMVA test code with the follow errors. root [0] . Processing TMVA_Higgs_Classification.C... <FATAL> : Can't import __main__. ***> abort program execution. libc++abi: terminating due to uncaught exception of type std::runtime_error: FATAL error. macOS 13.4, M1, root 6.28.04, any solution? thanks. . ### What is the expected behaviour? run TMVA tutorial code on macOS M1 it reported an error about libc++abi exceptions. ### How to reproduce? root $ROOTSYS/tutorials/tmva/TMVA_Higgs_Classification.C . on macOS 13.4 M1 processor. ### ROOT version. 6.28.04. ### How did you install ROOT? download from root.cern.ch. ### Which operating system are you using? macOS 13.4. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13002
https://github.com/root-project/root/issues/13002:159,performance,error,errors,159,"root macOS libc++abi issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. When I tried to run TMVA test code with the follow errors. root [0] . Processing TMVA_Higgs_Classification.C... <FATAL> : Can't import __main__. ***> abort program execution. libc++abi: terminating due to uncaught exception of type std::runtime_error: FATAL error. macOS 13.4, M1, root 6.28.04, any solution? thanks. . ### What is the expected behaviour? run TMVA tutorial code on macOS M1 it reported an error about libc++abi exceptions. ### How to reproduce? root $ROOTSYS/tutorials/tmva/TMVA_Higgs_Classification.C . on macOS 13.4 M1 processor. ### ROOT version. 6.28.04. ### How did you install ROOT? download from root.cern.ch. ### Which operating system are you using? macOS 13.4. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13002
https://github.com/root-project/root/issues/13002:366,performance,error,error,366,"root macOS libc++abi issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. When I tried to run TMVA test code with the follow errors. root [0] . Processing TMVA_Higgs_Classification.C... <FATAL> : Can't import __main__. ***> abort program execution. libc++abi: terminating due to uncaught exception of type std::runtime_error: FATAL error. macOS 13.4, M1, root 6.28.04, any solution? thanks. . ### What is the expected behaviour? run TMVA tutorial code on macOS M1 it reported an error about libc++abi exceptions. ### How to reproduce? root $ROOTSYS/tutorials/tmva/TMVA_Higgs_Classification.C . on macOS 13.4 M1 processor. ### ROOT version. 6.28.04. ### How did you install ROOT? download from root.cern.ch. ### Which operating system are you using? macOS 13.4. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13002
https://github.com/root-project/root/issues/13002:513,performance,error,error,513,"root macOS libc++abi issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. When I tried to run TMVA test code with the follow errors. root [0] . Processing TMVA_Higgs_Classification.C... <FATAL> : Can't import __main__. ***> abort program execution. libc++abi: terminating due to uncaught exception of type std::runtime_error: FATAL error. macOS 13.4, M1, root 6.28.04, any solution? thanks. . ### What is the expected behaviour? run TMVA tutorial code on macOS M1 it reported an error about libc++abi exceptions. ### How to reproduce? root $ROOTSYS/tutorials/tmva/TMVA_Higgs_Classification.C . on macOS 13.4 M1 processor. ### ROOT version. 6.28.04. ### How did you install ROOT? download from root.cern.ch. ### Which operating system are you using? macOS 13.4. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13002
https://github.com/root-project/root/issues/13002:133,safety,test,test,133,"root macOS libc++abi issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. When I tried to run TMVA test code with the follow errors. root [0] . Processing TMVA_Higgs_Classification.C... <FATAL> : Can't import __main__. ***> abort program execution. libc++abi: terminating due to uncaught exception of type std::runtime_error: FATAL error. macOS 13.4, M1, root 6.28.04, any solution? thanks. . ### What is the expected behaviour? run TMVA tutorial code on macOS M1 it reported an error about libc++abi exceptions. ### How to reproduce? root $ROOTSYS/tutorials/tmva/TMVA_Higgs_Classification.C . on macOS 13.4 M1 processor. ### ROOT version. 6.28.04. ### How did you install ROOT? download from root.cern.ch. ### Which operating system are you using? macOS 13.4. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13002
https://github.com/root-project/root/issues/13002:159,safety,error,errors,159,"root macOS libc++abi issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. When I tried to run TMVA test code with the follow errors. root [0] . Processing TMVA_Higgs_Classification.C... <FATAL> : Can't import __main__. ***> abort program execution. libc++abi: terminating due to uncaught exception of type std::runtime_error: FATAL error. macOS 13.4, M1, root 6.28.04, any solution? thanks. . ### What is the expected behaviour? run TMVA tutorial code on macOS M1 it reported an error about libc++abi exceptions. ### How to reproduce? root $ROOTSYS/tutorials/tmva/TMVA_Higgs_Classification.C . on macOS 13.4 M1 processor. ### ROOT version. 6.28.04. ### How did you install ROOT? download from root.cern.ch. ### Which operating system are you using? macOS 13.4. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13002
https://github.com/root-project/root/issues/13002:322,safety,except,exception,322,"root macOS libc++abi issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. When I tried to run TMVA test code with the follow errors. root [0] . Processing TMVA_Higgs_Classification.C... <FATAL> : Can't import __main__. ***> abort program execution. libc++abi: terminating due to uncaught exception of type std::runtime_error: FATAL error. macOS 13.4, M1, root 6.28.04, any solution? thanks. . ### What is the expected behaviour? run TMVA tutorial code on macOS M1 it reported an error about libc++abi exceptions. ### How to reproduce? root $ROOTSYS/tutorials/tmva/TMVA_Higgs_Classification.C . on macOS 13.4 M1 processor. ### ROOT version. 6.28.04. ### How did you install ROOT? download from root.cern.ch. ### Which operating system are you using? macOS 13.4. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13002
https://github.com/root-project/root/issues/13002:366,safety,error,error,366,"root macOS libc++abi issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. When I tried to run TMVA test code with the follow errors. root [0] . Processing TMVA_Higgs_Classification.C... <FATAL> : Can't import __main__. ***> abort program execution. libc++abi: terminating due to uncaught exception of type std::runtime_error: FATAL error. macOS 13.4, M1, root 6.28.04, any solution? thanks. . ### What is the expected behaviour? run TMVA tutorial code on macOS M1 it reported an error about libc++abi exceptions. ### How to reproduce? root $ROOTSYS/tutorials/tmva/TMVA_Higgs_Classification.C . on macOS 13.4 M1 processor. ### ROOT version. 6.28.04. ### How did you install ROOT? download from root.cern.ch. ### Which operating system are you using? macOS 13.4. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13002
https://github.com/root-project/root/issues/13002:513,safety,error,error,513,"root macOS libc++abi issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. When I tried to run TMVA test code with the follow errors. root [0] . Processing TMVA_Higgs_Classification.C... <FATAL> : Can't import __main__. ***> abort program execution. libc++abi: terminating due to uncaught exception of type std::runtime_error: FATAL error. macOS 13.4, M1, root 6.28.04, any solution? thanks. . ### What is the expected behaviour? run TMVA tutorial code on macOS M1 it reported an error about libc++abi exceptions. ### How to reproduce? root $ROOTSYS/tutorials/tmva/TMVA_Higgs_Classification.C . on macOS 13.4 M1 processor. ### ROOT version. 6.28.04. ### How did you install ROOT? download from root.cern.ch. ### Which operating system are you using? macOS 13.4. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13002
https://github.com/root-project/root/issues/13002:535,safety,except,exceptions,535,"root macOS libc++abi issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. When I tried to run TMVA test code with the follow errors. root [0] . Processing TMVA_Higgs_Classification.C... <FATAL> : Can't import __main__. ***> abort program execution. libc++abi: terminating due to uncaught exception of type std::runtime_error: FATAL error. macOS 13.4, M1, root 6.28.04, any solution? thanks. . ### What is the expected behaviour? run TMVA tutorial code on macOS M1 it reported an error about libc++abi exceptions. ### How to reproduce? root $ROOTSYS/tutorials/tmva/TMVA_Higgs_Classification.C . on macOS 13.4 M1 processor. ### ROOT version. 6.28.04. ### How did you install ROOT? download from root.cern.ch. ### Which operating system are you using? macOS 13.4. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13002
https://github.com/root-project/root/issues/13002:133,testability,test,test,133,"root macOS libc++abi issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. When I tried to run TMVA test code with the follow errors. root [0] . Processing TMVA_Higgs_Classification.C... <FATAL> : Can't import __main__. ***> abort program execution. libc++abi: terminating due to uncaught exception of type std::runtime_error: FATAL error. macOS 13.4, M1, root 6.28.04, any solution? thanks. . ### What is the expected behaviour? run TMVA tutorial code on macOS M1 it reported an error about libc++abi exceptions. ### How to reproduce? root $ROOTSYS/tutorials/tmva/TMVA_Higgs_Classification.C . on macOS 13.4 M1 processor. ### ROOT version. 6.28.04. ### How did you install ROOT? download from root.cern.ch. ### Which operating system are you using? macOS 13.4. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13002
https://github.com/root-project/root/issues/13002:810,testability,context,context,810,"root macOS libc++abi issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. When I tried to run TMVA test code with the follow errors. root [0] . Processing TMVA_Higgs_Classification.C... <FATAL> : Can't import __main__. ***> abort program execution. libc++abi: terminating due to uncaught exception of type std::runtime_error: FATAL error. macOS 13.4, M1, root 6.28.04, any solution? thanks. . ### What is the expected behaviour? run TMVA tutorial code on macOS M1 it reported an error about libc++abi exceptions. ### How to reproduce? root $ROOTSYS/tutorials/tmva/TMVA_Higgs_Classification.C . on macOS 13.4 M1 processor. ### ROOT version. 6.28.04. ### How did you install ROOT? download from root.cern.ch. ### Which operating system are you using? macOS 13.4. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13002
https://github.com/root-project/root/issues/13002:159,usability,error,errors,159,"root macOS libc++abi issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. When I tried to run TMVA test code with the follow errors. root [0] . Processing TMVA_Higgs_Classification.C... <FATAL> : Can't import __main__. ***> abort program execution. libc++abi: terminating due to uncaught exception of type std::runtime_error: FATAL error. macOS 13.4, M1, root 6.28.04, any solution? thanks. . ### What is the expected behaviour? run TMVA tutorial code on macOS M1 it reported an error about libc++abi exceptions. ### How to reproduce? root $ROOTSYS/tutorials/tmva/TMVA_Higgs_Classification.C . on macOS 13.4 M1 processor. ### ROOT version. 6.28.04. ### How did you install ROOT? download from root.cern.ch. ### Which operating system are you using? macOS 13.4. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13002
https://github.com/root-project/root/issues/13002:366,usability,error,error,366,"root macOS libc++abi issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. When I tried to run TMVA test code with the follow errors. root [0] . Processing TMVA_Higgs_Classification.C... <FATAL> : Can't import __main__. ***> abort program execution. libc++abi: terminating due to uncaught exception of type std::runtime_error: FATAL error. macOS 13.4, M1, root 6.28.04, any solution? thanks. . ### What is the expected behaviour? run TMVA tutorial code on macOS M1 it reported an error about libc++abi exceptions. ### How to reproduce? root $ROOTSYS/tutorials/tmva/TMVA_Higgs_Classification.C . on macOS 13.4 M1 processor. ### ROOT version. 6.28.04. ### How did you install ROOT? download from root.cern.ch. ### Which operating system are you using? macOS 13.4. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13002
https://github.com/root-project/root/issues/13002:452,usability,behavi,behaviour,452,"root macOS libc++abi issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. When I tried to run TMVA test code with the follow errors. root [0] . Processing TMVA_Higgs_Classification.C... <FATAL> : Can't import __main__. ***> abort program execution. libc++abi: terminating due to uncaught exception of type std::runtime_error: FATAL error. macOS 13.4, M1, root 6.28.04, any solution? thanks. . ### What is the expected behaviour? run TMVA tutorial code on macOS M1 it reported an error about libc++abi exceptions. ### How to reproduce? root $ROOTSYS/tutorials/tmva/TMVA_Higgs_Classification.C . on macOS 13.4 M1 processor. ### ROOT version. 6.28.04. ### How did you install ROOT? download from root.cern.ch. ### Which operating system are you using? macOS 13.4. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13002
https://github.com/root-project/root/issues/13002:513,usability,error,error,513,"root macOS libc++abi issue; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. When I tried to run TMVA test code with the follow errors. root [0] . Processing TMVA_Higgs_Classification.C... <FATAL> : Can't import __main__. ***> abort program execution. libc++abi: terminating due to uncaught exception of type std::runtime_error: FATAL error. macOS 13.4, M1, root 6.28.04, any solution? thanks. . ### What is the expected behaviour? run TMVA tutorial code on macOS M1 it reported an error about libc++abi exceptions. ### How to reproduce? root $ROOTSYS/tutorials/tmva/TMVA_Higgs_Classification.C . on macOS 13.4 M1 processor. ### ROOT version. 6.28.04. ### How did you install ROOT? download from root.cern.ch. ### Which operating system are you using? macOS 13.4. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13002
https://github.com/root-project/root/pull/13003:210,deployability,patch,patch,210,"[cmake] Allow bringing up-to-date an existing roottest repository; As a follow-up from PR #12975, this pull request enables fetching up-to-date content for the given branch of a related repository. Before this patch, a related repository (roottest, etc.), was cloned if not found. It is, however, useful to be able to also checkout an up-to-date branch in an existing repository, e.g. for the new CI. This behavior is controlled by defining the `xxx_force_checkout=ON` CMake variable. Therefore, this PR also adds `roottest_force_checkout=ON` for the new CI. For rootbench, the upstream `master` branch is fetched in any case, but for the sake of code reuse this PR also allows the local clone to be _optionally_ updated. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13003
https://github.com/root-project/root/pull/13003:713,deployability,updat,updated,713,"[cmake] Allow bringing up-to-date an existing roottest repository; As a follow-up from PR #12975, this pull request enables fetching up-to-date content for the given branch of a related repository. Before this patch, a related repository (roottest, etc.), was cloned if not found. It is, however, useful to be able to also checkout an up-to-date branch in an existing repository, e.g. for the new CI. This behavior is controlled by defining the `xxx_force_checkout=ON` CMake variable. Therefore, this PR also adds `roottest_force_checkout=ON` for the new CI. For rootbench, the upstream `master` branch is fetched in any case, but for the sake of code reuse this PR also allows the local clone to be _optionally_ updated. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13003
https://github.com/root-project/root/pull/13003:773,deployability,updat,updated,773,"[cmake] Allow bringing up-to-date an existing roottest repository; As a follow-up from PR #12975, this pull request enables fetching up-to-date content for the given branch of a related repository. Before this patch, a related repository (roottest, etc.), was cloned if not found. It is, however, useful to be able to also checkout an up-to-date branch in an existing repository, e.g. for the new CI. This behavior is controlled by defining the `xxx_force_checkout=ON` CMake variable. Therefore, this PR also adds `roottest_force_checkout=ON` for the new CI. For rootbench, the upstream `master` branch is fetched in any case, but for the sake of code reuse this PR also allows the local clone to be _optionally_ updated. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13003
https://github.com/root-project/root/pull/13003:55,integrability,repositor,repository,55,"[cmake] Allow bringing up-to-date an existing roottest repository; As a follow-up from PR #12975, this pull request enables fetching up-to-date content for the given branch of a related repository. Before this patch, a related repository (roottest, etc.), was cloned if not found. It is, however, useful to be able to also checkout an up-to-date branch in an existing repository, e.g. for the new CI. This behavior is controlled by defining the `xxx_force_checkout=ON` CMake variable. Therefore, this PR also adds `roottest_force_checkout=ON` for the new CI. For rootbench, the upstream `master` branch is fetched in any case, but for the sake of code reuse this PR also allows the local clone to be _optionally_ updated. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13003
https://github.com/root-project/root/pull/13003:186,integrability,repositor,repository,186,"[cmake] Allow bringing up-to-date an existing roottest repository; As a follow-up from PR #12975, this pull request enables fetching up-to-date content for the given branch of a related repository. Before this patch, a related repository (roottest, etc.), was cloned if not found. It is, however, useful to be able to also checkout an up-to-date branch in an existing repository, e.g. for the new CI. This behavior is controlled by defining the `xxx_force_checkout=ON` CMake variable. Therefore, this PR also adds `roottest_force_checkout=ON` for the new CI. For rootbench, the upstream `master` branch is fetched in any case, but for the sake of code reuse this PR also allows the local clone to be _optionally_ updated. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13003
https://github.com/root-project/root/pull/13003:227,integrability,repositor,repository,227,"[cmake] Allow bringing up-to-date an existing roottest repository; As a follow-up from PR #12975, this pull request enables fetching up-to-date content for the given branch of a related repository. Before this patch, a related repository (roottest, etc.), was cloned if not found. It is, however, useful to be able to also checkout an up-to-date branch in an existing repository, e.g. for the new CI. This behavior is controlled by defining the `xxx_force_checkout=ON` CMake variable. Therefore, this PR also adds `roottest_force_checkout=ON` for the new CI. For rootbench, the upstream `master` branch is fetched in any case, but for the sake of code reuse this PR also allows the local clone to be _optionally_ updated. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13003
https://github.com/root-project/root/pull/13003:368,integrability,repositor,repository,368,"[cmake] Allow bringing up-to-date an existing roottest repository; As a follow-up from PR #12975, this pull request enables fetching up-to-date content for the given branch of a related repository. Before this patch, a related repository (roottest, etc.), was cloned if not found. It is, however, useful to be able to also checkout an up-to-date branch in an existing repository, e.g. for the new CI. This behavior is controlled by defining the `xxx_force_checkout=ON` CMake variable. Therefore, this PR also adds `roottest_force_checkout=ON` for the new CI. For rootbench, the upstream `master` branch is fetched in any case, but for the sake of code reuse this PR also allows the local clone to be _optionally_ updated. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13003
https://github.com/root-project/root/pull/13003:55,interoperability,repositor,repository,55,"[cmake] Allow bringing up-to-date an existing roottest repository; As a follow-up from PR #12975, this pull request enables fetching up-to-date content for the given branch of a related repository. Before this patch, a related repository (roottest, etc.), was cloned if not found. It is, however, useful to be able to also checkout an up-to-date branch in an existing repository, e.g. for the new CI. This behavior is controlled by defining the `xxx_force_checkout=ON` CMake variable. Therefore, this PR also adds `roottest_force_checkout=ON` for the new CI. For rootbench, the upstream `master` branch is fetched in any case, but for the sake of code reuse this PR also allows the local clone to be _optionally_ updated. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13003
https://github.com/root-project/root/pull/13003:186,interoperability,repositor,repository,186,"[cmake] Allow bringing up-to-date an existing roottest repository; As a follow-up from PR #12975, this pull request enables fetching up-to-date content for the given branch of a related repository. Before this patch, a related repository (roottest, etc.), was cloned if not found. It is, however, useful to be able to also checkout an up-to-date branch in an existing repository, e.g. for the new CI. This behavior is controlled by defining the `xxx_force_checkout=ON` CMake variable. Therefore, this PR also adds `roottest_force_checkout=ON` for the new CI. For rootbench, the upstream `master` branch is fetched in any case, but for the sake of code reuse this PR also allows the local clone to be _optionally_ updated. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13003
https://github.com/root-project/root/pull/13003:227,interoperability,repositor,repository,227,"[cmake] Allow bringing up-to-date an existing roottest repository; As a follow-up from PR #12975, this pull request enables fetching up-to-date content for the given branch of a related repository. Before this patch, a related repository (roottest, etc.), was cloned if not found. It is, however, useful to be able to also checkout an up-to-date branch in an existing repository, e.g. for the new CI. This behavior is controlled by defining the `xxx_force_checkout=ON` CMake variable. Therefore, this PR also adds `roottest_force_checkout=ON` for the new CI. For rootbench, the upstream `master` branch is fetched in any case, but for the sake of code reuse this PR also allows the local clone to be _optionally_ updated. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13003
https://github.com/root-project/root/pull/13003:368,interoperability,repositor,repository,368,"[cmake] Allow bringing up-to-date an existing roottest repository; As a follow-up from PR #12975, this pull request enables fetching up-to-date content for the given branch of a related repository. Before this patch, a related repository (roottest, etc.), was cloned if not found. It is, however, useful to be able to also checkout an up-to-date branch in an existing repository, e.g. for the new CI. This behavior is controlled by defining the `xxx_force_checkout=ON` CMake variable. Therefore, this PR also adds `roottest_force_checkout=ON` for the new CI. For rootbench, the upstream `master` branch is fetched in any case, but for the sake of code reuse this PR also allows the local clone to be _optionally_ updated. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13003
https://github.com/root-project/root/pull/13003:475,modifiability,variab,variable,475,"[cmake] Allow bringing up-to-date an existing roottest repository; As a follow-up from PR #12975, this pull request enables fetching up-to-date content for the given branch of a related repository. Before this patch, a related repository (roottest, etc.), was cloned if not found. It is, however, useful to be able to also checkout an up-to-date branch in an existing repository, e.g. for the new CI. This behavior is controlled by defining the `xxx_force_checkout=ON` CMake variable. Therefore, this PR also adds `roottest_force_checkout=ON` for the new CI. For rootbench, the upstream `master` branch is fetched in any case, but for the sake of code reuse this PR also allows the local clone to be _optionally_ updated. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13003
https://github.com/root-project/root/pull/13003:652,modifiability,reu,reuse,652,"[cmake] Allow bringing up-to-date an existing roottest repository; As a follow-up from PR #12975, this pull request enables fetching up-to-date content for the given branch of a related repository. Before this patch, a related repository (roottest, etc.), was cloned if not found. It is, however, useful to be able to also checkout an up-to-date branch in an existing repository, e.g. for the new CI. This behavior is controlled by defining the `xxx_force_checkout=ON` CMake variable. Therefore, this PR also adds `roottest_force_checkout=ON` for the new CI. For rootbench, the upstream `master` branch is fetched in any case, but for the sake of code reuse this PR also allows the local clone to be _optionally_ updated. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13003
https://github.com/root-project/root/pull/13003:144,performance,content,content,144,"[cmake] Allow bringing up-to-date an existing roottest repository; As a follow-up from PR #12975, this pull request enables fetching up-to-date content for the given branch of a related repository. Before this patch, a related repository (roottest, etc.), was cloned if not found. It is, however, useful to be able to also checkout an up-to-date branch in an existing repository, e.g. for the new CI. This behavior is controlled by defining the `xxx_force_checkout=ON` CMake variable. Therefore, this PR also adds `roottest_force_checkout=ON` for the new CI. For rootbench, the upstream `master` branch is fetched in any case, but for the sake of code reuse this PR also allows the local clone to be _optionally_ updated. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13003
https://github.com/root-project/root/pull/13003:210,safety,patch,patch,210,"[cmake] Allow bringing up-to-date an existing roottest repository; As a follow-up from PR #12975, this pull request enables fetching up-to-date content for the given branch of a related repository. Before this patch, a related repository (roottest, etc.), was cloned if not found. It is, however, useful to be able to also checkout an up-to-date branch in an existing repository, e.g. for the new CI. This behavior is controlled by defining the `xxx_force_checkout=ON` CMake variable. Therefore, this PR also adds `roottest_force_checkout=ON` for the new CI. For rootbench, the upstream `master` branch is fetched in any case, but for the sake of code reuse this PR also allows the local clone to be _optionally_ updated. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13003
https://github.com/root-project/root/pull/13003:713,safety,updat,updated,713,"[cmake] Allow bringing up-to-date an existing roottest repository; As a follow-up from PR #12975, this pull request enables fetching up-to-date content for the given branch of a related repository. Before this patch, a related repository (roottest, etc.), was cloned if not found. It is, however, useful to be able to also checkout an up-to-date branch in an existing repository, e.g. for the new CI. This behavior is controlled by defining the `xxx_force_checkout=ON` CMake variable. Therefore, this PR also adds `roottest_force_checkout=ON` for the new CI. For rootbench, the upstream `master` branch is fetched in any case, but for the sake of code reuse this PR also allows the local clone to be _optionally_ updated. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13003
https://github.com/root-project/root/pull/13003:743,safety,test,tested,743,"[cmake] Allow bringing up-to-date an existing roottest repository; As a follow-up from PR #12975, this pull request enables fetching up-to-date content for the given branch of a related repository. Before this patch, a related repository (roottest, etc.), was cloned if not found. It is, however, useful to be able to also checkout an up-to-date branch in an existing repository, e.g. for the new CI. This behavior is controlled by defining the `xxx_force_checkout=ON` CMake variable. Therefore, this PR also adds `roottest_force_checkout=ON` for the new CI. For rootbench, the upstream `master` branch is fetched in any case, but for the sake of code reuse this PR also allows the local clone to be _optionally_ updated. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13003
https://github.com/root-project/root/pull/13003:773,safety,updat,updated,773,"[cmake] Allow bringing up-to-date an existing roottest repository; As a follow-up from PR #12975, this pull request enables fetching up-to-date content for the given branch of a related repository. Before this patch, a related repository (roottest, etc.), was cloned if not found. It is, however, useful to be able to also checkout an up-to-date branch in an existing repository, e.g. for the new CI. This behavior is controlled by defining the `xxx_force_checkout=ON` CMake variable. Therefore, this PR also adds `roottest_force_checkout=ON` for the new CI. For rootbench, the upstream `master` branch is fetched in any case, but for the sake of code reuse this PR also allows the local clone to be _optionally_ updated. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13003
https://github.com/root-project/root/pull/13003:210,security,patch,patch,210,"[cmake] Allow bringing up-to-date an existing roottest repository; As a follow-up from PR #12975, this pull request enables fetching up-to-date content for the given branch of a related repository. Before this patch, a related repository (roottest, etc.), was cloned if not found. It is, however, useful to be able to also checkout an up-to-date branch in an existing repository, e.g. for the new CI. This behavior is controlled by defining the `xxx_force_checkout=ON` CMake variable. Therefore, this PR also adds `roottest_force_checkout=ON` for the new CI. For rootbench, the upstream `master` branch is fetched in any case, but for the sake of code reuse this PR also allows the local clone to be _optionally_ updated. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13003
https://github.com/root-project/root/pull/13003:418,security,control,controlled,418,"[cmake] Allow bringing up-to-date an existing roottest repository; As a follow-up from PR #12975, this pull request enables fetching up-to-date content for the given branch of a related repository. Before this patch, a related repository (roottest, etc.), was cloned if not found. It is, however, useful to be able to also checkout an up-to-date branch in an existing repository, e.g. for the new CI. This behavior is controlled by defining the `xxx_force_checkout=ON` CMake variable. Therefore, this PR also adds `roottest_force_checkout=ON` for the new CI. For rootbench, the upstream `master` branch is fetched in any case, but for the sake of code reuse this PR also allows the local clone to be _optionally_ updated. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13003
https://github.com/root-project/root/pull/13003:713,security,updat,updated,713,"[cmake] Allow bringing up-to-date an existing roottest repository; As a follow-up from PR #12975, this pull request enables fetching up-to-date content for the given branch of a related repository. Before this patch, a related repository (roottest, etc.), was cloned if not found. It is, however, useful to be able to also checkout an up-to-date branch in an existing repository, e.g. for the new CI. This behavior is controlled by defining the `xxx_force_checkout=ON` CMake variable. Therefore, this PR also adds `roottest_force_checkout=ON` for the new CI. For rootbench, the upstream `master` branch is fetched in any case, but for the sake of code reuse this PR also allows the local clone to be _optionally_ updated. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13003
https://github.com/root-project/root/pull/13003:773,security,updat,updated,773,"[cmake] Allow bringing up-to-date an existing roottest repository; As a follow-up from PR #12975, this pull request enables fetching up-to-date content for the given branch of a related repository. Before this patch, a related repository (roottest, etc.), was cloned if not found. It is, however, useful to be able to also checkout an up-to-date branch in an existing repository, e.g. for the new CI. This behavior is controlled by defining the `xxx_force_checkout=ON` CMake variable. Therefore, this PR also adds `roottest_force_checkout=ON` for the new CI. For rootbench, the upstream `master` branch is fetched in any case, but for the sake of code reuse this PR also allows the local clone to be _optionally_ updated. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13003
https://github.com/root-project/root/pull/13003:418,testability,control,controlled,418,"[cmake] Allow bringing up-to-date an existing roottest repository; As a follow-up from PR #12975, this pull request enables fetching up-to-date content for the given branch of a related repository. Before this patch, a related repository (roottest, etc.), was cloned if not found. It is, however, useful to be able to also checkout an up-to-date branch in an existing repository, e.g. for the new CI. This behavior is controlled by defining the `xxx_force_checkout=ON` CMake variable. Therefore, this PR also adds `roottest_force_checkout=ON` for the new CI. For rootbench, the upstream `master` branch is fetched in any case, but for the sake of code reuse this PR also allows the local clone to be _optionally_ updated. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13003
https://github.com/root-project/root/pull/13003:743,testability,test,tested,743,"[cmake] Allow bringing up-to-date an existing roottest repository; As a follow-up from PR #12975, this pull request enables fetching up-to-date content for the given branch of a related repository. Before this patch, a related repository (roottest, etc.), was cloned if not found. It is, however, useful to be able to also checkout an up-to-date branch in an existing repository, e.g. for the new CI. This behavior is controlled by defining the `xxx_force_checkout=ON` CMake variable. Therefore, this PR also adds `roottest_force_checkout=ON` for the new CI. For rootbench, the upstream `master` branch is fetched in any case, but for the sake of code reuse this PR also allows the local clone to be _optionally_ updated. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13003
https://github.com/root-project/root/pull/13003:406,usability,behavi,behavior,406,"[cmake] Allow bringing up-to-date an existing roottest repository; As a follow-up from PR #12975, this pull request enables fetching up-to-date content for the given branch of a related repository. Before this patch, a related repository (roottest, etc.), was cloned if not found. It is, however, useful to be able to also checkout an up-to-date branch in an existing repository, e.g. for the new CI. This behavior is controlled by defining the `xxx_force_checkout=ON` CMake variable. Therefore, this PR also adds `roottest_force_checkout=ON` for the new CI. For rootbench, the upstream `master` branch is fetched in any case, but for the sake of code reuse this PR also allows the local clone to be _optionally_ updated. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13003
https://github.com/root-project/root/issues/13005:892,availability,operat,operating,892,"Ambiguous default parameter in TF2::Integral documentation; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We see the following in [the documentation of `TF2::Integral(...)` for the `master` branch](https://root.cern.ch/doc/master/classTF2.html#aa1eaa5844fa258becc6286d9f7b01309):. <img width=""632"" alt=""2023-06-13 15_43_20-ROOT_ TF2 Class Reference - Opera"" src=""https://github.com/root-project/root/assets/7541582/61fbc841-8a0d-4942-b15e-bf13cbd1a1a5"">. `epsrel` is first mentioned to equal 1.e-6, and then it says that the ""default value of eps is 1.e-9"". So which one is it? ### What is the expected behaviour? The default value of `epsrel` should be the same. ### How to reproduce? Just click the link in the issue description. ### ROOT version. 6.14, master. ### How did you install ROOT? does not matter, the issue is with the documentation. ### Which operating system are you using? does not matter, the issue is with the documentation. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13005
https://github.com/root-project/root/issues/13005:36,deployability,Integr,Integral,36,"Ambiguous default parameter in TF2::Integral documentation; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We see the following in [the documentation of `TF2::Integral(...)` for the `master` branch](https://root.cern.ch/doc/master/classTF2.html#aa1eaa5844fa258becc6286d9f7b01309):. <img width=""632"" alt=""2023-06-13 15_43_20-ROOT_ TF2 Class Reference - Opera"" src=""https://github.com/root-project/root/assets/7541582/61fbc841-8a0d-4942-b15e-bf13cbd1a1a5"">. `epsrel` is first mentioned to equal 1.e-6, and then it says that the ""default value of eps is 1.e-9"". So which one is it? ### What is the expected behaviour? The default value of `epsrel` should be the same. ### How to reproduce? Just click the link in the issue description. ### ROOT version. 6.14, master. ### How did you install ROOT? does not matter, the issue is with the documentation. ### Which operating system are you using? does not matter, the issue is with the documentation. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13005
https://github.com/root-project/root/issues/13005:192,deployability,Integr,Integral,192,"Ambiguous default parameter in TF2::Integral documentation; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We see the following in [the documentation of `TF2::Integral(...)` for the `master` branch](https://root.cern.ch/doc/master/classTF2.html#aa1eaa5844fa258becc6286d9f7b01309):. <img width=""632"" alt=""2023-06-13 15_43_20-ROOT_ TF2 Class Reference - Opera"" src=""https://github.com/root-project/root/assets/7541582/61fbc841-8a0d-4942-b15e-bf13cbd1a1a5"">. `epsrel` is first mentioned to equal 1.e-6, and then it says that the ""default value of eps is 1.e-9"". So which one is it? ### What is the expected behaviour? The default value of `epsrel` should be the same. ### How to reproduce? Just click the link in the issue description. ### ROOT version. 6.14, master. ### How did you install ROOT? does not matter, the issue is with the documentation. ### Which operating system are you using? does not matter, the issue is with the documentation. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13005
https://github.com/root-project/root/issues/13005:775,deployability,version,version,775,"Ambiguous default parameter in TF2::Integral documentation; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We see the following in [the documentation of `TF2::Integral(...)` for the `master` branch](https://root.cern.ch/doc/master/classTF2.html#aa1eaa5844fa258becc6286d9f7b01309):. <img width=""632"" alt=""2023-06-13 15_43_20-ROOT_ TF2 Class Reference - Opera"" src=""https://github.com/root-project/root/assets/7541582/61fbc841-8a0d-4942-b15e-bf13cbd1a1a5"">. `epsrel` is first mentioned to equal 1.e-6, and then it says that the ""default value of eps is 1.e-9"". So which one is it? ### What is the expected behaviour? The default value of `epsrel` should be the same. ### How to reproduce? Just click the link in the issue description. ### ROOT version. 6.14, master. ### How did you install ROOT? does not matter, the issue is with the documentation. ### Which operating system are you using? does not matter, the issue is with the documentation. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13005
https://github.com/root-project/root/issues/13005:814,deployability,instal,install,814,"Ambiguous default parameter in TF2::Integral documentation; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We see the following in [the documentation of `TF2::Integral(...)` for the `master` branch](https://root.cern.ch/doc/master/classTF2.html#aa1eaa5844fa258becc6286d9f7b01309):. <img width=""632"" alt=""2023-06-13 15_43_20-ROOT_ TF2 Class Reference - Opera"" src=""https://github.com/root-project/root/assets/7541582/61fbc841-8a0d-4942-b15e-bf13cbd1a1a5"">. `epsrel` is first mentioned to equal 1.e-6, and then it says that the ""default value of eps is 1.e-9"". So which one is it? ### What is the expected behaviour? The default value of `epsrel` should be the same. ### How to reproduce? Just click the link in the issue description. ### ROOT version. 6.14, master. ### How did you install ROOT? does not matter, the issue is with the documentation. ### Which operating system are you using? does not matter, the issue is with the documentation. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13005
https://github.com/root-project/root/issues/13005:36,integrability,Integr,Integral,36,"Ambiguous default parameter in TF2::Integral documentation; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We see the following in [the documentation of `TF2::Integral(...)` for the `master` branch](https://root.cern.ch/doc/master/classTF2.html#aa1eaa5844fa258becc6286d9f7b01309):. <img width=""632"" alt=""2023-06-13 15_43_20-ROOT_ TF2 Class Reference - Opera"" src=""https://github.com/root-project/root/assets/7541582/61fbc841-8a0d-4942-b15e-bf13cbd1a1a5"">. `epsrel` is first mentioned to equal 1.e-6, and then it says that the ""default value of eps is 1.e-9"". So which one is it? ### What is the expected behaviour? The default value of `epsrel` should be the same. ### How to reproduce? Just click the link in the issue description. ### ROOT version. 6.14, master. ### How did you install ROOT? does not matter, the issue is with the documentation. ### Which operating system are you using? does not matter, the issue is with the documentation. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13005
https://github.com/root-project/root/issues/13005:192,integrability,Integr,Integral,192,"Ambiguous default parameter in TF2::Integral documentation; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We see the following in [the documentation of `TF2::Integral(...)` for the `master` branch](https://root.cern.ch/doc/master/classTF2.html#aa1eaa5844fa258becc6286d9f7b01309):. <img width=""632"" alt=""2023-06-13 15_43_20-ROOT_ TF2 Class Reference - Opera"" src=""https://github.com/root-project/root/assets/7541582/61fbc841-8a0d-4942-b15e-bf13cbd1a1a5"">. `epsrel` is first mentioned to equal 1.e-6, and then it says that the ""default value of eps is 1.e-9"". So which one is it? ### What is the expected behaviour? The default value of `epsrel` should be the same. ### How to reproduce? Just click the link in the issue description. ### ROOT version. 6.14, master. ### How did you install ROOT? does not matter, the issue is with the documentation. ### Which operating system are you using? does not matter, the issue is with the documentation. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13005
https://github.com/root-project/root/issues/13005:775,integrability,version,version,775,"Ambiguous default parameter in TF2::Integral documentation; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We see the following in [the documentation of `TF2::Integral(...)` for the `master` branch](https://root.cern.ch/doc/master/classTF2.html#aa1eaa5844fa258becc6286d9f7b01309):. <img width=""632"" alt=""2023-06-13 15_43_20-ROOT_ TF2 Class Reference - Opera"" src=""https://github.com/root-project/root/assets/7541582/61fbc841-8a0d-4942-b15e-bf13cbd1a1a5"">. `epsrel` is first mentioned to equal 1.e-6, and then it says that the ""default value of eps is 1.e-9"". So which one is it? ### What is the expected behaviour? The default value of `epsrel` should be the same. ### How to reproduce? Just click the link in the issue description. ### ROOT version. 6.14, master. ### How did you install ROOT? does not matter, the issue is with the documentation. ### Which operating system are you using? does not matter, the issue is with the documentation. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13005
https://github.com/root-project/root/issues/13005:36,interoperability,Integr,Integral,36,"Ambiguous default parameter in TF2::Integral documentation; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We see the following in [the documentation of `TF2::Integral(...)` for the `master` branch](https://root.cern.ch/doc/master/classTF2.html#aa1eaa5844fa258becc6286d9f7b01309):. <img width=""632"" alt=""2023-06-13 15_43_20-ROOT_ TF2 Class Reference - Opera"" src=""https://github.com/root-project/root/assets/7541582/61fbc841-8a0d-4942-b15e-bf13cbd1a1a5"">. `epsrel` is first mentioned to equal 1.e-6, and then it says that the ""default value of eps is 1.e-9"". So which one is it? ### What is the expected behaviour? The default value of `epsrel` should be the same. ### How to reproduce? Just click the link in the issue description. ### ROOT version. 6.14, master. ### How did you install ROOT? does not matter, the issue is with the documentation. ### Which operating system are you using? does not matter, the issue is with the documentation. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13005
https://github.com/root-project/root/issues/13005:192,interoperability,Integr,Integral,192,"Ambiguous default parameter in TF2::Integral documentation; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We see the following in [the documentation of `TF2::Integral(...)` for the `master` branch](https://root.cern.ch/doc/master/classTF2.html#aa1eaa5844fa258becc6286d9f7b01309):. <img width=""632"" alt=""2023-06-13 15_43_20-ROOT_ TF2 Class Reference - Opera"" src=""https://github.com/root-project/root/assets/7541582/61fbc841-8a0d-4942-b15e-bf13cbd1a1a5"">. `epsrel` is first mentioned to equal 1.e-6, and then it says that the ""default value of eps is 1.e-9"". So which one is it? ### What is the expected behaviour? The default value of `epsrel` should be the same. ### How to reproduce? Just click the link in the issue description. ### ROOT version. 6.14, master. ### How did you install ROOT? does not matter, the issue is with the documentation. ### Which operating system are you using? does not matter, the issue is with the documentation. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13005
https://github.com/root-project/root/issues/13005:18,modifiability,paramet,parameter,18,"Ambiguous default parameter in TF2::Integral documentation; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We see the following in [the documentation of `TF2::Integral(...)` for the `master` branch](https://root.cern.ch/doc/master/classTF2.html#aa1eaa5844fa258becc6286d9f7b01309):. <img width=""632"" alt=""2023-06-13 15_43_20-ROOT_ TF2 Class Reference - Opera"" src=""https://github.com/root-project/root/assets/7541582/61fbc841-8a0d-4942-b15e-bf13cbd1a1a5"">. `epsrel` is first mentioned to equal 1.e-6, and then it says that the ""default value of eps is 1.e-9"". So which one is it? ### What is the expected behaviour? The default value of `epsrel` should be the same. ### How to reproduce? Just click the link in the issue description. ### ROOT version. 6.14, master. ### How did you install ROOT? does not matter, the issue is with the documentation. ### Which operating system are you using? does not matter, the issue is with the documentation. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13005
https://github.com/root-project/root/issues/13005:36,modifiability,Integr,Integral,36,"Ambiguous default parameter in TF2::Integral documentation; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We see the following in [the documentation of `TF2::Integral(...)` for the `master` branch](https://root.cern.ch/doc/master/classTF2.html#aa1eaa5844fa258becc6286d9f7b01309):. <img width=""632"" alt=""2023-06-13 15_43_20-ROOT_ TF2 Class Reference - Opera"" src=""https://github.com/root-project/root/assets/7541582/61fbc841-8a0d-4942-b15e-bf13cbd1a1a5"">. `epsrel` is first mentioned to equal 1.e-6, and then it says that the ""default value of eps is 1.e-9"". So which one is it? ### What is the expected behaviour? The default value of `epsrel` should be the same. ### How to reproduce? Just click the link in the issue description. ### ROOT version. 6.14, master. ### How did you install ROOT? does not matter, the issue is with the documentation. ### Which operating system are you using? does not matter, the issue is with the documentation. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13005
https://github.com/root-project/root/issues/13005:192,modifiability,Integr,Integral,192,"Ambiguous default parameter in TF2::Integral documentation; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We see the following in [the documentation of `TF2::Integral(...)` for the `master` branch](https://root.cern.ch/doc/master/classTF2.html#aa1eaa5844fa258becc6286d9f7b01309):. <img width=""632"" alt=""2023-06-13 15_43_20-ROOT_ TF2 Class Reference - Opera"" src=""https://github.com/root-project/root/assets/7541582/61fbc841-8a0d-4942-b15e-bf13cbd1a1a5"">. `epsrel` is first mentioned to equal 1.e-6, and then it says that the ""default value of eps is 1.e-9"". So which one is it? ### What is the expected behaviour? The default value of `epsrel` should be the same. ### How to reproduce? Just click the link in the issue description. ### ROOT version. 6.14, master. ### How did you install ROOT? does not matter, the issue is with the documentation. ### Which operating system are you using? does not matter, the issue is with the documentation. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13005
https://github.com/root-project/root/issues/13005:775,modifiability,version,version,775,"Ambiguous default parameter in TF2::Integral documentation; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We see the following in [the documentation of `TF2::Integral(...)` for the `master` branch](https://root.cern.ch/doc/master/classTF2.html#aa1eaa5844fa258becc6286d9f7b01309):. <img width=""632"" alt=""2023-06-13 15_43_20-ROOT_ TF2 Class Reference - Opera"" src=""https://github.com/root-project/root/assets/7541582/61fbc841-8a0d-4942-b15e-bf13cbd1a1a5"">. `epsrel` is first mentioned to equal 1.e-6, and then it says that the ""default value of eps is 1.e-9"". So which one is it? ### What is the expected behaviour? The default value of `epsrel` should be the same. ### How to reproduce? Just click the link in the issue description. ### ROOT version. 6.14, master. ### How did you install ROOT? does not matter, the issue is with the documentation. ### Which operating system are you using? does not matter, the issue is with the documentation. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13005
https://github.com/root-project/root/issues/13005:36,reliability,Integr,Integral,36,"Ambiguous default parameter in TF2::Integral documentation; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We see the following in [the documentation of `TF2::Integral(...)` for the `master` branch](https://root.cern.ch/doc/master/classTF2.html#aa1eaa5844fa258becc6286d9f7b01309):. <img width=""632"" alt=""2023-06-13 15_43_20-ROOT_ TF2 Class Reference - Opera"" src=""https://github.com/root-project/root/assets/7541582/61fbc841-8a0d-4942-b15e-bf13cbd1a1a5"">. `epsrel` is first mentioned to equal 1.e-6, and then it says that the ""default value of eps is 1.e-9"". So which one is it? ### What is the expected behaviour? The default value of `epsrel` should be the same. ### How to reproduce? Just click the link in the issue description. ### ROOT version. 6.14, master. ### How did you install ROOT? does not matter, the issue is with the documentation. ### Which operating system are you using? does not matter, the issue is with the documentation. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13005
https://github.com/root-project/root/issues/13005:192,reliability,Integr,Integral,192,"Ambiguous default parameter in TF2::Integral documentation; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We see the following in [the documentation of `TF2::Integral(...)` for the `master` branch](https://root.cern.ch/doc/master/classTF2.html#aa1eaa5844fa258becc6286d9f7b01309):. <img width=""632"" alt=""2023-06-13 15_43_20-ROOT_ TF2 Class Reference - Opera"" src=""https://github.com/root-project/root/assets/7541582/61fbc841-8a0d-4942-b15e-bf13cbd1a1a5"">. `epsrel` is first mentioned to equal 1.e-6, and then it says that the ""default value of eps is 1.e-9"". So which one is it? ### What is the expected behaviour? The default value of `epsrel` should be the same. ### How to reproduce? Just click the link in the issue description. ### ROOT version. 6.14, master. ### How did you install ROOT? does not matter, the issue is with the documentation. ### Which operating system are you using? does not matter, the issue is with the documentation. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13005
https://github.com/root-project/root/issues/13005:828,reliability,doe,does,828,"Ambiguous default parameter in TF2::Integral documentation; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We see the following in [the documentation of `TF2::Integral(...)` for the `master` branch](https://root.cern.ch/doc/master/classTF2.html#aa1eaa5844fa258becc6286d9f7b01309):. <img width=""632"" alt=""2023-06-13 15_43_20-ROOT_ TF2 Class Reference - Opera"" src=""https://github.com/root-project/root/assets/7541582/61fbc841-8a0d-4942-b15e-bf13cbd1a1a5"">. `epsrel` is first mentioned to equal 1.e-6, and then it says that the ""default value of eps is 1.e-9"". So which one is it? ### What is the expected behaviour? The default value of `epsrel` should be the same. ### How to reproduce? Just click the link in the issue description. ### ROOT version. 6.14, master. ### How did you install ROOT? does not matter, the issue is with the documentation. ### Which operating system are you using? does not matter, the issue is with the documentation. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13005
https://github.com/root-project/root/issues/13005:924,reliability,doe,does,924,"Ambiguous default parameter in TF2::Integral documentation; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We see the following in [the documentation of `TF2::Integral(...)` for the `master` branch](https://root.cern.ch/doc/master/classTF2.html#aa1eaa5844fa258becc6286d9f7b01309):. <img width=""632"" alt=""2023-06-13 15_43_20-ROOT_ TF2 Class Reference - Opera"" src=""https://github.com/root-project/root/assets/7541582/61fbc841-8a0d-4942-b15e-bf13cbd1a1a5"">. `epsrel` is first mentioned to equal 1.e-6, and then it says that the ""default value of eps is 1.e-9"". So which one is it? ### What is the expected behaviour? The default value of `epsrel` should be the same. ### How to reproduce? Just click the link in the issue description. ### ROOT version. 6.14, master. ### How did you install ROOT? does not matter, the issue is with the documentation. ### Which operating system are you using? does not matter, the issue is with the documentation. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13005
https://github.com/root-project/root/issues/13005:36,security,Integr,Integral,36,"Ambiguous default parameter in TF2::Integral documentation; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We see the following in [the documentation of `TF2::Integral(...)` for the `master` branch](https://root.cern.ch/doc/master/classTF2.html#aa1eaa5844fa258becc6286d9f7b01309):. <img width=""632"" alt=""2023-06-13 15_43_20-ROOT_ TF2 Class Reference - Opera"" src=""https://github.com/root-project/root/assets/7541582/61fbc841-8a0d-4942-b15e-bf13cbd1a1a5"">. `epsrel` is first mentioned to equal 1.e-6, and then it says that the ""default value of eps is 1.e-9"". So which one is it? ### What is the expected behaviour? The default value of `epsrel` should be the same. ### How to reproduce? Just click the link in the issue description. ### ROOT version. 6.14, master. ### How did you install ROOT? does not matter, the issue is with the documentation. ### Which operating system are you using? does not matter, the issue is with the documentation. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13005
https://github.com/root-project/root/issues/13005:192,security,Integr,Integral,192,"Ambiguous default parameter in TF2::Integral documentation; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We see the following in [the documentation of `TF2::Integral(...)` for the `master` branch](https://root.cern.ch/doc/master/classTF2.html#aa1eaa5844fa258becc6286d9f7b01309):. <img width=""632"" alt=""2023-06-13 15_43_20-ROOT_ TF2 Class Reference - Opera"" src=""https://github.com/root-project/root/assets/7541582/61fbc841-8a0d-4942-b15e-bf13cbd1a1a5"">. `epsrel` is first mentioned to equal 1.e-6, and then it says that the ""default value of eps is 1.e-9"". So which one is it? ### What is the expected behaviour? The default value of `epsrel` should be the same. ### How to reproduce? Just click the link in the issue description. ### ROOT version. 6.14, master. ### How did you install ROOT? does not matter, the issue is with the documentation. ### Which operating system are you using? does not matter, the issue is with the documentation. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13005
https://github.com/root-project/root/issues/13005:36,testability,Integr,Integral,36,"Ambiguous default parameter in TF2::Integral documentation; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We see the following in [the documentation of `TF2::Integral(...)` for the `master` branch](https://root.cern.ch/doc/master/classTF2.html#aa1eaa5844fa258becc6286d9f7b01309):. <img width=""632"" alt=""2023-06-13 15_43_20-ROOT_ TF2 Class Reference - Opera"" src=""https://github.com/root-project/root/assets/7541582/61fbc841-8a0d-4942-b15e-bf13cbd1a1a5"">. `epsrel` is first mentioned to equal 1.e-6, and then it says that the ""default value of eps is 1.e-9"". So which one is it? ### What is the expected behaviour? The default value of `epsrel` should be the same. ### How to reproduce? Just click the link in the issue description. ### ROOT version. 6.14, master. ### How did you install ROOT? does not matter, the issue is with the documentation. ### Which operating system are you using? does not matter, the issue is with the documentation. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13005
https://github.com/root-project/root/issues/13005:192,testability,Integr,Integral,192,"Ambiguous default parameter in TF2::Integral documentation; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We see the following in [the documentation of `TF2::Integral(...)` for the `master` branch](https://root.cern.ch/doc/master/classTF2.html#aa1eaa5844fa258becc6286d9f7b01309):. <img width=""632"" alt=""2023-06-13 15_43_20-ROOT_ TF2 Class Reference - Opera"" src=""https://github.com/root-project/root/assets/7541582/61fbc841-8a0d-4942-b15e-bf13cbd1a1a5"">. `epsrel` is first mentioned to equal 1.e-6, and then it says that the ""default value of eps is 1.e-9"". So which one is it? ### What is the expected behaviour? The default value of `epsrel` should be the same. ### How to reproduce? Just click the link in the issue description. ### ROOT version. 6.14, master. ### How did you install ROOT? does not matter, the issue is with the documentation. ### Which operating system are you using? does not matter, the issue is with the documentation. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13005
https://github.com/root-project/root/issues/13005:993,testability,context,context,993,"Ambiguous default parameter in TF2::Integral documentation; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We see the following in [the documentation of `TF2::Integral(...)` for the `master` branch](https://root.cern.ch/doc/master/classTF2.html#aa1eaa5844fa258becc6286d9f7b01309):. <img width=""632"" alt=""2023-06-13 15_43_20-ROOT_ TF2 Class Reference - Opera"" src=""https://github.com/root-project/root/assets/7541582/61fbc841-8a0d-4942-b15e-bf13cbd1a1a5"">. `epsrel` is first mentioned to equal 1.e-6, and then it says that the ""default value of eps is 1.e-9"". So which one is it? ### What is the expected behaviour? The default value of `epsrel` should be the same. ### How to reproduce? Just click the link in the issue description. ### ROOT version. 6.14, master. ### How did you install ROOT? does not matter, the issue is with the documentation. ### Which operating system are you using? does not matter, the issue is with the documentation. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13005
https://github.com/root-project/root/issues/13005:45,usability,document,documentation,45,"Ambiguous default parameter in TF2::Integral documentation; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We see the following in [the documentation of `TF2::Integral(...)` for the `master` branch](https://root.cern.ch/doc/master/classTF2.html#aa1eaa5844fa258becc6286d9f7b01309):. <img width=""632"" alt=""2023-06-13 15_43_20-ROOT_ TF2 Class Reference - Opera"" src=""https://github.com/root-project/root/assets/7541582/61fbc841-8a0d-4942-b15e-bf13cbd1a1a5"">. `epsrel` is first mentioned to equal 1.e-6, and then it says that the ""default value of eps is 1.e-9"". So which one is it? ### What is the expected behaviour? The default value of `epsrel` should be the same. ### How to reproduce? Just click the link in the issue description. ### ROOT version. 6.14, master. ### How did you install ROOT? does not matter, the issue is with the documentation. ### Which operating system are you using? does not matter, the issue is with the documentation. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13005
https://github.com/root-project/root/issues/13005:169,usability,document,documentation,169,"Ambiguous default parameter in TF2::Integral documentation; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We see the following in [the documentation of `TF2::Integral(...)` for the `master` branch](https://root.cern.ch/doc/master/classTF2.html#aa1eaa5844fa258becc6286d9f7b01309):. <img width=""632"" alt=""2023-06-13 15_43_20-ROOT_ TF2 Class Reference - Opera"" src=""https://github.com/root-project/root/assets/7541582/61fbc841-8a0d-4942-b15e-bf13cbd1a1a5"">. `epsrel` is first mentioned to equal 1.e-6, and then it says that the ""default value of eps is 1.e-9"". So which one is it? ### What is the expected behaviour? The default value of `epsrel` should be the same. ### How to reproduce? Just click the link in the issue description. ### ROOT version. 6.14, master. ### How did you install ROOT? does not matter, the issue is with the documentation. ### Which operating system are you using? does not matter, the issue is with the documentation. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13005
https://github.com/root-project/root/issues/13005:637,usability,behavi,behaviour,637,"Ambiguous default parameter in TF2::Integral documentation; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We see the following in [the documentation of `TF2::Integral(...)` for the `master` branch](https://root.cern.ch/doc/master/classTF2.html#aa1eaa5844fa258becc6286d9f7b01309):. <img width=""632"" alt=""2023-06-13 15_43_20-ROOT_ TF2 Class Reference - Opera"" src=""https://github.com/root-project/root/assets/7541582/61fbc841-8a0d-4942-b15e-bf13cbd1a1a5"">. `epsrel` is first mentioned to equal 1.e-6, and then it says that the ""default value of eps is 1.e-9"". So which one is it? ### What is the expected behaviour? The default value of `epsrel` should be the same. ### How to reproduce? Just click the link in the issue description. ### ROOT version. 6.14, master. ### How did you install ROOT? does not matter, the issue is with the documentation. ### Which operating system are you using? does not matter, the issue is with the documentation. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13005
https://github.com/root-project/root/issues/13005:867,usability,document,documentation,867,"Ambiguous default parameter in TF2::Integral documentation; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We see the following in [the documentation of `TF2::Integral(...)` for the `master` branch](https://root.cern.ch/doc/master/classTF2.html#aa1eaa5844fa258becc6286d9f7b01309):. <img width=""632"" alt=""2023-06-13 15_43_20-ROOT_ TF2 Class Reference - Opera"" src=""https://github.com/root-project/root/assets/7541582/61fbc841-8a0d-4942-b15e-bf13cbd1a1a5"">. `epsrel` is first mentioned to equal 1.e-6, and then it says that the ""default value of eps is 1.e-9"". So which one is it? ### What is the expected behaviour? The default value of `epsrel` should be the same. ### How to reproduce? Just click the link in the issue description. ### ROOT version. 6.14, master. ### How did you install ROOT? does not matter, the issue is with the documentation. ### Which operating system are you using? does not matter, the issue is with the documentation. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13005
https://github.com/root-project/root/issues/13005:963,usability,document,documentation,963,"Ambiguous default parameter in TF2::Integral documentation; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We see the following in [the documentation of `TF2::Integral(...)` for the `master` branch](https://root.cern.ch/doc/master/classTF2.html#aa1eaa5844fa258becc6286d9f7b01309):. <img width=""632"" alt=""2023-06-13 15_43_20-ROOT_ TF2 Class Reference - Opera"" src=""https://github.com/root-project/root/assets/7541582/61fbc841-8a0d-4942-b15e-bf13cbd1a1a5"">. `epsrel` is first mentioned to equal 1.e-6, and then it says that the ""default value of eps is 1.e-9"". So which one is it? ### What is the expected behaviour? The default value of `epsrel` should be the same. ### How to reproduce? Just click the link in the issue description. ### ROOT version. 6.14, master. ### How did you install ROOT? does not matter, the issue is with the documentation. ### Which operating system are you using? does not matter, the issue is with the documentation. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13005
https://github.com/root-project/root/pull/13006:54,reliability,doe,does,54,Fix missing namespace; Apparently the new Apple clang does not allow unscoped make_pair and runtime_error anymore.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13006
https://github.com/root-project/root/pull/13007:144,deployability,updat,updated,144,[ci] Add sonartype.io static checker. [skip-ci]; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13007
https://github.com/root-project/root/pull/13007:114,safety,test,tested,114,[ci] Add sonartype.io static checker. [skip-ci]; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13007
https://github.com/root-project/root/pull/13007:144,safety,updat,updated,144,[ci] Add sonartype.io static checker. [skip-ci]; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13007
https://github.com/root-project/root/pull/13007:144,security,updat,updated,144,[ci] Add sonartype.io static checker. [skip-ci]; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13007
https://github.com/root-project/root/pull/13007:114,testability,test,tested,114,[ci] Add sonartype.io static checker. [skip-ci]; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13007
https://github.com/root-project/root/pull/13008:64,deployability,depend,dependabot,64,"[llvm] Remove llvm/src/utils/vscode/llvm:; A constant source of dependabot unhappiness, and we really do not use this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13008
https://github.com/root-project/root/pull/13008:64,integrability,depend,dependabot,64,"[llvm] Remove llvm/src/utils/vscode/llvm:; A constant source of dependabot unhappiness, and we really do not use this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13008
https://github.com/root-project/root/pull/13008:64,modifiability,depend,dependabot,64,"[llvm] Remove llvm/src/utils/vscode/llvm:; A constant source of dependabot unhappiness, and we really do not use this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13008
https://github.com/root-project/root/pull/13008:64,reliability,dependab,dependabot,64,"[llvm] Remove llvm/src/utils/vscode/llvm:; A constant source of dependabot unhappiness, and we really do not use this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13008
https://github.com/root-project/root/pull/13008:64,safety,depend,dependabot,64,"[llvm] Remove llvm/src/utils/vscode/llvm:; A constant source of dependabot unhappiness, and we really do not use this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13008
https://github.com/root-project/root/pull/13008:64,testability,depend,dependabot,64,"[llvm] Remove llvm/src/utils/vscode/llvm:; A constant source of dependabot unhappiness, and we really do not use this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13008
https://github.com/root-project/root/pull/13010:161,deployability,updat,updated,161,"[ci] SonarCloud: run on GH infra, better for security. [skip-ci]; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13010
https://github.com/root-project/root/pull/13010:131,safety,test,tested,131,"[ci] SonarCloud: run on GH infra, better for security. [skip-ci]; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13010
https://github.com/root-project/root/pull/13010:161,safety,updat,updated,161,"[ci] SonarCloud: run on GH infra, better for security. [skip-ci]; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13010
https://github.com/root-project/root/pull/13010:45,security,secur,security,45,"[ci] SonarCloud: run on GH infra, better for security. [skip-ci]; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13010
https://github.com/root-project/root/pull/13010:161,security,updat,updated,161,"[ci] SonarCloud: run on GH infra, better for security. [skip-ci]; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13010
https://github.com/root-project/root/pull/13010:131,testability,test,tested,131,"[ci] SonarCloud: run on GH infra, better for security. [skip-ci]; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13010
https://github.com/root-project/root/pull/13011:166,deployability,updat,updated,166,"[core] Prevent buffer underrun in SplitAclicMode (thanks, SonarCloud); # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13011
https://github.com/root-project/root/pull/13011:1,energy efficiency,core,core,1,"[core] Prevent buffer underrun in SplitAclicMode (thanks, SonarCloud); # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13011
https://github.com/root-project/root/pull/13011:15,integrability,buffer,buffer,15,"[core] Prevent buffer underrun in SplitAclicMode (thanks, SonarCloud); # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13011
https://github.com/root-project/root/pull/13011:7,safety,Prevent,Prevent,7,"[core] Prevent buffer underrun in SplitAclicMode (thanks, SonarCloud); # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13011
https://github.com/root-project/root/pull/13011:136,safety,test,tested,136,"[core] Prevent buffer underrun in SplitAclicMode (thanks, SonarCloud); # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13011
https://github.com/root-project/root/pull/13011:166,safety,updat,updated,166,"[core] Prevent buffer underrun in SplitAclicMode (thanks, SonarCloud); # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13011
https://github.com/root-project/root/pull/13011:7,security,Preven,Prevent,7,"[core] Prevent buffer underrun in SplitAclicMode (thanks, SonarCloud); # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13011
https://github.com/root-project/root/pull/13011:166,security,updat,updated,166,"[core] Prevent buffer underrun in SplitAclicMode (thanks, SonarCloud); # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13011
https://github.com/root-project/root/pull/13011:136,testability,test,tested,136,"[core] Prevent buffer underrun in SplitAclicMode (thanks, SonarCloud); # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13011
https://github.com/root-project/root/pull/13013:554,availability,error,error,554,"[cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13013
https://github.com/root-project/root/pull/13013:606,availability,Error,Error,606,"[cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13013
https://github.com/root-project/root/pull/13013:91,deployability,automat,automatically,91,"[cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13013
https://github.com/root-project/root/pull/13013:131,deployability,releas,release,131,"[cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13013
https://github.com/root-project/root/pull/13013:169,deployability,instal,installed,169,"[cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13013
https://github.com/root-project/root/pull/13013:213,deployability,releas,release,213,"[cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13013
https://github.com/root-project/root/pull/13013:221,deployability,version,versions,221,"[cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13013
https://github.com/root-project/root/pull/13013:409,deployability,releas,release,409,"[cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13013
https://github.com/root-project/root/pull/13013:417,deployability,version,version,417,"[cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13013
https://github.com/root-project/root/pull/13013:570,deployability,version,versions,570,"[cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13013
https://github.com/root-project/root/pull/13013:583,deployability,instal,installed,583,"[cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13013
https://github.com/root-project/root/pull/13013:303,energy efficiency,optim,optimized,303,"[cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13013
https://github.com/root-project/root/pull/13013:695,energy efficiency,optim,optimized,695,"[cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13013
https://github.com/root-project/root/pull/13013:221,integrability,version,versions,221,"[cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13013
https://github.com/root-project/root/pull/13013:417,integrability,version,version,417,"[cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13013
https://github.com/root-project/root/pull/13013:570,integrability,version,versions,570,"[cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13013
https://github.com/root-project/root/pull/13013:21,interoperability,standard,standard,21,"[cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13013
https://github.com/root-project/root/pull/13013:615,interoperability,bind,bindings,615,"[cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13013
https://github.com/root-project/root/pull/13013:221,modifiability,version,versions,221,"[cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13013
https://github.com/root-project/root/pull/13013:417,modifiability,version,version,417,"[cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13013
https://github.com/root-project/root/pull/13013:570,modifiability,version,versions,570,"[cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13013
https://github.com/root-project/root/pull/13013:615,modifiability,bind,bindings,615,"[cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13013
https://github.com/root-project/root/pull/13013:303,performance,optimiz,optimized,303,"[cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13013
https://github.com/root-project/root/pull/13013:554,performance,error,error,554,"[cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13013
https://github.com/root-project/root/pull/13013:606,performance,Error,Error,606,"[cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13013
https://github.com/root-project/root/pull/13013:695,performance,optimiz,optimized,695,"[cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13013
https://github.com/root-project/root/pull/13013:554,safety,error,error,554,"[cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13013
https://github.com/root-project/root/pull/13013:606,safety,Error,Error,606,"[cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13013
https://github.com/root-project/root/pull/13013:91,testability,automat,automatically,91,"[cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13013
https://github.com/root-project/root/pull/13013:554,usability,error,error,554,"[cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13013
https://github.com/root-project/root/pull/13013:606,usability,Error,Error,606,"[cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13013
https://github.com/root-project/root/issues/13016:315,availability,down,down,315,"Extra vertical space on a canvas when CanvasPreferGL is set to true, reproducible via SSH; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. When trying to draw a histogram with a transparent box on top of it, I noticed that whenever I set `CanvasPreferGL` to `true`, the canvas moves down, and the X-axis title is cut off. ### What is the expected behaviour? The only change I would expect is the transparency introduced to my box. Things are not supposed to be moved around only due to. ```c++. gStyle->SetCanvasPreferGL(true);. ```. ### How to reproduce? Consider this macro:. ```c++. void transpar(). {. gStyle->SetCanvasPreferGL(false);. TH2F *h = new TH2F(""h"", ""h;X;Y;Z"", 10, 0., 10., 10, 0., 10.);. h->Draw();. TMarker *m = new TMarker(4., 7., 8);. m->Draw();. TBox *b = new TBox(1., 1., 8., 8.);. printf(""CanvasPreferGL is set to %s\n"", gStyle->GetCanvasPreferGL() ? ""true, the red box is expected to be transparent"":""false, the red box is expected to be non-transparent"");. b->SetFillColorAlpha(kRed, 0.2);. b->Draw();. }. ```. Now if I run this as. ```. root -l -n transpar.cxx. ```. I get the following:. ![image](https://github.com/root-project/root/assets/7541582/446db1cf-b73e-4809-b5f7-dfb422934db3). (no transparency is expected, so it is all good). But when I change `false` to `true` at the third line. ```c++. gStyle->SetCanvasPreferGL(true);. ```. and run again. ```. root -l -n transpar.cxx. ```. , I get. ![image](https://github.com/root-project/root/assets/7541582/e88d31f5-e46e-487b-bf37-8779ab8ef2d3). The box is now transparent, which is good, but there is too much empty space above the histogram name (“`h`”) and, as a consequence, the X-axis title is now cut off. Is there a way to make my box transparent and keep everything else where it was before? Please note I’m using the `-n` option when running `transpar.cxx`, so it’s not due to something I have in my style file. [The original discussion at the ROOT forum](https://root-forum.cern.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13016
https://github.com/root-project/root/issues/13016:2698,availability,operat,operating,2698,"7., 8);. m->Draw();. TBox *b = new TBox(1., 1., 8., 8.);. printf(""CanvasPreferGL is set to %s\n"", gStyle->GetCanvasPreferGL() ? ""true, the red box is expected to be transparent"":""false, the red box is expected to be non-transparent"");. b->SetFillColorAlpha(kRed, 0.2);. b->Draw();. }. ```. Now if I run this as. ```. root -l -n transpar.cxx. ```. I get the following:. ![image](https://github.com/root-project/root/assets/7541582/446db1cf-b73e-4809-b5f7-dfb422934db3). (no transparency is expected, so it is all good). But when I change `false` to `true` at the third line. ```c++. gStyle->SetCanvasPreferGL(true);. ```. and run again. ```. root -l -n transpar.cxx. ```. , I get. ![image](https://github.com/root-project/root/assets/7541582/e88d31f5-e46e-487b-bf37-8779ab8ef2d3). The box is now transparent, which is good, but there is too much empty space above the histogram name (“`h`”) and, as a consequence, the X-axis title is now cut off. Is there a way to make my box transparent and keep everything else where it was before? Please note I’m using the `-n` option when running `transpar.cxx`, so it’s not due to something I have in my style file. [The original discussion at the ROOT forum](https://root-forum.cern.ch/t/extra-vertical-space-on-a-canvas-when-canvasprefergl-is-set-to-true/55298) revealed that:. - this is irreproducible if ran on local computers with Windows or Mac OS. The issue is observed only via SSH (from e.g. `lxplus7`). - in principle, the issue can be mitigated by adding the following five lines at the very end of the macro (right after `b->Draw();`; the transparency remains; the +/- 0.1 offsets need a bit of a tuning of course):. ```c++. if (gStyle->GetCanvasPreferGL()). {. gPad->SetBottomMargin(gPad->GetBottomMargin() + 0.1);. gPad->SetTopMargin(gPad->GetTopMargin() - 0.1);. }. ```. ### ROOT version. 6.28/00. ### How did you install ROOT? provided by ATLAS @ lxplus7. ### Which operating system are you using? CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13016
https://github.com/root-project/root/issues/13016:2184,deployability,observ,observed,2184,"7., 8);. m->Draw();. TBox *b = new TBox(1., 1., 8., 8.);. printf(""CanvasPreferGL is set to %s\n"", gStyle->GetCanvasPreferGL() ? ""true, the red box is expected to be transparent"":""false, the red box is expected to be non-transparent"");. b->SetFillColorAlpha(kRed, 0.2);. b->Draw();. }. ```. Now if I run this as. ```. root -l -n transpar.cxx. ```. I get the following:. ![image](https://github.com/root-project/root/assets/7541582/446db1cf-b73e-4809-b5f7-dfb422934db3). (no transparency is expected, so it is all good). But when I change `false` to `true` at the third line. ```c++. gStyle->SetCanvasPreferGL(true);. ```. and run again. ```. root -l -n transpar.cxx. ```. , I get. ![image](https://github.com/root-project/root/assets/7541582/e88d31f5-e46e-487b-bf37-8779ab8ef2d3). The box is now transparent, which is good, but there is too much empty space above the histogram name (“`h`”) and, as a consequence, the X-axis title is now cut off. Is there a way to make my box transparent and keep everything else where it was before? Please note I’m using the `-n` option when running `transpar.cxx`, so it’s not due to something I have in my style file. [The original discussion at the ROOT forum](https://root-forum.cern.ch/t/extra-vertical-space-on-a-canvas-when-canvasprefergl-is-set-to-true/55298) revealed that:. - this is irreproducible if ran on local computers with Windows or Mac OS. The issue is observed only via SSH (from e.g. `lxplus7`). - in principle, the issue can be mitigated by adding the following five lines at the very end of the macro (right after `b->Draw();`; the transparency remains; the +/- 0.1 offsets need a bit of a tuning of course):. ```c++. if (gStyle->GetCanvasPreferGL()). {. gPad->SetBottomMargin(gPad->GetBottomMargin() + 0.1);. gPad->SetTopMargin(gPad->GetTopMargin() - 0.1);. }. ```. ### ROOT version. 6.28/00. ### How did you install ROOT? provided by ATLAS @ lxplus7. ### Which operating system are you using? CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13016
https://github.com/root-project/root/issues/13016:2611,deployability,version,version,2611,"7., 8);. m->Draw();. TBox *b = new TBox(1., 1., 8., 8.);. printf(""CanvasPreferGL is set to %s\n"", gStyle->GetCanvasPreferGL() ? ""true, the red box is expected to be transparent"":""false, the red box is expected to be non-transparent"");. b->SetFillColorAlpha(kRed, 0.2);. b->Draw();. }. ```. Now if I run this as. ```. root -l -n transpar.cxx. ```. I get the following:. ![image](https://github.com/root-project/root/assets/7541582/446db1cf-b73e-4809-b5f7-dfb422934db3). (no transparency is expected, so it is all good). But when I change `false` to `true` at the third line. ```c++. gStyle->SetCanvasPreferGL(true);. ```. and run again. ```. root -l -n transpar.cxx. ```. , I get. ![image](https://github.com/root-project/root/assets/7541582/e88d31f5-e46e-487b-bf37-8779ab8ef2d3). The box is now transparent, which is good, but there is too much empty space above the histogram name (“`h`”) and, as a consequence, the X-axis title is now cut off. Is there a way to make my box transparent and keep everything else where it was before? Please note I’m using the `-n` option when running `transpar.cxx`, so it’s not due to something I have in my style file. [The original discussion at the ROOT forum](https://root-forum.cern.ch/t/extra-vertical-space-on-a-canvas-when-canvasprefergl-is-set-to-true/55298) revealed that:. - this is irreproducible if ran on local computers with Windows or Mac OS. The issue is observed only via SSH (from e.g. `lxplus7`). - in principle, the issue can be mitigated by adding the following five lines at the very end of the macro (right after `b->Draw();`; the transparency remains; the +/- 0.1 offsets need a bit of a tuning of course):. ```c++. if (gStyle->GetCanvasPreferGL()). {. gPad->SetBottomMargin(gPad->GetBottomMargin() + 0.1);. gPad->SetTopMargin(gPad->GetTopMargin() - 0.1);. }. ```. ### ROOT version. 6.28/00. ### How did you install ROOT? provided by ATLAS @ lxplus7. ### Which operating system are you using? CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13016
https://github.com/root-project/root/issues/13016:2645,deployability,instal,install,2645,"7., 8);. m->Draw();. TBox *b = new TBox(1., 1., 8., 8.);. printf(""CanvasPreferGL is set to %s\n"", gStyle->GetCanvasPreferGL() ? ""true, the red box is expected to be transparent"":""false, the red box is expected to be non-transparent"");. b->SetFillColorAlpha(kRed, 0.2);. b->Draw();. }. ```. Now if I run this as. ```. root -l -n transpar.cxx. ```. I get the following:. ![image](https://github.com/root-project/root/assets/7541582/446db1cf-b73e-4809-b5f7-dfb422934db3). (no transparency is expected, so it is all good). But when I change `false` to `true` at the third line. ```c++. gStyle->SetCanvasPreferGL(true);. ```. and run again. ```. root -l -n transpar.cxx. ```. , I get. ![image](https://github.com/root-project/root/assets/7541582/e88d31f5-e46e-487b-bf37-8779ab8ef2d3). The box is now transparent, which is good, but there is too much empty space above the histogram name (“`h`”) and, as a consequence, the X-axis title is now cut off. Is there a way to make my box transparent and keep everything else where it was before? Please note I’m using the `-n` option when running `transpar.cxx`, so it’s not due to something I have in my style file. [The original discussion at the ROOT forum](https://root-forum.cern.ch/t/extra-vertical-space-on-a-canvas-when-canvasprefergl-is-set-to-true/55298) revealed that:. - this is irreproducible if ran on local computers with Windows or Mac OS. The issue is observed only via SSH (from e.g. `lxplus7`). - in principle, the issue can be mitigated by adding the following five lines at the very end of the macro (right after `b->Draw();`; the transparency remains; the +/- 0.1 offsets need a bit of a tuning of course):. ```c++. if (gStyle->GetCanvasPreferGL()). {. gPad->SetBottomMargin(gPad->GetBottomMargin() + 0.1);. gPad->SetTopMargin(gPad->GetTopMargin() - 0.1);. }. ```. ### ROOT version. 6.28/00. ### How did you install ROOT? provided by ATLAS @ lxplus7. ### Which operating system are you using? CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13016
https://github.com/root-project/root/issues/13016:186,energy efficiency,draw,draw,186,"Extra vertical space on a canvas when CanvasPreferGL is set to true, reproducible via SSH; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. When trying to draw a histogram with a transparent box on top of it, I noticed that whenever I set `CanvasPreferGL` to `true`, the canvas moves down, and the X-axis title is cut off. ### What is the expected behaviour? The only change I would expect is the transparency introduced to my box. Things are not supposed to be moved around only due to. ```c++. gStyle->SetCanvasPreferGL(true);. ```. ### How to reproduce? Consider this macro:. ```c++. void transpar(). {. gStyle->SetCanvasPreferGL(false);. TH2F *h = new TH2F(""h"", ""h;X;Y;Z"", 10, 0., 10., 10, 0., 10.);. h->Draw();. TMarker *m = new TMarker(4., 7., 8);. m->Draw();. TBox *b = new TBox(1., 1., 8., 8.);. printf(""CanvasPreferGL is set to %s\n"", gStyle->GetCanvasPreferGL() ? ""true, the red box is expected to be transparent"":""false, the red box is expected to be non-transparent"");. b->SetFillColorAlpha(kRed, 0.2);. b->Draw();. }. ```. Now if I run this as. ```. root -l -n transpar.cxx. ```. I get the following:. ![image](https://github.com/root-project/root/assets/7541582/446db1cf-b73e-4809-b5f7-dfb422934db3). (no transparency is expected, so it is all good). But when I change `false` to `true` at the third line. ```c++. gStyle->SetCanvasPreferGL(true);. ```. and run again. ```. root -l -n transpar.cxx. ```. , I get. ![image](https://github.com/root-project/root/assets/7541582/e88d31f5-e46e-487b-bf37-8779ab8ef2d3). The box is now transparent, which is good, but there is too much empty space above the histogram name (“`h`”) and, as a consequence, the X-axis title is now cut off. Is there a way to make my box transparent and keep everything else where it was before? Please note I’m using the `-n` option when running `transpar.cxx`, so it’s not due to something I have in my style file. [The original discussion at the ROOT forum](https://root-forum.cern.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13016
https://github.com/root-project/root/issues/13016:739,energy efficiency,Draw,Draw,739,"Extra vertical space on a canvas when CanvasPreferGL is set to true, reproducible via SSH; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. When trying to draw a histogram with a transparent box on top of it, I noticed that whenever I set `CanvasPreferGL` to `true`, the canvas moves down, and the X-axis title is cut off. ### What is the expected behaviour? The only change I would expect is the transparency introduced to my box. Things are not supposed to be moved around only due to. ```c++. gStyle->SetCanvasPreferGL(true);. ```. ### How to reproduce? Consider this macro:. ```c++. void transpar(). {. gStyle->SetCanvasPreferGL(false);. TH2F *h = new TH2F(""h"", ""h;X;Y;Z"", 10, 0., 10., 10, 0., 10.);. h->Draw();. TMarker *m = new TMarker(4., 7., 8);. m->Draw();. TBox *b = new TBox(1., 1., 8., 8.);. printf(""CanvasPreferGL is set to %s\n"", gStyle->GetCanvasPreferGL() ? ""true, the red box is expected to be transparent"":""false, the red box is expected to be non-transparent"");. b->SetFillColorAlpha(kRed, 0.2);. b->Draw();. }. ```. Now if I run this as. ```. root -l -n transpar.cxx. ```. I get the following:. ![image](https://github.com/root-project/root/assets/7541582/446db1cf-b73e-4809-b5f7-dfb422934db3). (no transparency is expected, so it is all good). But when I change `false` to `true` at the third line. ```c++. gStyle->SetCanvasPreferGL(true);. ```. and run again. ```. root -l -n transpar.cxx. ```. , I get. ![image](https://github.com/root-project/root/assets/7541582/e88d31f5-e46e-487b-bf37-8779ab8ef2d3). The box is now transparent, which is good, but there is too much empty space above the histogram name (“`h`”) and, as a consequence, the X-axis title is now cut off. Is there a way to make my box transparent and keep everything else where it was before? Please note I’m using the `-n` option when running `transpar.cxx`, so it’s not due to something I have in my style file. [The original discussion at the ROOT forum](https://root-forum.cern.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13016
https://github.com/root-project/root/issues/13016:789,energy efficiency,Draw,Draw,789,"Extra vertical space on a canvas when CanvasPreferGL is set to true, reproducible via SSH; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. When trying to draw a histogram with a transparent box on top of it, I noticed that whenever I set `CanvasPreferGL` to `true`, the canvas moves down, and the X-axis title is cut off. ### What is the expected behaviour? The only change I would expect is the transparency introduced to my box. Things are not supposed to be moved around only due to. ```c++. gStyle->SetCanvasPreferGL(true);. ```. ### How to reproduce? Consider this macro:. ```c++. void transpar(). {. gStyle->SetCanvasPreferGL(false);. TH2F *h = new TH2F(""h"", ""h;X;Y;Z"", 10, 0., 10., 10, 0., 10.);. h->Draw();. TMarker *m = new TMarker(4., 7., 8);. m->Draw();. TBox *b = new TBox(1., 1., 8., 8.);. printf(""CanvasPreferGL is set to %s\n"", gStyle->GetCanvasPreferGL() ? ""true, the red box is expected to be transparent"":""false, the red box is expected to be non-transparent"");. b->SetFillColorAlpha(kRed, 0.2);. b->Draw();. }. ```. Now if I run this as. ```. root -l -n transpar.cxx. ```. I get the following:. ![image](https://github.com/root-project/root/assets/7541582/446db1cf-b73e-4809-b5f7-dfb422934db3). (no transparency is expected, so it is all good). But when I change `false` to `true` at the third line. ```c++. gStyle->SetCanvasPreferGL(true);. ```. and run again. ```. root -l -n transpar.cxx. ```. , I get. ![image](https://github.com/root-project/root/assets/7541582/e88d31f5-e46e-487b-bf37-8779ab8ef2d3). The box is now transparent, which is good, but there is too much empty space above the histogram name (“`h`”) and, as a consequence, the X-axis title is now cut off. Is there a way to make my box transparent and keep everything else where it was before? Please note I’m using the `-n` option when running `transpar.cxx`, so it’s not due to something I have in my style file. [The original discussion at the ROOT forum](https://root-forum.cern.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13016
https://github.com/root-project/root/issues/13016:1050,energy efficiency,Draw,Draw,1050," is set to true, reproducible via SSH; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. When trying to draw a histogram with a transparent box on top of it, I noticed that whenever I set `CanvasPreferGL` to `true`, the canvas moves down, and the X-axis title is cut off. ### What is the expected behaviour? The only change I would expect is the transparency introduced to my box. Things are not supposed to be moved around only due to. ```c++. gStyle->SetCanvasPreferGL(true);. ```. ### How to reproduce? Consider this macro:. ```c++. void transpar(). {. gStyle->SetCanvasPreferGL(false);. TH2F *h = new TH2F(""h"", ""h;X;Y;Z"", 10, 0., 10., 10, 0., 10.);. h->Draw();. TMarker *m = new TMarker(4., 7., 8);. m->Draw();. TBox *b = new TBox(1., 1., 8., 8.);. printf(""CanvasPreferGL is set to %s\n"", gStyle->GetCanvasPreferGL() ? ""true, the red box is expected to be transparent"":""false, the red box is expected to be non-transparent"");. b->SetFillColorAlpha(kRed, 0.2);. b->Draw();. }. ```. Now if I run this as. ```. root -l -n transpar.cxx. ```. I get the following:. ![image](https://github.com/root-project/root/assets/7541582/446db1cf-b73e-4809-b5f7-dfb422934db3). (no transparency is expected, so it is all good). But when I change `false` to `true` at the third line. ```c++. gStyle->SetCanvasPreferGL(true);. ```. and run again. ```. root -l -n transpar.cxx. ```. , I get. ![image](https://github.com/root-project/root/assets/7541582/e88d31f5-e46e-487b-bf37-8779ab8ef2d3). The box is now transparent, which is good, but there is too much empty space above the histogram name (“`h`”) and, as a consequence, the X-axis title is now cut off. Is there a way to make my box transparent and keep everything else where it was before? Please note I’m using the `-n` option when running `transpar.cxx`, so it’s not due to something I have in my style file. [The original discussion at the ROOT forum](https://root-forum.cern.ch/t/extra-vertical-space-on-a-canvas-when-canvaspre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13016
https://github.com/root-project/root/issues/13016:2353,energy efficiency,Draw,Draw,2353,"7., 8);. m->Draw();. TBox *b = new TBox(1., 1., 8., 8.);. printf(""CanvasPreferGL is set to %s\n"", gStyle->GetCanvasPreferGL() ? ""true, the red box is expected to be transparent"":""false, the red box is expected to be non-transparent"");. b->SetFillColorAlpha(kRed, 0.2);. b->Draw();. }. ```. Now if I run this as. ```. root -l -n transpar.cxx. ```. I get the following:. ![image](https://github.com/root-project/root/assets/7541582/446db1cf-b73e-4809-b5f7-dfb422934db3). (no transparency is expected, so it is all good). But when I change `false` to `true` at the third line. ```c++. gStyle->SetCanvasPreferGL(true);. ```. and run again. ```. root -l -n transpar.cxx. ```. , I get. ![image](https://github.com/root-project/root/assets/7541582/e88d31f5-e46e-487b-bf37-8779ab8ef2d3). The box is now transparent, which is good, but there is too much empty space above the histogram name (“`h`”) and, as a consequence, the X-axis title is now cut off. Is there a way to make my box transparent and keep everything else where it was before? Please note I’m using the `-n` option when running `transpar.cxx`, so it’s not due to something I have in my style file. [The original discussion at the ROOT forum](https://root-forum.cern.ch/t/extra-vertical-space-on-a-canvas-when-canvasprefergl-is-set-to-true/55298) revealed that:. - this is irreproducible if ran on local computers with Windows or Mac OS. The issue is observed only via SSH (from e.g. `lxplus7`). - in principle, the issue can be mitigated by adding the following five lines at the very end of the macro (right after `b->Draw();`; the transparency remains; the +/- 0.1 offsets need a bit of a tuning of course):. ```c++. if (gStyle->GetCanvasPreferGL()). {. gPad->SetBottomMargin(gPad->GetBottomMargin() + 0.1);. gPad->SetTopMargin(gPad->GetTopMargin() - 0.1);. }. ```. ### ROOT version. 6.28/00. ### How did you install ROOT? provided by ATLAS @ lxplus7. ### Which operating system are you using? CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13016
https://github.com/root-project/root/issues/13016:2611,integrability,version,version,2611,"7., 8);. m->Draw();. TBox *b = new TBox(1., 1., 8., 8.);. printf(""CanvasPreferGL is set to %s\n"", gStyle->GetCanvasPreferGL() ? ""true, the red box is expected to be transparent"":""false, the red box is expected to be non-transparent"");. b->SetFillColorAlpha(kRed, 0.2);. b->Draw();. }. ```. Now if I run this as. ```. root -l -n transpar.cxx. ```. I get the following:. ![image](https://github.com/root-project/root/assets/7541582/446db1cf-b73e-4809-b5f7-dfb422934db3). (no transparency is expected, so it is all good). But when I change `false` to `true` at the third line. ```c++. gStyle->SetCanvasPreferGL(true);. ```. and run again. ```. root -l -n transpar.cxx. ```. , I get. ![image](https://github.com/root-project/root/assets/7541582/e88d31f5-e46e-487b-bf37-8779ab8ef2d3). The box is now transparent, which is good, but there is too much empty space above the histogram name (“`h`”) and, as a consequence, the X-axis title is now cut off. Is there a way to make my box transparent and keep everything else where it was before? Please note I’m using the `-n` option when running `transpar.cxx`, so it’s not due to something I have in my style file. [The original discussion at the ROOT forum](https://root-forum.cern.ch/t/extra-vertical-space-on-a-canvas-when-canvasprefergl-is-set-to-true/55298) revealed that:. - this is irreproducible if ran on local computers with Windows or Mac OS. The issue is observed only via SSH (from e.g. `lxplus7`). - in principle, the issue can be mitigated by adding the following five lines at the very end of the macro (right after `b->Draw();`; the transparency remains; the +/- 0.1 offsets need a bit of a tuning of course):. ```c++. if (gStyle->GetCanvasPreferGL()). {. gPad->SetBottomMargin(gPad->GetBottomMargin() + 0.1);. gPad->SetTopMargin(gPad->GetTopMargin() - 0.1);. }. ```. ### ROOT version. 6.28/00. ### How did you install ROOT? provided by ATLAS @ lxplus7. ### Which operating system are you using? CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13016
https://github.com/root-project/root/issues/13016:2611,modifiability,version,version,2611,"7., 8);. m->Draw();. TBox *b = new TBox(1., 1., 8., 8.);. printf(""CanvasPreferGL is set to %s\n"", gStyle->GetCanvasPreferGL() ? ""true, the red box is expected to be transparent"":""false, the red box is expected to be non-transparent"");. b->SetFillColorAlpha(kRed, 0.2);. b->Draw();. }. ```. Now if I run this as. ```. root -l -n transpar.cxx. ```. I get the following:. ![image](https://github.com/root-project/root/assets/7541582/446db1cf-b73e-4809-b5f7-dfb422934db3). (no transparency is expected, so it is all good). But when I change `false` to `true` at the third line. ```c++. gStyle->SetCanvasPreferGL(true);. ```. and run again. ```. root -l -n transpar.cxx. ```. , I get. ![image](https://github.com/root-project/root/assets/7541582/e88d31f5-e46e-487b-bf37-8779ab8ef2d3). The box is now transparent, which is good, but there is too much empty space above the histogram name (“`h`”) and, as a consequence, the X-axis title is now cut off. Is there a way to make my box transparent and keep everything else where it was before? Please note I’m using the `-n` option when running `transpar.cxx`, so it’s not due to something I have in my style file. [The original discussion at the ROOT forum](https://root-forum.cern.ch/t/extra-vertical-space-on-a-canvas-when-canvasprefergl-is-set-to-true/55298) revealed that:. - this is irreproducible if ran on local computers with Windows or Mac OS. The issue is observed only via SSH (from e.g. `lxplus7`). - in principle, the issue can be mitigated by adding the following five lines at the very end of the macro (right after `b->Draw();`; the transparency remains; the +/- 0.1 offsets need a bit of a tuning of course):. ```c++. if (gStyle->GetCanvasPreferGL()). {. gPad->SetBottomMargin(gPad->GetBottomMargin() + 0.1);. gPad->SetTopMargin(gPad->GetTopMargin() - 0.1);. }. ```. ### ROOT version. 6.28/00. ### How did you install ROOT? provided by ATLAS @ lxplus7. ### Which operating system are you using? CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13016
https://github.com/root-project/root/issues/13016:86,security,SSH,SSH,86,"Extra vertical space on a canvas when CanvasPreferGL is set to true, reproducible via SSH; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. When trying to draw a histogram with a transparent box on top of it, I noticed that whenever I set `CanvasPreferGL` to `true`, the canvas moves down, and the X-axis title is cut off. ### What is the expected behaviour? The only change I would expect is the transparency introduced to my box. Things are not supposed to be moved around only due to. ```c++. gStyle->SetCanvasPreferGL(true);. ```. ### How to reproduce? Consider this macro:. ```c++. void transpar(). {. gStyle->SetCanvasPreferGL(false);. TH2F *h = new TH2F(""h"", ""h;X;Y;Z"", 10, 0., 10., 10, 0., 10.);. h->Draw();. TMarker *m = new TMarker(4., 7., 8);. m->Draw();. TBox *b = new TBox(1., 1., 8., 8.);. printf(""CanvasPreferGL is set to %s\n"", gStyle->GetCanvasPreferGL() ? ""true, the red box is expected to be transparent"":""false, the red box is expected to be non-transparent"");. b->SetFillColorAlpha(kRed, 0.2);. b->Draw();. }. ```. Now if I run this as. ```. root -l -n transpar.cxx. ```. I get the following:. ![image](https://github.com/root-project/root/assets/7541582/446db1cf-b73e-4809-b5f7-dfb422934db3). (no transparency is expected, so it is all good). But when I change `false` to `true` at the third line. ```c++. gStyle->SetCanvasPreferGL(true);. ```. and run again. ```. root -l -n transpar.cxx. ```. , I get. ![image](https://github.com/root-project/root/assets/7541582/e88d31f5-e46e-487b-bf37-8779ab8ef2d3). The box is now transparent, which is good, but there is too much empty space above the histogram name (“`h`”) and, as a consequence, the X-axis title is now cut off. Is there a way to make my box transparent and keep everything else where it was before? Please note I’m using the `-n` option when running `transpar.cxx`, so it’s not due to something I have in my style file. [The original discussion at the ROOT forum](https://root-forum.cern.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13016
https://github.com/root-project/root/issues/13016:2202,security,SSH,SSH,2202,"7., 8);. m->Draw();. TBox *b = new TBox(1., 1., 8., 8.);. printf(""CanvasPreferGL is set to %s\n"", gStyle->GetCanvasPreferGL() ? ""true, the red box is expected to be transparent"":""false, the red box is expected to be non-transparent"");. b->SetFillColorAlpha(kRed, 0.2);. b->Draw();. }. ```. Now if I run this as. ```. root -l -n transpar.cxx. ```. I get the following:. ![image](https://github.com/root-project/root/assets/7541582/446db1cf-b73e-4809-b5f7-dfb422934db3). (no transparency is expected, so it is all good). But when I change `false` to `true` at the third line. ```c++. gStyle->SetCanvasPreferGL(true);. ```. and run again. ```. root -l -n transpar.cxx. ```. , I get. ![image](https://github.com/root-project/root/assets/7541582/e88d31f5-e46e-487b-bf37-8779ab8ef2d3). The box is now transparent, which is good, but there is too much empty space above the histogram name (“`h`”) and, as a consequence, the X-axis title is now cut off. Is there a way to make my box transparent and keep everything else where it was before? Please note I’m using the `-n` option when running `transpar.cxx`, so it’s not due to something I have in my style file. [The original discussion at the ROOT forum](https://root-forum.cern.ch/t/extra-vertical-space-on-a-canvas-when-canvasprefergl-is-set-to-true/55298) revealed that:. - this is irreproducible if ran on local computers with Windows or Mac OS. The issue is observed only via SSH (from e.g. `lxplus7`). - in principle, the issue can be mitigated by adding the following five lines at the very end of the macro (right after `b->Draw();`; the transparency remains; the +/- 0.1 offsets need a bit of a tuning of course):. ```c++. if (gStyle->GetCanvasPreferGL()). {. gPad->SetBottomMargin(gPad->GetBottomMargin() + 0.1);. gPad->SetTopMargin(gPad->GetTopMargin() - 0.1);. }. ```. ### ROOT version. 6.28/00. ### How did you install ROOT? provided by ATLAS @ lxplus7. ### Which operating system are you using? CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13016
https://github.com/root-project/root/issues/13016:2184,testability,observ,observed,2184,"7., 8);. m->Draw();. TBox *b = new TBox(1., 1., 8., 8.);. printf(""CanvasPreferGL is set to %s\n"", gStyle->GetCanvasPreferGL() ? ""true, the red box is expected to be transparent"":""false, the red box is expected to be non-transparent"");. b->SetFillColorAlpha(kRed, 0.2);. b->Draw();. }. ```. Now if I run this as. ```. root -l -n transpar.cxx. ```. I get the following:. ![image](https://github.com/root-project/root/assets/7541582/446db1cf-b73e-4809-b5f7-dfb422934db3). (no transparency is expected, so it is all good). But when I change `false` to `true` at the third line. ```c++. gStyle->SetCanvasPreferGL(true);. ```. and run again. ```. root -l -n transpar.cxx. ```. , I get. ![image](https://github.com/root-project/root/assets/7541582/e88d31f5-e46e-487b-bf37-8779ab8ef2d3). The box is now transparent, which is good, but there is too much empty space above the histogram name (“`h`”) and, as a consequence, the X-axis title is now cut off. Is there a way to make my box transparent and keep everything else where it was before? Please note I’m using the `-n` option when running `transpar.cxx`, so it’s not due to something I have in my style file. [The original discussion at the ROOT forum](https://root-forum.cern.ch/t/extra-vertical-space-on-a-canvas-when-canvasprefergl-is-set-to-true/55298) revealed that:. - this is irreproducible if ran on local computers with Windows or Mac OS. The issue is observed only via SSH (from e.g. `lxplus7`). - in principle, the issue can be mitigated by adding the following five lines at the very end of the macro (right after `b->Draw();`; the transparency remains; the +/- 0.1 offsets need a bit of a tuning of course):. ```c++. if (gStyle->GetCanvasPreferGL()). {. gPad->SetBottomMargin(gPad->GetBottomMargin() + 0.1);. gPad->SetTopMargin(gPad->GetTopMargin() - 0.1);. }. ```. ### ROOT version. 6.28/00. ### How did you install ROOT? provided by ATLAS @ lxplus7. ### Which operating system are you using? CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13016
https://github.com/root-project/root/issues/13016:2755,testability,context,context,2755,"7., 8);. m->Draw();. TBox *b = new TBox(1., 1., 8., 8.);. printf(""CanvasPreferGL is set to %s\n"", gStyle->GetCanvasPreferGL() ? ""true, the red box is expected to be transparent"":""false, the red box is expected to be non-transparent"");. b->SetFillColorAlpha(kRed, 0.2);. b->Draw();. }. ```. Now if I run this as. ```. root -l -n transpar.cxx. ```. I get the following:. ![image](https://github.com/root-project/root/assets/7541582/446db1cf-b73e-4809-b5f7-dfb422934db3). (no transparency is expected, so it is all good). But when I change `false` to `true` at the third line. ```c++. gStyle->SetCanvasPreferGL(true);. ```. and run again. ```. root -l -n transpar.cxx. ```. , I get. ![image](https://github.com/root-project/root/assets/7541582/e88d31f5-e46e-487b-bf37-8779ab8ef2d3). The box is now transparent, which is good, but there is too much empty space above the histogram name (“`h`”) and, as a consequence, the X-axis title is now cut off. Is there a way to make my box transparent and keep everything else where it was before? Please note I’m using the `-n` option when running `transpar.cxx`, so it’s not due to something I have in my style file. [The original discussion at the ROOT forum](https://root-forum.cern.ch/t/extra-vertical-space-on-a-canvas-when-canvasprefergl-is-set-to-true/55298) revealed that:. - this is irreproducible if ran on local computers with Windows or Mac OS. The issue is observed only via SSH (from e.g. `lxplus7`). - in principle, the issue can be mitigated by adding the following five lines at the very end of the macro (right after `b->Draw();`; the transparency remains; the +/- 0.1 offsets need a bit of a tuning of course):. ```c++. if (gStyle->GetCanvasPreferGL()). {. gPad->SetBottomMargin(gPad->GetBottomMargin() + 0.1);. gPad->SetTopMargin(gPad->GetTopMargin() - 0.1);. }. ```. ### ROOT version. 6.28/00. ### How did you install ROOT? provided by ATLAS @ lxplus7. ### Which operating system are you using? CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13016
https://github.com/root-project/root/issues/13016:379,usability,behavi,behaviour,379,"Extra vertical space on a canvas when CanvasPreferGL is set to true, reproducible via SSH; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. When trying to draw a histogram with a transparent box on top of it, I noticed that whenever I set `CanvasPreferGL` to `true`, the canvas moves down, and the X-axis title is cut off. ### What is the expected behaviour? The only change I would expect is the transparency introduced to my box. Things are not supposed to be moved around only due to. ```c++. gStyle->SetCanvasPreferGL(true);. ```. ### How to reproduce? Consider this macro:. ```c++. void transpar(). {. gStyle->SetCanvasPreferGL(false);. TH2F *h = new TH2F(""h"", ""h;X;Y;Z"", 10, 0., 10., 10, 0., 10.);. h->Draw();. TMarker *m = new TMarker(4., 7., 8);. m->Draw();. TBox *b = new TBox(1., 1., 8., 8.);. printf(""CanvasPreferGL is set to %s\n"", gStyle->GetCanvasPreferGL() ? ""true, the red box is expected to be transparent"":""false, the red box is expected to be non-transparent"");. b->SetFillColorAlpha(kRed, 0.2);. b->Draw();. }. ```. Now if I run this as. ```. root -l -n transpar.cxx. ```. I get the following:. ![image](https://github.com/root-project/root/assets/7541582/446db1cf-b73e-4809-b5f7-dfb422934db3). (no transparency is expected, so it is all good). But when I change `false` to `true` at the third line. ```c++. gStyle->SetCanvasPreferGL(true);. ```. and run again. ```. root -l -n transpar.cxx. ```. , I get. ![image](https://github.com/root-project/root/assets/7541582/e88d31f5-e46e-487b-bf37-8779ab8ef2d3). The box is now transparent, which is good, but there is too much empty space above the histogram name (“`h`”) and, as a consequence, the X-axis title is now cut off. Is there a way to make my box transparent and keep everything else where it was before? Please note I’m using the `-n` option when running `transpar.cxx`, so it’s not due to something I have in my style file. [The original discussion at the ROOT forum](https://root-forum.cern.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13016
https://github.com/root-project/root/issues/13017:704,availability,operat,operation,704,"TMVARegression crashes for nevents < 100; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. In commit 18531a48df595f64251cccc44aae3625a6b0348a the printing of the progress bar when evaluating regression events was modified. Unfortunately, it didn't consider datasets with less than 100 events. The issue is that in [line 1039 of MethodBase](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#L1039) the modulo is calculated as. `Long64_t modulo = Long64_t(nevt / 100)`, which returns 0 if the number of events (nevt) is smaller than 100. In the [next line](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#1040) the operation `ievt % modulo` throws an Arithmetic exception error (SIGFPE) as the modulo operation is undefined for division by zero. ### What is the expected behaviour? If the number of events is smaller than 100, the progress bar can either be omitted or be printed for every event. ### How to reproduce? Run TMVA regression with a dataset that contains less than 100 events. However, the bug description should be obvious from a purely mathematical point of view. ### ROOT version. 6.26/10. ### How did you install ROOT? custom build. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13017
https://github.com/root-project/root/issues/13017:761,availability,error,error,761,"TMVARegression crashes for nevents < 100; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. In commit 18531a48df595f64251cccc44aae3625a6b0348a the printing of the progress bar when evaluating regression events was modified. Unfortunately, it didn't consider datasets with less than 100 events. The issue is that in [line 1039 of MethodBase](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#L1039) the modulo is calculated as. `Long64_t modulo = Long64_t(nevt / 100)`, which returns 0 if the number of events (nevt) is smaller than 100. In the [next line](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#1040) the operation `ievt % modulo` throws an Arithmetic exception error (SIGFPE) as the modulo operation is undefined for division by zero. ### What is the expected behaviour? If the number of events is smaller than 100, the progress bar can either be omitted or be printed for every event. ### How to reproduce? Run TMVA regression with a dataset that contains less than 100 events. However, the bug description should be obvious from a purely mathematical point of view. ### ROOT version. 6.26/10. ### How did you install ROOT? custom build. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13017
https://github.com/root-project/root/issues/13017:790,availability,operat,operation,790,"TMVARegression crashes for nevents < 100; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. In commit 18531a48df595f64251cccc44aae3625a6b0348a the printing of the progress bar when evaluating regression events was modified. Unfortunately, it didn't consider datasets with less than 100 events. The issue is that in [line 1039 of MethodBase](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#L1039) the modulo is calculated as. `Long64_t modulo = Long64_t(nevt / 100)`, which returns 0 if the number of events (nevt) is smaller than 100. In the [next line](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#1040) the operation `ievt % modulo` throws an Arithmetic exception error (SIGFPE) as the modulo operation is undefined for division by zero. ### What is the expected behaviour? If the number of events is smaller than 100, the progress bar can either be omitted or be printed for every event. ### How to reproduce? Run TMVA regression with a dataset that contains less than 100 events. However, the bug description should be obvious from a purely mathematical point of view. ### ROOT version. 6.26/10. ### How did you install ROOT? custom build. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13017
https://github.com/root-project/root/issues/13017:1249,availability,operat,operating,1249,"TMVARegression crashes for nevents < 100; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. In commit 18531a48df595f64251cccc44aae3625a6b0348a the printing of the progress bar when evaluating regression events was modified. Unfortunately, it didn't consider datasets with less than 100 events. The issue is that in [line 1039 of MethodBase](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#L1039) the modulo is calculated as. `Long64_t modulo = Long64_t(nevt / 100)`, which returns 0 if the number of events (nevt) is smaller than 100. In the [next line](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#1040) the operation `ievt % modulo` throws an Arithmetic exception error (SIGFPE) as the modulo operation is undefined for division by zero. ### What is the expected behaviour? If the number of events is smaller than 100, the progress bar can either be omitted or be printed for every event. ### How to reproduce? Run TMVA regression with a dataset that contains less than 100 events. However, the bug description should be obvious from a purely mathematical point of view. ### ROOT version. 6.26/10. ### How did you install ROOT? custom build. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13017
https://github.com/root-project/root/issues/13017:461,deployability,modul,modulo,461,"TMVARegression crashes for nevents < 100; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. In commit 18531a48df595f64251cccc44aae3625a6b0348a the printing of the progress bar when evaluating regression events was modified. Unfortunately, it didn't consider datasets with less than 100 events. The issue is that in [line 1039 of MethodBase](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#L1039) the modulo is calculated as. `Long64_t modulo = Long64_t(nevt / 100)`, which returns 0 if the number of events (nevt) is smaller than 100. In the [next line](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#1040) the operation `ievt % modulo` throws an Arithmetic exception error (SIGFPE) as the modulo operation is undefined for division by zero. ### What is the expected behaviour? If the number of events is smaller than 100, the progress bar can either be omitted or be printed for every event. ### How to reproduce? Run TMVA regression with a dataset that contains less than 100 events. However, the bug description should be obvious from a purely mathematical point of view. ### ROOT version. 6.26/10. ### How did you install ROOT? custom build. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13017
https://github.com/root-project/root/issues/13017:496,deployability,modul,modulo,496,"TMVARegression crashes for nevents < 100; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. In commit 18531a48df595f64251cccc44aae3625a6b0348a the printing of the progress bar when evaluating regression events was modified. Unfortunately, it didn't consider datasets with less than 100 events. The issue is that in [line 1039 of MethodBase](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#L1039) the modulo is calculated as. `Long64_t modulo = Long64_t(nevt / 100)`, which returns 0 if the number of events (nevt) is smaller than 100. In the [next line](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#1040) the operation `ievt % modulo` throws an Arithmetic exception error (SIGFPE) as the modulo operation is undefined for division by zero. ### What is the expected behaviour? If the number of events is smaller than 100, the progress bar can either be omitted or be printed for every event. ### How to reproduce? Run TMVA regression with a dataset that contains less than 100 events. However, the bug description should be obvious from a purely mathematical point of view. ### ROOT version. 6.26/10. ### How did you install ROOT? custom build. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13017
https://github.com/root-project/root/issues/13017:722,deployability,modul,modulo,722,"TMVARegression crashes for nevents < 100; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. In commit 18531a48df595f64251cccc44aae3625a6b0348a the printing of the progress bar when evaluating regression events was modified. Unfortunately, it didn't consider datasets with less than 100 events. The issue is that in [line 1039 of MethodBase](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#L1039) the modulo is calculated as. `Long64_t modulo = Long64_t(nevt / 100)`, which returns 0 if the number of events (nevt) is smaller than 100. In the [next line](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#1040) the operation `ievt % modulo` throws an Arithmetic exception error (SIGFPE) as the modulo operation is undefined for division by zero. ### What is the expected behaviour? If the number of events is smaller than 100, the progress bar can either be omitted or be printed for every event. ### How to reproduce? Run TMVA regression with a dataset that contains less than 100 events. However, the bug description should be obvious from a purely mathematical point of view. ### ROOT version. 6.26/10. ### How did you install ROOT? custom build. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13017
https://github.com/root-project/root/issues/13017:783,deployability,modul,modulo,783,"TMVARegression crashes for nevents < 100; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. In commit 18531a48df595f64251cccc44aae3625a6b0348a the printing of the progress bar when evaluating regression events was modified. Unfortunately, it didn't consider datasets with less than 100 events. The issue is that in [line 1039 of MethodBase](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#L1039) the modulo is calculated as. `Long64_t modulo = Long64_t(nevt / 100)`, which returns 0 if the number of events (nevt) is smaller than 100. In the [next line](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#1040) the operation `ievt % modulo` throws an Arithmetic exception error (SIGFPE) as the modulo operation is undefined for division by zero. ### What is the expected behaviour? If the number of events is smaller than 100, the progress bar can either be omitted or be printed for every event. ### How to reproduce? Run TMVA regression with a dataset that contains less than 100 events. However, the bug description should be obvious from a purely mathematical point of view. ### ROOT version. 6.26/10. ### How did you install ROOT? custom build. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13017
https://github.com/root-project/root/issues/13017:1048,deployability,contain,contains,1048,"TMVARegression crashes for nevents < 100; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. In commit 18531a48df595f64251cccc44aae3625a6b0348a the printing of the progress bar when evaluating regression events was modified. Unfortunately, it didn't consider datasets with less than 100 events. The issue is that in [line 1039 of MethodBase](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#L1039) the modulo is calculated as. `Long64_t modulo = Long64_t(nevt / 100)`, which returns 0 if the number of events (nevt) is smaller than 100. In the [next line](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#1040) the operation `ievt % modulo` throws an Arithmetic exception error (SIGFPE) as the modulo operation is undefined for division by zero. ### What is the expected behaviour? If the number of events is smaller than 100, the progress bar can either be omitted or be printed for every event. ### How to reproduce? Run TMVA regression with a dataset that contains less than 100 events. However, the bug description should be obvious from a purely mathematical point of view. ### ROOT version. 6.26/10. ### How did you install ROOT? custom build. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13017
https://github.com/root-project/root/issues/13017:1177,deployability,version,version,1177,"TMVARegression crashes for nevents < 100; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. In commit 18531a48df595f64251cccc44aae3625a6b0348a the printing of the progress bar when evaluating regression events was modified. Unfortunately, it didn't consider datasets with less than 100 events. The issue is that in [line 1039 of MethodBase](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#L1039) the modulo is calculated as. `Long64_t modulo = Long64_t(nevt / 100)`, which returns 0 if the number of events (nevt) is smaller than 100. In the [next line](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#1040) the operation `ievt % modulo` throws an Arithmetic exception error (SIGFPE) as the modulo operation is undefined for division by zero. ### What is the expected behaviour? If the number of events is smaller than 100, the progress bar can either be omitted or be printed for every event. ### How to reproduce? Run TMVA regression with a dataset that contains less than 100 events. However, the bug description should be obvious from a purely mathematical point of view. ### ROOT version. 6.26/10. ### How did you install ROOT? custom build. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13017
https://github.com/root-project/root/issues/13017:1211,deployability,instal,install,1211,"TMVARegression crashes for nevents < 100; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. In commit 18531a48df595f64251cccc44aae3625a6b0348a the printing of the progress bar when evaluating regression events was modified. Unfortunately, it didn't consider datasets with less than 100 events. The issue is that in [line 1039 of MethodBase](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#L1039) the modulo is calculated as. `Long64_t modulo = Long64_t(nevt / 100)`, which returns 0 if the number of events (nevt) is smaller than 100. In the [next line](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#1040) the operation `ievt % modulo` throws an Arithmetic exception error (SIGFPE) as the modulo operation is undefined for division by zero. ### What is the expected behaviour? If the number of events is smaller than 100, the progress bar can either be omitted or be printed for every event. ### How to reproduce? Run TMVA regression with a dataset that contains less than 100 events. However, the bug description should be obvious from a purely mathematical point of view. ### ROOT version. 6.26/10. ### How did you install ROOT? custom build. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13017
https://github.com/root-project/root/issues/13017:1232,deployability,build,build,1232,"TMVARegression crashes for nevents < 100; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. In commit 18531a48df595f64251cccc44aae3625a6b0348a the printing of the progress bar when evaluating regression events was modified. Unfortunately, it didn't consider datasets with less than 100 events. The issue is that in [line 1039 of MethodBase](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#L1039) the modulo is calculated as. `Long64_t modulo = Long64_t(nevt / 100)`, which returns 0 if the number of events (nevt) is smaller than 100. In the [next line](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#1040) the operation `ievt % modulo` throws an Arithmetic exception error (SIGFPE) as the modulo operation is undefined for division by zero. ### What is the expected behaviour? If the number of events is smaller than 100, the progress bar can either be omitted or be printed for every event. ### How to reproduce? Run TMVA regression with a dataset that contains less than 100 events. However, the bug description should be obvious from a purely mathematical point of view. ### ROOT version. 6.26/10. ### How did you install ROOT? custom build. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13017
https://github.com/root-project/root/issues/13017:233,integrability,event,events,233,"TMVARegression crashes for nevents < 100; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. In commit 18531a48df595f64251cccc44aae3625a6b0348a the printing of the progress bar when evaluating regression events was modified. Unfortunately, it didn't consider datasets with less than 100 events. The issue is that in [line 1039 of MethodBase](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#L1039) the modulo is calculated as. `Long64_t modulo = Long64_t(nevt / 100)`, which returns 0 if the number of events (nevt) is smaller than 100. In the [next line](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#1040) the operation `ievt % modulo` throws an Arithmetic exception error (SIGFPE) as the modulo operation is undefined for division by zero. ### What is the expected behaviour? If the number of events is smaller than 100, the progress bar can either be omitted or be printed for every event. ### How to reproduce? Run TMVA regression with a dataset that contains less than 100 events. However, the bug description should be obvious from a purely mathematical point of view. ### ROOT version. 6.26/10. ### How did you install ROOT? custom build. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13017
https://github.com/root-project/root/issues/13017:316,integrability,event,events,316,"TMVARegression crashes for nevents < 100; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. In commit 18531a48df595f64251cccc44aae3625a6b0348a the printing of the progress bar when evaluating regression events was modified. Unfortunately, it didn't consider datasets with less than 100 events. The issue is that in [line 1039 of MethodBase](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#L1039) the modulo is calculated as. `Long64_t modulo = Long64_t(nevt / 100)`, which returns 0 if the number of events (nevt) is smaller than 100. In the [next line](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#1040) the operation `ievt % modulo` throws an Arithmetic exception error (SIGFPE) as the modulo operation is undefined for division by zero. ### What is the expected behaviour? If the number of events is smaller than 100, the progress bar can either be omitted or be printed for every event. ### How to reproduce? Run TMVA regression with a dataset that contains less than 100 events. However, the bug description should be obvious from a purely mathematical point of view. ### ROOT version. 6.26/10. ### How did you install ROOT? custom build. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13017
https://github.com/root-project/root/issues/13017:561,integrability,event,events,561,"TMVARegression crashes for nevents < 100; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. In commit 18531a48df595f64251cccc44aae3625a6b0348a the printing of the progress bar when evaluating regression events was modified. Unfortunately, it didn't consider datasets with less than 100 events. The issue is that in [line 1039 of MethodBase](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#L1039) the modulo is calculated as. `Long64_t modulo = Long64_t(nevt / 100)`, which returns 0 if the number of events (nevt) is smaller than 100. In the [next line](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#1040) the operation `ievt % modulo` throws an Arithmetic exception error (SIGFPE) as the modulo operation is undefined for division by zero. ### What is the expected behaviour? If the number of events is smaller than 100, the progress bar can either be omitted or be printed for every event. ### How to reproduce? Run TMVA regression with a dataset that contains less than 100 events. However, the bug description should be obvious from a purely mathematical point of view. ### ROOT version. 6.26/10. ### How did you install ROOT? custom build. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13017
https://github.com/root-project/root/issues/13017:888,integrability,event,events,888,"TMVARegression crashes for nevents < 100; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. In commit 18531a48df595f64251cccc44aae3625a6b0348a the printing of the progress bar when evaluating regression events was modified. Unfortunately, it didn't consider datasets with less than 100 events. The issue is that in [line 1039 of MethodBase](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#L1039) the modulo is calculated as. `Long64_t modulo = Long64_t(nevt / 100)`, which returns 0 if the number of events (nevt) is smaller than 100. In the [next line](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#1040) the operation `ievt % modulo` throws an Arithmetic exception error (SIGFPE) as the modulo operation is undefined for division by zero. ### What is the expected behaviour? If the number of events is smaller than 100, the progress bar can either be omitted or be printed for every event. ### How to reproduce? Run TMVA regression with a dataset that contains less than 100 events. However, the bug description should be obvious from a purely mathematical point of view. ### ROOT version. 6.26/10. ### How did you install ROOT? custom build. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13017
https://github.com/root-project/root/issues/13017:979,integrability,event,event,979,"TMVARegression crashes for nevents < 100; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. In commit 18531a48df595f64251cccc44aae3625a6b0348a the printing of the progress bar when evaluating regression events was modified. Unfortunately, it didn't consider datasets with less than 100 events. The issue is that in [line 1039 of MethodBase](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#L1039) the modulo is calculated as. `Long64_t modulo = Long64_t(nevt / 100)`, which returns 0 if the number of events (nevt) is smaller than 100. In the [next line](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#1040) the operation `ievt % modulo` throws an Arithmetic exception error (SIGFPE) as the modulo operation is undefined for division by zero. ### What is the expected behaviour? If the number of events is smaller than 100, the progress bar can either be omitted or be printed for every event. ### How to reproduce? Run TMVA regression with a dataset that contains less than 100 events. However, the bug description should be obvious from a purely mathematical point of view. ### ROOT version. 6.26/10. ### How did you install ROOT? custom build. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13017
https://github.com/root-project/root/issues/13017:1071,integrability,event,events,1071,"TMVARegression crashes for nevents < 100; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. In commit 18531a48df595f64251cccc44aae3625a6b0348a the printing of the progress bar when evaluating regression events was modified. Unfortunately, it didn't consider datasets with less than 100 events. The issue is that in [line 1039 of MethodBase](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#L1039) the modulo is calculated as. `Long64_t modulo = Long64_t(nevt / 100)`, which returns 0 if the number of events (nevt) is smaller than 100. In the [next line](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#1040) the operation `ievt % modulo` throws an Arithmetic exception error (SIGFPE) as the modulo operation is undefined for division by zero. ### What is the expected behaviour? If the number of events is smaller than 100, the progress bar can either be omitted or be printed for every event. ### How to reproduce? Run TMVA regression with a dataset that contains less than 100 events. However, the bug description should be obvious from a purely mathematical point of view. ### ROOT version. 6.26/10. ### How did you install ROOT? custom build. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13017
https://github.com/root-project/root/issues/13017:1177,integrability,version,version,1177,"TMVARegression crashes for nevents < 100; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. In commit 18531a48df595f64251cccc44aae3625a6b0348a the printing of the progress bar when evaluating regression events was modified. Unfortunately, it didn't consider datasets with less than 100 events. The issue is that in [line 1039 of MethodBase](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#L1039) the modulo is calculated as. `Long64_t modulo = Long64_t(nevt / 100)`, which returns 0 if the number of events (nevt) is smaller than 100. In the [next line](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#1040) the operation `ievt % modulo` throws an Arithmetic exception error (SIGFPE) as the modulo operation is undefined for division by zero. ### What is the expected behaviour? If the number of events is smaller than 100, the progress bar can either be omitted or be printed for every event. ### How to reproduce? Run TMVA regression with a dataset that contains less than 100 events. However, the bug description should be obvious from a purely mathematical point of view. ### ROOT version. 6.26/10. ### How did you install ROOT? custom build. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13017
https://github.com/root-project/root/issues/13017:461,modifiability,modul,modulo,461,"TMVARegression crashes for nevents < 100; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. In commit 18531a48df595f64251cccc44aae3625a6b0348a the printing of the progress bar when evaluating regression events was modified. Unfortunately, it didn't consider datasets with less than 100 events. The issue is that in [line 1039 of MethodBase](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#L1039) the modulo is calculated as. `Long64_t modulo = Long64_t(nevt / 100)`, which returns 0 if the number of events (nevt) is smaller than 100. In the [next line](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#1040) the operation `ievt % modulo` throws an Arithmetic exception error (SIGFPE) as the modulo operation is undefined for division by zero. ### What is the expected behaviour? If the number of events is smaller than 100, the progress bar can either be omitted or be printed for every event. ### How to reproduce? Run TMVA regression with a dataset that contains less than 100 events. However, the bug description should be obvious from a purely mathematical point of view. ### ROOT version. 6.26/10. ### How did you install ROOT? custom build. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13017
https://github.com/root-project/root/issues/13017:496,modifiability,modul,modulo,496,"TMVARegression crashes for nevents < 100; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. In commit 18531a48df595f64251cccc44aae3625a6b0348a the printing of the progress bar when evaluating regression events was modified. Unfortunately, it didn't consider datasets with less than 100 events. The issue is that in [line 1039 of MethodBase](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#L1039) the modulo is calculated as. `Long64_t modulo = Long64_t(nevt / 100)`, which returns 0 if the number of events (nevt) is smaller than 100. In the [next line](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#1040) the operation `ievt % modulo` throws an Arithmetic exception error (SIGFPE) as the modulo operation is undefined for division by zero. ### What is the expected behaviour? If the number of events is smaller than 100, the progress bar can either be omitted or be printed for every event. ### How to reproduce? Run TMVA regression with a dataset that contains less than 100 events. However, the bug description should be obvious from a purely mathematical point of view. ### ROOT version. 6.26/10. ### How did you install ROOT? custom build. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13017
https://github.com/root-project/root/issues/13017:722,modifiability,modul,modulo,722,"TMVARegression crashes for nevents < 100; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. In commit 18531a48df595f64251cccc44aae3625a6b0348a the printing of the progress bar when evaluating regression events was modified. Unfortunately, it didn't consider datasets with less than 100 events. The issue is that in [line 1039 of MethodBase](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#L1039) the modulo is calculated as. `Long64_t modulo = Long64_t(nevt / 100)`, which returns 0 if the number of events (nevt) is smaller than 100. In the [next line](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#1040) the operation `ievt % modulo` throws an Arithmetic exception error (SIGFPE) as the modulo operation is undefined for division by zero. ### What is the expected behaviour? If the number of events is smaller than 100, the progress bar can either be omitted or be printed for every event. ### How to reproduce? Run TMVA regression with a dataset that contains less than 100 events. However, the bug description should be obvious from a purely mathematical point of view. ### ROOT version. 6.26/10. ### How did you install ROOT? custom build. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13017
https://github.com/root-project/root/issues/13017:783,modifiability,modul,modulo,783,"TMVARegression crashes for nevents < 100; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. In commit 18531a48df595f64251cccc44aae3625a6b0348a the printing of the progress bar when evaluating regression events was modified. Unfortunately, it didn't consider datasets with less than 100 events. The issue is that in [line 1039 of MethodBase](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#L1039) the modulo is calculated as. `Long64_t modulo = Long64_t(nevt / 100)`, which returns 0 if the number of events (nevt) is smaller than 100. In the [next line](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#1040) the operation `ievt % modulo` throws an Arithmetic exception error (SIGFPE) as the modulo operation is undefined for division by zero. ### What is the expected behaviour? If the number of events is smaller than 100, the progress bar can either be omitted or be printed for every event. ### How to reproduce? Run TMVA regression with a dataset that contains less than 100 events. However, the bug description should be obvious from a purely mathematical point of view. ### ROOT version. 6.26/10. ### How did you install ROOT? custom build. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13017
https://github.com/root-project/root/issues/13017:1177,modifiability,version,version,1177,"TMVARegression crashes for nevents < 100; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. In commit 18531a48df595f64251cccc44aae3625a6b0348a the printing of the progress bar when evaluating regression events was modified. Unfortunately, it didn't consider datasets with less than 100 events. The issue is that in [line 1039 of MethodBase](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#L1039) the modulo is calculated as. `Long64_t modulo = Long64_t(nevt / 100)`, which returns 0 if the number of events (nevt) is smaller than 100. In the [next line](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#1040) the operation `ievt % modulo` throws an Arithmetic exception error (SIGFPE) as the modulo operation is undefined for division by zero. ### What is the expected behaviour? If the number of events is smaller than 100, the progress bar can either be omitted or be printed for every event. ### How to reproduce? Run TMVA regression with a dataset that contains less than 100 events. However, the bug description should be obvious from a purely mathematical point of view. ### ROOT version. 6.26/10. ### How did you install ROOT? custom build. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13017
https://github.com/root-project/root/issues/13017:761,performance,error,error,761,"TMVARegression crashes for nevents < 100; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. In commit 18531a48df595f64251cccc44aae3625a6b0348a the printing of the progress bar when evaluating regression events was modified. Unfortunately, it didn't consider datasets with less than 100 events. The issue is that in [line 1039 of MethodBase](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#L1039) the modulo is calculated as. `Long64_t modulo = Long64_t(nevt / 100)`, which returns 0 if the number of events (nevt) is smaller than 100. In the [next line](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#1040) the operation `ievt % modulo` throws an Arithmetic exception error (SIGFPE) as the modulo operation is undefined for division by zero. ### What is the expected behaviour? If the number of events is smaller than 100, the progress bar can either be omitted or be printed for every event. ### How to reproduce? Run TMVA regression with a dataset that contains less than 100 events. However, the bug description should be obvious from a purely mathematical point of view. ### ROOT version. 6.26/10. ### How did you install ROOT? custom build. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13017
https://github.com/root-project/root/issues/13017:461,safety,modul,modulo,461,"TMVARegression crashes for nevents < 100; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. In commit 18531a48df595f64251cccc44aae3625a6b0348a the printing of the progress bar when evaluating regression events was modified. Unfortunately, it didn't consider datasets with less than 100 events. The issue is that in [line 1039 of MethodBase](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#L1039) the modulo is calculated as. `Long64_t modulo = Long64_t(nevt / 100)`, which returns 0 if the number of events (nevt) is smaller than 100. In the [next line](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#1040) the operation `ievt % modulo` throws an Arithmetic exception error (SIGFPE) as the modulo operation is undefined for division by zero. ### What is the expected behaviour? If the number of events is smaller than 100, the progress bar can either be omitted or be printed for every event. ### How to reproduce? Run TMVA regression with a dataset that contains less than 100 events. However, the bug description should be obvious from a purely mathematical point of view. ### ROOT version. 6.26/10. ### How did you install ROOT? custom build. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13017
https://github.com/root-project/root/issues/13017:496,safety,modul,modulo,496,"TMVARegression crashes for nevents < 100; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. In commit 18531a48df595f64251cccc44aae3625a6b0348a the printing of the progress bar when evaluating regression events was modified. Unfortunately, it didn't consider datasets with less than 100 events. The issue is that in [line 1039 of MethodBase](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#L1039) the modulo is calculated as. `Long64_t modulo = Long64_t(nevt / 100)`, which returns 0 if the number of events (nevt) is smaller than 100. In the [next line](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#1040) the operation `ievt % modulo` throws an Arithmetic exception error (SIGFPE) as the modulo operation is undefined for division by zero. ### What is the expected behaviour? If the number of events is smaller than 100, the progress bar can either be omitted or be printed for every event. ### How to reproduce? Run TMVA regression with a dataset that contains less than 100 events. However, the bug description should be obvious from a purely mathematical point of view. ### ROOT version. 6.26/10. ### How did you install ROOT? custom build. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13017
https://github.com/root-project/root/issues/13017:722,safety,modul,modulo,722,"TMVARegression crashes for nevents < 100; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. In commit 18531a48df595f64251cccc44aae3625a6b0348a the printing of the progress bar when evaluating regression events was modified. Unfortunately, it didn't consider datasets with less than 100 events. The issue is that in [line 1039 of MethodBase](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#L1039) the modulo is calculated as. `Long64_t modulo = Long64_t(nevt / 100)`, which returns 0 if the number of events (nevt) is smaller than 100. In the [next line](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#1040) the operation `ievt % modulo` throws an Arithmetic exception error (SIGFPE) as the modulo operation is undefined for division by zero. ### What is the expected behaviour? If the number of events is smaller than 100, the progress bar can either be omitted or be printed for every event. ### How to reproduce? Run TMVA regression with a dataset that contains less than 100 events. However, the bug description should be obvious from a purely mathematical point of view. ### ROOT version. 6.26/10. ### How did you install ROOT? custom build. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13017
https://github.com/root-project/root/issues/13017:751,safety,except,exception,751,"TMVARegression crashes for nevents < 100; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. In commit 18531a48df595f64251cccc44aae3625a6b0348a the printing of the progress bar when evaluating regression events was modified. Unfortunately, it didn't consider datasets with less than 100 events. The issue is that in [line 1039 of MethodBase](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#L1039) the modulo is calculated as. `Long64_t modulo = Long64_t(nevt / 100)`, which returns 0 if the number of events (nevt) is smaller than 100. In the [next line](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#1040) the operation `ievt % modulo` throws an Arithmetic exception error (SIGFPE) as the modulo operation is undefined for division by zero. ### What is the expected behaviour? If the number of events is smaller than 100, the progress bar can either be omitted or be printed for every event. ### How to reproduce? Run TMVA regression with a dataset that contains less than 100 events. However, the bug description should be obvious from a purely mathematical point of view. ### ROOT version. 6.26/10. ### How did you install ROOT? custom build. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13017
https://github.com/root-project/root/issues/13017:761,safety,error,error,761,"TMVARegression crashes for nevents < 100; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. In commit 18531a48df595f64251cccc44aae3625a6b0348a the printing of the progress bar when evaluating regression events was modified. Unfortunately, it didn't consider datasets with less than 100 events. The issue is that in [line 1039 of MethodBase](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#L1039) the modulo is calculated as. `Long64_t modulo = Long64_t(nevt / 100)`, which returns 0 if the number of events (nevt) is smaller than 100. In the [next line](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#1040) the operation `ievt % modulo` throws an Arithmetic exception error (SIGFPE) as the modulo operation is undefined for division by zero. ### What is the expected behaviour? If the number of events is smaller than 100, the progress bar can either be omitted or be printed for every event. ### How to reproduce? Run TMVA regression with a dataset that contains less than 100 events. However, the bug description should be obvious from a purely mathematical point of view. ### ROOT version. 6.26/10. ### How did you install ROOT? custom build. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13017
https://github.com/root-project/root/issues/13017:783,safety,modul,modulo,783,"TMVARegression crashes for nevents < 100; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. In commit 18531a48df595f64251cccc44aae3625a6b0348a the printing of the progress bar when evaluating regression events was modified. Unfortunately, it didn't consider datasets with less than 100 events. The issue is that in [line 1039 of MethodBase](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#L1039) the modulo is calculated as. `Long64_t modulo = Long64_t(nevt / 100)`, which returns 0 if the number of events (nevt) is smaller than 100. In the [next line](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#1040) the operation `ievt % modulo` throws an Arithmetic exception error (SIGFPE) as the modulo operation is undefined for division by zero. ### What is the expected behaviour? If the number of events is smaller than 100, the progress bar can either be omitted or be printed for every event. ### How to reproduce? Run TMVA regression with a dataset that contains less than 100 events. However, the bug description should be obvious from a purely mathematical point of view. ### ROOT version. 6.26/10. ### How did you install ROOT? custom build. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13017
https://github.com/root-project/root/issues/13017:244,security,modif,modified,244,"TMVARegression crashes for nevents < 100; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. In commit 18531a48df595f64251cccc44aae3625a6b0348a the printing of the progress bar when evaluating regression events was modified. Unfortunately, it didn't consider datasets with less than 100 events. The issue is that in [line 1039 of MethodBase](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#L1039) the modulo is calculated as. `Long64_t modulo = Long64_t(nevt / 100)`, which returns 0 if the number of events (nevt) is smaller than 100. In the [next line](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#1040) the operation `ievt % modulo` throws an Arithmetic exception error (SIGFPE) as the modulo operation is undefined for division by zero. ### What is the expected behaviour? If the number of events is smaller than 100, the progress bar can either be omitted or be printed for every event. ### How to reproduce? Run TMVA regression with a dataset that contains less than 100 events. However, the bug description should be obvious from a purely mathematical point of view. ### ROOT version. 6.26/10. ### How did you install ROOT? custom build. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13017
https://github.com/root-project/root/issues/13017:222,testability,regress,regression,222,"TMVARegression crashes for nevents < 100; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. In commit 18531a48df595f64251cccc44aae3625a6b0348a the printing of the progress bar when evaluating regression events was modified. Unfortunately, it didn't consider datasets with less than 100 events. The issue is that in [line 1039 of MethodBase](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#L1039) the modulo is calculated as. `Long64_t modulo = Long64_t(nevt / 100)`, which returns 0 if the number of events (nevt) is smaller than 100. In the [next line](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#1040) the operation `ievt % modulo` throws an Arithmetic exception error (SIGFPE) as the modulo operation is undefined for division by zero. ### What is the expected behaviour? If the number of events is smaller than 100, the progress bar can either be omitted or be printed for every event. ### How to reproduce? Run TMVA regression with a dataset that contains less than 100 events. However, the bug description should be obvious from a purely mathematical point of view. ### ROOT version. 6.26/10. ### How did you install ROOT? custom build. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13017
https://github.com/root-project/root/issues/13017:1017,testability,regress,regression,1017,"TMVARegression crashes for nevents < 100; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. In commit 18531a48df595f64251cccc44aae3625a6b0348a the printing of the progress bar when evaluating regression events was modified. Unfortunately, it didn't consider datasets with less than 100 events. The issue is that in [line 1039 of MethodBase](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#L1039) the modulo is calculated as. `Long64_t modulo = Long64_t(nevt / 100)`, which returns 0 if the number of events (nevt) is smaller than 100. In the [next line](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#1040) the operation `ievt % modulo` throws an Arithmetic exception error (SIGFPE) as the modulo operation is undefined for division by zero. ### What is the expected behaviour? If the number of events is smaller than 100, the progress bar can either be omitted or be printed for every event. ### How to reproduce? Run TMVA regression with a dataset that contains less than 100 events. However, the bug description should be obvious from a purely mathematical point of view. ### ROOT version. 6.26/10. ### How did you install ROOT? custom build. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13017
https://github.com/root-project/root/issues/13017:1303,testability,context,context,1303,"TMVARegression crashes for nevents < 100; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. In commit 18531a48df595f64251cccc44aae3625a6b0348a the printing of the progress bar when evaluating regression events was modified. Unfortunately, it didn't consider datasets with less than 100 events. The issue is that in [line 1039 of MethodBase](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#L1039) the modulo is calculated as. `Long64_t modulo = Long64_t(nevt / 100)`, which returns 0 if the number of events (nevt) is smaller than 100. In the [next line](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#1040) the operation `ievt % modulo` throws an Arithmetic exception error (SIGFPE) as the modulo operation is undefined for division by zero. ### What is the expected behaviour? If the number of events is smaller than 100, the progress bar can either be omitted or be printed for every event. ### How to reproduce? Run TMVA regression with a dataset that contains less than 100 events. However, the bug description should be obvious from a purely mathematical point of view. ### ROOT version. 6.26/10. ### How did you install ROOT? custom build. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13017
https://github.com/root-project/root/issues/13017:193,usability,progress,progress,193,"TMVARegression crashes for nevents < 100; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. In commit 18531a48df595f64251cccc44aae3625a6b0348a the printing of the progress bar when evaluating regression events was modified. Unfortunately, it didn't consider datasets with less than 100 events. The issue is that in [line 1039 of MethodBase](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#L1039) the modulo is calculated as. `Long64_t modulo = Long64_t(nevt / 100)`, which returns 0 if the number of events (nevt) is smaller than 100. In the [next line](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#1040) the operation `ievt % modulo` throws an Arithmetic exception error (SIGFPE) as the modulo operation is undefined for division by zero. ### What is the expected behaviour? If the number of events is smaller than 100, the progress bar can either be omitted or be printed for every event. ### How to reproduce? Run TMVA regression with a dataset that contains less than 100 events. However, the bug description should be obvious from a purely mathematical point of view. ### ROOT version. 6.26/10. ### How did you install ROOT? custom build. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13017
https://github.com/root-project/root/issues/13017:761,usability,error,error,761,"TMVARegression crashes for nevents < 100; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. In commit 18531a48df595f64251cccc44aae3625a6b0348a the printing of the progress bar when evaluating regression events was modified. Unfortunately, it didn't consider datasets with less than 100 events. The issue is that in [line 1039 of MethodBase](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#L1039) the modulo is calculated as. `Long64_t modulo = Long64_t(nevt / 100)`, which returns 0 if the number of events (nevt) is smaller than 100. In the [next line](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#1040) the operation `ievt % modulo` throws an Arithmetic exception error (SIGFPE) as the modulo operation is undefined for division by zero. ### What is the expected behaviour? If the number of events is smaller than 100, the progress bar can either be omitted or be printed for every event. ### How to reproduce? Run TMVA regression with a dataset that contains less than 100 events. However, the bug description should be obvious from a purely mathematical point of view. ### ROOT version. 6.26/10. ### How did you install ROOT? custom build. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13017
https://github.com/root-project/root/issues/13017:860,usability,behavi,behaviour,860,"TMVARegression crashes for nevents < 100; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. In commit 18531a48df595f64251cccc44aae3625a6b0348a the printing of the progress bar when evaluating regression events was modified. Unfortunately, it didn't consider datasets with less than 100 events. The issue is that in [line 1039 of MethodBase](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#L1039) the modulo is calculated as. `Long64_t modulo = Long64_t(nevt / 100)`, which returns 0 if the number of events (nevt) is smaller than 100. In the [next line](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#1040) the operation `ievt % modulo` throws an Arithmetic exception error (SIGFPE) as the modulo operation is undefined for division by zero. ### What is the expected behaviour? If the number of events is smaller than 100, the progress bar can either be omitted or be printed for every event. ### How to reproduce? Run TMVA regression with a dataset that contains less than 100 events. However, the bug description should be obvious from a purely mathematical point of view. ### ROOT version. 6.26/10. ### How did you install ROOT? custom build. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13017
https://github.com/root-project/root/issues/13017:920,usability,progress,progress,920,"TMVARegression crashes for nevents < 100; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. In commit 18531a48df595f64251cccc44aae3625a6b0348a the printing of the progress bar when evaluating regression events was modified. Unfortunately, it didn't consider datasets with less than 100 events. The issue is that in [line 1039 of MethodBase](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#L1039) the modulo is calculated as. `Long64_t modulo = Long64_t(nevt / 100)`, which returns 0 if the number of events (nevt) is smaller than 100. In the [next line](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#1040) the operation `ievt % modulo` throws an Arithmetic exception error (SIGFPE) as the modulo operation is undefined for division by zero. ### What is the expected behaviour? If the number of events is smaller than 100, the progress bar can either be omitted or be printed for every event. ### How to reproduce? Run TMVA regression with a dataset that contains less than 100 events. However, the bug description should be obvious from a purely mathematical point of view. ### ROOT version. 6.26/10. ### How did you install ROOT? custom build. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13017
https://github.com/root-project/root/issues/13017:1225,usability,custom,custom,1225,"TMVARegression crashes for nevents < 100; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. In commit 18531a48df595f64251cccc44aae3625a6b0348a the printing of the progress bar when evaluating regression events was modified. Unfortunately, it didn't consider datasets with less than 100 events. The issue is that in [line 1039 of MethodBase](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#L1039) the modulo is calculated as. `Long64_t modulo = Long64_t(nevt / 100)`, which returns 0 if the number of events (nevt) is smaller than 100. In the [next line](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#1040) the operation `ievt % modulo` throws an Arithmetic exception error (SIGFPE) as the modulo operation is undefined for division by zero. ### What is the expected behaviour? If the number of events is smaller than 100, the progress bar can either be omitted or be printed for every event. ### How to reproduce? Run TMVA regression with a dataset that contains less than 100 events. However, the bug description should be obvious from a purely mathematical point of view. ### ROOT version. 6.26/10. ### How did you install ROOT? custom build. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13017
https://github.com/root-project/root/issues/13018:0,availability,Slo,Slow,0,"Slow reads via HTTP from EOS; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It was reported at https://root-forum.cern.ch/t/reading-from-http-very-slow/53213 that reading a file via HTTP from EOS with ROOT takes much longer than simply downloading that file with wget. From the original report,. ```. root -l https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root [0] Electrons_All->Draw(""pt__NOSYS""). ```. takes ~5 minutes (although the tree is very small, ~60k events, 4MB in total). while. ```. wget https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root -l test_ntuples_200123.root . ```. takes 0.6s. ### What is the expected behaviour? _No response_. ### How to reproduce? See original report. ### ROOT version. 6.26.10. ### How did you install ROOT? Does not matter. ### Which operating system are you using? Linux. ### Additional context. Discussion on SNOW with the EOS folks at https://cern.service-now.com/service-portal?id=ticket&table=u_request_fulfillment&n=RQF2315805 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13018
https://github.com/root-project/root/issues/13018:181,availability,slo,slow,181,"Slow reads via HTTP from EOS; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It was reported at https://root-forum.cern.ch/t/reading-from-http-very-slow/53213 that reading a file via HTTP from EOS with ROOT takes much longer than simply downloading that file with wget. From the original report,. ```. root -l https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root [0] Electrons_All->Draw(""pt__NOSYS""). ```. takes ~5 minutes (although the tree is very small, ~60k events, 4MB in total). while. ```. wget https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root -l test_ntuples_200123.root . ```. takes 0.6s. ### What is the expected behaviour? _No response_. ### How to reproduce? See original report. ### ROOT version. 6.26.10. ### How did you install ROOT? Does not matter. ### Which operating system are you using? Linux. ### Additional context. Discussion on SNOW with the EOS folks at https://cern.service-now.com/service-portal?id=ticket&table=u_request_fulfillment&n=RQF2315805 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13018
https://github.com/root-project/root/issues/13018:270,availability,down,downloading,270,"Slow reads via HTTP from EOS; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It was reported at https://root-forum.cern.ch/t/reading-from-http-very-slow/53213 that reading a file via HTTP from EOS with ROOT takes much longer than simply downloading that file with wget. From the original report,. ```. root -l https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root [0] Electrons_All->Draw(""pt__NOSYS""). ```. takes ~5 minutes (although the tree is very small, ~60k events, 4MB in total). while. ```. wget https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root -l test_ntuples_200123.root . ```. takes 0.6s. ### What is the expected behaviour? _No response_. ### How to reproduce? See original report. ### ROOT version. 6.26.10. ### How did you install ROOT? Does not matter. ### Which operating system are you using? Linux. ### Additional context. Discussion on SNOW with the EOS folks at https://cern.service-now.com/service-portal?id=ticket&table=u_request_fulfillment&n=RQF2315805 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13018
https://github.com/root-project/root/issues/13018:905,availability,operat,operating,905,"Slow reads via HTTP from EOS; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It was reported at https://root-forum.cern.ch/t/reading-from-http-very-slow/53213 that reading a file via HTTP from EOS with ROOT takes much longer than simply downloading that file with wget. From the original report,. ```. root -l https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root [0] Electrons_All->Draw(""pt__NOSYS""). ```. takes ~5 minutes (although the tree is very small, ~60k events, 4MB in total). while. ```. wget https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root -l test_ntuples_200123.root . ```. takes 0.6s. ### What is the expected behaviour? _No response_. ### How to reproduce? See original report. ### ROOT version. 6.26.10. ### How did you install ROOT? Does not matter. ### Which operating system are you using? Linux. ### Additional context. Discussion on SNOW with the EOS folks at https://cern.service-now.com/service-portal?id=ticket&table=u_request_fulfillment&n=RQF2315805 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13018
https://github.com/root-project/root/issues/13018:1022,availability,servic,service-now,1022,"Slow reads via HTTP from EOS; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It was reported at https://root-forum.cern.ch/t/reading-from-http-very-slow/53213 that reading a file via HTTP from EOS with ROOT takes much longer than simply downloading that file with wget. From the original report,. ```. root -l https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root [0] Electrons_All->Draw(""pt__NOSYS""). ```. takes ~5 minutes (although the tree is very small, ~60k events, 4MB in total). while. ```. wget https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root -l test_ntuples_200123.root . ```. takes 0.6s. ### What is the expected behaviour? _No response_. ### How to reproduce? See original report. ### ROOT version. 6.26.10. ### How did you install ROOT? Does not matter. ### Which operating system are you using? Linux. ### Additional context. Discussion on SNOW with the EOS folks at https://cern.service-now.com/service-portal?id=ticket&table=u_request_fulfillment&n=RQF2315805 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13018
https://github.com/root-project/root/issues/13018:1038,availability,servic,service-portal,1038,"Slow reads via HTTP from EOS; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It was reported at https://root-forum.cern.ch/t/reading-from-http-very-slow/53213 that reading a file via HTTP from EOS with ROOT takes much longer than simply downloading that file with wget. From the original report,. ```. root -l https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root [0] Electrons_All->Draw(""pt__NOSYS""). ```. takes ~5 minutes (although the tree is very small, ~60k events, 4MB in total). while. ```. wget https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root -l test_ntuples_200123.root . ```. takes 0.6s. ### What is the expected behaviour? _No response_. ### How to reproduce? See original report. ### ROOT version. 6.26.10. ### How did you install ROOT? Does not matter. ### Which operating system are you using? Linux. ### Additional context. Discussion on SNOW with the EOS folks at https://cern.service-now.com/service-portal?id=ticket&table=u_request_fulfillment&n=RQF2315805 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13018
https://github.com/root-project/root/issues/13018:830,deployability,version,version,830,"Slow reads via HTTP from EOS; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It was reported at https://root-forum.cern.ch/t/reading-from-http-very-slow/53213 that reading a file via HTTP from EOS with ROOT takes much longer than simply downloading that file with wget. From the original report,. ```. root -l https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root [0] Electrons_All->Draw(""pt__NOSYS""). ```. takes ~5 minutes (although the tree is very small, ~60k events, 4MB in total). while. ```. wget https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root -l test_ntuples_200123.root . ```. takes 0.6s. ### What is the expected behaviour? _No response_. ### How to reproduce? See original report. ### ROOT version. 6.26.10. ### How did you install ROOT? Does not matter. ### Which operating system are you using? Linux. ### Additional context. Discussion on SNOW with the EOS folks at https://cern.service-now.com/service-portal?id=ticket&table=u_request_fulfillment&n=RQF2315805 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13018
https://github.com/root-project/root/issues/13018:864,deployability,instal,install,864,"Slow reads via HTTP from EOS; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It was reported at https://root-forum.cern.ch/t/reading-from-http-very-slow/53213 that reading a file via HTTP from EOS with ROOT takes much longer than simply downloading that file with wget. From the original report,. ```. root -l https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root [0] Electrons_All->Draw(""pt__NOSYS""). ```. takes ~5 minutes (although the tree is very small, ~60k events, 4MB in total). while. ```. wget https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root -l test_ntuples_200123.root . ```. takes 0.6s. ### What is the expected behaviour? _No response_. ### How to reproduce? See original report. ### ROOT version. 6.26.10. ### How did you install ROOT? Does not matter. ### Which operating system are you using? Linux. ### Additional context. Discussion on SNOW with the EOS folks at https://cern.service-now.com/service-portal?id=ticket&table=u_request_fulfillment&n=RQF2315805 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13018
https://github.com/root-project/root/issues/13018:1022,deployability,servic,service-now,1022,"Slow reads via HTTP from EOS; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It was reported at https://root-forum.cern.ch/t/reading-from-http-very-slow/53213 that reading a file via HTTP from EOS with ROOT takes much longer than simply downloading that file with wget. From the original report,. ```. root -l https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root [0] Electrons_All->Draw(""pt__NOSYS""). ```. takes ~5 minutes (although the tree is very small, ~60k events, 4MB in total). while. ```. wget https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root -l test_ntuples_200123.root . ```. takes 0.6s. ### What is the expected behaviour? _No response_. ### How to reproduce? See original report. ### ROOT version. 6.26.10. ### How did you install ROOT? Does not matter. ### Which operating system are you using? Linux. ### Additional context. Discussion on SNOW with the EOS folks at https://cern.service-now.com/service-portal?id=ticket&table=u_request_fulfillment&n=RQF2315805 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13018
https://github.com/root-project/root/issues/13018:1038,deployability,servic,service-portal,1038,"Slow reads via HTTP from EOS; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It was reported at https://root-forum.cern.ch/t/reading-from-http-very-slow/53213 that reading a file via HTTP from EOS with ROOT takes much longer than simply downloading that file with wget. From the original report,. ```. root -l https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root [0] Electrons_All->Draw(""pt__NOSYS""). ```. takes ~5 minutes (although the tree is very small, ~60k events, 4MB in total). while. ```. wget https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root -l test_ntuples_200123.root . ```. takes 0.6s. ### What is the expected behaviour? _No response_. ### How to reproduce? See original report. ### ROOT version. 6.26.10. ### How did you install ROOT? Does not matter. ### Which operating system are you using? Linux. ### Additional context. Discussion on SNOW with the EOS folks at https://cern.service-now.com/service-portal?id=ticket&table=u_request_fulfillment&n=RQF2315805 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13018
https://github.com/root-project/root/issues/13018:461,energy efficiency,Draw,Draw,461,"Slow reads via HTTP from EOS; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It was reported at https://root-forum.cern.ch/t/reading-from-http-very-slow/53213 that reading a file via HTTP from EOS with ROOT takes much longer than simply downloading that file with wget. From the original report,. ```. root -l https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root [0] Electrons_All->Draw(""pt__NOSYS""). ```. takes ~5 minutes (although the tree is very small, ~60k events, 4MB in total). while. ```. wget https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root -l test_ntuples_200123.root . ```. takes 0.6s. ### What is the expected behaviour? _No response_. ### How to reproduce? See original report. ### ROOT version. 6.26.10. ### How did you install ROOT? Does not matter. ### Which operating system are you using? Linux. ### Additional context. Discussion on SNOW with the EOS folks at https://cern.service-now.com/service-portal?id=ticket&table=u_request_fulfillment&n=RQF2315805 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13018
https://github.com/root-project/root/issues/13018:382,integrability,pub,public-files,382,"Slow reads via HTTP from EOS; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It was reported at https://root-forum.cern.ch/t/reading-from-http-very-slow/53213 that reading a file via HTTP from EOS with ROOT takes much longer than simply downloading that file with wget. From the original report,. ```. root -l https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root [0] Electrons_All->Draw(""pt__NOSYS""). ```. takes ~5 minutes (although the tree is very small, ~60k events, 4MB in total). while. ```. wget https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root -l test_ntuples_200123.root . ```. takes 0.6s. ### What is the expected behaviour? _No response_. ### How to reproduce? See original report. ### ROOT version. 6.26.10. ### How did you install ROOT? Does not matter. ### Which operating system are you using? Linux. ### Additional context. Discussion on SNOW with the EOS folks at https://cern.service-now.com/service-portal?id=ticket&table=u_request_fulfillment&n=RQF2315805 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13018
https://github.com/root-project/root/issues/13018:541,integrability,event,events,541,"Slow reads via HTTP from EOS; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It was reported at https://root-forum.cern.ch/t/reading-from-http-very-slow/53213 that reading a file via HTTP from EOS with ROOT takes much longer than simply downloading that file with wget. From the original report,. ```. root -l https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root [0] Electrons_All->Draw(""pt__NOSYS""). ```. takes ~5 minutes (although the tree is very small, ~60k events, 4MB in total). while. ```. wget https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root -l test_ntuples_200123.root . ```. takes 0.6s. ### What is the expected behaviour? _No response_. ### How to reproduce? See original report. ### ROOT version. 6.26.10. ### How did you install ROOT? Does not matter. ### Which operating system are you using? Linux. ### Additional context. Discussion on SNOW with the EOS folks at https://cern.service-now.com/service-portal?id=ticket&table=u_request_fulfillment&n=RQF2315805 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13018
https://github.com/root-project/root/issues/13018:620,integrability,pub,public-files,620,"Slow reads via HTTP from EOS; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It was reported at https://root-forum.cern.ch/t/reading-from-http-very-slow/53213 that reading a file via HTTP from EOS with ROOT takes much longer than simply downloading that file with wget. From the original report,. ```. root -l https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root [0] Electrons_All->Draw(""pt__NOSYS""). ```. takes ~5 minutes (although the tree is very small, ~60k events, 4MB in total). while. ```. wget https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root -l test_ntuples_200123.root . ```. takes 0.6s. ### What is the expected behaviour? _No response_. ### How to reproduce? See original report. ### ROOT version. 6.26.10. ### How did you install ROOT? Does not matter. ### Which operating system are you using? Linux. ### Additional context. Discussion on SNOW with the EOS folks at https://cern.service-now.com/service-portal?id=ticket&table=u_request_fulfillment&n=RQF2315805 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13018
https://github.com/root-project/root/issues/13018:830,integrability,version,version,830,"Slow reads via HTTP from EOS; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It was reported at https://root-forum.cern.ch/t/reading-from-http-very-slow/53213 that reading a file via HTTP from EOS with ROOT takes much longer than simply downloading that file with wget. From the original report,. ```. root -l https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root [0] Electrons_All->Draw(""pt__NOSYS""). ```. takes ~5 minutes (although the tree is very small, ~60k events, 4MB in total). while. ```. wget https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root -l test_ntuples_200123.root . ```. takes 0.6s. ### What is the expected behaviour? _No response_. ### How to reproduce? See original report. ### ROOT version. 6.26.10. ### How did you install ROOT? Does not matter. ### Which operating system are you using? Linux. ### Additional context. Discussion on SNOW with the EOS folks at https://cern.service-now.com/service-portal?id=ticket&table=u_request_fulfillment&n=RQF2315805 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13018
https://github.com/root-project/root/issues/13018:1022,integrability,servic,service-now,1022,"Slow reads via HTTP from EOS; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It was reported at https://root-forum.cern.ch/t/reading-from-http-very-slow/53213 that reading a file via HTTP from EOS with ROOT takes much longer than simply downloading that file with wget. From the original report,. ```. root -l https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root [0] Electrons_All->Draw(""pt__NOSYS""). ```. takes ~5 minutes (although the tree is very small, ~60k events, 4MB in total). while. ```. wget https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root -l test_ntuples_200123.root . ```. takes 0.6s. ### What is the expected behaviour? _No response_. ### How to reproduce? See original report. ### ROOT version. 6.26.10. ### How did you install ROOT? Does not matter. ### Which operating system are you using? Linux. ### Additional context. Discussion on SNOW with the EOS folks at https://cern.service-now.com/service-portal?id=ticket&table=u_request_fulfillment&n=RQF2315805 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13018
https://github.com/root-project/root/issues/13018:1038,integrability,servic,service-portal,1038,"Slow reads via HTTP from EOS; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It was reported at https://root-forum.cern.ch/t/reading-from-http-very-slow/53213 that reading a file via HTTP from EOS with ROOT takes much longer than simply downloading that file with wget. From the original report,. ```. root -l https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root [0] Electrons_All->Draw(""pt__NOSYS""). ```. takes ~5 minutes (although the tree is very small, ~60k events, 4MB in total). while. ```. wget https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root -l test_ntuples_200123.root . ```. takes 0.6s. ### What is the expected behaviour? _No response_. ### How to reproduce? See original report. ### ROOT version. 6.26.10. ### How did you install ROOT? Does not matter. ### Which operating system are you using? Linux. ### Additional context. Discussion on SNOW with the EOS folks at https://cern.service-now.com/service-portal?id=ticket&table=u_request_fulfillment&n=RQF2315805 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13018
https://github.com/root-project/root/issues/13018:830,modifiability,version,version,830,"Slow reads via HTTP from EOS; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It was reported at https://root-forum.cern.ch/t/reading-from-http-very-slow/53213 that reading a file via HTTP from EOS with ROOT takes much longer than simply downloading that file with wget. From the original report,. ```. root -l https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root [0] Electrons_All->Draw(""pt__NOSYS""). ```. takes ~5 minutes (although the tree is very small, ~60k events, 4MB in total). while. ```. wget https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root -l test_ntuples_200123.root . ```. takes 0.6s. ### What is the expected behaviour? _No response_. ### How to reproduce? See original report. ### ROOT version. 6.26.10. ### How did you install ROOT? Does not matter. ### Which operating system are you using? Linux. ### Additional context. Discussion on SNOW with the EOS folks at https://cern.service-now.com/service-portal?id=ticket&table=u_request_fulfillment&n=RQF2315805 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13018
https://github.com/root-project/root/issues/13018:1022,modifiability,servic,service-now,1022,"Slow reads via HTTP from EOS; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It was reported at https://root-forum.cern.ch/t/reading-from-http-very-slow/53213 that reading a file via HTTP from EOS with ROOT takes much longer than simply downloading that file with wget. From the original report,. ```. root -l https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root [0] Electrons_All->Draw(""pt__NOSYS""). ```. takes ~5 minutes (although the tree is very small, ~60k events, 4MB in total). while. ```. wget https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root -l test_ntuples_200123.root . ```. takes 0.6s. ### What is the expected behaviour? _No response_. ### How to reproduce? See original report. ### ROOT version. 6.26.10. ### How did you install ROOT? Does not matter. ### Which operating system are you using? Linux. ### Additional context. Discussion on SNOW with the EOS folks at https://cern.service-now.com/service-portal?id=ticket&table=u_request_fulfillment&n=RQF2315805 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13018
https://github.com/root-project/root/issues/13018:1038,modifiability,servic,service-portal,1038,"Slow reads via HTTP from EOS; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It was reported at https://root-forum.cern.ch/t/reading-from-http-very-slow/53213 that reading a file via HTTP from EOS with ROOT takes much longer than simply downloading that file with wget. From the original report,. ```. root -l https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root [0] Electrons_All->Draw(""pt__NOSYS""). ```. takes ~5 minutes (although the tree is very small, ~60k events, 4MB in total). while. ```. wget https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root -l test_ntuples_200123.root . ```. takes 0.6s. ### What is the expected behaviour? _No response_. ### How to reproduce? See original report. ### ROOT version. 6.26.10. ### How did you install ROOT? Does not matter. ### Which operating system are you using? Linux. ### Additional context. Discussion on SNOW with the EOS folks at https://cern.service-now.com/service-portal?id=ticket&table=u_request_fulfillment&n=RQF2315805 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13018
https://github.com/root-project/root/issues/13018:0,reliability,Slo,Slow,0,"Slow reads via HTTP from EOS; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It was reported at https://root-forum.cern.ch/t/reading-from-http-very-slow/53213 that reading a file via HTTP from EOS with ROOT takes much longer than simply downloading that file with wget. From the original report,. ```. root -l https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root [0] Electrons_All->Draw(""pt__NOSYS""). ```. takes ~5 minutes (although the tree is very small, ~60k events, 4MB in total). while. ```. wget https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root -l test_ntuples_200123.root . ```. takes 0.6s. ### What is the expected behaviour? _No response_. ### How to reproduce? See original report. ### ROOT version. 6.26.10. ### How did you install ROOT? Does not matter. ### Which operating system are you using? Linux. ### Additional context. Discussion on SNOW with the EOS folks at https://cern.service-now.com/service-portal?id=ticket&table=u_request_fulfillment&n=RQF2315805 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13018
https://github.com/root-project/root/issues/13018:181,reliability,slo,slow,181,"Slow reads via HTTP from EOS; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It was reported at https://root-forum.cern.ch/t/reading-from-http-very-slow/53213 that reading a file via HTTP from EOS with ROOT takes much longer than simply downloading that file with wget. From the original report,. ```. root -l https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root [0] Electrons_All->Draw(""pt__NOSYS""). ```. takes ~5 minutes (although the tree is very small, ~60k events, 4MB in total). while. ```. wget https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root -l test_ntuples_200123.root . ```. takes 0.6s. ### What is the expected behaviour? _No response_. ### How to reproduce? See original report. ### ROOT version. 6.26.10. ### How did you install ROOT? Does not matter. ### Which operating system are you using? Linux. ### Additional context. Discussion on SNOW with the EOS folks at https://cern.service-now.com/service-portal?id=ticket&table=u_request_fulfillment&n=RQF2315805 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13018
https://github.com/root-project/root/issues/13018:878,reliability,Doe,Does,878,"Slow reads via HTTP from EOS; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It was reported at https://root-forum.cern.ch/t/reading-from-http-very-slow/53213 that reading a file via HTTP from EOS with ROOT takes much longer than simply downloading that file with wget. From the original report,. ```. root -l https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root [0] Electrons_All->Draw(""pt__NOSYS""). ```. takes ~5 minutes (although the tree is very small, ~60k events, 4MB in total). while. ```. wget https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root -l test_ntuples_200123.root . ```. takes 0.6s. ### What is the expected behaviour? _No response_. ### How to reproduce? See original report. ### ROOT version. 6.26.10. ### How did you install ROOT? Does not matter. ### Which operating system are you using? Linux. ### Additional context. Discussion on SNOW with the EOS folks at https://cern.service-now.com/service-portal?id=ticket&table=u_request_fulfillment&n=RQF2315805 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13018
https://github.com/root-project/root/issues/13018:263,testability,simpl,simply,263,"Slow reads via HTTP from EOS; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It was reported at https://root-forum.cern.ch/t/reading-from-http-very-slow/53213 that reading a file via HTTP from EOS with ROOT takes much longer than simply downloading that file with wget. From the original report,. ```. root -l https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root [0] Electrons_All->Draw(""pt__NOSYS""). ```. takes ~5 minutes (although the tree is very small, ~60k events, 4MB in total). while. ```. wget https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root -l test_ntuples_200123.root . ```. takes 0.6s. ### What is the expected behaviour? _No response_. ### How to reproduce? See original report. ### ROOT version. 6.26.10. ### How did you install ROOT? Does not matter. ### Which operating system are you using? Linux. ### Additional context. Discussion on SNOW with the EOS folks at https://cern.service-now.com/service-portal?id=ticket&table=u_request_fulfillment&n=RQF2315805 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13018
https://github.com/root-project/root/issues/13018:959,testability,context,context,959,"Slow reads via HTTP from EOS; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It was reported at https://root-forum.cern.ch/t/reading-from-http-very-slow/53213 that reading a file via HTTP from EOS with ROOT takes much longer than simply downloading that file with wget. From the original report,. ```. root -l https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root [0] Electrons_All->Draw(""pt__NOSYS""). ```. takes ~5 minutes (although the tree is very small, ~60k events, 4MB in total). while. ```. wget https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root -l test_ntuples_200123.root . ```. takes 0.6s. ### What is the expected behaviour? _No response_. ### How to reproduce? See original report. ### ROOT version. 6.26.10. ### How did you install ROOT? Does not matter. ### Which operating system are you using? Linux. ### Additional context. Discussion on SNOW with the EOS folks at https://cern.service-now.com/service-portal?id=ticket&table=u_request_fulfillment&n=RQF2315805 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13018
https://github.com/root-project/root/issues/13018:263,usability,simpl,simply,263,"Slow reads via HTTP from EOS; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It was reported at https://root-forum.cern.ch/t/reading-from-http-very-slow/53213 that reading a file via HTTP from EOS with ROOT takes much longer than simply downloading that file with wget. From the original report,. ```. root -l https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root [0] Electrons_All->Draw(""pt__NOSYS""). ```. takes ~5 minutes (although the tree is very small, ~60k events, 4MB in total). while. ```. wget https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root -l test_ntuples_200123.root . ```. takes 0.6s. ### What is the expected behaviour? _No response_. ### How to reproduce? See original report. ### ROOT version. 6.26.10. ### How did you install ROOT? Does not matter. ### Which operating system are you using? Linux. ### Additional context. Discussion on SNOW with the EOS folks at https://cern.service-now.com/service-portal?id=ticket&table=u_request_fulfillment&n=RQF2315805 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13018
https://github.com/root-project/root/issues/13018:752,usability,behavi,behaviour,752,"Slow reads via HTTP from EOS; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It was reported at https://root-forum.cern.ch/t/reading-from-http-very-slow/53213 that reading a file via HTTP from EOS with ROOT takes much longer than simply downloading that file with wget. From the original report,. ```. root -l https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root [0] Electrons_All->Draw(""pt__NOSYS""). ```. takes ~5 minutes (although the tree is very small, ~60k events, 4MB in total). while. ```. wget https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root. root -l test_ntuples_200123.root . ```. takes 0.6s. ### What is the expected behaviour? _No response_. ### How to reproduce? See original report. ### ROOT version. 6.26.10. ### How did you install ROOT? Does not matter. ### Which operating system are you using? Linux. ### Additional context. Discussion on SNOW with the EOS folks at https://cern.service-now.com/service-portal?id=ticket&table=u_request_fulfillment&n=RQF2315805 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13018
https://github.com/root-project/root/issues/13019:15,availability,failur,failure,15,"LLVM assertion failure in HandleUnionActiveMemberChange; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:304,availability,failur,failure,304,"LLVM assertion failure in HandleUnionActiveMemberChange; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:798,availability,error,errors,798,"LLVM assertion failure in HandleUnionActiveMemberChange; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:867,availability,error,error,867,"LLVM assertion failure in HandleUnionActiveMemberChange; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:3769,availability,operat,operating,3769,"r? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. The workaround can be demonstrated with:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. ### ROOT version. v6-28-00-patches@v6-28-04-94-gb7de1efc73. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:15,deployability,fail,failure,15,"LLVM assertion failure in HandleUnionActiveMemberChange; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:163,deployability,version,version,163,"LLVM assertion failure in HandleUnionActiveMemberChange; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:218,deployability,fail,fails,218,"LLVM assertion failure in HandleUnionActiveMemberChange; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:243,deployability,patch,patches,243,"LLVM assertion failure in HandleUnionActiveMemberChange; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:304,deployability,fail,failure,304,"LLVM assertion failure in HandleUnionActiveMemberChange; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:387,deployability,build,build,387,"LLVM assertion failure in HandleUnionActiveMemberChange; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:432,deployability,build,build,432,"LLVM assertion failure in HandleUnionActiveMemberChange; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:461,deployability,patch,patches,461,"LLVM assertion failure in HandleUnionActiveMemberChange; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:487,deployability,patch,patches,487,"LLVM assertion failure in HandleUnionActiveMemberChange; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:772,deployability,fail,failed,772,"LLVM assertion failure in HandleUnionActiveMemberChange; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:807,deployability,manag,managed,807,"LLVM assertion failure in HandleUnionActiveMemberChange; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:1083,deployability,patch,patch,1083," [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welco",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:2272,deployability,patch,patches,2272,".size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. The workaround can be demonstrated with:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:2529,deployability,build,build,2529," == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. The workaround can be demonstrated with:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:2574,deployability,build,build,2574,"faultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. The workaround can be demonstrated with:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #define WORKAROUND. root [1] #include ""cust",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:2603,deployability,patch,patches,2603,"].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. The workaround can be demonstrated with:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:2629,deployability,patch,patches,2629,"tring = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. The workaround can be demonstrated with:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. ### ROOT version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:2914,deployability,fail,failed,2914,"r? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. The workaround can be demonstrated with:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. ### ROOT version. v6-28-00-patches@v6-28-04-94-gb7de1efc73. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:3326,deployability,patch,patches,3326,"r? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. The workaround can be demonstrated with:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. ### ROOT version. v6-28-00-patches@v6-28-04-94-gb7de1efc73. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:3626,deployability,version,version,3626,"r? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. The workaround can be demonstrated with:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. ### ROOT version. v6-28-00-patches@v6-28-04-94-gb7de1efc73. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:3644,deployability,patch,patches,3644,"r? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. The workaround can be demonstrated with:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. ### ROOT version. v6-28-00-patches@v6-28-04-94-gb7de1efc73. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:3693,deployability,instal,install,3693,"r? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. The workaround can be demonstrated with:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. ### ROOT version. v6-28-00-patches@v6-28-04-94-gb7de1efc73. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:3719,deployability,build,builds,3719,"r? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. The workaround can be demonstrated with:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. ### ROOT version. v6-28-00-patches@v6-28-04-94-gb7de1efc73. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:807,energy efficiency,manag,managed,807,"LLVM assertion failure in HandleUnionActiveMemberChange; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:1196,energy efficiency,current,currentStringStart,1196,"ta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:1217,energy efficiency,current,currentStringEnd,1217,"ith ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:163,integrability,version,version,163,"LLVM assertion failure in HandleUnionActiveMemberChange; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:3626,integrability,version,version,3626,"r? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. The workaround can be demonstrated with:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. ### ROOT version. v6-28-00-patches@v6-28-04-94-gb7de1efc73. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:163,modifiability,version,version,163,"LLVM assertion failure in HandleUnionActiveMemberChange; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:3626,modifiability,version,version,3626,"r? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. The workaround can be demonstrated with:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. ### ROOT version. v6-28-00-patches@v6-28-04-94-gb7de1efc73. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:15,performance,failur,failure,15,"LLVM assertion failure in HandleUnionActiveMemberChange; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:304,performance,failur,failure,304,"LLVM assertion failure in HandleUnionActiveMemberChange; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:798,performance,error,errors,798,"LLVM assertion failure in HandleUnionActiveMemberChange; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:867,performance,error,error,867,"LLVM assertion failure in HandleUnionActiveMemberChange; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:15,reliability,fail,failure,15,"LLVM assertion failure in HandleUnionActiveMemberChange; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:218,reliability,fail,fails,218,"LLVM assertion failure in HandleUnionActiveMemberChange; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:304,reliability,fail,failure,304,"LLVM assertion failure in HandleUnionActiveMemberChange; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:772,reliability,fail,failed,772,"LLVM assertion failure in HandleUnionActiveMemberChange; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:2914,reliability,fail,failed,2914,"r? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. The workaround can be demonstrated with:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. ### ROOT version. v6-28-00-patches@v6-28-04-94-gb7de1efc73. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:243,safety,patch,patches,243,"LLVM assertion failure in HandleUnionActiveMemberChange; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:461,safety,patch,patches,461,"LLVM assertion failure in HandleUnionActiveMemberChange; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:487,safety,patch,patches,487,"LLVM assertion failure in HandleUnionActiveMemberChange; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:798,safety,error,errors,798,"LLVM assertion failure in HandleUnionActiveMemberChange; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:807,safety,manag,managed,807,"LLVM assertion failure in HandleUnionActiveMemberChange; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:867,safety,error,error,867,"LLVM assertion failure in HandleUnionActiveMemberChange; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:1083,safety,patch,patch,1083," [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welco",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:2272,safety,patch,patches,2272,".size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. The workaround can be demonstrated with:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:2603,safety,patch,patches,2603,"].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. The workaround can be demonstrated with:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:2629,safety,patch,patches,2629,"tring = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. The workaround can be demonstrated with:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. ### ROOT version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:3326,safety,patch,patches,3326,"r? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. The workaround can be demonstrated with:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. ### ROOT version. v6-28-00-patches@v6-28-04-94-gb7de1efc73. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:3644,safety,patch,patches,3644,"r? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. The workaround can be demonstrated with:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. ### ROOT version. v6-28-00-patches@v6-28-04-94-gb7de1efc73. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:243,security,patch,patches,243,"LLVM assertion failure in HandleUnionActiveMemberChange; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:461,security,patch,patches,461,"LLVM assertion failure in HandleUnionActiveMemberChange; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:487,security,patch,patches,487,"LLVM assertion failure in HandleUnionActiveMemberChange; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:1083,security,patch,patch,1083," [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welco",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:2152,security,Team,Team,2152,"130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. The workaround can be demonstrated with:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:2272,security,patch,patches,2272,".size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. The workaround can be demonstrated with:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:2603,security,patch,patches,2603,"].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. The workaround can be demonstrated with:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:2629,security,patch,patches,2629,"tring = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. The workaround can be demonstrated with:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. ### ROOT version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:3206,security,Team,Team,3206,"r? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. The workaround can be demonstrated with:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. ### ROOT version. v6-28-00-patches@v6-28-04-94-gb7de1efc73. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:3326,security,patch,patches,3326,"r? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. The workaround can be demonstrated with:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. ### ROOT version. v6-28-00-patches@v6-28-04-94-gb7de1efc73. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:3644,security,patch,patches,3644,"r? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. The workaround can be demonstrated with:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. ### ROOT version. v6-28-00-patches@v6-28-04-94-gb7de1efc73. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:5,testability,assert,assertion,5,"LLVM assertion failure in HandleUnionActiveMemberChange; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:294,testability,assert,assertion,294,"LLVM assertion failure in HandleUnionActiveMemberChange; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:667,testability,Assert,Assertion,667,"LLVM assertion failure in HandleUnionActiveMemberChange; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:857,testability,assert,assertion,857,"LLVM assertion failure in HandleUnionActiveMemberChange; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:2809,testability,Assert,Assertion,2809,"gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. The workaround can be demonstrated with:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. ### ROOT version. v6-28-00-patches@v6-28-04-94-gb7de1efc73. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:3830,testability,context,context,3830,"r? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. The workaround can be demonstrated with:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. ### ROOT version. v6-28-00-patches@v6-28-04-94-gb7de1efc73. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:152,usability,custom,customized,152,"LLVM assertion failure in HandleUnionActiveMemberChange; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:516,usability,tool,tools,516,"LLVM assertion failure in HandleUnionActiveMemberChange; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:798,usability,error,errors,798,"LLVM assertion failure in HandleUnionActiveMemberChange; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:867,usability,error,error,867,"LLVM assertion failure in HandleUnionActiveMemberChange; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:. ```. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:1844,usability,behavi,behaviour,1844,"ers the assertion error and I embedded the workaround in the attached file:. ```. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. The difference that works around the issue is basically. ```patch. +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h. @@ -130,10 +130,11 @@ namespace meta_enum_internal {. currentStringStart = currentStringEnd;. }. for ( size_t i = 0; i < memberStrings.size(); ++i ) {. - result.members[i].name = parseEnumMemberName( memberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.De",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:2342,usability,help,help,2342,"mberStrings[i] );. + auto name = parseEnumMemberName( memberStrings[i] );. + result.members[i].name = name;. result.members[i].value = std::get<1>( values )[i];. if ( std::get<0>( values ) == std::get<1>( values )[i] ) {. - result.defaultString = result.members[i].name;. + result.defaultString = name;. result.defaultValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. The workaround can be demonstrated with:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:2658,usability,tool,tools,2658,"tValue = std::get<0>( values );. }. }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. The workaround can be demonstrated with:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. ### ROOT version. v6-28-00-patches@v6-28-04-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/issues/13019:3396,usability,help,help,3396,"r? _No response_. ### How to reproduce? From lxplus9.cern.ch:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include ""custom_meta_enum_test.hpp"". root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed. ```. The workaround can be demonstrated with:. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |. | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #define WORKAROUND. root [1] #include ""custom_meta_enum_test.hpp"". root [2] . ```. ### ROOT version. v6-28-00-patches@v6-28-04-94-gb7de1efc73. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13019
https://github.com/root-project/root/pull/13020:410,energy efficiency,model,models,410,"[RF] Speed up `getParameters()` for BatchMode NLL ; In the `getParameters()` implementation of the RooFitDriver wrapper,. there was a call to `RooAbsArg::getParameters()`, which is expensive. It's better to let the Driver figure out what the parameters are, given. that it already stores all the information to figure this out very. quickly. This speeds up the likelihood creation for ATLAS Higgs combination. models by about 20 % when using the BatchMode. This commit also fixes some memory leaks in the `compileForNormSet()` implementations that were put there on purpose in lack of a better solution at the time, but now they are not needed anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13020
https://github.com/root-project/root/pull/13020:36,integrability,Batch,BatchMode,36,"[RF] Speed up `getParameters()` for BatchMode NLL ; In the `getParameters()` implementation of the RooFitDriver wrapper,. there was a call to `RooAbsArg::getParameters()`, which is expensive. It's better to let the Driver figure out what the parameters are, given. that it already stores all the information to figure this out very. quickly. This speeds up the likelihood creation for ATLAS Higgs combination. models by about 20 % when using the BatchMode. This commit also fixes some memory leaks in the `compileForNormSet()` implementations that were put there on purpose in lack of a better solution at the time, but now they are not needed anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13020
https://github.com/root-project/root/pull/13020:112,integrability,wrap,wrapper,112,"[RF] Speed up `getParameters()` for BatchMode NLL ; In the `getParameters()` implementation of the RooFitDriver wrapper,. there was a call to `RooAbsArg::getParameters()`, which is expensive. It's better to let the Driver figure out what the parameters are, given. that it already stores all the information to figure this out very. quickly. This speeds up the likelihood creation for ATLAS Higgs combination. models by about 20 % when using the BatchMode. This commit also fixes some memory leaks in the `compileForNormSet()` implementations that were put there on purpose in lack of a better solution at the time, but now they are not needed anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13020
https://github.com/root-project/root/pull/13020:446,integrability,Batch,BatchMode,446,"[RF] Speed up `getParameters()` for BatchMode NLL ; In the `getParameters()` implementation of the RooFitDriver wrapper,. there was a call to `RooAbsArg::getParameters()`, which is expensive. It's better to let the Driver figure out what the parameters are, given. that it already stores all the information to figure this out very. quickly. This speeds up the likelihood creation for ATLAS Higgs combination. models by about 20 % when using the BatchMode. This commit also fixes some memory leaks in the `compileForNormSet()` implementations that were put there on purpose in lack of a better solution at the time, but now they are not needed anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13020
https://github.com/root-project/root/pull/13020:112,interoperability,wrapper,wrapper,112,"[RF] Speed up `getParameters()` for BatchMode NLL ; In the `getParameters()` implementation of the RooFitDriver wrapper,. there was a call to `RooAbsArg::getParameters()`, which is expensive. It's better to let the Driver figure out what the parameters are, given. that it already stores all the information to figure this out very. quickly. This speeds up the likelihood creation for ATLAS Higgs combination. models by about 20 % when using the BatchMode. This commit also fixes some memory leaks in the `compileForNormSet()` implementations that were put there on purpose in lack of a better solution at the time, but now they are not needed anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13020
https://github.com/root-project/root/pull/13020:242,modifiability,paramet,parameters,242,"[RF] Speed up `getParameters()` for BatchMode NLL ; In the `getParameters()` implementation of the RooFitDriver wrapper,. there was a call to `RooAbsArg::getParameters()`, which is expensive. It's better to let the Driver figure out what the parameters are, given. that it already stores all the information to figure this out very. quickly. This speeds up the likelihood creation for ATLAS Higgs combination. models by about 20 % when using the BatchMode. This commit also fixes some memory leaks in the `compileForNormSet()` implementations that were put there on purpose in lack of a better solution at the time, but now they are not needed anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13020
https://github.com/root-project/root/pull/13020:36,performance,Batch,BatchMode,36,"[RF] Speed up `getParameters()` for BatchMode NLL ; In the `getParameters()` implementation of the RooFitDriver wrapper,. there was a call to `RooAbsArg::getParameters()`, which is expensive. It's better to let the Driver figure out what the parameters are, given. that it already stores all the information to figure this out very. quickly. This speeds up the likelihood creation for ATLAS Higgs combination. models by about 20 % when using the BatchMode. This commit also fixes some memory leaks in the `compileForNormSet()` implementations that were put there on purpose in lack of a better solution at the time, but now they are not needed anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13020
https://github.com/root-project/root/pull/13020:446,performance,Batch,BatchMode,446,"[RF] Speed up `getParameters()` for BatchMode NLL ; In the `getParameters()` implementation of the RooFitDriver wrapper,. there was a call to `RooAbsArg::getParameters()`, which is expensive. It's better to let the Driver figure out what the parameters are, given. that it already stores all the information to figure this out very. quickly. This speeds up the likelihood creation for ATLAS Higgs combination. models by about 20 % when using the BatchMode. This commit also fixes some memory leaks in the `compileForNormSet()` implementations that were put there on purpose in lack of a better solution at the time, but now they are not needed anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13020
https://github.com/root-project/root/pull/13020:485,performance,memor,memory,485,"[RF] Speed up `getParameters()` for BatchMode NLL ; In the `getParameters()` implementation of the RooFitDriver wrapper,. there was a call to `RooAbsArg::getParameters()`, which is expensive. It's better to let the Driver figure out what the parameters are, given. that it already stores all the information to figure this out very. quickly. This speeds up the likelihood creation for ATLAS Higgs combination. models by about 20 % when using the BatchMode. This commit also fixes some memory leaks in the `compileForNormSet()` implementations that were put there on purpose in lack of a better solution at the time, but now they are not needed anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13020
https://github.com/root-project/root/pull/13020:610,performance,time,time,610,"[RF] Speed up `getParameters()` for BatchMode NLL ; In the `getParameters()` implementation of the RooFitDriver wrapper,. there was a call to `RooAbsArg::getParameters()`, which is expensive. It's better to let the Driver figure out what the parameters are, given. that it already stores all the information to figure this out very. quickly. This speeds up the likelihood creation for ATLAS Higgs combination. models by about 20 % when using the BatchMode. This commit also fixes some memory leaks in the `compileForNormSet()` implementations that were put there on purpose in lack of a better solution at the time, but now they are not needed anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13020
https://github.com/root-project/root/pull/13020:410,security,model,models,410,"[RF] Speed up `getParameters()` for BatchMode NLL ; In the `getParameters()` implementation of the RooFitDriver wrapper,. there was a call to `RooAbsArg::getParameters()`, which is expensive. It's better to let the Driver figure out what the parameters are, given. that it already stores all the information to figure this out very. quickly. This speeds up the likelihood creation for ATLAS Higgs combination. models by about 20 % when using the BatchMode. This commit also fixes some memory leaks in the `compileForNormSet()` implementations that were put there on purpose in lack of a better solution at the time, but now they are not needed anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13020
https://github.com/root-project/root/pull/13020:485,usability,memor,memory,485,"[RF] Speed up `getParameters()` for BatchMode NLL ; In the `getParameters()` implementation of the RooFitDriver wrapper,. there was a call to `RooAbsArg::getParameters()`, which is expensive. It's better to let the Driver figure out what the parameters are, given. that it already stores all the information to figure this out very. quickly. This speeds up the likelihood creation for ATLAS Higgs combination. models by about 20 % when using the BatchMode. This commit also fixes some memory leaks in the `compileForNormSet()` implementations that were put there on purpose in lack of a better solution at the time, but now they are not needed anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13020
https://github.com/root-project/root/pull/13021:437,availability,cluster,clusters,437,"[ntuple] Fix `RXxxField::AppendImpl()` return value; `AppendImpl()` returns the number of bytes written. For collections, this accounts for the size of the written elements + one element in the index column. However, `sizeof(RColumnElement<T>)` was erroneously taken as the size of the latter. Instead, use the packed size of an element in the principal column. Note that such size may be either 64 or 32 bit, depending on whether small clusters are used. The `RNTuple.SmallClusters` test was adjusted accordingly. As side effect, this PR should fix the RNTuple.SmallClusters test on Win32 (and thus supersedes #13004). ## Changes or fixes:. - Fix return value of `AppendImpl()` for collection fields. - Adjust RNTuple.SmallClusters; also, set the target zipped cluster size and no compression, as otherwise the estimation of the zipped cluster size hits in. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13021
https://github.com/root-project/root/pull/13021:762,availability,cluster,cluster,762,"[ntuple] Fix `RXxxField::AppendImpl()` return value; `AppendImpl()` returns the number of bytes written. For collections, this accounts for the size of the written elements + one element in the index column. However, `sizeof(RColumnElement<T>)` was erroneously taken as the size of the latter. Instead, use the packed size of an element in the principal column. Note that such size may be either 64 or 32 bit, depending on whether small clusters are used. The `RNTuple.SmallClusters` test was adjusted accordingly. As side effect, this PR should fix the RNTuple.SmallClusters test on Win32 (and thus supersedes #13004). ## Changes or fixes:. - Fix return value of `AppendImpl()` for collection fields. - Adjust RNTuple.SmallClusters; also, set the target zipped cluster size and no compression, as otherwise the estimation of the zipped cluster size hits in. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13021
https://github.com/root-project/root/pull/13021:837,availability,cluster,cluster,837,"[ntuple] Fix `RXxxField::AppendImpl()` return value; `AppendImpl()` returns the number of bytes written. For collections, this accounts for the size of the written elements + one element in the index column. However, `sizeof(RColumnElement<T>)` was erroneously taken as the size of the latter. Instead, use the packed size of an element in the principal column. Note that such size may be either 64 or 32 bit, depending on whether small clusters are used. The `RNTuple.SmallClusters` test was adjusted accordingly. As side effect, this PR should fix the RNTuple.SmallClusters test on Win32 (and thus supersedes #13004). ## Changes or fixes:. - Fix return value of `AppendImpl()` for collection fields. - Adjust RNTuple.SmallClusters; also, set the target zipped cluster size and no compression, as otherwise the estimation of the zipped cluster size hits in. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13021
https://github.com/root-project/root/pull/13021:410,deployability,depend,depending,410,"[ntuple] Fix `RXxxField::AppendImpl()` return value; `AppendImpl()` returns the number of bytes written. For collections, this accounts for the size of the written elements + one element in the index column. However, `sizeof(RColumnElement<T>)` was erroneously taken as the size of the latter. Instead, use the packed size of an element in the principal column. Note that such size may be either 64 or 32 bit, depending on whether small clusters are used. The `RNTuple.SmallClusters` test was adjusted accordingly. As side effect, this PR should fix the RNTuple.SmallClusters test on Win32 (and thus supersedes #13004). ## Changes or fixes:. - Fix return value of `AppendImpl()` for collection fields. - Adjust RNTuple.SmallClusters; also, set the target zipped cluster size and no compression, as otherwise the estimation of the zipped cluster size hits in. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13021
https://github.com/root-project/root/pull/13021:437,deployability,cluster,clusters,437,"[ntuple] Fix `RXxxField::AppendImpl()` return value; `AppendImpl()` returns the number of bytes written. For collections, this accounts for the size of the written elements + one element in the index column. However, `sizeof(RColumnElement<T>)` was erroneously taken as the size of the latter. Instead, use the packed size of an element in the principal column. Note that such size may be either 64 or 32 bit, depending on whether small clusters are used. The `RNTuple.SmallClusters` test was adjusted accordingly. As side effect, this PR should fix the RNTuple.SmallClusters test on Win32 (and thus supersedes #13004). ## Changes or fixes:. - Fix return value of `AppendImpl()` for collection fields. - Adjust RNTuple.SmallClusters; also, set the target zipped cluster size and no compression, as otherwise the estimation of the zipped cluster size hits in. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13021
https://github.com/root-project/root/pull/13021:762,deployability,cluster,cluster,762,"[ntuple] Fix `RXxxField::AppendImpl()` return value; `AppendImpl()` returns the number of bytes written. For collections, this accounts for the size of the written elements + one element in the index column. However, `sizeof(RColumnElement<T>)` was erroneously taken as the size of the latter. Instead, use the packed size of an element in the principal column. Note that such size may be either 64 or 32 bit, depending on whether small clusters are used. The `RNTuple.SmallClusters` test was adjusted accordingly. As side effect, this PR should fix the RNTuple.SmallClusters test on Win32 (and thus supersedes #13004). ## Changes or fixes:. - Fix return value of `AppendImpl()` for collection fields. - Adjust RNTuple.SmallClusters; also, set the target zipped cluster size and no compression, as otherwise the estimation of the zipped cluster size hits in. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13021
https://github.com/root-project/root/pull/13021:837,deployability,cluster,cluster,837,"[ntuple] Fix `RXxxField::AppendImpl()` return value; `AppendImpl()` returns the number of bytes written. For collections, this accounts for the size of the written elements + one element in the index column. However, `sizeof(RColumnElement<T>)` was erroneously taken as the size of the latter. Instead, use the packed size of an element in the principal column. Note that such size may be either 64 or 32 bit, depending on whether small clusters are used. The `RNTuple.SmallClusters` test was adjusted accordingly. As side effect, this PR should fix the RNTuple.SmallClusters test on Win32 (and thus supersedes #13004). ## Changes or fixes:. - Fix return value of `AppendImpl()` for collection fields. - Adjust RNTuple.SmallClusters; also, set the target zipped cluster size and no compression, as otherwise the estimation of the zipped cluster size hits in. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13021
https://github.com/root-project/root/pull/13021:910,deployability,updat,updated,910,"[ntuple] Fix `RXxxField::AppendImpl()` return value; `AppendImpl()` returns the number of bytes written. For collections, this accounts for the size of the written elements + one element in the index column. However, `sizeof(RColumnElement<T>)` was erroneously taken as the size of the latter. Instead, use the packed size of an element in the principal column. Note that such size may be either 64 or 32 bit, depending on whether small clusters are used. The `RNTuple.SmallClusters` test was adjusted accordingly. As side effect, this PR should fix the RNTuple.SmallClusters test on Win32 (and thus supersedes #13004). ## Changes or fixes:. - Fix return value of `AppendImpl()` for collection fields. - Adjust RNTuple.SmallClusters; also, set the target zipped cluster size and no compression, as otherwise the estimation of the zipped cluster size hits in. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13021
https://github.com/root-project/root/pull/13021:812,energy efficiency,estimat,estimation,812,"[ntuple] Fix `RXxxField::AppendImpl()` return value; `AppendImpl()` returns the number of bytes written. For collections, this accounts for the size of the written elements + one element in the index column. However, `sizeof(RColumnElement<T>)` was erroneously taken as the size of the latter. Instead, use the packed size of an element in the principal column. Note that such size may be either 64 or 32 bit, depending on whether small clusters are used. The `RNTuple.SmallClusters` test was adjusted accordingly. As side effect, this PR should fix the RNTuple.SmallClusters test on Win32 (and thus supersedes #13004). ## Changes or fixes:. - Fix return value of `AppendImpl()` for collection fields. - Adjust RNTuple.SmallClusters; also, set the target zipped cluster size and no compression, as otherwise the estimation of the zipped cluster size hits in. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13021
https://github.com/root-project/root/pull/13021:410,integrability,depend,depending,410,"[ntuple] Fix `RXxxField::AppendImpl()` return value; `AppendImpl()` returns the number of bytes written. For collections, this accounts for the size of the written elements + one element in the index column. However, `sizeof(RColumnElement<T>)` was erroneously taken as the size of the latter. Instead, use the packed size of an element in the principal column. Note that such size may be either 64 or 32 bit, depending on whether small clusters are used. The `RNTuple.SmallClusters` test was adjusted accordingly. As side effect, this PR should fix the RNTuple.SmallClusters test on Win32 (and thus supersedes #13004). ## Changes or fixes:. - Fix return value of `AppendImpl()` for collection fields. - Adjust RNTuple.SmallClusters; also, set the target zipped cluster size and no compression, as otherwise the estimation of the zipped cluster size hits in. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13021
https://github.com/root-project/root/pull/13021:311,modifiability,pac,packed,311,"[ntuple] Fix `RXxxField::AppendImpl()` return value; `AppendImpl()` returns the number of bytes written. For collections, this accounts for the size of the written elements + one element in the index column. However, `sizeof(RColumnElement<T>)` was erroneously taken as the size of the latter. Instead, use the packed size of an element in the principal column. Note that such size may be either 64 or 32 bit, depending on whether small clusters are used. The `RNTuple.SmallClusters` test was adjusted accordingly. As side effect, this PR should fix the RNTuple.SmallClusters test on Win32 (and thus supersedes #13004). ## Changes or fixes:. - Fix return value of `AppendImpl()` for collection fields. - Adjust RNTuple.SmallClusters; also, set the target zipped cluster size and no compression, as otherwise the estimation of the zipped cluster size hits in. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13021
https://github.com/root-project/root/pull/13021:410,modifiability,depend,depending,410,"[ntuple] Fix `RXxxField::AppendImpl()` return value; `AppendImpl()` returns the number of bytes written. For collections, this accounts for the size of the written elements + one element in the index column. However, `sizeof(RColumnElement<T>)` was erroneously taken as the size of the latter. Instead, use the packed size of an element in the principal column. Note that such size may be either 64 or 32 bit, depending on whether small clusters are used. The `RNTuple.SmallClusters` test was adjusted accordingly. As side effect, this PR should fix the RNTuple.SmallClusters test on Win32 (and thus supersedes #13004). ## Changes or fixes:. - Fix return value of `AppendImpl()` for collection fields. - Adjust RNTuple.SmallClusters; also, set the target zipped cluster size and no compression, as otherwise the estimation of the zipped cluster size hits in. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13021
https://github.com/root-project/root/pull/13021:410,safety,depend,depending,410,"[ntuple] Fix `RXxxField::AppendImpl()` return value; `AppendImpl()` returns the number of bytes written. For collections, this accounts for the size of the written elements + one element in the index column. However, `sizeof(RColumnElement<T>)` was erroneously taken as the size of the latter. Instead, use the packed size of an element in the principal column. Note that such size may be either 64 or 32 bit, depending on whether small clusters are used. The `RNTuple.SmallClusters` test was adjusted accordingly. As side effect, this PR should fix the RNTuple.SmallClusters test on Win32 (and thus supersedes #13004). ## Changes or fixes:. - Fix return value of `AppendImpl()` for collection fields. - Adjust RNTuple.SmallClusters; also, set the target zipped cluster size and no compression, as otherwise the estimation of the zipped cluster size hits in. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13021
https://github.com/root-project/root/pull/13021:484,safety,test,test,484,"[ntuple] Fix `RXxxField::AppendImpl()` return value; `AppendImpl()` returns the number of bytes written. For collections, this accounts for the size of the written elements + one element in the index column. However, `sizeof(RColumnElement<T>)` was erroneously taken as the size of the latter. Instead, use the packed size of an element in the principal column. Note that such size may be either 64 or 32 bit, depending on whether small clusters are used. The `RNTuple.SmallClusters` test was adjusted accordingly. As side effect, this PR should fix the RNTuple.SmallClusters test on Win32 (and thus supersedes #13004). ## Changes or fixes:. - Fix return value of `AppendImpl()` for collection fields. - Adjust RNTuple.SmallClusters; also, set the target zipped cluster size and no compression, as otherwise the estimation of the zipped cluster size hits in. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13021
https://github.com/root-project/root/pull/13021:576,safety,test,test,576,"[ntuple] Fix `RXxxField::AppendImpl()` return value; `AppendImpl()` returns the number of bytes written. For collections, this accounts for the size of the written elements + one element in the index column. However, `sizeof(RColumnElement<T>)` was erroneously taken as the size of the latter. Instead, use the packed size of an element in the principal column. Note that such size may be either 64 or 32 bit, depending on whether small clusters are used. The `RNTuple.SmallClusters` test was adjusted accordingly. As side effect, this PR should fix the RNTuple.SmallClusters test on Win32 (and thus supersedes #13004). ## Changes or fixes:. - Fix return value of `AppendImpl()` for collection fields. - Adjust RNTuple.SmallClusters; also, set the target zipped cluster size and no compression, as otherwise the estimation of the zipped cluster size hits in. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13021
https://github.com/root-project/root/pull/13021:880,safety,test,tested,880,"[ntuple] Fix `RXxxField::AppendImpl()` return value; `AppendImpl()` returns the number of bytes written. For collections, this accounts for the size of the written elements + one element in the index column. However, `sizeof(RColumnElement<T>)` was erroneously taken as the size of the latter. Instead, use the packed size of an element in the principal column. Note that such size may be either 64 or 32 bit, depending on whether small clusters are used. The `RNTuple.SmallClusters` test was adjusted accordingly. As side effect, this PR should fix the RNTuple.SmallClusters test on Win32 (and thus supersedes #13004). ## Changes or fixes:. - Fix return value of `AppendImpl()` for collection fields. - Adjust RNTuple.SmallClusters; also, set the target zipped cluster size and no compression, as otherwise the estimation of the zipped cluster size hits in. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13021
https://github.com/root-project/root/pull/13021:910,safety,updat,updated,910,"[ntuple] Fix `RXxxField::AppendImpl()` return value; `AppendImpl()` returns the number of bytes written. For collections, this accounts for the size of the written elements + one element in the index column. However, `sizeof(RColumnElement<T>)` was erroneously taken as the size of the latter. Instead, use the packed size of an element in the principal column. Note that such size may be either 64 or 32 bit, depending on whether small clusters are used. The `RNTuple.SmallClusters` test was adjusted accordingly. As side effect, this PR should fix the RNTuple.SmallClusters test on Win32 (and thus supersedes #13004). ## Changes or fixes:. - Fix return value of `AppendImpl()` for collection fields. - Adjust RNTuple.SmallClusters; also, set the target zipped cluster size and no compression, as otherwise the estimation of the zipped cluster size hits in. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13021
https://github.com/root-project/root/pull/13021:910,security,updat,updated,910,"[ntuple] Fix `RXxxField::AppendImpl()` return value; `AppendImpl()` returns the number of bytes written. For collections, this accounts for the size of the written elements + one element in the index column. However, `sizeof(RColumnElement<T>)` was erroneously taken as the size of the latter. Instead, use the packed size of an element in the principal column. Note that such size may be either 64 or 32 bit, depending on whether small clusters are used. The `RNTuple.SmallClusters` test was adjusted accordingly. As side effect, this PR should fix the RNTuple.SmallClusters test on Win32 (and thus supersedes #13004). ## Changes or fixes:. - Fix return value of `AppendImpl()` for collection fields. - Adjust RNTuple.SmallClusters; also, set the target zipped cluster size and no compression, as otherwise the estimation of the zipped cluster size hits in. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13021
https://github.com/root-project/root/pull/13021:410,testability,depend,depending,410,"[ntuple] Fix `RXxxField::AppendImpl()` return value; `AppendImpl()` returns the number of bytes written. For collections, this accounts for the size of the written elements + one element in the index column. However, `sizeof(RColumnElement<T>)` was erroneously taken as the size of the latter. Instead, use the packed size of an element in the principal column. Note that such size may be either 64 or 32 bit, depending on whether small clusters are used. The `RNTuple.SmallClusters` test was adjusted accordingly. As side effect, this PR should fix the RNTuple.SmallClusters test on Win32 (and thus supersedes #13004). ## Changes or fixes:. - Fix return value of `AppendImpl()` for collection fields. - Adjust RNTuple.SmallClusters; also, set the target zipped cluster size and no compression, as otherwise the estimation of the zipped cluster size hits in. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13021
https://github.com/root-project/root/pull/13021:484,testability,test,test,484,"[ntuple] Fix `RXxxField::AppendImpl()` return value; `AppendImpl()` returns the number of bytes written. For collections, this accounts for the size of the written elements + one element in the index column. However, `sizeof(RColumnElement<T>)` was erroneously taken as the size of the latter. Instead, use the packed size of an element in the principal column. Note that such size may be either 64 or 32 bit, depending on whether small clusters are used. The `RNTuple.SmallClusters` test was adjusted accordingly. As side effect, this PR should fix the RNTuple.SmallClusters test on Win32 (and thus supersedes #13004). ## Changes or fixes:. - Fix return value of `AppendImpl()` for collection fields. - Adjust RNTuple.SmallClusters; also, set the target zipped cluster size and no compression, as otherwise the estimation of the zipped cluster size hits in. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13021
https://github.com/root-project/root/pull/13021:576,testability,test,test,576,"[ntuple] Fix `RXxxField::AppendImpl()` return value; `AppendImpl()` returns the number of bytes written. For collections, this accounts for the size of the written elements + one element in the index column. However, `sizeof(RColumnElement<T>)` was erroneously taken as the size of the latter. Instead, use the packed size of an element in the principal column. Note that such size may be either 64 or 32 bit, depending on whether small clusters are used. The `RNTuple.SmallClusters` test was adjusted accordingly. As side effect, this PR should fix the RNTuple.SmallClusters test on Win32 (and thus supersedes #13004). ## Changes or fixes:. - Fix return value of `AppendImpl()` for collection fields. - Adjust RNTuple.SmallClusters; also, set the target zipped cluster size and no compression, as otherwise the estimation of the zipped cluster size hits in. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13021
https://github.com/root-project/root/pull/13021:880,testability,test,tested,880,"[ntuple] Fix `RXxxField::AppendImpl()` return value; `AppendImpl()` returns the number of bytes written. For collections, this accounts for the size of the written elements + one element in the index column. However, `sizeof(RColumnElement<T>)` was erroneously taken as the size of the latter. Instead, use the packed size of an element in the principal column. Note that such size may be either 64 or 32 bit, depending on whether small clusters are used. The `RNTuple.SmallClusters` test was adjusted accordingly. As side effect, this PR should fix the RNTuple.SmallClusters test on Win32 (and thus supersedes #13004). ## Changes or fixes:. - Fix return value of `AppendImpl()` for collection fields. - Adjust RNTuple.SmallClusters; also, set the target zipped cluster size and no compression, as otherwise the estimation of the zipped cluster size hits in. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13021
https://github.com/root-project/root/pull/13022:284,availability,cluster,cluster,284,"[ntuple] Fix a memory leak in `RPageSinkBuf`; RPageSinkBuf calls `ReservePage()` as part of a `CommitPageImpl()` call. This memory is release in `CommitClusterImpl()` by calling `ReleasePage()` accordingly. However, if `CommitClusterImpl()` is never invoked (e.g., because the 'small cluster' check failed in RNTuple.cxx:336), this memory is leaked. This patch fixes that by making `RColumnBuf` adopt the pages. `DrainBufferedPages()` gives back the ownership to the caller, who is then responsible of calling `ReleasePage()`. FWIW, this bug was found while hunting the issues seen in the CI for the `RNTuple.SmallClusters` test. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13022
https://github.com/root-project/root/pull/13022:134,deployability,releas,release,134,"[ntuple] Fix a memory leak in `RPageSinkBuf`; RPageSinkBuf calls `ReservePage()` as part of a `CommitPageImpl()` call. This memory is release in `CommitClusterImpl()` by calling `ReleasePage()` accordingly. However, if `CommitClusterImpl()` is never invoked (e.g., because the 'small cluster' check failed in RNTuple.cxx:336), this memory is leaked. This patch fixes that by making `RColumnBuf` adopt the pages. `DrainBufferedPages()` gives back the ownership to the caller, who is then responsible of calling `ReleasePage()`. FWIW, this bug was found while hunting the issues seen in the CI for the `RNTuple.SmallClusters` test. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13022
https://github.com/root-project/root/pull/13022:179,deployability,Releas,ReleasePage,179,"[ntuple] Fix a memory leak in `RPageSinkBuf`; RPageSinkBuf calls `ReservePage()` as part of a `CommitPageImpl()` call. This memory is release in `CommitClusterImpl()` by calling `ReleasePage()` accordingly. However, if `CommitClusterImpl()` is never invoked (e.g., because the 'small cluster' check failed in RNTuple.cxx:336), this memory is leaked. This patch fixes that by making `RColumnBuf` adopt the pages. `DrainBufferedPages()` gives back the ownership to the caller, who is then responsible of calling `ReleasePage()`. FWIW, this bug was found while hunting the issues seen in the CI for the `RNTuple.SmallClusters` test. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13022
https://github.com/root-project/root/pull/13022:284,deployability,cluster,cluster,284,"[ntuple] Fix a memory leak in `RPageSinkBuf`; RPageSinkBuf calls `ReservePage()` as part of a `CommitPageImpl()` call. This memory is release in `CommitClusterImpl()` by calling `ReleasePage()` accordingly. However, if `CommitClusterImpl()` is never invoked (e.g., because the 'small cluster' check failed in RNTuple.cxx:336), this memory is leaked. This patch fixes that by making `RColumnBuf` adopt the pages. `DrainBufferedPages()` gives back the ownership to the caller, who is then responsible of calling `ReleasePage()`. FWIW, this bug was found while hunting the issues seen in the CI for the `RNTuple.SmallClusters` test. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13022
https://github.com/root-project/root/pull/13022:299,deployability,fail,failed,299,"[ntuple] Fix a memory leak in `RPageSinkBuf`; RPageSinkBuf calls `ReservePage()` as part of a `CommitPageImpl()` call. This memory is release in `CommitClusterImpl()` by calling `ReleasePage()` accordingly. However, if `CommitClusterImpl()` is never invoked (e.g., because the 'small cluster' check failed in RNTuple.cxx:336), this memory is leaked. This patch fixes that by making `RColumnBuf` adopt the pages. `DrainBufferedPages()` gives back the ownership to the caller, who is then responsible of calling `ReleasePage()`. FWIW, this bug was found while hunting the issues seen in the CI for the `RNTuple.SmallClusters` test. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13022
https://github.com/root-project/root/pull/13022:355,deployability,patch,patch,355,"[ntuple] Fix a memory leak in `RPageSinkBuf`; RPageSinkBuf calls `ReservePage()` as part of a `CommitPageImpl()` call. This memory is release in `CommitClusterImpl()` by calling `ReleasePage()` accordingly. However, if `CommitClusterImpl()` is never invoked (e.g., because the 'small cluster' check failed in RNTuple.cxx:336), this memory is leaked. This patch fixes that by making `RColumnBuf` adopt the pages. `DrainBufferedPages()` gives back the ownership to the caller, who is then responsible of calling `ReleasePage()`. FWIW, this bug was found while hunting the issues seen in the CI for the `RNTuple.SmallClusters` test. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13022
https://github.com/root-project/root/pull/13022:511,deployability,Releas,ReleasePage,511,"[ntuple] Fix a memory leak in `RPageSinkBuf`; RPageSinkBuf calls `ReservePage()` as part of a `CommitPageImpl()` call. This memory is release in `CommitClusterImpl()` by calling `ReleasePage()` accordingly. However, if `CommitClusterImpl()` is never invoked (e.g., because the 'small cluster' check failed in RNTuple.cxx:336), this memory is leaked. This patch fixes that by making `RColumnBuf` adopt the pages. `DrainBufferedPages()` gives back the ownership to the caller, who is then responsible of calling `ReleasePage()`. FWIW, this bug was found while hunting the issues seen in the CI for the `RNTuple.SmallClusters` test. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13022
https://github.com/root-project/root/pull/13022:681,deployability,updat,updated,681,"[ntuple] Fix a memory leak in `RPageSinkBuf`; RPageSinkBuf calls `ReservePage()` as part of a `CommitPageImpl()` call. This memory is release in `CommitClusterImpl()` by calling `ReleasePage()` accordingly. However, if `CommitClusterImpl()` is never invoked (e.g., because the 'small cluster' check failed in RNTuple.cxx:336), this memory is leaked. This patch fixes that by making `RColumnBuf` adopt the pages. `DrainBufferedPages()` gives back the ownership to the caller, who is then responsible of calling `ReleasePage()`. FWIW, this bug was found while hunting the issues seen in the CI for the `RNTuple.SmallClusters` test. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13022
https://github.com/root-project/root/pull/13022:413,energy efficiency,Drain,DrainBufferedPages,413,"[ntuple] Fix a memory leak in `RPageSinkBuf`; RPageSinkBuf calls `ReservePage()` as part of a `CommitPageImpl()` call. This memory is release in `CommitClusterImpl()` by calling `ReleasePage()` accordingly. However, if `CommitClusterImpl()` is never invoked (e.g., because the 'small cluster' check failed in RNTuple.cxx:336), this memory is leaked. This patch fixes that by making `RColumnBuf` adopt the pages. `DrainBufferedPages()` gives back the ownership to the caller, who is then responsible of calling `ReleasePage()`. FWIW, this bug was found while hunting the issues seen in the CI for the `RNTuple.SmallClusters` test. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13022
https://github.com/root-project/root/pull/13022:15,performance,memor,memory,15,"[ntuple] Fix a memory leak in `RPageSinkBuf`; RPageSinkBuf calls `ReservePage()` as part of a `CommitPageImpl()` call. This memory is release in `CommitClusterImpl()` by calling `ReleasePage()` accordingly. However, if `CommitClusterImpl()` is never invoked (e.g., because the 'small cluster' check failed in RNTuple.cxx:336), this memory is leaked. This patch fixes that by making `RColumnBuf` adopt the pages. `DrainBufferedPages()` gives back the ownership to the caller, who is then responsible of calling `ReleasePage()`. FWIW, this bug was found while hunting the issues seen in the CI for the `RNTuple.SmallClusters` test. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13022
https://github.com/root-project/root/pull/13022:124,performance,memor,memory,124,"[ntuple] Fix a memory leak in `RPageSinkBuf`; RPageSinkBuf calls `ReservePage()` as part of a `CommitPageImpl()` call. This memory is release in `CommitClusterImpl()` by calling `ReleasePage()` accordingly. However, if `CommitClusterImpl()` is never invoked (e.g., because the 'small cluster' check failed in RNTuple.cxx:336), this memory is leaked. This patch fixes that by making `RColumnBuf` adopt the pages. `DrainBufferedPages()` gives back the ownership to the caller, who is then responsible of calling `ReleasePage()`. FWIW, this bug was found while hunting the issues seen in the CI for the `RNTuple.SmallClusters` test. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13022
https://github.com/root-project/root/pull/13022:332,performance,memor,memory,332,"[ntuple] Fix a memory leak in `RPageSinkBuf`; RPageSinkBuf calls `ReservePage()` as part of a `CommitPageImpl()` call. This memory is release in `CommitClusterImpl()` by calling `ReleasePage()` accordingly. However, if `CommitClusterImpl()` is never invoked (e.g., because the 'small cluster' check failed in RNTuple.cxx:336), this memory is leaked. This patch fixes that by making `RColumnBuf` adopt the pages. `DrainBufferedPages()` gives back the ownership to the caller, who is then responsible of calling `ReleasePage()`. FWIW, this bug was found while hunting the issues seen in the CI for the `RNTuple.SmallClusters` test. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13022
https://github.com/root-project/root/pull/13022:299,reliability,fail,failed,299,"[ntuple] Fix a memory leak in `RPageSinkBuf`; RPageSinkBuf calls `ReservePage()` as part of a `CommitPageImpl()` call. This memory is release in `CommitClusterImpl()` by calling `ReleasePage()` accordingly. However, if `CommitClusterImpl()` is never invoked (e.g., because the 'small cluster' check failed in RNTuple.cxx:336), this memory is leaked. This patch fixes that by making `RColumnBuf` adopt the pages. `DrainBufferedPages()` gives back the ownership to the caller, who is then responsible of calling `ReleasePage()`. FWIW, this bug was found while hunting the issues seen in the CI for the `RNTuple.SmallClusters` test. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13022
https://github.com/root-project/root/pull/13022:355,safety,patch,patch,355,"[ntuple] Fix a memory leak in `RPageSinkBuf`; RPageSinkBuf calls `ReservePage()` as part of a `CommitPageImpl()` call. This memory is release in `CommitClusterImpl()` by calling `ReleasePage()` accordingly. However, if `CommitClusterImpl()` is never invoked (e.g., because the 'small cluster' check failed in RNTuple.cxx:336), this memory is leaked. This patch fixes that by making `RColumnBuf` adopt the pages. `DrainBufferedPages()` gives back the ownership to the caller, who is then responsible of calling `ReleasePage()`. FWIW, this bug was found while hunting the issues seen in the CI for the `RNTuple.SmallClusters` test. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13022
https://github.com/root-project/root/pull/13022:624,safety,test,test,624,"[ntuple] Fix a memory leak in `RPageSinkBuf`; RPageSinkBuf calls `ReservePage()` as part of a `CommitPageImpl()` call. This memory is release in `CommitClusterImpl()` by calling `ReleasePage()` accordingly. However, if `CommitClusterImpl()` is never invoked (e.g., because the 'small cluster' check failed in RNTuple.cxx:336), this memory is leaked. This patch fixes that by making `RColumnBuf` adopt the pages. `DrainBufferedPages()` gives back the ownership to the caller, who is then responsible of calling `ReleasePage()`. FWIW, this bug was found while hunting the issues seen in the CI for the `RNTuple.SmallClusters` test. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13022
https://github.com/root-project/root/pull/13022:651,safety,test,tested,651,"[ntuple] Fix a memory leak in `RPageSinkBuf`; RPageSinkBuf calls `ReservePage()` as part of a `CommitPageImpl()` call. This memory is release in `CommitClusterImpl()` by calling `ReleasePage()` accordingly. However, if `CommitClusterImpl()` is never invoked (e.g., because the 'small cluster' check failed in RNTuple.cxx:336), this memory is leaked. This patch fixes that by making `RColumnBuf` adopt the pages. `DrainBufferedPages()` gives back the ownership to the caller, who is then responsible of calling `ReleasePage()`. FWIW, this bug was found while hunting the issues seen in the CI for the `RNTuple.SmallClusters` test. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13022
https://github.com/root-project/root/pull/13022:681,safety,updat,updated,681,"[ntuple] Fix a memory leak in `RPageSinkBuf`; RPageSinkBuf calls `ReservePage()` as part of a `CommitPageImpl()` call. This memory is release in `CommitClusterImpl()` by calling `ReleasePage()` accordingly. However, if `CommitClusterImpl()` is never invoked (e.g., because the 'small cluster' check failed in RNTuple.cxx:336), this memory is leaked. This patch fixes that by making `RColumnBuf` adopt the pages. `DrainBufferedPages()` gives back the ownership to the caller, who is then responsible of calling `ReleasePage()`. FWIW, this bug was found while hunting the issues seen in the CI for the `RNTuple.SmallClusters` test. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13022
https://github.com/root-project/root/pull/13022:355,security,patch,patch,355,"[ntuple] Fix a memory leak in `RPageSinkBuf`; RPageSinkBuf calls `ReservePage()` as part of a `CommitPageImpl()` call. This memory is release in `CommitClusterImpl()` by calling `ReleasePage()` accordingly. However, if `CommitClusterImpl()` is never invoked (e.g., because the 'small cluster' check failed in RNTuple.cxx:336), this memory is leaked. This patch fixes that by making `RColumnBuf` adopt the pages. `DrainBufferedPages()` gives back the ownership to the caller, who is then responsible of calling `ReleasePage()`. FWIW, this bug was found while hunting the issues seen in the CI for the `RNTuple.SmallClusters` test. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13022
https://github.com/root-project/root/pull/13022:681,security,updat,updated,681,"[ntuple] Fix a memory leak in `RPageSinkBuf`; RPageSinkBuf calls `ReservePage()` as part of a `CommitPageImpl()` call. This memory is release in `CommitClusterImpl()` by calling `ReleasePage()` accordingly. However, if `CommitClusterImpl()` is never invoked (e.g., because the 'small cluster' check failed in RNTuple.cxx:336), this memory is leaked. This patch fixes that by making `RColumnBuf` adopt the pages. `DrainBufferedPages()` gives back the ownership to the caller, who is then responsible of calling `ReleasePage()`. FWIW, this bug was found while hunting the issues seen in the CI for the `RNTuple.SmallClusters` test. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13022
https://github.com/root-project/root/pull/13022:624,testability,test,test,624,"[ntuple] Fix a memory leak in `RPageSinkBuf`; RPageSinkBuf calls `ReservePage()` as part of a `CommitPageImpl()` call. This memory is release in `CommitClusterImpl()` by calling `ReleasePage()` accordingly. However, if `CommitClusterImpl()` is never invoked (e.g., because the 'small cluster' check failed in RNTuple.cxx:336), this memory is leaked. This patch fixes that by making `RColumnBuf` adopt the pages. `DrainBufferedPages()` gives back the ownership to the caller, who is then responsible of calling `ReleasePage()`. FWIW, this bug was found while hunting the issues seen in the CI for the `RNTuple.SmallClusters` test. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13022
https://github.com/root-project/root/pull/13022:651,testability,test,tested,651,"[ntuple] Fix a memory leak in `RPageSinkBuf`; RPageSinkBuf calls `ReservePage()` as part of a `CommitPageImpl()` call. This memory is release in `CommitClusterImpl()` by calling `ReleasePage()` accordingly. However, if `CommitClusterImpl()` is never invoked (e.g., because the 'small cluster' check failed in RNTuple.cxx:336), this memory is leaked. This patch fixes that by making `RColumnBuf` adopt the pages. `DrainBufferedPages()` gives back the ownership to the caller, who is then responsible of calling `ReleasePage()`. FWIW, this bug was found while hunting the issues seen in the CI for the `RNTuple.SmallClusters` test. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13022
https://github.com/root-project/root/pull/13022:15,usability,memor,memory,15,"[ntuple] Fix a memory leak in `RPageSinkBuf`; RPageSinkBuf calls `ReservePage()` as part of a `CommitPageImpl()` call. This memory is release in `CommitClusterImpl()` by calling `ReleasePage()` accordingly. However, if `CommitClusterImpl()` is never invoked (e.g., because the 'small cluster' check failed in RNTuple.cxx:336), this memory is leaked. This patch fixes that by making `RColumnBuf` adopt the pages. `DrainBufferedPages()` gives back the ownership to the caller, who is then responsible of calling `ReleasePage()`. FWIW, this bug was found while hunting the issues seen in the CI for the `RNTuple.SmallClusters` test. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13022
https://github.com/root-project/root/pull/13022:124,usability,memor,memory,124,"[ntuple] Fix a memory leak in `RPageSinkBuf`; RPageSinkBuf calls `ReservePage()` as part of a `CommitPageImpl()` call. This memory is release in `CommitClusterImpl()` by calling `ReleasePage()` accordingly. However, if `CommitClusterImpl()` is never invoked (e.g., because the 'small cluster' check failed in RNTuple.cxx:336), this memory is leaked. This patch fixes that by making `RColumnBuf` adopt the pages. `DrainBufferedPages()` gives back the ownership to the caller, who is then responsible of calling `ReleasePage()`. FWIW, this bug was found while hunting the issues seen in the CI for the `RNTuple.SmallClusters` test. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13022
https://github.com/root-project/root/pull/13022:332,usability,memor,memory,332,"[ntuple] Fix a memory leak in `RPageSinkBuf`; RPageSinkBuf calls `ReservePage()` as part of a `CommitPageImpl()` call. This memory is release in `CommitClusterImpl()` by calling `ReleasePage()` accordingly. However, if `CommitClusterImpl()` is never invoked (e.g., because the 'small cluster' check failed in RNTuple.cxx:336), this memory is leaked. This patch fixes that by making `RColumnBuf` adopt the pages. `DrainBufferedPages()` gives back the ownership to the caller, who is then responsible of calling `ReleasePage()`. FWIW, this bug was found while hunting the issues seen in the CI for the `RNTuple.SmallClusters` test. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13022
https://github.com/root-project/root/pull/13023:85,deployability,continu,continues,85,"[ntuple] Temporarily disable the `RNTuple.SmallClusters` test; Apparently, this test continues to be broken for some CI configs, which needs to be investigated carefully; thus disable temporarily. Related PRs fixing issues found while investigating this test: #13021, #13022.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13023
https://github.com/root-project/root/pull/13023:57,safety,test,test,57,"[ntuple] Temporarily disable the `RNTuple.SmallClusters` test; Apparently, this test continues to be broken for some CI configs, which needs to be investigated carefully; thus disable temporarily. Related PRs fixing issues found while investigating this test: #13021, #13022.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13023
https://github.com/root-project/root/pull/13023:80,safety,test,test,80,"[ntuple] Temporarily disable the `RNTuple.SmallClusters` test; Apparently, this test continues to be broken for some CI configs, which needs to be investigated carefully; thus disable temporarily. Related PRs fixing issues found while investigating this test: #13021, #13022.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13023
https://github.com/root-project/root/pull/13023:254,safety,test,test,254,"[ntuple] Temporarily disable the `RNTuple.SmallClusters` test; Apparently, this test continues to be broken for some CI configs, which needs to be investigated carefully; thus disable temporarily. Related PRs fixing issues found while investigating this test: #13021, #13022.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13023
https://github.com/root-project/root/pull/13023:57,testability,test,test,57,"[ntuple] Temporarily disable the `RNTuple.SmallClusters` test; Apparently, this test continues to be broken for some CI configs, which needs to be investigated carefully; thus disable temporarily. Related PRs fixing issues found while investigating this test: #13021, #13022.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13023
https://github.com/root-project/root/pull/13023:80,testability,test,test,80,"[ntuple] Temporarily disable the `RNTuple.SmallClusters` test; Apparently, this test continues to be broken for some CI configs, which needs to be investigated carefully; thus disable temporarily. Related PRs fixing issues found while investigating this test: #13021, #13022.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13023
https://github.com/root-project/root/pull/13023:254,testability,test,test,254,"[ntuple] Temporarily disable the `RNTuple.SmallClusters` test; Apparently, this test continues to be broken for some CI configs, which needs to be investigated carefully; thus disable temporarily. Related PRs fixing issues found while investigating this test: #13021, #13022.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13023
https://github.com/root-project/root/pull/13024:619,availability,down,down,619,"[RF] Avoid RooBinWidthFunction in final likelihood computation graphs; Since ROOT 6.26, the HistFactory models include the RooBinWidthFunction. to multiply the yields in the RooHistFuncs with the inverse bin widths,. in order to get the correct probability density. That's great and fixes HistFactory for non-uniform binnings, but it is. not optimal for the `BinnedLikelihood` code path. Here, the bin widths. need to multiplied back again to get the event yields in each bin. This commit suggests to improve the situation for the new BatchMode by. propagating the information that we are building a binned likelihood. down to the RooBinWidthFunctions, such that they can remove themselves. Then, if such RooBinWidthFunctions were encountered and disabled, the NLL. knows that it can skip the multiplication with the bin widths. What is proposed here looks like a small performance optimization only,. but actually the main motivation is not performance but RooFit AD. support. By removing the RooBinWidthFunctions from the computation graphs. of HistFactory likelihoods, we don't need to implement code generation. support for this class, which would be not trivial in the general. n-dimensional case. With the suggestion in this PR, all that work is. avoided.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13024
https://github.com/root-project/root/pull/13024:589,deployability,build,building,589,"[RF] Avoid RooBinWidthFunction in final likelihood computation graphs; Since ROOT 6.26, the HistFactory models include the RooBinWidthFunction. to multiply the yields in the RooHistFuncs with the inverse bin widths,. in order to get the correct probability density. That's great and fixes HistFactory for non-uniform binnings, but it is. not optimal for the `BinnedLikelihood` code path. Here, the bin widths. need to multiplied back again to get the event yields in each bin. This commit suggests to improve the situation for the new BatchMode by. propagating the information that we are building a binned likelihood. down to the RooBinWidthFunctions, such that they can remove themselves. Then, if such RooBinWidthFunctions were encountered and disabled, the NLL. knows that it can skip the multiplication with the bin widths. What is proposed here looks like a small performance optimization only,. but actually the main motivation is not performance but RooFit AD. support. By removing the RooBinWidthFunctions from the computation graphs. of HistFactory likelihoods, we don't need to implement code generation. support for this class, which would be not trivial in the general. n-dimensional case. With the suggestion in this PR, all that work is. avoided.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13024
https://github.com/root-project/root/pull/13024:104,energy efficiency,model,models,104,"[RF] Avoid RooBinWidthFunction in final likelihood computation graphs; Since ROOT 6.26, the HistFactory models include the RooBinWidthFunction. to multiply the yields in the RooHistFuncs with the inverse bin widths,. in order to get the correct probability density. That's great and fixes HistFactory for non-uniform binnings, but it is. not optimal for the `BinnedLikelihood` code path. Here, the bin widths. need to multiplied back again to get the event yields in each bin. This commit suggests to improve the situation for the new BatchMode by. propagating the information that we are building a binned likelihood. down to the RooBinWidthFunctions, such that they can remove themselves. Then, if such RooBinWidthFunctions were encountered and disabled, the NLL. knows that it can skip the multiplication with the bin widths. What is proposed here looks like a small performance optimization only,. but actually the main motivation is not performance but RooFit AD. support. By removing the RooBinWidthFunctions from the computation graphs. of HistFactory likelihoods, we don't need to implement code generation. support for this class, which would be not trivial in the general. n-dimensional case. With the suggestion in this PR, all that work is. avoided.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13024
https://github.com/root-project/root/pull/13024:342,energy efficiency,optim,optimal,342,"[RF] Avoid RooBinWidthFunction in final likelihood computation graphs; Since ROOT 6.26, the HistFactory models include the RooBinWidthFunction. to multiply the yields in the RooHistFuncs with the inverse bin widths,. in order to get the correct probability density. That's great and fixes HistFactory for non-uniform binnings, but it is. not optimal for the `BinnedLikelihood` code path. Here, the bin widths. need to multiplied back again to get the event yields in each bin. This commit suggests to improve the situation for the new BatchMode by. propagating the information that we are building a binned likelihood. down to the RooBinWidthFunctions, such that they can remove themselves. Then, if such RooBinWidthFunctions were encountered and disabled, the NLL. knows that it can skip the multiplication with the bin widths. What is proposed here looks like a small performance optimization only,. but actually the main motivation is not performance but RooFit AD. support. By removing the RooBinWidthFunctions from the computation graphs. of HistFactory likelihoods, we don't need to implement code generation. support for this class, which would be not trivial in the general. n-dimensional case. With the suggestion in this PR, all that work is. avoided.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13024
https://github.com/root-project/root/pull/13024:882,energy efficiency,optim,optimization,882,"[RF] Avoid RooBinWidthFunction in final likelihood computation graphs; Since ROOT 6.26, the HistFactory models include the RooBinWidthFunction. to multiply the yields in the RooHistFuncs with the inverse bin widths,. in order to get the correct probability density. That's great and fixes HistFactory for non-uniform binnings, but it is. not optimal for the `BinnedLikelihood` code path. Here, the bin widths. need to multiplied back again to get the event yields in each bin. This commit suggests to improve the situation for the new BatchMode by. propagating the information that we are building a binned likelihood. down to the RooBinWidthFunctions, such that they can remove themselves. Then, if such RooBinWidthFunctions were encountered and disabled, the NLL. knows that it can skip the multiplication with the bin widths. What is proposed here looks like a small performance optimization only,. but actually the main motivation is not performance but RooFit AD. support. By removing the RooBinWidthFunctions from the computation graphs. of HistFactory likelihoods, we don't need to implement code generation. support for this class, which would be not trivial in the general. n-dimensional case. With the suggestion in this PR, all that work is. avoided.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13024
https://github.com/root-project/root/pull/13024:451,integrability,event,event,451,"[RF] Avoid RooBinWidthFunction in final likelihood computation graphs; Since ROOT 6.26, the HistFactory models include the RooBinWidthFunction. to multiply the yields in the RooHistFuncs with the inverse bin widths,. in order to get the correct probability density. That's great and fixes HistFactory for non-uniform binnings, but it is. not optimal for the `BinnedLikelihood` code path. Here, the bin widths. need to multiplied back again to get the event yields in each bin. This commit suggests to improve the situation for the new BatchMode by. propagating the information that we are building a binned likelihood. down to the RooBinWidthFunctions, such that they can remove themselves. Then, if such RooBinWidthFunctions were encountered and disabled, the NLL. knows that it can skip the multiplication with the bin widths. What is proposed here looks like a small performance optimization only,. but actually the main motivation is not performance but RooFit AD. support. By removing the RooBinWidthFunctions from the computation graphs. of HistFactory likelihoods, we don't need to implement code generation. support for this class, which would be not trivial in the general. n-dimensional case. With the suggestion in this PR, all that work is. avoided.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13024
https://github.com/root-project/root/pull/13024:535,integrability,Batch,BatchMode,535,"[RF] Avoid RooBinWidthFunction in final likelihood computation graphs; Since ROOT 6.26, the HistFactory models include the RooBinWidthFunction. to multiply the yields in the RooHistFuncs with the inverse bin widths,. in order to get the correct probability density. That's great and fixes HistFactory for non-uniform binnings, but it is. not optimal for the `BinnedLikelihood` code path. Here, the bin widths. need to multiplied back again to get the event yields in each bin. This commit suggests to improve the situation for the new BatchMode by. propagating the information that we are building a binned likelihood. down to the RooBinWidthFunctions, such that they can remove themselves. Then, if such RooBinWidthFunctions were encountered and disabled, the NLL. knows that it can skip the multiplication with the bin widths. What is proposed here looks like a small performance optimization only,. but actually the main motivation is not performance but RooFit AD. support. By removing the RooBinWidthFunctions from the computation graphs. of HistFactory likelihoods, we don't need to implement code generation. support for this class, which would be not trivial in the general. n-dimensional case. With the suggestion in this PR, all that work is. avoided.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13024
https://github.com/root-project/root/pull/13024:535,performance,Batch,BatchMode,535,"[RF] Avoid RooBinWidthFunction in final likelihood computation graphs; Since ROOT 6.26, the HistFactory models include the RooBinWidthFunction. to multiply the yields in the RooHistFuncs with the inverse bin widths,. in order to get the correct probability density. That's great and fixes HistFactory for non-uniform binnings, but it is. not optimal for the `BinnedLikelihood` code path. Here, the bin widths. need to multiplied back again to get the event yields in each bin. This commit suggests to improve the situation for the new BatchMode by. propagating the information that we are building a binned likelihood. down to the RooBinWidthFunctions, such that they can remove themselves. Then, if such RooBinWidthFunctions were encountered and disabled, the NLL. knows that it can skip the multiplication with the bin widths. What is proposed here looks like a small performance optimization only,. but actually the main motivation is not performance but RooFit AD. support. By removing the RooBinWidthFunctions from the computation graphs. of HistFactory likelihoods, we don't need to implement code generation. support for this class, which would be not trivial in the general. n-dimensional case. With the suggestion in this PR, all that work is. avoided.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13024
https://github.com/root-project/root/pull/13024:870,performance,performance optim,performance optimization,870,"[RF] Avoid RooBinWidthFunction in final likelihood computation graphs; Since ROOT 6.26, the HistFactory models include the RooBinWidthFunction. to multiply the yields in the RooHistFuncs with the inverse bin widths,. in order to get the correct probability density. That's great and fixes HistFactory for non-uniform binnings, but it is. not optimal for the `BinnedLikelihood` code path. Here, the bin widths. need to multiplied back again to get the event yields in each bin. This commit suggests to improve the situation for the new BatchMode by. propagating the information that we are building a binned likelihood. down to the RooBinWidthFunctions, such that they can remove themselves. Then, if such RooBinWidthFunctions were encountered and disabled, the NLL. knows that it can skip the multiplication with the bin widths. What is proposed here looks like a small performance optimization only,. but actually the main motivation is not performance but RooFit AD. support. By removing the RooBinWidthFunctions from the computation graphs. of HistFactory likelihoods, we don't need to implement code generation. support for this class, which would be not trivial in the general. n-dimensional case. With the suggestion in this PR, all that work is. avoided.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13024
https://github.com/root-project/root/pull/13024:942,performance,perform,performance,942,"[RF] Avoid RooBinWidthFunction in final likelihood computation graphs; Since ROOT 6.26, the HistFactory models include the RooBinWidthFunction. to multiply the yields in the RooHistFuncs with the inverse bin widths,. in order to get the correct probability density. That's great and fixes HistFactory for non-uniform binnings, but it is. not optimal for the `BinnedLikelihood` code path. Here, the bin widths. need to multiplied back again to get the event yields in each bin. This commit suggests to improve the situation for the new BatchMode by. propagating the information that we are building a binned likelihood. down to the RooBinWidthFunctions, such that they can remove themselves. Then, if such RooBinWidthFunctions were encountered and disabled, the NLL. knows that it can skip the multiplication with the bin widths. What is proposed here looks like a small performance optimization only,. but actually the main motivation is not performance but RooFit AD. support. By removing the RooBinWidthFunctions from the computation graphs. of HistFactory likelihoods, we don't need to implement code generation. support for this class, which would be not trivial in the general. n-dimensional case. With the suggestion in this PR, all that work is. avoided.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13024
https://github.com/root-project/root/pull/13024:5,safety,Avoid,Avoid,5,"[RF] Avoid RooBinWidthFunction in final likelihood computation graphs; Since ROOT 6.26, the HistFactory models include the RooBinWidthFunction. to multiply the yields in the RooHistFuncs with the inverse bin widths,. in order to get the correct probability density. That's great and fixes HistFactory for non-uniform binnings, but it is. not optimal for the `BinnedLikelihood` code path. Here, the bin widths. need to multiplied back again to get the event yields in each bin. This commit suggests to improve the situation for the new BatchMode by. propagating the information that we are building a binned likelihood. down to the RooBinWidthFunctions, such that they can remove themselves. Then, if such RooBinWidthFunctions were encountered and disabled, the NLL. knows that it can skip the multiplication with the bin widths. What is proposed here looks like a small performance optimization only,. but actually the main motivation is not performance but RooFit AD. support. By removing the RooBinWidthFunctions from the computation graphs. of HistFactory likelihoods, we don't need to implement code generation. support for this class, which would be not trivial in the general. n-dimensional case. With the suggestion in this PR, all that work is. avoided.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13024
https://github.com/root-project/root/pull/13024:1253,safety,avoid,avoided,1253,"[RF] Avoid RooBinWidthFunction in final likelihood computation graphs; Since ROOT 6.26, the HistFactory models include the RooBinWidthFunction. to multiply the yields in the RooHistFuncs with the inverse bin widths,. in order to get the correct probability density. That's great and fixes HistFactory for non-uniform binnings, but it is. not optimal for the `BinnedLikelihood` code path. Here, the bin widths. need to multiplied back again to get the event yields in each bin. This commit suggests to improve the situation for the new BatchMode by. propagating the information that we are building a binned likelihood. down to the RooBinWidthFunctions, such that they can remove themselves. Then, if such RooBinWidthFunctions were encountered and disabled, the NLL. knows that it can skip the multiplication with the bin widths. What is proposed here looks like a small performance optimization only,. but actually the main motivation is not performance but RooFit AD. support. By removing the RooBinWidthFunctions from the computation graphs. of HistFactory likelihoods, we don't need to implement code generation. support for this class, which would be not trivial in the general. n-dimensional case. With the suggestion in this PR, all that work is. avoided.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13024
https://github.com/root-project/root/pull/13024:104,security,model,models,104,"[RF] Avoid RooBinWidthFunction in final likelihood computation graphs; Since ROOT 6.26, the HistFactory models include the RooBinWidthFunction. to multiply the yields in the RooHistFuncs with the inverse bin widths,. in order to get the correct probability density. That's great and fixes HistFactory for non-uniform binnings, but it is. not optimal for the `BinnedLikelihood` code path. Here, the bin widths. need to multiplied back again to get the event yields in each bin. This commit suggests to improve the situation for the new BatchMode by. propagating the information that we are building a binned likelihood. down to the RooBinWidthFunctions, such that they can remove themselves. Then, if such RooBinWidthFunctions were encountered and disabled, the NLL. knows that it can skip the multiplication with the bin widths. What is proposed here looks like a small performance optimization only,. but actually the main motivation is not performance but RooFit AD. support. By removing the RooBinWidthFunctions from the computation graphs. of HistFactory likelihoods, we don't need to implement code generation. support for this class, which would be not trivial in the general. n-dimensional case. With the suggestion in this PR, all that work is. avoided.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13024
https://github.com/root-project/root/pull/13024:870,usability,perform,performance,870,"[RF] Avoid RooBinWidthFunction in final likelihood computation graphs; Since ROOT 6.26, the HistFactory models include the RooBinWidthFunction. to multiply the yields in the RooHistFuncs with the inverse bin widths,. in order to get the correct probability density. That's great and fixes HistFactory for non-uniform binnings, but it is. not optimal for the `BinnedLikelihood` code path. Here, the bin widths. need to multiplied back again to get the event yields in each bin. This commit suggests to improve the situation for the new BatchMode by. propagating the information that we are building a binned likelihood. down to the RooBinWidthFunctions, such that they can remove themselves. Then, if such RooBinWidthFunctions were encountered and disabled, the NLL. knows that it can skip the multiplication with the bin widths. What is proposed here looks like a small performance optimization only,. but actually the main motivation is not performance but RooFit AD. support. By removing the RooBinWidthFunctions from the computation graphs. of HistFactory likelihoods, we don't need to implement code generation. support for this class, which would be not trivial in the general. n-dimensional case. With the suggestion in this PR, all that work is. avoided.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13024
https://github.com/root-project/root/pull/13024:942,usability,perform,performance,942,"[RF] Avoid RooBinWidthFunction in final likelihood computation graphs; Since ROOT 6.26, the HistFactory models include the RooBinWidthFunction. to multiply the yields in the RooHistFuncs with the inverse bin widths,. in order to get the correct probability density. That's great and fixes HistFactory for non-uniform binnings, but it is. not optimal for the `BinnedLikelihood` code path. Here, the bin widths. need to multiplied back again to get the event yields in each bin. This commit suggests to improve the situation for the new BatchMode by. propagating the information that we are building a binned likelihood. down to the RooBinWidthFunctions, such that they can remove themselves. Then, if such RooBinWidthFunctions were encountered and disabled, the NLL. knows that it can skip the multiplication with the bin widths. What is proposed here looks like a small performance optimization only,. but actually the main motivation is not performance but RooFit AD. support. By removing the RooBinWidthFunctions from the computation graphs. of HistFactory likelihoods, we don't need to implement code generation. support for this class, which would be not trivial in the general. n-dimensional case. With the suggestion in this PR, all that work is. avoided.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13024
https://github.com/root-project/root/pull/13024:969,usability,support,support,969,"[RF] Avoid RooBinWidthFunction in final likelihood computation graphs; Since ROOT 6.26, the HistFactory models include the RooBinWidthFunction. to multiply the yields in the RooHistFuncs with the inverse bin widths,. in order to get the correct probability density. That's great and fixes HistFactory for non-uniform binnings, but it is. not optimal for the `BinnedLikelihood` code path. Here, the bin widths. need to multiplied back again to get the event yields in each bin. This commit suggests to improve the situation for the new BatchMode by. propagating the information that we are building a binned likelihood. down to the RooBinWidthFunctions, such that they can remove themselves. Then, if such RooBinWidthFunctions were encountered and disabled, the NLL. knows that it can skip the multiplication with the bin widths. What is proposed here looks like a small performance optimization only,. but actually the main motivation is not performance but RooFit AD. support. By removing the RooBinWidthFunctions from the computation graphs. of HistFactory likelihoods, we don't need to implement code generation. support for this class, which would be not trivial in the general. n-dimensional case. With the suggestion in this PR, all that work is. avoided.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13024
https://github.com/root-project/root/pull/13024:1116,usability,support,support,1116,"[RF] Avoid RooBinWidthFunction in final likelihood computation graphs; Since ROOT 6.26, the HistFactory models include the RooBinWidthFunction. to multiply the yields in the RooHistFuncs with the inverse bin widths,. in order to get the correct probability density. That's great and fixes HistFactory for non-uniform binnings, but it is. not optimal for the `BinnedLikelihood` code path. Here, the bin widths. need to multiplied back again to get the event yields in each bin. This commit suggests to improve the situation for the new BatchMode by. propagating the information that we are building a binned likelihood. down to the RooBinWidthFunctions, such that they can remove themselves. Then, if such RooBinWidthFunctions were encountered and disabled, the NLL. knows that it can skip the multiplication with the bin widths. What is proposed here looks like a small performance optimization only,. but actually the main motivation is not performance but RooFit AD. support. By removing the RooBinWidthFunctions from the computation graphs. of HistFactory likelihoods, we don't need to implement code generation. support for this class, which would be not trivial in the general. n-dimensional case. With the suggestion in this PR, all that work is. avoided.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13024
https://github.com/root-project/root/pull/13025:335,deployability,depend,depend,335,"RF] Don't consider extended pdf in RooProdPdf as constraint term; If one of the pdfs in a RooProdPdf is extended, it should not be. considered to be extracted as a constraint term. Also, fix. `RooProdPdf::getConnectedParameters()` which should not consider the. extended pdf as disconnected, as the expected events of this RooProdPdf. depend on it. Closes this old Jira ticket:. https://sft.its.cern.ch/jira/browse/ROOT-7604. FYI, @will-cern, sorry that it took almost 10 years :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13025
https://github.com/root-project/root/pull/13025:308,integrability,event,events,308,"RF] Don't consider extended pdf in RooProdPdf as constraint term; If one of the pdfs in a RooProdPdf is extended, it should not be. considered to be extracted as a constraint term. Also, fix. `RooProdPdf::getConnectedParameters()` which should not consider the. extended pdf as disconnected, as the expected events of this RooProdPdf. depend on it. Closes this old Jira ticket:. https://sft.its.cern.ch/jira/browse/ROOT-7604. FYI, @will-cern, sorry that it took almost 10 years :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13025
https://github.com/root-project/root/pull/13025:335,integrability,depend,depend,335,"RF] Don't consider extended pdf in RooProdPdf as constraint term; If one of the pdfs in a RooProdPdf is extended, it should not be. considered to be extracted as a constraint term. Also, fix. `RooProdPdf::getConnectedParameters()` which should not consider the. extended pdf as disconnected, as the expected events of this RooProdPdf. depend on it. Closes this old Jira ticket:. https://sft.its.cern.ch/jira/browse/ROOT-7604. FYI, @will-cern, sorry that it took almost 10 years :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13025
https://github.com/root-project/root/pull/13025:19,modifiability,exten,extended,19,"RF] Don't consider extended pdf in RooProdPdf as constraint term; If one of the pdfs in a RooProdPdf is extended, it should not be. considered to be extracted as a constraint term. Also, fix. `RooProdPdf::getConnectedParameters()` which should not consider the. extended pdf as disconnected, as the expected events of this RooProdPdf. depend on it. Closes this old Jira ticket:. https://sft.its.cern.ch/jira/browse/ROOT-7604. FYI, @will-cern, sorry that it took almost 10 years :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13025
https://github.com/root-project/root/pull/13025:104,modifiability,exten,extended,104,"RF] Don't consider extended pdf in RooProdPdf as constraint term; If one of the pdfs in a RooProdPdf is extended, it should not be. considered to be extracted as a constraint term. Also, fix. `RooProdPdf::getConnectedParameters()` which should not consider the. extended pdf as disconnected, as the expected events of this RooProdPdf. depend on it. Closes this old Jira ticket:. https://sft.its.cern.ch/jira/browse/ROOT-7604. FYI, @will-cern, sorry that it took almost 10 years :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13025
https://github.com/root-project/root/pull/13025:262,modifiability,exten,extended,262,"RF] Don't consider extended pdf in RooProdPdf as constraint term; If one of the pdfs in a RooProdPdf is extended, it should not be. considered to be extracted as a constraint term. Also, fix. `RooProdPdf::getConnectedParameters()` which should not consider the. extended pdf as disconnected, as the expected events of this RooProdPdf. depend on it. Closes this old Jira ticket:. https://sft.its.cern.ch/jira/browse/ROOT-7604. FYI, @will-cern, sorry that it took almost 10 years :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13025
https://github.com/root-project/root/pull/13025:335,modifiability,depend,depend,335,"RF] Don't consider extended pdf in RooProdPdf as constraint term; If one of the pdfs in a RooProdPdf is extended, it should not be. considered to be extracted as a constraint term. Also, fix. `RooProdPdf::getConnectedParameters()` which should not consider the. extended pdf as disconnected, as the expected events of this RooProdPdf. depend on it. Closes this old Jira ticket:. https://sft.its.cern.ch/jira/browse/ROOT-7604. FYI, @will-cern, sorry that it took almost 10 years :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13025
https://github.com/root-project/root/pull/13025:335,safety,depend,depend,335,"RF] Don't consider extended pdf in RooProdPdf as constraint term; If one of the pdfs in a RooProdPdf is extended, it should not be. considered to be extracted as a constraint term. Also, fix. `RooProdPdf::getConnectedParameters()` which should not consider the. extended pdf as disconnected, as the expected events of this RooProdPdf. depend on it. Closes this old Jira ticket:. https://sft.its.cern.ch/jira/browse/ROOT-7604. FYI, @will-cern, sorry that it took almost 10 years :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13025
https://github.com/root-project/root/pull/13025:335,testability,depend,depend,335,"RF] Don't consider extended pdf in RooProdPdf as constraint term; If one of the pdfs in a RooProdPdf is extended, it should not be. considered to be extracted as a constraint term. Also, fix. `RooProdPdf::getConnectedParameters()` which should not consider the. extended pdf as disconnected, as the expected events of this RooProdPdf. depend on it. Closes this old Jira ticket:. https://sft.its.cern.ch/jira/browse/ROOT-7604. FYI, @will-cern, sorry that it took almost 10 years :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13025
https://github.com/root-project/root/pull/13025:349,usability,Close,Closes,349,"RF] Don't consider extended pdf in RooProdPdf as constraint term; If one of the pdfs in a RooProdPdf is extended, it should not be. considered to be extracted as a constraint term. Also, fix. `RooProdPdf::getConnectedParameters()` which should not consider the. extended pdf as disconnected, as the expected events of this RooProdPdf. depend on it. Closes this old Jira ticket:. https://sft.its.cern.ch/jira/browse/ROOT-7604. FYI, @will-cern, sorry that it took almost 10 years :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13025
https://github.com/root-project/root/pull/13026:9,safety,Avoid,Avoid,9,[PyROOT] Avoid bare except; As per https://www.flake8rules.com/rules/E722.html,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13026
https://github.com/root-project/root/pull/13026:20,safety,except,except,20,[PyROOT] Avoid bare except; As per https://www.flake8rules.com/rules/E722.html,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13026
https://github.com/root-project/root/pull/13027:72,deployability,releas,release,72,[PyROOT][DF] Remove deprecated MakeNumpyDataFrame; It escaped the after-release purge because it does not use the `R__DEPRECATED` mechanism.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13027
https://github.com/root-project/root/pull/13027:97,reliability,doe,does,97,[PyROOT][DF] Remove deprecated MakeNumpyDataFrame; It escaped the after-release purge because it does not use the `R__DEPRECATED` mechanism.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13027
https://github.com/root-project/root/pull/13028:561,availability,error,error,561,"[v6.28][cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13028
https://github.com/root-project/root/pull/13028:613,availability,Error,Error,613,"[v6.28][cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13028
https://github.com/root-project/root/pull/13028:98,deployability,automat,automatically,98,"[v6.28][cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13028
https://github.com/root-project/root/pull/13028:138,deployability,releas,release,138,"[v6.28][cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13028
https://github.com/root-project/root/pull/13028:176,deployability,instal,installed,176,"[v6.28][cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13028
https://github.com/root-project/root/pull/13028:220,deployability,releas,release,220,"[v6.28][cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13028
https://github.com/root-project/root/pull/13028:228,deployability,version,versions,228,"[v6.28][cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13028
https://github.com/root-project/root/pull/13028:416,deployability,releas,release,416,"[v6.28][cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13028
https://github.com/root-project/root/pull/13028:424,deployability,version,version,424,"[v6.28][cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13028
https://github.com/root-project/root/pull/13028:577,deployability,version,versions,577,"[v6.28][cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13028
https://github.com/root-project/root/pull/13028:590,deployability,instal,installed,590,"[v6.28][cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13028
https://github.com/root-project/root/pull/13028:310,energy efficiency,optim,optimized,310,"[v6.28][cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13028
https://github.com/root-project/root/pull/13028:702,energy efficiency,optim,optimized,702,"[v6.28][cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13028
https://github.com/root-project/root/pull/13028:228,integrability,version,versions,228,"[v6.28][cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13028
https://github.com/root-project/root/pull/13028:424,integrability,version,version,424,"[v6.28][cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13028
https://github.com/root-project/root/pull/13028:577,integrability,version,versions,577,"[v6.28][cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13028
https://github.com/root-project/root/pull/13028:28,interoperability,standard,standard,28,"[v6.28][cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13028
https://github.com/root-project/root/pull/13028:622,interoperability,bind,bindings,622,"[v6.28][cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13028
https://github.com/root-project/root/pull/13028:228,modifiability,version,versions,228,"[v6.28][cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13028
https://github.com/root-project/root/pull/13028:424,modifiability,version,version,424,"[v6.28][cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13028
https://github.com/root-project/root/pull/13028:577,modifiability,version,versions,577,"[v6.28][cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13028
https://github.com/root-project/root/pull/13028:622,modifiability,bind,bindings,622,"[v6.28][cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13028
https://github.com/root-project/root/pull/13028:310,performance,optimiz,optimized,310,"[v6.28][cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13028
https://github.com/root-project/root/pull/13028:561,performance,error,error,561,"[v6.28][cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13028
https://github.com/root-project/root/pull/13028:613,performance,Error,Error,613,"[v6.28][cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13028
https://github.com/root-project/root/pull/13028:702,performance,optimiz,optimized,702,"[v6.28][cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13028
https://github.com/root-project/root/pull/13028:561,safety,error,error,561,"[v6.28][cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13028
https://github.com/root-project/root/pull/13028:613,safety,Error,Error,613,"[v6.28][cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13028
https://github.com/root-project/root/pull/13028:98,testability,automat,automatically,98,"[v6.28][cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13028
https://github.com/root-project/root/pull/13028:561,usability,error,error,561,"[v6.28][cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13028
https://github.com/root-project/root/pull/13028:613,usability,Error,Error,613,"[v6.28][cmake][windows] Use standard ${PYTHON_LIBRARIES} on Windows; Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:. ```. PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib. ```. And with only the release version:. ```. PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib. ```. So the correct one will be used. This fixes the following error when both versions are installed:. ```. CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):. The ""optimized"" argument must be followed by a library. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13028
https://github.com/root-project/root/pull/13029:135,availability,error,errors,135,"[math] Add missing `<limits>` include to `Delaunay2D.cxx`; Follows up on:. https://github.com/root-project/root/pull/12545. To fix the errors seen here, for example:. https://github.com/root-project/root/pull/12955#issuecomment-1592735649.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13029
https://github.com/root-project/root/pull/13029:135,performance,error,errors,135,"[math] Add missing `<limits>` include to `Delaunay2D.cxx`; Follows up on:. https://github.com/root-project/root/pull/12545. To fix the errors seen here, for example:. https://github.com/root-project/root/pull/12955#issuecomment-1592735649.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13029
https://github.com/root-project/root/pull/13029:135,safety,error,errors,135,"[math] Add missing `<limits>` include to `Delaunay2D.cxx`; Follows up on:. https://github.com/root-project/root/pull/12545. To fix the errors seen here, for example:. https://github.com/root-project/root/pull/12955#issuecomment-1592735649.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13029
https://github.com/root-project/root/pull/13029:135,usability,error,errors,135,"[math] Add missing `<limits>` include to `Delaunay2D.cxx`; Follows up on:. https://github.com/root-project/root/pull/12545. To fix the errors seen here, for example:. https://github.com/root-project/root/pull/12955#issuecomment-1592735649.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13029
https://github.com/root-project/root/issues/13030:175,deployability,integr,integrator,175,"[RF] Plotting shifted RooHistPdfs doesn't go well; If you plot a shifted RooHistPdf, it doesn't look good. Probably because it is sampled at the wrong points, the numeric bin integrator doesn't work in this case, or both. This is a problem that comes up relatively often in the ROOT forum, the last time here:. https://root-forum.cern.ch/t/roofit-in-root-6-28-04/55267. By looking for the keyword ""shift"" in the RooFit forum, one can see that this problem also came up in the past already:. https://root-forum.cern.ch/search?expanded=true&q=shift%20%23roofit-and-roostats. For example here:. https://root-forum.cern.ch/t/how-to-implement-a-horizontal-shift-for-roohistpdf/16787/6. I think I can approximately reproduce the workflow of the user that posted on the forum with this code. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x(""x"", """", 1000, 1500);. x.setBins(50);. RooRealVar shift(""shift"", """", 10.0, -100, 100);. RooFormulaVar xShifted(""x_shifted"", ""x - shift"", {x, shift});. // Doesn't work better either... // RooLinearVar xShifted(""x_shifted"", """", x, RooConst(1.0), shift);. std::vector<std::unique_ptr<RooDataHist>> templateHists;. RooArgSet pdfs;. RooArgSet yields;. // Fill the templates. for (std::size_t i = 0; i < 2; ++i) {. auto suffix = std::to_string(i);. TF1 pdf(""pdf"", ""gaus"", x.getMin(), x.getMax());. pdf.SetParameters(1, 1200 + 100 * i, 50);. pdf.Print();. TH1D h(""h"", """", x.numBins(), x.getMin(), x.getMax());. h.FillRandom(""pdf"", 10000);. templateHists.emplace_back(std::make_unique<RooDataHist>((""template_data_hist_"" + suffix).c_str(), """", x, &h));. pdfs.addOwned(. *new RooHistPdf((""template_hist_pdf_"" + suffix).c_str(), """", xShifted, x, *templateHists.back(), 0));. yields.addOwned(*new RooRealVar((""n_"" + suffix).c_str(), """", 1000, 100, 100000));. }. // Construct final model. RooAddPdf model(""model"", """", pdfs, yields);. std::unique_ptr<RooDataHist> data{model.generateBinned(x)};. // If the range is larger than the variable range, the problem is eve",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13030
https://github.com/root-project/root/issues/13030:1818,energy efficiency,model,model,1818,". https://root-forum.cern.ch/t/how-to-implement-a-horizontal-shift-for-roohistpdf/16787/6. I think I can approximately reproduce the workflow of the user that posted on the forum with this code. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x(""x"", """", 1000, 1500);. x.setBins(50);. RooRealVar shift(""shift"", """", 10.0, -100, 100);. RooFormulaVar xShifted(""x_shifted"", ""x - shift"", {x, shift});. // Doesn't work better either... // RooLinearVar xShifted(""x_shifted"", """", x, RooConst(1.0), shift);. std::vector<std::unique_ptr<RooDataHist>> templateHists;. RooArgSet pdfs;. RooArgSet yields;. // Fill the templates. for (std::size_t i = 0; i < 2; ++i) {. auto suffix = std::to_string(i);. TF1 pdf(""pdf"", ""gaus"", x.getMin(), x.getMax());. pdf.SetParameters(1, 1200 + 100 * i, 50);. pdf.Print();. TH1D h(""h"", """", x.numBins(), x.getMin(), x.getMax());. h.FillRandom(""pdf"", 10000);. templateHists.emplace_back(std::make_unique<RooDataHist>((""template_data_hist_"" + suffix).c_str(), """", x, &h));. pdfs.addOwned(. *new RooHistPdf((""template_hist_pdf_"" + suffix).c_str(), """", xShifted, x, *templateHists.back(), 0));. yields.addOwned(*new RooRealVar((""n_"" + suffix).c_str(), """", 1000, 100, 100000));. }. // Construct final model. RooAddPdf model(""model"", """", pdfs, yields);. std::unique_ptr<RooDataHist> data{model.generateBinned(x)};. // If the range is larger than the variable range, the problem is even amplified. model.fitTo(*data, Range(0.0, 5000));. TCanvas c1;. auto frame = x.frame();. data->plotOn(frame);. model.plotOn(frame, Range(0.0, 2000.0));. model.plotOn(frame, Components(*pdfs[0]), LineStyle(kDashed), LineColor(kRed));. model.plotOn(frame, Components(*pdfs[1]), LineStyle(kDashed), LineColor(kBlue));. frame->Draw();. c1.SaveAs(""plot.png"");. }. ```. The plot looks like this:. ![plot](https://github.com/root-project/root/assets/6578603/fb0b4c49-50b6-4f6b-ae50-8a1cac2248a8). It would be nice if this plotting would work better, sampling the RooHistPdf at the correct points.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13030
https://github.com/root-project/root/issues/13030:1835,energy efficiency,model,model,1835,". https://root-forum.cern.ch/t/how-to-implement-a-horizontal-shift-for-roohistpdf/16787/6. I think I can approximately reproduce the workflow of the user that posted on the forum with this code. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x(""x"", """", 1000, 1500);. x.setBins(50);. RooRealVar shift(""shift"", """", 10.0, -100, 100);. RooFormulaVar xShifted(""x_shifted"", ""x - shift"", {x, shift});. // Doesn't work better either... // RooLinearVar xShifted(""x_shifted"", """", x, RooConst(1.0), shift);. std::vector<std::unique_ptr<RooDataHist>> templateHists;. RooArgSet pdfs;. RooArgSet yields;. // Fill the templates. for (std::size_t i = 0; i < 2; ++i) {. auto suffix = std::to_string(i);. TF1 pdf(""pdf"", ""gaus"", x.getMin(), x.getMax());. pdf.SetParameters(1, 1200 + 100 * i, 50);. pdf.Print();. TH1D h(""h"", """", x.numBins(), x.getMin(), x.getMax());. h.FillRandom(""pdf"", 10000);. templateHists.emplace_back(std::make_unique<RooDataHist>((""template_data_hist_"" + suffix).c_str(), """", x, &h));. pdfs.addOwned(. *new RooHistPdf((""template_hist_pdf_"" + suffix).c_str(), """", xShifted, x, *templateHists.back(), 0));. yields.addOwned(*new RooRealVar((""n_"" + suffix).c_str(), """", 1000, 100, 100000));. }. // Construct final model. RooAddPdf model(""model"", """", pdfs, yields);. std::unique_ptr<RooDataHist> data{model.generateBinned(x)};. // If the range is larger than the variable range, the problem is even amplified. model.fitTo(*data, Range(0.0, 5000));. TCanvas c1;. auto frame = x.frame();. data->plotOn(frame);. model.plotOn(frame, Range(0.0, 2000.0));. model.plotOn(frame, Components(*pdfs[0]), LineStyle(kDashed), LineColor(kRed));. model.plotOn(frame, Components(*pdfs[1]), LineStyle(kDashed), LineColor(kBlue));. frame->Draw();. c1.SaveAs(""plot.png"");. }. ```. The plot looks like this:. ![plot](https://github.com/root-project/root/assets/6578603/fb0b4c49-50b6-4f6b-ae50-8a1cac2248a8). It would be nice if this plotting would work better, sampling the RooHistPdf at the correct points.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13030
https://github.com/root-project/root/issues/13030:1842,energy efficiency,model,model,1842,". https://root-forum.cern.ch/t/how-to-implement-a-horizontal-shift-for-roohistpdf/16787/6. I think I can approximately reproduce the workflow of the user that posted on the forum with this code. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x(""x"", """", 1000, 1500);. x.setBins(50);. RooRealVar shift(""shift"", """", 10.0, -100, 100);. RooFormulaVar xShifted(""x_shifted"", ""x - shift"", {x, shift});. // Doesn't work better either... // RooLinearVar xShifted(""x_shifted"", """", x, RooConst(1.0), shift);. std::vector<std::unique_ptr<RooDataHist>> templateHists;. RooArgSet pdfs;. RooArgSet yields;. // Fill the templates. for (std::size_t i = 0; i < 2; ++i) {. auto suffix = std::to_string(i);. TF1 pdf(""pdf"", ""gaus"", x.getMin(), x.getMax());. pdf.SetParameters(1, 1200 + 100 * i, 50);. pdf.Print();. TH1D h(""h"", """", x.numBins(), x.getMin(), x.getMax());. h.FillRandom(""pdf"", 10000);. templateHists.emplace_back(std::make_unique<RooDataHist>((""template_data_hist_"" + suffix).c_str(), """", x, &h));. pdfs.addOwned(. *new RooHistPdf((""template_hist_pdf_"" + suffix).c_str(), """", xShifted, x, *templateHists.back(), 0));. yields.addOwned(*new RooRealVar((""n_"" + suffix).c_str(), """", 1000, 100, 100000));. }. // Construct final model. RooAddPdf model(""model"", """", pdfs, yields);. std::unique_ptr<RooDataHist> data{model.generateBinned(x)};. // If the range is larger than the variable range, the problem is even amplified. model.fitTo(*data, Range(0.0, 5000));. TCanvas c1;. auto frame = x.frame();. data->plotOn(frame);. model.plotOn(frame, Range(0.0, 2000.0));. model.plotOn(frame, Components(*pdfs[0]), LineStyle(kDashed), LineColor(kRed));. model.plotOn(frame, Components(*pdfs[1]), LineStyle(kDashed), LineColor(kBlue));. frame->Draw();. c1.SaveAs(""plot.png"");. }. ```. The plot looks like this:. ![plot](https://github.com/root-project/root/assets/6578603/fb0b4c49-50b6-4f6b-ae50-8a1cac2248a8). It would be nice if this plotting would work better, sampling the RooHistPdf at the correct points.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13030
https://github.com/root-project/root/issues/13030:1904,energy efficiency,model,model,1904,". https://root-forum.cern.ch/t/how-to-implement-a-horizontal-shift-for-roohistpdf/16787/6. I think I can approximately reproduce the workflow of the user that posted on the forum with this code. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x(""x"", """", 1000, 1500);. x.setBins(50);. RooRealVar shift(""shift"", """", 10.0, -100, 100);. RooFormulaVar xShifted(""x_shifted"", ""x - shift"", {x, shift});. // Doesn't work better either... // RooLinearVar xShifted(""x_shifted"", """", x, RooConst(1.0), shift);. std::vector<std::unique_ptr<RooDataHist>> templateHists;. RooArgSet pdfs;. RooArgSet yields;. // Fill the templates. for (std::size_t i = 0; i < 2; ++i) {. auto suffix = std::to_string(i);. TF1 pdf(""pdf"", ""gaus"", x.getMin(), x.getMax());. pdf.SetParameters(1, 1200 + 100 * i, 50);. pdf.Print();. TH1D h(""h"", """", x.numBins(), x.getMin(), x.getMax());. h.FillRandom(""pdf"", 10000);. templateHists.emplace_back(std::make_unique<RooDataHist>((""template_data_hist_"" + suffix).c_str(), """", x, &h));. pdfs.addOwned(. *new RooHistPdf((""template_hist_pdf_"" + suffix).c_str(), """", xShifted, x, *templateHists.back(), 0));. yields.addOwned(*new RooRealVar((""n_"" + suffix).c_str(), """", 1000, 100, 100000));. }. // Construct final model. RooAddPdf model(""model"", """", pdfs, yields);. std::unique_ptr<RooDataHist> data{model.generateBinned(x)};. // If the range is larger than the variable range, the problem is even amplified. model.fitTo(*data, Range(0.0, 5000));. TCanvas c1;. auto frame = x.frame();. data->plotOn(frame);. model.plotOn(frame, Range(0.0, 2000.0));. model.plotOn(frame, Components(*pdfs[0]), LineStyle(kDashed), LineColor(kRed));. model.plotOn(frame, Components(*pdfs[1]), LineStyle(kDashed), LineColor(kBlue));. frame->Draw();. c1.SaveAs(""plot.png"");. }. ```. The plot looks like this:. ![plot](https://github.com/root-project/root/assets/6578603/fb0b4c49-50b6-4f6b-ae50-8a1cac2248a8). It would be nice if this plotting would work better, sampling the RooHistPdf at the correct points.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13030
https://github.com/root-project/root/issues/13030:2013,energy efficiency,model,model,2013,". https://root-forum.cern.ch/t/how-to-implement-a-horizontal-shift-for-roohistpdf/16787/6. I think I can approximately reproduce the workflow of the user that posted on the forum with this code. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x(""x"", """", 1000, 1500);. x.setBins(50);. RooRealVar shift(""shift"", """", 10.0, -100, 100);. RooFormulaVar xShifted(""x_shifted"", ""x - shift"", {x, shift});. // Doesn't work better either... // RooLinearVar xShifted(""x_shifted"", """", x, RooConst(1.0), shift);. std::vector<std::unique_ptr<RooDataHist>> templateHists;. RooArgSet pdfs;. RooArgSet yields;. // Fill the templates. for (std::size_t i = 0; i < 2; ++i) {. auto suffix = std::to_string(i);. TF1 pdf(""pdf"", ""gaus"", x.getMin(), x.getMax());. pdf.SetParameters(1, 1200 + 100 * i, 50);. pdf.Print();. TH1D h(""h"", """", x.numBins(), x.getMin(), x.getMax());. h.FillRandom(""pdf"", 10000);. templateHists.emplace_back(std::make_unique<RooDataHist>((""template_data_hist_"" + suffix).c_str(), """", x, &h));. pdfs.addOwned(. *new RooHistPdf((""template_hist_pdf_"" + suffix).c_str(), """", xShifted, x, *templateHists.back(), 0));. yields.addOwned(*new RooRealVar((""n_"" + suffix).c_str(), """", 1000, 100, 100000));. }. // Construct final model. RooAddPdf model(""model"", """", pdfs, yields);. std::unique_ptr<RooDataHist> data{model.generateBinned(x)};. // If the range is larger than the variable range, the problem is even amplified. model.fitTo(*data, Range(0.0, 5000));. TCanvas c1;. auto frame = x.frame();. data->plotOn(frame);. model.plotOn(frame, Range(0.0, 2000.0));. model.plotOn(frame, Components(*pdfs[0]), LineStyle(kDashed), LineColor(kRed));. model.plotOn(frame, Components(*pdfs[1]), LineStyle(kDashed), LineColor(kBlue));. frame->Draw();. c1.SaveAs(""plot.png"");. }. ```. The plot looks like this:. ![plot](https://github.com/root-project/root/assets/6578603/fb0b4c49-50b6-4f6b-ae50-8a1cac2248a8). It would be nice if this plotting would work better, sampling the RooHistPdf at the correct points.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13030
https://github.com/root-project/root/issues/13030:2112,energy efficiency,model,model,2112,". https://root-forum.cern.ch/t/how-to-implement-a-horizontal-shift-for-roohistpdf/16787/6. I think I can approximately reproduce the workflow of the user that posted on the forum with this code. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x(""x"", """", 1000, 1500);. x.setBins(50);. RooRealVar shift(""shift"", """", 10.0, -100, 100);. RooFormulaVar xShifted(""x_shifted"", ""x - shift"", {x, shift});. // Doesn't work better either... // RooLinearVar xShifted(""x_shifted"", """", x, RooConst(1.0), shift);. std::vector<std::unique_ptr<RooDataHist>> templateHists;. RooArgSet pdfs;. RooArgSet yields;. // Fill the templates. for (std::size_t i = 0; i < 2; ++i) {. auto suffix = std::to_string(i);. TF1 pdf(""pdf"", ""gaus"", x.getMin(), x.getMax());. pdf.SetParameters(1, 1200 + 100 * i, 50);. pdf.Print();. TH1D h(""h"", """", x.numBins(), x.getMin(), x.getMax());. h.FillRandom(""pdf"", 10000);. templateHists.emplace_back(std::make_unique<RooDataHist>((""template_data_hist_"" + suffix).c_str(), """", x, &h));. pdfs.addOwned(. *new RooHistPdf((""template_hist_pdf_"" + suffix).c_str(), """", xShifted, x, *templateHists.back(), 0));. yields.addOwned(*new RooRealVar((""n_"" + suffix).c_str(), """", 1000, 100, 100000));. }. // Construct final model. RooAddPdf model(""model"", """", pdfs, yields);. std::unique_ptr<RooDataHist> data{model.generateBinned(x)};. // If the range is larger than the variable range, the problem is even amplified. model.fitTo(*data, Range(0.0, 5000));. TCanvas c1;. auto frame = x.frame();. data->plotOn(frame);. model.plotOn(frame, Range(0.0, 2000.0));. model.plotOn(frame, Components(*pdfs[0]), LineStyle(kDashed), LineColor(kRed));. model.plotOn(frame, Components(*pdfs[1]), LineStyle(kDashed), LineColor(kBlue));. frame->Draw();. c1.SaveAs(""plot.png"");. }. ```. The plot looks like this:. ![plot](https://github.com/root-project/root/assets/6578603/fb0b4c49-50b6-4f6b-ae50-8a1cac2248a8). It would be nice if this plotting would work better, sampling the RooHistPdf at the correct points.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13030
https://github.com/root-project/root/issues/13030:2154,energy efficiency,model,model,2154,". https://root-forum.cern.ch/t/how-to-implement-a-horizontal-shift-for-roohistpdf/16787/6. I think I can approximately reproduce the workflow of the user that posted on the forum with this code. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x(""x"", """", 1000, 1500);. x.setBins(50);. RooRealVar shift(""shift"", """", 10.0, -100, 100);. RooFormulaVar xShifted(""x_shifted"", ""x - shift"", {x, shift});. // Doesn't work better either... // RooLinearVar xShifted(""x_shifted"", """", x, RooConst(1.0), shift);. std::vector<std::unique_ptr<RooDataHist>> templateHists;. RooArgSet pdfs;. RooArgSet yields;. // Fill the templates. for (std::size_t i = 0; i < 2; ++i) {. auto suffix = std::to_string(i);. TF1 pdf(""pdf"", ""gaus"", x.getMin(), x.getMax());. pdf.SetParameters(1, 1200 + 100 * i, 50);. pdf.Print();. TH1D h(""h"", """", x.numBins(), x.getMin(), x.getMax());. h.FillRandom(""pdf"", 10000);. templateHists.emplace_back(std::make_unique<RooDataHist>((""template_data_hist_"" + suffix).c_str(), """", x, &h));. pdfs.addOwned(. *new RooHistPdf((""template_hist_pdf_"" + suffix).c_str(), """", xShifted, x, *templateHists.back(), 0));. yields.addOwned(*new RooRealVar((""n_"" + suffix).c_str(), """", 1000, 100, 100000));. }. // Construct final model. RooAddPdf model(""model"", """", pdfs, yields);. std::unique_ptr<RooDataHist> data{model.generateBinned(x)};. // If the range is larger than the variable range, the problem is even amplified. model.fitTo(*data, Range(0.0, 5000));. TCanvas c1;. auto frame = x.frame();. data->plotOn(frame);. model.plotOn(frame, Range(0.0, 2000.0));. model.plotOn(frame, Components(*pdfs[0]), LineStyle(kDashed), LineColor(kRed));. model.plotOn(frame, Components(*pdfs[1]), LineStyle(kDashed), LineColor(kBlue));. frame->Draw();. c1.SaveAs(""plot.png"");. }. ```. The plot looks like this:. ![plot](https://github.com/root-project/root/assets/6578603/fb0b4c49-50b6-4f6b-ae50-8a1cac2248a8). It would be nice if this plotting would work better, sampling the RooHistPdf at the correct points.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13030
https://github.com/root-project/root/issues/13030:2235,energy efficiency,model,model,2235,". https://root-forum.cern.ch/t/how-to-implement-a-horizontal-shift-for-roohistpdf/16787/6. I think I can approximately reproduce the workflow of the user that posted on the forum with this code. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x(""x"", """", 1000, 1500);. x.setBins(50);. RooRealVar shift(""shift"", """", 10.0, -100, 100);. RooFormulaVar xShifted(""x_shifted"", ""x - shift"", {x, shift});. // Doesn't work better either... // RooLinearVar xShifted(""x_shifted"", """", x, RooConst(1.0), shift);. std::vector<std::unique_ptr<RooDataHist>> templateHists;. RooArgSet pdfs;. RooArgSet yields;. // Fill the templates. for (std::size_t i = 0; i < 2; ++i) {. auto suffix = std::to_string(i);. TF1 pdf(""pdf"", ""gaus"", x.getMin(), x.getMax());. pdf.SetParameters(1, 1200 + 100 * i, 50);. pdf.Print();. TH1D h(""h"", """", x.numBins(), x.getMin(), x.getMax());. h.FillRandom(""pdf"", 10000);. templateHists.emplace_back(std::make_unique<RooDataHist>((""template_data_hist_"" + suffix).c_str(), """", x, &h));. pdfs.addOwned(. *new RooHistPdf((""template_hist_pdf_"" + suffix).c_str(), """", xShifted, x, *templateHists.back(), 0));. yields.addOwned(*new RooRealVar((""n_"" + suffix).c_str(), """", 1000, 100, 100000));. }. // Construct final model. RooAddPdf model(""model"", """", pdfs, yields);. std::unique_ptr<RooDataHist> data{model.generateBinned(x)};. // If the range is larger than the variable range, the problem is even amplified. model.fitTo(*data, Range(0.0, 5000));. TCanvas c1;. auto frame = x.frame();. data->plotOn(frame);. model.plotOn(frame, Range(0.0, 2000.0));. model.plotOn(frame, Components(*pdfs[0]), LineStyle(kDashed), LineColor(kRed));. model.plotOn(frame, Components(*pdfs[1]), LineStyle(kDashed), LineColor(kBlue));. frame->Draw();. c1.SaveAs(""plot.png"");. }. ```. The plot looks like this:. ![plot](https://github.com/root-project/root/assets/6578603/fb0b4c49-50b6-4f6b-ae50-8a1cac2248a8). It would be nice if this plotting would work better, sampling the RooHistPdf at the correct points.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13030
https://github.com/root-project/root/issues/13030:2324,energy efficiency,Draw,Draw,2324,". https://root-forum.cern.ch/t/how-to-implement-a-horizontal-shift-for-roohistpdf/16787/6. I think I can approximately reproduce the workflow of the user that posted on the forum with this code. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x(""x"", """", 1000, 1500);. x.setBins(50);. RooRealVar shift(""shift"", """", 10.0, -100, 100);. RooFormulaVar xShifted(""x_shifted"", ""x - shift"", {x, shift});. // Doesn't work better either... // RooLinearVar xShifted(""x_shifted"", """", x, RooConst(1.0), shift);. std::vector<std::unique_ptr<RooDataHist>> templateHists;. RooArgSet pdfs;. RooArgSet yields;. // Fill the templates. for (std::size_t i = 0; i < 2; ++i) {. auto suffix = std::to_string(i);. TF1 pdf(""pdf"", ""gaus"", x.getMin(), x.getMax());. pdf.SetParameters(1, 1200 + 100 * i, 50);. pdf.Print();. TH1D h(""h"", """", x.numBins(), x.getMin(), x.getMax());. h.FillRandom(""pdf"", 10000);. templateHists.emplace_back(std::make_unique<RooDataHist>((""template_data_hist_"" + suffix).c_str(), """", x, &h));. pdfs.addOwned(. *new RooHistPdf((""template_hist_pdf_"" + suffix).c_str(), """", xShifted, x, *templateHists.back(), 0));. yields.addOwned(*new RooRealVar((""n_"" + suffix).c_str(), """", 1000, 100, 100000));. }. // Construct final model. RooAddPdf model(""model"", """", pdfs, yields);. std::unique_ptr<RooDataHist> data{model.generateBinned(x)};. // If the range is larger than the variable range, the problem is even amplified. model.fitTo(*data, Range(0.0, 5000));. TCanvas c1;. auto frame = x.frame();. data->plotOn(frame);. model.plotOn(frame, Range(0.0, 2000.0));. model.plotOn(frame, Components(*pdfs[0]), LineStyle(kDashed), LineColor(kRed));. model.plotOn(frame, Components(*pdfs[1]), LineStyle(kDashed), LineColor(kBlue));. frame->Draw();. c1.SaveAs(""plot.png"");. }. ```. The plot looks like this:. ![plot](https://github.com/root-project/root/assets/6578603/fb0b4c49-50b6-4f6b-ae50-8a1cac2248a8). It would be nice if this plotting would work better, sampling the RooHistPdf at the correct points.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13030
https://github.com/root-project/root/issues/13030:175,integrability,integr,integrator,175,"[RF] Plotting shifted RooHistPdfs doesn't go well; If you plot a shifted RooHistPdf, it doesn't look good. Probably because it is sampled at the wrong points, the numeric bin integrator doesn't work in this case, or both. This is a problem that comes up relatively often in the ROOT forum, the last time here:. https://root-forum.cern.ch/t/roofit-in-root-6-28-04/55267. By looking for the keyword ""shift"" in the RooFit forum, one can see that this problem also came up in the past already:. https://root-forum.cern.ch/search?expanded=true&q=shift%20%23roofit-and-roostats. For example here:. https://root-forum.cern.ch/t/how-to-implement-a-horizontal-shift-for-roohistpdf/16787/6. I think I can approximately reproduce the workflow of the user that posted on the forum with this code. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x(""x"", """", 1000, 1500);. x.setBins(50);. RooRealVar shift(""shift"", """", 10.0, -100, 100);. RooFormulaVar xShifted(""x_shifted"", ""x - shift"", {x, shift});. // Doesn't work better either... // RooLinearVar xShifted(""x_shifted"", """", x, RooConst(1.0), shift);. std::vector<std::unique_ptr<RooDataHist>> templateHists;. RooArgSet pdfs;. RooArgSet yields;. // Fill the templates. for (std::size_t i = 0; i < 2; ++i) {. auto suffix = std::to_string(i);. TF1 pdf(""pdf"", ""gaus"", x.getMin(), x.getMax());. pdf.SetParameters(1, 1200 + 100 * i, 50);. pdf.Print();. TH1D h(""h"", """", x.numBins(), x.getMin(), x.getMax());. h.FillRandom(""pdf"", 10000);. templateHists.emplace_back(std::make_unique<RooDataHist>((""template_data_hist_"" + suffix).c_str(), """", x, &h));. pdfs.addOwned(. *new RooHistPdf((""template_hist_pdf_"" + suffix).c_str(), """", xShifted, x, *templateHists.back(), 0));. yields.addOwned(*new RooRealVar((""n_"" + suffix).c_str(), """", 1000, 100, 100000));. }. // Construct final model. RooAddPdf model(""model"", """", pdfs, yields);. std::unique_ptr<RooDataHist> data{model.generateBinned(x)};. // If the range is larger than the variable range, the problem is eve",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13030
https://github.com/root-project/root/issues/13030:2174,integrability,Compon,Components,2174,". https://root-forum.cern.ch/t/how-to-implement-a-horizontal-shift-for-roohistpdf/16787/6. I think I can approximately reproduce the workflow of the user that posted on the forum with this code. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x(""x"", """", 1000, 1500);. x.setBins(50);. RooRealVar shift(""shift"", """", 10.0, -100, 100);. RooFormulaVar xShifted(""x_shifted"", ""x - shift"", {x, shift});. // Doesn't work better either... // RooLinearVar xShifted(""x_shifted"", """", x, RooConst(1.0), shift);. std::vector<std::unique_ptr<RooDataHist>> templateHists;. RooArgSet pdfs;. RooArgSet yields;. // Fill the templates. for (std::size_t i = 0; i < 2; ++i) {. auto suffix = std::to_string(i);. TF1 pdf(""pdf"", ""gaus"", x.getMin(), x.getMax());. pdf.SetParameters(1, 1200 + 100 * i, 50);. pdf.Print();. TH1D h(""h"", """", x.numBins(), x.getMin(), x.getMax());. h.FillRandom(""pdf"", 10000);. templateHists.emplace_back(std::make_unique<RooDataHist>((""template_data_hist_"" + suffix).c_str(), """", x, &h));. pdfs.addOwned(. *new RooHistPdf((""template_hist_pdf_"" + suffix).c_str(), """", xShifted, x, *templateHists.back(), 0));. yields.addOwned(*new RooRealVar((""n_"" + suffix).c_str(), """", 1000, 100, 100000));. }. // Construct final model. RooAddPdf model(""model"", """", pdfs, yields);. std::unique_ptr<RooDataHist> data{model.generateBinned(x)};. // If the range is larger than the variable range, the problem is even amplified. model.fitTo(*data, Range(0.0, 5000));. TCanvas c1;. auto frame = x.frame();. data->plotOn(frame);. model.plotOn(frame, Range(0.0, 2000.0));. model.plotOn(frame, Components(*pdfs[0]), LineStyle(kDashed), LineColor(kRed));. model.plotOn(frame, Components(*pdfs[1]), LineStyle(kDashed), LineColor(kBlue));. frame->Draw();. c1.SaveAs(""plot.png"");. }. ```. The plot looks like this:. ![plot](https://github.com/root-project/root/assets/6578603/fb0b4c49-50b6-4f6b-ae50-8a1cac2248a8). It would be nice if this plotting would work better, sampling the RooHistPdf at the correct points.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13030
https://github.com/root-project/root/issues/13030:2255,integrability,Compon,Components,2255,". https://root-forum.cern.ch/t/how-to-implement-a-horizontal-shift-for-roohistpdf/16787/6. I think I can approximately reproduce the workflow of the user that posted on the forum with this code. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x(""x"", """", 1000, 1500);. x.setBins(50);. RooRealVar shift(""shift"", """", 10.0, -100, 100);. RooFormulaVar xShifted(""x_shifted"", ""x - shift"", {x, shift});. // Doesn't work better either... // RooLinearVar xShifted(""x_shifted"", """", x, RooConst(1.0), shift);. std::vector<std::unique_ptr<RooDataHist>> templateHists;. RooArgSet pdfs;. RooArgSet yields;. // Fill the templates. for (std::size_t i = 0; i < 2; ++i) {. auto suffix = std::to_string(i);. TF1 pdf(""pdf"", ""gaus"", x.getMin(), x.getMax());. pdf.SetParameters(1, 1200 + 100 * i, 50);. pdf.Print();. TH1D h(""h"", """", x.numBins(), x.getMin(), x.getMax());. h.FillRandom(""pdf"", 10000);. templateHists.emplace_back(std::make_unique<RooDataHist>((""template_data_hist_"" + suffix).c_str(), """", x, &h));. pdfs.addOwned(. *new RooHistPdf((""template_hist_pdf_"" + suffix).c_str(), """", xShifted, x, *templateHists.back(), 0));. yields.addOwned(*new RooRealVar((""n_"" + suffix).c_str(), """", 1000, 100, 100000));. }. // Construct final model. RooAddPdf model(""model"", """", pdfs, yields);. std::unique_ptr<RooDataHist> data{model.generateBinned(x)};. // If the range is larger than the variable range, the problem is even amplified. model.fitTo(*data, Range(0.0, 5000));. TCanvas c1;. auto frame = x.frame();. data->plotOn(frame);. model.plotOn(frame, Range(0.0, 2000.0));. model.plotOn(frame, Components(*pdfs[0]), LineStyle(kDashed), LineColor(kRed));. model.plotOn(frame, Components(*pdfs[1]), LineStyle(kDashed), LineColor(kBlue));. frame->Draw();. c1.SaveAs(""plot.png"");. }. ```. The plot looks like this:. ![plot](https://github.com/root-project/root/assets/6578603/fb0b4c49-50b6-4f6b-ae50-8a1cac2248a8). It would be nice if this plotting would work better, sampling the RooHistPdf at the correct points.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13030
https://github.com/root-project/root/issues/13030:175,interoperability,integr,integrator,175,"[RF] Plotting shifted RooHistPdfs doesn't go well; If you plot a shifted RooHistPdf, it doesn't look good. Probably because it is sampled at the wrong points, the numeric bin integrator doesn't work in this case, or both. This is a problem that comes up relatively often in the ROOT forum, the last time here:. https://root-forum.cern.ch/t/roofit-in-root-6-28-04/55267. By looking for the keyword ""shift"" in the RooFit forum, one can see that this problem also came up in the past already:. https://root-forum.cern.ch/search?expanded=true&q=shift%20%23roofit-and-roostats. For example here:. https://root-forum.cern.ch/t/how-to-implement-a-horizontal-shift-for-roohistpdf/16787/6. I think I can approximately reproduce the workflow of the user that posted on the forum with this code. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x(""x"", """", 1000, 1500);. x.setBins(50);. RooRealVar shift(""shift"", """", 10.0, -100, 100);. RooFormulaVar xShifted(""x_shifted"", ""x - shift"", {x, shift});. // Doesn't work better either... // RooLinearVar xShifted(""x_shifted"", """", x, RooConst(1.0), shift);. std::vector<std::unique_ptr<RooDataHist>> templateHists;. RooArgSet pdfs;. RooArgSet yields;. // Fill the templates. for (std::size_t i = 0; i < 2; ++i) {. auto suffix = std::to_string(i);. TF1 pdf(""pdf"", ""gaus"", x.getMin(), x.getMax());. pdf.SetParameters(1, 1200 + 100 * i, 50);. pdf.Print();. TH1D h(""h"", """", x.numBins(), x.getMin(), x.getMax());. h.FillRandom(""pdf"", 10000);. templateHists.emplace_back(std::make_unique<RooDataHist>((""template_data_hist_"" + suffix).c_str(), """", x, &h));. pdfs.addOwned(. *new RooHistPdf((""template_hist_pdf_"" + suffix).c_str(), """", xShifted, x, *templateHists.back(), 0));. yields.addOwned(*new RooRealVar((""n_"" + suffix).c_str(), """", 1000, 100, 100000));. }. // Construct final model. RooAddPdf model(""model"", """", pdfs, yields);. std::unique_ptr<RooDataHist> data{model.generateBinned(x)};. // If the range is larger than the variable range, the problem is eve",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13030
https://github.com/root-project/root/issues/13030:2174,interoperability,Compon,Components,2174,". https://root-forum.cern.ch/t/how-to-implement-a-horizontal-shift-for-roohistpdf/16787/6. I think I can approximately reproduce the workflow of the user that posted on the forum with this code. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x(""x"", """", 1000, 1500);. x.setBins(50);. RooRealVar shift(""shift"", """", 10.0, -100, 100);. RooFormulaVar xShifted(""x_shifted"", ""x - shift"", {x, shift});. // Doesn't work better either... // RooLinearVar xShifted(""x_shifted"", """", x, RooConst(1.0), shift);. std::vector<std::unique_ptr<RooDataHist>> templateHists;. RooArgSet pdfs;. RooArgSet yields;. // Fill the templates. for (std::size_t i = 0; i < 2; ++i) {. auto suffix = std::to_string(i);. TF1 pdf(""pdf"", ""gaus"", x.getMin(), x.getMax());. pdf.SetParameters(1, 1200 + 100 * i, 50);. pdf.Print();. TH1D h(""h"", """", x.numBins(), x.getMin(), x.getMax());. h.FillRandom(""pdf"", 10000);. templateHists.emplace_back(std::make_unique<RooDataHist>((""template_data_hist_"" + suffix).c_str(), """", x, &h));. pdfs.addOwned(. *new RooHistPdf((""template_hist_pdf_"" + suffix).c_str(), """", xShifted, x, *templateHists.back(), 0));. yields.addOwned(*new RooRealVar((""n_"" + suffix).c_str(), """", 1000, 100, 100000));. }. // Construct final model. RooAddPdf model(""model"", """", pdfs, yields);. std::unique_ptr<RooDataHist> data{model.generateBinned(x)};. // If the range is larger than the variable range, the problem is even amplified. model.fitTo(*data, Range(0.0, 5000));. TCanvas c1;. auto frame = x.frame();. data->plotOn(frame);. model.plotOn(frame, Range(0.0, 2000.0));. model.plotOn(frame, Components(*pdfs[0]), LineStyle(kDashed), LineColor(kRed));. model.plotOn(frame, Components(*pdfs[1]), LineStyle(kDashed), LineColor(kBlue));. frame->Draw();. c1.SaveAs(""plot.png"");. }. ```. The plot looks like this:. ![plot](https://github.com/root-project/root/assets/6578603/fb0b4c49-50b6-4f6b-ae50-8a1cac2248a8). It would be nice if this plotting would work better, sampling the RooHistPdf at the correct points.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13030
https://github.com/root-project/root/issues/13030:2255,interoperability,Compon,Components,2255,". https://root-forum.cern.ch/t/how-to-implement-a-horizontal-shift-for-roohistpdf/16787/6. I think I can approximately reproduce the workflow of the user that posted on the forum with this code. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x(""x"", """", 1000, 1500);. x.setBins(50);. RooRealVar shift(""shift"", """", 10.0, -100, 100);. RooFormulaVar xShifted(""x_shifted"", ""x - shift"", {x, shift});. // Doesn't work better either... // RooLinearVar xShifted(""x_shifted"", """", x, RooConst(1.0), shift);. std::vector<std::unique_ptr<RooDataHist>> templateHists;. RooArgSet pdfs;. RooArgSet yields;. // Fill the templates. for (std::size_t i = 0; i < 2; ++i) {. auto suffix = std::to_string(i);. TF1 pdf(""pdf"", ""gaus"", x.getMin(), x.getMax());. pdf.SetParameters(1, 1200 + 100 * i, 50);. pdf.Print();. TH1D h(""h"", """", x.numBins(), x.getMin(), x.getMax());. h.FillRandom(""pdf"", 10000);. templateHists.emplace_back(std::make_unique<RooDataHist>((""template_data_hist_"" + suffix).c_str(), """", x, &h));. pdfs.addOwned(. *new RooHistPdf((""template_hist_pdf_"" + suffix).c_str(), """", xShifted, x, *templateHists.back(), 0));. yields.addOwned(*new RooRealVar((""n_"" + suffix).c_str(), """", 1000, 100, 100000));. }. // Construct final model. RooAddPdf model(""model"", """", pdfs, yields);. std::unique_ptr<RooDataHist> data{model.generateBinned(x)};. // If the range is larger than the variable range, the problem is even amplified. model.fitTo(*data, Range(0.0, 5000));. TCanvas c1;. auto frame = x.frame();. data->plotOn(frame);. model.plotOn(frame, Range(0.0, 2000.0));. model.plotOn(frame, Components(*pdfs[0]), LineStyle(kDashed), LineColor(kRed));. model.plotOn(frame, Components(*pdfs[1]), LineStyle(kDashed), LineColor(kBlue));. frame->Draw();. c1.SaveAs(""plot.png"");. }. ```. The plot looks like this:. ![plot](https://github.com/root-project/root/assets/6578603/fb0b4c49-50b6-4f6b-ae50-8a1cac2248a8). It would be nice if this plotting would work better, sampling the RooHistPdf at the correct points.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13030
https://github.com/root-project/root/issues/13030:175,modifiability,integr,integrator,175,"[RF] Plotting shifted RooHistPdfs doesn't go well; If you plot a shifted RooHistPdf, it doesn't look good. Probably because it is sampled at the wrong points, the numeric bin integrator doesn't work in this case, or both. This is a problem that comes up relatively often in the ROOT forum, the last time here:. https://root-forum.cern.ch/t/roofit-in-root-6-28-04/55267. By looking for the keyword ""shift"" in the RooFit forum, one can see that this problem also came up in the past already:. https://root-forum.cern.ch/search?expanded=true&q=shift%20%23roofit-and-roostats. For example here:. https://root-forum.cern.ch/t/how-to-implement-a-horizontal-shift-for-roohistpdf/16787/6. I think I can approximately reproduce the workflow of the user that posted on the forum with this code. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x(""x"", """", 1000, 1500);. x.setBins(50);. RooRealVar shift(""shift"", """", 10.0, -100, 100);. RooFormulaVar xShifted(""x_shifted"", ""x - shift"", {x, shift});. // Doesn't work better either... // RooLinearVar xShifted(""x_shifted"", """", x, RooConst(1.0), shift);. std::vector<std::unique_ptr<RooDataHist>> templateHists;. RooArgSet pdfs;. RooArgSet yields;. // Fill the templates. for (std::size_t i = 0; i < 2; ++i) {. auto suffix = std::to_string(i);. TF1 pdf(""pdf"", ""gaus"", x.getMin(), x.getMax());. pdf.SetParameters(1, 1200 + 100 * i, 50);. pdf.Print();. TH1D h(""h"", """", x.numBins(), x.getMin(), x.getMax());. h.FillRandom(""pdf"", 10000);. templateHists.emplace_back(std::make_unique<RooDataHist>((""template_data_hist_"" + suffix).c_str(), """", x, &h));. pdfs.addOwned(. *new RooHistPdf((""template_hist_pdf_"" + suffix).c_str(), """", xShifted, x, *templateHists.back(), 0));. yields.addOwned(*new RooRealVar((""n_"" + suffix).c_str(), """", 1000, 100, 100000));. }. // Construct final model. RooAddPdf model(""model"", """", pdfs, yields);. std::unique_ptr<RooDataHist> data{model.generateBinned(x)};. // If the range is larger than the variable range, the problem is eve",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13030
https://github.com/root-project/root/issues/13030:1966,modifiability,variab,variable,1966,". https://root-forum.cern.ch/t/how-to-implement-a-horizontal-shift-for-roohistpdf/16787/6. I think I can approximately reproduce the workflow of the user that posted on the forum with this code. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x(""x"", """", 1000, 1500);. x.setBins(50);. RooRealVar shift(""shift"", """", 10.0, -100, 100);. RooFormulaVar xShifted(""x_shifted"", ""x - shift"", {x, shift});. // Doesn't work better either... // RooLinearVar xShifted(""x_shifted"", """", x, RooConst(1.0), shift);. std::vector<std::unique_ptr<RooDataHist>> templateHists;. RooArgSet pdfs;. RooArgSet yields;. // Fill the templates. for (std::size_t i = 0; i < 2; ++i) {. auto suffix = std::to_string(i);. TF1 pdf(""pdf"", ""gaus"", x.getMin(), x.getMax());. pdf.SetParameters(1, 1200 + 100 * i, 50);. pdf.Print();. TH1D h(""h"", """", x.numBins(), x.getMin(), x.getMax());. h.FillRandom(""pdf"", 10000);. templateHists.emplace_back(std::make_unique<RooDataHist>((""template_data_hist_"" + suffix).c_str(), """", x, &h));. pdfs.addOwned(. *new RooHistPdf((""template_hist_pdf_"" + suffix).c_str(), """", xShifted, x, *templateHists.back(), 0));. yields.addOwned(*new RooRealVar((""n_"" + suffix).c_str(), """", 1000, 100, 100000));. }. // Construct final model. RooAddPdf model(""model"", """", pdfs, yields);. std::unique_ptr<RooDataHist> data{model.generateBinned(x)};. // If the range is larger than the variable range, the problem is even amplified. model.fitTo(*data, Range(0.0, 5000));. TCanvas c1;. auto frame = x.frame();. data->plotOn(frame);. model.plotOn(frame, Range(0.0, 2000.0));. model.plotOn(frame, Components(*pdfs[0]), LineStyle(kDashed), LineColor(kRed));. model.plotOn(frame, Components(*pdfs[1]), LineStyle(kDashed), LineColor(kBlue));. frame->Draw();. c1.SaveAs(""plot.png"");. }. ```. The plot looks like this:. ![plot](https://github.com/root-project/root/assets/6578603/fb0b4c49-50b6-4f6b-ae50-8a1cac2248a8). It would be nice if this plotting would work better, sampling the RooHistPdf at the correct points.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13030
https://github.com/root-project/root/issues/13030:2174,modifiability,Compon,Components,2174,". https://root-forum.cern.ch/t/how-to-implement-a-horizontal-shift-for-roohistpdf/16787/6. I think I can approximately reproduce the workflow of the user that posted on the forum with this code. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x(""x"", """", 1000, 1500);. x.setBins(50);. RooRealVar shift(""shift"", """", 10.0, -100, 100);. RooFormulaVar xShifted(""x_shifted"", ""x - shift"", {x, shift});. // Doesn't work better either... // RooLinearVar xShifted(""x_shifted"", """", x, RooConst(1.0), shift);. std::vector<std::unique_ptr<RooDataHist>> templateHists;. RooArgSet pdfs;. RooArgSet yields;. // Fill the templates. for (std::size_t i = 0; i < 2; ++i) {. auto suffix = std::to_string(i);. TF1 pdf(""pdf"", ""gaus"", x.getMin(), x.getMax());. pdf.SetParameters(1, 1200 + 100 * i, 50);. pdf.Print();. TH1D h(""h"", """", x.numBins(), x.getMin(), x.getMax());. h.FillRandom(""pdf"", 10000);. templateHists.emplace_back(std::make_unique<RooDataHist>((""template_data_hist_"" + suffix).c_str(), """", x, &h));. pdfs.addOwned(. *new RooHistPdf((""template_hist_pdf_"" + suffix).c_str(), """", xShifted, x, *templateHists.back(), 0));. yields.addOwned(*new RooRealVar((""n_"" + suffix).c_str(), """", 1000, 100, 100000));. }. // Construct final model. RooAddPdf model(""model"", """", pdfs, yields);. std::unique_ptr<RooDataHist> data{model.generateBinned(x)};. // If the range is larger than the variable range, the problem is even amplified. model.fitTo(*data, Range(0.0, 5000));. TCanvas c1;. auto frame = x.frame();. data->plotOn(frame);. model.plotOn(frame, Range(0.0, 2000.0));. model.plotOn(frame, Components(*pdfs[0]), LineStyle(kDashed), LineColor(kRed));. model.plotOn(frame, Components(*pdfs[1]), LineStyle(kDashed), LineColor(kBlue));. frame->Draw();. c1.SaveAs(""plot.png"");. }. ```. The plot looks like this:. ![plot](https://github.com/root-project/root/assets/6578603/fb0b4c49-50b6-4f6b-ae50-8a1cac2248a8). It would be nice if this plotting would work better, sampling the RooHistPdf at the correct points.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13030
https://github.com/root-project/root/issues/13030:2255,modifiability,Compon,Components,2255,". https://root-forum.cern.ch/t/how-to-implement-a-horizontal-shift-for-roohistpdf/16787/6. I think I can approximately reproduce the workflow of the user that posted on the forum with this code. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x(""x"", """", 1000, 1500);. x.setBins(50);. RooRealVar shift(""shift"", """", 10.0, -100, 100);. RooFormulaVar xShifted(""x_shifted"", ""x - shift"", {x, shift});. // Doesn't work better either... // RooLinearVar xShifted(""x_shifted"", """", x, RooConst(1.0), shift);. std::vector<std::unique_ptr<RooDataHist>> templateHists;. RooArgSet pdfs;. RooArgSet yields;. // Fill the templates. for (std::size_t i = 0; i < 2; ++i) {. auto suffix = std::to_string(i);. TF1 pdf(""pdf"", ""gaus"", x.getMin(), x.getMax());. pdf.SetParameters(1, 1200 + 100 * i, 50);. pdf.Print();. TH1D h(""h"", """", x.numBins(), x.getMin(), x.getMax());. h.FillRandom(""pdf"", 10000);. templateHists.emplace_back(std::make_unique<RooDataHist>((""template_data_hist_"" + suffix).c_str(), """", x, &h));. pdfs.addOwned(. *new RooHistPdf((""template_hist_pdf_"" + suffix).c_str(), """", xShifted, x, *templateHists.back(), 0));. yields.addOwned(*new RooRealVar((""n_"" + suffix).c_str(), """", 1000, 100, 100000));. }. // Construct final model. RooAddPdf model(""model"", """", pdfs, yields);. std::unique_ptr<RooDataHist> data{model.generateBinned(x)};. // If the range is larger than the variable range, the problem is even amplified. model.fitTo(*data, Range(0.0, 5000));. TCanvas c1;. auto frame = x.frame();. data->plotOn(frame);. model.plotOn(frame, Range(0.0, 2000.0));. model.plotOn(frame, Components(*pdfs[0]), LineStyle(kDashed), LineColor(kRed));. model.plotOn(frame, Components(*pdfs[1]), LineStyle(kDashed), LineColor(kBlue));. frame->Draw();. c1.SaveAs(""plot.png"");. }. ```. The plot looks like this:. ![plot](https://github.com/root-project/root/assets/6578603/fb0b4c49-50b6-4f6b-ae50-8a1cac2248a8). It would be nice if this plotting would work better, sampling the RooHistPdf at the correct points.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13030
https://github.com/root-project/root/issues/13030:299,performance,time,time,299,"[RF] Plotting shifted RooHistPdfs doesn't go well; If you plot a shifted RooHistPdf, it doesn't look good. Probably because it is sampled at the wrong points, the numeric bin integrator doesn't work in this case, or both. This is a problem that comes up relatively often in the ROOT forum, the last time here:. https://root-forum.cern.ch/t/roofit-in-root-6-28-04/55267. By looking for the keyword ""shift"" in the RooFit forum, one can see that this problem also came up in the past already:. https://root-forum.cern.ch/search?expanded=true&q=shift%20%23roofit-and-roostats. For example here:. https://root-forum.cern.ch/t/how-to-implement-a-horizontal-shift-for-roohistpdf/16787/6. I think I can approximately reproduce the workflow of the user that posted on the forum with this code. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x(""x"", """", 1000, 1500);. x.setBins(50);. RooRealVar shift(""shift"", """", 10.0, -100, 100);. RooFormulaVar xShifted(""x_shifted"", ""x - shift"", {x, shift});. // Doesn't work better either... // RooLinearVar xShifted(""x_shifted"", """", x, RooConst(1.0), shift);. std::vector<std::unique_ptr<RooDataHist>> templateHists;. RooArgSet pdfs;. RooArgSet yields;. // Fill the templates. for (std::size_t i = 0; i < 2; ++i) {. auto suffix = std::to_string(i);. TF1 pdf(""pdf"", ""gaus"", x.getMin(), x.getMax());. pdf.SetParameters(1, 1200 + 100 * i, 50);. pdf.Print();. TH1D h(""h"", """", x.numBins(), x.getMin(), x.getMax());. h.FillRandom(""pdf"", 10000);. templateHists.emplace_back(std::make_unique<RooDataHist>((""template_data_hist_"" + suffix).c_str(), """", x, &h));. pdfs.addOwned(. *new RooHistPdf((""template_hist_pdf_"" + suffix).c_str(), """", xShifted, x, *templateHists.back(), 0));. yields.addOwned(*new RooRealVar((""n_"" + suffix).c_str(), """", 1000, 100, 100000));. }. // Construct final model. RooAddPdf model(""model"", """", pdfs, yields);. std::unique_ptr<RooDataHist> data{model.generateBinned(x)};. // If the range is larger than the variable range, the problem is eve",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13030
https://github.com/root-project/root/issues/13030:34,reliability,doe,doesn,34,"[RF] Plotting shifted RooHistPdfs doesn't go well; If you plot a shifted RooHistPdf, it doesn't look good. Probably because it is sampled at the wrong points, the numeric bin integrator doesn't work in this case, or both. This is a problem that comes up relatively often in the ROOT forum, the last time here:. https://root-forum.cern.ch/t/roofit-in-root-6-28-04/55267. By looking for the keyword ""shift"" in the RooFit forum, one can see that this problem also came up in the past already:. https://root-forum.cern.ch/search?expanded=true&q=shift%20%23roofit-and-roostats. For example here:. https://root-forum.cern.ch/t/how-to-implement-a-horizontal-shift-for-roohistpdf/16787/6. I think I can approximately reproduce the workflow of the user that posted on the forum with this code. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x(""x"", """", 1000, 1500);. x.setBins(50);. RooRealVar shift(""shift"", """", 10.0, -100, 100);. RooFormulaVar xShifted(""x_shifted"", ""x - shift"", {x, shift});. // Doesn't work better either... // RooLinearVar xShifted(""x_shifted"", """", x, RooConst(1.0), shift);. std::vector<std::unique_ptr<RooDataHist>> templateHists;. RooArgSet pdfs;. RooArgSet yields;. // Fill the templates. for (std::size_t i = 0; i < 2; ++i) {. auto suffix = std::to_string(i);. TF1 pdf(""pdf"", ""gaus"", x.getMin(), x.getMax());. pdf.SetParameters(1, 1200 + 100 * i, 50);. pdf.Print();. TH1D h(""h"", """", x.numBins(), x.getMin(), x.getMax());. h.FillRandom(""pdf"", 10000);. templateHists.emplace_back(std::make_unique<RooDataHist>((""template_data_hist_"" + suffix).c_str(), """", x, &h));. pdfs.addOwned(. *new RooHistPdf((""template_hist_pdf_"" + suffix).c_str(), """", xShifted, x, *templateHists.back(), 0));. yields.addOwned(*new RooRealVar((""n_"" + suffix).c_str(), """", 1000, 100, 100000));. }. // Construct final model. RooAddPdf model(""model"", """", pdfs, yields);. std::unique_ptr<RooDataHist> data{model.generateBinned(x)};. // If the range is larger than the variable range, the problem is eve",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13030
https://github.com/root-project/root/issues/13030:88,reliability,doe,doesn,88,"[RF] Plotting shifted RooHistPdfs doesn't go well; If you plot a shifted RooHistPdf, it doesn't look good. Probably because it is sampled at the wrong points, the numeric bin integrator doesn't work in this case, or both. This is a problem that comes up relatively often in the ROOT forum, the last time here:. https://root-forum.cern.ch/t/roofit-in-root-6-28-04/55267. By looking for the keyword ""shift"" in the RooFit forum, one can see that this problem also came up in the past already:. https://root-forum.cern.ch/search?expanded=true&q=shift%20%23roofit-and-roostats. For example here:. https://root-forum.cern.ch/t/how-to-implement-a-horizontal-shift-for-roohistpdf/16787/6. I think I can approximately reproduce the workflow of the user that posted on the forum with this code. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x(""x"", """", 1000, 1500);. x.setBins(50);. RooRealVar shift(""shift"", """", 10.0, -100, 100);. RooFormulaVar xShifted(""x_shifted"", ""x - shift"", {x, shift});. // Doesn't work better either... // RooLinearVar xShifted(""x_shifted"", """", x, RooConst(1.0), shift);. std::vector<std::unique_ptr<RooDataHist>> templateHists;. RooArgSet pdfs;. RooArgSet yields;. // Fill the templates. for (std::size_t i = 0; i < 2; ++i) {. auto suffix = std::to_string(i);. TF1 pdf(""pdf"", ""gaus"", x.getMin(), x.getMax());. pdf.SetParameters(1, 1200 + 100 * i, 50);. pdf.Print();. TH1D h(""h"", """", x.numBins(), x.getMin(), x.getMax());. h.FillRandom(""pdf"", 10000);. templateHists.emplace_back(std::make_unique<RooDataHist>((""template_data_hist_"" + suffix).c_str(), """", x, &h));. pdfs.addOwned(. *new RooHistPdf((""template_hist_pdf_"" + suffix).c_str(), """", xShifted, x, *templateHists.back(), 0));. yields.addOwned(*new RooRealVar((""n_"" + suffix).c_str(), """", 1000, 100, 100000));. }. // Construct final model. RooAddPdf model(""model"", """", pdfs, yields);. std::unique_ptr<RooDataHist> data{model.generateBinned(x)};. // If the range is larger than the variable range, the problem is eve",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13030
https://github.com/root-project/root/issues/13030:175,reliability,integr,integrator,175,"[RF] Plotting shifted RooHistPdfs doesn't go well; If you plot a shifted RooHistPdf, it doesn't look good. Probably because it is sampled at the wrong points, the numeric bin integrator doesn't work in this case, or both. This is a problem that comes up relatively often in the ROOT forum, the last time here:. https://root-forum.cern.ch/t/roofit-in-root-6-28-04/55267. By looking for the keyword ""shift"" in the RooFit forum, one can see that this problem also came up in the past already:. https://root-forum.cern.ch/search?expanded=true&q=shift%20%23roofit-and-roostats. For example here:. https://root-forum.cern.ch/t/how-to-implement-a-horizontal-shift-for-roohistpdf/16787/6. I think I can approximately reproduce the workflow of the user that posted on the forum with this code. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x(""x"", """", 1000, 1500);. x.setBins(50);. RooRealVar shift(""shift"", """", 10.0, -100, 100);. RooFormulaVar xShifted(""x_shifted"", ""x - shift"", {x, shift});. // Doesn't work better either... // RooLinearVar xShifted(""x_shifted"", """", x, RooConst(1.0), shift);. std::vector<std::unique_ptr<RooDataHist>> templateHists;. RooArgSet pdfs;. RooArgSet yields;. // Fill the templates. for (std::size_t i = 0; i < 2; ++i) {. auto suffix = std::to_string(i);. TF1 pdf(""pdf"", ""gaus"", x.getMin(), x.getMax());. pdf.SetParameters(1, 1200 + 100 * i, 50);. pdf.Print();. TH1D h(""h"", """", x.numBins(), x.getMin(), x.getMax());. h.FillRandom(""pdf"", 10000);. templateHists.emplace_back(std::make_unique<RooDataHist>((""template_data_hist_"" + suffix).c_str(), """", x, &h));. pdfs.addOwned(. *new RooHistPdf((""template_hist_pdf_"" + suffix).c_str(), """", xShifted, x, *templateHists.back(), 0));. yields.addOwned(*new RooRealVar((""n_"" + suffix).c_str(), """", 1000, 100, 100000));. }. // Construct final model. RooAddPdf model(""model"", """", pdfs, yields);. std::unique_ptr<RooDataHist> data{model.generateBinned(x)};. // If the range is larger than the variable range, the problem is eve",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13030
https://github.com/root-project/root/issues/13030:186,reliability,doe,doesn,186,"[RF] Plotting shifted RooHistPdfs doesn't go well; If you plot a shifted RooHistPdf, it doesn't look good. Probably because it is sampled at the wrong points, the numeric bin integrator doesn't work in this case, or both. This is a problem that comes up relatively often in the ROOT forum, the last time here:. https://root-forum.cern.ch/t/roofit-in-root-6-28-04/55267. By looking for the keyword ""shift"" in the RooFit forum, one can see that this problem also came up in the past already:. https://root-forum.cern.ch/search?expanded=true&q=shift%20%23roofit-and-roostats. For example here:. https://root-forum.cern.ch/t/how-to-implement-a-horizontal-shift-for-roohistpdf/16787/6. I think I can approximately reproduce the workflow of the user that posted on the forum with this code. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x(""x"", """", 1000, 1500);. x.setBins(50);. RooRealVar shift(""shift"", """", 10.0, -100, 100);. RooFormulaVar xShifted(""x_shifted"", ""x - shift"", {x, shift});. // Doesn't work better either... // RooLinearVar xShifted(""x_shifted"", """", x, RooConst(1.0), shift);. std::vector<std::unique_ptr<RooDataHist>> templateHists;. RooArgSet pdfs;. RooArgSet yields;. // Fill the templates. for (std::size_t i = 0; i < 2; ++i) {. auto suffix = std::to_string(i);. TF1 pdf(""pdf"", ""gaus"", x.getMin(), x.getMax());. pdf.SetParameters(1, 1200 + 100 * i, 50);. pdf.Print();. TH1D h(""h"", """", x.numBins(), x.getMin(), x.getMax());. h.FillRandom(""pdf"", 10000);. templateHists.emplace_back(std::make_unique<RooDataHist>((""template_data_hist_"" + suffix).c_str(), """", x, &h));. pdfs.addOwned(. *new RooHistPdf((""template_hist_pdf_"" + suffix).c_str(), """", xShifted, x, *templateHists.back(), 0));. yields.addOwned(*new RooRealVar((""n_"" + suffix).c_str(), """", 1000, 100, 100000));. }. // Construct final model. RooAddPdf model(""model"", """", pdfs, yields);. std::unique_ptr<RooDataHist> data{model.generateBinned(x)};. // If the range is larger than the variable range, the problem is eve",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13030
https://github.com/root-project/root/issues/13030:1002,reliability,Doe,Doesn,1002,"Plotting shifted RooHistPdfs doesn't go well; If you plot a shifted RooHistPdf, it doesn't look good. Probably because it is sampled at the wrong points, the numeric bin integrator doesn't work in this case, or both. This is a problem that comes up relatively often in the ROOT forum, the last time here:. https://root-forum.cern.ch/t/roofit-in-root-6-28-04/55267. By looking for the keyword ""shift"" in the RooFit forum, one can see that this problem also came up in the past already:. https://root-forum.cern.ch/search?expanded=true&q=shift%20%23roofit-and-roostats. For example here:. https://root-forum.cern.ch/t/how-to-implement-a-horizontal-shift-for-roohistpdf/16787/6. I think I can approximately reproduce the workflow of the user that posted on the forum with this code. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x(""x"", """", 1000, 1500);. x.setBins(50);. RooRealVar shift(""shift"", """", 10.0, -100, 100);. RooFormulaVar xShifted(""x_shifted"", ""x - shift"", {x, shift});. // Doesn't work better either... // RooLinearVar xShifted(""x_shifted"", """", x, RooConst(1.0), shift);. std::vector<std::unique_ptr<RooDataHist>> templateHists;. RooArgSet pdfs;. RooArgSet yields;. // Fill the templates. for (std::size_t i = 0; i < 2; ++i) {. auto suffix = std::to_string(i);. TF1 pdf(""pdf"", ""gaus"", x.getMin(), x.getMax());. pdf.SetParameters(1, 1200 + 100 * i, 50);. pdf.Print();. TH1D h(""h"", """", x.numBins(), x.getMin(), x.getMax());. h.FillRandom(""pdf"", 10000);. templateHists.emplace_back(std::make_unique<RooDataHist>((""template_data_hist_"" + suffix).c_str(), """", x, &h));. pdfs.addOwned(. *new RooHistPdf((""template_hist_pdf_"" + suffix).c_str(), """", xShifted, x, *templateHists.back(), 0));. yields.addOwned(*new RooRealVar((""n_"" + suffix).c_str(), """", 1000, 100, 100000));. }. // Construct final model. RooAddPdf model(""model"", """", pdfs, yields);. std::unique_ptr<RooDataHist> data{model.generateBinned(x)};. // If the range is larger than the variable range, the problem is even amp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13030
https://github.com/root-project/root/issues/13030:175,security,integr,integrator,175,"[RF] Plotting shifted RooHistPdfs doesn't go well; If you plot a shifted RooHistPdf, it doesn't look good. Probably because it is sampled at the wrong points, the numeric bin integrator doesn't work in this case, or both. This is a problem that comes up relatively often in the ROOT forum, the last time here:. https://root-forum.cern.ch/t/roofit-in-root-6-28-04/55267. By looking for the keyword ""shift"" in the RooFit forum, one can see that this problem also came up in the past already:. https://root-forum.cern.ch/search?expanded=true&q=shift%20%23roofit-and-roostats. For example here:. https://root-forum.cern.ch/t/how-to-implement-a-horizontal-shift-for-roohistpdf/16787/6. I think I can approximately reproduce the workflow of the user that posted on the forum with this code. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x(""x"", """", 1000, 1500);. x.setBins(50);. RooRealVar shift(""shift"", """", 10.0, -100, 100);. RooFormulaVar xShifted(""x_shifted"", ""x - shift"", {x, shift});. // Doesn't work better either... // RooLinearVar xShifted(""x_shifted"", """", x, RooConst(1.0), shift);. std::vector<std::unique_ptr<RooDataHist>> templateHists;. RooArgSet pdfs;. RooArgSet yields;. // Fill the templates. for (std::size_t i = 0; i < 2; ++i) {. auto suffix = std::to_string(i);. TF1 pdf(""pdf"", ""gaus"", x.getMin(), x.getMax());. pdf.SetParameters(1, 1200 + 100 * i, 50);. pdf.Print();. TH1D h(""h"", """", x.numBins(), x.getMin(), x.getMax());. h.FillRandom(""pdf"", 10000);. templateHists.emplace_back(std::make_unique<RooDataHist>((""template_data_hist_"" + suffix).c_str(), """", x, &h));. pdfs.addOwned(. *new RooHistPdf((""template_hist_pdf_"" + suffix).c_str(), """", xShifted, x, *templateHists.back(), 0));. yields.addOwned(*new RooRealVar((""n_"" + suffix).c_str(), """", 1000, 100, 100000));. }. // Construct final model. RooAddPdf model(""model"", """", pdfs, yields);. std::unique_ptr<RooDataHist> data{model.generateBinned(x)};. // If the range is larger than the variable range, the problem is eve",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13030
https://github.com/root-project/root/issues/13030:1818,security,model,model,1818,". https://root-forum.cern.ch/t/how-to-implement-a-horizontal-shift-for-roohistpdf/16787/6. I think I can approximately reproduce the workflow of the user that posted on the forum with this code. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x(""x"", """", 1000, 1500);. x.setBins(50);. RooRealVar shift(""shift"", """", 10.0, -100, 100);. RooFormulaVar xShifted(""x_shifted"", ""x - shift"", {x, shift});. // Doesn't work better either... // RooLinearVar xShifted(""x_shifted"", """", x, RooConst(1.0), shift);. std::vector<std::unique_ptr<RooDataHist>> templateHists;. RooArgSet pdfs;. RooArgSet yields;. // Fill the templates. for (std::size_t i = 0; i < 2; ++i) {. auto suffix = std::to_string(i);. TF1 pdf(""pdf"", ""gaus"", x.getMin(), x.getMax());. pdf.SetParameters(1, 1200 + 100 * i, 50);. pdf.Print();. TH1D h(""h"", """", x.numBins(), x.getMin(), x.getMax());. h.FillRandom(""pdf"", 10000);. templateHists.emplace_back(std::make_unique<RooDataHist>((""template_data_hist_"" + suffix).c_str(), """", x, &h));. pdfs.addOwned(. *new RooHistPdf((""template_hist_pdf_"" + suffix).c_str(), """", xShifted, x, *templateHists.back(), 0));. yields.addOwned(*new RooRealVar((""n_"" + suffix).c_str(), """", 1000, 100, 100000));. }. // Construct final model. RooAddPdf model(""model"", """", pdfs, yields);. std::unique_ptr<RooDataHist> data{model.generateBinned(x)};. // If the range is larger than the variable range, the problem is even amplified. model.fitTo(*data, Range(0.0, 5000));. TCanvas c1;. auto frame = x.frame();. data->plotOn(frame);. model.plotOn(frame, Range(0.0, 2000.0));. model.plotOn(frame, Components(*pdfs[0]), LineStyle(kDashed), LineColor(kRed));. model.plotOn(frame, Components(*pdfs[1]), LineStyle(kDashed), LineColor(kBlue));. frame->Draw();. c1.SaveAs(""plot.png"");. }. ```. The plot looks like this:. ![plot](https://github.com/root-project/root/assets/6578603/fb0b4c49-50b6-4f6b-ae50-8a1cac2248a8). It would be nice if this plotting would work better, sampling the RooHistPdf at the correct points.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13030
https://github.com/root-project/root/issues/13030:1835,security,model,model,1835,". https://root-forum.cern.ch/t/how-to-implement-a-horizontal-shift-for-roohistpdf/16787/6. I think I can approximately reproduce the workflow of the user that posted on the forum with this code. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x(""x"", """", 1000, 1500);. x.setBins(50);. RooRealVar shift(""shift"", """", 10.0, -100, 100);. RooFormulaVar xShifted(""x_shifted"", ""x - shift"", {x, shift});. // Doesn't work better either... // RooLinearVar xShifted(""x_shifted"", """", x, RooConst(1.0), shift);. std::vector<std::unique_ptr<RooDataHist>> templateHists;. RooArgSet pdfs;. RooArgSet yields;. // Fill the templates. for (std::size_t i = 0; i < 2; ++i) {. auto suffix = std::to_string(i);. TF1 pdf(""pdf"", ""gaus"", x.getMin(), x.getMax());. pdf.SetParameters(1, 1200 + 100 * i, 50);. pdf.Print();. TH1D h(""h"", """", x.numBins(), x.getMin(), x.getMax());. h.FillRandom(""pdf"", 10000);. templateHists.emplace_back(std::make_unique<RooDataHist>((""template_data_hist_"" + suffix).c_str(), """", x, &h));. pdfs.addOwned(. *new RooHistPdf((""template_hist_pdf_"" + suffix).c_str(), """", xShifted, x, *templateHists.back(), 0));. yields.addOwned(*new RooRealVar((""n_"" + suffix).c_str(), """", 1000, 100, 100000));. }. // Construct final model. RooAddPdf model(""model"", """", pdfs, yields);. std::unique_ptr<RooDataHist> data{model.generateBinned(x)};. // If the range is larger than the variable range, the problem is even amplified. model.fitTo(*data, Range(0.0, 5000));. TCanvas c1;. auto frame = x.frame();. data->plotOn(frame);. model.plotOn(frame, Range(0.0, 2000.0));. model.plotOn(frame, Components(*pdfs[0]), LineStyle(kDashed), LineColor(kRed));. model.plotOn(frame, Components(*pdfs[1]), LineStyle(kDashed), LineColor(kBlue));. frame->Draw();. c1.SaveAs(""plot.png"");. }. ```. The plot looks like this:. ![plot](https://github.com/root-project/root/assets/6578603/fb0b4c49-50b6-4f6b-ae50-8a1cac2248a8). It would be nice if this plotting would work better, sampling the RooHistPdf at the correct points.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13030
https://github.com/root-project/root/issues/13030:1842,security,model,model,1842,". https://root-forum.cern.ch/t/how-to-implement-a-horizontal-shift-for-roohistpdf/16787/6. I think I can approximately reproduce the workflow of the user that posted on the forum with this code. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x(""x"", """", 1000, 1500);. x.setBins(50);. RooRealVar shift(""shift"", """", 10.0, -100, 100);. RooFormulaVar xShifted(""x_shifted"", ""x - shift"", {x, shift});. // Doesn't work better either... // RooLinearVar xShifted(""x_shifted"", """", x, RooConst(1.0), shift);. std::vector<std::unique_ptr<RooDataHist>> templateHists;. RooArgSet pdfs;. RooArgSet yields;. // Fill the templates. for (std::size_t i = 0; i < 2; ++i) {. auto suffix = std::to_string(i);. TF1 pdf(""pdf"", ""gaus"", x.getMin(), x.getMax());. pdf.SetParameters(1, 1200 + 100 * i, 50);. pdf.Print();. TH1D h(""h"", """", x.numBins(), x.getMin(), x.getMax());. h.FillRandom(""pdf"", 10000);. templateHists.emplace_back(std::make_unique<RooDataHist>((""template_data_hist_"" + suffix).c_str(), """", x, &h));. pdfs.addOwned(. *new RooHistPdf((""template_hist_pdf_"" + suffix).c_str(), """", xShifted, x, *templateHists.back(), 0));. yields.addOwned(*new RooRealVar((""n_"" + suffix).c_str(), """", 1000, 100, 100000));. }. // Construct final model. RooAddPdf model(""model"", """", pdfs, yields);. std::unique_ptr<RooDataHist> data{model.generateBinned(x)};. // If the range is larger than the variable range, the problem is even amplified. model.fitTo(*data, Range(0.0, 5000));. TCanvas c1;. auto frame = x.frame();. data->plotOn(frame);. model.plotOn(frame, Range(0.0, 2000.0));. model.plotOn(frame, Components(*pdfs[0]), LineStyle(kDashed), LineColor(kRed));. model.plotOn(frame, Components(*pdfs[1]), LineStyle(kDashed), LineColor(kBlue));. frame->Draw();. c1.SaveAs(""plot.png"");. }. ```. The plot looks like this:. ![plot](https://github.com/root-project/root/assets/6578603/fb0b4c49-50b6-4f6b-ae50-8a1cac2248a8). It would be nice if this plotting would work better, sampling the RooHistPdf at the correct points.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13030
https://github.com/root-project/root/issues/13030:1904,security,model,model,1904,". https://root-forum.cern.ch/t/how-to-implement-a-horizontal-shift-for-roohistpdf/16787/6. I think I can approximately reproduce the workflow of the user that posted on the forum with this code. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x(""x"", """", 1000, 1500);. x.setBins(50);. RooRealVar shift(""shift"", """", 10.0, -100, 100);. RooFormulaVar xShifted(""x_shifted"", ""x - shift"", {x, shift});. // Doesn't work better either... // RooLinearVar xShifted(""x_shifted"", """", x, RooConst(1.0), shift);. std::vector<std::unique_ptr<RooDataHist>> templateHists;. RooArgSet pdfs;. RooArgSet yields;. // Fill the templates. for (std::size_t i = 0; i < 2; ++i) {. auto suffix = std::to_string(i);. TF1 pdf(""pdf"", ""gaus"", x.getMin(), x.getMax());. pdf.SetParameters(1, 1200 + 100 * i, 50);. pdf.Print();. TH1D h(""h"", """", x.numBins(), x.getMin(), x.getMax());. h.FillRandom(""pdf"", 10000);. templateHists.emplace_back(std::make_unique<RooDataHist>((""template_data_hist_"" + suffix).c_str(), """", x, &h));. pdfs.addOwned(. *new RooHistPdf((""template_hist_pdf_"" + suffix).c_str(), """", xShifted, x, *templateHists.back(), 0));. yields.addOwned(*new RooRealVar((""n_"" + suffix).c_str(), """", 1000, 100, 100000));. }. // Construct final model. RooAddPdf model(""model"", """", pdfs, yields);. std::unique_ptr<RooDataHist> data{model.generateBinned(x)};. // If the range is larger than the variable range, the problem is even amplified. model.fitTo(*data, Range(0.0, 5000));. TCanvas c1;. auto frame = x.frame();. data->plotOn(frame);. model.plotOn(frame, Range(0.0, 2000.0));. model.plotOn(frame, Components(*pdfs[0]), LineStyle(kDashed), LineColor(kRed));. model.plotOn(frame, Components(*pdfs[1]), LineStyle(kDashed), LineColor(kBlue));. frame->Draw();. c1.SaveAs(""plot.png"");. }. ```. The plot looks like this:. ![plot](https://github.com/root-project/root/assets/6578603/fb0b4c49-50b6-4f6b-ae50-8a1cac2248a8). It would be nice if this plotting would work better, sampling the RooHistPdf at the correct points.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13030
https://github.com/root-project/root/issues/13030:2013,security,model,model,2013,". https://root-forum.cern.ch/t/how-to-implement-a-horizontal-shift-for-roohistpdf/16787/6. I think I can approximately reproduce the workflow of the user that posted on the forum with this code. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x(""x"", """", 1000, 1500);. x.setBins(50);. RooRealVar shift(""shift"", """", 10.0, -100, 100);. RooFormulaVar xShifted(""x_shifted"", ""x - shift"", {x, shift});. // Doesn't work better either... // RooLinearVar xShifted(""x_shifted"", """", x, RooConst(1.0), shift);. std::vector<std::unique_ptr<RooDataHist>> templateHists;. RooArgSet pdfs;. RooArgSet yields;. // Fill the templates. for (std::size_t i = 0; i < 2; ++i) {. auto suffix = std::to_string(i);. TF1 pdf(""pdf"", ""gaus"", x.getMin(), x.getMax());. pdf.SetParameters(1, 1200 + 100 * i, 50);. pdf.Print();. TH1D h(""h"", """", x.numBins(), x.getMin(), x.getMax());. h.FillRandom(""pdf"", 10000);. templateHists.emplace_back(std::make_unique<RooDataHist>((""template_data_hist_"" + suffix).c_str(), """", x, &h));. pdfs.addOwned(. *new RooHistPdf((""template_hist_pdf_"" + suffix).c_str(), """", xShifted, x, *templateHists.back(), 0));. yields.addOwned(*new RooRealVar((""n_"" + suffix).c_str(), """", 1000, 100, 100000));. }. // Construct final model. RooAddPdf model(""model"", """", pdfs, yields);. std::unique_ptr<RooDataHist> data{model.generateBinned(x)};. // If the range is larger than the variable range, the problem is even amplified. model.fitTo(*data, Range(0.0, 5000));. TCanvas c1;. auto frame = x.frame();. data->plotOn(frame);. model.plotOn(frame, Range(0.0, 2000.0));. model.plotOn(frame, Components(*pdfs[0]), LineStyle(kDashed), LineColor(kRed));. model.plotOn(frame, Components(*pdfs[1]), LineStyle(kDashed), LineColor(kBlue));. frame->Draw();. c1.SaveAs(""plot.png"");. }. ```. The plot looks like this:. ![plot](https://github.com/root-project/root/assets/6578603/fb0b4c49-50b6-4f6b-ae50-8a1cac2248a8). It would be nice if this plotting would work better, sampling the RooHistPdf at the correct points.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13030
https://github.com/root-project/root/issues/13030:2112,security,model,model,2112,". https://root-forum.cern.ch/t/how-to-implement-a-horizontal-shift-for-roohistpdf/16787/6. I think I can approximately reproduce the workflow of the user that posted on the forum with this code. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x(""x"", """", 1000, 1500);. x.setBins(50);. RooRealVar shift(""shift"", """", 10.0, -100, 100);. RooFormulaVar xShifted(""x_shifted"", ""x - shift"", {x, shift});. // Doesn't work better either... // RooLinearVar xShifted(""x_shifted"", """", x, RooConst(1.0), shift);. std::vector<std::unique_ptr<RooDataHist>> templateHists;. RooArgSet pdfs;. RooArgSet yields;. // Fill the templates. for (std::size_t i = 0; i < 2; ++i) {. auto suffix = std::to_string(i);. TF1 pdf(""pdf"", ""gaus"", x.getMin(), x.getMax());. pdf.SetParameters(1, 1200 + 100 * i, 50);. pdf.Print();. TH1D h(""h"", """", x.numBins(), x.getMin(), x.getMax());. h.FillRandom(""pdf"", 10000);. templateHists.emplace_back(std::make_unique<RooDataHist>((""template_data_hist_"" + suffix).c_str(), """", x, &h));. pdfs.addOwned(. *new RooHistPdf((""template_hist_pdf_"" + suffix).c_str(), """", xShifted, x, *templateHists.back(), 0));. yields.addOwned(*new RooRealVar((""n_"" + suffix).c_str(), """", 1000, 100, 100000));. }. // Construct final model. RooAddPdf model(""model"", """", pdfs, yields);. std::unique_ptr<RooDataHist> data{model.generateBinned(x)};. // If the range is larger than the variable range, the problem is even amplified. model.fitTo(*data, Range(0.0, 5000));. TCanvas c1;. auto frame = x.frame();. data->plotOn(frame);. model.plotOn(frame, Range(0.0, 2000.0));. model.plotOn(frame, Components(*pdfs[0]), LineStyle(kDashed), LineColor(kRed));. model.plotOn(frame, Components(*pdfs[1]), LineStyle(kDashed), LineColor(kBlue));. frame->Draw();. c1.SaveAs(""plot.png"");. }. ```. The plot looks like this:. ![plot](https://github.com/root-project/root/assets/6578603/fb0b4c49-50b6-4f6b-ae50-8a1cac2248a8). It would be nice if this plotting would work better, sampling the RooHistPdf at the correct points.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13030
https://github.com/root-project/root/issues/13030:2154,security,model,model,2154,". https://root-forum.cern.ch/t/how-to-implement-a-horizontal-shift-for-roohistpdf/16787/6. I think I can approximately reproduce the workflow of the user that posted on the forum with this code. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x(""x"", """", 1000, 1500);. x.setBins(50);. RooRealVar shift(""shift"", """", 10.0, -100, 100);. RooFormulaVar xShifted(""x_shifted"", ""x - shift"", {x, shift});. // Doesn't work better either... // RooLinearVar xShifted(""x_shifted"", """", x, RooConst(1.0), shift);. std::vector<std::unique_ptr<RooDataHist>> templateHists;. RooArgSet pdfs;. RooArgSet yields;. // Fill the templates. for (std::size_t i = 0; i < 2; ++i) {. auto suffix = std::to_string(i);. TF1 pdf(""pdf"", ""gaus"", x.getMin(), x.getMax());. pdf.SetParameters(1, 1200 + 100 * i, 50);. pdf.Print();. TH1D h(""h"", """", x.numBins(), x.getMin(), x.getMax());. h.FillRandom(""pdf"", 10000);. templateHists.emplace_back(std::make_unique<RooDataHist>((""template_data_hist_"" + suffix).c_str(), """", x, &h));. pdfs.addOwned(. *new RooHistPdf((""template_hist_pdf_"" + suffix).c_str(), """", xShifted, x, *templateHists.back(), 0));. yields.addOwned(*new RooRealVar((""n_"" + suffix).c_str(), """", 1000, 100, 100000));. }. // Construct final model. RooAddPdf model(""model"", """", pdfs, yields);. std::unique_ptr<RooDataHist> data{model.generateBinned(x)};. // If the range is larger than the variable range, the problem is even amplified. model.fitTo(*data, Range(0.0, 5000));. TCanvas c1;. auto frame = x.frame();. data->plotOn(frame);. model.plotOn(frame, Range(0.0, 2000.0));. model.plotOn(frame, Components(*pdfs[0]), LineStyle(kDashed), LineColor(kRed));. model.plotOn(frame, Components(*pdfs[1]), LineStyle(kDashed), LineColor(kBlue));. frame->Draw();. c1.SaveAs(""plot.png"");. }. ```. The plot looks like this:. ![plot](https://github.com/root-project/root/assets/6578603/fb0b4c49-50b6-4f6b-ae50-8a1cac2248a8). It would be nice if this plotting would work better, sampling the RooHistPdf at the correct points.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13030
https://github.com/root-project/root/issues/13030:2235,security,model,model,2235,". https://root-forum.cern.ch/t/how-to-implement-a-horizontal-shift-for-roohistpdf/16787/6. I think I can approximately reproduce the workflow of the user that posted on the forum with this code. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x(""x"", """", 1000, 1500);. x.setBins(50);. RooRealVar shift(""shift"", """", 10.0, -100, 100);. RooFormulaVar xShifted(""x_shifted"", ""x - shift"", {x, shift});. // Doesn't work better either... // RooLinearVar xShifted(""x_shifted"", """", x, RooConst(1.0), shift);. std::vector<std::unique_ptr<RooDataHist>> templateHists;. RooArgSet pdfs;. RooArgSet yields;. // Fill the templates. for (std::size_t i = 0; i < 2; ++i) {. auto suffix = std::to_string(i);. TF1 pdf(""pdf"", ""gaus"", x.getMin(), x.getMax());. pdf.SetParameters(1, 1200 + 100 * i, 50);. pdf.Print();. TH1D h(""h"", """", x.numBins(), x.getMin(), x.getMax());. h.FillRandom(""pdf"", 10000);. templateHists.emplace_back(std::make_unique<RooDataHist>((""template_data_hist_"" + suffix).c_str(), """", x, &h));. pdfs.addOwned(. *new RooHistPdf((""template_hist_pdf_"" + suffix).c_str(), """", xShifted, x, *templateHists.back(), 0));. yields.addOwned(*new RooRealVar((""n_"" + suffix).c_str(), """", 1000, 100, 100000));. }. // Construct final model. RooAddPdf model(""model"", """", pdfs, yields);. std::unique_ptr<RooDataHist> data{model.generateBinned(x)};. // If the range is larger than the variable range, the problem is even amplified. model.fitTo(*data, Range(0.0, 5000));. TCanvas c1;. auto frame = x.frame();. data->plotOn(frame);. model.plotOn(frame, Range(0.0, 2000.0));. model.plotOn(frame, Components(*pdfs[0]), LineStyle(kDashed), LineColor(kRed));. model.plotOn(frame, Components(*pdfs[1]), LineStyle(kDashed), LineColor(kBlue));. frame->Draw();. c1.SaveAs(""plot.png"");. }. ```. The plot looks like this:. ![plot](https://github.com/root-project/root/assets/6578603/fb0b4c49-50b6-4f6b-ae50-8a1cac2248a8). It would be nice if this plotting would work better, sampling the RooHistPdf at the correct points.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13030
https://github.com/root-project/root/issues/13030:175,testability,integr,integrator,175,"[RF] Plotting shifted RooHistPdfs doesn't go well; If you plot a shifted RooHistPdf, it doesn't look good. Probably because it is sampled at the wrong points, the numeric bin integrator doesn't work in this case, or both. This is a problem that comes up relatively often in the ROOT forum, the last time here:. https://root-forum.cern.ch/t/roofit-in-root-6-28-04/55267. By looking for the keyword ""shift"" in the RooFit forum, one can see that this problem also came up in the past already:. https://root-forum.cern.ch/search?expanded=true&q=shift%20%23roofit-and-roostats. For example here:. https://root-forum.cern.ch/t/how-to-implement-a-horizontal-shift-for-roohistpdf/16787/6. I think I can approximately reproduce the workflow of the user that posted on the forum with this code. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x(""x"", """", 1000, 1500);. x.setBins(50);. RooRealVar shift(""shift"", """", 10.0, -100, 100);. RooFormulaVar xShifted(""x_shifted"", ""x - shift"", {x, shift});. // Doesn't work better either... // RooLinearVar xShifted(""x_shifted"", """", x, RooConst(1.0), shift);. std::vector<std::unique_ptr<RooDataHist>> templateHists;. RooArgSet pdfs;. RooArgSet yields;. // Fill the templates. for (std::size_t i = 0; i < 2; ++i) {. auto suffix = std::to_string(i);. TF1 pdf(""pdf"", ""gaus"", x.getMin(), x.getMax());. pdf.SetParameters(1, 1200 + 100 * i, 50);. pdf.Print();. TH1D h(""h"", """", x.numBins(), x.getMin(), x.getMax());. h.FillRandom(""pdf"", 10000);. templateHists.emplace_back(std::make_unique<RooDataHist>((""template_data_hist_"" + suffix).c_str(), """", x, &h));. pdfs.addOwned(. *new RooHistPdf((""template_hist_pdf_"" + suffix).c_str(), """", xShifted, x, *templateHists.back(), 0));. yields.addOwned(*new RooRealVar((""n_"" + suffix).c_str(), """", 1000, 100, 100000));. }. // Construct final model. RooAddPdf model(""model"", """", pdfs, yields);. std::unique_ptr<RooDataHist> data{model.generateBinned(x)};. // If the range is larger than the variable range, the problem is eve",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13030
https://github.com/root-project/root/issues/13030:723,usability,workflow,workflow,723,"[RF] Plotting shifted RooHistPdfs doesn't go well; If you plot a shifted RooHistPdf, it doesn't look good. Probably because it is sampled at the wrong points, the numeric bin integrator doesn't work in this case, or both. This is a problem that comes up relatively often in the ROOT forum, the last time here:. https://root-forum.cern.ch/t/roofit-in-root-6-28-04/55267. By looking for the keyword ""shift"" in the RooFit forum, one can see that this problem also came up in the past already:. https://root-forum.cern.ch/search?expanded=true&q=shift%20%23roofit-and-roostats. For example here:. https://root-forum.cern.ch/t/how-to-implement-a-horizontal-shift-for-roohistpdf/16787/6. I think I can approximately reproduce the workflow of the user that posted on the forum with this code. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x(""x"", """", 1000, 1500);. x.setBins(50);. RooRealVar shift(""shift"", """", 10.0, -100, 100);. RooFormulaVar xShifted(""x_shifted"", ""x - shift"", {x, shift});. // Doesn't work better either... // RooLinearVar xShifted(""x_shifted"", """", x, RooConst(1.0), shift);. std::vector<std::unique_ptr<RooDataHist>> templateHists;. RooArgSet pdfs;. RooArgSet yields;. // Fill the templates. for (std::size_t i = 0; i < 2; ++i) {. auto suffix = std::to_string(i);. TF1 pdf(""pdf"", ""gaus"", x.getMin(), x.getMax());. pdf.SetParameters(1, 1200 + 100 * i, 50);. pdf.Print();. TH1D h(""h"", """", x.numBins(), x.getMin(), x.getMax());. h.FillRandom(""pdf"", 10000);. templateHists.emplace_back(std::make_unique<RooDataHist>((""template_data_hist_"" + suffix).c_str(), """", x, &h));. pdfs.addOwned(. *new RooHistPdf((""template_hist_pdf_"" + suffix).c_str(), """", xShifted, x, *templateHists.back(), 0));. yields.addOwned(*new RooRealVar((""n_"" + suffix).c_str(), """", 1000, 100, 100000));. }. // Construct final model. RooAddPdf model(""model"", """", pdfs, yields);. std::unique_ptr<RooDataHist> data{model.generateBinned(x)};. // If the range is larger than the variable range, the problem is eve",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13030
https://github.com/root-project/root/issues/13030:739,usability,user,user,739,"[RF] Plotting shifted RooHistPdfs doesn't go well; If you plot a shifted RooHistPdf, it doesn't look good. Probably because it is sampled at the wrong points, the numeric bin integrator doesn't work in this case, or both. This is a problem that comes up relatively often in the ROOT forum, the last time here:. https://root-forum.cern.ch/t/roofit-in-root-6-28-04/55267. By looking for the keyword ""shift"" in the RooFit forum, one can see that this problem also came up in the past already:. https://root-forum.cern.ch/search?expanded=true&q=shift%20%23roofit-and-roostats. For example here:. https://root-forum.cern.ch/t/how-to-implement-a-horizontal-shift-for-roohistpdf/16787/6. I think I can approximately reproduce the workflow of the user that posted on the forum with this code. ```C++. void repro(). {. using namespace RooFit;. RooRealVar x(""x"", """", 1000, 1500);. x.setBins(50);. RooRealVar shift(""shift"", """", 10.0, -100, 100);. RooFormulaVar xShifted(""x_shifted"", ""x - shift"", {x, shift});. // Doesn't work better either... // RooLinearVar xShifted(""x_shifted"", """", x, RooConst(1.0), shift);. std::vector<std::unique_ptr<RooDataHist>> templateHists;. RooArgSet pdfs;. RooArgSet yields;. // Fill the templates. for (std::size_t i = 0; i < 2; ++i) {. auto suffix = std::to_string(i);. TF1 pdf(""pdf"", ""gaus"", x.getMin(), x.getMax());. pdf.SetParameters(1, 1200 + 100 * i, 50);. pdf.Print();. TH1D h(""h"", """", x.numBins(), x.getMin(), x.getMax());. h.FillRandom(""pdf"", 10000);. templateHists.emplace_back(std::make_unique<RooDataHist>((""template_data_hist_"" + suffix).c_str(), """", x, &h));. pdfs.addOwned(. *new RooHistPdf((""template_hist_pdf_"" + suffix).c_str(), """", xShifted, x, *templateHists.back(), 0));. yields.addOwned(*new RooRealVar((""n_"" + suffix).c_str(), """", 1000, 100, 100000));. }. // Construct final model. RooAddPdf model(""model"", """", pdfs, yields);. std::unique_ptr<RooDataHist> data{model.generateBinned(x)};. // If the range is larger than the variable range, the problem is eve",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13030
https://github.com/root-project/root/pull/13031:15,energy efficiency,draw,drawing,15,"Change default drawing option for 2d and 3D histograms; The current default drawing option for 2D and 3D histograms is the option SCAT (for scatter plots). This option is misleading because it plots random points. It was useful in the old days to simulate a density but these days it creates more problems than it is useful as it is not a real scatter plot. This PR changes the default. It is now COL (heat map). In the future, we might remove completely the SCAT option.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13031
https://github.com/root-project/root/pull/13031:60,energy efficiency,current,current,60,"Change default drawing option for 2d and 3D histograms; The current default drawing option for 2D and 3D histograms is the option SCAT (for scatter plots). This option is misleading because it plots random points. It was useful in the old days to simulate a density but these days it creates more problems than it is useful as it is not a real scatter plot. This PR changes the default. It is now COL (heat map). In the future, we might remove completely the SCAT option.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13031
https://github.com/root-project/root/pull/13031:76,energy efficiency,draw,drawing,76,"Change default drawing option for 2d and 3D histograms; The current default drawing option for 2D and 3D histograms is the option SCAT (for scatter plots). This option is misleading because it plots random points. It was useful in the old days to simulate a density but these days it creates more problems than it is useful as it is not a real scatter plot. This PR changes the default. It is now COL (heat map). In the future, we might remove completely the SCAT option.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13031
https://github.com/root-project/root/pull/13031:402,energy efficiency,heat,heat,402,"Change default drawing option for 2d and 3D histograms; The current default drawing option for 2D and 3D histograms is the option SCAT (for scatter plots). This option is misleading because it plots random points. It was useful in the old days to simulate a density but these days it creates more problems than it is useful as it is not a real scatter plot. This PR changes the default. It is now COL (heat map). In the future, we might remove completely the SCAT option.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13031
https://github.com/root-project/root/pull/13031:444,safety,compl,completely,444,"Change default drawing option for 2d and 3D histograms; The current default drawing option for 2D and 3D histograms is the option SCAT (for scatter plots). This option is misleading because it plots random points. It was useful in the old days to simulate a density but these days it creates more problems than it is useful as it is not a real scatter plot. This PR changes the default. It is now COL (heat map). In the future, we might remove completely the SCAT option.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13031
https://github.com/root-project/root/pull/13031:444,security,compl,completely,444,"Change default drawing option for 2d and 3D histograms; The current default drawing option for 2D and 3D histograms is the option SCAT (for scatter plots). This option is misleading because it plots random points. It was useful in the old days to simulate a density but these days it creates more problems than it is useful as it is not a real scatter plot. This PR changes the default. It is now COL (heat map). In the future, we might remove completely the SCAT option.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13031
https://github.com/root-project/root/pull/13031:247,testability,simul,simulate,247,"Change default drawing option for 2d and 3D histograms; The current default drawing option for 2D and 3D histograms is the option SCAT (for scatter plots). This option is misleading because it plots random points. It was useful in the old days to simulate a density but these days it creates more problems than it is useful as it is not a real scatter plot. This PR changes the default. It is now COL (heat map). In the future, we might remove completely the SCAT option.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13031
https://github.com/root-project/root/issues/13032:0,availability,Error,Error,0,"Error when using a specific pattern of conditional inclusion of <span> with C++17; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With ROOT v6-28-00-patches@v6-28-04-96-g9248a09 compiled with C++17 (**not** C++20) the code. ```cpp. #ifdef __has_include. #if __has_include(<span>). #include <span>. #endif. #endif. ```. (found in `range/v3/range/access.hpp`) causes an error in the interpreter:. ```. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ```. Meaning that the interpreter thinks the header `<span>` exists, but it cannot be loaded. What I find very surprising too, is that (still without C++20) I can do:. ```. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:401,availability,error,error,401,"Error when using a specific pattern of conditional inclusion of <span> with C++17; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With ROOT v6-28-00-patches@v6-28-04-96-g9248a09 compiled with C++17 (**not** C++20) the code. ```cpp. #ifdef __has_include. #if __has_include(<span>). #include <span>. #endif. #endif. ```. (found in `range/v3/range/access.hpp`) causes an error in the interpreter:. ```. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ```. Meaning that the interpreter thinks the header `<span>` exists, but it cannot be loaded. What I find very surprising too, is that (still without C++20) I can do:. ```. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:564,availability,error,error,564,"Error when using a specific pattern of conditional inclusion of <span> with C++17; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With ROOT v6-28-00-patches@v6-28-04-96-g9248a09 compiled with C++17 (**not** C++20) the code. ```cpp. #ifdef __has_include. #if __has_include(<span>). #include <span>. #endif. #endif. ```. (found in `range/v3/range/access.hpp`) causes an error in the interpreter:. ```. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ```. Meaning that the interpreter thinks the header `<span>` exists, but it cannot be loaded. What I find very surprising too, is that (still without C++20) I can do:. ```. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:2247,availability,error,error,2247,"m heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g9248a09. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:2978,availability,operat,operating,2978,"m heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g9248a09. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:182,deployability,patch,patches,182,"Error when using a specific pattern of conditional inclusion of <span> with C++17; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With ROOT v6-28-00-patches@v6-28-04-96-g9248a09 compiled with C++17 (**not** C++20) the code. ```cpp. #ifdef __has_include. #if __has_include(<span>). #include <span>. #endif. #endif. ```. (found in `range/v3/range/access.hpp`) causes an error in the interpreter:. ```. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ```. Meaning that the interpreter thinks the header `<span>` exists, but it cannot be loaded. What I find very surprising too, is that (still without C++20) I can do:. ```. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:499,deployability,patch,patches,499,"Error when using a specific pattern of conditional inclusion of <span> with C++17; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With ROOT v6-28-00-patches@v6-28-04-96-g9248a09 compiled with C++17 (**not** C++20) the code. ```cpp. #ifdef __has_include. #if __has_include(<span>). #include <span>. #endif. #endif. ```. (found in `range/v3/range/access.hpp`) causes an error in the interpreter:. ```. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ```. Meaning that the interpreter thinks the header `<span>` exists, but it cannot be loaded. What I find very surprising too, is that (still without C++20) I can do:. ```. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:546,deployability,modul,modulemap,546,"Error when using a specific pattern of conditional inclusion of <span> with C++17; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With ROOT v6-28-00-patches@v6-28-04-96-g9248a09 compiled with C++17 (**not** C++20) the code. ```cpp. #ifdef __has_include. #if __has_include(<span>). #include <span>. #endif. #endif. ```. (found in `range/v3/range/access.hpp`) causes an error in the interpreter:. ```. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ```. Meaning that the interpreter thinks the header `<span>` exists, but it cannot be loaded. What I find very surprising too, is that (still without C++20) I can do:. ```. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:571,deployability,modul,module,571,"Error when using a specific pattern of conditional inclusion of <span> with C++17; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With ROOT v6-28-00-patches@v6-28-04-96-g9248a09 compiled with C++17 (**not** C++20) the code. ```cpp. #ifdef __has_include. #if __has_include(<span>). #include <span>. #endif. #endif. ```. (found in `range/v3/range/access.hpp`) causes an error in the interpreter:. ```. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ```. Meaning that the interpreter thinks the header `<span>` exists, but it cannot be loaded. What I find very surprising too, is that (still without C++20) I can do:. ```. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:621,deployability,modul,module,621,"Error when using a specific pattern of conditional inclusion of <span> with C++17; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With ROOT v6-28-00-patches@v6-28-04-96-g9248a09 compiled with C++17 (**not** C++20) the code. ```cpp. #ifdef __has_include. #if __has_include(<span>). #include <span>. #endif. #endif. ```. (found in `range/v3/range/access.hpp`) causes an error in the interpreter:. ```. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ```. Meaning that the interpreter thinks the header `<span>` exists, but it cannot be loaded. What I find very surprising too, is that (still without C++20) I can do:. ```. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:1080,deployability,patch,patches,1080,"## Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With ROOT v6-28-00-patches@v6-28-04-96-g9248a09 compiled with C++17 (**not** C++20) the code. ```cpp. #ifdef __has_include. #if __has_include(<span>). #include <span>. #endif. #endif. ```. (found in `range/v3/range/access.hpp`) causes an error in the interpreter:. ```. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ```. Meaning that the interpreter thinks the header `<span>` exists, but it cannot be loaded. What I find very surprising too, is that (still without C++20) I can do:. ```. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:1461,deployability,build,builds,1461,"g/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ```. Meaning that the interpreter thinks the header `<span>` exists, but it cannot be loaded. What I find very surprising too, is that (still without C++20) I can do:. ```. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-lev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:1873,deployability,patch,patches,1873,"--------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:2182,deployability,patch,patches,2182,"m heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g9248a09. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:2229,deployability,modul,modulemap,2229,"m heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g9248a09. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:2254,deployability,modul,module,2254,"m heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g9248a09. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:2304,deployability,modul,module,2304,"m heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g9248a09. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:2467,deployability,modul,module,2467,"m heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g9248a09. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:2537,deployability,build,build,2537,"m heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g9248a09. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:2582,deployability,build,build,2582,"m heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g9248a09. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:2611,deployability,patch,patches,2611,"m heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g9248a09. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:2637,deployability,patch,patches,2637,"m heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g9248a09. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:2816,deployability,fail,failed,2816,"m heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g9248a09. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:2838,deployability,version,version,2838,"m heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g9248a09. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:2856,deployability,patch,patches,2856,"m heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g9248a09. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:2902,deployability,instal,install,2902,"m heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g9248a09. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:2928,deployability,build,builds,2928,"m heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g9248a09. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:724,energy efficiency,load,loaded,724,"Error when using a specific pattern of conditional inclusion of <span> with C++17; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With ROOT v6-28-00-patches@v6-28-04-96-g9248a09 compiled with C++17 (**not** C++20) the code. ```cpp. #ifdef __has_include. #if __has_include(<span>). #include <span>. #endif. #endif. ```. (found in `range/v3/range/access.hpp`) causes an error in the interpreter:. ```. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ```. Meaning that the interpreter thinks the header `<span>` exists, but it cannot be loaded. What I find very surprising too, is that (still without C++20) I can do:. ```. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:2444,integrability,sub,submodule,2444,"m heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g9248a09. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:2838,integrability,version,version,2838,"m heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g9248a09. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:19,interoperability,specif,specific,19,"Error when using a specific pattern of conditional inclusion of <span> with C++17; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With ROOT v6-28-00-patches@v6-28-04-96-g9248a09 compiled with C++17 (**not** C++20) the code. ```cpp. #ifdef __has_include. #if __has_include(<span>). #include <span>. #endif. #endif. ```. (found in `range/v3/range/access.hpp`) causes an error in the interpreter:. ```. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ```. Meaning that the interpreter thinks the header `<span>` exists, but it cannot be loaded. What I find very surprising too, is that (still without C++20) I can do:. ```. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:546,modifiability,modul,modulemap,546,"Error when using a specific pattern of conditional inclusion of <span> with C++17; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With ROOT v6-28-00-patches@v6-28-04-96-g9248a09 compiled with C++17 (**not** C++20) the code. ```cpp. #ifdef __has_include. #if __has_include(<span>). #include <span>. #endif. #endif. ```. (found in `range/v3/range/access.hpp`) causes an error in the interpreter:. ```. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ```. Meaning that the interpreter thinks the header `<span>` exists, but it cannot be loaded. What I find very surprising too, is that (still without C++20) I can do:. ```. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:571,modifiability,modul,module,571,"Error when using a specific pattern of conditional inclusion of <span> with C++17; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With ROOT v6-28-00-patches@v6-28-04-96-g9248a09 compiled with C++17 (**not** C++20) the code. ```cpp. #ifdef __has_include. #if __has_include(<span>). #include <span>. #endif. #endif. ```. (found in `range/v3/range/access.hpp`) causes an error in the interpreter:. ```. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ```. Meaning that the interpreter thinks the header `<span>` exists, but it cannot be loaded. What I find very surprising too, is that (still without C++20) I can do:. ```. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:621,modifiability,modul,module,621,"Error when using a specific pattern of conditional inclusion of <span> with C++17; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With ROOT v6-28-00-patches@v6-28-04-96-g9248a09 compiled with C++17 (**not** C++20) the code. ```cpp. #ifdef __has_include. #if __has_include(<span>). #include <span>. #endif. #endif. ```. (found in `range/v3/range/access.hpp`) causes an error in the interpreter:. ```. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ```. Meaning that the interpreter thinks the header `<span>` exists, but it cannot be loaded. What I find very surprising too, is that (still without C++20) I can do:. ```. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:2229,modifiability,modul,modulemap,2229,"m heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g9248a09. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:2254,modifiability,modul,module,2254,"m heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g9248a09. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:2304,modifiability,modul,module,2304,"m heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g9248a09. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:2467,modifiability,modul,module,2467,"m heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g9248a09. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:2838,modifiability,version,version,2838,"m heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g9248a09. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:0,performance,Error,Error,0,"Error when using a specific pattern of conditional inclusion of <span> with C++17; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With ROOT v6-28-00-patches@v6-28-04-96-g9248a09 compiled with C++17 (**not** C++20) the code. ```cpp. #ifdef __has_include. #if __has_include(<span>). #include <span>. #endif. #endif. ```. (found in `range/v3/range/access.hpp`) causes an error in the interpreter:. ```. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ```. Meaning that the interpreter thinks the header `<span>` exists, but it cannot be loaded. What I find very surprising too, is that (still without C++20) I can do:. ```. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:401,performance,error,error,401,"Error when using a specific pattern of conditional inclusion of <span> with C++17; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With ROOT v6-28-00-patches@v6-28-04-96-g9248a09 compiled with C++17 (**not** C++20) the code. ```cpp. #ifdef __has_include. #if __has_include(<span>). #include <span>. #endif. #endif. ```. (found in `range/v3/range/access.hpp`) causes an error in the interpreter:. ```. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ```. Meaning that the interpreter thinks the header `<span>` exists, but it cannot be loaded. What I find very surprising too, is that (still without C++20) I can do:. ```. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:564,performance,error,error,564,"Error when using a specific pattern of conditional inclusion of <span> with C++17; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With ROOT v6-28-00-patches@v6-28-04-96-g9248a09 compiled with C++17 (**not** C++20) the code. ```cpp. #ifdef __has_include. #if __has_include(<span>). #include <span>. #endif. #endif. ```. (found in `range/v3/range/access.hpp`) causes an error in the interpreter:. ```. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ```. Meaning that the interpreter thinks the header `<span>` exists, but it cannot be loaded. What I find very surprising too, is that (still without C++20) I can do:. ```. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:724,performance,load,loaded,724,"Error when using a specific pattern of conditional inclusion of <span> with C++17; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With ROOT v6-28-00-patches@v6-28-04-96-g9248a09 compiled with C++17 (**not** C++20) the code. ```cpp. #ifdef __has_include. #if __has_include(<span>). #include <span>. #endif. #endif. ```. (found in `range/v3/range/access.hpp`) causes an error in the interpreter:. ```. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ```. Meaning that the interpreter thinks the header `<span>` exists, but it cannot be loaded. What I find very surprising too, is that (still without C++20) I can do:. ```. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:2247,performance,error,error,2247,"m heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g9248a09. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:2816,reliability,fail,failed,2816,"m heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g9248a09. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:0,safety,Error,Error,0,"Error when using a specific pattern of conditional inclusion of <span> with C++17; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With ROOT v6-28-00-patches@v6-28-04-96-g9248a09 compiled with C++17 (**not** C++20) the code. ```cpp. #ifdef __has_include. #if __has_include(<span>). #include <span>. #endif. #endif. ```. (found in `range/v3/range/access.hpp`) causes an error in the interpreter:. ```. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ```. Meaning that the interpreter thinks the header `<span>` exists, but it cannot be loaded. What I find very surprising too, is that (still without C++20) I can do:. ```. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:182,safety,patch,patches,182,"Error when using a specific pattern of conditional inclusion of <span> with C++17; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With ROOT v6-28-00-patches@v6-28-04-96-g9248a09 compiled with C++17 (**not** C++20) the code. ```cpp. #ifdef __has_include. #if __has_include(<span>). #include <span>. #endif. #endif. ```. (found in `range/v3/range/access.hpp`) causes an error in the interpreter:. ```. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ```. Meaning that the interpreter thinks the header `<span>` exists, but it cannot be loaded. What I find very surprising too, is that (still without C++20) I can do:. ```. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:401,safety,error,error,401,"Error when using a specific pattern of conditional inclusion of <span> with C++17; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With ROOT v6-28-00-patches@v6-28-04-96-g9248a09 compiled with C++17 (**not** C++20) the code. ```cpp. #ifdef __has_include. #if __has_include(<span>). #include <span>. #endif. #endif. ```. (found in `range/v3/range/access.hpp`) causes an error in the interpreter:. ```. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ```. Meaning that the interpreter thinks the header `<span>` exists, but it cannot be loaded. What I find very surprising too, is that (still without C++20) I can do:. ```. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:499,safety,patch,patches,499,"Error when using a specific pattern of conditional inclusion of <span> with C++17; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With ROOT v6-28-00-patches@v6-28-04-96-g9248a09 compiled with C++17 (**not** C++20) the code. ```cpp. #ifdef __has_include. #if __has_include(<span>). #include <span>. #endif. #endif. ```. (found in `range/v3/range/access.hpp`) causes an error in the interpreter:. ```. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ```. Meaning that the interpreter thinks the header `<span>` exists, but it cannot be loaded. What I find very surprising too, is that (still without C++20) I can do:. ```. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:546,safety,modul,modulemap,546,"Error when using a specific pattern of conditional inclusion of <span> with C++17; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With ROOT v6-28-00-patches@v6-28-04-96-g9248a09 compiled with C++17 (**not** C++20) the code. ```cpp. #ifdef __has_include. #if __has_include(<span>). #include <span>. #endif. #endif. ```. (found in `range/v3/range/access.hpp`) causes an error in the interpreter:. ```. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ```. Meaning that the interpreter thinks the header `<span>` exists, but it cannot be loaded. What I find very surprising too, is that (still without C++20) I can do:. ```. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:564,safety,error,error,564,"Error when using a specific pattern of conditional inclusion of <span> with C++17; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With ROOT v6-28-00-patches@v6-28-04-96-g9248a09 compiled with C++17 (**not** C++20) the code. ```cpp. #ifdef __has_include. #if __has_include(<span>). #include <span>. #endif. #endif. ```. (found in `range/v3/range/access.hpp`) causes an error in the interpreter:. ```. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ```. Meaning that the interpreter thinks the header `<span>` exists, but it cannot be loaded. What I find very surprising too, is that (still without C++20) I can do:. ```. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:571,safety,modul,module,571,"Error when using a specific pattern of conditional inclusion of <span> with C++17; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With ROOT v6-28-00-patches@v6-28-04-96-g9248a09 compiled with C++17 (**not** C++20) the code. ```cpp. #ifdef __has_include. #if __has_include(<span>). #include <span>. #endif. #endif. ```. (found in `range/v3/range/access.hpp`) causes an error in the interpreter:. ```. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ```. Meaning that the interpreter thinks the header `<span>` exists, but it cannot be loaded. What I find very surprising too, is that (still without C++20) I can do:. ```. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:621,safety,modul,module,621,"Error when using a specific pattern of conditional inclusion of <span> with C++17; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With ROOT v6-28-00-patches@v6-28-04-96-g9248a09 compiled with C++17 (**not** C++20) the code. ```cpp. #ifdef __has_include. #if __has_include(<span>). #include <span>. #endif. #endif. ```. (found in `range/v3/range/access.hpp`) causes an error in the interpreter:. ```. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ```. Meaning that the interpreter thinks the header `<span>` exists, but it cannot be loaded. What I find very surprising too, is that (still without C++20) I can do:. ```. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:1080,safety,patch,patches,1080,"## Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With ROOT v6-28-00-patches@v6-28-04-96-g9248a09 compiled with C++17 (**not** C++20) the code. ```cpp. #ifdef __has_include. #if __has_include(<span>). #include <span>. #endif. #endif. ```. (found in `range/v3/range/access.hpp`) causes an error in the interpreter:. ```. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ```. Meaning that the interpreter thinks the header `<span>` exists, but it cannot be loaded. What I find very surprising too, is that (still without C++20) I can do:. ```. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:1873,safety,patch,patches,1873,"--------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:2182,safety,patch,patches,2182,"m heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g9248a09. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:2229,safety,modul,modulemap,2229,"m heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g9248a09. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:2247,safety,error,error,2247,"m heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g9248a09. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:2254,safety,modul,module,2254,"m heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g9248a09. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:2304,safety,modul,module,2304,"m heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g9248a09. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:2467,safety,modul,module,2467,"m heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g9248a09. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:2611,safety,patch,patches,2611,"m heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g9248a09. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:2637,safety,patch,patches,2637,"m heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g9248a09. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:2856,safety,patch,patches,2856,"m heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g9248a09. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:182,security,patch,patches,182,"Error when using a specific pattern of conditional inclusion of <span> with C++17; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With ROOT v6-28-00-patches@v6-28-04-96-g9248a09 compiled with C++17 (**not** C++20) the code. ```cpp. #ifdef __has_include. #if __has_include(<span>). #include <span>. #endif. #endif. ```. (found in `range/v3/range/access.hpp`) causes an error in the interpreter:. ```. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ```. Meaning that the interpreter thinks the header `<span>` exists, but it cannot be loaded. What I find very surprising too, is that (still without C++20) I can do:. ```. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:378,security,access,access,378,"Error when using a specific pattern of conditional inclusion of <span> with C++17; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With ROOT v6-28-00-patches@v6-28-04-96-g9248a09 compiled with C++17 (**not** C++20) the code. ```cpp. #ifdef __has_include. #if __has_include(<span>). #include <span>. #endif. #endif. ```. (found in `range/v3/range/access.hpp`) causes an error in the interpreter:. ```. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ```. Meaning that the interpreter thinks the header `<span>` exists, but it cannot be loaded. What I find very surprising too, is that (still without C++20) I can do:. ```. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:499,security,patch,patches,499,"Error when using a specific pattern of conditional inclusion of <span> with C++17; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With ROOT v6-28-00-patches@v6-28-04-96-g9248a09 compiled with C++17 (**not** C++20) the code. ```cpp. #ifdef __has_include. #if __has_include(<span>). #include <span>. #endif. #endif. ```. (found in `range/v3/range/access.hpp`) causes an error in the interpreter:. ```. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ```. Meaning that the interpreter thinks the header `<span>` exists, but it cannot be loaded. What I find very surprising too, is that (still without C++20) I can do:. ```. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:960,security,Team,Team,960,"Error when using a specific pattern of conditional inclusion of <span> with C++17; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With ROOT v6-28-00-patches@v6-28-04-96-g9248a09 compiled with C++17 (**not** C++20) the code. ```cpp. #ifdef __has_include. #if __has_include(<span>). #include <span>. #endif. #endif. ```. (found in `range/v3/range/access.hpp`) causes an error in the interpreter:. ```. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ```. Meaning that the interpreter thinks the header `<span>` exists, but it cannot be loaded. What I find very surprising too, is that (still without C++20) I can do:. ```. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:1080,security,patch,patches,1080,"## Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With ROOT v6-28-00-patches@v6-28-04-96-g9248a09 compiled with C++17 (**not** C++20) the code. ```cpp. #ifdef __has_include. #if __has_include(<span>). #include <span>. #endif. #endif. ```. (found in `range/v3/range/access.hpp`) causes an error in the interpreter:. ```. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ```. Meaning that the interpreter thinks the header `<span>` exists, but it cannot be loaded. What I find very surprising too, is that (still without C++20) I can do:. ```. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:1753,security,Team,Team,1753,"sing too, is that (still without C++20) I can do:. ```. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*):",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:1873,security,patch,patches,1873,"--------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:2103,security,access,access,2103,"m heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g9248a09. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:2182,security,patch,patches,2182,"m heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g9248a09. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:2420,security,access,access,2420,"m heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g9248a09. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:2611,security,patch,patches,2611,"m heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g9248a09. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:2637,security,patch,patches,2637,"m heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g9248a09. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:2856,security,patch,patches,2856,"m heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g9248a09. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:2756,testability,Assert,Assertion,2756,"m heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g9248a09. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:3041,testability,context,context,3041,"m heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g9248a09. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:0,usability,Error,Error,0,"Error when using a specific pattern of conditional inclusion of <span> with C++17; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With ROOT v6-28-00-patches@v6-28-04-96-g9248a09 compiled with C++17 (**not** C++20) the code. ```cpp. #ifdef __has_include. #if __has_include(<span>). #include <span>. #endif. #endif. ```. (found in `range/v3/range/access.hpp`) causes an error in the interpreter:. ```. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ```. Meaning that the interpreter thinks the header `<span>` exists, but it cannot be loaded. What I find very surprising too, is that (still without C++20) I can do:. ```. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:401,usability,error,error,401,"Error when using a specific pattern of conditional inclusion of <span> with C++17; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With ROOT v6-28-00-patches@v6-28-04-96-g9248a09 compiled with C++17 (**not** C++20) the code. ```cpp. #ifdef __has_include. #if __has_include(<span>). #include <span>. #endif. #endif. ```. (found in `range/v3/range/access.hpp`) causes an error in the interpreter:. ```. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ```. Meaning that the interpreter thinks the header `<span>` exists, but it cannot be loaded. What I find very surprising too, is that (still without C++20) I can do:. ```. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:564,usability,error,error,564,"Error when using a specific pattern of conditional inclusion of <span> with C++17; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With ROOT v6-28-00-patches@v6-28-04-96-g9248a09 compiled with C++17 (**not** C++20) the code. ```cpp. #ifdef __has_include. #if __has_include(<span>). #include <span>. #endif. #endif. ```. (found in `range/v3/range/access.hpp`) causes an error in the interpreter:. ```. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ```. Meaning that the interpreter thinks the header `<span>` exists, but it cannot be loaded. What I find very surprising too, is that (still without C++20) I can do:. ```. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:1147,usability,help,help,1147,"ribe the bug. With ROOT v6-28-00-patches@v6-28-04-96-g9248a09 compiled with C++17 (**not** C++20) the code. ```cpp. #ifdef __has_include. #if __has_include(<span>). #include <span>. #endif. #endif. ```. (found in `range/v3/range/access.hpp`) causes an error in the interpreter:. ```. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ```. Meaning that the interpreter thinks the header `<span>` exists, but it cannot be loaded. What I find very surprising too, is that (still without C++20) I can do:. ```. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:1392,usability,behavi,behaviour,1392," an error in the interpreter:. ```. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ```. Meaning that the interpreter thinks the header `<span>` exists, but it cannot be loaded. What I find very surprising too, is that (still without C++20) I can do:. ```. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:1940,usability,help,help,1940,"95-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g9248a09. ### How did you install ROOT? LCG nightly builds in /cvm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:2247,usability,error,error,2247,"m heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g9248a09. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/issues/13032:2666,usability,tool,tools,2666,"m heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] std::span<int> s. (std::span<int> &) {}. root [1] . ```. which looks wrong to me. ### What is the expected behaviour? `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce? from lxplus.cern.ch. ```. ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh. ❯ root. ------------------------------------------------------------------. | Welcome to ROOT 6.28/05 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |. | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |. | With g++ (GCC) 12.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] #include <range/v3/range/access.hpp>. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'. module ""span"" {. ^. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/include/range/v3/range/access.hpp:25:10: note: submodule of top-level module 'std' implicitly imported here. #include <span>. ^. root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1517: void clang::DeclContext::removeDecl(clang::Decl*): Assertion `Pos != Map->end() && ""no lookup entry for decl""' failed. ```. ### ROOT version. v6-28-00-patches@v6-28-04-96-g9248a09. ### How did you install ROOT? LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using? Linux CentOS 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13032
https://github.com/root-project/root/pull/13033:5,deployability,Updat,Update,5,"[RF] Update RooAbsCollection.cxx - fix invalid read bug in remove; if the hashAssistedFind feature is active, the old code gave an invalid read because of the delete further up. This change ensures the deletion happens last.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13033
https://github.com/root-project/root/pull/13033:5,safety,Updat,Update,5,"[RF] Update RooAbsCollection.cxx - fix invalid read bug in remove; if the hashAssistedFind feature is active, the old code gave an invalid read because of the delete further up. This change ensures the deletion happens last.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13033
https://github.com/root-project/root/pull/13033:5,security,Updat,Update,5,"[RF] Update RooAbsCollection.cxx - fix invalid read bug in remove; if the hashAssistedFind feature is active, the old code gave an invalid read because of the delete further up. This change ensures the deletion happens last.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13033
https://github.com/root-project/root/pull/13033:74,security,hash,hashAssistedFind,74,"[RF] Update RooAbsCollection.cxx - fix invalid read bug in remove; if the hashAssistedFind feature is active, the old code gave an invalid read because of the delete further up. This change ensures the deletion happens last.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13033
https://github.com/root-project/root/issues/13034:69,availability,failur,failure,69,"Bundling base class and derived class in same dictionary can lead to failure in recursive parsing.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. Using the example provide in the original [report](https://root-forum.cern.ch/t/linking-problems-with-shared-library-backward-backward-warning-h) : [linker_example.zip](https://github.com/root-project/root/files/11763343/linker_example.zip). Doing:. ```. make. root.exe -b -l -q macro.cc. ```. leads to:. ```. Loading A.sl. Processing macro.cc... In file included from ADictUX dictionary payload:6:. ./B.h:5:18: error: base class has incomplete type. class B : public A {. ~~~~~~~^. ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:592,availability,error,error,592,"Bundling base class and derived class in same dictionary can lead to failure in recursive parsing.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. Using the example provide in the original [report](https://root-forum.cern.ch/t/linking-problems-with-shared-library-backward-backward-warning-h) : [linker_example.zip](https://github.com/root-project/root/files/11763343/linker_example.zip). Doing:. ```. make. root.exe -b -l -q macro.cc. ```. leads to:. ```. Loading A.sl. Processing macro.cc... In file included from ADictUX dictionary payload:6:. ./B.h:5:18: error: base class has incomplete type. class B : public A {. ~~~~~~~^. ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:816,availability,error,error,816,"Bundling base class and derived class in same dictionary can lead to failure in recursive parsing.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. Using the example provide in the original [report](https://root-forum.cern.ch/t/linking-problems-with-shared-library-backward-backward-warning-h) : [linker_example.zip](https://github.com/root-project/root/files/11763343/linker_example.zip). Doing:. ```. make. root.exe -b -l -q macro.cc. ```. leads to:. ```. Loading A.sl. Processing macro.cc... In file included from ADictUX dictionary payload:6:. ./B.h:5:18: error: base class has incomplete type. class B : public A {. ~~~~~~~^. ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:899,availability,Error,Error,899,"Bundling base class and derived class in same dictionary can lead to failure in recursive parsing.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. Using the example provide in the original [report](https://root-forum.cern.ch/t/linking-problems-with-shared-library-backward-backward-warning-h) : [linker_example.zip](https://github.com/root-project/root/files/11763343/linker_example.zip). Doing:. ```. make. root.exe -b -l -q macro.cc. ```. leads to:. ```. Loading A.sl. Processing macro.cc... In file included from ADictUX dictionary payload:6:. ./B.h:5:18: error: base class has incomplete type. class B : public A {. ~~~~~~~^. ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:935,availability,Error,Error,935,"Bundling base class and derived class in same dictionary can lead to failure in recursive parsing.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. Using the example provide in the original [report](https://root-forum.cern.ch/t/linking-problems-with-shared-library-backward-backward-warning-h) : [linker_example.zip](https://github.com/root-project/root/files/11763343/linker_example.zip). Doing:. ```. make. root.exe -b -l -q macro.cc. ```. leads to:. ```. Loading A.sl. Processing macro.cc... In file included from ADictUX dictionary payload:6:. ./B.h:5:18: error: base class has incomplete type. class B : public A {. ~~~~~~~^. ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:1153,availability,Error,Error,1153,". ### Describe the bug. Using the example provide in the original [report](https://root-forum.cern.ch/t/linking-problems-with-shared-library-backward-backward-warning-h) : [linker_example.zip](https://github.com/root-project/root/files/11763343/linker_example.zip). Doing:. ```. make. root.exe -b -l -q macro.cc. ```. leads to:. ```. Loading A.sl. Processing macro.cc... In file included from ADictUX dictionary payload:6:. ./B.h:5:18: error: base class has incomplete type. class B : public A {. ~~~~~~~^. ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/rootcling_impl.cxx. index f56ce23b7a..7cd24d2c63 100644. --- a/core/dictgen/src/rootcling_impl.cxx. +++ b/core/dictgen/src/rootcling_impl.cxx. @@ -4971,7 +4971",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:1189,availability,Error,Error,1189,"ample provide in the original [report](https://root-forum.cern.ch/t/linking-problems-with-shared-library-backward-backward-warning-h) : [linker_example.zip](https://github.com/root-project/root/files/11763343/linker_example.zip). Doing:. ```. make. root.exe -b -l -q macro.cc. ```. leads to:. ```. Loading A.sl. Processing macro.cc... In file included from ADictUX dictionary payload:6:. ./B.h:5:18: error: base class has incomplete type. class B : public A {. ~~~~~~~^. ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/rootcling_impl.cxx. index f56ce23b7a..7cd24d2c63 100644. --- a/core/dictgen/src/rootcling_impl.cxx. +++ b/core/dictgen/src/rootcling_impl.cxx. @@ -4971,7 +4971,7 @@ int RootClingMain(int argc,. i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:1744,availability,operat,operating,1744,". In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/rootcling_impl.cxx. index f56ce23b7a..7cd24d2c63 100644. --- a/core/dictgen/src/rootcling_impl.cxx. +++ b/core/dictgen/src/rootcling_impl.cxx. @@ -4971,7 +4971,7 @@ int RootClingMain(int argc,. if (!gOptCxxModule) {. headersClassesMapString = GenerateStringFromHeadersForClasses(headersDeclsMap,. detectedUmbrella,. - true);. + false);. if (!gDriverConfig->fBuildingROOTStage1) {. if (!gOptWriteEmptyRootPCM). fwdDeclsString = GenerateFwdDeclString(scan, interp);. ```. This introduces the following diff in the generated dictionary:. ```. rootsrv1:2023-dict pcanal$ diff -C2 dict.cxx dict.good.2.cxx . *** dict.cxx 2023-06-15 15:55:39.818476668 -0500. --- dict.good.2.cxx 2023-06-15 14:54:48.505264642 -0500. ***************. *** 187,192 ****. )DICTPA",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:3033,availability,operat,operation,3033,"24d2c63 100644. --- a/core/dictgen/src/rootcling_impl.cxx. +++ b/core/dictgen/src/rootcling_impl.cxx. @@ -4971,7 +4971,7 @@ int RootClingMain(int argc,. if (!gOptCxxModule) {. headersClassesMapString = GenerateStringFromHeadersForClasses(headersDeclsMap,. detectedUmbrella,. - true);. + false);. if (!gDriverConfig->fBuildingROOTStage1) {. if (!gOptWriteEmptyRootPCM). fwdDeclsString = GenerateFwdDeclString(scan, interp);. ```. This introduces the following diff in the generated dictionary:. ```. rootsrv1:2023-dict pcanal$ diff -C2 dict.cxx dict.good.2.cxx . *** dict.cxx 2023-06-15 15:55:39.818476668 -0500. --- dict.good.2.cxx 2023-06-15 14:54:48.505264642 -0500. ***************. *** 187,192 ****. )DICTPAYLOAD"";. static const char* classesHeaders[] = {. ! ""A"", payloadCode, ""@"",. ! ""B"", payloadCode, ""@"",. nullptr. };. --- 187,192 ----. )DICTPAYLOAD"";. static const char* classesHeaders[] = {. ! ""A"", ""A.h"", ""@"",. ! ""B"", ""B.h"", ""@"",. nullptr. };. ```. and indeed in practice the order of operation are as follow: (macro.cc contains a `#include ""A.h""`):. * Process the `A.h` and then start declaring class `A`:. * While declaring `A`, process the constructor (of anything involving `A` itself in `A` declaration and call ` TCling::AutoParse`. * ` TCling::AutoParse` recognizes `A` for the dictionary's `classesHeaders`. * ` TCling::AutoParse` proceeed to ask for the `payloadCode` to be processed/included (with the 'patch / fix / reversal' this is replaced by `A.h`), this `payloadCode` consist of:. ```. #include ""A.h"". #include ""B.h"". ```. * Thanks to the code guard `A.h` is skipped (well anyway it is actually being processed by the outer code !!). * `B.h` is being included is reached:. ```. class B : public A. ```. which correctly complains that `A` is not yet fully declared .... The commit log corresponding to the change is explicitly referring to this change:. ```. Associate to autoParse entries only the payload ([ROOT-6321](https://sft.its.cern.ch/jira/browse/ROOT-6321)). . de f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:3532,availability,consist,consist,3532," rootsrv1:2023-dict pcanal$ diff -C2 dict.cxx dict.good.2.cxx . *** dict.cxx 2023-06-15 15:55:39.818476668 -0500. --- dict.good.2.cxx 2023-06-15 14:54:48.505264642 -0500. ***************. *** 187,192 ****. )DICTPAYLOAD"";. static const char* classesHeaders[] = {. ! ""A"", payloadCode, ""@"",. ! ""B"", payloadCode, ""@"",. nullptr. };. --- 187,192 ----. )DICTPAYLOAD"";. static const char* classesHeaders[] = {. ! ""A"", ""A.h"", ""@"",. ! ""B"", ""B.h"", ""@"",. nullptr. };. ```. and indeed in practice the order of operation are as follow: (macro.cc contains a `#include ""A.h""`):. * Process the `A.h` and then start declaring class `A`:. * While declaring `A`, process the constructor (of anything involving `A` itself in `A` declaration and call ` TCling::AutoParse`. * ` TCling::AutoParse` recognizes `A` for the dictionary's `classesHeaders`. * ` TCling::AutoParse` proceeed to ask for the `payloadCode` to be processed/included (with the 'patch / fix / reversal' this is replaced by `A.h`), this `payloadCode` consist of:. ```. #include ""A.h"". #include ""B.h"". ```. * Thanks to the code guard `A.h` is skipped (well anyway it is actually being processed by the outer code !!). * `B.h` is being included is reached:. ```. class B : public A. ```. which correctly complains that `A` is not yet fully declared .... The commit log corresponding to the change is explicitly referring to this change:. ```. Associate to autoParse entries only the payload ([ROOT-6321](https://sft.its.cern.ch/jira/browse/ROOT-6321)). . de facto implementing lazy payload parsing instead of header. parsing on demand. ```. **It is not clear why ` TCling::AutoParse` is called with a symbol that is ""__being__"" declared.**. A work around (why we don't usually see this issue) is to generate a rootmap file (generating the c++ module should also in principle):. ```. diff Makefile.orig Makefile. 25c25. < rootcint -f ${DICT} -c ${DICTHDRS}. ---. > rootcint -rml=A -f ${DICT} -c ${DICTHDRS}. ```. Full stack trace at the starting point of the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:12462,availability,error,error,12462,"cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:146. #27 0x00007fffeaeb4ac7 in cling::MetaParser::isXCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315. #28 0x00007fffeaeb3b27 in cling::MetaParser::isCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:119. #29 0x00007fffeaeb39af in cling::MetaParser::isMetaCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:96. #30 0x00007fffeae9d2dc in cling::MetaProcessor::process (this=0x95c1b0, input_line=..., compRes=@0x7fffffffa80c: cling::Interpreter::kSuccess, result=0x7fffffffa810, disableValuePrinting=false). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317. #31 0x00007fffea97c5cd in HandleInterpreterException (metaProcessor=0x95c1b0, input_line=0xccf520 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", compRes=@0x7fffffffa80c: cling::Interpreter::kSuccess, result=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:2434. #32 0x00007fffea97cff6 in TCling::ProcessLine (this=0x4c1820, line=0x141f860 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", error=0x7fffffffd888). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:2578. #33 0x00007fffea9808ab in TCling::ProcessLineSynch (this=0x4c1820, line=0x141f860 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", error=0x7fffffffd888). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:3524. ``` .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:12709,availability,error,error,12709,"cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:146. #27 0x00007fffeaeb4ac7 in cling::MetaParser::isXCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315. #28 0x00007fffeaeb3b27 in cling::MetaParser::isCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:119. #29 0x00007fffeaeb39af in cling::MetaParser::isMetaCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:96. #30 0x00007fffeae9d2dc in cling::MetaProcessor::process (this=0x95c1b0, input_line=..., compRes=@0x7fffffffa80c: cling::Interpreter::kSuccess, result=0x7fffffffa810, disableValuePrinting=false). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317. #31 0x00007fffea97c5cd in HandleInterpreterException (metaProcessor=0x95c1b0, input_line=0xccf520 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", compRes=@0x7fffffffa80c: cling::Interpreter::kSuccess, result=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:2434. #32 0x00007fffea97cff6 in TCling::ProcessLine (this=0x4c1820, line=0x141f860 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", error=0x7fffffffd888). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:2578. #33 0x00007fffea9808ab in TCling::ProcessLineSynch (this=0x4c1820, line=0x141f860 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", error=0x7fffffffd888). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:3524. ``` .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:69,deployability,fail,failure,69,"Bundling base class and derived class in same dictionary can lead to failure in recursive parsing.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. Using the example provide in the original [report](https://root-forum.cern.ch/t/linking-problems-with-shared-library-backward-backward-warning-h) : [linker_example.zip](https://github.com/root-project/root/files/11763343/linker_example.zip). Doing:. ```. make. root.exe -b -l -q macro.cc. ```. leads to:. ```. Loading A.sl. Processing macro.cc... In file included from ADictUX dictionary payload:6:. ./B.h:5:18: error: base class has incomplete type. class B : public A {. ~~~~~~~^. ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:1674,deployability,version,version,1674,": definition of 'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/rootcling_impl.cxx. index f56ce23b7a..7cd24d2c63 100644. --- a/core/dictgen/src/rootcling_impl.cxx. +++ b/core/dictgen/src/rootcling_impl.cxx. @@ -4971,7 +4971,7 @@ int RootClingMain(int argc,. if (!gOptCxxModule) {. headersClassesMapString = GenerateStringFromHeadersForClasses(headersDeclsMap,. detectedUmbrella,. - true);. + false);. if (!gDriverConfig->fBuildingROOTStage1) {. if (!gOptWriteEmptyRootPCM). fwdDeclsString = GenerateFwdDeclString(scan, interp);. ```. This introduces the following diff in the generated dictionary:. ```. rootsrv1:2023-dict pcanal$ diff -C2 dict.cxx dict.good.2.cxx . *** dict.cxx 2023-06-15 15:55:39.818476668 -0500. --- dict.good.2.cxx 2023-06-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:1690,deployability,version,version,1690,"'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/rootcling_impl.cxx. index f56ce23b7a..7cd24d2c63 100644. --- a/core/dictgen/src/rootcling_impl.cxx. +++ b/core/dictgen/src/rootcling_impl.cxx. @@ -4971,7 +4971,7 @@ int RootClingMain(int argc,. if (!gOptCxxModule) {. headersClassesMapString = GenerateStringFromHeadersForClasses(headersDeclsMap,. detectedUmbrella,. - true);. + false);. if (!gDriverConfig->fBuildingROOTStage1) {. if (!gOptWriteEmptyRootPCM). fwdDeclsString = GenerateFwdDeclString(scan, interp);. ```. This introduces the following diff in the generated dictionary:. ```. rootsrv1:2023-dict pcanal$ diff -C2 dict.cxx dict.good.2.cxx . *** dict.cxx 2023-06-15 15:55:39.818476668 -0500. --- dict.good.2.cxx 2023-06-15 14:54:48.5052",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:1715,deployability,instal,install,1715," the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/rootcling_impl.cxx. index f56ce23b7a..7cd24d2c63 100644. --- a/core/dictgen/src/rootcling_impl.cxx. +++ b/core/dictgen/src/rootcling_impl.cxx. @@ -4971,7 +4971,7 @@ int RootClingMain(int argc,. if (!gOptCxxModule) {. headersClassesMapString = GenerateStringFromHeadersForClasses(headersDeclsMap,. detectedUmbrella,. - true);. + false);. if (!gDriverConfig->fBuildingROOTStage1) {. if (!gOptWriteEmptyRootPCM). fwdDeclsString = GenerateFwdDeclString(scan, interp);. ```. This introduces the following diff in the generated dictionary:. ```. rootsrv1:2023-dict pcanal$ diff -C2 dict.cxx dict.good.2.cxx . *** dict.cxx 2023-06-15 15:55:39.818476668 -0500. --- dict.good.2.cxx 2023-06-15 14:54:48.505264642 -0500. ************",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:3068,deployability,contain,contains,3068,"/src/rootcling_impl.cxx. +++ b/core/dictgen/src/rootcling_impl.cxx. @@ -4971,7 +4971,7 @@ int RootClingMain(int argc,. if (!gOptCxxModule) {. headersClassesMapString = GenerateStringFromHeadersForClasses(headersDeclsMap,. detectedUmbrella,. - true);. + false);. if (!gDriverConfig->fBuildingROOTStage1) {. if (!gOptWriteEmptyRootPCM). fwdDeclsString = GenerateFwdDeclString(scan, interp);. ```. This introduces the following diff in the generated dictionary:. ```. rootsrv1:2023-dict pcanal$ diff -C2 dict.cxx dict.good.2.cxx . *** dict.cxx 2023-06-15 15:55:39.818476668 -0500. --- dict.good.2.cxx 2023-06-15 14:54:48.505264642 -0500. ***************. *** 187,192 ****. )DICTPAYLOAD"";. static const char* classesHeaders[] = {. ! ""A"", payloadCode, ""@"",. ! ""B"", payloadCode, ""@"",. nullptr. };. --- 187,192 ----. )DICTPAYLOAD"";. static const char* classesHeaders[] = {. ! ""A"", ""A.h"", ""@"",. ! ""B"", ""B.h"", ""@"",. nullptr. };. ```. and indeed in practice the order of operation are as follow: (macro.cc contains a `#include ""A.h""`):. * Process the `A.h` and then start declaring class `A`:. * While declaring `A`, process the constructor (of anything involving `A` itself in `A` declaration and call ` TCling::AutoParse`. * ` TCling::AutoParse` recognizes `A` for the dictionary's `classesHeaders`. * ` TCling::AutoParse` proceeed to ask for the `payloadCode` to be processed/included (with the 'patch / fix / reversal' this is replaced by `A.h`), this `payloadCode` consist of:. ```. #include ""A.h"". #include ""B.h"". ```. * Thanks to the code guard `A.h` is skipped (well anyway it is actually being processed by the outer code !!). * `B.h` is being included is reached:. ```. class B : public A. ```. which correctly complains that `A` is not yet fully declared .... The commit log corresponding to the change is explicitly referring to this change:. ```. Associate to autoParse entries only the payload ([ROOT-6321](https://sft.its.cern.ch/jira/browse/ROOT-6321)). . de facto implementing lazy payload par",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:3461,deployability,patch,patch,3461,"`. This introduces the following diff in the generated dictionary:. ```. rootsrv1:2023-dict pcanal$ diff -C2 dict.cxx dict.good.2.cxx . *** dict.cxx 2023-06-15 15:55:39.818476668 -0500. --- dict.good.2.cxx 2023-06-15 14:54:48.505264642 -0500. ***************. *** 187,192 ****. )DICTPAYLOAD"";. static const char* classesHeaders[] = {. ! ""A"", payloadCode, ""@"",. ! ""B"", payloadCode, ""@"",. nullptr. };. --- 187,192 ----. )DICTPAYLOAD"";. static const char* classesHeaders[] = {. ! ""A"", ""A.h"", ""@"",. ! ""B"", ""B.h"", ""@"",. nullptr. };. ```. and indeed in practice the order of operation are as follow: (macro.cc contains a `#include ""A.h""`):. * Process the `A.h` and then start declaring class `A`:. * While declaring `A`, process the constructor (of anything involving `A` itself in `A` declaration and call ` TCling::AutoParse`. * ` TCling::AutoParse` recognizes `A` for the dictionary's `classesHeaders`. * ` TCling::AutoParse` proceeed to ask for the `payloadCode` to be processed/included (with the 'patch / fix / reversal' this is replaced by `A.h`), this `payloadCode` consist of:. ```. #include ""A.h"". #include ""B.h"". ```. * Thanks to the code guard `A.h` is skipped (well anyway it is actually being processed by the outer code !!). * `B.h` is being included is reached:. ```. class B : public A. ```. which correctly complains that `A` is not yet fully declared .... The commit log corresponding to the change is explicitly referring to this change:. ```. Associate to autoParse entries only the payload ([ROOT-6321](https://sft.its.cern.ch/jira/browse/ROOT-6321)). . de facto implementing lazy payload parsing instead of header. parsing on demand. ```. **It is not clear why ` TCling::AutoParse` is called with a symbol that is ""__being__"" declared.**. A work around (why we don't usually see this issue) is to generate a rootmap file (generating the c++ module should also in principle):. ```. diff Makefile.orig Makefile. 25c25. < rootcint -f ${DICT} -c ${DICTHDRS}. ---. > rootcint -rml=A -f ${",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:3844,deployability,log,log,3844,"@"",. nullptr. };. --- 187,192 ----. )DICTPAYLOAD"";. static const char* classesHeaders[] = {. ! ""A"", ""A.h"", ""@"",. ! ""B"", ""B.h"", ""@"",. nullptr. };. ```. and indeed in practice the order of operation are as follow: (macro.cc contains a `#include ""A.h""`):. * Process the `A.h` and then start declaring class `A`:. * While declaring `A`, process the constructor (of anything involving `A` itself in `A` declaration and call ` TCling::AutoParse`. * ` TCling::AutoParse` recognizes `A` for the dictionary's `classesHeaders`. * ` TCling::AutoParse` proceeed to ask for the `payloadCode` to be processed/included (with the 'patch / fix / reversal' this is replaced by `A.h`), this `payloadCode` consist of:. ```. #include ""A.h"". #include ""B.h"". ```. * Thanks to the code guard `A.h` is skipped (well anyway it is actually being processed by the outer code !!). * `B.h` is being included is reached:. ```. class B : public A. ```. which correctly complains that `A` is not yet fully declared .... The commit log corresponding to the change is explicitly referring to this change:. ```. Associate to autoParse entries only the payload ([ROOT-6321](https://sft.its.cern.ch/jira/browse/ROOT-6321)). . de facto implementing lazy payload parsing instead of header. parsing on demand. ```. **It is not clear why ` TCling::AutoParse` is called with a symbol that is ""__being__"" declared.**. A work around (why we don't usually see this issue) is to generate a rootmap file (generating the c++ module should also in principle):. ```. diff Makefile.orig Makefile. 25c25. < rootcint -f ${DICT} -c ${DICTHDRS}. ---. > rootcint -rml=A -f ${DICT} -c ${DICTHDRS}. ```. Full stack trace at the starting point of the failing recursive parsing:. ```. #0 TCling::AutoParse (this=0x4c1820, cls=0x7fffffff5670 ""A"") at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:6449. #1 0x00007fffea9724aa in TCling__AutoParseCallback (className=0x7fffffff5670 ""A"") at /local2/pcanal/cint_working/rootcling/root/core/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:4322,deployability,modul,module,4322,"for the dictionary's `classesHeaders`. * ` TCling::AutoParse` proceeed to ask for the `payloadCode` to be processed/included (with the 'patch / fix / reversal' this is replaced by `A.h`), this `payloadCode` consist of:. ```. #include ""A.h"". #include ""B.h"". ```. * Thanks to the code guard `A.h` is skipped (well anyway it is actually being processed by the outer code !!). * `B.h` is being included is reached:. ```. class B : public A. ```. which correctly complains that `A` is not yet fully declared .... The commit log corresponding to the change is explicitly referring to this change:. ```. Associate to autoParse entries only the payload ([ROOT-6321](https://sft.its.cern.ch/jira/browse/ROOT-6321)). . de facto implementing lazy payload parsing instead of header. parsing on demand. ```. **It is not clear why ` TCling::AutoParse` is called with a symbol that is ""__being__"" declared.**. A work around (why we don't usually see this issue) is to generate a rootmap file (generating the c++ module should also in principle):. ```. diff Makefile.orig Makefile. 25c25. < rootcint -f ${DICT} -c ${DICTHDRS}. ---. > rootcint -rml=A -f ${DICT} -c ${DICTHDRS}. ```. Full stack trace at the starting point of the failing recursive parsing:. ```. #0 TCling::AutoParse (this=0x4c1820, cls=0x7fffffff5670 ""A"") at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:6449. #1 0x00007fffea9724aa in TCling__AutoParseCallback (className=0x7fffffff5670 ""A"") at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:628. #2 0x00007fffeab15723 in TClingCallbacks::tryAutoParseInternal (this=0x953710, Name=..., R=..., S=0x6a4ee0, FE=0x0) at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TClingCallbacks.cxx:661. #3 0x00007fffeab14661 in TClingCallbacks::LookupObject (this=0x953710, R=..., S=0x6a4ee0) at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TClingCallbacks.cxx:392. #4 0x00007fffeac100fc in cling::MultiplexInterpreterCallbacks::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:4496,deployability,stack,stack,4496,"ed by `A.h`), this `payloadCode` consist of:. ```. #include ""A.h"". #include ""B.h"". ```. * Thanks to the code guard `A.h` is skipped (well anyway it is actually being processed by the outer code !!). * `B.h` is being included is reached:. ```. class B : public A. ```. which correctly complains that `A` is not yet fully declared .... The commit log corresponding to the change is explicitly referring to this change:. ```. Associate to autoParse entries only the payload ([ROOT-6321](https://sft.its.cern.ch/jira/browse/ROOT-6321)). . de facto implementing lazy payload parsing instead of header. parsing on demand. ```. **It is not clear why ` TCling::AutoParse` is called with a symbol that is ""__being__"" declared.**. A work around (why we don't usually see this issue) is to generate a rootmap file (generating the c++ module should also in principle):. ```. diff Makefile.orig Makefile. 25c25. < rootcint -f ${DICT} -c ${DICTHDRS}. ---. > rootcint -rml=A -f ${DICT} -c ${DICTHDRS}. ```. Full stack trace at the starting point of the failing recursive parsing:. ```. #0 TCling::AutoParse (this=0x4c1820, cls=0x7fffffff5670 ""A"") at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:6449. #1 0x00007fffea9724aa in TCling__AutoParseCallback (className=0x7fffffff5670 ""A"") at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:628. #2 0x00007fffeab15723 in TClingCallbacks::tryAutoParseInternal (this=0x953710, Name=..., R=..., S=0x6a4ee0, FE=0x0) at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TClingCallbacks.cxx:661. #3 0x00007fffeab14661 in TClingCallbacks::LookupObject (this=0x953710, R=..., S=0x6a4ee0) at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TClingCallbacks.cxx:392. #4 0x00007fffeac100fc in cling::MultiplexInterpreterCallbacks::LookupObject (this=0x4d2120, LR=..., S=0x6a4ee0) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:62. #5 0x0000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:4537,deployability,fail,failing,4537,"f:. ```. #include ""A.h"". #include ""B.h"". ```. * Thanks to the code guard `A.h` is skipped (well anyway it is actually being processed by the outer code !!). * `B.h` is being included is reached:. ```. class B : public A. ```. which correctly complains that `A` is not yet fully declared .... The commit log corresponding to the change is explicitly referring to this change:. ```. Associate to autoParse entries only the payload ([ROOT-6321](https://sft.its.cern.ch/jira/browse/ROOT-6321)). . de facto implementing lazy payload parsing instead of header. parsing on demand. ```. **It is not clear why ` TCling::AutoParse` is called with a symbol that is ""__being__"" declared.**. A work around (why we don't usually see this issue) is to generate a rootmap file (generating the c++ module should also in principle):. ```. diff Makefile.orig Makefile. 25c25. < rootcint -f ${DICT} -c ${DICTHDRS}. ---. > rootcint -rml=A -f ${DICT} -c ${DICTHDRS}. ```. Full stack trace at the starting point of the failing recursive parsing:. ```. #0 TCling::AutoParse (this=0x4c1820, cls=0x7fffffff5670 ""A"") at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:6449. #1 0x00007fffea9724aa in TCling__AutoParseCallback (className=0x7fffffff5670 ""A"") at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:628. #2 0x00007fffeab15723 in TClingCallbacks::tryAutoParseInternal (this=0x953710, Name=..., R=..., S=0x6a4ee0, FE=0x0) at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TClingCallbacks.cxx:661. #3 0x00007fffeab14661 in TClingCallbacks::LookupObject (this=0x953710, R=..., S=0x6a4ee0) at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TClingCallbacks.cxx:392. #4 0x00007fffeac100fc in cling::MultiplexInterpreterCallbacks::LookupObject (this=0x4d2120, LR=..., S=0x6a4ee0) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:62. #5 0x00007fffeac2259e in cling::InterpreterExternal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:490,energy efficiency,Load,Loading,490,"Bundling base class and derived class in same dictionary can lead to failure in recursive parsing.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. Using the example provide in the original [report](https://root-forum.cern.ch/t/linking-problems-with-shared-library-backward-backward-warning-h) : [linker_example.zip](https://github.com/root-project/root/files/11763343/linker_example.zip). Doing:. ```. make. root.exe -b -l -q macro.cc. ```. leads to:. ```. Loading A.sl. Processing macro.cc... In file included from ADictUX dictionary payload:6:. ./B.h:5:18: error: base class has incomplete type. class B : public A {. ~~~~~~~^. ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:1477,energy efficiency,Load,Loading,1477,"o:. ```. Loading A.sl. Processing macro.cc... In file included from ADictUX dictionary payload:6:. ./B.h:5:18: error: base class has incomplete type. class B : public A {. ~~~~~~~^. ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/rootcling_impl.cxx. index f56ce23b7a..7cd24d2c63 100644. --- a/core/dictgen/src/rootcling_impl.cxx. +++ b/core/dictgen/src/rootcling_impl.cxx. @@ -4971,7 +4971,7 @@ int RootClingMain(int argc,. if (!gOptCxxModule) {. headersClassesMapString = GenerateStringFromHeadersForClasses(headersDeclsMap,. detectedUmbrella,. - true);. + false);. if (!gDriverConfig->fBuildingROOTStage1) {. if (!gOptWriteEmptyRootPCM). fwdDeclsString = GenerateFwdDeclString(scan, interp);. ```. This introduce",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:1942,energy efficiency,core,core,1942,"sing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/rootcling_impl.cxx. index f56ce23b7a..7cd24d2c63 100644. --- a/core/dictgen/src/rootcling_impl.cxx. +++ b/core/dictgen/src/rootcling_impl.cxx. @@ -4971,7 +4971,7 @@ int RootClingMain(int argc,. if (!gOptCxxModule) {. headersClassesMapString = GenerateStringFromHeadersForClasses(headersDeclsMap,. detectedUmbrella,. - true);. + false);. if (!gDriverConfig->fBuildingROOTStage1) {. if (!gOptWriteEmptyRootPCM). fwdDeclsString = GenerateFwdDeclString(scan, interp);. ```. This introduces the following diff in the generated dictionary:. ```. rootsrv1:2023-dict pcanal$ diff -C2 dict.cxx dict.good.2.cxx . *** dict.cxx 2023-06-15 15:55:39.818476668 -0500. --- dict.good.2.cxx 2023-06-15 14:54:48.505264642 -0500. ***************. *** 187,192 ****. )DICTPAYLOAD"";. static const char* classesHeaders[] = {. ! ""A"", payloadCode, ""@"",. ! ""B"", payloadCode, ""@"",. nullptr. };. --- 187,192 ----. )DICTPAYLOAD"";. static const char* classesHeaders[] = {. ! ""A""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:1980,energy efficiency,core,core,1980,"tent:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/rootcling_impl.cxx. index f56ce23b7a..7cd24d2c63 100644. --- a/core/dictgen/src/rootcling_impl.cxx. +++ b/core/dictgen/src/rootcling_impl.cxx. @@ -4971,7 +4971,7 @@ int RootClingMain(int argc,. if (!gOptCxxModule) {. headersClassesMapString = GenerateStringFromHeadersForClasses(headersDeclsMap,. detectedUmbrella,. - true);. + false);. if (!gDriverConfig->fBuildingROOTStage1) {. if (!gOptWriteEmptyRootPCM). fwdDeclsString = GenerateFwdDeclString(scan, interp);. ```. This introduces the following diff in the generated dictionary:. ```. rootsrv1:2023-dict pcanal$ diff -C2 dict.cxx dict.good.2.cxx . *** dict.cxx 2023-06-15 15:55:39.818476668 -0500. --- dict.good.2.cxx 2023-06-15 14:54:48.505264642 -0500. ***************. *** 187,192 ****. )DICTPAYLOAD"";. static const char* classesHeaders[] = {. ! ""A"", payloadCode, ""@"",. ! ""B"", payloadCode, ""@"",. nullptr. };. --- 187,192 ----. )DICTPAYLOAD"";. static const char* classesHeaders[] = {. ! ""A"", ""A.h"", ""@"",. ! ""B"", ""B.h"", ""@"",. nul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:2060,energy efficiency,core,core,2060,"H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/rootcling_impl.cxx. index f56ce23b7a..7cd24d2c63 100644. --- a/core/dictgen/src/rootcling_impl.cxx. +++ b/core/dictgen/src/rootcling_impl.cxx. @@ -4971,7 +4971,7 @@ int RootClingMain(int argc,. if (!gOptCxxModule) {. headersClassesMapString = GenerateStringFromHeadersForClasses(headersDeclsMap,. detectedUmbrella,. - true);. + false);. if (!gDriverConfig->fBuildingROOTStage1) {. if (!gOptWriteEmptyRootPCM). fwdDeclsString = GenerateFwdDeclString(scan, interp);. ```. This introduces the following diff in the generated dictionary:. ```. rootsrv1:2023-dict pcanal$ diff -C2 dict.cxx dict.good.2.cxx . *** dict.cxx 2023-06-15 15:55:39.818476668 -0500. --- dict.good.2.cxx 2023-06-15 14:54:48.505264642 -0500. ***************. *** 187,192 ****. )DICTPAYLOAD"";. static const char* classesHeaders[] = {. ! ""A"", payloadCode, ""@"",. ! ""B"", payloadCode, ""@"",. nullptr. };. --- 187,192 ----. )DICTPAYLOAD"";. static const char* classesHeaders[] = {. ! ""A"", ""A.h"", ""@"",. ! ""B"", ""B.h"", ""@"",. nullptr. };. ```. and indeed in practice the order of operation are as follow: (mac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:2103,energy efficiency,core,core,2103,"ude ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/rootcling_impl.cxx. index f56ce23b7a..7cd24d2c63 100644. --- a/core/dictgen/src/rootcling_impl.cxx. +++ b/core/dictgen/src/rootcling_impl.cxx. @@ -4971,7 +4971,7 @@ int RootClingMain(int argc,. if (!gOptCxxModule) {. headersClassesMapString = GenerateStringFromHeadersForClasses(headersDeclsMap,. detectedUmbrella,. - true);. + false);. if (!gDriverConfig->fBuildingROOTStage1) {. if (!gOptWriteEmptyRootPCM). fwdDeclsString = GenerateFwdDeclString(scan, interp);. ```. This introduces the following diff in the generated dictionary:. ```. rootsrv1:2023-dict pcanal$ diff -C2 dict.cxx dict.good.2.cxx . *** dict.cxx 2023-06-15 15:55:39.818476668 -0500. --- dict.good.2.cxx 2023-06-15 14:54:48.505264642 -0500. ***************. *** 187,192 ****. )DICTPAYLOAD"";. static const char* classesHeaders[] = {. ! ""A"", payloadCode, ""@"",. ! ""B"", payloadCode, ""@"",. nullptr. };. --- 187,192 ----. )DICTPAYLOAD"";. static const char* classesHeaders[] = {. ! ""A"", ""A.h"", ""@"",. ! ""B"", ""B.h"", ""@"",. nullptr. };. ```. and indeed in practice the order of operation are as follow: (macro.cc contains a `#include ""A.h""`):. * Proc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:4677,energy efficiency,core,core,4677,"he outer code !!). * `B.h` is being included is reached:. ```. class B : public A. ```. which correctly complains that `A` is not yet fully declared .... The commit log corresponding to the change is explicitly referring to this change:. ```. Associate to autoParse entries only the payload ([ROOT-6321](https://sft.its.cern.ch/jira/browse/ROOT-6321)). . de facto implementing lazy payload parsing instead of header. parsing on demand. ```. **It is not clear why ` TCling::AutoParse` is called with a symbol that is ""__being__"" declared.**. A work around (why we don't usually see this issue) is to generate a rootmap file (generating the c++ module should also in principle):. ```. diff Makefile.orig Makefile. 25c25. < rootcint -f ${DICT} -c ${DICTHDRS}. ---. > rootcint -rml=A -f ${DICT} -c ${DICTHDRS}. ```. Full stack trace at the starting point of the failing recursive parsing:. ```. #0 TCling::AutoParse (this=0x4c1820, cls=0x7fffffff5670 ""A"") at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:6449. #1 0x00007fffea9724aa in TCling__AutoParseCallback (className=0x7fffffff5670 ""A"") at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:628. #2 0x00007fffeab15723 in TClingCallbacks::tryAutoParseInternal (this=0x953710, Name=..., R=..., S=0x6a4ee0, FE=0x0) at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TClingCallbacks.cxx:661. #3 0x00007fffeab14661 in TClingCallbacks::LookupObject (this=0x953710, R=..., S=0x6a4ee0) at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TClingCallbacks.cxx:392. #4 0x00007fffeac100fc in cling::MultiplexInterpreterCallbacks::LookupObject (this=0x4d2120, LR=..., S=0x6a4ee0) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:62. #5 0x00007fffeac2259e in cling::InterpreterExternalSemaSource::LookupUnqualified (this=0x72d080, R=..., S=0x6a4ee0) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Inter",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:4841,energy efficiency,core,core,4841," log corresponding to the change is explicitly referring to this change:. ```. Associate to autoParse entries only the payload ([ROOT-6321](https://sft.its.cern.ch/jira/browse/ROOT-6321)). . de facto implementing lazy payload parsing instead of header. parsing on demand. ```. **It is not clear why ` TCling::AutoParse` is called with a symbol that is ""__being__"" declared.**. A work around (why we don't usually see this issue) is to generate a rootmap file (generating the c++ module should also in principle):. ```. diff Makefile.orig Makefile. 25c25. < rootcint -f ${DICT} -c ${DICTHDRS}. ---. > rootcint -rml=A -f ${DICT} -c ${DICTHDRS}. ```. Full stack trace at the starting point of the failing recursive parsing:. ```. #0 TCling::AutoParse (this=0x4c1820, cls=0x7fffffff5670 ""A"") at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:6449. #1 0x00007fffea9724aa in TCling__AutoParseCallback (className=0x7fffffff5670 ""A"") at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:628. #2 0x00007fffeab15723 in TClingCallbacks::tryAutoParseInternal (this=0x953710, Name=..., R=..., S=0x6a4ee0, FE=0x0) at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TClingCallbacks.cxx:661. #3 0x00007fffeab14661 in TClingCallbacks::LookupObject (this=0x953710, R=..., S=0x6a4ee0) at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TClingCallbacks.cxx:392. #4 0x00007fffeac100fc in cling::MultiplexInterpreterCallbacks::LookupObject (this=0x4d2120, LR=..., S=0x6a4ee0) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:62. #5 0x00007fffeac2259e in cling::InterpreterExternalSemaSource::LookupUnqualified (this=0x72d080, R=..., S=0x6a4ee0) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:269. #6 0x00007fffebc660b9 in clang::MultiplexExternalSemaSource::LookupUnqualified (this=0x72d0b0, R=..., S=0x6a4ee0). at /local2/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:5038,energy efficiency,core,core,5038,"to implementing lazy payload parsing instead of header. parsing on demand. ```. **It is not clear why ` TCling::AutoParse` is called with a symbol that is ""__being__"" declared.**. A work around (why we don't usually see this issue) is to generate a rootmap file (generating the c++ module should also in principle):. ```. diff Makefile.orig Makefile. 25c25. < rootcint -f ${DICT} -c ${DICTHDRS}. ---. > rootcint -rml=A -f ${DICT} -c ${DICTHDRS}. ```. Full stack trace at the starting point of the failing recursive parsing:. ```. #0 TCling::AutoParse (this=0x4c1820, cls=0x7fffffff5670 ""A"") at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:6449. #1 0x00007fffea9724aa in TCling__AutoParseCallback (className=0x7fffffff5670 ""A"") at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:628. #2 0x00007fffeab15723 in TClingCallbacks::tryAutoParseInternal (this=0x953710, Name=..., R=..., S=0x6a4ee0, FE=0x0) at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TClingCallbacks.cxx:661. #3 0x00007fffeab14661 in TClingCallbacks::LookupObject (this=0x953710, R=..., S=0x6a4ee0) at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TClingCallbacks.cxx:392. #4 0x00007fffeac100fc in cling::MultiplexInterpreterCallbacks::LookupObject (this=0x4d2120, LR=..., S=0x6a4ee0) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:62. #5 0x00007fffeac2259e in cling::InterpreterExternalSemaSource::LookupUnqualified (this=0x72d080, R=..., S=0x6a4ee0) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:269. #6 0x00007fffebc660b9 in clang::MultiplexExternalSemaSource::LookupUnqualified (this=0x72d0b0, R=..., S=0x6a4ee0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Sema/MultiplexExternalSemaSource.cpp:241. #7 0x00007fffec47ee6c in clang::Sema::LookupName (this=0x5250d0, R=..., S=0x6a4ee0, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:5218,energy efficiency,core,core,5218,"A work around (why we don't usually see this issue) is to generate a rootmap file (generating the c++ module should also in principle):. ```. diff Makefile.orig Makefile. 25c25. < rootcint -f ${DICT} -c ${DICTHDRS}. ---. > rootcint -rml=A -f ${DICT} -c ${DICTHDRS}. ```. Full stack trace at the starting point of the failing recursive parsing:. ```. #0 TCling::AutoParse (this=0x4c1820, cls=0x7fffffff5670 ""A"") at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:6449. #1 0x00007fffea9724aa in TCling__AutoParseCallback (className=0x7fffffff5670 ""A"") at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:628. #2 0x00007fffeab15723 in TClingCallbacks::tryAutoParseInternal (this=0x953710, Name=..., R=..., S=0x6a4ee0, FE=0x0) at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TClingCallbacks.cxx:661. #3 0x00007fffeab14661 in TClingCallbacks::LookupObject (this=0x953710, R=..., S=0x6a4ee0) at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TClingCallbacks.cxx:392. #4 0x00007fffeac100fc in cling::MultiplexInterpreterCallbacks::LookupObject (this=0x4d2120, LR=..., S=0x6a4ee0) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:62. #5 0x00007fffeac2259e in cling::InterpreterExternalSemaSource::LookupUnqualified (this=0x72d080, R=..., S=0x6a4ee0) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:269. #6 0x00007fffebc660b9 in clang::MultiplexExternalSemaSource::LookupUnqualified (this=0x72d0b0, R=..., S=0x6a4ee0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Sema/MultiplexExternalSemaSource.cpp:241. #7 0x00007fffec47ee6c in clang::Sema::LookupName (this=0x5250d0, R=..., S=0x6a4ee0, AllowBuiltinCreation=false) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2026. #8 0x00007fffebe7a672 in clang::Sema::Handl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:10088,energy efficiency,load,loadHeader,10088,".., DS=0x0) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:984. #19 0x00007fffeba38af9 in clang::Parser::ParseTopLevelDecl (this=0x6a8f70, Result=..., IsFirstDecl=false) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:729. #20 0x00007fffead8c986 in cling::IncrementalParser::ParseInternal (this=0x4c5c20, input=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:930. #21 0x00007fffead8c401 in cling::IncrementalParser::Compile (this=0x4c5c20, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:840. #22 0x00007fffeac0cb09 in cling::Interpreter::DeclareInternal (this=0x4c22e0, input=..., CO=..., T=0x7fffffffa030) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1357. #23 0x00007fffeac0d647 in cling::Interpreter::loadHeader (this=0x4c22e0, filename=..., T=0x7fffffffa030) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1495. #24 0x00007fffeac0dc30 in cling::Interpreter::loadFile (this=0x4c22e0, filename=..., allowSharedLib=true, T=0x7fffffffa030) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1589. #25 0x00007fffeaea2dc4 in cling::MetaSema::actOnLCommand (this=0x532780, file=..., transaction=0x7fffffffa030) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79. #26 0x00007fffeaea3377 in cling::MetaSema::actOnxCommand (this=0x532780, file=..., args=..., result=0x7fffffffa810) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:146. #27 0x00007fffeaeb4ac7 in cling::MetaParser::isXCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_wor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:10295,energy efficiency,load,loadFile,10295,"FirstDecl=false) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:729. #20 0x00007fffead8c986 in cling::IncrementalParser::ParseInternal (this=0x4c5c20, input=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:930. #21 0x00007fffead8c401 in cling::IncrementalParser::Compile (this=0x4c5c20, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:840. #22 0x00007fffeac0cb09 in cling::Interpreter::DeclareInternal (this=0x4c22e0, input=..., CO=..., T=0x7fffffffa030) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1357. #23 0x00007fffeac0d647 in cling::Interpreter::loadHeader (this=0x4c22e0, filename=..., T=0x7fffffffa030) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1495. #24 0x00007fffeac0dc30 in cling::Interpreter::loadFile (this=0x4c22e0, filename=..., allowSharedLib=true, T=0x7fffffffa030) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1589. #25 0x00007fffeaea2dc4 in cling::MetaSema::actOnLCommand (this=0x532780, file=..., transaction=0x7fffffffa030) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79. #26 0x00007fffeaea3377 in cling::MetaSema::actOnxCommand (this=0x532780, file=..., args=..., result=0x7fffffffa810) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:146. #27 0x00007fffeaeb4ac7 in cling::MetaParser::isXCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315. #28 0x00007fffeaeb3b27 in cling::MetaParser::isCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Suc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:12289,energy efficiency,core,core,12289,"cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:146. #27 0x00007fffeaeb4ac7 in cling::MetaParser::isXCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315. #28 0x00007fffeaeb3b27 in cling::MetaParser::isCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:119. #29 0x00007fffeaeb39af in cling::MetaParser::isMetaCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:96. #30 0x00007fffeae9d2dc in cling::MetaProcessor::process (this=0x95c1b0, input_line=..., compRes=@0x7fffffffa80c: cling::Interpreter::kSuccess, result=0x7fffffffa810, disableValuePrinting=false). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317. #31 0x00007fffea97c5cd in HandleInterpreterException (metaProcessor=0x95c1b0, input_line=0xccf520 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", compRes=@0x7fffffffa80c: cling::Interpreter::kSuccess, result=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:2434. #32 0x00007fffea97cff6 in TCling::ProcessLine (this=0x4c1820, line=0x141f860 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", error=0x7fffffffd888). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:2578. #33 0x00007fffea9808ab in TCling::ProcessLineSynch (this=0x4c1820, line=0x141f860 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", error=0x7fffffffd888). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:3524. ``` .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:12531,energy efficiency,core,core,12531,"cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:146. #27 0x00007fffeaeb4ac7 in cling::MetaParser::isXCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315. #28 0x00007fffeaeb3b27 in cling::MetaParser::isCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:119. #29 0x00007fffeaeb39af in cling::MetaParser::isMetaCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:96. #30 0x00007fffeae9d2dc in cling::MetaProcessor::process (this=0x95c1b0, input_line=..., compRes=@0x7fffffffa80c: cling::Interpreter::kSuccess, result=0x7fffffffa810, disableValuePrinting=false). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317. #31 0x00007fffea97c5cd in HandleInterpreterException (metaProcessor=0x95c1b0, input_line=0xccf520 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", compRes=@0x7fffffffa80c: cling::Interpreter::kSuccess, result=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:2434. #32 0x00007fffea97cff6 in TCling::ProcessLine (this=0x4c1820, line=0x141f860 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", error=0x7fffffffd888). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:2578. #33 0x00007fffea9808ab in TCling::ProcessLineSynch (this=0x4c1820, line=0x141f860 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", error=0x7fffffffd888). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:3524. ``` .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:12778,energy efficiency,core,core,12778,"cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:146. #27 0x00007fffeaeb4ac7 in cling::MetaParser::isXCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315. #28 0x00007fffeaeb3b27 in cling::MetaParser::isCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:119. #29 0x00007fffeaeb39af in cling::MetaParser::isMetaCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:96. #30 0x00007fffeae9d2dc in cling::MetaProcessor::process (this=0x95c1b0, input_line=..., compRes=@0x7fffffffa80c: cling::Interpreter::kSuccess, result=0x7fffffffa810, disableValuePrinting=false). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317. #31 0x00007fffea97c5cd in HandleInterpreterException (metaProcessor=0x95c1b0, input_line=0xccf520 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", compRes=@0x7fffffffa80c: cling::Interpreter::kSuccess, result=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:2434. #32 0x00007fffea97cff6 in TCling::ProcessLine (this=0x4c1820, line=0x141f860 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", error=0x7fffffffd888). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:2578. #33 0x00007fffea9808ab in TCling::ProcessLineSynch (this=0x4c1820, line=0x141f860 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", error=0x7fffffffd888). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:3524. ``` .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:641,integrability,pub,public,641,"Bundling base class and derived class in same dictionary can lead to failure in recursive parsing.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. Using the example provide in the original [report](https://root-forum.cern.ch/t/linking-problems-with-shared-library-backward-backward-warning-h) : [linker_example.zip](https://github.com/root-project/root/files/11763343/linker_example.zip). Doing:. ```. make. root.exe -b -l -q macro.cc. ```. leads to:. ```. Loading A.sl. Processing macro.cc... In file included from ADictUX dictionary payload:6:. ./B.h:5:18: error: base class has incomplete type. class B : public A {. ~~~~~~~^. ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:1674,integrability,version,version,1674,": definition of 'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/rootcling_impl.cxx. index f56ce23b7a..7cd24d2c63 100644. --- a/core/dictgen/src/rootcling_impl.cxx. +++ b/core/dictgen/src/rootcling_impl.cxx. @@ -4971,7 +4971,7 @@ int RootClingMain(int argc,. if (!gOptCxxModule) {. headersClassesMapString = GenerateStringFromHeadersForClasses(headersDeclsMap,. detectedUmbrella,. - true);. + false);. if (!gDriverConfig->fBuildingROOTStage1) {. if (!gOptWriteEmptyRootPCM). fwdDeclsString = GenerateFwdDeclString(scan, interp);. ```. This introduces the following diff in the generated dictionary:. ```. rootsrv1:2023-dict pcanal$ diff -C2 dict.cxx dict.good.2.cxx . *** dict.cxx 2023-06-15 15:55:39.818476668 -0500. --- dict.good.2.cxx 2023-06-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:1690,integrability,version,version,1690,"'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/rootcling_impl.cxx. index f56ce23b7a..7cd24d2c63 100644. --- a/core/dictgen/src/rootcling_impl.cxx. +++ b/core/dictgen/src/rootcling_impl.cxx. @@ -4971,7 +4971,7 @@ int RootClingMain(int argc,. if (!gOptCxxModule) {. headersClassesMapString = GenerateStringFromHeadersForClasses(headersDeclsMap,. detectedUmbrella,. - true);. + false);. if (!gDriverConfig->fBuildingROOTStage1) {. if (!gOptWriteEmptyRootPCM). fwdDeclsString = GenerateFwdDeclString(scan, interp);. ```. This introduces the following diff in the generated dictionary:. ```. rootsrv1:2023-dict pcanal$ diff -C2 dict.cxx dict.good.2.cxx . *** dict.cxx 2023-06-15 15:55:39.818476668 -0500. --- dict.good.2.cxx 2023-06-15 14:54:48.5052",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:3752,integrability,pub,public,3752,";. static const char* classesHeaders[] = {. ! ""A"", payloadCode, ""@"",. ! ""B"", payloadCode, ""@"",. nullptr. };. --- 187,192 ----. )DICTPAYLOAD"";. static const char* classesHeaders[] = {. ! ""A"", ""A.h"", ""@"",. ! ""B"", ""B.h"", ""@"",. nullptr. };. ```. and indeed in practice the order of operation are as follow: (macro.cc contains a `#include ""A.h""`):. * Process the `A.h` and then start declaring class `A`:. * While declaring `A`, process the constructor (of anything involving `A` itself in `A` declaration and call ` TCling::AutoParse`. * ` TCling::AutoParse` recognizes `A` for the dictionary's `classesHeaders`. * ` TCling::AutoParse` proceeed to ask for the `payloadCode` to be processed/included (with the 'patch / fix / reversal' this is replaced by `A.h`), this `payloadCode` consist of:. ```. #include ""A.h"". #include ""B.h"". ```. * Thanks to the code guard `A.h` is skipped (well anyway it is actually being processed by the outer code !!). * `B.h` is being included is reached:. ```. class B : public A. ```. which correctly complains that `A` is not yet fully declared .... The commit log corresponding to the change is explicitly referring to this change:. ```. Associate to autoParse entries only the payload ([ROOT-6321](https://sft.its.cern.ch/jira/browse/ROOT-6321)). . de facto implementing lazy payload parsing instead of header. parsing on demand. ```. **It is not clear why ` TCling::AutoParse` is called with a symbol that is ""__being__"" declared.**. A work around (why we don't usually see this issue) is to generate a rootmap file (generating the c++ module should also in principle):. ```. diff Makefile.orig Makefile. 25c25. < rootcint -f ${DICT} -c ${DICTHDRS}. ---. > rootcint -rml=A -f ${DICT} -c ${DICTHDRS}. ```. Full stack trace at the starting point of the failing recursive parsing:. ```. #0 TCling::AutoParse (this=0x4c1820, cls=0x7fffffff5670 ""A"") at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:6449. #1 0x00007fffea9724aa in TCling__AutoParse",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:282,interoperability,share,shared-library-backward-backward-warning-h,282,"Bundling base class and derived class in same dictionary can lead to failure in recursive parsing.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. Using the example provide in the original [report](https://root-forum.cern.ch/t/linking-problems-with-shared-library-backward-backward-warning-h) : [linker_example.zip](https://github.com/root-project/root/files/11763343/linker_example.zip). Doing:. ```. make. root.exe -b -l -q macro.cc. ```. leads to:. ```. Loading A.sl. Processing macro.cc... In file included from ADictUX dictionary payload:6:. ./B.h:5:18: error: base class has incomplete type. class B : public A {. ~~~~~~~^. ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:1674,modifiability,version,version,1674,": definition of 'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/rootcling_impl.cxx. index f56ce23b7a..7cd24d2c63 100644. --- a/core/dictgen/src/rootcling_impl.cxx. +++ b/core/dictgen/src/rootcling_impl.cxx. @@ -4971,7 +4971,7 @@ int RootClingMain(int argc,. if (!gOptCxxModule) {. headersClassesMapString = GenerateStringFromHeadersForClasses(headersDeclsMap,. detectedUmbrella,. - true);. + false);. if (!gDriverConfig->fBuildingROOTStage1) {. if (!gOptWriteEmptyRootPCM). fwdDeclsString = GenerateFwdDeclString(scan, interp);. ```. This introduces the following diff in the generated dictionary:. ```. rootsrv1:2023-dict pcanal$ diff -C2 dict.cxx dict.good.2.cxx . *** dict.cxx 2023-06-15 15:55:39.818476668 -0500. --- dict.good.2.cxx 2023-06-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:1690,modifiability,version,version,1690,"'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/rootcling_impl.cxx. index f56ce23b7a..7cd24d2c63 100644. --- a/core/dictgen/src/rootcling_impl.cxx. +++ b/core/dictgen/src/rootcling_impl.cxx. @@ -4971,7 +4971,7 @@ int RootClingMain(int argc,. if (!gOptCxxModule) {. headersClassesMapString = GenerateStringFromHeadersForClasses(headersDeclsMap,. detectedUmbrella,. - true);. + false);. if (!gDriverConfig->fBuildingROOTStage1) {. if (!gOptWriteEmptyRootPCM). fwdDeclsString = GenerateFwdDeclString(scan, interp);. ```. This introduces the following diff in the generated dictionary:. ```. rootsrv1:2023-dict pcanal$ diff -C2 dict.cxx dict.good.2.cxx . *** dict.cxx 2023-06-15 15:55:39.818476668 -0500. --- dict.good.2.cxx 2023-06-15 14:54:48.5052",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:4322,modifiability,modul,module,4322,"for the dictionary's `classesHeaders`. * ` TCling::AutoParse` proceeed to ask for the `payloadCode` to be processed/included (with the 'patch / fix / reversal' this is replaced by `A.h`), this `payloadCode` consist of:. ```. #include ""A.h"". #include ""B.h"". ```. * Thanks to the code guard `A.h` is skipped (well anyway it is actually being processed by the outer code !!). * `B.h` is being included is reached:. ```. class B : public A. ```. which correctly complains that `A` is not yet fully declared .... The commit log corresponding to the change is explicitly referring to this change:. ```. Associate to autoParse entries only the payload ([ROOT-6321](https://sft.its.cern.ch/jira/browse/ROOT-6321)). . de facto implementing lazy payload parsing instead of header. parsing on demand. ```. **It is not clear why ` TCling::AutoParse` is called with a symbol that is ""__being__"" declared.**. A work around (why we don't usually see this issue) is to generate a rootmap file (generating the c++ module should also in principle):. ```. diff Makefile.orig Makefile. 25c25. < rootcint -f ${DICT} -c ${DICTHDRS}. ---. > rootcint -rml=A -f ${DICT} -c ${DICTHDRS}. ```. Full stack trace at the starting point of the failing recursive parsing:. ```. #0 TCling::AutoParse (this=0x4c1820, cls=0x7fffffff5670 ""A"") at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:6449. #1 0x00007fffea9724aa in TCling__AutoParseCallback (className=0x7fffffff5670 ""A"") at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:628. #2 0x00007fffeab15723 in TClingCallbacks::tryAutoParseInternal (this=0x953710, Name=..., R=..., S=0x6a4ee0, FE=0x0) at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TClingCallbacks.cxx:661. #3 0x00007fffeab14661 in TClingCallbacks::LookupObject (this=0x953710, R=..., S=0x6a4ee0) at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TClingCallbacks.cxx:392. #4 0x00007fffeac100fc in cling::MultiplexInterpreterCallbacks::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:69,performance,failur,failure,69,"Bundling base class and derived class in same dictionary can lead to failure in recursive parsing.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. Using the example provide in the original [report](https://root-forum.cern.ch/t/linking-problems-with-shared-library-backward-backward-warning-h) : [linker_example.zip](https://github.com/root-project/root/files/11763343/linker_example.zip). Doing:. ```. make. root.exe -b -l -q macro.cc. ```. leads to:. ```. Loading A.sl. Processing macro.cc... In file included from ADictUX dictionary payload:6:. ./B.h:5:18: error: base class has incomplete type. class B : public A {. ~~~~~~~^. ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:490,performance,Load,Loading,490,"Bundling base class and derived class in same dictionary can lead to failure in recursive parsing.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. Using the example provide in the original [report](https://root-forum.cern.ch/t/linking-problems-with-shared-library-backward-backward-warning-h) : [linker_example.zip](https://github.com/root-project/root/files/11763343/linker_example.zip). Doing:. ```. make. root.exe -b -l -q macro.cc. ```. leads to:. ```. Loading A.sl. Processing macro.cc... In file included from ADictUX dictionary payload:6:. ./B.h:5:18: error: base class has incomplete type. class B : public A {. ~~~~~~~^. ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:592,performance,error,error,592,"Bundling base class and derived class in same dictionary can lead to failure in recursive parsing.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. Using the example provide in the original [report](https://root-forum.cern.ch/t/linking-problems-with-shared-library-backward-backward-warning-h) : [linker_example.zip](https://github.com/root-project/root/files/11763343/linker_example.zip). Doing:. ```. make. root.exe -b -l -q macro.cc. ```. leads to:. ```. Loading A.sl. Processing macro.cc... In file included from ADictUX dictionary payload:6:. ./B.h:5:18: error: base class has incomplete type. class B : public A {. ~~~~~~~^. ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:816,performance,error,error,816,"Bundling base class and derived class in same dictionary can lead to failure in recursive parsing.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. Using the example provide in the original [report](https://root-forum.cern.ch/t/linking-problems-with-shared-library-backward-backward-warning-h) : [linker_example.zip](https://github.com/root-project/root/files/11763343/linker_example.zip). Doing:. ```. make. root.exe -b -l -q macro.cc. ```. leads to:. ```. Loading A.sl. Processing macro.cc... In file included from ADictUX dictionary payload:6:. ./B.h:5:18: error: base class has incomplete type. class B : public A {. ~~~~~~~^. ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:899,performance,Error,Error,899,"Bundling base class and derived class in same dictionary can lead to failure in recursive parsing.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. Using the example provide in the original [report](https://root-forum.cern.ch/t/linking-problems-with-shared-library-backward-backward-warning-h) : [linker_example.zip](https://github.com/root-project/root/files/11763343/linker_example.zip). Doing:. ```. make. root.exe -b -l -q macro.cc. ```. leads to:. ```. Loading A.sl. Processing macro.cc... In file included from ADictUX dictionary payload:6:. ./B.h:5:18: error: base class has incomplete type. class B : public A {. ~~~~~~~^. ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:935,performance,Error,Error,935,"Bundling base class and derived class in same dictionary can lead to failure in recursive parsing.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. Using the example provide in the original [report](https://root-forum.cern.ch/t/linking-problems-with-shared-library-backward-backward-warning-h) : [linker_example.zip](https://github.com/root-project/root/files/11763343/linker_example.zip). Doing:. ```. make. root.exe -b -l -q macro.cc. ```. leads to:. ```. Loading A.sl. Processing macro.cc... In file included from ADictUX dictionary payload:6:. ./B.h:5:18: error: base class has incomplete type. class B : public A {. ~~~~~~~^. ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:979,performance,content,content,979,"Bundling base class and derived class in same dictionary can lead to failure in recursive parsing.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. Using the example provide in the original [report](https://root-forum.cern.ch/t/linking-problems-with-shared-library-backward-backward-warning-h) : [linker_example.zip](https://github.com/root-project/root/files/11763343/linker_example.zip). Doing:. ```. make. root.exe -b -l -q macro.cc. ```. leads to:. ```. Loading A.sl. Processing macro.cc... In file included from ADictUX dictionary payload:6:. ./B.h:5:18: error: base class has incomplete type. class B : public A {. ~~~~~~~^. ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:1153,performance,Error,Error,1153,". ### Describe the bug. Using the example provide in the original [report](https://root-forum.cern.ch/t/linking-problems-with-shared-library-backward-backward-warning-h) : [linker_example.zip](https://github.com/root-project/root/files/11763343/linker_example.zip). Doing:. ```. make. root.exe -b -l -q macro.cc. ```. leads to:. ```. Loading A.sl. Processing macro.cc... In file included from ADictUX dictionary payload:6:. ./B.h:5:18: error: base class has incomplete type. class B : public A {. ~~~~~~~^. ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/rootcling_impl.cxx. index f56ce23b7a..7cd24d2c63 100644. --- a/core/dictgen/src/rootcling_impl.cxx. +++ b/core/dictgen/src/rootcling_impl.cxx. @@ -4971,7 +4971",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:1189,performance,Error,Error,1189,"ample provide in the original [report](https://root-forum.cern.ch/t/linking-problems-with-shared-library-backward-backward-warning-h) : [linker_example.zip](https://github.com/root-project/root/files/11763343/linker_example.zip). Doing:. ```. make. root.exe -b -l -q macro.cc. ```. leads to:. ```. Loading A.sl. Processing macro.cc... In file included from ADictUX dictionary payload:6:. ./B.h:5:18: error: base class has incomplete type. class B : public A {. ~~~~~~~^. ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/rootcling_impl.cxx. index f56ce23b7a..7cd24d2c63 100644. --- a/core/dictgen/src/rootcling_impl.cxx. +++ b/core/dictgen/src/rootcling_impl.cxx. @@ -4971,7 +4971,7 @@ int RootClingMain(int argc,. i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:1233,performance,content,content,1233,"//root-forum.cern.ch/t/linking-problems-with-shared-library-backward-backward-warning-h) : [linker_example.zip](https://github.com/root-project/root/files/11763343/linker_example.zip). Doing:. ```. make. root.exe -b -l -q macro.cc. ```. leads to:. ```. Loading A.sl. Processing macro.cc... In file included from ADictUX dictionary payload:6:. ./B.h:5:18: error: base class has incomplete type. class B : public A {. ~~~~~~~^. ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/rootcling_impl.cxx. index f56ce23b7a..7cd24d2c63 100644. --- a/core/dictgen/src/rootcling_impl.cxx. +++ b/core/dictgen/src/rootcling_impl.cxx. @@ -4971,7 +4971,7 @@ int RootClingMain(int argc,. if (!gOptCxxModule) {. headersClassesMapString",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:1477,performance,Load,Loading,1477,"o:. ```. Loading A.sl. Processing macro.cc... In file included from ADictUX dictionary payload:6:. ./B.h:5:18: error: base class has incomplete type. class B : public A {. ~~~~~~~^. ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/rootcling_impl.cxx. index f56ce23b7a..7cd24d2c63 100644. --- a/core/dictgen/src/rootcling_impl.cxx. +++ b/core/dictgen/src/rootcling_impl.cxx. @@ -4971,7 +4971,7 @@ int RootClingMain(int argc,. if (!gOptCxxModule) {. headersClassesMapString = GenerateStringFromHeadersForClasses(headersDeclsMap,. detectedUmbrella,. - true);. + false);. if (!gDriverConfig->fBuildingROOTStage1) {. if (!gOptWriteEmptyRootPCM). fwdDeclsString = GenerateFwdDeclString(scan, interp);. ```. This introduce",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:5294,performance,Multiplex,MultiplexInterpreterCallbacks,5294,"ting the c++ module should also in principle):. ```. diff Makefile.orig Makefile. 25c25. < rootcint -f ${DICT} -c ${DICTHDRS}. ---. > rootcint -rml=A -f ${DICT} -c ${DICTHDRS}. ```. Full stack trace at the starting point of the failing recursive parsing:. ```. #0 TCling::AutoParse (this=0x4c1820, cls=0x7fffffff5670 ""A"") at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:6449. #1 0x00007fffea9724aa in TCling__AutoParseCallback (className=0x7fffffff5670 ""A"") at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:628. #2 0x00007fffeab15723 in TClingCallbacks::tryAutoParseInternal (this=0x953710, Name=..., R=..., S=0x6a4ee0, FE=0x0) at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TClingCallbacks.cxx:661. #3 0x00007fffeab14661 in TClingCallbacks::LookupObject (this=0x953710, R=..., S=0x6a4ee0) at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TClingCallbacks.cxx:392. #4 0x00007fffeac100fc in cling::MultiplexInterpreterCallbacks::LookupObject (this=0x4d2120, LR=..., S=0x6a4ee0) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:62. #5 0x00007fffeac2259e in cling::InterpreterExternalSemaSource::LookupUnqualified (this=0x72d080, R=..., S=0x6a4ee0) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:269. #6 0x00007fffebc660b9 in clang::MultiplexExternalSemaSource::LookupUnqualified (this=0x72d0b0, R=..., S=0x6a4ee0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Sema/MultiplexExternalSemaSource.cpp:241. #7 0x00007fffec47ee6c in clang::Sema::LookupName (this=0x5250d0, R=..., S=0x6a4ee0, AllowBuiltinCreation=false) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2026. #8 0x00007fffebe7a672 in clang::Sema::HandleDeclarator (this=0x5250d0, S=0x6a4ee0, D=..., TemplateParamLists=...) at /local2/pcanal/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:5454,performance,Multiplex,MultiplexInterpreterCallbacks,5454," -c ${DICTHDRS}. ```. Full stack trace at the starting point of the failing recursive parsing:. ```. #0 TCling::AutoParse (this=0x4c1820, cls=0x7fffffff5670 ""A"") at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:6449. #1 0x00007fffea9724aa in TCling__AutoParseCallback (className=0x7fffffff5670 ""A"") at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:628. #2 0x00007fffeab15723 in TClingCallbacks::tryAutoParseInternal (this=0x953710, Name=..., R=..., S=0x6a4ee0, FE=0x0) at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TClingCallbacks.cxx:661. #3 0x00007fffeab14661 in TClingCallbacks::LookupObject (this=0x953710, R=..., S=0x6a4ee0) at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TClingCallbacks.cxx:392. #4 0x00007fffeac100fc in cling::MultiplexInterpreterCallbacks::LookupObject (this=0x4d2120, LR=..., S=0x6a4ee0) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:62. #5 0x00007fffeac2259e in cling::InterpreterExternalSemaSource::LookupUnqualified (this=0x72d080, R=..., S=0x6a4ee0) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:269. #6 0x00007fffebc660b9 in clang::MultiplexExternalSemaSource::LookupUnqualified (this=0x72d0b0, R=..., S=0x6a4ee0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Sema/MultiplexExternalSemaSource.cpp:241. #7 0x00007fffec47ee6c in clang::Sema::LookupName (this=0x5250d0, R=..., S=0x6a4ee0, AllowBuiltinCreation=false) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2026. #8 0x00007fffebe7a672 in clang::Sema::HandleDeclarator (this=0x5250d0, S=0x6a4ee0, D=..., TemplateParamLists=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:5895. #9 0x00007fffebf8e2c8 in clang::Sema::ActOnCXXMemberDeclarator (this=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:5748,performance,Multiplex,MultiplexExternalSemaSource,5748,"k (className=0x7fffffff5670 ""A"") at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:628. #2 0x00007fffeab15723 in TClingCallbacks::tryAutoParseInternal (this=0x953710, Name=..., R=..., S=0x6a4ee0, FE=0x0) at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TClingCallbacks.cxx:661. #3 0x00007fffeab14661 in TClingCallbacks::LookupObject (this=0x953710, R=..., S=0x6a4ee0) at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TClingCallbacks.cxx:392. #4 0x00007fffeac100fc in cling::MultiplexInterpreterCallbacks::LookupObject (this=0x4d2120, LR=..., S=0x6a4ee0) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:62. #5 0x00007fffeac2259e in cling::InterpreterExternalSemaSource::LookupUnqualified (this=0x72d080, R=..., S=0x6a4ee0) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:269. #6 0x00007fffebc660b9 in clang::MultiplexExternalSemaSource::LookupUnqualified (this=0x72d0b0, R=..., S=0x6a4ee0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Sema/MultiplexExternalSemaSource.cpp:241. #7 0x00007fffec47ee6c in clang::Sema::LookupName (this=0x5250d0, R=..., S=0x6a4ee0, AllowBuiltinCreation=false) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2026. #8 0x00007fffebe7a672 in clang::Sema::HandleDeclarator (this=0x5250d0, S=0x6a4ee0, D=..., TemplateParamLists=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:5895. #9 0x00007fffebf8e2c8 in clang::Sema::ActOnCXXMemberDeclarator (this=0x5250d0, S=0x6a4ee0, AS=clang::AS_public, D=..., TemplateParameterLists=..., BW=0x0, VS=..., InitStyle=clang::ICIS_NoInit). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Sema/SemaDeclCXX.cpp:3430. #10 0x00007fffeba4151e in clang::Parser::ParseCXXInlineMetho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:5919,performance,Multiplex,MultiplexExternalSemaSource,5919,"ernal (this=0x953710, Name=..., R=..., S=0x6a4ee0, FE=0x0) at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TClingCallbacks.cxx:661. #3 0x00007fffeab14661 in TClingCallbacks::LookupObject (this=0x953710, R=..., S=0x6a4ee0) at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TClingCallbacks.cxx:392. #4 0x00007fffeac100fc in cling::MultiplexInterpreterCallbacks::LookupObject (this=0x4d2120, LR=..., S=0x6a4ee0) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:62. #5 0x00007fffeac2259e in cling::InterpreterExternalSemaSource::LookupUnqualified (this=0x72d080, R=..., S=0x6a4ee0) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:269. #6 0x00007fffebc660b9 in clang::MultiplexExternalSemaSource::LookupUnqualified (this=0x72d0b0, R=..., S=0x6a4ee0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Sema/MultiplexExternalSemaSource.cpp:241. #7 0x00007fffec47ee6c in clang::Sema::LookupName (this=0x5250d0, R=..., S=0x6a4ee0, AllowBuiltinCreation=false) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2026. #8 0x00007fffebe7a672 in clang::Sema::HandleDeclarator (this=0x5250d0, S=0x6a4ee0, D=..., TemplateParamLists=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:5895. #9 0x00007fffebf8e2c8 in clang::Sema::ActOnCXXMemberDeclarator (this=0x5250d0, S=0x6a4ee0, AS=clang::AS_public, D=..., TemplateParameterLists=..., BW=0x0, VS=..., InitStyle=clang::ICIS_NoInit). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Sema/SemaDeclCXX.cpp:3430. #10 0x00007fffeba4151e in clang::Parser::ParseCXXInlineMethodDef (this=0x6a8f70, AS=clang::AS_public, AccessAttrs=..., D=..., TemplateInfo=..., VS=..., PureSpecLoc=...). at /local2/pcanal/cint_working/rootcling/root/interpreter/llv",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:10088,performance,load,loadHeader,10088,".., DS=0x0) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:984. #19 0x00007fffeba38af9 in clang::Parser::ParseTopLevelDecl (this=0x6a8f70, Result=..., IsFirstDecl=false) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:729. #20 0x00007fffead8c986 in cling::IncrementalParser::ParseInternal (this=0x4c5c20, input=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:930. #21 0x00007fffead8c401 in cling::IncrementalParser::Compile (this=0x4c5c20, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:840. #22 0x00007fffeac0cb09 in cling::Interpreter::DeclareInternal (this=0x4c22e0, input=..., CO=..., T=0x7fffffffa030) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1357. #23 0x00007fffeac0d647 in cling::Interpreter::loadHeader (this=0x4c22e0, filename=..., T=0x7fffffffa030) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1495. #24 0x00007fffeac0dc30 in cling::Interpreter::loadFile (this=0x4c22e0, filename=..., allowSharedLib=true, T=0x7fffffffa030) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1589. #25 0x00007fffeaea2dc4 in cling::MetaSema::actOnLCommand (this=0x532780, file=..., transaction=0x7fffffffa030) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79. #26 0x00007fffeaea3377 in cling::MetaSema::actOnxCommand (this=0x532780, file=..., args=..., result=0x7fffffffa810) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:146. #27 0x00007fffeaeb4ac7 in cling::MetaParser::isXCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_wor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:10295,performance,load,loadFile,10295,"FirstDecl=false) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:729. #20 0x00007fffead8c986 in cling::IncrementalParser::ParseInternal (this=0x4c5c20, input=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:930. #21 0x00007fffead8c401 in cling::IncrementalParser::Compile (this=0x4c5c20, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:840. #22 0x00007fffeac0cb09 in cling::Interpreter::DeclareInternal (this=0x4c22e0, input=..., CO=..., T=0x7fffffffa030) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1357. #23 0x00007fffeac0d647 in cling::Interpreter::loadHeader (this=0x4c22e0, filename=..., T=0x7fffffffa030) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1495. #24 0x00007fffeac0dc30 in cling::Interpreter::loadFile (this=0x4c22e0, filename=..., allowSharedLib=true, T=0x7fffffffa030) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1589. #25 0x00007fffeaea2dc4 in cling::MetaSema::actOnLCommand (this=0x532780, file=..., transaction=0x7fffffffa030) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79. #26 0x00007fffeaea3377 in cling::MetaSema::actOnxCommand (this=0x532780, file=..., args=..., result=0x7fffffffa810) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:146. #27 0x00007fffeaeb4ac7 in cling::MetaParser::isXCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315. #28 0x00007fffeaeb3b27 in cling::MetaParser::isCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Suc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:12462,performance,error,error,12462,"cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:146. #27 0x00007fffeaeb4ac7 in cling::MetaParser::isXCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315. #28 0x00007fffeaeb3b27 in cling::MetaParser::isCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:119. #29 0x00007fffeaeb39af in cling::MetaParser::isMetaCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:96. #30 0x00007fffeae9d2dc in cling::MetaProcessor::process (this=0x95c1b0, input_line=..., compRes=@0x7fffffffa80c: cling::Interpreter::kSuccess, result=0x7fffffffa810, disableValuePrinting=false). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317. #31 0x00007fffea97c5cd in HandleInterpreterException (metaProcessor=0x95c1b0, input_line=0xccf520 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", compRes=@0x7fffffffa80c: cling::Interpreter::kSuccess, result=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:2434. #32 0x00007fffea97cff6 in TCling::ProcessLine (this=0x4c1820, line=0x141f860 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", error=0x7fffffffd888). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:2578. #33 0x00007fffea9808ab in TCling::ProcessLineSynch (this=0x4c1820, line=0x141f860 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", error=0x7fffffffd888). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:3524. ``` .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:12709,performance,error,error,12709,"cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:146. #27 0x00007fffeaeb4ac7 in cling::MetaParser::isXCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315. #28 0x00007fffeaeb3b27 in cling::MetaParser::isCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:119. #29 0x00007fffeaeb39af in cling::MetaParser::isMetaCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:96. #30 0x00007fffeae9d2dc in cling::MetaProcessor::process (this=0x95c1b0, input_line=..., compRes=@0x7fffffffa80c: cling::Interpreter::kSuccess, result=0x7fffffffa810, disableValuePrinting=false). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317. #31 0x00007fffea97c5cd in HandleInterpreterException (metaProcessor=0x95c1b0, input_line=0xccf520 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", compRes=@0x7fffffffa80c: cling::Interpreter::kSuccess, result=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:2434. #32 0x00007fffea97cff6 in TCling::ProcessLine (this=0x4c1820, line=0x141f860 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", error=0x7fffffffd888). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:2578. #33 0x00007fffea9808ab in TCling::ProcessLineSynch (this=0x4c1820, line=0x141f860 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", error=0x7fffffffd888). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:3524. ``` .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:69,reliability,fail,failure,69,"Bundling base class and derived class in same dictionary can lead to failure in recursive parsing.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. Using the example provide in the original [report](https://root-forum.cern.ch/t/linking-problems-with-shared-library-backward-backward-warning-h) : [linker_example.zip](https://github.com/root-project/root/files/11763343/linker_example.zip). Doing:. ```. make. root.exe -b -l -q macro.cc. ```. leads to:. ```. Loading A.sl. Processing macro.cc... In file included from ADictUX dictionary payload:6:. ./B.h:5:18: error: base class has incomplete type. class B : public A {. ~~~~~~~^. ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:3011,reliability,pra,practice,3011,". index f56ce23b7a..7cd24d2c63 100644. --- a/core/dictgen/src/rootcling_impl.cxx. +++ b/core/dictgen/src/rootcling_impl.cxx. @@ -4971,7 +4971,7 @@ int RootClingMain(int argc,. if (!gOptCxxModule) {. headersClassesMapString = GenerateStringFromHeadersForClasses(headersDeclsMap,. detectedUmbrella,. - true);. + false);. if (!gDriverConfig->fBuildingROOTStage1) {. if (!gOptWriteEmptyRootPCM). fwdDeclsString = GenerateFwdDeclString(scan, interp);. ```. This introduces the following diff in the generated dictionary:. ```. rootsrv1:2023-dict pcanal$ diff -C2 dict.cxx dict.good.2.cxx . *** dict.cxx 2023-06-15 15:55:39.818476668 -0500. --- dict.good.2.cxx 2023-06-15 14:54:48.505264642 -0500. ***************. *** 187,192 ****. )DICTPAYLOAD"";. static const char* classesHeaders[] = {. ! ""A"", payloadCode, ""@"",. ! ""B"", payloadCode, ""@"",. nullptr. };. --- 187,192 ----. )DICTPAYLOAD"";. static const char* classesHeaders[] = {. ! ""A"", ""A.h"", ""@"",. ! ""B"", ""B.h"", ""@"",. nullptr. };. ```. and indeed in practice the order of operation are as follow: (macro.cc contains a `#include ""A.h""`):. * Process the `A.h` and then start declaring class `A`:. * While declaring `A`, process the constructor (of anything involving `A` itself in `A` declaration and call ` TCling::AutoParse`. * ` TCling::AutoParse` recognizes `A` for the dictionary's `classesHeaders`. * ` TCling::AutoParse` proceeed to ask for the `payloadCode` to be processed/included (with the 'patch / fix / reversal' this is replaced by `A.h`), this `payloadCode` consist of:. ```. #include ""A.h"". #include ""B.h"". ```. * Thanks to the code guard `A.h` is skipped (well anyway it is actually being processed by the outer code !!). * `B.h` is being included is reached:. ```. class B : public A. ```. which correctly complains that `A` is not yet fully declared .... The commit log corresponding to the change is explicitly referring to this change:. ```. Associate to autoParse entries only the payload ([ROOT-6321](https://sft.its.cern.ch/jira/bro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:4537,reliability,fail,failing,4537,"f:. ```. #include ""A.h"". #include ""B.h"". ```. * Thanks to the code guard `A.h` is skipped (well anyway it is actually being processed by the outer code !!). * `B.h` is being included is reached:. ```. class B : public A. ```. which correctly complains that `A` is not yet fully declared .... The commit log corresponding to the change is explicitly referring to this change:. ```. Associate to autoParse entries only the payload ([ROOT-6321](https://sft.its.cern.ch/jira/browse/ROOT-6321)). . de facto implementing lazy payload parsing instead of header. parsing on demand. ```. **It is not clear why ` TCling::AutoParse` is called with a symbol that is ""__being__"" declared.**. A work around (why we don't usually see this issue) is to generate a rootmap file (generating the c++ module should also in principle):. ```. diff Makefile.orig Makefile. 25c25. < rootcint -f ${DICT} -c ${DICTHDRS}. ---. > rootcint -rml=A -f ${DICT} -c ${DICTHDRS}. ```. Full stack trace at the starting point of the failing recursive parsing:. ```. #0 TCling::AutoParse (this=0x4c1820, cls=0x7fffffff5670 ""A"") at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:6449. #1 0x00007fffea9724aa in TCling__AutoParseCallback (className=0x7fffffff5670 ""A"") at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:628. #2 0x00007fffeab15723 in TClingCallbacks::tryAutoParseInternal (this=0x953710, Name=..., R=..., S=0x6a4ee0, FE=0x0) at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TClingCallbacks.cxx:661. #3 0x00007fffeab14661 in TClingCallbacks::LookupObject (this=0x953710, R=..., S=0x6a4ee0) at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TClingCallbacks.cxx:392. #4 0x00007fffeac100fc in cling::MultiplexInterpreterCallbacks::LookupObject (this=0x4d2120, LR=..., S=0x6a4ee0) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:62. #5 0x00007fffeac2259e in cling::InterpreterExternal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:592,safety,error,error,592,"Bundling base class and derived class in same dictionary can lead to failure in recursive parsing.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. Using the example provide in the original [report](https://root-forum.cern.ch/t/linking-problems-with-shared-library-backward-backward-warning-h) : [linker_example.zip](https://github.com/root-project/root/files/11763343/linker_example.zip). Doing:. ```. make. root.exe -b -l -q macro.cc. ```. leads to:. ```. Loading A.sl. Processing macro.cc... In file included from ADictUX dictionary payload:6:. ./B.h:5:18: error: base class has incomplete type. class B : public A {. ~~~~~~~^. ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:705,safety,compl,complete,705,"Bundling base class and derived class in same dictionary can lead to failure in recursive parsing.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. Using the example provide in the original [report](https://root-forum.cern.ch/t/linking-problems-with-shared-library-backward-backward-warning-h) : [linker_example.zip](https://github.com/root-project/root/files/11763343/linker_example.zip). Doing:. ```. make. root.exe -b -l -q macro.cc. ```. leads to:. ```. Loading A.sl. Processing macro.cc... In file included from ADictUX dictionary payload:6:. ./B.h:5:18: error: base class has incomplete type. class B : public A {. ~~~~~~~^. ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:816,safety,error,error,816,"Bundling base class and derived class in same dictionary can lead to failure in recursive parsing.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. Using the example provide in the original [report](https://root-forum.cern.ch/t/linking-problems-with-shared-library-backward-backward-warning-h) : [linker_example.zip](https://github.com/root-project/root/files/11763343/linker_example.zip). Doing:. ```. make. root.exe -b -l -q macro.cc. ```. leads to:. ```. Loading A.sl. Processing macro.cc... In file included from ADictUX dictionary payload:6:. ./B.h:5:18: error: base class has incomplete type. class B : public A {. ~~~~~~~^. ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:899,safety,Error,Error,899,"Bundling base class and derived class in same dictionary can lead to failure in recursive parsing.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. Using the example provide in the original [report](https://root-forum.cern.ch/t/linking-problems-with-shared-library-backward-backward-warning-h) : [linker_example.zip](https://github.com/root-project/root/files/11763343/linker_example.zip). Doing:. ```. make. root.exe -b -l -q macro.cc. ```. leads to:. ```. Loading A.sl. Processing macro.cc... In file included from ADictUX dictionary payload:6:. ./B.h:5:18: error: base class has incomplete type. class B : public A {. ~~~~~~~^. ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:935,safety,Error,Error,935,"Bundling base class and derived class in same dictionary can lead to failure in recursive parsing.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. Using the example provide in the original [report](https://root-forum.cern.ch/t/linking-problems-with-shared-library-backward-backward-warning-h) : [linker_example.zip](https://github.com/root-project/root/files/11763343/linker_example.zip). Doing:. ```. make. root.exe -b -l -q macro.cc. ```. leads to:. ```. Loading A.sl. Processing macro.cc... In file included from ADictUX dictionary payload:6:. ./B.h:5:18: error: base class has incomplete type. class B : public A {. ~~~~~~~^. ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:1153,safety,Error,Error,1153,". ### Describe the bug. Using the example provide in the original [report](https://root-forum.cern.ch/t/linking-problems-with-shared-library-backward-backward-warning-h) : [linker_example.zip](https://github.com/root-project/root/files/11763343/linker_example.zip). Doing:. ```. make. root.exe -b -l -q macro.cc. ```. leads to:. ```. Loading A.sl. Processing macro.cc... In file included from ADictUX dictionary payload:6:. ./B.h:5:18: error: base class has incomplete type. class B : public A {. ~~~~~~~^. ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/rootcling_impl.cxx. index f56ce23b7a..7cd24d2c63 100644. --- a/core/dictgen/src/rootcling_impl.cxx. +++ b/core/dictgen/src/rootcling_impl.cxx. @@ -4971,7 +4971",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:1189,safety,Error,Error,1189,"ample provide in the original [report](https://root-forum.cern.ch/t/linking-problems-with-shared-library-backward-backward-warning-h) : [linker_example.zip](https://github.com/root-project/root/files/11763343/linker_example.zip). Doing:. ```. make. root.exe -b -l -q macro.cc. ```. leads to:. ```. Loading A.sl. Processing macro.cc... In file included from ADictUX dictionary payload:6:. ./B.h:5:18: error: base class has incomplete type. class B : public A {. ~~~~~~~^. ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/rootcling_impl.cxx. index f56ce23b7a..7cd24d2c63 100644. --- a/core/dictgen/src/rootcling_impl.cxx. +++ b/core/dictgen/src/rootcling_impl.cxx. @@ -4971,7 +4971,7 @@ int RootClingMain(int argc,. i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:1533,safety,test,test,1533,"included from ADictUX dictionary payload:6:. ./B.h:5:18: error: base class has incomplete type. class B : public A {. ~~~~~~~^. ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/rootcling_impl.cxx. index f56ce23b7a..7cd24d2c63 100644. --- a/core/dictgen/src/rootcling_impl.cxx. +++ b/core/dictgen/src/rootcling_impl.cxx. @@ -4971,7 +4971,7 @@ int RootClingMain(int argc,. if (!gOptCxxModule) {. headersClassesMapString = GenerateStringFromHeadersForClasses(headersDeclsMap,. detectedUmbrella,. - true);. + false);. if (!gDriverConfig->fBuildingROOTStage1) {. if (!gOptWriteEmptyRootPCM). fwdDeclsString = GenerateFwdDeclString(scan, interp);. ```. This introduces the following diff in the generated dictionary:. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:1560,safety,test,test,1560,"onary payload:6:. ./B.h:5:18: error: base class has incomplete type. class B : public A {. ~~~~~~~^. ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/rootcling_impl.cxx. index f56ce23b7a..7cd24d2c63 100644. --- a/core/dictgen/src/rootcling_impl.cxx. +++ b/core/dictgen/src/rootcling_impl.cxx. @@ -4971,7 +4971,7 @@ int RootClingMain(int argc,. if (!gOptCxxModule) {. headersClassesMapString = GenerateStringFromHeadersForClasses(headersDeclsMap,. detectedUmbrella,. - true);. + false);. if (!gDriverConfig->fBuildingROOTStage1) {. if (!gOptWriteEmptyRootPCM). fwdDeclsString = GenerateFwdDeclString(scan, interp);. ```. This introduces the following diff in the generated dictionary:. ```. rootsrv1:2023-dict pcanal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:2294,safety,detect,detectedUmbrella,2294,"KWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/rootcling_impl.cxx. index f56ce23b7a..7cd24d2c63 100644. --- a/core/dictgen/src/rootcling_impl.cxx. +++ b/core/dictgen/src/rootcling_impl.cxx. @@ -4971,7 +4971,7 @@ int RootClingMain(int argc,. if (!gOptCxxModule) {. headersClassesMapString = GenerateStringFromHeadersForClasses(headersDeclsMap,. detectedUmbrella,. - true);. + false);. if (!gDriverConfig->fBuildingROOTStage1) {. if (!gOptWriteEmptyRootPCM). fwdDeclsString = GenerateFwdDeclString(scan, interp);. ```. This introduces the following diff in the generated dictionary:. ```. rootsrv1:2023-dict pcanal$ diff -C2 dict.cxx dict.good.2.cxx . *** dict.cxx 2023-06-15 15:55:39.818476668 -0500. --- dict.good.2.cxx 2023-06-15 14:54:48.505264642 -0500. ***************. *** 187,192 ****. )DICTPAYLOAD"";. static const char* classesHeaders[] = {. ! ""A"", payloadCode, ""@"",. ! ""B"", payloadCode, ""@"",. nullptr. };. --- 187,192 ----. )DICTPAYLOAD"";. static const char* classesHeaders[] = {. ! ""A"", ""A.h"", ""@"",. ! ""B"", ""B.h"", ""@"",. nullptr. };. ```. and indeed in practice the order of operation are as follow: (macro.cc contains a `#include ""A.h""`):. * Process the `A.h` and then start declaring class `A`:. * While declaring `A`, process the constructor (of anything involving `A` itself in `A` declaration and call ` TCling::AutoParse`. * ` TCling::Aut",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:3461,safety,patch,patch,3461,"`. This introduces the following diff in the generated dictionary:. ```. rootsrv1:2023-dict pcanal$ diff -C2 dict.cxx dict.good.2.cxx . *** dict.cxx 2023-06-15 15:55:39.818476668 -0500. --- dict.good.2.cxx 2023-06-15 14:54:48.505264642 -0500. ***************. *** 187,192 ****. )DICTPAYLOAD"";. static const char* classesHeaders[] = {. ! ""A"", payloadCode, ""@"",. ! ""B"", payloadCode, ""@"",. nullptr. };. --- 187,192 ----. )DICTPAYLOAD"";. static const char* classesHeaders[] = {. ! ""A"", ""A.h"", ""@"",. ! ""B"", ""B.h"", ""@"",. nullptr. };. ```. and indeed in practice the order of operation are as follow: (macro.cc contains a `#include ""A.h""`):. * Process the `A.h` and then start declaring class `A`:. * While declaring `A`, process the constructor (of anything involving `A` itself in `A` declaration and call ` TCling::AutoParse`. * ` TCling::AutoParse` recognizes `A` for the dictionary's `classesHeaders`. * ` TCling::AutoParse` proceeed to ask for the `payloadCode` to be processed/included (with the 'patch / fix / reversal' this is replaced by `A.h`), this `payloadCode` consist of:. ```. #include ""A.h"". #include ""B.h"". ```. * Thanks to the code guard `A.h` is skipped (well anyway it is actually being processed by the outer code !!). * `B.h` is being included is reached:. ```. class B : public A. ```. which correctly complains that `A` is not yet fully declared .... The commit log corresponding to the change is explicitly referring to this change:. ```. Associate to autoParse entries only the payload ([ROOT-6321](https://sft.its.cern.ch/jira/browse/ROOT-6321)). . de facto implementing lazy payload parsing instead of header. parsing on demand. ```. **It is not clear why ` TCling::AutoParse` is called with a symbol that is ""__being__"" declared.**. A work around (why we don't usually see this issue) is to generate a rootmap file (generating the c++ module should also in principle):. ```. diff Makefile.orig Makefile. 25c25. < rootcint -f ${DICT} -c ${DICTHDRS}. ---. > rootcint -rml=A -f ${",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:3783,safety,compl,complains,3783,"ers[] = {. ! ""A"", payloadCode, ""@"",. ! ""B"", payloadCode, ""@"",. nullptr. };. --- 187,192 ----. )DICTPAYLOAD"";. static const char* classesHeaders[] = {. ! ""A"", ""A.h"", ""@"",. ! ""B"", ""B.h"", ""@"",. nullptr. };. ```. and indeed in practice the order of operation are as follow: (macro.cc contains a `#include ""A.h""`):. * Process the `A.h` and then start declaring class `A`:. * While declaring `A`, process the constructor (of anything involving `A` itself in `A` declaration and call ` TCling::AutoParse`. * ` TCling::AutoParse` recognizes `A` for the dictionary's `classesHeaders`. * ` TCling::AutoParse` proceeed to ask for the `payloadCode` to be processed/included (with the 'patch / fix / reversal' this is replaced by `A.h`), this `payloadCode` consist of:. ```. #include ""A.h"". #include ""B.h"". ```. * Thanks to the code guard `A.h` is skipped (well anyway it is actually being processed by the outer code !!). * `B.h` is being included is reached:. ```. class B : public A. ```. which correctly complains that `A` is not yet fully declared .... The commit log corresponding to the change is explicitly referring to this change:. ```. Associate to autoParse entries only the payload ([ROOT-6321](https://sft.its.cern.ch/jira/browse/ROOT-6321)). . de facto implementing lazy payload parsing instead of header. parsing on demand. ```. **It is not clear why ` TCling::AutoParse` is called with a symbol that is ""__being__"" declared.**. A work around (why we don't usually see this issue) is to generate a rootmap file (generating the c++ module should also in principle):. ```. diff Makefile.orig Makefile. 25c25. < rootcint -f ${DICT} -c ${DICTHDRS}. ---. > rootcint -rml=A -f ${DICT} -c ${DICTHDRS}. ```. Full stack trace at the starting point of the failing recursive parsing:. ```. #0 TCling::AutoParse (this=0x4c1820, cls=0x7fffffff5670 ""A"") at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:6449. #1 0x00007fffea9724aa in TCling__AutoParseCallback (className=0x7fffffff567",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:3844,safety,log,log,3844,"@"",. nullptr. };. --- 187,192 ----. )DICTPAYLOAD"";. static const char* classesHeaders[] = {. ! ""A"", ""A.h"", ""@"",. ! ""B"", ""B.h"", ""@"",. nullptr. };. ```. and indeed in practice the order of operation are as follow: (macro.cc contains a `#include ""A.h""`):. * Process the `A.h` and then start declaring class `A`:. * While declaring `A`, process the constructor (of anything involving `A` itself in `A` declaration and call ` TCling::AutoParse`. * ` TCling::AutoParse` recognizes `A` for the dictionary's `classesHeaders`. * ` TCling::AutoParse` proceeed to ask for the `payloadCode` to be processed/included (with the 'patch / fix / reversal' this is replaced by `A.h`), this `payloadCode` consist of:. ```. #include ""A.h"". #include ""B.h"". ```. * Thanks to the code guard `A.h` is skipped (well anyway it is actually being processed by the outer code !!). * `B.h` is being included is reached:. ```. class B : public A. ```. which correctly complains that `A` is not yet fully declared .... The commit log corresponding to the change is explicitly referring to this change:. ```. Associate to autoParse entries only the payload ([ROOT-6321](https://sft.its.cern.ch/jira/browse/ROOT-6321)). . de facto implementing lazy payload parsing instead of header. parsing on demand. ```. **It is not clear why ` TCling::AutoParse` is called with a symbol that is ""__being__"" declared.**. A work around (why we don't usually see this issue) is to generate a rootmap file (generating the c++ module should also in principle):. ```. diff Makefile.orig Makefile. 25c25. < rootcint -f ${DICT} -c ${DICTHDRS}. ---. > rootcint -rml=A -f ${DICT} -c ${DICTHDRS}. ```. Full stack trace at the starting point of the failing recursive parsing:. ```. #0 TCling::AutoParse (this=0x4c1820, cls=0x7fffffff5670 ""A"") at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:6449. #1 0x00007fffea9724aa in TCling__AutoParseCallback (className=0x7fffffff5670 ""A"") at /local2/pcanal/cint_working/rootcling/root/core/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:4322,safety,modul,module,4322,"for the dictionary's `classesHeaders`. * ` TCling::AutoParse` proceeed to ask for the `payloadCode` to be processed/included (with the 'patch / fix / reversal' this is replaced by `A.h`), this `payloadCode` consist of:. ```. #include ""A.h"". #include ""B.h"". ```. * Thanks to the code guard `A.h` is skipped (well anyway it is actually being processed by the outer code !!). * `B.h` is being included is reached:. ```. class B : public A. ```. which correctly complains that `A` is not yet fully declared .... The commit log corresponding to the change is explicitly referring to this change:. ```. Associate to autoParse entries only the payload ([ROOT-6321](https://sft.its.cern.ch/jira/browse/ROOT-6321)). . de facto implementing lazy payload parsing instead of header. parsing on demand. ```. **It is not clear why ` TCling::AutoParse` is called with a symbol that is ""__being__"" declared.**. A work around (why we don't usually see this issue) is to generate a rootmap file (generating the c++ module should also in principle):. ```. diff Makefile.orig Makefile. 25c25. < rootcint -f ${DICT} -c ${DICTHDRS}. ---. > rootcint -rml=A -f ${DICT} -c ${DICTHDRS}. ```. Full stack trace at the starting point of the failing recursive parsing:. ```. #0 TCling::AutoParse (this=0x4c1820, cls=0x7fffffff5670 ""A"") at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:6449. #1 0x00007fffea9724aa in TCling__AutoParseCallback (className=0x7fffffff5670 ""A"") at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:628. #2 0x00007fffeab15723 in TClingCallbacks::tryAutoParseInternal (this=0x953710, Name=..., R=..., S=0x6a4ee0, FE=0x0) at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TClingCallbacks.cxx:661. #3 0x00007fffeab14661 in TClingCallbacks::LookupObject (this=0x953710, R=..., S=0x6a4ee0) at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TClingCallbacks.cxx:392. #4 0x00007fffeac100fc in cling::MultiplexInterpreterCallbacks::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:9503,safety,input,input,9503,"b/Parse/ParseDecl.cpp:3988. #16 0x00007fffeba39e8c in clang::Parser::ParseDeclOrFunctionDefInternal (this=0x6a8f70, attrs=..., DS=..., AS=clang::AS_none) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1054. #17 0x00007fffeba3a512 in clang::Parser::ParseDeclarationOrFunctionDefinition (this=0x6a8f70, attrs=..., DS=0x0, AS=clang::AS_none) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1162. #18 0x00007fffeba39a20 in clang::Parser::ParseExternalDeclaration (this=0x6a8f70, attrs=..., DS=0x0) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:984. #19 0x00007fffeba38af9 in clang::Parser::ParseTopLevelDecl (this=0x6a8f70, Result=..., IsFirstDecl=false) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:729. #20 0x00007fffead8c986 in cling::IncrementalParser::ParseInternal (this=0x4c5c20, input=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:930. #21 0x00007fffead8c401 in cling::IncrementalParser::Compile (this=0x4c5c20, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:840. #22 0x00007fffeac0cb09 in cling::Interpreter::DeclareInternal (this=0x4c22e0, input=..., CO=..., T=0x7fffffffa030) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1357. #23 0x00007fffeac0d647 in cling::Interpreter::loadHeader (this=0x4c22e0, filename=..., T=0x7fffffffa030) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1495. #24 0x00007fffeac0dc30 in cling::Interpreter::loadFile (this=0x4c22e0, filename=..., allowSharedLib=true, T=0x7fffffffa030) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1589. #25 0x00007fffeaea2dc4 in cling",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:9697,safety,input,input,9697,"/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1054. #17 0x00007fffeba3a512 in clang::Parser::ParseDeclarationOrFunctionDefinition (this=0x6a8f70, attrs=..., DS=0x0, AS=clang::AS_none) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1162. #18 0x00007fffeba39a20 in clang::Parser::ParseExternalDeclaration (this=0x6a8f70, attrs=..., DS=0x0) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:984. #19 0x00007fffeba38af9 in clang::Parser::ParseTopLevelDecl (this=0x6a8f70, Result=..., IsFirstDecl=false) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:729. #20 0x00007fffead8c986 in cling::IncrementalParser::ParseInternal (this=0x4c5c20, input=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:930. #21 0x00007fffead8c401 in cling::IncrementalParser::Compile (this=0x4c5c20, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:840. #22 0x00007fffeac0cb09 in cling::Interpreter::DeclareInternal (this=0x4c22e0, input=..., CO=..., T=0x7fffffffa030) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1357. #23 0x00007fffeac0d647 in cling::Interpreter::loadHeader (this=0x4c22e0, filename=..., T=0x7fffffffa030) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1495. #24 0x00007fffeac0dc30 in cling::Interpreter::loadFile (this=0x4c22e0, filename=..., allowSharedLib=true, T=0x7fffffffa030) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1589. #25 0x00007fffeaea2dc4 in cling::MetaSema::actOnLCommand (this=0x532780, file=..., transaction=0x7fffffffa030) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79. #26 0x00007fffe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:9903,safety,input,input,9903,"l2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1162. #18 0x00007fffeba39a20 in clang::Parser::ParseExternalDeclaration (this=0x6a8f70, attrs=..., DS=0x0) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:984. #19 0x00007fffeba38af9 in clang::Parser::ParseTopLevelDecl (this=0x6a8f70, Result=..., IsFirstDecl=false) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:729. #20 0x00007fffead8c986 in cling::IncrementalParser::ParseInternal (this=0x4c5c20, input=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:930. #21 0x00007fffead8c401 in cling::IncrementalParser::Compile (this=0x4c5c20, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:840. #22 0x00007fffeac0cb09 in cling::Interpreter::DeclareInternal (this=0x4c22e0, input=..., CO=..., T=0x7fffffffa030) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1357. #23 0x00007fffeac0d647 in cling::Interpreter::loadHeader (this=0x4c22e0, filename=..., T=0x7fffffffa030) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1495. #24 0x00007fffeac0dc30 in cling::Interpreter::loadFile (this=0x4c22e0, filename=..., allowSharedLib=true, T=0x7fffffffa030) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1589. #25 0x00007fffeaea2dc4 in cling::MetaSema::actOnLCommand (this=0x532780, file=..., transaction=0x7fffffffa030) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79. #26 0x00007fffeaea3377 in cling::MetaSema::actOnxCommand (this=0x532780, file=..., args=..., result=0x7fffffffa810) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:146. #27 0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:12136,safety,test,test,12136,"cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:146. #27 0x00007fffeaeb4ac7 in cling::MetaParser::isXCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315. #28 0x00007fffeaeb3b27 in cling::MetaParser::isCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:119. #29 0x00007fffeaeb39af in cling::MetaParser::isMetaCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:96. #30 0x00007fffeae9d2dc in cling::MetaProcessor::process (this=0x95c1b0, input_line=..., compRes=@0x7fffffffa80c: cling::Interpreter::kSuccess, result=0x7fffffffa810, disableValuePrinting=false). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317. #31 0x00007fffea97c5cd in HandleInterpreterException (metaProcessor=0x95c1b0, input_line=0xccf520 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", compRes=@0x7fffffffa80c: cling::Interpreter::kSuccess, result=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:2434. #32 0x00007fffea97cff6 in TCling::ProcessLine (this=0x4c1820, line=0x141f860 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", error=0x7fffffffd888). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:2578. #33 0x00007fffea9808ab in TCling::ProcessLineSynch (this=0x4c1820, line=0x141f860 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", error=0x7fffffffd888). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:3524. ``` .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:12434,safety,test,test,12434,"cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:146. #27 0x00007fffeaeb4ac7 in cling::MetaParser::isXCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315. #28 0x00007fffeaeb3b27 in cling::MetaParser::isCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:119. #29 0x00007fffeaeb39af in cling::MetaParser::isMetaCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:96. #30 0x00007fffeae9d2dc in cling::MetaProcessor::process (this=0x95c1b0, input_line=..., compRes=@0x7fffffffa80c: cling::Interpreter::kSuccess, result=0x7fffffffa810, disableValuePrinting=false). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317. #31 0x00007fffea97c5cd in HandleInterpreterException (metaProcessor=0x95c1b0, input_line=0xccf520 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", compRes=@0x7fffffffa80c: cling::Interpreter::kSuccess, result=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:2434. #32 0x00007fffea97cff6 in TCling::ProcessLine (this=0x4c1820, line=0x141f860 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", error=0x7fffffffd888). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:2578. #33 0x00007fffea9808ab in TCling::ProcessLineSynch (this=0x4c1820, line=0x141f860 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", error=0x7fffffffd888). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:3524. ``` .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:12462,safety,error,error,12462,"cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:146. #27 0x00007fffeaeb4ac7 in cling::MetaParser::isXCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315. #28 0x00007fffeaeb3b27 in cling::MetaParser::isCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:119. #29 0x00007fffeaeb39af in cling::MetaParser::isMetaCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:96. #30 0x00007fffeae9d2dc in cling::MetaProcessor::process (this=0x95c1b0, input_line=..., compRes=@0x7fffffffa80c: cling::Interpreter::kSuccess, result=0x7fffffffa810, disableValuePrinting=false). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317. #31 0x00007fffea97c5cd in HandleInterpreterException (metaProcessor=0x95c1b0, input_line=0xccf520 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", compRes=@0x7fffffffa80c: cling::Interpreter::kSuccess, result=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:2434. #32 0x00007fffea97cff6 in TCling::ProcessLine (this=0x4c1820, line=0x141f860 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", error=0x7fffffffd888). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:2578. #33 0x00007fffea9808ab in TCling::ProcessLineSynch (this=0x4c1820, line=0x141f860 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", error=0x7fffffffd888). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:3524. ``` .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:12681,safety,test,test,12681,"cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:146. #27 0x00007fffeaeb4ac7 in cling::MetaParser::isXCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315. #28 0x00007fffeaeb3b27 in cling::MetaParser::isCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:119. #29 0x00007fffeaeb39af in cling::MetaParser::isMetaCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:96. #30 0x00007fffeae9d2dc in cling::MetaProcessor::process (this=0x95c1b0, input_line=..., compRes=@0x7fffffffa80c: cling::Interpreter::kSuccess, result=0x7fffffffa810, disableValuePrinting=false). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317. #31 0x00007fffea97c5cd in HandleInterpreterException (metaProcessor=0x95c1b0, input_line=0xccf520 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", compRes=@0x7fffffffa80c: cling::Interpreter::kSuccess, result=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:2434. #32 0x00007fffea97cff6 in TCling::ProcessLine (this=0x4c1820, line=0x141f860 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", error=0x7fffffffd888). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:2578. #33 0x00007fffea9808ab in TCling::ProcessLineSynch (this=0x4c1820, line=0x141f860 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", error=0x7fffffffd888). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:3524. ``` .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:12709,safety,error,error,12709,"cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:146. #27 0x00007fffeaeb4ac7 in cling::MetaParser::isXCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315. #28 0x00007fffeaeb3b27 in cling::MetaParser::isCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:119. #29 0x00007fffeaeb39af in cling::MetaParser::isMetaCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:96. #30 0x00007fffeae9d2dc in cling::MetaProcessor::process (this=0x95c1b0, input_line=..., compRes=@0x7fffffffa80c: cling::Interpreter::kSuccess, result=0x7fffffffa810, disableValuePrinting=false). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317. #31 0x00007fffea97c5cd in HandleInterpreterException (metaProcessor=0x95c1b0, input_line=0xccf520 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", compRes=@0x7fffffffa80c: cling::Interpreter::kSuccess, result=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:2434. #32 0x00007fffea97cff6 in TCling::ProcessLine (this=0x4c1820, line=0x141f860 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", error=0x7fffffffd888). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:2578. #33 0x00007fffea9808ab in TCling::ProcessLineSynch (this=0x4c1820, line=0x141f860 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", error=0x7fffffffd888). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:3524. ``` .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:705,security,compl,complete,705,"Bundling base class and derived class in same dictionary can lead to failure in recursive parsing.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. Using the example provide in the original [report](https://root-forum.cern.ch/t/linking-problems-with-shared-library-backward-backward-warning-h) : [linker_example.zip](https://github.com/root-project/root/files/11763343/linker_example.zip). Doing:. ```. make. root.exe -b -l -q macro.cc. ```. leads to:. ```. Loading A.sl. Processing macro.cc... In file included from ADictUX dictionary payload:6:. ./B.h:5:18: error: base class has incomplete type. class B : public A {. ~~~~~~~^. ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:2294,security,detect,detectedUmbrella,2294,"KWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/rootcling_impl.cxx. index f56ce23b7a..7cd24d2c63 100644. --- a/core/dictgen/src/rootcling_impl.cxx. +++ b/core/dictgen/src/rootcling_impl.cxx. @@ -4971,7 +4971,7 @@ int RootClingMain(int argc,. if (!gOptCxxModule) {. headersClassesMapString = GenerateStringFromHeadersForClasses(headersDeclsMap,. detectedUmbrella,. - true);. + false);. if (!gDriverConfig->fBuildingROOTStage1) {. if (!gOptWriteEmptyRootPCM). fwdDeclsString = GenerateFwdDeclString(scan, interp);. ```. This introduces the following diff in the generated dictionary:. ```. rootsrv1:2023-dict pcanal$ diff -C2 dict.cxx dict.good.2.cxx . *** dict.cxx 2023-06-15 15:55:39.818476668 -0500. --- dict.good.2.cxx 2023-06-15 14:54:48.505264642 -0500. ***************. *** 187,192 ****. )DICTPAYLOAD"";. static const char* classesHeaders[] = {. ! ""A"", payloadCode, ""@"",. ! ""B"", payloadCode, ""@"",. nullptr. };. --- 187,192 ----. )DICTPAYLOAD"";. static const char* classesHeaders[] = {. ! ""A"", ""A.h"", ""@"",. ! ""B"", ""B.h"", ""@"",. nullptr. };. ```. and indeed in practice the order of operation are as follow: (macro.cc contains a `#include ""A.h""`):. * Process the `A.h` and then start declaring class `A`:. * While declaring `A`, process the constructor (of anything involving `A` itself in `A` declaration and call ` TCling::AutoParse`. * ` TCling::Aut",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:3461,security,patch,patch,3461,"`. This introduces the following diff in the generated dictionary:. ```. rootsrv1:2023-dict pcanal$ diff -C2 dict.cxx dict.good.2.cxx . *** dict.cxx 2023-06-15 15:55:39.818476668 -0500. --- dict.good.2.cxx 2023-06-15 14:54:48.505264642 -0500. ***************. *** 187,192 ****. )DICTPAYLOAD"";. static const char* classesHeaders[] = {. ! ""A"", payloadCode, ""@"",. ! ""B"", payloadCode, ""@"",. nullptr. };. --- 187,192 ----. )DICTPAYLOAD"";. static const char* classesHeaders[] = {. ! ""A"", ""A.h"", ""@"",. ! ""B"", ""B.h"", ""@"",. nullptr. };. ```. and indeed in practice the order of operation are as follow: (macro.cc contains a `#include ""A.h""`):. * Process the `A.h` and then start declaring class `A`:. * While declaring `A`, process the constructor (of anything involving `A` itself in `A` declaration and call ` TCling::AutoParse`. * ` TCling::AutoParse` recognizes `A` for the dictionary's `classesHeaders`. * ` TCling::AutoParse` proceeed to ask for the `payloadCode` to be processed/included (with the 'patch / fix / reversal' this is replaced by `A.h`), this `payloadCode` consist of:. ```. #include ""A.h"". #include ""B.h"". ```. * Thanks to the code guard `A.h` is skipped (well anyway it is actually being processed by the outer code !!). * `B.h` is being included is reached:. ```. class B : public A. ```. which correctly complains that `A` is not yet fully declared .... The commit log corresponding to the change is explicitly referring to this change:. ```. Associate to autoParse entries only the payload ([ROOT-6321](https://sft.its.cern.ch/jira/browse/ROOT-6321)). . de facto implementing lazy payload parsing instead of header. parsing on demand. ```. **It is not clear why ` TCling::AutoParse` is called with a symbol that is ""__being__"" declared.**. A work around (why we don't usually see this issue) is to generate a rootmap file (generating the c++ module should also in principle):. ```. diff Makefile.orig Makefile. 25c25. < rootcint -f ${DICT} -c ${DICTHDRS}. ---. > rootcint -rml=A -f ${",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:3783,security,compl,complains,3783,"ers[] = {. ! ""A"", payloadCode, ""@"",. ! ""B"", payloadCode, ""@"",. nullptr. };. --- 187,192 ----. )DICTPAYLOAD"";. static const char* classesHeaders[] = {. ! ""A"", ""A.h"", ""@"",. ! ""B"", ""B.h"", ""@"",. nullptr. };. ```. and indeed in practice the order of operation are as follow: (macro.cc contains a `#include ""A.h""`):. * Process the `A.h` and then start declaring class `A`:. * While declaring `A`, process the constructor (of anything involving `A` itself in `A` declaration and call ` TCling::AutoParse`. * ` TCling::AutoParse` recognizes `A` for the dictionary's `classesHeaders`. * ` TCling::AutoParse` proceeed to ask for the `payloadCode` to be processed/included (with the 'patch / fix / reversal' this is replaced by `A.h`), this `payloadCode` consist of:. ```. #include ""A.h"". #include ""B.h"". ```. * Thanks to the code guard `A.h` is skipped (well anyway it is actually being processed by the outer code !!). * `B.h` is being included is reached:. ```. class B : public A. ```. which correctly complains that `A` is not yet fully declared .... The commit log corresponding to the change is explicitly referring to this change:. ```. Associate to autoParse entries only the payload ([ROOT-6321](https://sft.its.cern.ch/jira/browse/ROOT-6321)). . de facto implementing lazy payload parsing instead of header. parsing on demand. ```. **It is not clear why ` TCling::AutoParse` is called with a symbol that is ""__being__"" declared.**. A work around (why we don't usually see this issue) is to generate a rootmap file (generating the c++ module should also in principle):. ```. diff Makefile.orig Makefile. 25c25. < rootcint -f ${DICT} -c ${DICTHDRS}. ---. > rootcint -rml=A -f ${DICT} -c ${DICTHDRS}. ```. Full stack trace at the starting point of the failing recursive parsing:. ```. #0 TCling::AutoParse (this=0x4c1820, cls=0x7fffffff5670 ""A"") at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:6449. #1 0x00007fffea9724aa in TCling__AutoParseCallback (className=0x7fffffff567",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:3844,security,log,log,3844,"@"",. nullptr. };. --- 187,192 ----. )DICTPAYLOAD"";. static const char* classesHeaders[] = {. ! ""A"", ""A.h"", ""@"",. ! ""B"", ""B.h"", ""@"",. nullptr. };. ```. and indeed in practice the order of operation are as follow: (macro.cc contains a `#include ""A.h""`):. * Process the `A.h` and then start declaring class `A`:. * While declaring `A`, process the constructor (of anything involving `A` itself in `A` declaration and call ` TCling::AutoParse`. * ` TCling::AutoParse` recognizes `A` for the dictionary's `classesHeaders`. * ` TCling::AutoParse` proceeed to ask for the `payloadCode` to be processed/included (with the 'patch / fix / reversal' this is replaced by `A.h`), this `payloadCode` consist of:. ```. #include ""A.h"". #include ""B.h"". ```. * Thanks to the code guard `A.h` is skipped (well anyway it is actually being processed by the outer code !!). * `B.h` is being included is reached:. ```. class B : public A. ```. which correctly complains that `A` is not yet fully declared .... The commit log corresponding to the change is explicitly referring to this change:. ```. Associate to autoParse entries only the payload ([ROOT-6321](https://sft.its.cern.ch/jira/browse/ROOT-6321)). . de facto implementing lazy payload parsing instead of header. parsing on demand. ```. **It is not clear why ` TCling::AutoParse` is called with a symbol that is ""__being__"" declared.**. A work around (why we don't usually see this issue) is to generate a rootmap file (generating the c++ module should also in principle):. ```. diff Makefile.orig Makefile. 25c25. < rootcint -f ${DICT} -c ${DICTHDRS}. ---. > rootcint -rml=A -f ${DICT} -c ${DICTHDRS}. ```. Full stack trace at the starting point of the failing recursive parsing:. ```. #0 TCling::AutoParse (this=0x4c1820, cls=0x7fffffff5670 ""A"") at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:6449. #1 0x00007fffea9724aa in TCling__AutoParseCallback (className=0x7fffffff5670 ""A"") at /local2/pcanal/cint_working/rootcling/root/core/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:6804,security,Access,AccessAttrs,6804," R=..., S=0x6a4ee0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Sema/MultiplexExternalSemaSource.cpp:241. #7 0x00007fffec47ee6c in clang::Sema::LookupName (this=0x5250d0, R=..., S=0x6a4ee0, AllowBuiltinCreation=false) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2026. #8 0x00007fffebe7a672 in clang::Sema::HandleDeclarator (this=0x5250d0, S=0x6a4ee0, D=..., TemplateParamLists=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:5895. #9 0x00007fffebf8e2c8 in clang::Sema::ActOnCXXMemberDeclarator (this=0x5250d0, S=0x6a4ee0, AS=clang::AS_public, D=..., TemplateParameterLists=..., BW=0x0, VS=..., InitStyle=clang::ICIS_NoInit). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Sema/SemaDeclCXX.cpp:3430. #10 0x00007fffeba4151e in clang::Parser::ParseCXXInlineMethodDef (this=0x6a8f70, AS=clang::AS_public, AccessAttrs=..., D=..., TemplateInfo=..., VS=..., PureSpecLoc=...). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseCXXInlineMethods.cpp:42. #11 0x00007fffeb986810 in clang::Parser::ParseCXXClassMemberDeclaration (this=0x6a8f70, AS=clang::AS_public, AccessAttrs=..., TemplateInfo=..., TemplateDiags=0x0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:2858. #12 0x00007fffeb9885f5 in clang::Parser::ParseCXXClassMemberDeclarationWithPragmas (this=0x6a8f70, AS=@0x7fffffff7ac8: clang::AS_public, AccessAttrs=..., TagType=clang::TST_class, TagDecl=0x1407fc0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:3284. #13 0x00007fffeb989306 in clang::Parser::ParseCXXMemberSpecification (this=0x6a8f70, RecordLoc=..., AttrFixitLoc=..., Attrs=..., TagType=25, TagDecl=0x1407fc0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/too",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:7100,security,Access,AccessAttrs,7100,"ng/root/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2026. #8 0x00007fffebe7a672 in clang::Sema::HandleDeclarator (this=0x5250d0, S=0x6a4ee0, D=..., TemplateParamLists=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:5895. #9 0x00007fffebf8e2c8 in clang::Sema::ActOnCXXMemberDeclarator (this=0x5250d0, S=0x6a4ee0, AS=clang::AS_public, D=..., TemplateParameterLists=..., BW=0x0, VS=..., InitStyle=clang::ICIS_NoInit). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Sema/SemaDeclCXX.cpp:3430. #10 0x00007fffeba4151e in clang::Parser::ParseCXXInlineMethodDef (this=0x6a8f70, AS=clang::AS_public, AccessAttrs=..., D=..., TemplateInfo=..., VS=..., PureSpecLoc=...). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseCXXInlineMethods.cpp:42. #11 0x00007fffeb986810 in clang::Parser::ParseCXXClassMemberDeclaration (this=0x6a8f70, AS=clang::AS_public, AccessAttrs=..., TemplateInfo=..., TemplateDiags=0x0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:2858. #12 0x00007fffeb9885f5 in clang::Parser::ParseCXXClassMemberDeclarationWithPragmas (this=0x6a8f70, AS=@0x7fffffff7ac8: clang::AS_public, AccessAttrs=..., TagType=clang::TST_class, TagDecl=0x1407fc0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:3284. #13 0x00007fffeb989306 in clang::Parser::ParseCXXMemberSpecification (this=0x6a8f70, RecordLoc=..., AttrFixitLoc=..., Attrs=..., TagType=25, TagDecl=0x1407fc0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:3488. #14 0x00007fffeb983667 in clang::Parser::ParseClassSpecifier (this=0x6a8f70, TagTokKind=clang::tok::kw_class, StartLoc=..., DS=..., TemplateInfo=..., AS=clang::AS_none, EnteringContext=true,. DSC=clang::Parser::DeclSpecContext::DSC_top_level, Attributes=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:7404,security,Access,AccessAttrs,7404,"febf8e2c8 in clang::Sema::ActOnCXXMemberDeclarator (this=0x5250d0, S=0x6a4ee0, AS=clang::AS_public, D=..., TemplateParameterLists=..., BW=0x0, VS=..., InitStyle=clang::ICIS_NoInit). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Sema/SemaDeclCXX.cpp:3430. #10 0x00007fffeba4151e in clang::Parser::ParseCXXInlineMethodDef (this=0x6a8f70, AS=clang::AS_public, AccessAttrs=..., D=..., TemplateInfo=..., VS=..., PureSpecLoc=...). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseCXXInlineMethods.cpp:42. #11 0x00007fffeb986810 in clang::Parser::ParseCXXClassMemberDeclaration (this=0x6a8f70, AS=clang::AS_public, AccessAttrs=..., TemplateInfo=..., TemplateDiags=0x0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:2858. #12 0x00007fffeb9885f5 in clang::Parser::ParseCXXClassMemberDeclarationWithPragmas (this=0x6a8f70, AS=@0x7fffffff7ac8: clang::AS_public, AccessAttrs=..., TagType=clang::TST_class, TagDecl=0x1407fc0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:3284. #13 0x00007fffeb989306 in clang::Parser::ParseCXXMemberSpecification (this=0x6a8f70, RecordLoc=..., AttrFixitLoc=..., Attrs=..., TagType=25, TagDecl=0x1407fc0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:3488. #14 0x00007fffeb983667 in clang::Parser::ParseClassSpecifier (this=0x6a8f70, TagTokKind=clang::tok::kw_class, StartLoc=..., DS=..., TemplateInfo=..., AS=clang::AS_none, EnteringContext=true,. DSC=clang::Parser::DeclSpecContext::DSC_top_level, Attributes=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:2030. #15 0x00007fffeb95e5c7 in clang::Parser::ParseDeclarationSpecifiers (this=0x6a8f70, DS=..., TemplateInfo=..., AS=clang::AS_none, DSContext=clang::Parser::DeclSpecContext::DSC_top_level, L",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:1533,testability,test,test,1533,"included from ADictUX dictionary payload:6:. ./B.h:5:18: error: base class has incomplete type. class B : public A {. ~~~~~~~^. ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/rootcling_impl.cxx. index f56ce23b7a..7cd24d2c63 100644. --- a/core/dictgen/src/rootcling_impl.cxx. +++ b/core/dictgen/src/rootcling_impl.cxx. @@ -4971,7 +4971,7 @@ int RootClingMain(int argc,. if (!gOptCxxModule) {. headersClassesMapString = GenerateStringFromHeadersForClasses(headersDeclsMap,. detectedUmbrella,. - true);. + false);. if (!gDriverConfig->fBuildingROOTStage1) {. if (!gOptWriteEmptyRootPCM). fwdDeclsString = GenerateFwdDeclString(scan, interp);. ```. This introduces the following diff in the generated dictionary:. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:1560,testability,test,test,1560,"onary payload:6:. ./B.h:5:18: error: base class has incomplete type. class B : public A {. ~~~~~~~^. ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/rootcling_impl.cxx. index f56ce23b7a..7cd24d2c63 100644. --- a/core/dictgen/src/rootcling_impl.cxx. +++ b/core/dictgen/src/rootcling_impl.cxx. @@ -4971,7 +4971,7 @@ int RootClingMain(int argc,. if (!gOptCxxModule) {. headersClassesMapString = GenerateStringFromHeadersForClasses(headersDeclsMap,. detectedUmbrella,. - true);. + false);. if (!gDriverConfig->fBuildingROOTStage1) {. if (!gOptWriteEmptyRootPCM). fwdDeclsString = GenerateFwdDeclString(scan, interp);. ```. This introduces the following diff in the generated dictionary:. ```. rootsrv1:2023-dict pcanal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:1798,testability,context,context,1798,". ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/rootcling_impl.cxx. index f56ce23b7a..7cd24d2c63 100644. --- a/core/dictgen/src/rootcling_impl.cxx. +++ b/core/dictgen/src/rootcling_impl.cxx. @@ -4971,7 +4971,7 @@ int RootClingMain(int argc,. if (!gOptCxxModule) {. headersClassesMapString = GenerateStringFromHeadersForClasses(headersDeclsMap,. detectedUmbrella,. - true);. + false);. if (!gDriverConfig->fBuildingROOTStage1) {. if (!gOptWriteEmptyRootPCM). fwdDeclsString = GenerateFwdDeclString(scan, interp);. ```. This introduces the following diff in the generated dictionary:. ```. rootsrv1:2023-dict pcanal$ diff -C2 dict.cxx dict.good.2.cxx . *** dict.cxx 2023-06-15 15:55:39.818476668 -0500. --- dict.good.2.cxx 2023-06-15 14:54:48.505264642 -0500. ***************. *** 187,192 ****. )DICTPAYLOAD"";. static const char* classesHeaders[] = {. ! """,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:3844,testability,log,log,3844,"@"",. nullptr. };. --- 187,192 ----. )DICTPAYLOAD"";. static const char* classesHeaders[] = {. ! ""A"", ""A.h"", ""@"",. ! ""B"", ""B.h"", ""@"",. nullptr. };. ```. and indeed in practice the order of operation are as follow: (macro.cc contains a `#include ""A.h""`):. * Process the `A.h` and then start declaring class `A`:. * While declaring `A`, process the constructor (of anything involving `A` itself in `A` declaration and call ` TCling::AutoParse`. * ` TCling::AutoParse` recognizes `A` for the dictionary's `classesHeaders`. * ` TCling::AutoParse` proceeed to ask for the `payloadCode` to be processed/included (with the 'patch / fix / reversal' this is replaced by `A.h`), this `payloadCode` consist of:. ```. #include ""A.h"". #include ""B.h"". ```. * Thanks to the code guard `A.h` is skipped (well anyway it is actually being processed by the outer code !!). * `B.h` is being included is reached:. ```. class B : public A. ```. which correctly complains that `A` is not yet fully declared .... The commit log corresponding to the change is explicitly referring to this change:. ```. Associate to autoParse entries only the payload ([ROOT-6321](https://sft.its.cern.ch/jira/browse/ROOT-6321)). . de facto implementing lazy payload parsing instead of header. parsing on demand. ```. **It is not clear why ` TCling::AutoParse` is called with a symbol that is ""__being__"" declared.**. A work around (why we don't usually see this issue) is to generate a rootmap file (generating the c++ module should also in principle):. ```. diff Makefile.orig Makefile. 25c25. < rootcint -f ${DICT} -c ${DICTHDRS}. ---. > rootcint -rml=A -f ${DICT} -c ${DICTHDRS}. ```. Full stack trace at the starting point of the failing recursive parsing:. ```. #0 TCling::AutoParse (this=0x4c1820, cls=0x7fffffff5670 ""A"") at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:6449. #1 0x00007fffea9724aa in TCling__AutoParseCallback (className=0x7fffffff5670 ""A"") at /local2/pcanal/cint_working/rootcling/root/core/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:4502,testability,trace,trace,4502,"`A.h`), this `payloadCode` consist of:. ```. #include ""A.h"". #include ""B.h"". ```. * Thanks to the code guard `A.h` is skipped (well anyway it is actually being processed by the outer code !!). * `B.h` is being included is reached:. ```. class B : public A. ```. which correctly complains that `A` is not yet fully declared .... The commit log corresponding to the change is explicitly referring to this change:. ```. Associate to autoParse entries only the payload ([ROOT-6321](https://sft.its.cern.ch/jira/browse/ROOT-6321)). . de facto implementing lazy payload parsing instead of header. parsing on demand. ```. **It is not clear why ` TCling::AutoParse` is called with a symbol that is ""__being__"" declared.**. A work around (why we don't usually see this issue) is to generate a rootmap file (generating the c++ module should also in principle):. ```. diff Makefile.orig Makefile. 25c25. < rootcint -f ${DICT} -c ${DICTHDRS}. ---. > rootcint -rml=A -f ${DICT} -c ${DICTHDRS}. ```. Full stack trace at the starting point of the failing recursive parsing:. ```. #0 TCling::AutoParse (this=0x4c1820, cls=0x7fffffff5670 ""A"") at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:6449. #1 0x00007fffea9724aa in TCling__AutoParseCallback (className=0x7fffffff5670 ""A"") at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:628. #2 0x00007fffeab15723 in TClingCallbacks::tryAutoParseInternal (this=0x953710, Name=..., R=..., S=0x6a4ee0, FE=0x0) at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TClingCallbacks.cxx:661. #3 0x00007fffeab14661 in TClingCallbacks::LookupObject (this=0x953710, R=..., S=0x6a4ee0) at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TClingCallbacks.cxx:392. #4 0x00007fffeac100fc in cling::MultiplexInterpreterCallbacks::LookupObject (this=0x4d2120, LR=..., S=0x6a4ee0) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:62. #5 0x00007fffea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:12136,testability,test,test,12136,"cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:146. #27 0x00007fffeaeb4ac7 in cling::MetaParser::isXCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315. #28 0x00007fffeaeb3b27 in cling::MetaParser::isCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:119. #29 0x00007fffeaeb39af in cling::MetaParser::isMetaCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:96. #30 0x00007fffeae9d2dc in cling::MetaProcessor::process (this=0x95c1b0, input_line=..., compRes=@0x7fffffffa80c: cling::Interpreter::kSuccess, result=0x7fffffffa810, disableValuePrinting=false). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317. #31 0x00007fffea97c5cd in HandleInterpreterException (metaProcessor=0x95c1b0, input_line=0xccf520 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", compRes=@0x7fffffffa80c: cling::Interpreter::kSuccess, result=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:2434. #32 0x00007fffea97cff6 in TCling::ProcessLine (this=0x4c1820, line=0x141f860 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", error=0x7fffffffd888). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:2578. #33 0x00007fffea9808ab in TCling::ProcessLineSynch (this=0x4c1820, line=0x141f860 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", error=0x7fffffffd888). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:3524. ``` .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:12434,testability,test,test,12434,"cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:146. #27 0x00007fffeaeb4ac7 in cling::MetaParser::isXCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315. #28 0x00007fffeaeb3b27 in cling::MetaParser::isCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:119. #29 0x00007fffeaeb39af in cling::MetaParser::isMetaCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:96. #30 0x00007fffeae9d2dc in cling::MetaProcessor::process (this=0x95c1b0, input_line=..., compRes=@0x7fffffffa80c: cling::Interpreter::kSuccess, result=0x7fffffffa810, disableValuePrinting=false). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317. #31 0x00007fffea97c5cd in HandleInterpreterException (metaProcessor=0x95c1b0, input_line=0xccf520 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", compRes=@0x7fffffffa80c: cling::Interpreter::kSuccess, result=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:2434. #32 0x00007fffea97cff6 in TCling::ProcessLine (this=0x4c1820, line=0x141f860 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", error=0x7fffffffd888). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:2578. #33 0x00007fffea9808ab in TCling::ProcessLineSynch (this=0x4c1820, line=0x141f860 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", error=0x7fffffffd888). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:3524. ``` .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:12681,testability,test,test,12681,"cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:146. #27 0x00007fffeaeb4ac7 in cling::MetaParser::isXCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315. #28 0x00007fffeaeb3b27 in cling::MetaParser::isCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:119. #29 0x00007fffeaeb39af in cling::MetaParser::isMetaCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:96. #30 0x00007fffeae9d2dc in cling::MetaProcessor::process (this=0x95c1b0, input_line=..., compRes=@0x7fffffffa80c: cling::Interpreter::kSuccess, result=0x7fffffffa810, disableValuePrinting=false). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317. #31 0x00007fffea97c5cd in HandleInterpreterException (metaProcessor=0x95c1b0, input_line=0xccf520 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", compRes=@0x7fffffffa80c: cling::Interpreter::kSuccess, result=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:2434. #32 0x00007fffea97cff6 in TCling::ProcessLine (this=0x4c1820, line=0x141f860 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", error=0x7fffffffd888). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:2578. #33 0x00007fffea9808ab in TCling::ProcessLineSynch (this=0x4c1820, line=0x141f860 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", error=0x7fffffffd888). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:3524. ``` .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:592,usability,error,error,592,"Bundling base class and derived class in same dictionary can lead to failure in recursive parsing.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. Using the example provide in the original [report](https://root-forum.cern.ch/t/linking-problems-with-shared-library-backward-backward-warning-h) : [linker_example.zip](https://github.com/root-project/root/files/11763343/linker_example.zip). Doing:. ```. make. root.exe -b -l -q macro.cc. ```. leads to:. ```. Loading A.sl. Processing macro.cc... In file included from ADictUX dictionary payload:6:. ./B.h:5:18: error: base class has incomplete type. class B : public A {. ~~~~~~~^. ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:816,usability,error,error,816,"Bundling base class and derived class in same dictionary can lead to failure in recursive parsing.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. Using the example provide in the original [report](https://root-forum.cern.ch/t/linking-problems-with-shared-library-backward-backward-warning-h) : [linker_example.zip](https://github.com/root-project/root/files/11763343/linker_example.zip). Doing:. ```. make. root.exe -b -l -q macro.cc. ```. leads to:. ```. Loading A.sl. Processing macro.cc... In file included from ADictUX dictionary payload:6:. ./B.h:5:18: error: base class has incomplete type. class B : public A {. ~~~~~~~^. ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:899,usability,Error,Error,899,"Bundling base class and derived class in same dictionary can lead to failure in recursive parsing.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. Using the example provide in the original [report](https://root-forum.cern.ch/t/linking-problems-with-shared-library-backward-backward-warning-h) : [linker_example.zip](https://github.com/root-project/root/files/11763343/linker_example.zip). Doing:. ```. make. root.exe -b -l -q macro.cc. ```. leads to:. ```. Loading A.sl. Processing macro.cc... In file included from ADictUX dictionary payload:6:. ./B.h:5:18: error: base class has incomplete type. class B : public A {. ~~~~~~~^. ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:935,usability,Error,Error,935,"Bundling base class and derived class in same dictionary can lead to failure in recursive parsing.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. Using the example provide in the original [report](https://root-forum.cern.ch/t/linking-problems-with-shared-library-backward-backward-warning-h) : [linker_example.zip](https://github.com/root-project/root/files/11763343/linker_example.zip). Doing:. ```. make. root.exe -b -l -q macro.cc. ```. leads to:. ```. Loading A.sl. Processing macro.cc... In file included from ADictUX dictionary payload:6:. ./B.h:5:18: error: base class has incomplete type. class B : public A {. ~~~~~~~^. ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:1153,usability,Error,Error,1153,". ### Describe the bug. Using the example provide in the original [report](https://root-forum.cern.ch/t/linking-problems-with-shared-library-backward-backward-warning-h) : [linker_example.zip](https://github.com/root-project/root/files/11763343/linker_example.zip). Doing:. ```. make. root.exe -b -l -q macro.cc. ```. leads to:. ```. Loading A.sl. Processing macro.cc... In file included from ADictUX dictionary payload:6:. ./B.h:5:18: error: base class has incomplete type. class B : public A {. ~~~~~~~^. ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/rootcling_impl.cxx. index f56ce23b7a..7cd24d2c63 100644. --- a/core/dictgen/src/rootcling_impl.cxx. +++ b/core/dictgen/src/rootcling_impl.cxx. @@ -4971,7 +4971",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:1189,usability,Error,Error,1189,"ample provide in the original [report](https://root-forum.cern.ch/t/linking-problems-with-shared-library-backward-backward-warning-h) : [linker_example.zip](https://github.com/root-project/root/files/11763343/linker_example.zip). Doing:. ```. make. root.exe -b -l -q macro.cc. ```. leads to:. ```. Loading A.sl. Processing macro.cc... In file included from ADictUX dictionary payload:6:. ./B.h:5:18: error: base class has incomplete type. class B : public A {. ~~~~~~~^. ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/rootcling_impl.cxx. index f56ce23b7a..7cd24d2c63 100644. --- a/core/dictgen/src/rootcling_impl.cxx. +++ b/core/dictgen/src/rootcling_impl.cxx. @@ -4971,7 +4971,7 @@ int RootClingMain(int argc,. i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:1437,usability,behavi,behaviour,1437,"oot.exe -b -l -q macro.cc. ```. leads to:. ```. Loading A.sl. Processing macro.cc... In file included from ADictUX dictionary payload:6:. ./B.h:5:18: error: base class has incomplete type. class B : public A {. ~~~~~~~^. ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'. class A {. ^. In file included from ADictUX dictionary payload:6:. ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'. B(int arg) : A(arg) {}. ^. Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H. // Inline headers. #include ""A.h"". #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ```. ### What is the expected behaviour? The correct output is:. ```. Loading A.sl. Processing macro.cc... init A with arg=0. test A. init A with arg=0. test A. ```. ### How to reproduce? ```. unzip linker_example.zip. make. root.exe -b -q -q macro.cc. ```. ### ROOT version. Any v6 version. ### How did you install ROOT? any. ### Which operating system are you using? linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:. ```. diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/rootcling_impl.cxx. index f56ce23b7a..7cd24d2c63 100644. --- a/core/dictgen/src/rootcling_impl.cxx. +++ b/core/dictgen/src/rootcling_impl.cxx. @@ -4971,7 +4971,7 @@ int RootClingMain(int argc,. if (!gOptCxxModule) {. headersClassesMapString = GenerateStringFromHeadersForClasses(headersDeclsMap,. detectedUmbrella,. - true);. + false);. if (!gDriverConfig->fBuildingROOTStage1) {. if (!gOptWriteEmptyRootPCM). fwdDeclsString = GenerateFwdDeclStr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:3532,usability,consist,consist,3532," rootsrv1:2023-dict pcanal$ diff -C2 dict.cxx dict.good.2.cxx . *** dict.cxx 2023-06-15 15:55:39.818476668 -0500. --- dict.good.2.cxx 2023-06-15 14:54:48.505264642 -0500. ***************. *** 187,192 ****. )DICTPAYLOAD"";. static const char* classesHeaders[] = {. ! ""A"", payloadCode, ""@"",. ! ""B"", payloadCode, ""@"",. nullptr. };. --- 187,192 ----. )DICTPAYLOAD"";. static const char* classesHeaders[] = {. ! ""A"", ""A.h"", ""@"",. ! ""B"", ""B.h"", ""@"",. nullptr. };. ```. and indeed in practice the order of operation are as follow: (macro.cc contains a `#include ""A.h""`):. * Process the `A.h` and then start declaring class `A`:. * While declaring `A`, process the constructor (of anything involving `A` itself in `A` declaration and call ` TCling::AutoParse`. * ` TCling::AutoParse` recognizes `A` for the dictionary's `classesHeaders`. * ` TCling::AutoParse` proceeed to ask for the `payloadCode` to be processed/included (with the 'patch / fix / reversal' this is replaced by `A.h`), this `payloadCode` consist of:. ```. #include ""A.h"". #include ""B.h"". ```. * Thanks to the code guard `A.h` is skipped (well anyway it is actually being processed by the outer code !!). * `B.h` is being included is reached:. ```. class B : public A. ```. which correctly complains that `A` is not yet fully declared .... The commit log corresponding to the change is explicitly referring to this change:. ```. Associate to autoParse entries only the payload ([ROOT-6321](https://sft.its.cern.ch/jira/browse/ROOT-6321)). . de facto implementing lazy payload parsing instead of header. parsing on demand. ```. **It is not clear why ` TCling::AutoParse` is called with a symbol that is ""__being__"" declared.**. A work around (why we don't usually see this issue) is to generate a rootmap file (generating the c++ module should also in principle):. ```. diff Makefile.orig Makefile. 25c25. < rootcint -f ${DICT} -c ${DICTHDRS}. ---. > rootcint -rml=A -f ${DICT} -c ${DICTHDRS}. ```. Full stack trace at the starting point of the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:4132,usability,clear,clear,4132,"eclaring class `A`:. * While declaring `A`, process the constructor (of anything involving `A` itself in `A` declaration and call ` TCling::AutoParse`. * ` TCling::AutoParse` recognizes `A` for the dictionary's `classesHeaders`. * ` TCling::AutoParse` proceeed to ask for the `payloadCode` to be processed/included (with the 'patch / fix / reversal' this is replaced by `A.h`), this `payloadCode` consist of:. ```. #include ""A.h"". #include ""B.h"". ```. * Thanks to the code guard `A.h` is skipped (well anyway it is actually being processed by the outer code !!). * `B.h` is being included is reached:. ```. class B : public A. ```. which correctly complains that `A` is not yet fully declared .... The commit log corresponding to the change is explicitly referring to this change:. ```. Associate to autoParse entries only the payload ([ROOT-6321](https://sft.its.cern.ch/jira/browse/ROOT-6321)). . de facto implementing lazy payload parsing instead of header. parsing on demand. ```. **It is not clear why ` TCling::AutoParse` is called with a symbol that is ""__being__"" declared.**. A work around (why we don't usually see this issue) is to generate a rootmap file (generating the c++ module should also in principle):. ```. diff Makefile.orig Makefile. 25c25. < rootcint -f ${DICT} -c ${DICTHDRS}. ---. > rootcint -rml=A -f ${DICT} -c ${DICTHDRS}. ```. Full stack trace at the starting point of the failing recursive parsing:. ```. #0 TCling::AutoParse (this=0x4c1820, cls=0x7fffffff5670 ""A"") at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:6449. #1 0x00007fffea9724aa in TCling__AutoParseCallback (className=0x7fffffff5670 ""A"") at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:628. #2 0x00007fffeab15723 in TClingCallbacks::tryAutoParseInternal (this=0x953710, Name=..., R=..., S=0x6a4ee0, FE=0x0) at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TClingCallbacks.cxx:661. #3 0x00007fffeab14661 in TClingCallbacks::LookupObjec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:5898,usability,tool,tools,5898,"TClingCallbacks::tryAutoParseInternal (this=0x953710, Name=..., R=..., S=0x6a4ee0, FE=0x0) at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TClingCallbacks.cxx:661. #3 0x00007fffeab14661 in TClingCallbacks::LookupObject (this=0x953710, R=..., S=0x6a4ee0) at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TClingCallbacks.cxx:392. #4 0x00007fffeac100fc in cling::MultiplexInterpreterCallbacks::LookupObject (this=0x4d2120, LR=..., S=0x6a4ee0) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:62. #5 0x00007fffeac2259e in cling::InterpreterExternalSemaSource::LookupUnqualified (this=0x72d080, R=..., S=0x6a4ee0) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:269. #6 0x00007fffebc660b9 in clang::MultiplexExternalSemaSource::LookupUnqualified (this=0x72d0b0, R=..., S=0x6a4ee0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Sema/MultiplexExternalSemaSource.cpp:241. #7 0x00007fffec47ee6c in clang::Sema::LookupName (this=0x5250d0, R=..., S=0x6a4ee0, AllowBuiltinCreation=false) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2026. #8 0x00007fffebe7a672 in clang::Sema::HandleDeclarator (this=0x5250d0, S=0x6a4ee0, D=..., TemplateParamLists=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:5895. #9 0x00007fffebf8e2c8 in clang::Sema::ActOnCXXMemberDeclarator (this=0x5250d0, S=0x6a4ee0, AS=clang::AS_public, D=..., TemplateParameterLists=..., BW=0x0, VS=..., InitStyle=clang::ICIS_NoInit). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Sema/SemaDeclCXX.cpp:3430. #10 0x00007fffeba4151e in clang::Parser::ParseCXXInlineMethodDef (this=0x6a8f70, AS=clang::AS_public, AccessAttrs=..., D=..., TemplateInfo=..., VS=..., PureSpecLoc=...). at /local2/pcanal/cint_workin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:6135,usability,tool,tools,6135,"this=0x953710, R=..., S=0x6a4ee0) at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TClingCallbacks.cxx:392. #4 0x00007fffeac100fc in cling::MultiplexInterpreterCallbacks::LookupObject (this=0x4d2120, LR=..., S=0x6a4ee0) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:62. #5 0x00007fffeac2259e in cling::InterpreterExternalSemaSource::LookupUnqualified (this=0x72d080, R=..., S=0x6a4ee0) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:269. #6 0x00007fffebc660b9 in clang::MultiplexExternalSemaSource::LookupUnqualified (this=0x72d0b0, R=..., S=0x6a4ee0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Sema/MultiplexExternalSemaSource.cpp:241. #7 0x00007fffec47ee6c in clang::Sema::LookupName (this=0x5250d0, R=..., S=0x6a4ee0, AllowBuiltinCreation=false) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2026. #8 0x00007fffebe7a672 in clang::Sema::HandleDeclarator (this=0x5250d0, S=0x6a4ee0, D=..., TemplateParamLists=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:5895. #9 0x00007fffebf8e2c8 in clang::Sema::ActOnCXXMemberDeclarator (this=0x5250d0, S=0x6a4ee0, AS=clang::AS_public, D=..., TemplateParameterLists=..., BW=0x0, VS=..., InitStyle=clang::ICIS_NoInit). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Sema/SemaDeclCXX.cpp:3430. #10 0x00007fffeba4151e in clang::Parser::ParseCXXInlineMethodDef (this=0x6a8f70, AS=clang::AS_public, AccessAttrs=..., D=..., TemplateInfo=..., VS=..., PureSpecLoc=...). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseCXXInlineMethods.cpp:42. #11 0x00007fffeb986810 in clang::Parser::ParseCXXClassMemberDeclaration (this=0x6a8f70, AS=clang::AS_public, AccessAttrs=..., TemplateInfo=..., Tem",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:6358,usability,tool,tools,6358," S=0x6a4ee0) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:62. #5 0x00007fffeac2259e in cling::InterpreterExternalSemaSource::LookupUnqualified (this=0x72d080, R=..., S=0x6a4ee0) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:269. #6 0x00007fffebc660b9 in clang::MultiplexExternalSemaSource::LookupUnqualified (this=0x72d0b0, R=..., S=0x6a4ee0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Sema/MultiplexExternalSemaSource.cpp:241. #7 0x00007fffec47ee6c in clang::Sema::LookupName (this=0x5250d0, R=..., S=0x6a4ee0, AllowBuiltinCreation=false) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2026. #8 0x00007fffebe7a672 in clang::Sema::HandleDeclarator (this=0x5250d0, S=0x6a4ee0, D=..., TemplateParamLists=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:5895. #9 0x00007fffebf8e2c8 in clang::Sema::ActOnCXXMemberDeclarator (this=0x5250d0, S=0x6a4ee0, AS=clang::AS_public, D=..., TemplateParameterLists=..., BW=0x0, VS=..., InitStyle=clang::ICIS_NoInit). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Sema/SemaDeclCXX.cpp:3430. #10 0x00007fffeba4151e in clang::Parser::ParseCXXInlineMethodDef (this=0x6a8f70, AS=clang::AS_public, AccessAttrs=..., D=..., TemplateInfo=..., VS=..., PureSpecLoc=...). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseCXXInlineMethods.cpp:42. #11 0x00007fffeb986810 in clang::Parser::ParseCXXClassMemberDeclaration (this=0x6a8f70, AS=clang::AS_public, AccessAttrs=..., TemplateInfo=..., TemplateDiags=0x0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:2858. #12 0x00007fffeb9885f5 in clang::Parser::ParseCXXClassMemberDeclarationWithPragmas (this=0x6a8",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:6659,usability,tool,tools,6659,"r/cling/lib/Interpreter/InterpreterCallbacks.cpp:269. #6 0x00007fffebc660b9 in clang::MultiplexExternalSemaSource::LookupUnqualified (this=0x72d0b0, R=..., S=0x6a4ee0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Sema/MultiplexExternalSemaSource.cpp:241. #7 0x00007fffec47ee6c in clang::Sema::LookupName (this=0x5250d0, R=..., S=0x6a4ee0, AllowBuiltinCreation=false) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2026. #8 0x00007fffebe7a672 in clang::Sema::HandleDeclarator (this=0x5250d0, S=0x6a4ee0, D=..., TemplateParamLists=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:5895. #9 0x00007fffebf8e2c8 in clang::Sema::ActOnCXXMemberDeclarator (this=0x5250d0, S=0x6a4ee0, AS=clang::AS_public, D=..., TemplateParameterLists=..., BW=0x0, VS=..., InitStyle=clang::ICIS_NoInit). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Sema/SemaDeclCXX.cpp:3430. #10 0x00007fffeba4151e in clang::Parser::ParseCXXInlineMethodDef (this=0x6a8f70, AS=clang::AS_public, AccessAttrs=..., D=..., TemplateInfo=..., VS=..., PureSpecLoc=...). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseCXXInlineMethods.cpp:42. #11 0x00007fffeb986810 in clang::Parser::ParseCXXClassMemberDeclaration (this=0x6a8f70, AS=clang::AS_public, AccessAttrs=..., TemplateInfo=..., TemplateDiags=0x0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:2858. #12 0x00007fffeb9885f5 in clang::Parser::ParseCXXClassMemberDeclarationWithPragmas (this=0x6a8f70, AS=@0x7fffffff7ac8: clang::AS_public, AccessAttrs=..., TagType=clang::TST_class, TagDecl=0x1407fc0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:3284. #13 0x00007fffeb989306 in clang::Parser::ParseCXXMemberSpecification (this=0x6a8f70",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:6939,usability,tool,tools,6939,"urce.cpp:241. #7 0x00007fffec47ee6c in clang::Sema::LookupName (this=0x5250d0, R=..., S=0x6a4ee0, AllowBuiltinCreation=false) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2026. #8 0x00007fffebe7a672 in clang::Sema::HandleDeclarator (this=0x5250d0, S=0x6a4ee0, D=..., TemplateParamLists=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:5895. #9 0x00007fffebf8e2c8 in clang::Sema::ActOnCXXMemberDeclarator (this=0x5250d0, S=0x6a4ee0, AS=clang::AS_public, D=..., TemplateParameterLists=..., BW=0x0, VS=..., InitStyle=clang::ICIS_NoInit). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Sema/SemaDeclCXX.cpp:3430. #10 0x00007fffeba4151e in clang::Parser::ParseCXXInlineMethodDef (this=0x6a8f70, AS=clang::AS_public, AccessAttrs=..., D=..., TemplateInfo=..., VS=..., PureSpecLoc=...). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseCXXInlineMethods.cpp:42. #11 0x00007fffeb986810 in clang::Parser::ParseCXXClassMemberDeclaration (this=0x6a8f70, AS=clang::AS_public, AccessAttrs=..., TemplateInfo=..., TemplateDiags=0x0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:2858. #12 0x00007fffeb9885f5 in clang::Parser::ParseCXXClassMemberDeclarationWithPragmas (this=0x6a8f70, AS=@0x7fffffff7ac8: clang::AS_public, AccessAttrs=..., TagType=clang::TST_class, TagDecl=0x1407fc0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:3284. #13 0x00007fffeb989306 in clang::Parser::ParseCXXMemberSpecification (this=0x6a8f70, RecordLoc=..., AttrFixitLoc=..., Attrs=..., TagType=25, TagDecl=0x1407fc0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:3488. #14 0x00007fffeb983667 in clang::Parser::ParseClassSpecifier (this=0x6a8f70, TagTokKind=cl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:7222,usability,tool,tools,7222,"arator (this=0x5250d0, S=0x6a4ee0, D=..., TemplateParamLists=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:5895. #9 0x00007fffebf8e2c8 in clang::Sema::ActOnCXXMemberDeclarator (this=0x5250d0, S=0x6a4ee0, AS=clang::AS_public, D=..., TemplateParameterLists=..., BW=0x0, VS=..., InitStyle=clang::ICIS_NoInit). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Sema/SemaDeclCXX.cpp:3430. #10 0x00007fffeba4151e in clang::Parser::ParseCXXInlineMethodDef (this=0x6a8f70, AS=clang::AS_public, AccessAttrs=..., D=..., TemplateInfo=..., VS=..., PureSpecLoc=...). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseCXXInlineMethods.cpp:42. #11 0x00007fffeb986810 in clang::Parser::ParseCXXClassMemberDeclaration (this=0x6a8f70, AS=clang::AS_public, AccessAttrs=..., TemplateInfo=..., TemplateDiags=0x0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:2858. #12 0x00007fffeb9885f5 in clang::Parser::ParseCXXClassMemberDeclarationWithPragmas (this=0x6a8f70, AS=@0x7fffffff7ac8: clang::AS_public, AccessAttrs=..., TagType=clang::TST_class, TagDecl=0x1407fc0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:3284. #13 0x00007fffeb989306 in clang::Parser::ParseCXXMemberSpecification (this=0x6a8f70, RecordLoc=..., AttrFixitLoc=..., Attrs=..., TagType=25, TagDecl=0x1407fc0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:3488. #14 0x00007fffeb983667 in clang::Parser::ParseClassSpecifier (this=0x6a8f70, TagTokKind=clang::tok::kw_class, StartLoc=..., DS=..., TemplateInfo=..., AS=clang::AS_none, EnteringContext=true,. DSC=clang::Parser::DeclSpecContext::DSC_top_level, Attributes=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:2030. #1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:7534,usability,tool,tools,7534,"ts=..., BW=0x0, VS=..., InitStyle=clang::ICIS_NoInit). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Sema/SemaDeclCXX.cpp:3430. #10 0x00007fffeba4151e in clang::Parser::ParseCXXInlineMethodDef (this=0x6a8f70, AS=clang::AS_public, AccessAttrs=..., D=..., TemplateInfo=..., VS=..., PureSpecLoc=...). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseCXXInlineMethods.cpp:42. #11 0x00007fffeb986810 in clang::Parser::ParseCXXClassMemberDeclaration (this=0x6a8f70, AS=clang::AS_public, AccessAttrs=..., TemplateInfo=..., TemplateDiags=0x0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:2858. #12 0x00007fffeb9885f5 in clang::Parser::ParseCXXClassMemberDeclarationWithPragmas (this=0x6a8f70, AS=@0x7fffffff7ac8: clang::AS_public, AccessAttrs=..., TagType=clang::TST_class, TagDecl=0x1407fc0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:3284. #13 0x00007fffeb989306 in clang::Parser::ParseCXXMemberSpecification (this=0x6a8f70, RecordLoc=..., AttrFixitLoc=..., Attrs=..., TagType=25, TagDecl=0x1407fc0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:3488. #14 0x00007fffeb983667 in clang::Parser::ParseClassSpecifier (this=0x6a8f70, TagTokKind=clang::tok::kw_class, StartLoc=..., DS=..., TemplateInfo=..., AS=clang::AS_none, EnteringContext=true,. DSC=clang::Parser::DeclSpecContext::DSC_top_level, Attributes=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:2030. #15 0x00007fffeb95e5c7 in clang::Parser::ParseDeclarationSpecifiers (this=0x6a8f70, DS=..., TemplateInfo=..., AS=clang::AS_none, DSContext=clang::Parser::DeclSpecContext::DSC_top_level, LateAttrs=0x0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:3988. #16",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:7807,usability,tool,tools,7807,"Attrs=..., D=..., TemplateInfo=..., VS=..., PureSpecLoc=...). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseCXXInlineMethods.cpp:42. #11 0x00007fffeb986810 in clang::Parser::ParseCXXClassMemberDeclaration (this=0x6a8f70, AS=clang::AS_public, AccessAttrs=..., TemplateInfo=..., TemplateDiags=0x0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:2858. #12 0x00007fffeb9885f5 in clang::Parser::ParseCXXClassMemberDeclarationWithPragmas (this=0x6a8f70, AS=@0x7fffffff7ac8: clang::AS_public, AccessAttrs=..., TagType=clang::TST_class, TagDecl=0x1407fc0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:3284. #13 0x00007fffeb989306 in clang::Parser::ParseCXXMemberSpecification (this=0x6a8f70, RecordLoc=..., AttrFixitLoc=..., Attrs=..., TagType=25, TagDecl=0x1407fc0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:3488. #14 0x00007fffeb983667 in clang::Parser::ParseClassSpecifier (this=0x6a8f70, TagTokKind=clang::tok::kw_class, StartLoc=..., DS=..., TemplateInfo=..., AS=clang::AS_none, EnteringContext=true,. DSC=clang::Parser::DeclSpecContext::DSC_top_level, Attributes=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:2030. #15 0x00007fffeb95e5c7 in clang::Parser::ParseDeclarationSpecifiers (this=0x6a8f70, DS=..., TemplateInfo=..., AS=clang::AS_none, DSContext=clang::Parser::DeclSpecContext::DSC_top_level, LateAttrs=0x0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:3988. #16 0x00007fffeba39e8c in clang::Parser::ParseDeclOrFunctionDefInternal (this=0x6a8f70, attrs=..., DS=..., AS=clang::AS_none) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1054. #17 0x00007fffeba3a512 in clang::Parser::Par",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:8178,usability,tool,tools,8178,"king/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:2858. #12 0x00007fffeb9885f5 in clang::Parser::ParseCXXClassMemberDeclarationWithPragmas (this=0x6a8f70, AS=@0x7fffffff7ac8: clang::AS_public, AccessAttrs=..., TagType=clang::TST_class, TagDecl=0x1407fc0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:3284. #13 0x00007fffeb989306 in clang::Parser::ParseCXXMemberSpecification (this=0x6a8f70, RecordLoc=..., AttrFixitLoc=..., Attrs=..., TagType=25, TagDecl=0x1407fc0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:3488. #14 0x00007fffeb983667 in clang::Parser::ParseClassSpecifier (this=0x6a8f70, TagTokKind=clang::tok::kw_class, StartLoc=..., DS=..., TemplateInfo=..., AS=clang::AS_none, EnteringContext=true,. DSC=clang::Parser::DeclSpecContext::DSC_top_level, Attributes=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:2030. #15 0x00007fffeb95e5c7 in clang::Parser::ParseDeclarationSpecifiers (this=0x6a8f70, DS=..., TemplateInfo=..., AS=clang::AS_none, DSContext=clang::Parser::DeclSpecContext::DSC_top_level, LateAttrs=0x0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:3988. #16 0x00007fffeba39e8c in clang::Parser::ParseDeclOrFunctionDefInternal (this=0x6a8f70, attrs=..., DS=..., AS=clang::AS_none) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1054. #17 0x00007fffeba3a512 in clang::Parser::ParseDeclarationOrFunctionDefinition (this=0x6a8f70, attrs=..., DS=0x0, AS=clang::AS_none) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1162. #18 0x00007fffeba39a20 in clang::Parser::ParseExternalDeclaration (this=0x6a8f70, attrs=..., DS=0x0) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/cla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:8492,usability,tool,tools,8492,"ng/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:3284. #13 0x00007fffeb989306 in clang::Parser::ParseCXXMemberSpecification (this=0x6a8f70, RecordLoc=..., AttrFixitLoc=..., Attrs=..., TagType=25, TagDecl=0x1407fc0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:3488. #14 0x00007fffeb983667 in clang::Parser::ParseClassSpecifier (this=0x6a8f70, TagTokKind=clang::tok::kw_class, StartLoc=..., DS=..., TemplateInfo=..., AS=clang::AS_none, EnteringContext=true,. DSC=clang::Parser::DeclSpecContext::DSC_top_level, Attributes=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:2030. #15 0x00007fffeb95e5c7 in clang::Parser::ParseDeclarationSpecifiers (this=0x6a8f70, DS=..., TemplateInfo=..., AS=clang::AS_none, DSContext=clang::Parser::DeclSpecContext::DSC_top_level, LateAttrs=0x0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:3988. #16 0x00007fffeba39e8c in clang::Parser::ParseDeclOrFunctionDefInternal (this=0x6a8f70, attrs=..., DS=..., AS=clang::AS_none) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1054. #17 0x00007fffeba3a512 in clang::Parser::ParseDeclarationOrFunctionDefinition (this=0x6a8f70, attrs=..., DS=0x0, AS=clang::AS_none) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1162. #18 0x00007fffeba39a20 in clang::Parser::ParseExternalDeclaration (this=0x6a8f70, attrs=..., DS=0x0) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:984. #19 0x00007fffeba38af9 in clang::Parser::ParseTopLevelDecl (this=0x6a8f70, Result=..., IsFirstDecl=false) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:729. #20 0x00007fffead8c986 in cling::IncrementalParser::ParseInternal (this=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:8727,usability,tool,tools,8727,"1407fc0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:3488. #14 0x00007fffeb983667 in clang::Parser::ParseClassSpecifier (this=0x6a8f70, TagTokKind=clang::tok::kw_class, StartLoc=..., DS=..., TemplateInfo=..., AS=clang::AS_none, EnteringContext=true,. DSC=clang::Parser::DeclSpecContext::DSC_top_level, Attributes=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:2030. #15 0x00007fffeb95e5c7 in clang::Parser::ParseDeclarationSpecifiers (this=0x6a8f70, DS=..., TemplateInfo=..., AS=clang::AS_none, DSContext=clang::Parser::DeclSpecContext::DSC_top_level, LateAttrs=0x0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:3988. #16 0x00007fffeba39e8c in clang::Parser::ParseDeclOrFunctionDefInternal (this=0x6a8f70, attrs=..., DS=..., AS=clang::AS_none) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1054. #17 0x00007fffeba3a512 in clang::Parser::ParseDeclarationOrFunctionDefinition (this=0x6a8f70, attrs=..., DS=0x0, AS=clang::AS_none) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1162. #18 0x00007fffeba39a20 in clang::Parser::ParseExternalDeclaration (this=0x6a8f70, attrs=..., DS=0x0) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:984. #19 0x00007fffeba38af9 in clang::Parser::ParseTopLevelDecl (this=0x6a8f70, Result=..., IsFirstDecl=false) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:729. #20 0x00007fffead8c986 in cling::IncrementalParser::ParseInternal (this=0x4c5c20, input=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:930. #21 0x00007fffead8c401 in cling::IncrementalParser::Compile (this=0x4c5c20, input=..., Opts=...) at /local2/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:8965,usability,tool,tools,8965,"oc=..., DS=..., TemplateInfo=..., AS=clang::AS_none, EnteringContext=true,. DSC=clang::Parser::DeclSpecContext::DSC_top_level, Attributes=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:2030. #15 0x00007fffeb95e5c7 in clang::Parser::ParseDeclarationSpecifiers (this=0x6a8f70, DS=..., TemplateInfo=..., AS=clang::AS_none, DSContext=clang::Parser::DeclSpecContext::DSC_top_level, LateAttrs=0x0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:3988. #16 0x00007fffeba39e8c in clang::Parser::ParseDeclOrFunctionDefInternal (this=0x6a8f70, attrs=..., DS=..., AS=clang::AS_none) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1054. #17 0x00007fffeba3a512 in clang::Parser::ParseDeclarationOrFunctionDefinition (this=0x6a8f70, attrs=..., DS=0x0, AS=clang::AS_none) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1162. #18 0x00007fffeba39a20 in clang::Parser::ParseExternalDeclaration (this=0x6a8f70, attrs=..., DS=0x0) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:984. #19 0x00007fffeba38af9 in clang::Parser::ParseTopLevelDecl (this=0x6a8f70, Result=..., IsFirstDecl=false) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:729. #20 0x00007fffead8c986 in cling::IncrementalParser::ParseInternal (this=0x4c5c20, input=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:930. #21 0x00007fffead8c401 in cling::IncrementalParser::Compile (this=0x4c5c20, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:840. #22 0x00007fffeac0cb09 in cling::Interpreter::DeclareInternal (this=0x4c22e0, input=..., CO=..., T=0x7fffffffa030) at /local2/pcanal/cint_worki",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:9172,usability,tool,tools,9172,"rc/tools/clang/lib/Parse/ParseDeclCXX.cpp:2030. #15 0x00007fffeb95e5c7 in clang::Parser::ParseDeclarationSpecifiers (this=0x6a8f70, DS=..., TemplateInfo=..., AS=clang::AS_none, DSContext=clang::Parser::DeclSpecContext::DSC_top_level, LateAttrs=0x0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:3988. #16 0x00007fffeba39e8c in clang::Parser::ParseDeclOrFunctionDefInternal (this=0x6a8f70, attrs=..., DS=..., AS=clang::AS_none) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1054. #17 0x00007fffeba3a512 in clang::Parser::ParseDeclarationOrFunctionDefinition (this=0x6a8f70, attrs=..., DS=0x0, AS=clang::AS_none) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1162. #18 0x00007fffeba39a20 in clang::Parser::ParseExternalDeclaration (this=0x6a8f70, attrs=..., DS=0x0) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:984. #19 0x00007fffeba38af9 in clang::Parser::ParseTopLevelDecl (this=0x6a8f70, Result=..., IsFirstDecl=false) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:729. #20 0x00007fffead8c986 in cling::IncrementalParser::ParseInternal (this=0x4c5c20, input=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:930. #21 0x00007fffead8c401 in cling::IncrementalParser::Compile (this=0x4c5c20, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:840. #22 0x00007fffeac0cb09 in cling::Interpreter::DeclareInternal (this=0x4c22e0, input=..., CO=..., T=0x7fffffffa030) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1357. #23 0x00007fffeac0d647 in cling::Interpreter::loadHeader (this=0x4c22e0, filename=..., T=0x7fffffffa030) at /local2/pcanal/cint_worki",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:9383,usability,tool,tools,9383,"ontext::DSC_top_level, LateAttrs=0x0). at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseDecl.cpp:3988. #16 0x00007fffeba39e8c in clang::Parser::ParseDeclOrFunctionDefInternal (this=0x6a8f70, attrs=..., DS=..., AS=clang::AS_none) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1054. #17 0x00007fffeba3a512 in clang::Parser::ParseDeclarationOrFunctionDefinition (this=0x6a8f70, attrs=..., DS=0x0, AS=clang::AS_none) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1162. #18 0x00007fffeba39a20 in clang::Parser::ParseExternalDeclaration (this=0x6a8f70, attrs=..., DS=0x0) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:984. #19 0x00007fffeba38af9 in clang::Parser::ParseTopLevelDecl (this=0x6a8f70, Result=..., IsFirstDecl=false) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:729. #20 0x00007fffead8c986 in cling::IncrementalParser::ParseInternal (this=0x4c5c20, input=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:930. #21 0x00007fffead8c401 in cling::IncrementalParser::Compile (this=0x4c5c20, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:840. #22 0x00007fffeac0cb09 in cling::Interpreter::DeclareInternal (this=0x4c22e0, input=..., CO=..., T=0x7fffffffa030) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1357. #23 0x00007fffeac0d647 in cling::Interpreter::loadHeader (this=0x4c22e0, filename=..., T=0x7fffffffa030) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1495. #24 0x00007fffeac0dc30 in cling::Interpreter::loadFile (this=0x4c22e0, filename=..., allowSharedLib=true, T=0x7fffffffa030) at /local2/pc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:9503,usability,input,input,9503,"b/Parse/ParseDecl.cpp:3988. #16 0x00007fffeba39e8c in clang::Parser::ParseDeclOrFunctionDefInternal (this=0x6a8f70, attrs=..., DS=..., AS=clang::AS_none) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1054. #17 0x00007fffeba3a512 in clang::Parser::ParseDeclarationOrFunctionDefinition (this=0x6a8f70, attrs=..., DS=0x0, AS=clang::AS_none) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1162. #18 0x00007fffeba39a20 in clang::Parser::ParseExternalDeclaration (this=0x6a8f70, attrs=..., DS=0x0) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:984. #19 0x00007fffeba38af9 in clang::Parser::ParseTopLevelDecl (this=0x6a8f70, Result=..., IsFirstDecl=false) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:729. #20 0x00007fffead8c986 in cling::IncrementalParser::ParseInternal (this=0x4c5c20, input=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:930. #21 0x00007fffead8c401 in cling::IncrementalParser::Compile (this=0x4c5c20, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:840. #22 0x00007fffeac0cb09 in cling::Interpreter::DeclareInternal (this=0x4c22e0, input=..., CO=..., T=0x7fffffffa030) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1357. #23 0x00007fffeac0d647 in cling::Interpreter::loadHeader (this=0x4c22e0, filename=..., T=0x7fffffffa030) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1495. #24 0x00007fffeac0dc30 in cling::Interpreter::loadFile (this=0x4c22e0, filename=..., allowSharedLib=true, T=0x7fffffffa030) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1589. #25 0x00007fffeaea2dc4 in cling",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:9697,usability,input,input,9697,"/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1054. #17 0x00007fffeba3a512 in clang::Parser::ParseDeclarationOrFunctionDefinition (this=0x6a8f70, attrs=..., DS=0x0, AS=clang::AS_none) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1162. #18 0x00007fffeba39a20 in clang::Parser::ParseExternalDeclaration (this=0x6a8f70, attrs=..., DS=0x0) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:984. #19 0x00007fffeba38af9 in clang::Parser::ParseTopLevelDecl (this=0x6a8f70, Result=..., IsFirstDecl=false) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:729. #20 0x00007fffead8c986 in cling::IncrementalParser::ParseInternal (this=0x4c5c20, input=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:930. #21 0x00007fffead8c401 in cling::IncrementalParser::Compile (this=0x4c5c20, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:840. #22 0x00007fffeac0cb09 in cling::Interpreter::DeclareInternal (this=0x4c22e0, input=..., CO=..., T=0x7fffffffa030) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1357. #23 0x00007fffeac0d647 in cling::Interpreter::loadHeader (this=0x4c22e0, filename=..., T=0x7fffffffa030) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1495. #24 0x00007fffeac0dc30 in cling::Interpreter::loadFile (this=0x4c22e0, filename=..., allowSharedLib=true, T=0x7fffffffa030) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1589. #25 0x00007fffeaea2dc4 in cling::MetaSema::actOnLCommand (this=0x532780, file=..., transaction=0x7fffffffa030) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79. #26 0x00007fffe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:9903,usability,input,input,9903,"l2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1162. #18 0x00007fffeba39a20 in clang::Parser::ParseExternalDeclaration (this=0x6a8f70, attrs=..., DS=0x0) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:984. #19 0x00007fffeba38af9 in clang::Parser::ParseTopLevelDecl (this=0x6a8f70, Result=..., IsFirstDecl=false) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:729. #20 0x00007fffead8c986 in cling::IncrementalParser::ParseInternal (this=0x4c5c20, input=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:930. #21 0x00007fffead8c401 in cling::IncrementalParser::Compile (this=0x4c5c20, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:840. #22 0x00007fffeac0cb09 in cling::Interpreter::DeclareInternal (this=0x4c22e0, input=..., CO=..., T=0x7fffffffa030) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1357. #23 0x00007fffeac0d647 in cling::Interpreter::loadHeader (this=0x4c22e0, filename=..., T=0x7fffffffa030) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1495. #24 0x00007fffeac0dc30 in cling::Interpreter::loadFile (this=0x4c22e0, filename=..., allowSharedLib=true, T=0x7fffffffa030) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1589. #25 0x00007fffeaea2dc4 in cling::MetaSema::actOnLCommand (this=0x532780, file=..., transaction=0x7fffffffa030) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79. #26 0x00007fffeaea3377 in cling::MetaSema::actOnxCommand (this=0x532780, file=..., args=..., result=0x7fffffffa810) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:146. #27 0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:12462,usability,error,error,12462,"cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:146. #27 0x00007fffeaeb4ac7 in cling::MetaParser::isXCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315. #28 0x00007fffeaeb3b27 in cling::MetaParser::isCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:119. #29 0x00007fffeaeb39af in cling::MetaParser::isMetaCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:96. #30 0x00007fffeae9d2dc in cling::MetaProcessor::process (this=0x95c1b0, input_line=..., compRes=@0x7fffffffa80c: cling::Interpreter::kSuccess, result=0x7fffffffa810, disableValuePrinting=false). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317. #31 0x00007fffea97c5cd in HandleInterpreterException (metaProcessor=0x95c1b0, input_line=0xccf520 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", compRes=@0x7fffffffa80c: cling::Interpreter::kSuccess, result=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:2434. #32 0x00007fffea97cff6 in TCling::ProcessLine (this=0x4c1820, line=0x141f860 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", error=0x7fffffffd888). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:2578. #33 0x00007fffea9808ab in TCling::ProcessLineSynch (this=0x4c1820, line=0x141f860 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", error=0x7fffffffd888). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:3524. ``` .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13034:12709,usability,error,error,12709,"cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:146. #27 0x00007fffeaeb4ac7 in cling::MetaParser::isXCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315. #28 0x00007fffeaeb3b27 in cling::MetaParser::isCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:119. #29 0x00007fffeaeb39af in cling::MetaParser::isMetaCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:96. #30 0x00007fffeae9d2dc in cling::MetaProcessor::process (this=0x95c1b0, input_line=..., compRes=@0x7fffffffa80c: cling::Interpreter::kSuccess, result=0x7fffffffa810, disableValuePrinting=false). at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317. #31 0x00007fffea97c5cd in HandleInterpreterException (metaProcessor=0x95c1b0, input_line=0xccf520 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", compRes=@0x7fffffffa80c: cling::Interpreter::kSuccess, result=0x7fffffffa810). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:2434. #32 0x00007fffea97cff6 in TCling::ProcessLine (this=0x4c1820, line=0x141f860 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", error=0x7fffffffd888). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:2578. #33 0x00007fffea9808ab in TCling::ProcessLineSynch (this=0x4c1820, line=0x141f860 "".X /local2/pcanal/root_working/test/2023-dict/./macro.cc"", error=0x7fffffffd888). at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:3524. ``` .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13034
https://github.com/root-project/root/issues/13035:240,availability,sli,slip,240,"Make ROOT's automatic class header parsing setting more fine grained.; ### Explain what you would like to see improved. In CMSSW we want to have dictionaries defined explicitly for all classes that are part of I/O. Occasionally some things slip through causing (sometimes?) ROOT to try to auto parse the header of the corresponding class. Many times the auto parsing works (but is not desirable), in some cases it fails with an unhelpful error message (in most cases so far this has been in conjunction with CUDA, by rootcling being unable to write to the `cuda.pcm` that is in cvmfs). With auto parsing disabled, we'd be able to emit an error message pointing to the class whose dictionary is missing. I gave a try on `TInterpreter::SetClassAutoparsing(false)` in https://github.com/cms-sw/cmssw/pull/41344, and while in specific cases I got the desired behavior (of CMSSW framework emitting a descriptive error message for a missing dictionary instead of ROOT trying to auto-parse the corresponding header), the fact that the `SetClassAutoparsing()` is a global setting makes it difficult to disable the auto parsing in a useful way in the concurrent setup of CMSSW. There are a few cases (like open ROOT file, set up a string cut parser that uses ROOT reflection underneath) where the auto-parsing needs to be enabled, and these activities may be running concurrently to activities where I'd like to have the auto-parsing disabled. ### Share how it could be improved. Make the auto parsing setting more fine grained, e.g. explicitly in the relevant API calls or as a `thread_local`. Being able to query the value of the setting could be useful as well. ### How to reproduce? A recipe to reproduce can be cooked up if necessary based on https://github.com/cms-sw/cmssw/pull/41344. ### ROOT version. 6.26. ### How did you install ROOT? Part of CMSSW stack. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13035
https://github.com/root-project/root/issues/13035:438,availability,error,error,438,"Make ROOT's automatic class header parsing setting more fine grained.; ### Explain what you would like to see improved. In CMSSW we want to have dictionaries defined explicitly for all classes that are part of I/O. Occasionally some things slip through causing (sometimes?) ROOT to try to auto parse the header of the corresponding class. Many times the auto parsing works (but is not desirable), in some cases it fails with an unhelpful error message (in most cases so far this has been in conjunction with CUDA, by rootcling being unable to write to the `cuda.pcm` that is in cvmfs). With auto parsing disabled, we'd be able to emit an error message pointing to the class whose dictionary is missing. I gave a try on `TInterpreter::SetClassAutoparsing(false)` in https://github.com/cms-sw/cmssw/pull/41344, and while in specific cases I got the desired behavior (of CMSSW framework emitting a descriptive error message for a missing dictionary instead of ROOT trying to auto-parse the corresponding header), the fact that the `SetClassAutoparsing()` is a global setting makes it difficult to disable the auto parsing in a useful way in the concurrent setup of CMSSW. There are a few cases (like open ROOT file, set up a string cut parser that uses ROOT reflection underneath) where the auto-parsing needs to be enabled, and these activities may be running concurrently to activities where I'd like to have the auto-parsing disabled. ### Share how it could be improved. Make the auto parsing setting more fine grained, e.g. explicitly in the relevant API calls or as a `thread_local`. Being able to query the value of the setting could be useful as well. ### How to reproduce? A recipe to reproduce can be cooked up if necessary based on https://github.com/cms-sw/cmssw/pull/41344. ### ROOT version. 6.26. ### How did you install ROOT? Part of CMSSW stack. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13035
https://github.com/root-project/root/issues/13035:638,availability,error,error,638,"Make ROOT's automatic class header parsing setting more fine grained.; ### Explain what you would like to see improved. In CMSSW we want to have dictionaries defined explicitly for all classes that are part of I/O. Occasionally some things slip through causing (sometimes?) ROOT to try to auto parse the header of the corresponding class. Many times the auto parsing works (but is not desirable), in some cases it fails with an unhelpful error message (in most cases so far this has been in conjunction with CUDA, by rootcling being unable to write to the `cuda.pcm` that is in cvmfs). With auto parsing disabled, we'd be able to emit an error message pointing to the class whose dictionary is missing. I gave a try on `TInterpreter::SetClassAutoparsing(false)` in https://github.com/cms-sw/cmssw/pull/41344, and while in specific cases I got the desired behavior (of CMSSW framework emitting a descriptive error message for a missing dictionary instead of ROOT trying to auto-parse the corresponding header), the fact that the `SetClassAutoparsing()` is a global setting makes it difficult to disable the auto parsing in a useful way in the concurrent setup of CMSSW. There are a few cases (like open ROOT file, set up a string cut parser that uses ROOT reflection underneath) where the auto-parsing needs to be enabled, and these activities may be running concurrently to activities where I'd like to have the auto-parsing disabled. ### Share how it could be improved. Make the auto parsing setting more fine grained, e.g. explicitly in the relevant API calls or as a `thread_local`. Being able to query the value of the setting could be useful as well. ### How to reproduce? A recipe to reproduce can be cooked up if necessary based on https://github.com/cms-sw/cmssw/pull/41344. ### ROOT version. 6.26. ### How did you install ROOT? Part of CMSSW stack. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13035
https://github.com/root-project/root/issues/13035:907,availability,error,error,907,"Make ROOT's automatic class header parsing setting more fine grained.; ### Explain what you would like to see improved. In CMSSW we want to have dictionaries defined explicitly for all classes that are part of I/O. Occasionally some things slip through causing (sometimes?) ROOT to try to auto parse the header of the corresponding class. Many times the auto parsing works (but is not desirable), in some cases it fails with an unhelpful error message (in most cases so far this has been in conjunction with CUDA, by rootcling being unable to write to the `cuda.pcm` that is in cvmfs). With auto parsing disabled, we'd be able to emit an error message pointing to the class whose dictionary is missing. I gave a try on `TInterpreter::SetClassAutoparsing(false)` in https://github.com/cms-sw/cmssw/pull/41344, and while in specific cases I got the desired behavior (of CMSSW framework emitting a descriptive error message for a missing dictionary instead of ROOT trying to auto-parse the corresponding header), the fact that the `SetClassAutoparsing()` is a global setting makes it difficult to disable the auto parsing in a useful way in the concurrent setup of CMSSW. There are a few cases (like open ROOT file, set up a string cut parser that uses ROOT reflection underneath) where the auto-parsing needs to be enabled, and these activities may be running concurrently to activities where I'd like to have the auto-parsing disabled. ### Share how it could be improved. Make the auto parsing setting more fine grained, e.g. explicitly in the relevant API calls or as a `thread_local`. Being able to query the value of the setting could be useful as well. ### How to reproduce? A recipe to reproduce can be cooked up if necessary based on https://github.com/cms-sw/cmssw/pull/41344. ### ROOT version. 6.26. ### How did you install ROOT? Part of CMSSW stack. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13035
https://github.com/root-project/root/issues/13035:1868,availability,operat,operating,1868,"Make ROOT's automatic class header parsing setting more fine grained.; ### Explain what you would like to see improved. In CMSSW we want to have dictionaries defined explicitly for all classes that are part of I/O. Occasionally some things slip through causing (sometimes?) ROOT to try to auto parse the header of the corresponding class. Many times the auto parsing works (but is not desirable), in some cases it fails with an unhelpful error message (in most cases so far this has been in conjunction with CUDA, by rootcling being unable to write to the `cuda.pcm` that is in cvmfs). With auto parsing disabled, we'd be able to emit an error message pointing to the class whose dictionary is missing. I gave a try on `TInterpreter::SetClassAutoparsing(false)` in https://github.com/cms-sw/cmssw/pull/41344, and while in specific cases I got the desired behavior (of CMSSW framework emitting a descriptive error message for a missing dictionary instead of ROOT trying to auto-parse the corresponding header), the fact that the `SetClassAutoparsing()` is a global setting makes it difficult to disable the auto parsing in a useful way in the concurrent setup of CMSSW. There are a few cases (like open ROOT file, set up a string cut parser that uses ROOT reflection underneath) where the auto-parsing needs to be enabled, and these activities may be running concurrently to activities where I'd like to have the auto-parsing disabled. ### Share how it could be improved. Make the auto parsing setting more fine grained, e.g. explicitly in the relevant API calls or as a `thread_local`. Being able to query the value of the setting could be useful as well. ### How to reproduce? A recipe to reproduce can be cooked up if necessary based on https://github.com/cms-sw/cmssw/pull/41344. ### ROOT version. 6.26. ### How did you install ROOT? Part of CMSSW stack. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13035
https://github.com/root-project/root/issues/13035:12,deployability,automat,automatic,12,"Make ROOT's automatic class header parsing setting more fine grained.; ### Explain what you would like to see improved. In CMSSW we want to have dictionaries defined explicitly for all classes that are part of I/O. Occasionally some things slip through causing (sometimes?) ROOT to try to auto parse the header of the corresponding class. Many times the auto parsing works (but is not desirable), in some cases it fails with an unhelpful error message (in most cases so far this has been in conjunction with CUDA, by rootcling being unable to write to the `cuda.pcm` that is in cvmfs). With auto parsing disabled, we'd be able to emit an error message pointing to the class whose dictionary is missing. I gave a try on `TInterpreter::SetClassAutoparsing(false)` in https://github.com/cms-sw/cmssw/pull/41344, and while in specific cases I got the desired behavior (of CMSSW framework emitting a descriptive error message for a missing dictionary instead of ROOT trying to auto-parse the corresponding header), the fact that the `SetClassAutoparsing()` is a global setting makes it difficult to disable the auto parsing in a useful way in the concurrent setup of CMSSW. There are a few cases (like open ROOT file, set up a string cut parser that uses ROOT reflection underneath) where the auto-parsing needs to be enabled, and these activities may be running concurrently to activities where I'd like to have the auto-parsing disabled. ### Share how it could be improved. Make the auto parsing setting more fine grained, e.g. explicitly in the relevant API calls or as a `thread_local`. Being able to query the value of the setting could be useful as well. ### How to reproduce? A recipe to reproduce can be cooked up if necessary based on https://github.com/cms-sw/cmssw/pull/41344. ### ROOT version. 6.26. ### How did you install ROOT? Part of CMSSW stack. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13035
https://github.com/root-project/root/issues/13035:414,deployability,fail,fails,414,"Make ROOT's automatic class header parsing setting more fine grained.; ### Explain what you would like to see improved. In CMSSW we want to have dictionaries defined explicitly for all classes that are part of I/O. Occasionally some things slip through causing (sometimes?) ROOT to try to auto parse the header of the corresponding class. Many times the auto parsing works (but is not desirable), in some cases it fails with an unhelpful error message (in most cases so far this has been in conjunction with CUDA, by rootcling being unable to write to the `cuda.pcm` that is in cvmfs). With auto parsing disabled, we'd be able to emit an error message pointing to the class whose dictionary is missing. I gave a try on `TInterpreter::SetClassAutoparsing(false)` in https://github.com/cms-sw/cmssw/pull/41344, and while in specific cases I got the desired behavior (of CMSSW framework emitting a descriptive error message for a missing dictionary instead of ROOT trying to auto-parse the corresponding header), the fact that the `SetClassAutoparsing()` is a global setting makes it difficult to disable the auto parsing in a useful way in the concurrent setup of CMSSW. There are a few cases (like open ROOT file, set up a string cut parser that uses ROOT reflection underneath) where the auto-parsing needs to be enabled, and these activities may be running concurrently to activities where I'd like to have the auto-parsing disabled. ### Share how it could be improved. Make the auto parsing setting more fine grained, e.g. explicitly in the relevant API calls or as a `thread_local`. Being able to query the value of the setting could be useful as well. ### How to reproduce? A recipe to reproduce can be cooked up if necessary based on https://github.com/cms-sw/cmssw/pull/41344. ### ROOT version. 6.26. ### How did you install ROOT? Part of CMSSW stack. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13035
https://github.com/root-project/root/issues/13035:1552,deployability,API,API,1552,"Make ROOT's automatic class header parsing setting more fine grained.; ### Explain what you would like to see improved. In CMSSW we want to have dictionaries defined explicitly for all classes that are part of I/O. Occasionally some things slip through causing (sometimes?) ROOT to try to auto parse the header of the corresponding class. Many times the auto parsing works (but is not desirable), in some cases it fails with an unhelpful error message (in most cases so far this has been in conjunction with CUDA, by rootcling being unable to write to the `cuda.pcm` that is in cvmfs). With auto parsing disabled, we'd be able to emit an error message pointing to the class whose dictionary is missing. I gave a try on `TInterpreter::SetClassAutoparsing(false)` in https://github.com/cms-sw/cmssw/pull/41344, and while in specific cases I got the desired behavior (of CMSSW framework emitting a descriptive error message for a missing dictionary instead of ROOT trying to auto-parse the corresponding header), the fact that the `SetClassAutoparsing()` is a global setting makes it difficult to disable the auto parsing in a useful way in the concurrent setup of CMSSW. There are a few cases (like open ROOT file, set up a string cut parser that uses ROOT reflection underneath) where the auto-parsing needs to be enabled, and these activities may be running concurrently to activities where I'd like to have the auto-parsing disabled. ### Share how it could be improved. Make the auto parsing setting more fine grained, e.g. explicitly in the relevant API calls or as a `thread_local`. Being able to query the value of the setting could be useful as well. ### How to reproduce? A recipe to reproduce can be cooked up if necessary based on https://github.com/cms-sw/cmssw/pull/41344. ### ROOT version. 6.26. ### How did you install ROOT? Part of CMSSW stack. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13035
https://github.com/root-project/root/issues/13035:1792,deployability,version,version,1792,"Make ROOT's automatic class header parsing setting more fine grained.; ### Explain what you would like to see improved. In CMSSW we want to have dictionaries defined explicitly for all classes that are part of I/O. Occasionally some things slip through causing (sometimes?) ROOT to try to auto parse the header of the corresponding class. Many times the auto parsing works (but is not desirable), in some cases it fails with an unhelpful error message (in most cases so far this has been in conjunction with CUDA, by rootcling being unable to write to the `cuda.pcm` that is in cvmfs). With auto parsing disabled, we'd be able to emit an error message pointing to the class whose dictionary is missing. I gave a try on `TInterpreter::SetClassAutoparsing(false)` in https://github.com/cms-sw/cmssw/pull/41344, and while in specific cases I got the desired behavior (of CMSSW framework emitting a descriptive error message for a missing dictionary instead of ROOT trying to auto-parse the corresponding header), the fact that the `SetClassAutoparsing()` is a global setting makes it difficult to disable the auto parsing in a useful way in the concurrent setup of CMSSW. There are a few cases (like open ROOT file, set up a string cut parser that uses ROOT reflection underneath) where the auto-parsing needs to be enabled, and these activities may be running concurrently to activities where I'd like to have the auto-parsing disabled. ### Share how it could be improved. Make the auto parsing setting more fine grained, e.g. explicitly in the relevant API calls or as a `thread_local`. Being able to query the value of the setting could be useful as well. ### How to reproduce? A recipe to reproduce can be cooked up if necessary based on https://github.com/cms-sw/cmssw/pull/41344. ### ROOT version. 6.26. ### How did you install ROOT? Part of CMSSW stack. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13035
https://github.com/root-project/root/issues/13035:1823,deployability,instal,install,1823,"Make ROOT's automatic class header parsing setting more fine grained.; ### Explain what you would like to see improved. In CMSSW we want to have dictionaries defined explicitly for all classes that are part of I/O. Occasionally some things slip through causing (sometimes?) ROOT to try to auto parse the header of the corresponding class. Many times the auto parsing works (but is not desirable), in some cases it fails with an unhelpful error message (in most cases so far this has been in conjunction with CUDA, by rootcling being unable to write to the `cuda.pcm` that is in cvmfs). With auto parsing disabled, we'd be able to emit an error message pointing to the class whose dictionary is missing. I gave a try on `TInterpreter::SetClassAutoparsing(false)` in https://github.com/cms-sw/cmssw/pull/41344, and while in specific cases I got the desired behavior (of CMSSW framework emitting a descriptive error message for a missing dictionary instead of ROOT trying to auto-parse the corresponding header), the fact that the `SetClassAutoparsing()` is a global setting makes it difficult to disable the auto parsing in a useful way in the concurrent setup of CMSSW. There are a few cases (like open ROOT file, set up a string cut parser that uses ROOT reflection underneath) where the auto-parsing needs to be enabled, and these activities may be running concurrently to activities where I'd like to have the auto-parsing disabled. ### Share how it could be improved. Make the auto parsing setting more fine grained, e.g. explicitly in the relevant API calls or as a `thread_local`. Being able to query the value of the setting could be useful as well. ### How to reproduce? A recipe to reproduce can be cooked up if necessary based on https://github.com/cms-sw/cmssw/pull/41344. ### ROOT version. 6.26. ### How did you install ROOT? Part of CMSSW stack. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13035
https://github.com/root-project/root/issues/13035:1851,deployability,stack,stack,1851,"Make ROOT's automatic class header parsing setting more fine grained.; ### Explain what you would like to see improved. In CMSSW we want to have dictionaries defined explicitly for all classes that are part of I/O. Occasionally some things slip through causing (sometimes?) ROOT to try to auto parse the header of the corresponding class. Many times the auto parsing works (but is not desirable), in some cases it fails with an unhelpful error message (in most cases so far this has been in conjunction with CUDA, by rootcling being unable to write to the `cuda.pcm` that is in cvmfs). With auto parsing disabled, we'd be able to emit an error message pointing to the class whose dictionary is missing. I gave a try on `TInterpreter::SetClassAutoparsing(false)` in https://github.com/cms-sw/cmssw/pull/41344, and while in specific cases I got the desired behavior (of CMSSW framework emitting a descriptive error message for a missing dictionary instead of ROOT trying to auto-parse the corresponding header), the fact that the `SetClassAutoparsing()` is a global setting makes it difficult to disable the auto parsing in a useful way in the concurrent setup of CMSSW. There are a few cases (like open ROOT file, set up a string cut parser that uses ROOT reflection underneath) where the auto-parsing needs to be enabled, and these activities may be running concurrently to activities where I'd like to have the auto-parsing disabled. ### Share how it could be improved. Make the auto parsing setting more fine grained, e.g. explicitly in the relevant API calls or as a `thread_local`. Being able to query the value of the setting could be useful as well. ### How to reproduce? A recipe to reproduce can be cooked up if necessary based on https://github.com/cms-sw/cmssw/pull/41344. ### ROOT version. 6.26. ### How did you install ROOT? Part of CMSSW stack. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13035
https://github.com/root-project/root/issues/13035:444,integrability,messag,message,444,"Make ROOT's automatic class header parsing setting more fine grained.; ### Explain what you would like to see improved. In CMSSW we want to have dictionaries defined explicitly for all classes that are part of I/O. Occasionally some things slip through causing (sometimes?) ROOT to try to auto parse the header of the corresponding class. Many times the auto parsing works (but is not desirable), in some cases it fails with an unhelpful error message (in most cases so far this has been in conjunction with CUDA, by rootcling being unable to write to the `cuda.pcm` that is in cvmfs). With auto parsing disabled, we'd be able to emit an error message pointing to the class whose dictionary is missing. I gave a try on `TInterpreter::SetClassAutoparsing(false)` in https://github.com/cms-sw/cmssw/pull/41344, and while in specific cases I got the desired behavior (of CMSSW framework emitting a descriptive error message for a missing dictionary instead of ROOT trying to auto-parse the corresponding header), the fact that the `SetClassAutoparsing()` is a global setting makes it difficult to disable the auto parsing in a useful way in the concurrent setup of CMSSW. There are a few cases (like open ROOT file, set up a string cut parser that uses ROOT reflection underneath) where the auto-parsing needs to be enabled, and these activities may be running concurrently to activities where I'd like to have the auto-parsing disabled. ### Share how it could be improved. Make the auto parsing setting more fine grained, e.g. explicitly in the relevant API calls or as a `thread_local`. Being able to query the value of the setting could be useful as well. ### How to reproduce? A recipe to reproduce can be cooked up if necessary based on https://github.com/cms-sw/cmssw/pull/41344. ### ROOT version. 6.26. ### How did you install ROOT? Part of CMSSW stack. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13035
https://github.com/root-project/root/issues/13035:644,integrability,messag,message,644,"Make ROOT's automatic class header parsing setting more fine grained.; ### Explain what you would like to see improved. In CMSSW we want to have dictionaries defined explicitly for all classes that are part of I/O. Occasionally some things slip through causing (sometimes?) ROOT to try to auto parse the header of the corresponding class. Many times the auto parsing works (but is not desirable), in some cases it fails with an unhelpful error message (in most cases so far this has been in conjunction with CUDA, by rootcling being unable to write to the `cuda.pcm` that is in cvmfs). With auto parsing disabled, we'd be able to emit an error message pointing to the class whose dictionary is missing. I gave a try on `TInterpreter::SetClassAutoparsing(false)` in https://github.com/cms-sw/cmssw/pull/41344, and while in specific cases I got the desired behavior (of CMSSW framework emitting a descriptive error message for a missing dictionary instead of ROOT trying to auto-parse the corresponding header), the fact that the `SetClassAutoparsing()` is a global setting makes it difficult to disable the auto parsing in a useful way in the concurrent setup of CMSSW. There are a few cases (like open ROOT file, set up a string cut parser that uses ROOT reflection underneath) where the auto-parsing needs to be enabled, and these activities may be running concurrently to activities where I'd like to have the auto-parsing disabled. ### Share how it could be improved. Make the auto parsing setting more fine grained, e.g. explicitly in the relevant API calls or as a `thread_local`. Being able to query the value of the setting could be useful as well. ### How to reproduce? A recipe to reproduce can be cooked up if necessary based on https://github.com/cms-sw/cmssw/pull/41344. ### ROOT version. 6.26. ### How did you install ROOT? Part of CMSSW stack. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13035
https://github.com/root-project/root/issues/13035:913,integrability,messag,message,913,"Make ROOT's automatic class header parsing setting more fine grained.; ### Explain what you would like to see improved. In CMSSW we want to have dictionaries defined explicitly for all classes that are part of I/O. Occasionally some things slip through causing (sometimes?) ROOT to try to auto parse the header of the corresponding class. Many times the auto parsing works (but is not desirable), in some cases it fails with an unhelpful error message (in most cases so far this has been in conjunction with CUDA, by rootcling being unable to write to the `cuda.pcm` that is in cvmfs). With auto parsing disabled, we'd be able to emit an error message pointing to the class whose dictionary is missing. I gave a try on `TInterpreter::SetClassAutoparsing(false)` in https://github.com/cms-sw/cmssw/pull/41344, and while in specific cases I got the desired behavior (of CMSSW framework emitting a descriptive error message for a missing dictionary instead of ROOT trying to auto-parse the corresponding header), the fact that the `SetClassAutoparsing()` is a global setting makes it difficult to disable the auto parsing in a useful way in the concurrent setup of CMSSW. There are a few cases (like open ROOT file, set up a string cut parser that uses ROOT reflection underneath) where the auto-parsing needs to be enabled, and these activities may be running concurrently to activities where I'd like to have the auto-parsing disabled. ### Share how it could be improved. Make the auto parsing setting more fine grained, e.g. explicitly in the relevant API calls or as a `thread_local`. Being able to query the value of the setting could be useful as well. ### How to reproduce? A recipe to reproduce can be cooked up if necessary based on https://github.com/cms-sw/cmssw/pull/41344. ### ROOT version. 6.26. ### How did you install ROOT? Part of CMSSW stack. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13035
https://github.com/root-project/root/issues/13035:1552,integrability,API,API,1552,"Make ROOT's automatic class header parsing setting more fine grained.; ### Explain what you would like to see improved. In CMSSW we want to have dictionaries defined explicitly for all classes that are part of I/O. Occasionally some things slip through causing (sometimes?) ROOT to try to auto parse the header of the corresponding class. Many times the auto parsing works (but is not desirable), in some cases it fails with an unhelpful error message (in most cases so far this has been in conjunction with CUDA, by rootcling being unable to write to the `cuda.pcm` that is in cvmfs). With auto parsing disabled, we'd be able to emit an error message pointing to the class whose dictionary is missing. I gave a try on `TInterpreter::SetClassAutoparsing(false)` in https://github.com/cms-sw/cmssw/pull/41344, and while in specific cases I got the desired behavior (of CMSSW framework emitting a descriptive error message for a missing dictionary instead of ROOT trying to auto-parse the corresponding header), the fact that the `SetClassAutoparsing()` is a global setting makes it difficult to disable the auto parsing in a useful way in the concurrent setup of CMSSW. There are a few cases (like open ROOT file, set up a string cut parser that uses ROOT reflection underneath) where the auto-parsing needs to be enabled, and these activities may be running concurrently to activities where I'd like to have the auto-parsing disabled. ### Share how it could be improved. Make the auto parsing setting more fine grained, e.g. explicitly in the relevant API calls or as a `thread_local`. Being able to query the value of the setting could be useful as well. ### How to reproduce? A recipe to reproduce can be cooked up if necessary based on https://github.com/cms-sw/cmssw/pull/41344. ### ROOT version. 6.26. ### How did you install ROOT? Part of CMSSW stack. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13035
https://github.com/root-project/root/issues/13035:1792,integrability,version,version,1792,"Make ROOT's automatic class header parsing setting more fine grained.; ### Explain what you would like to see improved. In CMSSW we want to have dictionaries defined explicitly for all classes that are part of I/O. Occasionally some things slip through causing (sometimes?) ROOT to try to auto parse the header of the corresponding class. Many times the auto parsing works (but is not desirable), in some cases it fails with an unhelpful error message (in most cases so far this has been in conjunction with CUDA, by rootcling being unable to write to the `cuda.pcm` that is in cvmfs). With auto parsing disabled, we'd be able to emit an error message pointing to the class whose dictionary is missing. I gave a try on `TInterpreter::SetClassAutoparsing(false)` in https://github.com/cms-sw/cmssw/pull/41344, and while in specific cases I got the desired behavior (of CMSSW framework emitting a descriptive error message for a missing dictionary instead of ROOT trying to auto-parse the corresponding header), the fact that the `SetClassAutoparsing()` is a global setting makes it difficult to disable the auto parsing in a useful way in the concurrent setup of CMSSW. There are a few cases (like open ROOT file, set up a string cut parser that uses ROOT reflection underneath) where the auto-parsing needs to be enabled, and these activities may be running concurrently to activities where I'd like to have the auto-parsing disabled. ### Share how it could be improved. Make the auto parsing setting more fine grained, e.g. explicitly in the relevant API calls or as a `thread_local`. Being able to query the value of the setting could be useful as well. ### How to reproduce? A recipe to reproduce can be cooked up if necessary based on https://github.com/cms-sw/cmssw/pull/41344. ### ROOT version. 6.26. ### How did you install ROOT? Part of CMSSW stack. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13035
https://github.com/root-project/root/issues/13035:444,interoperability,messag,message,444,"Make ROOT's automatic class header parsing setting more fine grained.; ### Explain what you would like to see improved. In CMSSW we want to have dictionaries defined explicitly for all classes that are part of I/O. Occasionally some things slip through causing (sometimes?) ROOT to try to auto parse the header of the corresponding class. Many times the auto parsing works (but is not desirable), in some cases it fails with an unhelpful error message (in most cases so far this has been in conjunction with CUDA, by rootcling being unable to write to the `cuda.pcm` that is in cvmfs). With auto parsing disabled, we'd be able to emit an error message pointing to the class whose dictionary is missing. I gave a try on `TInterpreter::SetClassAutoparsing(false)` in https://github.com/cms-sw/cmssw/pull/41344, and while in specific cases I got the desired behavior (of CMSSW framework emitting a descriptive error message for a missing dictionary instead of ROOT trying to auto-parse the corresponding header), the fact that the `SetClassAutoparsing()` is a global setting makes it difficult to disable the auto parsing in a useful way in the concurrent setup of CMSSW. There are a few cases (like open ROOT file, set up a string cut parser that uses ROOT reflection underneath) where the auto-parsing needs to be enabled, and these activities may be running concurrently to activities where I'd like to have the auto-parsing disabled. ### Share how it could be improved. Make the auto parsing setting more fine grained, e.g. explicitly in the relevant API calls or as a `thread_local`. Being able to query the value of the setting could be useful as well. ### How to reproduce? A recipe to reproduce can be cooked up if necessary based on https://github.com/cms-sw/cmssw/pull/41344. ### ROOT version. 6.26. ### How did you install ROOT? Part of CMSSW stack. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13035
https://github.com/root-project/root/issues/13035:644,interoperability,messag,message,644,"Make ROOT's automatic class header parsing setting more fine grained.; ### Explain what you would like to see improved. In CMSSW we want to have dictionaries defined explicitly for all classes that are part of I/O. Occasionally some things slip through causing (sometimes?) ROOT to try to auto parse the header of the corresponding class. Many times the auto parsing works (but is not desirable), in some cases it fails with an unhelpful error message (in most cases so far this has been in conjunction with CUDA, by rootcling being unable to write to the `cuda.pcm` that is in cvmfs). With auto parsing disabled, we'd be able to emit an error message pointing to the class whose dictionary is missing. I gave a try on `TInterpreter::SetClassAutoparsing(false)` in https://github.com/cms-sw/cmssw/pull/41344, and while in specific cases I got the desired behavior (of CMSSW framework emitting a descriptive error message for a missing dictionary instead of ROOT trying to auto-parse the corresponding header), the fact that the `SetClassAutoparsing()` is a global setting makes it difficult to disable the auto parsing in a useful way in the concurrent setup of CMSSW. There are a few cases (like open ROOT file, set up a string cut parser that uses ROOT reflection underneath) where the auto-parsing needs to be enabled, and these activities may be running concurrently to activities where I'd like to have the auto-parsing disabled. ### Share how it could be improved. Make the auto parsing setting more fine grained, e.g. explicitly in the relevant API calls or as a `thread_local`. Being able to query the value of the setting could be useful as well. ### How to reproduce? A recipe to reproduce can be cooked up if necessary based on https://github.com/cms-sw/cmssw/pull/41344. ### ROOT version. 6.26. ### How did you install ROOT? Part of CMSSW stack. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13035
https://github.com/root-project/root/issues/13035:822,interoperability,specif,specific,822,"Make ROOT's automatic class header parsing setting more fine grained.; ### Explain what you would like to see improved. In CMSSW we want to have dictionaries defined explicitly for all classes that are part of I/O. Occasionally some things slip through causing (sometimes?) ROOT to try to auto parse the header of the corresponding class. Many times the auto parsing works (but is not desirable), in some cases it fails with an unhelpful error message (in most cases so far this has been in conjunction with CUDA, by rootcling being unable to write to the `cuda.pcm` that is in cvmfs). With auto parsing disabled, we'd be able to emit an error message pointing to the class whose dictionary is missing. I gave a try on `TInterpreter::SetClassAutoparsing(false)` in https://github.com/cms-sw/cmssw/pull/41344, and while in specific cases I got the desired behavior (of CMSSW framework emitting a descriptive error message for a missing dictionary instead of ROOT trying to auto-parse the corresponding header), the fact that the `SetClassAutoparsing()` is a global setting makes it difficult to disable the auto parsing in a useful way in the concurrent setup of CMSSW. There are a few cases (like open ROOT file, set up a string cut parser that uses ROOT reflection underneath) where the auto-parsing needs to be enabled, and these activities may be running concurrently to activities where I'd like to have the auto-parsing disabled. ### Share how it could be improved. Make the auto parsing setting more fine grained, e.g. explicitly in the relevant API calls or as a `thread_local`. Being able to query the value of the setting could be useful as well. ### How to reproduce? A recipe to reproduce can be cooked up if necessary based on https://github.com/cms-sw/cmssw/pull/41344. ### ROOT version. 6.26. ### How did you install ROOT? Part of CMSSW stack. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13035
https://github.com/root-project/root/issues/13035:913,interoperability,messag,message,913,"Make ROOT's automatic class header parsing setting more fine grained.; ### Explain what you would like to see improved. In CMSSW we want to have dictionaries defined explicitly for all classes that are part of I/O. Occasionally some things slip through causing (sometimes?) ROOT to try to auto parse the header of the corresponding class. Many times the auto parsing works (but is not desirable), in some cases it fails with an unhelpful error message (in most cases so far this has been in conjunction with CUDA, by rootcling being unable to write to the `cuda.pcm` that is in cvmfs). With auto parsing disabled, we'd be able to emit an error message pointing to the class whose dictionary is missing. I gave a try on `TInterpreter::SetClassAutoparsing(false)` in https://github.com/cms-sw/cmssw/pull/41344, and while in specific cases I got the desired behavior (of CMSSW framework emitting a descriptive error message for a missing dictionary instead of ROOT trying to auto-parse the corresponding header), the fact that the `SetClassAutoparsing()` is a global setting makes it difficult to disable the auto parsing in a useful way in the concurrent setup of CMSSW. There are a few cases (like open ROOT file, set up a string cut parser that uses ROOT reflection underneath) where the auto-parsing needs to be enabled, and these activities may be running concurrently to activities where I'd like to have the auto-parsing disabled. ### Share how it could be improved. Make the auto parsing setting more fine grained, e.g. explicitly in the relevant API calls or as a `thread_local`. Being able to query the value of the setting could be useful as well. ### How to reproduce? A recipe to reproduce can be cooked up if necessary based on https://github.com/cms-sw/cmssw/pull/41344. ### ROOT version. 6.26. ### How did you install ROOT? Part of CMSSW stack. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13035
https://github.com/root-project/root/issues/13035:1439,interoperability,Share,Share,1439,"Make ROOT's automatic class header parsing setting more fine grained.; ### Explain what you would like to see improved. In CMSSW we want to have dictionaries defined explicitly for all classes that are part of I/O. Occasionally some things slip through causing (sometimes?) ROOT to try to auto parse the header of the corresponding class. Many times the auto parsing works (but is not desirable), in some cases it fails with an unhelpful error message (in most cases so far this has been in conjunction with CUDA, by rootcling being unable to write to the `cuda.pcm` that is in cvmfs). With auto parsing disabled, we'd be able to emit an error message pointing to the class whose dictionary is missing. I gave a try on `TInterpreter::SetClassAutoparsing(false)` in https://github.com/cms-sw/cmssw/pull/41344, and while in specific cases I got the desired behavior (of CMSSW framework emitting a descriptive error message for a missing dictionary instead of ROOT trying to auto-parse the corresponding header), the fact that the `SetClassAutoparsing()` is a global setting makes it difficult to disable the auto parsing in a useful way in the concurrent setup of CMSSW. There are a few cases (like open ROOT file, set up a string cut parser that uses ROOT reflection underneath) where the auto-parsing needs to be enabled, and these activities may be running concurrently to activities where I'd like to have the auto-parsing disabled. ### Share how it could be improved. Make the auto parsing setting more fine grained, e.g. explicitly in the relevant API calls or as a `thread_local`. Being able to query the value of the setting could be useful as well. ### How to reproduce? A recipe to reproduce can be cooked up if necessary based on https://github.com/cms-sw/cmssw/pull/41344. ### ROOT version. 6.26. ### How did you install ROOT? Part of CMSSW stack. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13035
https://github.com/root-project/root/issues/13035:1552,interoperability,API,API,1552,"Make ROOT's automatic class header parsing setting more fine grained.; ### Explain what you would like to see improved. In CMSSW we want to have dictionaries defined explicitly for all classes that are part of I/O. Occasionally some things slip through causing (sometimes?) ROOT to try to auto parse the header of the corresponding class. Many times the auto parsing works (but is not desirable), in some cases it fails with an unhelpful error message (in most cases so far this has been in conjunction with CUDA, by rootcling being unable to write to the `cuda.pcm` that is in cvmfs). With auto parsing disabled, we'd be able to emit an error message pointing to the class whose dictionary is missing. I gave a try on `TInterpreter::SetClassAutoparsing(false)` in https://github.com/cms-sw/cmssw/pull/41344, and while in specific cases I got the desired behavior (of CMSSW framework emitting a descriptive error message for a missing dictionary instead of ROOT trying to auto-parse the corresponding header), the fact that the `SetClassAutoparsing()` is a global setting makes it difficult to disable the auto parsing in a useful way in the concurrent setup of CMSSW. There are a few cases (like open ROOT file, set up a string cut parser that uses ROOT reflection underneath) where the auto-parsing needs to be enabled, and these activities may be running concurrently to activities where I'd like to have the auto-parsing disabled. ### Share how it could be improved. Make the auto parsing setting more fine grained, e.g. explicitly in the relevant API calls or as a `thread_local`. Being able to query the value of the setting could be useful as well. ### How to reproduce? A recipe to reproduce can be cooked up if necessary based on https://github.com/cms-sw/cmssw/pull/41344. ### ROOT version. 6.26. ### How did you install ROOT? Part of CMSSW stack. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13035
https://github.com/root-project/root/issues/13035:1792,modifiability,version,version,1792,"Make ROOT's automatic class header parsing setting more fine grained.; ### Explain what you would like to see improved. In CMSSW we want to have dictionaries defined explicitly for all classes that are part of I/O. Occasionally some things slip through causing (sometimes?) ROOT to try to auto parse the header of the corresponding class. Many times the auto parsing works (but is not desirable), in some cases it fails with an unhelpful error message (in most cases so far this has been in conjunction with CUDA, by rootcling being unable to write to the `cuda.pcm` that is in cvmfs). With auto parsing disabled, we'd be able to emit an error message pointing to the class whose dictionary is missing. I gave a try on `TInterpreter::SetClassAutoparsing(false)` in https://github.com/cms-sw/cmssw/pull/41344, and while in specific cases I got the desired behavior (of CMSSW framework emitting a descriptive error message for a missing dictionary instead of ROOT trying to auto-parse the corresponding header), the fact that the `SetClassAutoparsing()` is a global setting makes it difficult to disable the auto parsing in a useful way in the concurrent setup of CMSSW. There are a few cases (like open ROOT file, set up a string cut parser that uses ROOT reflection underneath) where the auto-parsing needs to be enabled, and these activities may be running concurrently to activities where I'd like to have the auto-parsing disabled. ### Share how it could be improved. Make the auto parsing setting more fine grained, e.g. explicitly in the relevant API calls or as a `thread_local`. Being able to query the value of the setting could be useful as well. ### How to reproduce? A recipe to reproduce can be cooked up if necessary based on https://github.com/cms-sw/cmssw/pull/41344. ### ROOT version. 6.26. ### How did you install ROOT? Part of CMSSW stack. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13035
https://github.com/root-project/root/issues/13035:210,performance,I/O,I/O,210,"Make ROOT's automatic class header parsing setting more fine grained.; ### Explain what you would like to see improved. In CMSSW we want to have dictionaries defined explicitly for all classes that are part of I/O. Occasionally some things slip through causing (sometimes?) ROOT to try to auto parse the header of the corresponding class. Many times the auto parsing works (but is not desirable), in some cases it fails with an unhelpful error message (in most cases so far this has been in conjunction with CUDA, by rootcling being unable to write to the `cuda.pcm` that is in cvmfs). With auto parsing disabled, we'd be able to emit an error message pointing to the class whose dictionary is missing. I gave a try on `TInterpreter::SetClassAutoparsing(false)` in https://github.com/cms-sw/cmssw/pull/41344, and while in specific cases I got the desired behavior (of CMSSW framework emitting a descriptive error message for a missing dictionary instead of ROOT trying to auto-parse the corresponding header), the fact that the `SetClassAutoparsing()` is a global setting makes it difficult to disable the auto parsing in a useful way in the concurrent setup of CMSSW. There are a few cases (like open ROOT file, set up a string cut parser that uses ROOT reflection underneath) where the auto-parsing needs to be enabled, and these activities may be running concurrently to activities where I'd like to have the auto-parsing disabled. ### Share how it could be improved. Make the auto parsing setting more fine grained, e.g. explicitly in the relevant API calls or as a `thread_local`. Being able to query the value of the setting could be useful as well. ### How to reproduce? A recipe to reproduce can be cooked up if necessary based on https://github.com/cms-sw/cmssw/pull/41344. ### ROOT version. 6.26. ### How did you install ROOT? Part of CMSSW stack. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13035
https://github.com/root-project/root/issues/13035:344,performance,time,times,344,"Make ROOT's automatic class header parsing setting more fine grained.; ### Explain what you would like to see improved. In CMSSW we want to have dictionaries defined explicitly for all classes that are part of I/O. Occasionally some things slip through causing (sometimes?) ROOT to try to auto parse the header of the corresponding class. Many times the auto parsing works (but is not desirable), in some cases it fails with an unhelpful error message (in most cases so far this has been in conjunction with CUDA, by rootcling being unable to write to the `cuda.pcm` that is in cvmfs). With auto parsing disabled, we'd be able to emit an error message pointing to the class whose dictionary is missing. I gave a try on `TInterpreter::SetClassAutoparsing(false)` in https://github.com/cms-sw/cmssw/pull/41344, and while in specific cases I got the desired behavior (of CMSSW framework emitting a descriptive error message for a missing dictionary instead of ROOT trying to auto-parse the corresponding header), the fact that the `SetClassAutoparsing()` is a global setting makes it difficult to disable the auto parsing in a useful way in the concurrent setup of CMSSW. There are a few cases (like open ROOT file, set up a string cut parser that uses ROOT reflection underneath) where the auto-parsing needs to be enabled, and these activities may be running concurrently to activities where I'd like to have the auto-parsing disabled. ### Share how it could be improved. Make the auto parsing setting more fine grained, e.g. explicitly in the relevant API calls or as a `thread_local`. Being able to query the value of the setting could be useful as well. ### How to reproduce? A recipe to reproduce can be cooked up if necessary based on https://github.com/cms-sw/cmssw/pull/41344. ### ROOT version. 6.26. ### How did you install ROOT? Part of CMSSW stack. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13035
https://github.com/root-project/root/issues/13035:438,performance,error,error,438,"Make ROOT's automatic class header parsing setting more fine grained.; ### Explain what you would like to see improved. In CMSSW we want to have dictionaries defined explicitly for all classes that are part of I/O. Occasionally some things slip through causing (sometimes?) ROOT to try to auto parse the header of the corresponding class. Many times the auto parsing works (but is not desirable), in some cases it fails with an unhelpful error message (in most cases so far this has been in conjunction with CUDA, by rootcling being unable to write to the `cuda.pcm` that is in cvmfs). With auto parsing disabled, we'd be able to emit an error message pointing to the class whose dictionary is missing. I gave a try on `TInterpreter::SetClassAutoparsing(false)` in https://github.com/cms-sw/cmssw/pull/41344, and while in specific cases I got the desired behavior (of CMSSW framework emitting a descriptive error message for a missing dictionary instead of ROOT trying to auto-parse the corresponding header), the fact that the `SetClassAutoparsing()` is a global setting makes it difficult to disable the auto parsing in a useful way in the concurrent setup of CMSSW. There are a few cases (like open ROOT file, set up a string cut parser that uses ROOT reflection underneath) where the auto-parsing needs to be enabled, and these activities may be running concurrently to activities where I'd like to have the auto-parsing disabled. ### Share how it could be improved. Make the auto parsing setting more fine grained, e.g. explicitly in the relevant API calls or as a `thread_local`. Being able to query the value of the setting could be useful as well. ### How to reproduce? A recipe to reproduce can be cooked up if necessary based on https://github.com/cms-sw/cmssw/pull/41344. ### ROOT version. 6.26. ### How did you install ROOT? Part of CMSSW stack. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13035
https://github.com/root-project/root/issues/13035:638,performance,error,error,638,"Make ROOT's automatic class header parsing setting more fine grained.; ### Explain what you would like to see improved. In CMSSW we want to have dictionaries defined explicitly for all classes that are part of I/O. Occasionally some things slip through causing (sometimes?) ROOT to try to auto parse the header of the corresponding class. Many times the auto parsing works (but is not desirable), in some cases it fails with an unhelpful error message (in most cases so far this has been in conjunction with CUDA, by rootcling being unable to write to the `cuda.pcm` that is in cvmfs). With auto parsing disabled, we'd be able to emit an error message pointing to the class whose dictionary is missing. I gave a try on `TInterpreter::SetClassAutoparsing(false)` in https://github.com/cms-sw/cmssw/pull/41344, and while in specific cases I got the desired behavior (of CMSSW framework emitting a descriptive error message for a missing dictionary instead of ROOT trying to auto-parse the corresponding header), the fact that the `SetClassAutoparsing()` is a global setting makes it difficult to disable the auto parsing in a useful way in the concurrent setup of CMSSW. There are a few cases (like open ROOT file, set up a string cut parser that uses ROOT reflection underneath) where the auto-parsing needs to be enabled, and these activities may be running concurrently to activities where I'd like to have the auto-parsing disabled. ### Share how it could be improved. Make the auto parsing setting more fine grained, e.g. explicitly in the relevant API calls or as a `thread_local`. Being able to query the value of the setting could be useful as well. ### How to reproduce? A recipe to reproduce can be cooked up if necessary based on https://github.com/cms-sw/cmssw/pull/41344. ### ROOT version. 6.26. ### How did you install ROOT? Part of CMSSW stack. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13035
https://github.com/root-project/root/issues/13035:907,performance,error,error,907,"Make ROOT's automatic class header parsing setting more fine grained.; ### Explain what you would like to see improved. In CMSSW we want to have dictionaries defined explicitly for all classes that are part of I/O. Occasionally some things slip through causing (sometimes?) ROOT to try to auto parse the header of the corresponding class. Many times the auto parsing works (but is not desirable), in some cases it fails with an unhelpful error message (in most cases so far this has been in conjunction with CUDA, by rootcling being unable to write to the `cuda.pcm` that is in cvmfs). With auto parsing disabled, we'd be able to emit an error message pointing to the class whose dictionary is missing. I gave a try on `TInterpreter::SetClassAutoparsing(false)` in https://github.com/cms-sw/cmssw/pull/41344, and while in specific cases I got the desired behavior (of CMSSW framework emitting a descriptive error message for a missing dictionary instead of ROOT trying to auto-parse the corresponding header), the fact that the `SetClassAutoparsing()` is a global setting makes it difficult to disable the auto parsing in a useful way in the concurrent setup of CMSSW. There are a few cases (like open ROOT file, set up a string cut parser that uses ROOT reflection underneath) where the auto-parsing needs to be enabled, and these activities may be running concurrently to activities where I'd like to have the auto-parsing disabled. ### Share how it could be improved. Make the auto parsing setting more fine grained, e.g. explicitly in the relevant API calls or as a `thread_local`. Being able to query the value of the setting could be useful as well. ### How to reproduce? A recipe to reproduce can be cooked up if necessary based on https://github.com/cms-sw/cmssw/pull/41344. ### ROOT version. 6.26. ### How did you install ROOT? Part of CMSSW stack. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13035
https://github.com/root-project/root/issues/13035:1142,performance,concurren,concurrent,1142,"Make ROOT's automatic class header parsing setting more fine grained.; ### Explain what you would like to see improved. In CMSSW we want to have dictionaries defined explicitly for all classes that are part of I/O. Occasionally some things slip through causing (sometimes?) ROOT to try to auto parse the header of the corresponding class. Many times the auto parsing works (but is not desirable), in some cases it fails with an unhelpful error message (in most cases so far this has been in conjunction with CUDA, by rootcling being unable to write to the `cuda.pcm` that is in cvmfs). With auto parsing disabled, we'd be able to emit an error message pointing to the class whose dictionary is missing. I gave a try on `TInterpreter::SetClassAutoparsing(false)` in https://github.com/cms-sw/cmssw/pull/41344, and while in specific cases I got the desired behavior (of CMSSW framework emitting a descriptive error message for a missing dictionary instead of ROOT trying to auto-parse the corresponding header), the fact that the `SetClassAutoparsing()` is a global setting makes it difficult to disable the auto parsing in a useful way in the concurrent setup of CMSSW. There are a few cases (like open ROOT file, set up a string cut parser that uses ROOT reflection underneath) where the auto-parsing needs to be enabled, and these activities may be running concurrently to activities where I'd like to have the auto-parsing disabled. ### Share how it could be improved. Make the auto parsing setting more fine grained, e.g. explicitly in the relevant API calls or as a `thread_local`. Being able to query the value of the setting could be useful as well. ### How to reproduce? A recipe to reproduce can be cooked up if necessary based on https://github.com/cms-sw/cmssw/pull/41344. ### ROOT version. 6.26. ### How did you install ROOT? Part of CMSSW stack. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13035
https://github.com/root-project/root/issues/13035:1358,performance,concurren,concurrently,1358,"Make ROOT's automatic class header parsing setting more fine grained.; ### Explain what you would like to see improved. In CMSSW we want to have dictionaries defined explicitly for all classes that are part of I/O. Occasionally some things slip through causing (sometimes?) ROOT to try to auto parse the header of the corresponding class. Many times the auto parsing works (but is not desirable), in some cases it fails with an unhelpful error message (in most cases so far this has been in conjunction with CUDA, by rootcling being unable to write to the `cuda.pcm` that is in cvmfs). With auto parsing disabled, we'd be able to emit an error message pointing to the class whose dictionary is missing. I gave a try on `TInterpreter::SetClassAutoparsing(false)` in https://github.com/cms-sw/cmssw/pull/41344, and while in specific cases I got the desired behavior (of CMSSW framework emitting a descriptive error message for a missing dictionary instead of ROOT trying to auto-parse the corresponding header), the fact that the `SetClassAutoparsing()` is a global setting makes it difficult to disable the auto parsing in a useful way in the concurrent setup of CMSSW. There are a few cases (like open ROOT file, set up a string cut parser that uses ROOT reflection underneath) where the auto-parsing needs to be enabled, and these activities may be running concurrently to activities where I'd like to have the auto-parsing disabled. ### Share how it could be improved. Make the auto parsing setting more fine grained, e.g. explicitly in the relevant API calls or as a `thread_local`. Being able to query the value of the setting could be useful as well. ### How to reproduce? A recipe to reproduce can be cooked up if necessary based on https://github.com/cms-sw/cmssw/pull/41344. ### ROOT version. 6.26. ### How did you install ROOT? Part of CMSSW stack. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13035
https://github.com/root-project/root/issues/13035:240,reliability,sli,slip,240,"Make ROOT's automatic class header parsing setting more fine grained.; ### Explain what you would like to see improved. In CMSSW we want to have dictionaries defined explicitly for all classes that are part of I/O. Occasionally some things slip through causing (sometimes?) ROOT to try to auto parse the header of the corresponding class. Many times the auto parsing works (but is not desirable), in some cases it fails with an unhelpful error message (in most cases so far this has been in conjunction with CUDA, by rootcling being unable to write to the `cuda.pcm` that is in cvmfs). With auto parsing disabled, we'd be able to emit an error message pointing to the class whose dictionary is missing. I gave a try on `TInterpreter::SetClassAutoparsing(false)` in https://github.com/cms-sw/cmssw/pull/41344, and while in specific cases I got the desired behavior (of CMSSW framework emitting a descriptive error message for a missing dictionary instead of ROOT trying to auto-parse the corresponding header), the fact that the `SetClassAutoparsing()` is a global setting makes it difficult to disable the auto parsing in a useful way in the concurrent setup of CMSSW. There are a few cases (like open ROOT file, set up a string cut parser that uses ROOT reflection underneath) where the auto-parsing needs to be enabled, and these activities may be running concurrently to activities where I'd like to have the auto-parsing disabled. ### Share how it could be improved. Make the auto parsing setting more fine grained, e.g. explicitly in the relevant API calls or as a `thread_local`. Being able to query the value of the setting could be useful as well. ### How to reproduce? A recipe to reproduce can be cooked up if necessary based on https://github.com/cms-sw/cmssw/pull/41344. ### ROOT version. 6.26. ### How did you install ROOT? Part of CMSSW stack. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13035
https://github.com/root-project/root/issues/13035:414,reliability,fail,fails,414,"Make ROOT's automatic class header parsing setting more fine grained.; ### Explain what you would like to see improved. In CMSSW we want to have dictionaries defined explicitly for all classes that are part of I/O. Occasionally some things slip through causing (sometimes?) ROOT to try to auto parse the header of the corresponding class. Many times the auto parsing works (but is not desirable), in some cases it fails with an unhelpful error message (in most cases so far this has been in conjunction with CUDA, by rootcling being unable to write to the `cuda.pcm` that is in cvmfs). With auto parsing disabled, we'd be able to emit an error message pointing to the class whose dictionary is missing. I gave a try on `TInterpreter::SetClassAutoparsing(false)` in https://github.com/cms-sw/cmssw/pull/41344, and while in specific cases I got the desired behavior (of CMSSW framework emitting a descriptive error message for a missing dictionary instead of ROOT trying to auto-parse the corresponding header), the fact that the `SetClassAutoparsing()` is a global setting makes it difficult to disable the auto parsing in a useful way in the concurrent setup of CMSSW. There are a few cases (like open ROOT file, set up a string cut parser that uses ROOT reflection underneath) where the auto-parsing needs to be enabled, and these activities may be running concurrently to activities where I'd like to have the auto-parsing disabled. ### Share how it could be improved. Make the auto parsing setting more fine grained, e.g. explicitly in the relevant API calls or as a `thread_local`. Being able to query the value of the setting could be useful as well. ### How to reproduce? A recipe to reproduce can be cooked up if necessary based on https://github.com/cms-sw/cmssw/pull/41344. ### ROOT version. 6.26. ### How did you install ROOT? Part of CMSSW stack. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13035
https://github.com/root-project/root/issues/13035:438,safety,error,error,438,"Make ROOT's automatic class header parsing setting more fine grained.; ### Explain what you would like to see improved. In CMSSW we want to have dictionaries defined explicitly for all classes that are part of I/O. Occasionally some things slip through causing (sometimes?) ROOT to try to auto parse the header of the corresponding class. Many times the auto parsing works (but is not desirable), in some cases it fails with an unhelpful error message (in most cases so far this has been in conjunction with CUDA, by rootcling being unable to write to the `cuda.pcm` that is in cvmfs). With auto parsing disabled, we'd be able to emit an error message pointing to the class whose dictionary is missing. I gave a try on `TInterpreter::SetClassAutoparsing(false)` in https://github.com/cms-sw/cmssw/pull/41344, and while in specific cases I got the desired behavior (of CMSSW framework emitting a descriptive error message for a missing dictionary instead of ROOT trying to auto-parse the corresponding header), the fact that the `SetClassAutoparsing()` is a global setting makes it difficult to disable the auto parsing in a useful way in the concurrent setup of CMSSW. There are a few cases (like open ROOT file, set up a string cut parser that uses ROOT reflection underneath) where the auto-parsing needs to be enabled, and these activities may be running concurrently to activities where I'd like to have the auto-parsing disabled. ### Share how it could be improved. Make the auto parsing setting more fine grained, e.g. explicitly in the relevant API calls or as a `thread_local`. Being able to query the value of the setting could be useful as well. ### How to reproduce? A recipe to reproduce can be cooked up if necessary based on https://github.com/cms-sw/cmssw/pull/41344. ### ROOT version. 6.26. ### How did you install ROOT? Part of CMSSW stack. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13035
https://github.com/root-project/root/issues/13035:638,safety,error,error,638,"Make ROOT's automatic class header parsing setting more fine grained.; ### Explain what you would like to see improved. In CMSSW we want to have dictionaries defined explicitly for all classes that are part of I/O. Occasionally some things slip through causing (sometimes?) ROOT to try to auto parse the header of the corresponding class. Many times the auto parsing works (but is not desirable), in some cases it fails with an unhelpful error message (in most cases so far this has been in conjunction with CUDA, by rootcling being unable to write to the `cuda.pcm` that is in cvmfs). With auto parsing disabled, we'd be able to emit an error message pointing to the class whose dictionary is missing. I gave a try on `TInterpreter::SetClassAutoparsing(false)` in https://github.com/cms-sw/cmssw/pull/41344, and while in specific cases I got the desired behavior (of CMSSW framework emitting a descriptive error message for a missing dictionary instead of ROOT trying to auto-parse the corresponding header), the fact that the `SetClassAutoparsing()` is a global setting makes it difficult to disable the auto parsing in a useful way in the concurrent setup of CMSSW. There are a few cases (like open ROOT file, set up a string cut parser that uses ROOT reflection underneath) where the auto-parsing needs to be enabled, and these activities may be running concurrently to activities where I'd like to have the auto-parsing disabled. ### Share how it could be improved. Make the auto parsing setting more fine grained, e.g. explicitly in the relevant API calls or as a `thread_local`. Being able to query the value of the setting could be useful as well. ### How to reproduce? A recipe to reproduce can be cooked up if necessary based on https://github.com/cms-sw/cmssw/pull/41344. ### ROOT version. 6.26. ### How did you install ROOT? Part of CMSSW stack. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13035
https://github.com/root-project/root/issues/13035:907,safety,error,error,907,"Make ROOT's automatic class header parsing setting more fine grained.; ### Explain what you would like to see improved. In CMSSW we want to have dictionaries defined explicitly for all classes that are part of I/O. Occasionally some things slip through causing (sometimes?) ROOT to try to auto parse the header of the corresponding class. Many times the auto parsing works (but is not desirable), in some cases it fails with an unhelpful error message (in most cases so far this has been in conjunction with CUDA, by rootcling being unable to write to the `cuda.pcm` that is in cvmfs). With auto parsing disabled, we'd be able to emit an error message pointing to the class whose dictionary is missing. I gave a try on `TInterpreter::SetClassAutoparsing(false)` in https://github.com/cms-sw/cmssw/pull/41344, and while in specific cases I got the desired behavior (of CMSSW framework emitting a descriptive error message for a missing dictionary instead of ROOT trying to auto-parse the corresponding header), the fact that the `SetClassAutoparsing()` is a global setting makes it difficult to disable the auto parsing in a useful way in the concurrent setup of CMSSW. There are a few cases (like open ROOT file, set up a string cut parser that uses ROOT reflection underneath) where the auto-parsing needs to be enabled, and these activities may be running concurrently to activities where I'd like to have the auto-parsing disabled. ### Share how it could be improved. Make the auto parsing setting more fine grained, e.g. explicitly in the relevant API calls or as a `thread_local`. Being able to query the value of the setting could be useful as well. ### How to reproduce? A recipe to reproduce can be cooked up if necessary based on https://github.com/cms-sw/cmssw/pull/41344. ### ROOT version. 6.26. ### How did you install ROOT? Part of CMSSW stack. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13035
https://github.com/root-project/root/issues/13035:12,testability,automat,automatic,12,"Make ROOT's automatic class header parsing setting more fine grained.; ### Explain what you would like to see improved. In CMSSW we want to have dictionaries defined explicitly for all classes that are part of I/O. Occasionally some things slip through causing (sometimes?) ROOT to try to auto parse the header of the corresponding class. Many times the auto parsing works (but is not desirable), in some cases it fails with an unhelpful error message (in most cases so far this has been in conjunction with CUDA, by rootcling being unable to write to the `cuda.pcm` that is in cvmfs). With auto parsing disabled, we'd be able to emit an error message pointing to the class whose dictionary is missing. I gave a try on `TInterpreter::SetClassAutoparsing(false)` in https://github.com/cms-sw/cmssw/pull/41344, and while in specific cases I got the desired behavior (of CMSSW framework emitting a descriptive error message for a missing dictionary instead of ROOT trying to auto-parse the corresponding header), the fact that the `SetClassAutoparsing()` is a global setting makes it difficult to disable the auto parsing in a useful way in the concurrent setup of CMSSW. There are a few cases (like open ROOT file, set up a string cut parser that uses ROOT reflection underneath) where the auto-parsing needs to be enabled, and these activities may be running concurrently to activities where I'd like to have the auto-parsing disabled. ### Share how it could be improved. Make the auto parsing setting more fine grained, e.g. explicitly in the relevant API calls or as a `thread_local`. Being able to query the value of the setting could be useful as well. ### How to reproduce? A recipe to reproduce can be cooked up if necessary based on https://github.com/cms-sw/cmssw/pull/41344. ### ROOT version. 6.26. ### How did you install ROOT? Part of CMSSW stack. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13035
https://github.com/root-project/root/issues/13035:1922,testability,context,context,1922,"Make ROOT's automatic class header parsing setting more fine grained.; ### Explain what you would like to see improved. In CMSSW we want to have dictionaries defined explicitly for all classes that are part of I/O. Occasionally some things slip through causing (sometimes?) ROOT to try to auto parse the header of the corresponding class. Many times the auto parsing works (but is not desirable), in some cases it fails with an unhelpful error message (in most cases so far this has been in conjunction with CUDA, by rootcling being unable to write to the `cuda.pcm` that is in cvmfs). With auto parsing disabled, we'd be able to emit an error message pointing to the class whose dictionary is missing. I gave a try on `TInterpreter::SetClassAutoparsing(false)` in https://github.com/cms-sw/cmssw/pull/41344, and while in specific cases I got the desired behavior (of CMSSW framework emitting a descriptive error message for a missing dictionary instead of ROOT trying to auto-parse the corresponding header), the fact that the `SetClassAutoparsing()` is a global setting makes it difficult to disable the auto parsing in a useful way in the concurrent setup of CMSSW. There are a few cases (like open ROOT file, set up a string cut parser that uses ROOT reflection underneath) where the auto-parsing needs to be enabled, and these activities may be running concurrently to activities where I'd like to have the auto-parsing disabled. ### Share how it could be improved. Make the auto parsing setting more fine grained, e.g. explicitly in the relevant API calls or as a `thread_local`. Being able to query the value of the setting could be useful as well. ### How to reproduce? A recipe to reproduce can be cooked up if necessary based on https://github.com/cms-sw/cmssw/pull/41344. ### ROOT version. 6.26. ### How did you install ROOT? Part of CMSSW stack. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13035
https://github.com/root-project/root/issues/13035:438,usability,error,error,438,"Make ROOT's automatic class header parsing setting more fine grained.; ### Explain what you would like to see improved. In CMSSW we want to have dictionaries defined explicitly for all classes that are part of I/O. Occasionally some things slip through causing (sometimes?) ROOT to try to auto parse the header of the corresponding class. Many times the auto parsing works (but is not desirable), in some cases it fails with an unhelpful error message (in most cases so far this has been in conjunction with CUDA, by rootcling being unable to write to the `cuda.pcm` that is in cvmfs). With auto parsing disabled, we'd be able to emit an error message pointing to the class whose dictionary is missing. I gave a try on `TInterpreter::SetClassAutoparsing(false)` in https://github.com/cms-sw/cmssw/pull/41344, and while in specific cases I got the desired behavior (of CMSSW framework emitting a descriptive error message for a missing dictionary instead of ROOT trying to auto-parse the corresponding header), the fact that the `SetClassAutoparsing()` is a global setting makes it difficult to disable the auto parsing in a useful way in the concurrent setup of CMSSW. There are a few cases (like open ROOT file, set up a string cut parser that uses ROOT reflection underneath) where the auto-parsing needs to be enabled, and these activities may be running concurrently to activities where I'd like to have the auto-parsing disabled. ### Share how it could be improved. Make the auto parsing setting more fine grained, e.g. explicitly in the relevant API calls or as a `thread_local`. Being able to query the value of the setting could be useful as well. ### How to reproduce? A recipe to reproduce can be cooked up if necessary based on https://github.com/cms-sw/cmssw/pull/41344. ### ROOT version. 6.26. ### How did you install ROOT? Part of CMSSW stack. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13035
https://github.com/root-project/root/issues/13035:638,usability,error,error,638,"Make ROOT's automatic class header parsing setting more fine grained.; ### Explain what you would like to see improved. In CMSSW we want to have dictionaries defined explicitly for all classes that are part of I/O. Occasionally some things slip through causing (sometimes?) ROOT to try to auto parse the header of the corresponding class. Many times the auto parsing works (but is not desirable), in some cases it fails with an unhelpful error message (in most cases so far this has been in conjunction with CUDA, by rootcling being unable to write to the `cuda.pcm` that is in cvmfs). With auto parsing disabled, we'd be able to emit an error message pointing to the class whose dictionary is missing. I gave a try on `TInterpreter::SetClassAutoparsing(false)` in https://github.com/cms-sw/cmssw/pull/41344, and while in specific cases I got the desired behavior (of CMSSW framework emitting a descriptive error message for a missing dictionary instead of ROOT trying to auto-parse the corresponding header), the fact that the `SetClassAutoparsing()` is a global setting makes it difficult to disable the auto parsing in a useful way in the concurrent setup of CMSSW. There are a few cases (like open ROOT file, set up a string cut parser that uses ROOT reflection underneath) where the auto-parsing needs to be enabled, and these activities may be running concurrently to activities where I'd like to have the auto-parsing disabled. ### Share how it could be improved. Make the auto parsing setting more fine grained, e.g. explicitly in the relevant API calls or as a `thread_local`. Being able to query the value of the setting could be useful as well. ### How to reproduce? A recipe to reproduce can be cooked up if necessary based on https://github.com/cms-sw/cmssw/pull/41344. ### ROOT version. 6.26. ### How did you install ROOT? Part of CMSSW stack. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13035
https://github.com/root-project/root/issues/13035:855,usability,behavi,behavior,855,"Make ROOT's automatic class header parsing setting more fine grained.; ### Explain what you would like to see improved. In CMSSW we want to have dictionaries defined explicitly for all classes that are part of I/O. Occasionally some things slip through causing (sometimes?) ROOT to try to auto parse the header of the corresponding class. Many times the auto parsing works (but is not desirable), in some cases it fails with an unhelpful error message (in most cases so far this has been in conjunction with CUDA, by rootcling being unable to write to the `cuda.pcm` that is in cvmfs). With auto parsing disabled, we'd be able to emit an error message pointing to the class whose dictionary is missing. I gave a try on `TInterpreter::SetClassAutoparsing(false)` in https://github.com/cms-sw/cmssw/pull/41344, and while in specific cases I got the desired behavior (of CMSSW framework emitting a descriptive error message for a missing dictionary instead of ROOT trying to auto-parse the corresponding header), the fact that the `SetClassAutoparsing()` is a global setting makes it difficult to disable the auto parsing in a useful way in the concurrent setup of CMSSW. There are a few cases (like open ROOT file, set up a string cut parser that uses ROOT reflection underneath) where the auto-parsing needs to be enabled, and these activities may be running concurrently to activities where I'd like to have the auto-parsing disabled. ### Share how it could be improved. Make the auto parsing setting more fine grained, e.g. explicitly in the relevant API calls or as a `thread_local`. Being able to query the value of the setting could be useful as well. ### How to reproduce? A recipe to reproduce can be cooked up if necessary based on https://github.com/cms-sw/cmssw/pull/41344. ### ROOT version. 6.26. ### How did you install ROOT? Part of CMSSW stack. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13035
https://github.com/root-project/root/issues/13035:907,usability,error,error,907,"Make ROOT's automatic class header parsing setting more fine grained.; ### Explain what you would like to see improved. In CMSSW we want to have dictionaries defined explicitly for all classes that are part of I/O. Occasionally some things slip through causing (sometimes?) ROOT to try to auto parse the header of the corresponding class. Many times the auto parsing works (but is not desirable), in some cases it fails with an unhelpful error message (in most cases so far this has been in conjunction with CUDA, by rootcling being unable to write to the `cuda.pcm` that is in cvmfs). With auto parsing disabled, we'd be able to emit an error message pointing to the class whose dictionary is missing. I gave a try on `TInterpreter::SetClassAutoparsing(false)` in https://github.com/cms-sw/cmssw/pull/41344, and while in specific cases I got the desired behavior (of CMSSW framework emitting a descriptive error message for a missing dictionary instead of ROOT trying to auto-parse the corresponding header), the fact that the `SetClassAutoparsing()` is a global setting makes it difficult to disable the auto parsing in a useful way in the concurrent setup of CMSSW. There are a few cases (like open ROOT file, set up a string cut parser that uses ROOT reflection underneath) where the auto-parsing needs to be enabled, and these activities may be running concurrently to activities where I'd like to have the auto-parsing disabled. ### Share how it could be improved. Make the auto parsing setting more fine grained, e.g. explicitly in the relevant API calls or as a `thread_local`. Being able to query the value of the setting could be useful as well. ### How to reproduce? A recipe to reproduce can be cooked up if necessary based on https://github.com/cms-sw/cmssw/pull/41344. ### ROOT version. 6.26. ### How did you install ROOT? Part of CMSSW stack. ### Which operating system are you using? Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13035
https://github.com/root-project/root/issues/13037:1241,availability,operat,operating,1241,"[DF] FromSpec: parsing of the JSON file is done according to the alphabetical ordering of the main keys ; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. During parsing of the JSON file, the main keys ""samples"", are parsed in an alphabetical order. . For example, while parsing the JSON file: . '{. ""samples"": {. ""B"": {. ""trees"": [""subTree""],. ""files"": [""TestFileB.root""]. },. ""A"": {. ""trees"": [""subTree""],. ""files"": [""TestFileA.root""]. }. }. }'. the sample's A:`TestFileA.root` file will be accessed first, even though sample's B file should be accessed first according to the nominal ordering. The alphabetical ordering can lead to problems while the RDataFrame of interest has friend trees as the friend trees need to be aligned with the main TChain. . ### What is the expected behaviour? The keys of the JSON file should be parsed according to the nominal ordering of the JSON file (non-alphabetical). . ### How to reproduce? [JSON_ordering_issue.zip](https://github.com/root-project/root/files/11769777/JSON_ordering_issue.zip). Run `fromspec_ordering.py` with `spec.json`. . The output is `TestFileA.root` before `TestFileB.root`. ### ROOT version. 6.28. ### How did you install ROOT? source. ### Which operating system are you using? MacOS 13. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13037
https://github.com/root-project/root/issues/13037:1178,deployability,version,version,1178,"[DF] FromSpec: parsing of the JSON file is done according to the alphabetical ordering of the main keys ; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. During parsing of the JSON file, the main keys ""samples"", are parsed in an alphabetical order. . For example, while parsing the JSON file: . '{. ""samples"": {. ""B"": {. ""trees"": [""subTree""],. ""files"": [""TestFileB.root""]. },. ""A"": {. ""trees"": [""subTree""],. ""files"": [""TestFileA.root""]. }. }. }'. the sample's A:`TestFileA.root` file will be accessed first, even though sample's B file should be accessed first according to the nominal ordering. The alphabetical ordering can lead to problems while the RDataFrame of interest has friend trees as the friend trees need to be aligned with the main TChain. . ### What is the expected behaviour? The keys of the JSON file should be parsed according to the nominal ordering of the JSON file (non-alphabetical). . ### How to reproduce? [JSON_ordering_issue.zip](https://github.com/root-project/root/files/11769777/JSON_ordering_issue.zip). Run `fromspec_ordering.py` with `spec.json`. . The output is `TestFileA.root` before `TestFileB.root`. ### ROOT version. 6.28. ### How did you install ROOT? source. ### Which operating system are you using? MacOS 13. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13037
https://github.com/root-project/root/issues/13037:1209,deployability,instal,install,1209,"[DF] FromSpec: parsing of the JSON file is done according to the alphabetical ordering of the main keys ; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. During parsing of the JSON file, the main keys ""samples"", are parsed in an alphabetical order. . For example, while parsing the JSON file: . '{. ""samples"": {. ""B"": {. ""trees"": [""subTree""],. ""files"": [""TestFileB.root""]. },. ""A"": {. ""trees"": [""subTree""],. ""files"": [""TestFileA.root""]. }. }. }'. the sample's A:`TestFileA.root` file will be accessed first, even though sample's B file should be accessed first according to the nominal ordering. The alphabetical ordering can lead to problems while the RDataFrame of interest has friend trees as the friend trees need to be aligned with the main TChain. . ### What is the expected behaviour? The keys of the JSON file should be parsed according to the nominal ordering of the JSON file (non-alphabetical). . ### How to reproduce? [JSON_ordering_issue.zip](https://github.com/root-project/root/files/11769777/JSON_ordering_issue.zip). Run `fromspec_ordering.py` with `spec.json`. . The output is `TestFileA.root` before `TestFileB.root`. ### ROOT version. 6.28. ### How did you install ROOT? source. ### Which operating system are you using? MacOS 13. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13037
https://github.com/root-project/root/issues/13037:364,integrability,sub,subTree,364,"[DF] FromSpec: parsing of the JSON file is done according to the alphabetical ordering of the main keys ; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. During parsing of the JSON file, the main keys ""samples"", are parsed in an alphabetical order. . For example, while parsing the JSON file: . '{. ""samples"": {. ""B"": {. ""trees"": [""subTree""],. ""files"": [""TestFileB.root""]. },. ""A"": {. ""trees"": [""subTree""],. ""files"": [""TestFileA.root""]. }. }. }'. the sample's A:`TestFileA.root` file will be accessed first, even though sample's B file should be accessed first according to the nominal ordering. The alphabetical ordering can lead to problems while the RDataFrame of interest has friend trees as the friend trees need to be aligned with the main TChain. . ### What is the expected behaviour? The keys of the JSON file should be parsed according to the nominal ordering of the JSON file (non-alphabetical). . ### How to reproduce? [JSON_ordering_issue.zip](https://github.com/root-project/root/files/11769777/JSON_ordering_issue.zip). Run `fromspec_ordering.py` with `spec.json`. . The output is `TestFileA.root` before `TestFileB.root`. ### ROOT version. 6.28. ### How did you install ROOT? source. ### Which operating system are you using? MacOS 13. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13037
https://github.com/root-project/root/issues/13037:428,integrability,sub,subTree,428,"[DF] FromSpec: parsing of the JSON file is done according to the alphabetical ordering of the main keys ; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. During parsing of the JSON file, the main keys ""samples"", are parsed in an alphabetical order. . For example, while parsing the JSON file: . '{. ""samples"": {. ""B"": {. ""trees"": [""subTree""],. ""files"": [""TestFileB.root""]. },. ""A"": {. ""trees"": [""subTree""],. ""files"": [""TestFileA.root""]. }. }. }'. the sample's A:`TestFileA.root` file will be accessed first, even though sample's B file should be accessed first according to the nominal ordering. The alphabetical ordering can lead to problems while the RDataFrame of interest has friend trees as the friend trees need to be aligned with the main TChain. . ### What is the expected behaviour? The keys of the JSON file should be parsed according to the nominal ordering of the JSON file (non-alphabetical). . ### How to reproduce? [JSON_ordering_issue.zip](https://github.com/root-project/root/files/11769777/JSON_ordering_issue.zip). Run `fromspec_ordering.py` with `spec.json`. . The output is `TestFileA.root` before `TestFileB.root`. ### ROOT version. 6.28. ### How did you install ROOT? source. ### Which operating system are you using? MacOS 13. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13037
https://github.com/root-project/root/issues/13037:1178,integrability,version,version,1178,"[DF] FromSpec: parsing of the JSON file is done according to the alphabetical ordering of the main keys ; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. During parsing of the JSON file, the main keys ""samples"", are parsed in an alphabetical order. . For example, while parsing the JSON file: . '{. ""samples"": {. ""B"": {. ""trees"": [""subTree""],. ""files"": [""TestFileB.root""]. },. ""A"": {. ""trees"": [""subTree""],. ""files"": [""TestFileA.root""]. }. }. }'. the sample's A:`TestFileA.root` file will be accessed first, even though sample's B file should be accessed first according to the nominal ordering. The alphabetical ordering can lead to problems while the RDataFrame of interest has friend trees as the friend trees need to be aligned with the main TChain. . ### What is the expected behaviour? The keys of the JSON file should be parsed according to the nominal ordering of the JSON file (non-alphabetical). . ### How to reproduce? [JSON_ordering_issue.zip](https://github.com/root-project/root/files/11769777/JSON_ordering_issue.zip). Run `fromspec_ordering.py` with `spec.json`. . The output is `TestFileA.root` before `TestFileB.root`. ### ROOT version. 6.28. ### How did you install ROOT? source. ### Which operating system are you using? MacOS 13. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13037
https://github.com/root-project/root/issues/13037:1178,modifiability,version,version,1178,"[DF] FromSpec: parsing of the JSON file is done according to the alphabetical ordering of the main keys ; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. During parsing of the JSON file, the main keys ""samples"", are parsed in an alphabetical order. . For example, while parsing the JSON file: . '{. ""samples"": {. ""B"": {. ""trees"": [""subTree""],. ""files"": [""TestFileB.root""]. },. ""A"": {. ""trees"": [""subTree""],. ""files"": [""TestFileA.root""]. }. }. }'. the sample's A:`TestFileA.root` file will be accessed first, even though sample's B file should be accessed first according to the nominal ordering. The alphabetical ordering can lead to problems while the RDataFrame of interest has friend trees as the friend trees need to be aligned with the main TChain. . ### What is the expected behaviour? The keys of the JSON file should be parsed according to the nominal ordering of the JSON file (non-alphabetical). . ### How to reproduce? [JSON_ordering_issue.zip](https://github.com/root-project/root/files/11769777/JSON_ordering_issue.zip). Run `fromspec_ordering.py` with `spec.json`. . The output is `TestFileA.root` before `TestFileB.root`. ### ROOT version. 6.28. ### How did you install ROOT? source. ### Which operating system are you using? MacOS 13. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13037
https://github.com/root-project/root/issues/13037:387,safety,Test,TestFileB,387,"[DF] FromSpec: parsing of the JSON file is done according to the alphabetical ordering of the main keys ; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. During parsing of the JSON file, the main keys ""samples"", are parsed in an alphabetical order. . For example, while parsing the JSON file: . '{. ""samples"": {. ""B"": {. ""trees"": [""subTree""],. ""files"": [""TestFileB.root""]. },. ""A"": {. ""trees"": [""subTree""],. ""files"": [""TestFileA.root""]. }. }. }'. the sample's A:`TestFileA.root` file will be accessed first, even though sample's B file should be accessed first according to the nominal ordering. The alphabetical ordering can lead to problems while the RDataFrame of interest has friend trees as the friend trees need to be aligned with the main TChain. . ### What is the expected behaviour? The keys of the JSON file should be parsed according to the nominal ordering of the JSON file (non-alphabetical). . ### How to reproduce? [JSON_ordering_issue.zip](https://github.com/root-project/root/files/11769777/JSON_ordering_issue.zip). Run `fromspec_ordering.py` with `spec.json`. . The output is `TestFileA.root` before `TestFileB.root`. ### ROOT version. 6.28. ### How did you install ROOT? source. ### Which operating system are you using? MacOS 13. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13037
https://github.com/root-project/root/issues/13037:451,safety,Test,TestFileA,451,"[DF] FromSpec: parsing of the JSON file is done according to the alphabetical ordering of the main keys ; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. During parsing of the JSON file, the main keys ""samples"", are parsed in an alphabetical order. . For example, while parsing the JSON file: . '{. ""samples"": {. ""B"": {. ""trees"": [""subTree""],. ""files"": [""TestFileB.root""]. },. ""A"": {. ""trees"": [""subTree""],. ""files"": [""TestFileA.root""]. }. }. }'. the sample's A:`TestFileA.root` file will be accessed first, even though sample's B file should be accessed first according to the nominal ordering. The alphabetical ordering can lead to problems while the RDataFrame of interest has friend trees as the friend trees need to be aligned with the main TChain. . ### What is the expected behaviour? The keys of the JSON file should be parsed according to the nominal ordering of the JSON file (non-alphabetical). . ### How to reproduce? [JSON_ordering_issue.zip](https://github.com/root-project/root/files/11769777/JSON_ordering_issue.zip). Run `fromspec_ordering.py` with `spec.json`. . The output is `TestFileA.root` before `TestFileB.root`. ### ROOT version. 6.28. ### How did you install ROOT? source. ### Which operating system are you using? MacOS 13. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13037
https://github.com/root-project/root/issues/13037:495,safety,Test,TestFileA,495,"[DF] FromSpec: parsing of the JSON file is done according to the alphabetical ordering of the main keys ; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. During parsing of the JSON file, the main keys ""samples"", are parsed in an alphabetical order. . For example, while parsing the JSON file: . '{. ""samples"": {. ""B"": {. ""trees"": [""subTree""],. ""files"": [""TestFileB.root""]. },. ""A"": {. ""trees"": [""subTree""],. ""files"": [""TestFileA.root""]. }. }. }'. the sample's A:`TestFileA.root` file will be accessed first, even though sample's B file should be accessed first according to the nominal ordering. The alphabetical ordering can lead to problems while the RDataFrame of interest has friend trees as the friend trees need to be aligned with the main TChain. . ### What is the expected behaviour? The keys of the JSON file should be parsed according to the nominal ordering of the JSON file (non-alphabetical). . ### How to reproduce? [JSON_ordering_issue.zip](https://github.com/root-project/root/files/11769777/JSON_ordering_issue.zip). Run `fromspec_ordering.py` with `spec.json`. . The output is `TestFileA.root` before `TestFileB.root`. ### ROOT version. 6.28. ### How did you install ROOT? source. ### Which operating system are you using? MacOS 13. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13037
https://github.com/root-project/root/issues/13037:1128,safety,Test,TestFileA,1128,"[DF] FromSpec: parsing of the JSON file is done according to the alphabetical ordering of the main keys ; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. During parsing of the JSON file, the main keys ""samples"", are parsed in an alphabetical order. . For example, while parsing the JSON file: . '{. ""samples"": {. ""B"": {. ""trees"": [""subTree""],. ""files"": [""TestFileB.root""]. },. ""A"": {. ""trees"": [""subTree""],. ""files"": [""TestFileA.root""]. }. }. }'. the sample's A:`TestFileA.root` file will be accessed first, even though sample's B file should be accessed first according to the nominal ordering. The alphabetical ordering can lead to problems while the RDataFrame of interest has friend trees as the friend trees need to be aligned with the main TChain. . ### What is the expected behaviour? The keys of the JSON file should be parsed according to the nominal ordering of the JSON file (non-alphabetical). . ### How to reproduce? [JSON_ordering_issue.zip](https://github.com/root-project/root/files/11769777/JSON_ordering_issue.zip). Run `fromspec_ordering.py` with `spec.json`. . The output is `TestFileA.root` before `TestFileB.root`. ### ROOT version. 6.28. ### How did you install ROOT? source. ### Which operating system are you using? MacOS 13. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13037
https://github.com/root-project/root/issues/13037:1152,safety,Test,TestFileB,1152,"[DF] FromSpec: parsing of the JSON file is done according to the alphabetical ordering of the main keys ; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. During parsing of the JSON file, the main keys ""samples"", are parsed in an alphabetical order. . For example, while parsing the JSON file: . '{. ""samples"": {. ""B"": {. ""trees"": [""subTree""],. ""files"": [""TestFileB.root""]. },. ""A"": {. ""trees"": [""subTree""],. ""files"": [""TestFileA.root""]. }. }. }'. the sample's A:`TestFileA.root` file will be accessed first, even though sample's B file should be accessed first according to the nominal ordering. The alphabetical ordering can lead to problems while the RDataFrame of interest has friend trees as the friend trees need to be aligned with the main TChain. . ### What is the expected behaviour? The keys of the JSON file should be parsed according to the nominal ordering of the JSON file (non-alphabetical). . ### How to reproduce? [JSON_ordering_issue.zip](https://github.com/root-project/root/files/11769777/JSON_ordering_issue.zip). Run `fromspec_ordering.py` with `spec.json`. . The output is `TestFileA.root` before `TestFileB.root`. ### ROOT version. 6.28. ### How did you install ROOT? source. ### Which operating system are you using? MacOS 13. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13037
https://github.com/root-project/root/issues/13037:524,security,access,accessed,524,"[DF] FromSpec: parsing of the JSON file is done according to the alphabetical ordering of the main keys ; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. During parsing of the JSON file, the main keys ""samples"", are parsed in an alphabetical order. . For example, while parsing the JSON file: . '{. ""samples"": {. ""B"": {. ""trees"": [""subTree""],. ""files"": [""TestFileB.root""]. },. ""A"": {. ""trees"": [""subTree""],. ""files"": [""TestFileA.root""]. }. }. }'. the sample's A:`TestFileA.root` file will be accessed first, even though sample's B file should be accessed first according to the nominal ordering. The alphabetical ordering can lead to problems while the RDataFrame of interest has friend trees as the friend trees need to be aligned with the main TChain. . ### What is the expected behaviour? The keys of the JSON file should be parsed according to the nominal ordering of the JSON file (non-alphabetical). . ### How to reproduce? [JSON_ordering_issue.zip](https://github.com/root-project/root/files/11769777/JSON_ordering_issue.zip). Run `fromspec_ordering.py` with `spec.json`. . The output is `TestFileA.root` before `TestFileB.root`. ### ROOT version. 6.28. ### How did you install ROOT? source. ### Which operating system are you using? MacOS 13. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13037
https://github.com/root-project/root/issues/13037:578,security,access,accessed,578,"[DF] FromSpec: parsing of the JSON file is done according to the alphabetical ordering of the main keys ; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. During parsing of the JSON file, the main keys ""samples"", are parsed in an alphabetical order. . For example, while parsing the JSON file: . '{. ""samples"": {. ""B"": {. ""trees"": [""subTree""],. ""files"": [""TestFileB.root""]. },. ""A"": {. ""trees"": [""subTree""],. ""files"": [""TestFileA.root""]. }. }. }'. the sample's A:`TestFileA.root` file will be accessed first, even though sample's B file should be accessed first according to the nominal ordering. The alphabetical ordering can lead to problems while the RDataFrame of interest has friend trees as the friend trees need to be aligned with the main TChain. . ### What is the expected behaviour? The keys of the JSON file should be parsed according to the nominal ordering of the JSON file (non-alphabetical). . ### How to reproduce? [JSON_ordering_issue.zip](https://github.com/root-project/root/files/11769777/JSON_ordering_issue.zip). Run `fromspec_ordering.py` with `spec.json`. . The output is `TestFileA.root` before `TestFileB.root`. ### ROOT version. 6.28. ### How did you install ROOT? source. ### Which operating system are you using? MacOS 13. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13037
https://github.com/root-project/root/issues/13037:387,testability,Test,TestFileB,387,"[DF] FromSpec: parsing of the JSON file is done according to the alphabetical ordering of the main keys ; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. During parsing of the JSON file, the main keys ""samples"", are parsed in an alphabetical order. . For example, while parsing the JSON file: . '{. ""samples"": {. ""B"": {. ""trees"": [""subTree""],. ""files"": [""TestFileB.root""]. },. ""A"": {. ""trees"": [""subTree""],. ""files"": [""TestFileA.root""]. }. }. }'. the sample's A:`TestFileA.root` file will be accessed first, even though sample's B file should be accessed first according to the nominal ordering. The alphabetical ordering can lead to problems while the RDataFrame of interest has friend trees as the friend trees need to be aligned with the main TChain. . ### What is the expected behaviour? The keys of the JSON file should be parsed according to the nominal ordering of the JSON file (non-alphabetical). . ### How to reproduce? [JSON_ordering_issue.zip](https://github.com/root-project/root/files/11769777/JSON_ordering_issue.zip). Run `fromspec_ordering.py` with `spec.json`. . The output is `TestFileA.root` before `TestFileB.root`. ### ROOT version. 6.28. ### How did you install ROOT? source. ### Which operating system are you using? MacOS 13. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13037
https://github.com/root-project/root/issues/13037:451,testability,Test,TestFileA,451,"[DF] FromSpec: parsing of the JSON file is done according to the alphabetical ordering of the main keys ; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. During parsing of the JSON file, the main keys ""samples"", are parsed in an alphabetical order. . For example, while parsing the JSON file: . '{. ""samples"": {. ""B"": {. ""trees"": [""subTree""],. ""files"": [""TestFileB.root""]. },. ""A"": {. ""trees"": [""subTree""],. ""files"": [""TestFileA.root""]. }. }. }'. the sample's A:`TestFileA.root` file will be accessed first, even though sample's B file should be accessed first according to the nominal ordering. The alphabetical ordering can lead to problems while the RDataFrame of interest has friend trees as the friend trees need to be aligned with the main TChain. . ### What is the expected behaviour? The keys of the JSON file should be parsed according to the nominal ordering of the JSON file (non-alphabetical). . ### How to reproduce? [JSON_ordering_issue.zip](https://github.com/root-project/root/files/11769777/JSON_ordering_issue.zip). Run `fromspec_ordering.py` with `spec.json`. . The output is `TestFileA.root` before `TestFileB.root`. ### ROOT version. 6.28. ### How did you install ROOT? source. ### Which operating system are you using? MacOS 13. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13037
https://github.com/root-project/root/issues/13037:495,testability,Test,TestFileA,495,"[DF] FromSpec: parsing of the JSON file is done according to the alphabetical ordering of the main keys ; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. During parsing of the JSON file, the main keys ""samples"", are parsed in an alphabetical order. . For example, while parsing the JSON file: . '{. ""samples"": {. ""B"": {. ""trees"": [""subTree""],. ""files"": [""TestFileB.root""]. },. ""A"": {. ""trees"": [""subTree""],. ""files"": [""TestFileA.root""]. }. }. }'. the sample's A:`TestFileA.root` file will be accessed first, even though sample's B file should be accessed first according to the nominal ordering. The alphabetical ordering can lead to problems while the RDataFrame of interest has friend trees as the friend trees need to be aligned with the main TChain. . ### What is the expected behaviour? The keys of the JSON file should be parsed according to the nominal ordering of the JSON file (non-alphabetical). . ### How to reproduce? [JSON_ordering_issue.zip](https://github.com/root-project/root/files/11769777/JSON_ordering_issue.zip). Run `fromspec_ordering.py` with `spec.json`. . The output is `TestFileA.root` before `TestFileB.root`. ### ROOT version. 6.28. ### How did you install ROOT? source. ### Which operating system are you using? MacOS 13. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13037
https://github.com/root-project/root/issues/13037:1128,testability,Test,TestFileA,1128,"[DF] FromSpec: parsing of the JSON file is done according to the alphabetical ordering of the main keys ; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. During parsing of the JSON file, the main keys ""samples"", are parsed in an alphabetical order. . For example, while parsing the JSON file: . '{. ""samples"": {. ""B"": {. ""trees"": [""subTree""],. ""files"": [""TestFileB.root""]. },. ""A"": {. ""trees"": [""subTree""],. ""files"": [""TestFileA.root""]. }. }. }'. the sample's A:`TestFileA.root` file will be accessed first, even though sample's B file should be accessed first according to the nominal ordering. The alphabetical ordering can lead to problems while the RDataFrame of interest has friend trees as the friend trees need to be aligned with the main TChain. . ### What is the expected behaviour? The keys of the JSON file should be parsed according to the nominal ordering of the JSON file (non-alphabetical). . ### How to reproduce? [JSON_ordering_issue.zip](https://github.com/root-project/root/files/11769777/JSON_ordering_issue.zip). Run `fromspec_ordering.py` with `spec.json`. . The output is `TestFileA.root` before `TestFileB.root`. ### ROOT version. 6.28. ### How did you install ROOT? source. ### Which operating system are you using? MacOS 13. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13037
https://github.com/root-project/root/issues/13037:1152,testability,Test,TestFileB,1152,"[DF] FromSpec: parsing of the JSON file is done according to the alphabetical ordering of the main keys ; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. During parsing of the JSON file, the main keys ""samples"", are parsed in an alphabetical order. . For example, while parsing the JSON file: . '{. ""samples"": {. ""B"": {. ""trees"": [""subTree""],. ""files"": [""TestFileB.root""]. },. ""A"": {. ""trees"": [""subTree""],. ""files"": [""TestFileA.root""]. }. }. }'. the sample's A:`TestFileA.root` file will be accessed first, even though sample's B file should be accessed first according to the nominal ordering. The alphabetical ordering can lead to problems while the RDataFrame of interest has friend trees as the friend trees need to be aligned with the main TChain. . ### What is the expected behaviour? The keys of the JSON file should be parsed according to the nominal ordering of the JSON file (non-alphabetical). . ### How to reproduce? [JSON_ordering_issue.zip](https://github.com/root-project/root/files/11769777/JSON_ordering_issue.zip). Run `fromspec_ordering.py` with `spec.json`. . The output is `TestFileA.root` before `TestFileB.root`. ### ROOT version. 6.28. ### How did you install ROOT? source. ### Which operating system are you using? MacOS 13. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13037
https://github.com/root-project/root/issues/13037:1298,testability,context,context,1298,"[DF] FromSpec: parsing of the JSON file is done according to the alphabetical ordering of the main keys ; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. During parsing of the JSON file, the main keys ""samples"", are parsed in an alphabetical order. . For example, while parsing the JSON file: . '{. ""samples"": {. ""B"": {. ""trees"": [""subTree""],. ""files"": [""TestFileB.root""]. },. ""A"": {. ""trees"": [""subTree""],. ""files"": [""TestFileA.root""]. }. }. }'. the sample's A:`TestFileA.root` file will be accessed first, even though sample's B file should be accessed first according to the nominal ordering. The alphabetical ordering can lead to problems while the RDataFrame of interest has friend trees as the friend trees need to be aligned with the main TChain. . ### What is the expected behaviour? The keys of the JSON file should be parsed according to the nominal ordering of the JSON file (non-alphabetical). . ### How to reproduce? [JSON_ordering_issue.zip](https://github.com/root-project/root/files/11769777/JSON_ordering_issue.zip). Run `fromspec_ordering.py` with `spec.json`. . The output is `TestFileA.root` before `TestFileB.root`. ### ROOT version. 6.28. ### How did you install ROOT? source. ### Which operating system are you using? MacOS 13. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13037
https://github.com/root-project/root/issues/13037:813,usability,behavi,behaviour,813,"[DF] FromSpec: parsing of the JSON file is done according to the alphabetical ordering of the main keys ; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. During parsing of the JSON file, the main keys ""samples"", are parsed in an alphabetical order. . For example, while parsing the JSON file: . '{. ""samples"": {. ""B"": {. ""trees"": [""subTree""],. ""files"": [""TestFileB.root""]. },. ""A"": {. ""trees"": [""subTree""],. ""files"": [""TestFileA.root""]. }. }. }'. the sample's A:`TestFileA.root` file will be accessed first, even though sample's B file should be accessed first according to the nominal ordering. The alphabetical ordering can lead to problems while the RDataFrame of interest has friend trees as the friend trees need to be aligned with the main TChain. . ### What is the expected behaviour? The keys of the JSON file should be parsed according to the nominal ordering of the JSON file (non-alphabetical). . ### How to reproduce? [JSON_ordering_issue.zip](https://github.com/root-project/root/files/11769777/JSON_ordering_issue.zip). Run `fromspec_ordering.py` with `spec.json`. . The output is `TestFileA.root` before `TestFileB.root`. ### ROOT version. 6.28. ### How did you install ROOT? source. ### Which operating system are you using? MacOS 13. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13037
https://github.com/root-project/root/pull/13038:23,availability,sla,slashes,23,Adding comment forward-slashes in docs; # This Pull request:. ## Changes or fixes:. Adds two forward slashes for comment of output in example docs for Take. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13038
https://github.com/root-project/root/pull/13038:101,availability,sla,slashes,101,Adding comment forward-slashes in docs; # This Pull request:. ## Changes or fixes:. Adds two forward slashes for comment of output in example docs for Take. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13038
https://github.com/root-project/root/pull/13038:208,deployability,updat,updated,208,Adding comment forward-slashes in docs; # This Pull request:. ## Changes or fixes:. Adds two forward slashes for comment of output in example docs for Take. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13038
https://github.com/root-project/root/pull/13038:23,reliability,sla,slashes,23,Adding comment forward-slashes in docs; # This Pull request:. ## Changes or fixes:. Adds two forward slashes for comment of output in example docs for Take. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13038
https://github.com/root-project/root/pull/13038:101,reliability,sla,slashes,101,Adding comment forward-slashes in docs; # This Pull request:. ## Changes or fixes:. Adds two forward slashes for comment of output in example docs for Take. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13038
https://github.com/root-project/root/pull/13038:178,safety,test,tested,178,Adding comment forward-slashes in docs; # This Pull request:. ## Changes or fixes:. Adds two forward slashes for comment of output in example docs for Take. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13038
https://github.com/root-project/root/pull/13038:208,safety,updat,updated,208,Adding comment forward-slashes in docs; # This Pull request:. ## Changes or fixes:. Adds two forward slashes for comment of output in example docs for Take. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13038
https://github.com/root-project/root/pull/13038:208,security,updat,updated,208,Adding comment forward-slashes in docs; # This Pull request:. ## Changes or fixes:. Adds two forward slashes for comment of output in example docs for Take. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13038
https://github.com/root-project/root/pull/13038:178,testability,test,tested,178,Adding comment forward-slashes in docs; # This Pull request:. ## Changes or fixes:. Adds two forward slashes for comment of output in example docs for Take. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/13038
https://github.com/root-project/root/issues/13039:0,availability,Error,Error,0,"Error in navigation with tessellated volumes; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. The presence of tessellated volumes in the TGeo geometry leads to erroneous node identification from coordinates. The tessellated volume is identified as the node containing the given point, which actually lies in another volume. Removing the tessellated volume the right one is correctly identified. This issue has originally been reported in the VGM project (see [here](https://github.com/vmc-project/vgm/issues/14#issuecomment-1589757201)) and identified by the VGM developer as a problem with Root navigation. . ### What is the expected behaviour? The volume including the origin should be found when searching for origin coordinates even with the tessellated tray in the geometry. ### How to reproduce? A full reproducer is available [here](https://basket.fi.infn.it/f/30bd4036d8/?dl=1). After decompressing the tarball, create the build folder for cmake and build as usual. Then transfer the tray.gdml and vis.mac macros in the build folder and launch the test executable. The test program consists of a GDML tray filled with cubic crystals, and will first show the geometry in an OpenGL canvas, then export the geometry to TGeo and find the volume in the origin (the geometry is also saved in a Root file for convenience). From very last line of the console output one can see that the volume at the origin is the tray, while it should be a cubic crystal. Indeed, commenting out lines 62-64 of main.cpp and running the geometry is now made only of cubes in the very same positions as before, and now TGeo correctly finds a crystal in the origin. ### ROOT version. 6.26/04. ### How did you install ROOT? Build from source. ### Which operating system are you using? Archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13039
https://github.com/root-project/root/issues/13039:855,availability,avail,available,855,"Error in navigation with tessellated volumes; ### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. The presence of tessellated volumes in the TGeo geometry leads to erroneous node identification from coordinates. The tessellated volume is identified as the node containing the given point, which actually lies in another volume. Removing the tessellated volume the right one is correctly identified. This issue has originally been reported in the VGM project (see [here](https://github.com/vmc-project/vgm/issues/14#issuecomment-1589757201)) and identified by the VGM developer as a problem with Root navigation. . ### What is the expected behaviour? The volume including the origin should be found when searching for origin coordinates even with the tessellated tray in the geometry. ### How to reproduce? A full reproducer is available [here](https://basket.fi.infn.it/f/30bd4036d8/?dl=1). After decompressing the tarball, create the build folder for cmake and build as usual. Then transfer the tray.gdml and vis.mac macros in the build folder and launch the test executable. The test program consists of a GDML tray filled with cubic crystals, and will first show the geometry in an OpenGL canvas, then export the geometry to TGeo and find the volume in the origin (the geometry is also saved in a Root file for convenience). From very last line of the console output one can see that the volume at the origin is the tray, while it should be a cubic crystal. Indeed, commenting out lines 62-64 of main.cpp and running the geometry is now made only of cubes in the very same positions as before, and now TGeo correctly finds a crystal in the origin. ### ROOT version. 6.26/04. ### How did you install ROOT? Build from source. ### Which operating system are you using? Archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/13039
